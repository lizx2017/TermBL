issueID:UIMA-1
type:Task
changed files:
texts:Reorganize SVN
The SVN directory structure needs to be reorganized to move the Website sources out from under the uimaj project.  On the dev list the consensus seems to be that we should have top level "site" and "uimaj" directories (leaving room to add "uimacpp", "sandbox", etc. later).  So the structure should look something like:site/  trunk/    uima-website/    xml sources and generated html files go here  uimaj/  trunk/    uima-docbooks/    documentation is here    uimaj-xxxx/  code is here
issueID:UIMA-10
type:Improvement
changed files:uimaj-core/src/main/java/org/apache/uima/jcas/impl/JCasImpl.java
uimaj-examples/src/main/java/org/apache/uima/tutorial/ex2/RoomNumberAnnotator.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/Sofa.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/impl/compatibility/AnnotatorAdapter.java
uimaj-tools/src/main/java/org/apache/uima/tools/jcasgen/JCasTypeTemplate.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/impl/JCasIteratorWrapper.java
uimaj-examples/src/main/java/org/apache/uima/tutorial/ex6/UimaMeetingAnnotator.java
uimaj-examples/src/main/java/org/apache/uima/tutorial/SentenceAnnot.java
uimaj-core/src/main/java/org/apache/uima/jcas/impl/JFSIndexRepositoryImpl.java
uimaj-core/src/main/java/org/apache/uima/cas/AbstractCas.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/EmptyFloatList.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/EmptyStringList.java
uimaj-core/src/main/java/org/apache/uima/flow/JCasFlowController_ImplBase.java
uimaj-examples/src/main/java/org/apache/uima/tutorial/Meeting.java
uimaj-examples/src/main/java/org/apache/uima/tutorial/ex3/TutorialDateTime.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/AnalysisEngine.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/BooleanArray.java
uimaj-examples/src/main/java/org/apache/uima/examples/XmlDetagger.java
uimaj-examples/src/main/java/org/apache/uima/examples/xmi/XmiCollectionReader.java
uimaj-examples/src/main/java/org/apache/uima/examples/casMultiplier/SimpleTextSegmenter.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/annotator/JTextAnnotator.java
uimaj-examples/src/main/java/org/apache/uima/tutorial/RoomNumber.java
uimaj-examples/src/main/java/org/apache/uima/examples/xmi/XmiWriterCasConsumer.java
uimaj-examples/src/main/java/org/apache/uima/tutorial/TimeAnnot.java
uimaj-examples/src/main/java/org/apache/uima/examples/tokenizer/Sentence.java
uimaj-examples/src/main/java/org/apache/uima/examples/xmi/XmiEcoreCasConsumer.java
uimaj-examples/src/main/java/org/apache/uima/tutorial/DateAnnot.java
uimaj-examples/src/main/java/example/PersonTitle.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/ByteArray.java
uimaj-examples/src/main/java/org/apache/uima/examples/casMultiplier/SimpleTextMerger.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/FloatArray.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/StringArray.java
uimaj-document-annotation/src/main/java/org/apache/uima/jcas/tcas/DocumentAnnotation.java
uimaj-core/src/main/java/org/apache/uima/jcas/tcas/Annotation.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/StringList.java
uimaj-examples/src/main/java/org/apache/uima/examples/SourceDocumentInformation.java
uimaj-examples/src/main/java/org/apache/uima/examples/cpe/PersonTitleDBWriterCasConsumer.java
uimaj-examples/src/main/java/org/apache/uima/tutorial/DateTimeAnnot.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/AnnotationBase_Type.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/NonEmptyStringList.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/ShortArray.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/FSArray.java
uimaj-tools/src/main/java/org/apache/uima/tools/viewer/CasAnnotationViewer.java
uimaj-core/src/main/java/org/apache/uima/resource/impl/CasManager_impl.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/NonEmptyFSList.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/impl/PrimitiveAnalysisEngine_impl.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/impl/AnalysisEngineImplBase.java
uimaj-core/src/main/java/org/apache/uima/jcas/JCas.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/CommonPrimitiveArray.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/impl/compatibility/CollectionReaderAdapter.java
uimaj-core/src/main/java/org/apache/uima/analysis_component/JCasAnnotator_ImplBase.java
uimaj-examples/src/main/java/org/apache/uima/tutorial/ex1/RoomNumberAnnotator.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/JCasIterator.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/NonEmptyIntegerList.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/FloatList.java
uimaj-examples/src/main/java/org/apache/uima/examples/tokenizer/SimpleTokenAndSentenceAnnotator.java
uimaj-core/src/main/java/org/apache/uima/jcas/tcas/Annotation_Type.java
uimaj-examples/src/main/java/org/apache/uima/tutorial/UimaAcronym.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/impl/UimacppAnalysisEngineImpl.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/FSList.java
uimaj-core/src/main/java/org/apache/uima/jcas/JCasRegistry.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/LongArray.java
uimaj-examples/src/main/java/org/apache/uima/examples/cpe/AnnotationPrinter.java
uimaj-examples/src/main/java/org/apache/uima/tutorial/ex5/RoomNumberAnnotator.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/CASImpl.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/EmptyIntegerList.java
uimaj-core/src/main/java/org/apache/uima/analysis_component/JCasMultiplier_ImplBase.java
uimaj-examples/src/main/java/org/apache/uima/tutorial/ex6/UimaAcronymAnnotator.java
uimaj-examples/src/main/java/org/apache/uima/tutorial/WordAnnot.java
uimaj-examples/src/main/java/org/apache/uima/tutorial/ex4/MeetingAnnotator.java
uimaj-tools/src/main/javajet/jcasgen/includedTemplates/AnnotationMethods.javajet
uimaj-core/src/main/java/org/apache/uima/jcas/cas/IntegerArray.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/IntegerList.java
uimaj-examples/src/main/java/org/apache/uima/examples/cpe/InlineXmlCasConsumer.java
uimaj-examples/src/main/java/org/apache/uima/examples/cpe/XCasWriterCasConsumer.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/EmptyFSList.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/TOP.java
uimaj-core/src/main/java/org/apache/uima/cas/CAS.java
uimaj-core/src/main/java/org/apache/uima/flow/JCasFlow_ImplBase.java
uimaj-examples/src/main/java/org/apache/uima/examples/tokenizer/Token.java
uimaj-examples/src/main/java/org/apache/uima/examples/cpe/FileSystemCollectionReader.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/NonEmptyFloatList.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/DoubleArray.java
uimaj-tools/src/main/javajet/jcasgen/templates/JCasType.javajet
uimaj-examples/src/main/java/org/apache/uima/tutorial/UimaMeeting.java
uimaj-core/src/main/java/org/apache/uima/util/JCasPool.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/impl/compatibility/CasConsumerAdapter.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/AnnotationBase.java
texts:Split JCas into interface and implementation
We should split the existing JCAS class into an interface org.apache.uima.jcas.JCas and its implementation org.apache.uima.jcas.impl.JCasImpl.  This follows good design practices and also is consistent with the rest of uimaj-core.  It is important to do this prior to our first release since it will be a non-compatible change for user code.
issueID:UIMA-100
type:Bug
changed files:uimaj-core/src/main/java/org/apache/uima/analysis_engine/asb/impl/FlowControllerContainer.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/asb/impl/FlowControllerContainer.java
texts:Flow Controller logger is not given the correct name
When the Flow Controller calls getContext().getLogger() it is given a Logger that doesn't have the same name as the flow controller class.  Because of this it cannot be configured in the Logger.propeties file.
issueID:UIMA-1000
type:Bug
changed files:
texts:Sample code missing from binary package
RunRemoteAsyncAE.java
issueID:UIMA-1001
type:Bug
changed files:
texts:[DDE] In Linux, the border of some controls used in Form are not visible
In Linux, the border of some controls used in Form is not visible.Need to add SWT.BORDER style to the control (which is not necessary in Windows)
issueID:UIMA-1002
type:Bug
changed files:
texts:Problem scaling out CAS multipliers
In order to avoid over filling request queues, all components in UIMA-AS that can generate new CASes to put into play are limited to a user definable value. CAS multipliers are limited by the size of their private casPool; when that is used up they must wait for CASes to be freed before creating new ones.Similarly, a remote CAS multiplier can generate and return as many new CASes as are defined for it's local CM casPool. At that point, it must wait for "free CAS" messages coming from it's client before sending more. Each remote CM uses a "free CAS queue" to receive these messages.Currently, all instances of a remote CM use the same free CAS queue. This must be changed so that every remote CM defines a unique free CAS queue.
issueID:UIMA-1003
type:Bug
changed files:
texts:update PearPackagingMavenPlugin dependency scope

issueID:UIMA-1004
type:Bug
changed files:
texts:update SimpleServer try out form

issueID:UIMA-1005
type:Improvement
changed files:
texts:create ant build for XMLBeans class generation

issueID:UIMA-1006
type:Improvement
changed files:
texts:UIMA-AS remove dependency of uima-as-docbook on uima-docbook
Current uima-as docbook depends on uima-docbook for its definition of entities.  Remove this dependency by copying the entities into uima-as-docbook, and changing the references to that.  Also - remove unused dependency on "sister-project" for uima-as-docbook - the sister project being uima-docbook  (because it isn't used).  This change allows the build/assembly operation of uima-as to not require uima-docbook.
issueID:UIMA-1007
type:Improvement
changed files:
texts:uima-as remove uimacpp-as project - no longer in use
This project's files were moved to other projects.
issueID:UIMA-1008
type:Improvement
changed files:
texts:UIMA-AS binary assembly incorrectly including part of distr readmes for source assemblies
In particular, it has the tree src/main/readme-src which includes scripts to add source to jars, which a user tried to run (unsuccessfully - because it's in the wrong context).  Remove this from the binary distribution.
issueID:UIMA-1009
type:Improvement
changed files:
texts:UIMA-AS Add ExtractAndBuild scripts

issueID:UIMA-101
type:Bug
changed files:uimaj-tools/src/main/java/org/apache/uima/tools/pear/install/InstallPear.java
uimaj-tools/src/main/java/org/apache/uima/tools/pear/install/InstallPear.java
uimaj-tools/src/main/java/org/apache/uima/tools/pear/install/InstallPear.java
uimaj-tools/src/main/java/org/apache/uima/tools/pear/install/InstallPear.java
uimaj-tools/src/main/java/org/apache/uima/tools/pear/install/InstallPear.java
uimaj-tools/src/main/java/org/apache/uima/tools/pear/install/InstallPear.java
texts:PEAR Installer prints warning messages on startup
When I start the PEAR installer I get the following messages:C:/Program Files/apache-uima/lib/uima_tools.jar not foundC:/Program Files/apache-uima/docs/pear/piHelp.html not foundThe former needs to be uima-tools.jar, but is this even needed at all?  It was used to find CVD, but CVD is now in the same jar as pear installer.As for the latter, did we lose the help file?
issueID:UIMA-1010
type:Improvement
changed files:
texts:uima-as release process not capturing a known level of core uima
The current uima-as release process does not tag a level of the core uima used to supply its lib/jars; it uses whatever is in the builder's local  maven repository, which may be in some unknown state.  Attaching the right source to these jars is difficult, if not impossible (impossible if there were local uncommitted changes in the builder's system, that were used to build the local repo, but never checked in.)The release process needs to tag the version of core uima that uima-as is based on, and extract that and build it before building uima-as.The source distribution for uima-as should include a pointer to the tag in svn (the source distr for core uima is large mainly due to documentation, doc tooling, and tests).
issueID:UIMA-1011
type:Bug
changed files:
texts:[DDE] When switching backward and forward between C++ and Java top-AE, Custom Settings are not properly handled
Replicate the bug: Open a DD for C++. The Custom check-box button is enable. Check this Custom button In the Overview page, replace the top AE with a Java AE Bug: The Custom check-box button is still "enable" and "selected". All the custom settings  for C++ are still there which are supposed to be disable and removed
issueID:UIMA-1012
type:Bug
changed files:
texts:addSourceToJars.[bat/sh] is not executable in distribution
Reported by Frédéric Meunier in https://issues.apache.org/jira/browse/UIMA-747.
issueID:UIMA-1013
type:Improvement
changed files:
texts:add Getting Started Guide: Writing my first UIMA annotator

issueID:UIMA-1014
type:Improvement
changed files:
texts:uima-as: investigate/fix line-endings and executable flags for scripts
Some of the scripts have svn:executable=* set in SVN.  This makes the file executable when checked out of SVN by a Linux client system.  However, it has no effect when the build is done - the assembly script must indicate this setting, where needed.Some of the scripts do not have the svn:eol-style set.
issueID:UIMA-1015
type:Improvement
changed files:uimaj-examples/src/main/java/org/apache/uima/examples/RunAE.java
uimaj-tools/src/main/java/org/apache/uima/tools/RunAE.java
texts:Example using deprecated method
setDescriptor(String) method on CpeCasProcessor is deprecated.  Yet it is used in the RunAE example, as well as many other places.   User reported being mislead into using this by the example.
issueID:UIMA-1016
type:Improvement
changed files:
texts:allow URLs as dictionary files

issueID:UIMA-1017
type:New Feature
changed files:
texts:Client API does not support the CAS multiplier interface
The client API does not work with CM services. Must generate freeCas replies to each new CAS received from the remote CM.
issueID:UIMA-1018
type:Bug
changed files:
texts:Disable Timers on Connections to Reply Queues
Modify the OutputChannel code of the UIMA-AS service to disable Timers on connections to Reply Queues. Currently, the code starts a timer every time a reply is sent to a reply queue. This causes problems in deployments that use long running analytics.
issueID:UIMA-1019
type:Bug
changed files:
texts:A UIMA Aggregate Cas Multiplier cannot be deployed as an AS Aggregate service
A UIMA Aggregate Cas Multiplier currently can only be deployed as an AS primitive service. There are several problems when deployed as an ASaggregate.1. the freeCas queue is not connected to a message handler2. the freeCas message handler ignores the Cas ID when releasing the Cas3. improper handling of new CASes in the inProcessCache 4. dd2spring incorrectly expects a CM pool to be defined at the aggregate level5. new CAS reply messages from secondary CM delegates have the wrong parent Cas ID
issueID:UIMA-102
type:Bug
changed files:
texts:Incubator icon on web page should link to incubator site, not UIMA site

issueID:UIMA-1020
type:Bug
changed files:
texts:UimacppServiceController incorrectly incorrectly handling logging level and prefetch size parameters
Logging level INFO is not recognized and passed to the C++ service. The prefetch size parameter is not passed to the C++ service.
issueID:UIMA-1021
type:New Feature
changed files:
texts:implement OpenCalais service wrapper annotator

issueID:UIMA-1022
type:Bug
changed files:
texts:Sometimes hangs at initialization when trying to connect to a remote service
When a remote broker is in a bad state we get stuck in a Spring loop trying to connect.First we get a 1 min hang followed by:4/30/08 2:34:46 PM - 12: org.apache.activemq.ActiveMQConnection.onAsyncException: WARNING: Async exception with no exception listener: org.apache.activemq.transport.InactivityIOException: Channel was inactive for too long.then later exceptions every 1 min of the form:4/30/08 2:35:46 PM - 27: org.apache.uima.adapter.jms.activemq.UimaDefaultMessageListenerContainer.onException: WARNING: Jms Listener Failed. Endpoint:  Managed By: tcp://coral5.cs.columbia.edu:61616 Reason: org.apache.activemq.ConnectionFailedException: The JMS connection has failed: Channel was inactive for too long.4/30/08 2:35:46 PM - 27: org.springframework.jms.listener.DefaultMessageListenerContainer.handleListenerSetupFailure: SEVERE: Setup of JMS message listener invoker failed - trying to recover4/30/08 2:36:46 PM - 27: org.springframework.jms.listener.DefaultMessageListenerContainer.refreshConnectionUntilSuccessful: INFO: Successfully refreshed JMS Connection4/30/08 2:36:46 PM - 28: org.apache.activemq.ActiveMQConnection.onAsyncException: WARNING: Async exception with no exception listener: org.apache.activemq.transport.InactivityIOException: Channel was inactive for too long.The columbia address in pingable.
issueID:UIMA-1023
type:New Feature
changed files:
texts:adding UIMA release version 2.2.2-incubating to website

issueID:UIMA-1024
type:Bug
changed files:uimaj-core/src/main/java/org/apache/uima/impl/UIMAFramework_impl.java
texts:change version number from 2.2.2-incubating to 2.3-incubating-SNAPSHOT

issueID:UIMA-1025
type:Bug
changed files:
texts:eclipse update site for uima 2.2.2 fixes
change build scripts for doing the eclipse update site: to reflect they are now run after the release vote, not as part of maven to build from particular releases in the local maven repo to not unpack the jars when installing (per normal Eclipse conventions) move the build scripts for this to the eclipse update site project make the site.xml correct for the 2.2.2 base release without the uima-as plugins (not released yet)
issueID:UIMA-1026
type:Bug
changed files:
texts:UIMA-As ThresholdWindow not implemented correctly
Current implementation of the thresholdWindow in the error handling doesnt support rolling window.
issueID:UIMA-1027
type:Bug
changed files:uimaj-tools/src/main/java/org/apache/uima/tools/components/FileSystemCollectionReader.java
texts:Classes from uima-document-annotator.jar are not in Eclipse plugin
Eclipse plugin org.apache.uima.runtime previously contained jars inside a plugin. Version 2.2.2 has jars unzipped. But contents of uima-document-annotator.jar were not added to 2.2.2 plugin.I've previously submitted a report (UIMA-400) about the same jar which was not added to 2.1.0 plugin by mistake, and it was fixed in 2.2.0, and now broken again in 2.2.2.In addition, there's a circular dependency for the package org.apache.uima.jcas.tcas, i.e. the same package is exported and imported in manifest. Probably, it's caused by the same missing classes from that jar.
issueID:UIMA-1028
type:Improvement
changed files:
texts:UIMA-AS Doc updates from proofreading

issueID:UIMA-1029
type:Bug
changed files:
texts:udpate CasEditor build for release 2.2.2
update package names change the way how the runtime plugin is located in the build
issueID:UIMA-103
type:Task
changed files:
texts:Add license headers to batch files and shell scripts

issueID:UIMA-1030
type:Bug
changed files:
texts:Remove two unused interfaces:  org.apache.uima.adapter.jms.client.UIMAAsynchronousEngine
These are unused:uimaj-as-activemq\src\main\java\org\apache\uima\adapter\jms\client\UIMAAsynchronousEngine.javauimaj-as-jms\src\main\java\org\apache\uima\adapter\jms\client\UIMAAsynchronousEngine.javaThe real one is: uimaj-as-core\src\main\java\org\apache\uima\aae\client\UimaAsynchronousEngine.java
issueID:UIMA-1031
type:Bug
changed files:
texts:RunRemoteAsyncAE specifies CAS pool size but ignores argument
The CAS pool size limits the number of outstanding requests, but this argument is being ignored by the application. Also, there should be an argument to specify the initial CAS size in the pool.
issueID:UIMA-1032
type:Bug
changed files:
texts:When aggregate has 2 CasMultipliers the input CAS is sometimes not returned, causing a hang
Problem in recursion in org.apache.uima.aae.controller.AggregateAnalysisEngineController_impl.finalStep .... getForceCasToBeDropped() value of child is falsely propagated to parents and is wrongly applied to input CAS.  Since aggregate CMs are not yet supported fix is simple.  Later will probably need to fix recursion to return children before parents.
issueID:UIMA-1033
type:New Feature
changed files:
texts:ConceptMapper--a highly configurable, token-based dictionary lookup UIMA component
ConceptMapper is a token-based dictionary lookup UIMA component. It wasdesigned specifically to allow any external tokenizer that is a UIMAcomponent to be used to tokenize its dictionary. Using the same tokenizeron both the dictionary and for subsequent text processing preventssituations where a particular dictionary entry is not found, though itexists, because it was tokenized differently than the text being processed.ConceptMapper is highly configurable, in terms of: the way dictionary entries are mapped to resultant annotations the way input documents are processed the availability of multiple lookup strategies its various output options.Additionally, a set of post-processing filters are supplied, as well as aninterface to easily create new filters. This allows for overgeneratingresults during the lookup phase, if so desired, then reducing the resultset according to particular rules.More details:The structure of the dictionary itself is quite flexible. Entries can haveany number of variants (synonyms), and arbitrary features can be associatedwith dictionary entries. Individual variants inherit features from parenttoken (i.e., the canonical from), but can override them or add additionalfeatures. In the following sample dictionary entry, there are 5 variants ofthe canonical form, and as described earlier, each inherits the SemClassand POS attributes from the canonical form, with the exception of thevariant "mesenteric fibromatosis (c48.1)", which overrides the value of theSemClass attribute (this is somewhat of a contrived example, just to makethat point):<token canonical="abdominal fibromatosis" SemClass="Diagnosis" POS="NN">   <variant base="abdominal fibromatosis" />   <variant base="abdominal desmoid" />   <variant base="mesenteric fibromatosis (c48.1)"SemClass="Diagnosis-Site" />   <variant base="mesenteric fibromatosis" />   <variant base="retroperitoneal fibromatosis" /></token>Input tokens are processed one span at a time, where both the token andspan (usually a sentence) annotation type are configurable. Additionally,the particular feature of the token annotation to use for lookups can bespecified, otherwise its covered text is used. Other input configurationsettings are whether to use case sensitive matching, an optional class nameof a stemmer to apply to the tokens, and a list of stop words to to ignoreduring lookup. One additional input control mechanism is the ability toskip tokens during lookups based on particular feature values. In this way,it is easy to skip, for example, all tokens with particular part of speechtags, or with some previously computed semantic class.Output is in the form of new annotations, and the type of resultingannotations can be specified in a descriptor file. The mapping fromdictionary entry attributes to the result annotation features can also bespecified. Additionally, a string containing the matched text, a list ofmatched tokens, and the span enclosing the match can be specified to be setin the result annotations. It is also possible to indicate dictionaryattributes to write back into each of the matched tokens.Dictionary lookup is controlled by three parameters in the descriptor, oneof which allows for order-independent lookup (i.e., A B == B A), anothertogles between finding only the longest match vs. finding all possiblematches. The final parameter specifies the search strategy, of which thereare three. The default search strategy only considers contiguous tokens(not including tokens frm the stop word list or otherwise skipped tokens),and then begins the subsequent search after the longest match. The secondstrategy allows for ignoring non-matching tokens, allowing for disjointmatches, so that a dictionary entry of    A Cwould match against the text    A B CAs with the default search strategy, the subsequent search begins after thelongest match. The final search strategy is identical to the previous,except that subsequent searches begin one token ahead, instead of after theprevious match. This enables overlapped matching.
issueID:UIMA-1034
type:Bug
changed files:
texts:[DDE] Dirty flag is not set when environment parameters are edited
User has reported that, when environment parameters are edited, the "save" command is not enable.Bug: When environment parameters are edited, the dirty flag is not set (that is why "save" is not enable).Work-around: Until the fix is released, user can make the "save" enable by editing fields other than the environment parameters.
issueID:UIMA-1036
type:Bug
changed files:uimaj-tools/src/main/java/org/apache/uima/tools/RunAE.java
texts:runAE help message needs to document available options for language and encoding
When processing text input files, runAE provides a -l option to specify the ISO language code to set, as well as a -e option to specify the character encoding to use. Both are missing from the program self help text.
issueID:UIMA-1037
type:Bug
changed files:
texts:buildsdk.sh on Mac OSX creates bad symbolic link libuima.jnilib
The symbolic link in the script should be:ln -s libuima.dylib libuima.jnilib
issueID:UIMA-1038
type:Bug
changed files:
texts:setUimaClasspath.sh should export library paths for interoperability with UIMA C++
The current script only works if LD_LIBRARY_PATH (or DYLD_LIBRARY_PATH on Mac) has previously been exported in the current environment.This issue applies to both core framework and uima-as versions of the script.
issueID:UIMA-1039
type:Bug
changed files:
texts:Fix use of non thread safe calls service wrapper  Update property names in reply message to be compatible with Java.
Call to uimacpp logger is not thread safe.  Rename property TimeInAnalytic to TimeInProcessCas in reply messageAdd support for time to send reply messaage to the JMX statistics maintained by the wrapper.
issueID:UIMA-104
type:Improvement
changed files:uimaj-core/src/main/java/org/apache/uima/pear/tools/PackageInstaller.java
uimaj-core/src/main/java/org/apache/uima/pear/tools/PackageInstaller.java
texts:PackageInstaller and PackageInstallerException need class javadoc comments
This is particularly important since we expect PackageInstaller to be the most often used class in the pear.tools package, so it needs a comment that makes it stand out to a user who is scanning the javadoc trying to figure out how to install a PEAR file.I suggest the first sentence be something like "The main user API for installing pear packages." (errr, the first sentence fragment, I guess I should have said
issueID:UIMA-1040
type:Bug
changed files:
texts:Modify dd2spring to handle UIMA-AS Aggregate Cas Multipliers
dd2spring determines if a component is a Cas Multiplier by checking the component's descriptor outputsNewCASes property. If the component is a CM, the dd2spring generates spring xml artifacts to create a special cas pool to be used to create new CASes. For a Primitive CM, this is necessary. As the Primitive CM actually creates new CASes from an input CAS it needs the special cas pool. If the CM is an Aggregate, this special cas pool is not necessary. The aggregate CM outputs new CASes, but it doesnt create them. It uses a shadow CAS Pool (one per remote CM delegate) to deserialize CASes instead. The current dd2spring code generates a warning when parsing a deployment descriptor containing an aggregate CM:         WARN: line-number: 34 deployment descriptor for analysisEngine: <key>Queue is for a CAS Multiplier (or Collection Reader wrapped as a CAS Multiplier).  However, the <casMultiplier> element is missing. Defaulting to a poolSize of 1 for this case.
issueID:UIMA-1041
type:Bug
changed files:
texts:UIMACPP Pythonator issues with annotation offsets and lengths - off by 1 errors
The sample python script when run in the document analyzer shows annotations where the highlight is always missing the last character, and the details show the offsets for the begin and end to be both one to low.To reproduce, run the sample script in the python directory of the scriptators (after doing a build /install of the pythonator following the directions in the python directory in python.html).
issueID:UIMA-1042
type:Bug
changed files:
texts:setUimaClassPath should not override an existing setting for UIMACPP_HOME
Scripts should not assume uimacpp is installed under UIMA_HOMECauses trouble when testing a local uimacpp build from java.
issueID:UIMA-1044
type:Improvement
changed files:
texts:CDE JCasGen adding generated sources to non-Java source folder
In an Eclipse project set up following the maven conventions for groovy (and other languages), there are folders src/main/java and src/main/groovy (or other) that are both on Eclipse's sources build path.The CDE / JCasGen code should put the generated classes into the src/main/java part (currently - it's putting these into the groovy part - workaround is to manually move them after running jcasgen).
issueID:UIMA-1045
type:Bug
changed files:uimaj-tools/src/main/java/org/apache/uima/tools/cvd/MainFrame.java
uimaj-tools/src/main/java/org/apache/uima/tools/cvd/MainFrame.java
uimaj-tools/src/main/java/org/apache/uima/tools/cvd/RecentFilesList.java
texts:"Recently used" file lists in CVD do not work correctly
The "recently used" lists in CVD don't work correctly.  Sometimes, new files are not added.  Also, it would be useful to have a hover with the full path of the file on the menu.
issueID:UIMA-1046
type:New Feature
changed files:uimaj-tools/src/main/java/org/apache/uima/tools/cvd/CVD.java
uimaj-tools/src/main/java/org/apache/uima/tools/cvd/MainFrame.java
texts:CVD should support an ini file parameter on the command line
If you use CVD for many different projects, it may be inconvenient to use the same ini file for all of them.  It would be nice if CVD could optionally take an ini file as startup parameter so you can have specialized ini files for certain projects.
issueID:UIMA-1047
type:New Feature
changed files:
texts:New Sandbox version of OpenCalais annotator - written in Groovy
This version is currently set up as a tester - it doesn't use (yet) the actual OpenCalais service, but instead uses a special collection reader designed to read a test set of about 333 examples, available for download (see the Readme).
issueID:UIMA-1048
type:Improvement
changed files:uimaj-tools/src/main/java/org/apache/uima/tools/cvd/AnnotationDisplayCustomizationFrame.java
uimaj-tools/src/main/java/org/apache/uima/tools/cvd/FSNode.java
uimaj-tools/src/main/java/org/apache/uima/tools/cvd/FSTreeModel.java
uimaj-tools/src/main/java/org/apache/uima/tools/cvd/FSTreeNode.java
uimaj-tools/src/main/java/org/apache/uima/tools/cvd/MainFrame.java
uimaj-tools/src/main/java/org/apache/uima/tools/cvd/MultiMarkup.java
uimaj-tools/src/main/java/org/apache/uima/tools/cvd/control/SetLogConfigHandler.java
uimaj-tools/src/main/java/org/apache/uima/tools/cvd/control/XmiCasFileOpenHandler.java
uimaj-tools/src/main/java/org/apache/uima/tools/cvd/control/XmiCasSaveHandler.java
uimaj-tools/src/main/java/org/apache/uima/tools/cvd/tsview/FeatureTableModel.java
uimaj-tools/src/main/java/org/apache/uima/tools/cvd/tsview/MainFrame.java
texts:Eliminate compiler warings in CVD
Various warnings, mostly relating to non-use of type parameters.
issueID:UIMA-1049
type:Bug
changed files:
texts:Uimacpp logging facility is not thread safe
Multiple instances of a C++ annotator may be run when the C++ annotator is run within a CPM with multiple parallel pipelines or when the C++ annotator is deployed as a UIMA AS service configured to start multiple instances.  In both cases, when the JNI interface to logging is used, the call to the logging facility  results in the exception,Exception in thread "pool-1-thread-2" and the log message is not written.  The problem does not appear when the C++ service is run in the natively using the ActiveMQ C++ serivce wrapper since the wrapper implements its own synchronization for logging.
issueID:UIMA-105
type:Bug
changed files:uimaj-core/src/main/java/org/apache/uima/resource/metadata/impl/FsIndexCollection_impl.java
uimaj-core/src/main/java/org/apache/uima/resource/metadata/impl/ResourceManagerConfiguration_impl.java
uimaj-core/src/main/java/org/apache/uima/resource/metadata/impl/TypePriorities_impl.java
uimaj-core/src/main/java/org/apache/uima/resource/metadata/impl/TypeSystemDescription_impl.java
uimaj-core/src/main/java/org/apache/uima/resource/metadata/impl/FsIndexCollection_impl.java
uimaj-core/src/main/java/org/apache/uima/resource/metadata/impl/ResourceManagerConfiguration_impl.java
uimaj-core/src/main/java/org/apache/uima/resource/metadata/impl/TypePriorities_impl.java
uimaj-core/src/main/java/org/apache/uima/resource/metadata/impl/TypeSystemDescription_impl.java
texts:Circular Imports Leave Duplicates
Circular imports (of Type Systems and other importable parts, but not AEs) leave duplicates.  An infinite loop is prevented but there will be twocopies of each type (or index, or type priority list).  This doesn't break CAS creation, but could cause it to take longer and could confuse users who interactdirectly with the TypeSystemDescription, TypePriorities, or FsIndexCollection APIs.
issueID:UIMA-1050
type:Bug
changed files:
texts:Aggregate always terminates if a delegate&#39;s broker is missing
The getMeta error actions (retry & disable or terminate) should be taken if the aggregate cannot connect to a delegate's broker.
issueID:UIMA-1051
type:Bug
changed files:
texts:doc build not working on Linux
The document build on Linux for UIMA-AS (and  for base UIMA too) fails to properly make the olink (cross document reference database system) work, because of differing file naming conventions between linux and windows.The document build also fails to handle the font selection - that code was built just for Windows.
issueID:UIMA-1052
type:Improvement
changed files:
texts:add documentation links to sandbox component descriptions

issueID:UIMA-1053
type:Improvement
changed files:
texts:Documentation update: automatically add dependencies in maven build
Added a section to the docbook file telling how to configure Maven to automatically resolve dependencies into the final PEAR file. Also suggest that it is a good default to use ${artifactId} for the main component descriptor and component id.
issueID:UIMA-1054
type:Improvement
changed files:
texts:Correct some version dependency levels in uima-as build / poms
Scanning the dependency tree produced with mvn dependency:tree revealed some incorrect version dependency levels.   While these probably do not affect anything (unless the APIs changed with release levels in a way that would affect our code), it would be good to be consistent between the levels in the POM used for compiling and the levels included in the bin distribution.
issueID:UIMA-1055
type:Bug
changed files:
texts:Some  logging calls use the wrong resource bundle
Should use JmsConstants for UIMAJMS messages & UIMAEE_Constants for UIMAEE messages in these 4 cases:uimaj-as-activemq/src/main/java/org/apache/uima/adapter/jms/activemq/JmsOutputChannel.java: UIMAEE_Constants.JMS_LOG_RESOURCE_BUNDLE, "UIMAJMS_release_cas_req__FINE", uimaj-as-jms/src/main/java/org/apache/uima/adapter/jms/client/BaseUIMAAsynchronousEngineCommon_impl.java: UIMAEE_Constants.JMS_LOG_RESOURCE_BUNDLE, "UIMAJMS_meta_timeout_INFO", uimaj-as-activemq/src/main/java/org/apache/uima/adapter/jms/activemq/JmsOutputChannel.java:         JmsConstants.JMS_LOG_RESOURCE_BUNDLE, "UIMAEE_exception__WARNING",uimaj-as-activemq/src/main/java/org/apache/uima/adapter/jms/activemq/UimaDefaultMessageListenerContainer.java  JmsConstants.JMS_LOG_RESOURCE_BUNDLE, "UIMAEE_disabled_delegate_bad_broker__INFO",
issueID:UIMA-1056
type:Bug
changed files:
texts:Fix some of the UIMA-AS problems reported by FindBugs
FindBugs finds problems in the UIMA-AS code.
issueID:UIMA-1057
type:Bug
changed files:
texts:UIMA-AS Aggregate Tries To Dispose a CAS that Has Not Yet Been Fully Processed
The UIMA-AS Aggregate must check a flag on a CAS to see if it has been fully processed before releasing it. A CAS is fully processed iff it enters a finalStep and all of the child CASes produced from it are fully processed.
issueID:UIMA-1058
type:Bug
changed files:uimaj-core/src/main/java/org/apache/uima/cas/impl/FSClassRegistry.java
texts:synch issue in FSClassRegistry.generators
Findbugs  found wrong synch of generators field.  Figure out right thing to synch on.
issueID:UIMA-1059
type:Bug
changed files:
texts:dd2spring doesn&#39;t reject the prefetch attribute on the inputQueue for a remore delegate
prefetch is relevant only for the inputQueue when deploying a service ... not when specifying remote delegates.Currently dd2spring quietly ignores it when on a remote delegate's queue ... any chance it can report this as an error?
issueID:UIMA-106
type:Bug
changed files:
texts:Stack overflow in XCasSerializer and XmiCasSerializer
CASes with lots of bidirectional links can cause very deep recursion.  Workaround is to increase JVM stack size, but probably we should replace the serialization routine with a non-recursive version.
issueID:UIMA-1060
type:New Feature
changed files:
texts:UIMA-AS - do necessary work for 5D002 export certification
Update the Apache exports site with the right info; do email from ASF PMC member to notify US govt., update license with export notice
issueID:UIMA-1061
type:Improvement
changed files:
texts:UIMA-AS Docbook - wrong ref for olink database in html-single case
Docbooks can reference things in other docbooks.  This facility is supported using "databases" which contain, e.g., page numbers.  The docbook tools use an entity to find the database file - this entity for the html-single page case is erroneously pointing to the database for the pdf output.
issueID:UIMA-1062
type:Bug
changed files:
texts:UIMA-AS wrong key used in logging message
In the class org.apache.uima.adapter.jms.service.Dd2spring line 61 has the wrong key (key doesn't correspond to key in message bundle).
issueID:UIMA-1063
type:Bug
changed files:
texts:Incorrect  push/pop used in JNI code
PushLocalFrame/PopLocalFrame are incorrectly used when transferring CAS data from the native environment to Java. These cause the newly created Java arrays to be marked for GC, which can (and sometimes does!) take place before the native routine has returned the reference to the new array to Java.
issueID:UIMA-1064
type:Bug
changed files:
texts:Clarify uimacpp build environment and dependencies

issueID:UIMA-1065
type:New Feature
changed files:
texts:CFE - configurable feature extrator for UIMA annotation comparison, evaluation, testing, generation of machine learning features
CFE - configurable feature extrator for UIMA annotation comparison, evaluation of performance metrics such as precision/recall/f-score, regression testing, generation of machine learning features. It provides Feature Extraction Specification language (FESL), that specifies rules for feature extraction. The criteria for the extraction could be customized by multiple conditions written in FESL in normal disjunctive form. Extracted features can be output into a file or CAS. Extractor can be implemented as CAS consumer of TAE
issueID:UIMA-1066
type:Bug
changed files:
texts:Incorrect property name TimeInProcessCAS in reply message
TimeInProcessCAS has incorrect case.  Look up is case sensitive.
issueID:UIMA-1067
type:Improvement
changed files:uimaj-core/src/main/java/org/apache/uima/cas/impl/StringHeap.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/CASImpl.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/CASSerializer.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/StringHeapDeserializationHelper.java
texts:Remove char heap/ref heap in StringHeap of the CAS
The StringHeap class provides two ways to store strings: either as Java strings, or by copying characters onto a character heap.  The second option is only used for deserialization from a binary CAS.  However, even if not used, this capability means a very significant memory overhead.  To demonstrate this, I ran the following experiment.  As analysis engine, I used our sandbox POS tagger.  It sets just one string feature on each token.  As text, I used a 2.4MB input file (2x moby.txt).  To run this in IBM Java 1.5.0_7 (which happens to be the JVM I'm interested in) you need to specify -Xmx135M.  I checked 5MB increments.  The I patched the StringHeap implementation to work without the additional book keeping overhead and ran the experiment again.  I was then able to run with -Xmx115M.  This represents a very significant gain, particularly given the fact that I ran so little analysis (only tokens and sentences are produced, and only a single string-valued feature set).  The new code also ran a tiny bit faster, but not much.  One might see more improvement for analysis that is not as compute intensive as the Tagger.The challenge is to make sure that the serialization code still works after this change.
issueID:UIMA-1068
type:Improvement
changed files:uimaj-core/src/main/java/org/apache/uima/util/CasCreationUtils.java
uimaj-core/src/main/java/org/apache/uima/jcas/impl/JCasHashMap.java
uimaj-core/src/main/java/org/apache/uima/util/CasCreationUtils.java
uimaj-core/src/main/java/org/apache/uima/UIMAFramework.java
uimaj-core/src/main/java/org/apache/uima/cas/admin/CASFactory.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/CASImpl.java
uimaj-core/src/main/java/org/apache/uima/jcas/impl/JCasHashMap.java
uimaj-core/src/main/java/org/apache/uima/jcas/impl/JCasImpl.java
uimaj-core/src/main/java/org/apache/uima/util/CasCreationUtils.java
texts:Use of the JCas cache should be configurable
The JCas caches all CAS objects that are accessed through it.  This means that JCas objects that are no longer used can't be garbage collected.  If only part of the processing chain uses the JCas, or the caching is redundant for some other reason, this produces a severe memory overhead.I ran the same experiment I ran for UIMA-1067: doubled the size of Moby Dick and ran the POS tagger from the sandbox.  I used the improved version from UIMA-1067 as base case and simply commented out the line that adds JCas objects to the cache.  This reduced the required heap size from 115MB to 105MB.  It also improved the performance from around 10s for the base case to consistently under 9s for the version without any caching.  I looked at the tagger source code, and saw that it keeps its own list of tokens around.  So the savings are just the caching data structure.There may be cases where the JCas cache is a performance win, though I'd be curious to see the benchmarks.  So we should not just turn it off, but make it configurable.
issueID:UIMA-1069
type:Bug
changed files:
texts:Model file is not loaded correctly if tagger is deployed more than once in same AE
The model resource in the tagger is implemented such that it just returns the InputStream for the model file.  If the tagger is deployed more than once into the same AE, this leads to an IOException as both instances try to load their model from the same input stream.
issueID:UIMA-1070
type:Bug
changed files:
texts:Fix a hang in UIMA-AS caused by an invalid AE descriptor
When deploying an aggregate AS service with a collocated delegate the process hangs while trying to shutdown. The termination is caused by an invalid delegate descriptor that names an non-existant AE implementation.
issueID:UIMA-1071
type:Bug
changed files:
texts:http connector fails with some Java implementations
Using the http connector with AMQ 4.1.1 on some 64-bit JRE's results in an exception:Caused by: java.lang.RuntimeException: Could not access java.util.EnumSet.elementType field        at com.thoughtworks.xstream.core.util.Fields.find(Fields.java:18)        at com.thoughtworks.xstream.converters.enums.EnumSetConverter.<init>(EnumSetConverter.java:31)The problem is identified here: http://jira.codehaus.org/browse/XSTR-379and the fix is to use xstream-1.2.2.jar instead of the 1.1.2 version.
issueID:UIMA-1072
type:Bug
changed files:
texts:Remove call to Java logger at service initialization start
There could be a race condition and the Java logger is called before the UimacppServiceController is ready to handle these.
issueID:UIMA-1073
type:Bug
changed files:
texts:Modify UIMA-AS proxy code to make the collectionProcessingComplete a synchronous call
Current uima-as proxy code for CPC is asynchronous. The client using the proxy calls CPC and does not wait for reply from the service. The proxy must implement UimaASStatusCallbackListener interface and register self with the UIMA-AS client. The client will notify the proxy via a callback when the CPC reply comes back from the uima-as service. Synchronize the CPC code and force it to wait for the reply.
issueID:UIMA-1074
type:Bug
changed files:
texts:UIMA logging not working correctly with Linux 64-bit IBM JRE
UIMA logging works properly with jdk1.5.0_15 (AMD64) but fails withjava version "1.6.0"Java(TM) SE Runtime Environment (build pxa6460sr1-20080416_01(SR1))IBM J9 VM (build 2.4, J2RE 1.6.0 IBM J9 2.4 Linux amd64-64 jvmxa6460-20080415_18762 (JIT enabled, AOT enabled)J9VM - 20080415_018762_LHdSMrJIT  - r9_20080415_1520GC   - 20080415_AA)JCL  - 20080412_01
issueID:UIMA-1076
type:Bug
changed files:
texts:In DDE, CAS pool size setting is Not Applicable when Top AE is a primitive AE
In DDE, CAS pool size setting is Not Applicable (should be disable) when Top AE is a primitive AE
issueID:UIMA-1077
type:Improvement
changed files:
texts:Add information on creating A4 size PDF documentation to website

issueID:UIMA-1078
type:Bug
changed files:
texts:Pool size and heap size for CAS Multiplier should NOT be displayed (be disable) for Top Analysis Engine running as AS aggregate
In DDE 2nd page, if the aggregate CAS Mutiplier runs as an AS aggregate, the pool size and heap size for CAS Multiplier fields should NOT be displayed when "Top Analysis Engine" is selected. It means that the pool size and heap size for CAS Multiplier fields are only displayed when the delegate CAS Multiplier is selected.
issueID:UIMA-1079
type:Bug
changed files:
texts:uima-as-distr build examples includes C++ example deployment - should be in uimacpp build
Not fixing for 2.2.2AS.
issueID:UIMA-1081
type:Bug
changed files:
texts:Fix a hang in the common client caused by inconsistent synchronization
When using uima as client in multi-threading the client hangs after sending CPC.
issueID:UIMA-1083
type:New Feature
changed files:
texts:add Getting Started Guide: Working with PEARs
Add a new Getting Started Guide that explain how to work with PEARS. What are PEAR files How to generate PEARs How to install PEAR How to use installed PEARs
issueID:UIMA-1084
type:Bug
changed files:
texts:Uima AS JMX statistics are invalid
The Cas Multiplier and Remote Aggregate delegate JMX statistics are invalid.
issueID:UIMA-1085
type:Bug
changed files:
texts:Fix Sandbox NOTICE files
The sandbox notice files currently all look like this:<NOTICE>Apache UIMA sandbox &#8211; SimpleServer componentCopyright 2008 The Apache Software FoundationThis Apache UIMA software component includes code that was developed atThe Apache Software Foundation (http://www.apache.org/).This software is based on the UIMA Apache project (http://incubator.apache.org/uima).Licensed under the Apache License 2.0 (see http://incubator.apache.org/uima/license.html).</NOTICE>The second paragraph seems obviously redundant.  Not sure what the third one issupposed to convey.  From recent discussions on legal-discuss, we have thesimple rule the the NOTICE files should only contain required attributions.  Neitherthe second nor the third paragraph qualifies.  If I don't hear any disagreement, I'llfix this.
issueID:UIMA-1086
type:Bug
changed files:uimaj-tools/src/main/java/org/apache/uima/tools/cpm/CpmPanel.java
texts:CpmPanel displayProgress has bad logic
Tim Cawley reported a small bug in CpmPanel.displayProgress() - it assumes there is always a Progress.ENTITIES element. In the current code, with possibly the exception of user-written collection readers, this is always the case, but other code could be using other kinds of progress units.
issueID:UIMA-1087
type:Improvement
changed files:
texts:Embeddability: recover better from out-of-memory errors
I have heard reports that some embedders of UIMA run it in a separate process, because sometimes a large document or misbehaving annotator can use up all the java memory, resulting in an unrecoverable out-of-memory error that "crashes" the whole JVM.  Investigate / implement ways that the framework might be able to more gracefully recover from this kind of error, without crashing the JVM.    Please post ideas about how to do this as comments to this Jira.
issueID:UIMA-1091
type:Bug
changed files:
texts:ServicePerformanceMBean implementation in Uima AS does not return valid idle time from getIdleTime()
Current code updates idleTime only when a new CAS arrives for processing. JMX stats for idle time are not valid. The delta should be calculated every time getIdleTime() is called.
issueID:UIMA-1092
type:Task
changed files:
texts:Finish release preparation for 2.2.2-01 (hotfix 1)
Change version number, create readme...
issueID:UIMA-1093
type:Task
changed files:
texts:Update NOTICE, LICENSE files and About dialog
Add EPL license to the LICENSE file.Add eclipse notice to NOTICE file.Add the content of the NOTICE file to the About dialog.
issueID:UIMA-1094
type:Task
changed files:
texts:Remove junit dependency from binary distribution

issueID:UIMA-1095
type:New Feature
changed files:
texts:Implement a Tika Annotator

issueID:UIMA-1096
type:Bug
changed files:
texts:Incorrect metaData returned when deployed as a separate process
Comparing the getMeta reply from a service deployed as a separate C++ process with that from one deployed via JNI I see the following:1)A typePriority index key is changed:         <fsIndexKey> <typePriority/>  </fsIndexKey>becomes:         <fsIndexKey> <featureName> </featureName> <comparator>standard</comparator> </fsIndexKey>2) Invalid xml chars are not escaped, e.g.            <description> NAMED > NOMINAL > PRONOMINAL.</description>becomes            <description> NAMED > NOMINAL > PRONOMINAL.</description>3)The default of              <multipleReferencesAllowed>true</multipleReferencesAllowed>is inserted in many featureDescriptions4)These may be bugs in the JNI output:  both <typePriorities> and <operationalProperties> are only in the JNI reply.5)First 2 lines are missing the encoding & xmlns attributes:            <?xml version="1.0" encoding="UTF-8"?>            <analysisEngineMetaData xmlns="http://uima.apache.org/resourceSpecifier">
issueID:UIMA-1097
type:Bug
changed files:
texts:C++ service wrapper is losing messages that have timeout values set
UIMA-AS clients set JMS timeToLive on commands with non-zero timeout values. This enables the JMS system to automatically clean up commands that have timed out waiting for a service to receive and process them.The ActiveMQ C++ client appears to be computing expiration incorrectly, based on the local consumer clock. Commands to C++ services using the native C++ service wrapper may be lost unless the producer and consumer clocks are exactly in synch.The problem can be easily fixed by disabling expiration for the C++ client. Note that for AMQ v4.1.1 currently used with UIMA-AS, expiration is not enabled.
issueID:UIMA-1098
type:New Feature
changed files:
texts:Add create annotation keyboard shortcuts for each annotation type.
Add create annotation keyboard shortcuts for each annotation type. The keys should be chosen automatically.
issueID:UIMA-1099
type:Bug
changed files:
texts:The Cas Editor leaks memory with each opened file.
For each file which was openend in the Cas Editor a certain amount of memory is leaking.
issueID:UIMA-11
type:Improvement
changed files:uimaj-core/src/main/java/org/apache/uima/analysis_engine/impl/UimacppAnalysisEngineImpl.java
uimaj-core/src/main/java/org/apache/uima/impl/AnalysisEngineFactory_impl.java
uimaj-core/src/main/java/org/apache/uima/impl/CasConsumerFactory_impl.java
uimaj-core/src/main/java/org/apache/uima/uimacpp/CppUimajEngine.java
uimaj-core/src/main/java/org/apache/uima/uimacpp/UimacppAnalysisComponent.java
uimaj-core/src/main/java/org/apache/uima/uimacpp/UimacppEngine.java
uimaj-core/src/main/java/org/apache/uima/uimacpp/UimacppException.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/impl/UimacppAnalysisEngineImpl.java
uimaj-core/src/main/java/org/apache/uima/impl/CasConsumerFactory_impl.java
uimaj-core/src/main/java/org/apache/uima/uimacpp/CppUimajEngine.java
uimaj-core/src/main/java/org/apache/uima/uimacpp/UimacppEngine.java
uimaj-core/src/main/java/org/apache/uima/uimacpp/UimacppException.java
uimaj-core/src/main/java/org/apache/uima/uimacpp/UimacppAnalysisComponent.java
texts:org.apache.itu package should be renamed
This name doesn't make much sense.  Even I don't know what itu stands for.  We should rename the package and also rename classes in this package, which have names including "JEDII" and "Taf".  I think this should all be done before our first release.
issueID:UIMA-110
type:Improvement
changed files:uimaj-core/src/main/java/org/apache/uima/cas/CAS.java
uimaj-core/src/main/java/org/apache/uima/cas/CASRuntimeException.java
uimaj-core/src/main/java/org/apache/uima/cas/FSIndexRepository.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FSIndexRepositoryImpl.java
texts:TCAS.getAnnotationIndex(Type type) should throw exception if type is not a subtype of annotation.
(Originally reported in CMVC defect 4213)
issueID:UIMA-1100
type:Bug
changed files:
texts:Token annotation rendering style does not work.
The Token annotation rendering style does not work correctly.
issueID:UIMA-1101
type:Task
changed files:
texts:Make our public KEYS available for auto-checkers run by Apache infrastructure
The KEYS file is used by an automated process to verify proper signing of all artifacts put in Maven repositories - see http://people.apache.org/~henkp/repo/faq.html. That FAQ says about the keys:The checker looks for keys in the KEYS file in the maven repo and www.apache.org/dist/ If you key is missing, you should add your public pgp key to an appropriate KEYS file. Also, make your public pgp key available in file .pgpkey in your home directory /home/your-username/      on people.apache.org ; make sure the checker can read it : chmod +r .pgpkey Look at /home/henkp/.pgpkey for an example. Never, never store your private pgp key on people.apache.orgThe KEYS files seems (on inspection) rarely put into the Maven repository - so I think we should skip that part.  The file that most likely really needs updating is the one or www.apache.org/dist - it's missing the recent upates that were done in our SVN keys file.
issueID:UIMA-1102
type:New Feature
changed files:
texts:CAS Viewer submission
The CAS Viewer is a tool for exploring the contents of the CAS that contains types, feature structures, feature values, and indices created when analysis engines are run over some input text documents. It unlocks and visualizes the CAS content by providing the following information:  Annotations with associated types Indices that reside in the index repository -Annotated text documentUIMA developers can take benefits of the visualization and navigation capabilities inside the CAS content to debug and accelerate the development of their UIMA components.The CAS Viewer runs as an Eclipse's plug-in and provides a GUI for visualizing serialized CAS saved as XMI (XML Metadata Interchange) format. It also provides APIs for other tools to customize and extend its functionality and its user interface.
issueID:UIMA-1103
type:Bug
changed files:
texts:SWIG interface doesn&#39;t support CASException thrown from some common APIs
Some common CAS methods, like getView(), may throw CASException which at times needs to be handled by user code. This is fixed by specifying to SWIG which methods throw which exceptions.
issueID:UIMA-1104
type:New Feature
changed files:
texts:Need a monitor component for UIMA-AS services to capture performance metrics
In complex uima-as deployments it is hard to find bottlenecks which need scaleup. A JMX-based monitor is needed to collect runtime metrics from every uima-as service. The metrics must include idle time, queue depth, amount of time each service waits for a free CAS. The monitor should be an embeddable component that can be deployed in a java application. The monitor should allow custom formatting of metrics via pluggable extension.
issueID:UIMA-1105
type:Bug
changed files:uimaj-cpe/src/main/java/org/apache/uima/collection/impl/cpm/engine/ProcessingUnit.java
texts:CPE is sutck trying to retrieve a free CAS from the pool
Buggy scenario is a CPE with a first remote processor deployed as a Vinci service and an integrated CAS consumer that throws a ResourceProcessException in its process method.It is quite easy to reproduce with a dummy consumer with this implementationpublic void processCas(CAS aCAS) throws ResourceProcessException { throw new ResourceProcessException(new FileNotFoundException("file not found"));}It looks like the CPE is stuck trying to retrieve a CAS from the CAS pool that is apparently empty at some point.My feeling is that when you have an ResourceProcessException thrown in the last component of the CPE, the code that is supposed to release the CAS from the CAS pool is not properly called...If I suspend the process in Eclipse I can see that the CasConsumer and the Collection Reader pipelines Threads are waiting on the CPECasPool.getCas(long) methodI attach the uima.log set to the FINEST level
issueID:UIMA-1106
type:Bug
changed files:
texts:update OpenCalaisAnnotator with correct encodings
Currently the character encodings for calling the service are not correct.
issueID:UIMA-1107
type:Bug
changed files:uimaj-core/src/main/java/org/apache/uima/resource/impl/ResourceManager_impl.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/impl/PearAnalysisEngineWrapper.java
uimaj-core/src/main/java/org/apache/uima/impl/UIMAFramework_impl.java
uimaj-core/src/main/java/org/apache/uima/resource/ResourceManagerPearWrapper.java
uimaj-core/src/main/java/org/apache/uima/impl/RootUimaContext_impl.java
uimaj-core/src/main/java/org/apache/uima/UIMAFramework.java
uimaj-core/src/main/java/org/apache/uima/impl/ChildUimaContext_impl.java
texts:Annotator context not set when annotator loaded from PEAR
I have an aggregate annotator consisting of an annotator A1 that creates a new sofa, and an annotator A2 that annotates the new sofa.  A2 is not sofa-aware, so in the aggregate descriptor I have defined a sofa mapping.In the delegateAnalysisEngine element of the aggregate descriptor, if I point to A2's component descriptor (A2/desc/A2.xml), the sofa mapping works: A2 processes the new sofa created by A1.  If I point instead to A2's pear installation descriptor (A2/A2_pear.xml), the sofa mapping seems not to be applied: A2 processes the initial sofa instead.
issueID:UIMA-1108
type:Bug
changed files:
texts:correct character offset for OpenCalais annotator
the calais service do some text cleaning that manipulates the character offsets, this must to be corrected.
issueID:UIMA-1109
type:Improvement
changed files:
texts:Need ability to quiesce an instance of a service
We can deploy extra instances of a service seamlessly but also need a mechanism to undeploy without losing any work, i.e. ask an instance to stop processing messages and shutdown when it finishes its current work.
issueID:UIMA-1110
type:Bug
changed files:
texts:The default setting of prefetch=1 is causing problems
The new JMX monitor occasionally shows idle times of many seconds for a scaled out remote delegate that is getting many CASes per second. Assuming the monitor is correct, the problem is that AMQ is not evenly distributing the work to all the service instances. Other recent experiences have demonstrated that uneven distribution is solved with prefetch=0. While there is some possibility that prefetch > 0 may be useful in some situations for remote delegates, for colocated delegates there is little doubt that a prefetch greater than 0 cannot help performance and can only screw up load balancing.prefetch=0 should be the default everywhere.
issueID:UIMA-1111
type:Bug
changed files:uimaj-core/src/main/java/org/apache/uima/jcas/impl/JCasImpl.java
texts:Calling jcas.getType for a type that is not defined in the descriptor causes a lot of object allocation
This is related to UIMA-738.  if you attempt to call jcas.getType() for a type that's not defined in the type system, the JCas responds by going through the type system and re-creating all of the _Type objects for all known types.  For large type systems, this causes some unnecessary work and creates lots of temporary objects that need to be collected.The situation used to be worse.  Under UIMA-738 we fixed problems that caused the JCas to become unstable after this operation.  Now at least it doesn't break anything, but there is this performance issue.To check this, you can run the existing method in JCasTests:  public void testUndefinedType() throws Exception {    //create jcas with no type system    JCas jcas = CasCreationUtils.createCas(new TypeSystemDescription_impl(), null, null).getJCas();    jcas.setDocumentText("This is a test.");    try {      //this should throw an exception      jcas.getType(Sentence.type);      fail();     } catch(CASRuntimeException e) {    }    //check that this does not leave JCAS in an inconsistent state    //(a check for bug UIMA-738)    Iterator iter = jcas.getAnnotationIndex().iterator();    assertTrue(iter.hasNext());    Annotation annot = (Annotation)iter.next();    assertEquals("This is a test.", annot.getCoveredText());  }The call to jcas.getType(Sentence.type) will cause all known _Type objects to be instantiated (in this case, the builtins).  This can be seen from stepping into this method in the debugger, or from putting a breakpoint in the TOP_Type constructor.
issueID:UIMA-1112
type:Improvement
changed files:
texts:update UIMA website with hotfix 1 for release 2.2.2-incubating
make hotfix available for download udpate news sections to mention the availability of the hotfix
issueID:UIMA-1114
type:Bug
changed files:
texts:DocumentAnalyzer: html view doesn&#39;t work for aggregates
To reproduce, use the sandbox Tagger aggregate.  You need to add output capabilities for the DocumentAnalyzer to show any results (is this documented?).  Then you see annotations in the java viewer, but not in html.In Firefox 2, there's also a Javascript error.  There's no error in IE 6, but still no annotations are displayed
issueID:UIMA-1115
type:Bug
changed files:
texts:Cas Editor is missing ICU license notice
Add ICU License to LICENSE fileAdd ICU License notice to NOTICE file and about dialog
issueID:UIMA-1116
type:Bug
changed files:uimaj-core/src/main/java/org/apache/uima/cas/impl/SofaFSImpl.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/Sofa.java
texts:Missing override to protect SofaNum feature from modification
The editor should not allow modification of Sofa features as these changes can leave the CAS unusable. These features cannot be changed by normal CAS methods, which raises the question of how the CAS editor is modifying these features?Anyway, there is an easy workaround, don't do that!
issueID:UIMA-1117
type:Bug
changed files:
texts:Simple aggregate hangs when get a delegate error on an input CAS
If continueOnRetryFailure is true for a delegate that reports an error, the CAS continues to the end of the aggregate but is not returned to the client or to the pool.  When it is false the exception is returned correctly.  This only fails for original input CASes ... error handling works correctly for CASes created by a CR or CM inside the aggregate.
issueID:UIMA-1118
type:Bug
changed files:
texts:Fix "Failed to start jmx connector: Cannot bind to URL" while starting uima AS service
When starting UIMA AS aggregate service on linux ActiveMQ logs "Failed to start jmx connector: Cannot bind to URL". This message is logged when an internal ActiveMQ Broker is starting up.
issueID:UIMA-1119
type:Improvement
changed files:uimaj-core/src/main/java/org/apache/uima/cas/impl/XCASParsingException.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/XmiCasDeserializer.java
texts:The XmiCasDeserializer throws NoSuchElementException if an XCAS is corrupted, but doesn&#39;t report the offending element.
Obviously it's dangerous to edit XCASes but it is often the quickest way to produce a variety of test cases for an annotator.  By changing a few lines we can report the invalid id.
issueID:UIMA-112
type:Improvement
changed files:
texts:Assembly should unpack into a directory
See mail thread: http://www.mail-archive.com/uima-dev@incubator.apache.org/msg00581.html
issueID:UIMA-1120
type:Bug
changed files:
texts:UIMA AS use of TimeToLive can lead to service request failures.
One common scenario is that a service crashes while processing a processCas request, and additional requests are left in the service request queue. UIMA AS allows timeout values to be set for service requests so that if a reply not received within the timeout period, an error is generated on the client and appropriate actions taken.What happens to the queued service requests? If the service is restarted, it will attempt to process them and reply to the originating client. If a client receives a reply to a request that had timeout out, it will log and ignore it. If the client has gone away, the service will log and ignore the error when trying to reply. However, some requests may be expensive to process and it is desirable to avoid this work. Other requests may contain stale content that will cause problems for the new service to process.In order to avoid these problems, when a timeout value is specified UIMA AS sets TimeToLive to the timeout period. A TimeToLive setting allows the JMS system to dispose of requests that cannot be delivered in time, normally transferring them to a "dead letter queue". AMQ 5.0 fully supports this mechanism, but given some blocking issues with AMQ 5.0, UIMA AS had to revert back to v4.1.1 for the first release.Up until recently our experience was that TimeToLive was ignored in AMQ 4.1.1, but this is not the case. With a AMQ C++ consumer, expired messages will be removed from the queue and thrown away. With a 4.1.1 Java consumer running under some JRE versions (e.g. Sun 1.6_02 on Linux), expired messages will be ignored and left in the queue. If this is not confusing enough, there is the AMQ definition of TimeToLive: it is based on the absolute time the message was created. Any clock skew between the producer and consumer machines will not be accounted for. For example, if a UIMA AS client is running on a machine whose clock is more than 60 seconds behind the machine running the UIMA AS service, a message request with a timeout of 60 seconds or less will expire before it is sent.In the future UIMA AS may implement an option to not use TimeToLive at all. The workaround for now is to make sure the clocks on all client and service machines are synchronized.
issueID:UIMA-1121
type:Bug
changed files:
texts:SimpleRunCPE exits with an error code on normal termination
runCPE.sh is terminating with exit code 1 even when, as far as I can tell, everything went fine.  Based on a quick look at SimpleRunCPE.java, I think collectionProcessComplete() ought to end with System.exit(0), rather than 1.
issueID:UIMA-1122
type:Bug
changed files:
texts:Reset method of the ClientInfo MBean deletes important parameters
The 'reset' method on the org.apache.uima.aae.jmx.UimaASClientInfo MBean class is expected to reset only stats data, like timing and error count. However, the method also cleans-up 2 important parameters - applicationName and endpointName, which are needed for proper Client MBean identification.
issueID:UIMA-1123
type:Bug
changed files:
texts:uima-as eclipse update site creation
Do the eclipse update site creation for uima-as.  In the process, fix bugs in the build that prevent the dependency resolution mechanism from working properly (symptom: trying to install uima-as gives message of unresolved dependencies, and won't go away, preventing the install).Fix other problems caused by inconsistent naming between the symbolic bundle-id name and the jar root name - these were giving errors like "exception occurred while downloading feature xxx"Fix optimized update-site generation process issue caused by missing "features.properties" in the new uimaj-eclipse-feature-deployeditor project.Change the feature.xml for the new feature to require dependencies at an "equal or greater" level for compatibility.Add the new feature to the site.xml for the eclipse update site.Update the build.xml to better support an incremental addition of new features to the site.
issueID:UIMA-1124
type:Bug
changed files:
texts:If 2 delegates use the same queue name getMeta will time out on one of them
It should be possible (if unusual) to send a CAS to the same queue from different stages in its flow.  Or at least to a queue with the same name on a different broker.  Alternatively if we insist that aggregates must have unique queue names then we should enforce it.  The problem may be related to the fact that most log messages refer to queue names instead of delegate keys, e.g. when key UMA_TL uses queue TopicLabellerAnnotatorQueue we get:  UMA_TL Remote Service Registered Successfully  Merging Typesystem From Delegate: TopicLabellerAnnotatorQueue
issueID:UIMA-1125
type:Bug
changed files:
texts:Modify UIMA-AS synchronization when deserializing CASes
The de-serialization of CASes is currently synchronized in the uima-as code. This creates a bottleneck when multiple listeners threads are used, effectively creating a processing funnel. This is especially true for aggregates which do little processing and spent most time de-serializing and serializing CASes. The synchronization needs only be applied while merging secondary CASes. In all other cases, synchronization around deserialization should not be used.
issueID:UIMA-1126
type:New Feature
changed files:
texts:Add "getting started with UIMA AS" to the documentation page

issueID:UIMA-1127
type:Improvement
changed files:
texts:Services that timeout should be handled differently on subsequent requests
When a request times out, the service should be put into a "questionable" state. Requests to a service in questionable state will then use a different logic: first send a getMeta request with a short timeout; if the getMeta succeeds, the questionable state is removed and the normal request is sent; if getMeta fails, an error is returned for the request with the state unchanged.This logic should be used for both API and aggregate clients.
issueID:UIMA-1129
type:New Feature
changed files:uimaj-core/src/main/java/org/apache/uima/internal/util/IntSet.java
uimaj-core/src/main/java/org/apache/uima/cas/Marker.java
uimaj-core/src/main/java/org/apache/uima/cas/CAS.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/Heap.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/XmiCasSerializer.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/XmiCasDeserializer.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/AllowPreexistingFS.java
uimaj-core/src/main/java/org/apache/uima/cas/CASRuntimeException.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/CASImpl.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FSIndexRepositoryImpl.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/MarkerImpl.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/XmiSerializationSharedData.java
texts:XMI serialization support for delta CAS
Extend XMI serialization to enable serializing only the changes to the CAS.  The requirement for delta CAS support in order to to reduce serialization overhead associated with remote services is described in the wiki page found here: http://cwiki.apache.org/UIMA/reducing-overhead-for-remote-service-calls.html.
issueID:UIMA-113
type:Bug
changed files:uimaj-adapter-vinci/src/main/java/org/apache/uima/adapter/vinci/CASTransportable.java
uimaj-adapter-vinci/src/main/java/org/apache/uima/adapter/vinci/CASTransportable.java
texts:socket timeout exception is (sometimes?) embedded in sax exception, resulting in a retry
Eddie,this is not related to our timeout problems, but might be interesting for you. IIRC, you said the reopening of the connection should not happen in 1.4.4 when a socket timeout exception happens. However, as illustrated in the following log, the socket timeout exception is (sometimes?) embedded in sax exception, thus preventing the fix to work:&#91;11/29/06 3:58 PM&#93; Trying to reopen connection due to exception: java.io.IOException: SAX Exception: org.xml.sax.SAXException: IOException: java.net.SocketException: Connection timed out&#91;11/29/06 3:58 PM&#93; Resolved com.ibm.upload_ibm to: 195.39.92.173:10035Martin--------Hmmm..  I can see how this might be possible, although I'm not sure under what circumstances it would or would not happen.  I'm kind of surprised I never saw this myself.  You could open a JIRA issue for me to look at.-Adam
issueID:UIMA-1130
type:Improvement
changed files:
texts:Deployment Descriptor should allow setting the number of concurrent listeners for a reply queue
The Spring XML allows setting a concurrentConsumers property for a reply queue (either an aggregate's collocated reply queue or a remote reply queue):     <property name="concurrentConsumers" value="1"/>The deployment descriptor should allow setting this property.  In some deployments where remote delegates are scaled out many times, the bottleneck can become the aggregate deserializing CASes from the reply queue.  If the aggregate is running on a multicore machine it helps to increase the number of threads that can process the reply queue.
issueID:UIMA-1131
type:Bug
changed files:
texts:Delegates following a CAS Multiplier do not get the complete typesystem
Delegates after a CAS multiplier get only the type system of the first delegate declared in the aggregate.  CASes generated by a CAS multiplier don't get the full merged type system.
issueID:UIMA-1132
type:Bug
changed files:
texts:Fix a hang in UIMA-AS if a Cas Multiplier is the last component in the pipeline
The top level aggregate hangs when the last component in its pipeline is a CM. It seems that CASes produced by a CM are not being released properly in the FinalStep.
issueID:UIMA-1133
type:Improvement
changed files:
texts:Timeout needs different implementation to eliminate interaction with CAS pool size
When a timeout value is specified for process calls, a timer is set for each processCas request. If an aggregate controller (or client API) sends multiple process requests to the same service, the timeout must be increased to account for the potential processing delay of the earlier requests. Currently the timeout value is static, specified in the deployment descriptor; if a user changes the CAS pools size, they may have to change the timeout to compensate.A better design would decouple these things by changing the implementation of timeout. For example, the timeout value could be dynamic, taking into account the number of outstanding requests sent by the same client. The new implementation should take into account the need to set appropriate time-to-live values for the request messages.
issueID:UIMA-1134
type:Improvement
changed files:
texts:Put additional scaleout scenarios in UIMA AS getting started

issueID:UIMA-1135
type:Bug
changed files:
texts:UIMA-AS dd2spring needs update for UIMA-1019
The uima-1019 issue changed the way remote cas multiplier queues were managed.In particular, uima-1019: Modified UIMA-AS to support Aggregate CM. As part of this enhancement, also modified the client code to support remote CM. Each remote CM instance ( primitive or aggregate) creates its own Temp FCQ( Free CAS Queue) for receiving notifications from a client. This notification enables the CM to release the next CAS and send another to a client. Scaleout of Remote CM is also supported now.and Added support for Aggregate CAS Multipliers. Based on OperationalProperties an Aggregate UIMA-As may output CASes to its client. The Aggregate CM creates a special temp queue for receiving Free CAS requests from a client.dd2spring.xsl needs updating to align with this new approach; there are beans it generates which are no longer used.
issueID:UIMA-1136
type:Improvement
changed files:
texts:[DDE] Support editing of Prefetch value and set default value to 0 (instead of 1)
For the current version of DDE, to change the value of the "Prefetch" of the Top AE, the user needs to modify the value in the "source" XML. Until now, the default value is set to "1".We will modify the DDE as follows:1. Allow user to modify the prefetch value with GUI (in the 1st page of DDE)2. Set the default value to 0
issueID:UIMA-1137
type:Bug
changed files:
texts:Service hangs if deployed before broker is ready
When both a service and its broker are restarted together (e.g. after a reboot) the service will fail to initialize if the broker is not ready.  The service claims it is shutting down, e.g. with 3 lines such as: >>>> Terminating Controller:StoryBoundary Unable To Initialize Listener Due to Invalid Broker URL:tcp://telly.watson.ibm.com:61616but it then hangs.The service should wait for the broker, and log to the console when it has successfully connected.  Could also log a "still trying" indication every minute or so.  Would be nice to suppress these spring error msgs: org.springframework.jms.listener.AbstractJmsListeningContainer$SharedConnectionNotInitializedException
issueID:UIMA-1138
type:Bug
changed files:
texts:Deployment of an aggregate hangs if one of its co-located delegates has a missing import
Nothing appears in the log but the console gets a Sping BeanCeationException, e.g.org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'primitive_ctlr_FinalizeMT_1.3' defined in URL file:C:/DOCUME~1/ADMINI~1/LOCALS~1/Temp/UIMAdd2springOutput22500.xml: Instantiation of bean failed; nested exception is org.springframework.beans.BeanInstantiationException: Could not instantiate bean class &#91;org.apache.uima.aae.controller.PrimitiveAnalysisEngineController_impl&#93;: Constructor threw exception; nested exception is org.apache.uima.resource.ResourceInitializationException: Import failed.  Could not read from URL file:/C:/UIMA/Workspace3/iod/descriptors/typesystem/GTS.xml. (Descriptor: file:/C:/UIMA/Workspace3/iod/descriptors/pipe/glu/FinalizeMT.xml)Message is clear but the deployment should terminate.  (Deployed with runRemoteAsyncAE -d)
issueID:UIMA-114
type:Improvement
changed files:
texts:Configuration parameter groups overly complicated
The design of configuration parameter groups is overly complicated. The required capabilities could be achieved with the following design:Define a base configuration parameter name as those characters up to the first '.' character.Define a configuration parameter suffix as those characters after the first '.' character.Replace the API   getConfigParameterValue(String aGroupName, String aParamName)with   getConfigParameterValue(String aSuffixName, String aParamName)and implement the following behavior:  if aParameterName.aSuffixName does not exist, attempt to return the object for aParameterNameThe APIs getConfigParameterNames(String aSuffixName)  could easily be implemented. and getConfigurationGroupNames() replaced with getConfigurationSuffixNames()This design will simplify the descriptor, the framework implementation and particularly the descriptor tools GUI
issueID:UIMA-1140
type:Improvement
changed files:
texts:Embedded broker should be eliminated
When an async aggregate is deployed, the request/reply queues for colocated delegates use an embedded broker. After UIMA-1130 is complete, all reply queues for remote delegates will be located on the same external broker hosting the delegate's request queue. At that point the function of the colocated broker can be replace with simple Java queues.
issueID:UIMA-1141
type:Improvement
changed files:
texts:Update UIMA website with release CasEditor-2.2.2-incubating

issueID:UIMA-1142
type:Bug
changed files:uimaj-core/src/main/java/org/apache/uima/util/FileUtils.java
texts:FileUtils.saveString2File() should use try/finally block to close output stream

issueID:UIMA-1143
type:Bug
changed files:
texts:Fix problems identified with copyright and notice
For details, see discussion in uima-dev related to subject "&#91;VOTE&#93; Release uimacpp-2.2.2-02 as uimacpp-2.2.2-incubating"
issueID:UIMA-1144
type:New Feature
changed files:
texts:Add concept mapper to sandbox web page
Suggested text for this in this email: http://markmail.org/message/xztpeskgyaqlevo2
issueID:UIMA-1145
type:Bug
changed files:
texts:UIMA-AS client occasionally hangs while processing CASes
When running runRemoteAsyncAE with a CollectionReader configured to process a few thousand xml documents, the UIMA AS sometimes hangs. Also a NPE exception is thrown.
issueID:UIMA-1146
type:Improvement
changed files:
texts:Setting the number of concurrent listeners of a reply queue for Co-located Delegates
JIRA-1130 has improved UIMA-AS to allow users to set the number of concurrent listeners of a reply queue for  each "remote" delegate. The following is the syntax in the xml deployment descriptor (as an example):      <analysisEngine async="true">        <delegates>          <remoteAnalysisEngine key="RoomNumber">            <inputQueue brokerURL="tcp://localhost:61616" endpoint="RoomNumberAnnotatorQueue"/>            <replyQueue concurrentConsumers="2" location="remote"/>            ...          </remoteAnalysisEngine>        </delegates>        ...      </analysisEngine>This JIRA will do the similar thing by allowing users to set the number of concurrent listeners of a reply queue for  "co-located" delegates inside the UIMA-AS aggregate. The following is the "proposed" syntax:      <analysisEngine async="true"> <!-- Top aggregate -->        <replyQueue concurrentConsumers="2">        ...        <delegates>          <analysisEngine key="NamesAndPersonTitlesTAE" async="true"> <!-- co-located aggregate -->            <replyQueue concurrentConsumers="3">            ...          </analysisEngine>          ...        </delegates>        ...      </analysisEngine>
issueID:UIMA-1147
type:Task
changed files:
texts:Merge uima-as-post1st branch with the uima-as SVN trunk
Merge the uima-as branch with the SVN uima-as trunk
issueID:UIMA-1148
type:Improvement
changed files:uimaj-tools/src/main/java/org/apache/uima/tools/cvd/MainFrame.java
texts:CVD should ignore feature structures of unknown types
When loading a CAS, the CVD uses an XmiCasHandler that is non-lenient.  Is there a reason for this?  When running in a processing chain, an annotator can handle a CAS that contains types it doesn't know about.  Seems to me it should be able to do the same when running in the CVD.
issueID:UIMA-1149
type:Bug
changed files:
texts:[UIMA-AS] fix potential thread safety issue with flow controller code
The general "contract" regarding threading for user-written UIMA components is that components do not have to be written to be thread-safe, or, more precisely, the framework guarantees it will not call an instance of a user-written component class on multiple threads at the same time.  See http://incubator.apache.org/uima/downloads/releaseDocs/2.2.2-incubating/docs/html/tutorials_and_users_guides/tutorials_and_users_guides.html#ugr.tug.aae.contract_for_annotator_methodsThis is intended to make writing UIMA components by our user community easier, and to eliminate many hard-to-diagnose issues that could occur otherwise.The FlowController main object class, the one that is specified in the custom flow control specification for an aggregate, in UIMA-AS, can be (we think, but to be investigated  ) be called on multiple threads at the same time, in the current implementation.  This Jira is to fix this, by synchronizing on the flow controller object so that users don't have to write thread safe implementations of this class.Also, the docs in the above referenced manual should be updated to include the flow controller object in the set of objects where the framework guarantees that instances of this object will not be called on multiple threads at the same time.
issueID:UIMA-115
type:Bug
changed files:uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/ui/TypeImportSection.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/Serialization.java
uimaj-tools/src/main/java/org/apache/uima/tools/cvd/FSNode.java
uimaj-adapter-vinci/src/main/java/org/apache/uima/adapter/vinci/VinciBinaryAnalysisEngineService_impl.java
uimaj-tools/src/main/java/org/apache/uima/tools/viewer/CasAnnotationViewerApplet.java
uimaj-core/src/main/java/org/apache/uima/jcas/impl/JCasImpl.java
uimaj-tools/src/main/java/org/apache/uima/tools/stylemap/AnnotationFeaturesViewer.java
uimaj-tools/src/main/java/org/apache/uima/tools/stylemap/StyleMapEditor.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/model/BuiltInTypes.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/model/AllTypes.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/XmiCasDeserializer.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/impl/compatibility/AnnotatorAdapter.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/Sofa.java
uimaj-core/src/main/java/org/apache/uima/cas/CASRuntimeException.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FSIndexRepositoryImpl.java
uimaj-tools/src/main/java/org/apache/uima/tools/cvd/FSTreeModel.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/asb/impl/ASB_impl.java
uimaj-tools/src/main/java/org/apache/uima/tools/cvd/MainFrame.java
uimaj-tools/src/main/java/org/apache/uima/tools/components/FileSystemCollectionReader.java
uimaj-core/src/main/java/org/apache/uima/resource/metadata/impl/LanguagePrecondition_impl.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/TOP.java
uimaj-tools/src/main/java/org/apache/uima/tools/docanalyzer/DocumentAnalyzer.java
uimaj-core/src/main/java/org/apache/uima/cas/CAS.java
uimaj-core/src/main/java/org/apache/uima/util/TCasToInlineXml.java
uimaj-tools/src/main/java/org/apache/uima/tools/cvd/MultiMarkup.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/ui/TypeSection.java
uimaj-core/src/main/java/org/apache/uima/jcas/impl/JFSIndexRepositoryImpl.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/cpm/engine/ConsumerCasUtils.java
uimaj-core/src/main/java/org/apache/uima/util/TCasFormatter.java
uimaj-tools/src/main/java/org/apache/uima/tools/viewer/CasTreeViewer.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/ui/dialogs/AddIndexKeyDialog.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FeatureValuePathImpl.java
uimaj-core/src/main/java/org/apache/uima/cas_data/impl/XCasToCasDataSaxHandler.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/cpm/StatusCallbackListenerImpl.java
uimaj-core/src/main/java/org/apache/uima/cas/FeatureStructure.java
uimaj-core/src/main/java/org/apache/uima/util/ConsumerCasUtils.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/MultiPageEditor.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/annotator/TextAnnotator.java
uimaj-core/src/main/java/org/apache/uima/uimacpp/UimacppEngine.java
uimaj-core/src/main/java/org/apache/uima/util/AnalysisEngineUtils.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/cpm/Constants.java
uimaj-adapter-soap/src/main/java/org/apache/uima/adapter/soap/AxisAnalysisEngineServiceStub.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/ui/TypePriorityImportSection.java
uimaj-core/src/main/java/org/apache/uima/analysis_component/AnalysisComponent.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/ResultSpecification.java
uimaj-examples/src/main/java/org/apache/uima/examples/xmi/Ecore2UimaTypeSystem.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/XmiCasSerializer.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/SofaFSImpl.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/ui/ImportResBindSection.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/service/impl/ServiceDataCargo.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/XCASDeserializer.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/model/DefinedTypesWithSupers.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/AnalysisEngine.java
uimaj-core/src/main/java/org/apache/uima/cas/FeatureValuePath.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/CASImpl.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/cpm/engine/CPMEngine.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/DebugFSLogicalStructure.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/model/DescriptorTCAS.java
uimaj-tools/src/main/java/org/apache/uima/tools/docanalyzer/AnnotationViewerDialog.java
uimaj-tools/src/main/java/org/apache/uima/tools/AnnotationViewerMain.java
uimaj-core/src/main/java/org/apache/uima/util/JCasPool.java
uimaj-tools/src/main/java/org/apache/uima/tools/cvd/AnnotationDisplayCustomizationFrame.java
uimaj-tools/src/main/java/org/apache/uima/tools/jcasgen/Jg.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/cpm/engine/ArtifactProducer.java
uimaj-core/src/main/java/org/apache/uima/util/CasCreationUtils.java
uimaj-tools/src/main/java/org/apache/uima/tools/viewer/CasAnnotationViewer.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/ui/CapabilitySection.java
uimaj-core/src/main/java/org/apache/uima/resource/impl/CasManager_impl.java
uimaj-core/src/main/java/org/apache/uima/uimacpp/CppUimajEngine.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/impl/compatibility/CasConsumerAdapter.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/ui/IndexImportSection.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/LLUnambiguousIteratorImpl.java
uimaj-tools/src/main/java/org/apache/uima/tools/cvd/tsview/MainFrame.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/impl/AnalysisEngineImplBase.java
uimaj-core/src/main/java/org/apache/uima/jcas/JCas.java
uimaj-core/src/main/java/org/apache/uima/resource/CasManager.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/impl/compatibility/CollectionReaderAdapter.java
texts:The TCAS class should be dropped
The introduction of multiples views per CAS was initially implemented using the CAS interface for the base CAS and the TCAS interface for all views. Process method signatures for both TCAS and CAS were proprogated, and the result was a complicated situation for users.In v2 the entire TextAnalysisEngine interface is deprecated. The TCAS no longer serves a useful purpose. Since Apache UIMA requires some source code changes, now is a good time to eliminate the TCAS. Migration for almost all user code would be to replace TCAS with CAS and getTCAS() with getView(). This change has already been applied to the upcoming uima C++ code.
issueID:UIMA-1150
type:Bug
changed files:uimaj-core/src/main/java/org/apache/uima/analysis_engine/impl/PearAnalysisEngineWrapper.java
uimaj-core/src/main/java/org/apache/uima/resource/Resource_ImplBase.java
texts:Pear isolation broken, test case failing
UIMA-1107 fix broke pear class loader isolation.  See disucsion of this here: http://markmail.org/message/eg5dgqb2ual2qfuhFix UIMA-1107 to create a new map for additional parameters, copying all the parameters except the UimaContext one.Also noticed that the fix in UIMA-607 is broken because the code to get the ResourceManager instance of the caller is failing - due to super.initialize(...) being called after the point where the getResourceManager() is called - so this.getResourceManager() is always returning null.  Consider using the UimaContext instead as the key value.
issueID:UIMA-1151
type:New Feature
changed files:uimaj-tools/src/main/java/org/apache/uima/tools/cvd/CVD.java
uimaj-tools/src/main/java/org/apache/uima/tools/cvd/MainFrame.java
uimaj-tools/src/main/java/org/apache/uima/tools/cvd/control/XmiCasFileOpenHandler.java
texts:Make CVD load a CAS from command line
Here's a patch that makes the CVD accept an -xmi argument on the command line.  If the argument is provided, it loads the named XMI CAS file at startup.It would be logical to do the same for XCAS, but the patch doesn't do that.
issueID:UIMA-1152
type:Bug
changed files:
texts:Match group counting does not work properly with escaped open bracket within variables.
Example:<variable name="varPunctMarks" value="&#91;\s,\.:;\[\]\(\)&#93;"/>Escaped open bracket should not be recognized as matching group, but it does.
issueID:UIMA-1154
type:Bug
changed files:
texts:UIMA-AS extended tests hang when running with IBM JVM 1.6 service release 1
When running extended tests in eclipse( version: 3.4.0) on Linux with IBM jvm 1.6 service release 1, some of the tests are not completing due to a hang. Both the trunk code (before the merge) and the merged code (from the branch) seem to exhibit this problem although on different tests. The code from the trunk (before the merge) hangs on testcase: testTerminateOnFlowControllerException, while the merged code hangs on testAggregateProcessCallWithLongDelay.  The hangs are also observed on Windows with IBM Jvm 1.6 service release 1.
issueID:UIMA-1155
type:Task
changed files:
texts:Remove stale methods and classes from the uima-as projects
Cleanup uima-as code to remove stale methods and classes no longer in use
issueID:UIMA-1156
type:Improvement
changed files:
texts:[SimpleServer] Add improvement to support UIMA-AS services
Currently, the Simple Server supports calling to PEAR-based and descriptor-based analysis engines.This improvement will add the support to call UIMA-AS services.
issueID:UIMA-1157
type:Bug
changed files:
texts:UIMA-AS website download page links are wrong for linux
The links on the page are missing the .gz  (including the checksums).  Files are OK on the distr, but the links are wrong.
issueID:UIMA-1158
type:Bug
changed files:
texts:Some shell scripts don&#39;t work on Ubuntu Linux
Ubuntu uses /bin/dash as the default shell and we have some bashisms in ours, e.g. in startBroker.sh.Simplest fix is probably to change #Unable to render embedded object: File (/bin/sh to #) not found./bin/bash
issueID:UIMA-1159
type:Bug
changed files:
texts:UIMA-AS dd2Spring fix - generating wrong property for co-located component - treating it as a remote
The property "tempReplyDestination" is being set to "true" for co located components - this should not be set for these.Bug introduced with previous fix.
issueID:UIMA-116
type:Improvement
changed files:
texts:Always deliver the base CAS to the process method
Currently there is a distinction made for "single view" and "multiple view" components. The UIMA architecture standard proposes that all components are multiple view components and be delivered a handle to the base CAS, and the component retrieves views as required. The change to existing "single view" component would be to add one line of code in the process method: cas = passInCas.getView(), which would return the View currently given to these components as determined by Sofa mapping.
issueID:UIMA-1160
type:Improvement
changed files:
texts:[DDE] Copy missing icon named "editor.gif" from CDE to to DDE
It is nice to have an icon associated with the DDE descriptor similar to other descriptors in CDE when users do "create new descriptor".To fix this, please copy "icons/editor.gif" from CDE project to DDE project at the same place.
issueID:UIMA-1161
type:Bug
changed files:
texts:UIMA-AS inputQueueScaleout should be settable on nested co-located aggregates
My initial thinking about this reasoned that for co-located nested aggregates, their input queues would not need any scaleout because there would be no deserialization (the input queue passes a handle instead of a serialized CAS for co-located nested aggregates).  And also, no re-serialization back to the invoker (again, just a handle is passed).However, Eddie has pointed out that if the nested aggregate has a remote delegate as its first component, then the serialization work going to that delegate is done using the thread on the input queue listener.  Also, I note that if the flow controller work requires any significant time, scaleout might be needed, as the input queue listener thread is used for the first entry into the flow controller (subsequent entries into the flow controller run on the aggregate's reply queue listeners).Because of this, we should allow the inputQueueScaleout parameter on nested aggregates, as well as just on the top level one.
issueID:UIMA-1162
type:Bug
changed files:
texts:Synchronize checkin() method of the AnalysisEngineInstancePoolWithThreadAffinity
For thread safety synchronize checkin() method to make sure that the same thread always uses the same instance of the AE.
issueID:UIMA-1163
type:Improvement
changed files:uimaj-core/src/main/java/org/apache/uima/internal/util/IntSet.java
uimaj-core/src/main/java/org/apache/uima/cas/Marker.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/Heap.java
uimaj-core/src/main/java/org/apache/uima/cas/TypeClass.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/XmiCasDeserializer.java
uimaj-core/src/main/java/org/apache/uima/util/XMLInputSource.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/StringHeapDeserializationHelper.java
uimaj-core/src/main/java/org/apache/uima/cas/CASRuntimeException.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FSIndexRepositoryImpl.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/MarkerImpl.java
uimaj-core/src/main/java/org/apache/uima/internal/util/XmlAttribute.java
uimaj-core/src/main/java/org/apache/uima/internal/util/XmlElementNameAndContents.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/ui/dialogs/TypesWithNameSpaces.java
uimaj-core/src/main/java/org/apache/uima/pear/tools/PackageInstaller.java
uimaj-core/src/main/java/org/apache/uima/util/impl/CasPoolManagementImpl.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/ui/dialogs/ResourcePickerDialog.java
uimaj-core/src/main/java/org/apache/uima/resource/impl/CustomResourceSpecifier_impl.java
uimaj-core/src/main/java/org/apache/uima/cas/CAS.java
uimaj-core/src/main/java/org/apache/uima/util/CasPoolManagement.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/point/IUimaEditorExtension.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/ui/dialogs/TypesWithNameSpaces32.java
uimaj-core/src/main/java/org/apache/uima/pear/tools/PackageInstallerException.java
uimaj-core/src/main/java/org/apache/uima/internal/util/XmlElementName.java
uimaj-core/src/main/java/org/apache/uima/util/CasCopier.java
uimaj-core/src/main/java/org/apache/uima/resource/ManagementObject.java
uimaj-core/src/main/java/org/apache/uima/pear/tools/PackageCreator.java
uimaj-core/src/main/java/org/apache/uima/jcas/JCasRegistry.java
uimaj-core/src/main/java/org/apache/uima/util/impl/CasPoolManagementImplMBean.java
uimaj-core/src/main/java/org/apache/uima/jcas/impl/JCasHashMap.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/XmiCasSerializer.java
uimaj-core/src/main/java/org/apache/uima/pear/tools/InstallationController.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/point/IUimaMultiPageEditor.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/CASImpl.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/cpm/engine/ProcessingUnit.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/ui/dialogs/ContentAssistField32.java
uimaj-core/src/main/java/org/apache/uima/pear/util/UIMAUtil.java
uimaj-core/src/main/java/org/apache/uima/pear/tools/PackageCreatorException.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/ui/dialogs/SelectTypeDialog.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/impl/PearAnalysisEngineWrapper.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/impl/PrimitiveAnalysisEngine_impl.java
uimaj-core/src/main/java/org/apache/uima/jcas/JCas.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/TAEConfiguratorPlugin.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/impl/AnalysisEngineDescription_impl.java
texts:set svn:eol-style to native for source files in UIMA project
set the svn:eol-style to native for java source files in the UIMA project.  (Other sandbox projects may also want to do similar things, and the uimaCPP project, and the site project).Don't set this for scripts - the ones that are intended to run on windows probably can have either line ending style, but I think the ones that run on the various linuxes need the unix style.  This is so that extracts for builds done on a windows machine can properly build a linux distribution.Don't set this for test data - some UTF-16 or UTF-8 test data may have things intentionally present that might look like line endings, but are not, and should not be disturbed by checkout.
issueID:UIMA-1164
type:Bug
changed files:
texts:Increasing concurrent Consumer count on Spring Listener causes creation of multiple temp queues
Scaleout of listener threads seems to cause creation of as many temp queues as there are concurrent consumers defined on the listener. Instead, there should be one temp queue created for all the listener threads.
issueID:UIMA-1165
type:Bug
changed files:
texts:Fix a race condition in the UIMA-AS aggregate that results in a hang
When running a complex Cas Multiplier Aggregate AS service with a scaled out listener threads, a race condition occurs that leads to a hang. Specifically, one thread obtains a number of child CASes produced from an input CAS, than this thread is preempted and another thread releases one of the child CASes. The parent CAS may not be released from the InProcessCache leading to CAS pool exhaustion since many CASes are stuck in the InProcessCache waiting to be released.
issueID:UIMA-1166
type:Bug
changed files:
texts:Getmeta replies from some remote delegates are ignored, causing a timeout
The reply is falsely discarded:9/4/08 3:15:05 PM - 22: org.apache.uima.aae.controller.AggregateAnalysisEngineController_impl.mergeTypeSystem: INFO: Controller: IODBurnTest Received Metadata From an Invalid (Possibly Disabled) Delegate: TopicLabellerAnnotatorQueueThe recent change to support duplicate queue names on different brokers checks the broker name returned in the reply against the broker the request was sent to.  But the service returns the name it uses for the broker, e.g. tcp://localhost:61616, and not the external name of the broker.
issueID:UIMA-1167
type:New Feature
changed files:uimaj-tools/src/main/java/org/apache/uima/tools/cvd/MainFrame.java
uimaj-tools/src/main/java/org/apache/uima/tools/cvd/MainFrame.java
uimaj-tools/src/main/java/org/apache/uima/tools/cvd/control/AnnotatorRunCPCEventHandler.java
texts:CVD should be able to call CollectionProcessComplete
In order to test components using CPC methods
issueID:UIMA-1168
type:New Feature
changed files:
texts:Use Delta CAS serialization to reduce overhead of remote service calls
Make use of Delta CAS XMI format when serializing the CAS when calling a remote service per the requirements discussed here:http://cwiki.apache.org/UIMA/reducing-overhead-for-remote-service-calls.htmlOlder servicea and client that are not aware of Delta CAS should be supported.
issueID:UIMA-117
type:Bug
changed files:uimaj-tools/src/main/java/org/apache/uima/tools/cvd/MainFrame.java
texts:CVD Help->Manual menu item gives "invalid url" error dialog.

issueID:UIMA-1170
type:Bug
changed files:
texts:installation path bug
I downloaded the zip file for the CAS Editor to a local folder named c:\Software\U\UIMA and unzipped it into this directory.  When I double click "Cas Editor.exe" it gives the following error message:C:\Software\U\UIMA\CasEditor\Cas Editor.exe The specified path does not exist.When I moved the directory CasEditor to c:\Software, then the executable runs just fine.  Not a big deal  because there is an easy work around.  Still, seems like something you might want to look into if its an easy fix.
issueID:UIMA-1171
type:Bug
changed files:
texts:Initialization hangs if an Exception is thrown when initializing the flow controller AND delegates are offline
If the framework has some delegates to disable (i.e. failed getMeta) it calls the flow controller's initialize method on a different path and the ResourceInitializationException is caught and rethrown as AsynchAEException ... this causes the deployment to hang.
issueID:UIMA-1172
type:New Feature
changed files:
texts:JMX client mbean should have attribute for max and average response latency
An important performance parameter for a UIMA AS service is the response latency as measured by a client application.
issueID:UIMA-1173
type:Improvement
changed files:
texts:BaseUIMAAsynchronousEngine_impl.getCAS() should queue requests
BaseUIMAAsynchronousEngine_impl.getCAS() blocks until a CAS is available. If multiple threads are blocked, which one gets the next CAS is nondeterministic.In order to guarantee quality of service it is important to return CASes in the orderthey were requested.
issueID:UIMA-1174
type:Improvement
changed files:
texts:Add Find/Annotate keyboard shortcut
Create a keyboard shortcut to add annotations for all parts of the document which match the current selection.
issueID:UIMA-1175
type:Bug
changed files:
texts:CasEditor should work well with eclipse 3.4
The eclipse editor is displaying an exception when a cas file is opened.
issueID:UIMA-1176
type:Improvement
changed files:uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/PreferencePage.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/MultiPageEditor.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/MultiPageEditorContributor.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/ui/TypeSection.java
uimaj-tools/src/main/java/org/apache/uima/tools/jcasgen/Jg.java
texts:JCasGen shouldn&#39;t generate types for imported type systems (or at least it should be an option)
Our project reuses a common type system that we got from a different source.  The common type system descriptor is imported into our main type system descriptor.  The common type system has its own JCas types, in a jar file.  When we generate JCas types for our main type system descriptor, it currently generates all of the classes for all of the imported type systems as well.  We don't want this behavior, so we have to manually go through and delete those classes.I think JCasGen should only generate types for the type system descriptor that you run it on, not on imported type system descriptors.
issueID:UIMA-1177
type:Improvement
changed files:uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/MultiPageEditorContributor.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/PreferencePage.java
texts:Consider making the default setting for "Auto Generate JCAS Java source files" be off.
I think the default should be to not generate the JCAS source files when you save an Analysis Engine Descriptor.  (I can see generating when you save a Type System Descriptor, maybe.)  Our AE descriptors change far more frequently than our type system does, and it is disruptive to have all the type system classes regenerated all the time.  My guess would be that most other people are also in this situation.
issueID:UIMA-1178
type:Improvement
changed files:
texts:Move the editing part of the Cas Editor to a new plugin
The editing part of the Cas Editor should be moved out of the RCP Cas Editor to make it useable directly from eclipse or in other eclipse based UIMA tooling.
issueID:UIMA-1179
type:Improvement
changed files:
texts:Outline view should have an option to show all annotations grouped by type
Currently the Outline view is mode sensitive and it only shows the annotations of the currentmode. The outline view should have an option to make it mode insensitive and showall annotations in the CAS grouped by annotations types.
issueID:UIMA-118
type:Task
changed files:
texts:Link to the UIMA draft specification research report
There's now a public research report that lays the groundwork for the eventual OASIS UIMA Specification.  We should link to it from out podling website.
issueID:UIMA-1180
type:Bug
changed files:
texts:Opening a CAS file should open the annotation editor. Not the text editor.

issueID:UIMA-1181
type:Bug
changed files:
texts:Deleting a CAS file should also close the annotation editor. This occurs when the file is opened in text editor and annotation editor and cas file is deleted.

issueID:UIMA-1182
type:Improvement
changed files:
texts:add info on how to verify using md5 signatures
Add info on how to verify md5 signatures, using this page: http://people.apache.org/~henkp/cgi-bin/md5.cgi
issueID:UIMA-1183
type:Bug
changed files:
texts:visual cue for selected annotation
It is often hard to tell which annotation is selected.  For example, when you click on an annotation in the outline, nothing changes in the text pane.  This can be very disorienting if you have many annotations of the same type close together.  Some visual cue would be very helpful.  The default behavior in knowtator is to draw black lines above and below the span of the selected annotation.  Another provided option is to fade out all of the other annotations leaving only the selected annotation a bright color.  (I like the former better).  Additionally, it would be nice if the annotations related via type features to the selected annotation could be visualized in the text pane.  Knowtator does this by drawing dashed lines above and below the annotations that are related to the selected annotation.
issueID:UIMA-1184
type:Bug
changed files:
texts:filling in a type feature of type FSArray seems broken
I can't seem to add values to type features of type FSArray.  When I click the + icon in the Edit View I get a dialog that asks me to enter the size of the array.  I enter e.g. 2 and the dialog goes away but nothing happens except that entries are added to the Error Log.  The message says "Unhandled event loop exception" and the trace is included below.Knowtator provides three different ways to fill in one annotation as a feature value of another.  1)  select an annotation that has the feature to be filled in and then click on the annotation that will be the feature value.  A context menu will appear that provides an option to fill in the feature of the selected annotation with the annotation just clicked on.  2) Clicking on a + icon by the feature of the selected annotation brings up a dialog containing the annotations that can be used to satisfy the feature as consistent with the type system.  3) selecting a span of text and then clicking on a create icon by the feature of the selected annotation will create an annotation appropriate for the feature and fill it in with the newly created feature.  org.apache.uima.caseditor.core.TaeError: Unkown array type!at org.apache.uima.caseditor.editor.editview.EditViewPage$CreateFeatureStructrueValue.createFS(Unknown Source)at org.apache.uima.caseditor.editor.editview.EditViewPage$CreateFeatureStructrueValue.run(Unknown Source)at org.eclipse.ui.actions.BaseSelectionListenerAction.runWithEvent(BaseSelectionListenerAction.java:168)at org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection(ActionContributionItem.java:546)at org.eclipse.jface.action.ActionContributionItem.access$2(ActionContributionItem.java:490)at org.eclipse.jface.action.ActionContributionItem$6.handleEvent(ActionContributionItem.java:443)at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:66)at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:938)at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:3682)at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3293)at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:2389)at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:2353)at org.eclipse.ui.internal.Workbench.access$4(Workbench.java:2219)at org.eclipse.ui.internal.Workbench$4.run(Workbench.java:466)at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:289)at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:461)at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:149)at org.apache.uima.caseditor.Application.start(Unknown Source)at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:169)at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:106)at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:76)at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:363)at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:176)at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)at java.lang.reflect.Method.invoke(Unknown Source)at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:508)at org.eclipse.equinox.launcher.Main.basicRun(Main.java:447)
issueID:UIMA-1185
type:New Feature
changed files:
texts:Idea for Outline view
My suggestion for the outline view would be to borrow from Knowtator.  In Knowtator, the annotation schema is displayed as a tree structure displaying the name of each type in a hierarchy.  Each node in the tree displays the name of the type followed by a number corresponding to the number of annotations in that document of that type.  When you click on a node in the tree it provides you a context sensitive menu that gives you an option to create a new annotation for the currently highlighted text (if any) followed by options for selecting the annotations of that type (one menu item per annotation).
issueID:UIMA-1186
type:Bug
changed files:
texts:UIMA-AS update POMs to depend on 2.3.0 uima base version, and update uima-as poms to 2.3.0-incubating-SNAPSHOT
The maven build fails due to down-level dependencies in the Uima AS pom files.  upgrade base uima dependency and also uima-as version number to 2.3.0-incubating-SNAPSHOT
issueID:UIMA-1188
type:New Feature
changed files:uimaj-core/src/main/java/org/apache/uima/cas/impl/FSBooleanConstraintImpl.java
uimaj-core/src/main/java/org/apache/uima/cas/ConstraintFactory.java
uimaj-core/src/main/java/org/apache/uima/cas/FSBooleanConstraint.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/BooleanConstraint.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/ConstraintFactoryImpl.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FSBooleanConstraintImpl.java
texts:More constraints for primitive types
ConstraintFactory currently has the following methods:   createIntConstraint() createFloatConstraint() createStringConstraint()but there is corresponding constraints for bytes, shorts, longs or booleans.
issueID:UIMA-1189
type:Improvement
changed files:
texts:Remove excessive synchronization from Uima As
There are few places in the Uima AS code where synchronization is used for no reason. This may lead to locking code and potentially slowing down the processing.
issueID:UIMA-119
type:Improvement
changed files:
texts:Fix docs around result spec to reflect changed design
Result spec changed for v2.  Fix doc to reflect this.
issueID:UIMA-1190
type:Bug
changed files:
texts:Jmx Monitor in Uima AS not compiling when using Java 5
When compiling Uima AS with Java 5 there are compile errors in JmxMonitor code. It seems that in Java 5 the returned object from MBeanServerInvocationHandler.newProxyInstance(..) method needs to be typecast to the expected type. This is not required for Java 6.
issueID:UIMA-1191
type:Bug
changed files:
texts:Uima AS Reply Listener should be terminated when a delegate is disabled
If a remote delegate is disabled, its listener associated with a reply queue should be terminated. This seems to be not working although there is code that supposed to stop the listener. If the listener is not terminated, Spring attempts to recover the connection and dumps excessive exceptions into the log if the remote broker is no longer available. An example stack trace is:9/24/08 2:20:55 AM - 17: org.springframework.jms.listener.DefaultMessageListenerContainer.refreshConnectionUntilSuccessful: INFO: Could not refresh JMS Connection - retrying in 20000 msjavax.jms.JMSException: Could not connect to broker URL: tcp://137.226.36.96:10008. Reason: java.net.SocketTimeoutException: connect timed out at org.apache.activemq.util.JMSExceptionSupport.create(JMSExceptionSupport.java:33) at org.apache.activemq.ActiveMQConnectionFactory.createActiveMQConnection(ActiveMQConnectionFactory.java:280) at org.apache.activemq.ActiveMQConnectionFactory.createActiveMQConnection(ActiveMQConnectionFactory.java:214) at org.apache.activemq.ActiveMQConnectionFactory.createConnection(ActiveMQConnectionFactory.java:161) at org.springframework.jms.support.JmsAccessor.createConnection(JmsAccessor.java:188) at org.springframework.jms.listener.AbstractJmsListeningContainer.createSharedConnection(AbstractJmsListeningContainer.java:209) at org.springframework.jms.listener.AbstractJmsListeningContainer.refreshSharedConnection(AbstractJmsListeningContainer.java:197) at org.springframework.jms.listener.DefaultMessageListenerContainer.refreshConnectionUntilSuccessful(DefaultMessageListenerContainer.java:701) at org.springframework.jms.listener.DefaultMessageListenerContainer.recoverAfterListenerSetupFailure(DefaultMessageListenerContainer.java:683) at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.run(DefaultMessageListenerContainer.java:835) at java.lang.Thread.run(Thread.java:735)Caused by: java.net.SocketTimeoutException: connect timed out at java.net.PlainSocketImpl.doConnect(PlainSocketImpl.java:365) at java.net.PlainSocketImpl.connectToAddress(PlainSocketImpl.java:227) at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:214) at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:378) at java.net.Socket.connect(Socket.java:531) at org.apache.activemq.transport.tcp.TcpTransport.connect(TcpTransport.java:335) at org.apache.activemq.transport.tcp.TcpTransport.doStart(TcpTransport.java:303) at org.apache.activemq.util.ServiceSupport.start(ServiceSupport.java:49) at org.apache.activemq.transport.TransportFilter.start(TransportFilter.java:54) at org.apache.activemq.transport.TransportFilter.start(TransportFilter.java:54) at org.apache.activemq.transport.WireFormatNegotiator.start(WireFormatNegotiator.java:66) at org.apache.activemq.transport.TransportFilter.start(TransportFilter.java:54) at org.apache.activemq.transport.TransportFilter.start(TransportFilter.java:54) at org.apache.activemq.ActiveMQConnectionFactory.createActiveMQConnection(ActiveMQConnectionFactory.java:265) ... 9 moreA delegate was disabled ok, but sometime later Spring tried to recover the connnection dumping the exceptions above.
issueID:UIMA-1192
type:Improvement
changed files:
texts:runAECpp should include -lenient option
"-lenient" is an important option in the UIMA runAE tool, and should be added to the UIMACPP version of the tool.
issueID:UIMA-1193
type:Bug
changed files:
texts:Tagger throws occasional NPE
Tagger throws occasional NPE in Viterbi estimation.
issueID:UIMA-1194
type:Bug
changed files:
texts:JMX stats for UIMA AS seem inconsistent
The aggregate's JMX stats for remote delegate seem different from those shown by the delegate's JMX stats. Specifically, analysis times are different. These numbers should be the same in both. it appears that the numbers shown in the delegate's stats are always larger.
issueID:UIMA-1195
type:Bug
changed files:
texts:ConcurrentModificationException in CasCopier.copyCas()
I get a ConcurrentModificationException in the last line of the following snippet:public class MovingImageMerger extends JCasMultiplier_ImplBase{ public void process(JCas jcas) throws AnalysisEngineProcessException {   if (resultJCas != null) throw new AnalysisEngineProcessException();   resultJCas = getEmptyJCas();   CasCopier.copyCas(jcas.getCas(), resultJCas.getCas(), true);Here is the stack trace:Caused by: java.util.ConcurrentModificationException at org.apache.uima.cas.impl.FSIndexRepositoryImpl$PointerIterator.checkConcurrentModification(FSIndexRepositoryImpl.java:264) at org.apache.uima.cas.impl.FSIndexRepositoryImpl$PointerIterator.checkConcurrentModificationAll(FSIndexRepositoryImpl.java:275) at org.apache.uima.cas.impl.FSIndexRepositoryImpl$PointerIterator.moveToNext(FSIndexRepositoryImpl.java:311) at org.apache.uima.cas.impl.FSIndexRepositoryImpl$PointerIterator.inc(FSIndexRepositoryImpl.java:541) at org.apache.uima.cas.impl.FSIteratorWrapper.moveToNext(FSIteratorWrapper.java:67) at org.apache.uima.cas.impl.FSIteratorImplBase.next(FSIteratorImplBase.java:48) at org.apache.uima.util.CasCopier.copyCasView(CasCopier.java:140) at org.apache.uima.util.CasCopier.copyCas(CasCopier.java:101) at eu.sapir.contentmanagement.video.MovingImageMerger.process(MovingImageMerger.java:55) at org.apache.uima.analysis_component.JCasMultiplier_ImplBase.process(JCasMultiplier_ImplBase.java:58) at org.apache.uima.analysis_engine.impl.PrimitiveAnalysisEngine_impl.callAnalysisComponentProcess(PrimitiveAnalysisEngine_impl.java:375) ... 22 moreA hint for constructing a test case: while debugging, I noticed that the last feature structure to be copied before the error was of a type that had erroneously been defined as a subtype of Annotation.  It's not a textual annotation, and its begin and end fields are left at 0.  After I changed the definition to make the type a subtype of TOP, the ConcurrentModificationException went away.
issueID:UIMA-1196
type:Bug
changed files:
texts:Add support for binary serialization and deserialization in Uima AS
Uima AS needs faster serialization and deserialization logic for CASes destined for remote delegates. XMI serialization introduces a significant overhead. Modify Uima AS Serializer to use existing binary Serializer and Deserializer from Uima Core. Modify code that creates outbound jms messages to carry binary cargo instead of a String. Modify inbound code to recognize binary cargo and deserialize CAS using binary serialization.
issueID:UIMA-1197
type:Improvement
changed files:
texts:cleanup - replace StringBuffer with StringBuilder in those cases where synchronization is not needed

issueID:UIMA-1198
type:Bug
changed files:
texts:False msg referring to UIMA_HOME logged by first JUnit test
In testBrokerLifecycle a misleading message is printed, e.g. UIMA_HOME=(null)\bin\dd2spring.xslUIMA_HOME is not used and anyway this is not the value of it.
issueID:UIMA-1199
type:Bug
changed files:
texts:If a parallel flow involves colocated delegates the application hangs
Parallel flows can only run in parallel when the delegates are remote, but we should handle any colocated ones by running them sequentially in arbitrary order as synchronous UIMA does.  The spec says that the framework is not obliged to run them in parallel.  The alternative of rejecting the flow is undesirable as it can only be detected at run time since the flow controller may be user code.
issueID:UIMA-12
type:Improvement
changed files:
texts:Change JCas impl to use inner classes rather than _Type style classes
This cuts in half the number of Java source files for users, and is perhaps less confusing to users.
issueID:UIMA-120
type:Improvement
changed files:uimaj-core/src/main/java/org/apache/uima/cas/impl/DebugFSLogicalStructure.java
texts:Logical Structure view of CAS: show view name in unexpanded form of CAS
User requests the logical structures Eclipse debug for a CAS have its tostring method include the sofa name (if available).  This would show in the unexpanded CAS logical structure info, helping identify which view this CAS was
issueID:UIMA-1200
type:Bug
changed files:
texts:Optimize UIMA AS XMI Cas serialization by reusing an instance of a XML Parser
Current UIMA AS code creates an instance of XML parser for every CAS serialization/deserialization. Profiling revealed that creating a parser is CPU intensive. To avoid this create one or more instances of XML parser once and pool it for reuse.
issueID:UIMA-1201
type:Bug
changed files:
texts:UIMA Does Not Exit Due to threadGroupDestroyer Thread Waiting On Daemon Threads
The threadGroupDestroyer thread is causing my application to not exit when finished processing.  It's waiting on some threads from my database connection pool.  Those threads are daemon threads that won't end until the JVM shuts down.  The threadGroupDestroyer should not wait for daemon threads to end before destroying the thread group.  The relevant code is in lines 2518-2542 of CPMEngine.java
issueID:UIMA-1202
type:Bug
changed files:
texts:Test cases fail because of incorrect/missing text encoding handling
Testing on IBM mainframe under z/OS 10 reveals that some core test cases fail to handle text encoding correctly.  This works on other platforms because the test cases just use ascii characters, which happen to work for most platform encodings.  Not so on z/OS, where the platform encoding is ebcdic.
issueID:UIMA-1203
type:Bug
changed files:
texts:Add source code encoding to master pom
More fun with ebcdic.  Our source code will only compile on z/OS if the source code encoding is correctly set to utf-8 in the master pom.  Again, this works on most platforms now because most platform encodings are ascii compatible, and our source code is all ascii (hopefully).  No such luck on z/OS.
issueID:UIMA-1205
type:Bug
changed files:
texts:When Handling Invalid Message Uima AS Service Needs to Log Which Property Makes The Message Invalid
Uima AS needs to log the reason why the message is invalid. Currently the log just shows the InvalidMessageException with no detail at all. It is most likely due to a missing property in the message header. Also there is no information about where the invalid message came from.
issueID:UIMA-1206
type:Improvement
changed files:uimaj-examples/src/main/java/org/apache/uima/examples/cpe/FileSystemCollectionReader.java
texts:Add the capability to browse subdirectories to org.apache.uima.examples.cpe.FileSystemCollectionReader
Make the component org.apache.uima.examples.cpe.FileSystemCollectionReader able to browse sub-directories of the InputDirectory through an option.
issueID:UIMA-1207
type:New Feature
changed files:uimaj-core/src/main/java/org/apache/uima/cas/impl/Heap.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/CASImpl.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/CASImpl.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/CASSerializer.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/Heap.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/MarkerImpl.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/Serialization.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/StringHeap.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/XmiCasSerializer.java
uimaj-core/src/main/java/org/apache/uima/util/CasPool.java
texts:Support for Delta CAS format in binary (blob) serialization
In order to reduce the serialization overhead, UIMA-AS provides the option of using binary serialization  Providing the ability to allow a service to serialize only the changes made to the CAS will further reduce this overhead.
issueID:UIMA-1208
type:Bug
changed files:
texts:How to get the element type of a uima.cas.FSList feature
The documentation http://incubator.apache.org/uima/downloads/releaseDocs/2.2.2-incubating/docs/html/references/references.html#ugr.ref.xml.component_descriptor.type_system.featuresstates that in the type system descriptor one may use <elementType> to constraint the type of elements in both array and list features.However, if one gets the type system of a CAS &#91;myCas.getTypeSystem()&#93;,1) if the feature range is an array, he can retrieve the element type through the method Type.getComponentType()2) if the feature range is a list, there seems not to be any way to get the element type, since the method Type.getComponentType() returns null
issueID:UIMA-1209
type:Bug
changed files:
texts:Old 2.2.2 services cannot be used in parallel
New delta CAS support insists that remote services run in parallel must use delta CAS, but we should also support services still running 2.2.2
issueID:UIMA-121
type:Improvement
changed files:
texts:Documentation Formatting improvements
Use this issue for improving things like table layout proportions, etc.
issueID:UIMA-1210
type:New Feature
changed files:uimaj-examples/src/main/java/org/apache/uima/examples/xmi/XmiCollectionReader.java
texts:XmiCollectionReader fails when it encounters unknown types
When XmiCollectionReader is used as CollectionReader and it encounters types that are not present in the TypeSystems provided with the analysis engines, then it fails. There should be an option to silently ignore those errors and still load the CAS.
issueID:UIMA-1211
type:Improvement
changed files:
texts:Optimize UIMA-AS Logging by Testing The Log Level
Modify Uima As code to first test the log level before calling UIMAFramework.getLogger(CLASS_NAME).logrb(..). This has a potential for further performance gain while processing CASes.
issueID:UIMA-1212
type:Improvement
changed files:uimaj-core/src/main/java/org/apache/uima/cas/impl/FSIndexRepositoryImpl.java
texts:Optimize indexRepository methods getIndexedFS and flush
The getIndexedFS and flush methods currently iterate over all defined indexes. When the number of indexes is large, for example when there are many annotation types defined, this overhead becomes significant relative to lightweight annotator processing. By marking which indexes are actually used, it is possible to eliminate most of the overhead.
issueID:UIMA-1213
type:New Feature
changed files:
texts:UIMA-AS Client API needs additional JMX parameter - Time-waiting-for-CAS
Each instance of the UIMA-AS Client API has limited CAS pool size. If there are no free CASes in the pool, a client is blocked on the getCAS() method until a free CAS is available. The time-waiting-for-CAS needs to be included in the list of JMX parameters for the Client API.
issueID:UIMA-1214
type:New Feature
changed files:
texts:Enable use of *delta* BinaryCas for services
Bhavani added delta BinaryBlob serialization support to UIMA core. This needs to be utilized by UIMA AS.
issueID:UIMA-1215
type:Bug
changed files:
texts:The README for UIMA-AS refers to core UIMA documantation that is not in the build
We should refer users to the web for core UIMA documentation rather than non-existent files
issueID:UIMA-1216
type:Bug
changed files:
texts:UIMA AS Client Code Doesn&#39;t Release CAS While Handling Process Exception
UIMA AS client framework code caches a CAS before sending (async) request to UIMA AS service. When the reply is received the CAS is retrieved from the cache, the client (user) code is called via a listener and the CAS is subsequently released.  For synchronous calls the user code is responsible for each CAS release. When a reply containing an exception is received (for both sync and async send), the exception handler notifies the user code but never releases the CAS. This may lead to hangs and may impact performance since some CASes are never released.
issueID:UIMA-1217
type:Bug
changed files:
texts:entityProcessComplete returns null CAS on error
Given that the UIMA AS client API caches outgoing CASes while waiting for a service reply, instead of returning CAS=null on error, the outgoing CAS should be returned.
issueID:UIMA-1218
type:Bug
changed files:
texts:UIMA AS Primitive Controller Doesnt Report Exception During Initialization
Primitive Controller doesnt report exception during initialization of the AE if the descriptor contains invalid import. It's catch block needs to report the exception in the log/stdout and throw an exception up to Spring container.
issueID:UIMA-1219
type:Bug
changed files:
texts:UIMA AS Aggregate Hangs While Processing Multiple CASes from the Client
UIMA As hangs when processing multiple requests from a client. The scenario leading to the hang uses a complex aggregate that contains 1 nested colocated aggregate and 1 Cas Multiplier. The client application sends a CAS, receives a reply and subsequently sends the CPC. The client is in the loop sending CAS and CPC numerous times. A few tries succeed but eventually the aggregate hangs.
issueID:UIMA-122
type:Bug
changed files:
texts:Sofa mapping should be removed from Vinci services
Sofa mapping for services is only implemented for Vinci services connected via the aggregate engine code path. Mapping is not implemented for Vinci services connected via the CPM, nor for all other &#91;binary-CAS&#93; connected services.  This inconsistency is confusing for users and developers.There is a good work-around for services which do not have Sofa mapping in the communication path: implement the Sofa mapping in an aggregate descriptor on the service side.Also, there is a problem with the current Sofa mapping code if multiple "Default" Sofas are involved. Instead of fixing this bug, better would be to remove the code altogether and implement Sofa mapping for all services in a consistent way, along with configuration parameters.
issueID:UIMA-1220
type:Bug
changed files:
texts:CASes are not released from remote CAS Multipliers when the reply queue is remote
The ReleaseCas request is sent to the wrong queue so the CAS pool is soon exhausted and the CM hangs.  If the reply queue is local (tcp connected) all is well.  This has been fixed in the latest code which uses temporary queues (and so will be incompatible with the 2.2.2 build)
issueID:UIMA-1221
type:Improvement
changed files:
texts:PEAR Installer : how to run?
Maybe I didn't look in the right place, but in the section for the PEAR Installer, it didn't seem to mention how to run it.  (Is it an Eclipse plug-in?  A stand-alone executable?)  I did find it by deducing from all files in $UIMA_HOME/bin that it must be runPearInstaller.(bat|sh)
issueID:UIMA-1222
type:Improvement
changed files:
texts:PEAR Installer: environment variables
Some users may believe that if they add variables to those that end up in metadata/setenv.txt, that they become available to Components packaged within a PEAR.  As it turns out, they are available only if the Component explicitly looks in metadata/setenv.txt.  But I understand they ARE available as properties.  Perhaps some text explaining this could be added to the PEAR Packager documentation to help clarify.
issueID:UIMA-1223
type:Bug
changed files:
texts:Annotators should be initialized in the same thread that their process method will later be called on
It is more convenient if an annotator is initialized on the same thread that it is later called on.  Some components may use thread-local data and they won't work in UIMA-AS currently.  Another advantage of doing the initialization in the processing thread is that you could initialize multiple instances of the annotator in parallel instead of sequentially, which may be faster for a multi-core machine.
issueID:UIMA-1224
type:Bug
changed files:
texts:Exceptions received from a delegate don&#39;t identify their origin
Here's an exception in the client log that came from a remote delegate ... the only way I know that it is not a local exception is that I see a foreign class "org.gale.columbia.TopicSummarizer" deep in the stack trace.  We should add a line indicating which delegate returned the exception.  Perhaps we should also suppress the first trace as it doesn't carry any useful information about the error.11/4/08 5:49:27 PM - 4: org.apache.uima.aae.error.handler.ProcessCasErrorHandler.handleError: WARNING: {0}org.apache.uima.aae.error.UimaEEServiceException: org.apache.uima.analysis_engine.AnalysisEngineProcessException at org.apache.uima.adapter.jms.activemq.JmsOutputChannel.sendReply(JmsOutputChannel.java:761) at org.apache.uima.aae.error.handler.ProcessCasErrorHandler.sendExceptionToClient(ProcessCasErrorHandler.java:105) at org.apache.uima.aae.error.handler.ProcessCasErrorHandler.handleError(ProcessCasErrorHandler.java:483) at org.apache.uima.aae.error.ErrorHandlerChain.handle(ErrorHandlerChain.java:64) at org.apache.uima.aae.controller.PrimitiveAnalysisEngineController_impl.process(PrimitiveAnalysisEngineController_impl.java:479) at org.apache.uima.aae.handler.HandlerBase.invokeProcess(HandlerBase.java:125) at org.apache.uima.aae.handler.input.ProcessRequestHandler_impl.handleProcessRequestWithXMI(ProcessRequestHandler_impl.java:316) at org.apache.uima.aae.handler.input.ProcessRequestHandler_impl.handle(ProcessRequestHandler_impl.java:695) at org.apache.uima.aae.handler.input.MetadataRequestHandler_impl.handle(MetadataRequestHandler_impl.java:82) at org.apache.uima.adapter.jms.activemq.JmsInputChannel.onMessage(JmsInputChannel.java:549) at org.springframework.jms.listener.AbstractMessageListenerContainer.doInvokeListener(AbstractMessageListenerContainer.java:485) at org.springframework.jms.listener.AbstractMessageListenerContainer.invokeListener(AbstractMessageListenerContainer.java:442) at org.springframework.jms.listener.AbstractMessageListenerContainer.doExecuteListener(AbstractMessageListenerContainer.java:414) at org.springframework.jms.listener.AbstractPollingMessageListenerContainer.doReceiveAndExecute(AbstractPollingMessageListenerContainer.java:309) at org.springframework.jms.listener.AbstractPollingMessageListenerContainer.receiveAndExecute(AbstractPollingMessageListenerContainer.java:254) at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.invokeListener(DefaultMessageListenerContainer.java:871) at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.run(DefaultMessageListenerContainer.java:818) at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:885) at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:907) at java.lang.Thread.run(Thread.java:619)Caused by: org.apache.uima.analysis_engine.AnalysisEngineProcessException at org.gale.columbia.TopicSummarizer.process(TopicSummarizer.java:352) at org.apache.uima.analysis_component.CasAnnotator_ImplBase.process(CasAnnotator_ImplBase.java:56) at org.apache.uima.analysis_engine.impl.PrimitiveAnalysisEngine_impl.callAnalysisComponentProcess(PrimitiveAnalysisEngine_impl.java:375) at org.apache.uima.analysis_engine.impl.PrimitiveAnalysisEngine_impl.processAndOutputNewCASes(PrimitiveAnalysisEngine_impl.java:297) at org.apache.uima.aae.controller.PrimitiveAnalysisEngineController_impl.process(PrimitiveAnalysisEngineController_impl.java:338) ... 15 moreCaused by: java.io.FileNotFoundException: work/9.2.176.254_pvirga_20081104/BlankStory/webar20081104aljazeerareposrev_122www.aljazeera.netnewsTemplatesPostingsHumanRightsDetailedPage.aspx?FRAMELESS=false&NRNODEGUID={30F2C898-3504-4FBC-A7BC-4A66B26538BB}&NRORIGINALURL=%2FNR%2Fexeres%2F30F2C898-3504-4FBC-A7BC-4A66B26538BB.htm&NRCACHEHINT=Guest.txt (File name too long) at java.io.FileOutputStream.open(Native Method) at java.io.FileOutputStream.<init>(FileOutputStream.java:179) at java.io.FileOutputStream.<init>(FileOutputStream.java:70) at java.io.FileWriter.<init>(FileWriter.java:46) at org.gale.columbia.TopicSummarizer.process(TopicSummarizer.java:255) ... 19 more
issueID:UIMA-1225
type:Improvement
changed files:
texts:dot files should not be redistributed
These are intermediate files created during doxygen build.
issueID:UIMA-1226
type:Improvement
changed files:
texts:Further clarification of ICU license suggested
Robert Burrell Donkin writesa suggestion: the headers files in include are (mostly) marked 'All RightsReserved' but AIUI they are open source licensed.  perhaps it might beuseful to find some way of making this a little clearer (perhaps byadding a few words to the ICU section in LICENSE).
issueID:UIMA-1228
type:Bug
changed files:uimaj-core/src/main/java/org/apache/uima/cas/impl/XmiCasDeserializer.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/XmiCasDeserializer.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/XmiCasDeserializer.java
texts:Merging results from a parallel step fails when a feature is an array of pre-existing annotations
Found when doing 2.2.2-style merging (non deltaCas) of new arrays referencing preexisting annotations, but also fails with delta CASes.
issueID:UIMA-1229
type:Bug
changed files:
texts:Add Private (not shared) Cache to UIMA AS Controllers For Storing Intermediate State for Each CAS
UIMA AS uses one (shared) instance of a cache where intermediate state information is kept (and changed) for each CAS during processing. This cache is shared among all colocated components. In complex deployments involving colocated, multi-level aggregates CAS states changed by one aggregate cause problems in other aggregates. Particularly when making decisions when to release a CAS. In such deployments hangs may occur. Add a private (non-shared) cache to each UIMA AS controller where the state of each CAS is kept. CAS instance should be kept in the global InProcessCache that is shared by all colocated UIMA AS services.
issueID:UIMA-123
type:Task
changed files:uimaj-adapter-vinci/src/main/java/org/apache/uima/adapter/vinci/VinciAnalysisEngineService_impl.java
uimaj-adapter-vinci/src/main/java/org/apache/uima/adapter/vinci/VinciBinaryAnalysisEngineService_impl.java
texts:Remove VinciCasObjectProcessorService_impl
The class VinciCasObjectProcessorService_impl just redirects to VinciAnalysisEngineService_impl and exists only for historical purposes.  It should now be deleted.
issueID:UIMA-1230
type:Improvement
changed files:uimaj-core/src/main/java/org/apache/uima/resource/ResourceManager.java
uimaj-core/src/main/java/org/apache/uima/resource/impl/ResourceManager_impl.java
uimaj-core/src/main/java/org/apache/uima/resource/metadata/impl/FsIndexCollection_impl.java
uimaj-core/src/main/java/org/apache/uima/resource/metadata/impl/TypePriorities_impl.java
uimaj-core/src/main/java/org/apache/uima/resource/metadata/impl/TypeSystemDescription_impl.java
texts:When parsing an aggregate descriptor, should parse a shared type system file only once
Frequently an aggregate will contain several primitives that all import a single shared type system descriptor.  Currently, the shared type system descriptor will be separately parsed for each of the primitives, and each primitive descriptor will contain a separate copy of the TypeSystemDescription object.When there are a large number of primitives and a large number of types in the shared type system, this parsing takes a long time and the resulting TypeSystemDescription objects consume a lot of memory.Instead, we could keep a cache of imports that have already been parsed, and we can reuse the same TypeSystemDescription object within each of the primitive descriptors rather than having a separate copy.
issueID:UIMA-1231
type:Bug
changed files:
texts:UIMA AS Doesnt Expose to JMX Sizes of Java Queues Used For Internal Messaging
Uima AS uses java queues for internal messaging. The depths of these queues are not visible in jmx. Add JMX support to both input and output queues. Modify JMX Monitor to show the depth of the java queues.
issueID:UIMA-1232
type:Bug
changed files:
texts:Fix Synchronization Problem in the UIMA AS code
UIMA AS Aggregate code synchronizes code that sends a reply (CAS) back to a client. Part of sending the CAS back to the remote client is serialization of the CAS. This takes time. While the CAS is being serialized, other threads are blocked causing a bottleneck. Move the code that sends a reply outside of the synchronized block.
issueID:UIMA-1233
type:Bug
changed files:
texts:Log Outgoing Message Sizes Destined for Remote Queue
Log the size of CAS before sending it to a remote queue.
issueID:UIMA-1234
type:Bug
changed files:
texts:Cleanup Testcases to Handle ServiceShutdownException Quietly
UIMA AS testcases dump ServiceShutdownException to stdout. Modify testcase code to ignore this exception. Service sends a ShutdownException to its client when it terminates.
issueID:UIMA-1235
type:New Feature
changed files:
texts:Changes for the first UIMACPP release.
Download links, getting started guide, etc.
issueID:UIMA-1236
type:Bug
changed files:
texts:Fix a hang in the  testProcessParallelFlowWithDelegateDisable testcase
This testcase occasionally hangs after the delegate is disabled and its reply queue listener killed.
issueID:UIMA-1237
type:Bug
changed files:
texts:Fix "Cas Not Found In CasManager Cache" Error in the Parallel Step
There is an exception when processing a secondary reply from a delegate in a parallel step. The exception indicates that the CAS id received in a reply message from one of the delegates in the parallel step does not exist in the cache. The exception happens in the testcase that tests disable of one of the delegates in the parallel step.
issueID:UIMA-1238
type:Bug
changed files:
texts:Fix NullPointerException When Sending Reply to Uima AS Client
There is a NPE when sending a reply back to a client from Uima AS aggregate. Caused by: java.lang.NullPointerException at java.util.concurrent.ConcurrentHashMap.put(ConcurrentHashMap.java:846) at org.apache.uima.aae.spi.transport.vm.UimaVmMessage.addStringProperty(UimaVmMessage.java:52) at org.apache.uima.aae.controller.AggregateAnalysisEngineController_impl.sendVMMessage(AggregateAnalysisEngineController_impl.java:1594) at org.apache.uima.aae.controller.AggregateAnalysisEngineController_impl.replyToClient(AggregateAnalysisEngineController_impl.java:1552) at org.apache.uima.aae.controller.AggregateAnalysisEngineController_impl.finalStep(AggregateAnalysisEngineController_impl.java:1358) ... 13 moreIt seems that the code is trying to set a property with a value of NULL which is not allowed
issueID:UIMA-1239
type:Bug
changed files:
texts:Fix "Consumer Closed" Exception Thrown By ActiveMQ
ActiveMQ seems to close a connection to a broker if the connection is not actively used. This results in different types of exceptions thrown by a listener on an input queue. Sometimes the exception is " Broken Pipe", in other times "Consumer Closed". This error prevents the service from receiving messages and leads to a hang as CASes sent by a client never come back
issueID:UIMA-124
type:Improvement
changed files:
texts:Maven Eclipse setup - missing javadoc / src linkages for Eclipse files
When doing developement, it is convenient to use the Eclipse features which show the Javadocs and/or source (when you click on F3).  This is broken for the Maven - repository items.  For instance, all the GUI classes/methods/fields for Eclipse have no attached source or documentation.
issueID:UIMA-1240
type:Bug
changed files:
texts:Deployment Descriptor Editor resets CAS Pool size for aggregates when you change number of instances of a delegate
I have an async aggregate with multiple delegates.  When I set the number of instances of one of the delegates (it happened to be a CAS Multiplier, but I'm not sure that matters), the DDE automatically reset the CAS Pool size of the entire aggregate to the same value!  It took me quite a while to figure out that this was the reason my application started running more slowly.
issueID:UIMA-1241
type:New Feature
changed files:
texts:UIMA AS Service Should Expose Cas Pool Size for Monitioring via JMX
The internal Cas Pool of the UIMA AS service needs to be exposed via JMX for monitoring. Currently, only the Cas Multiplier's Cas Pool is exposed. All Cas Pools are JMX enabled already. Modifiy JmxMonitor to query JMX Server for the Cas Pool size.
issueID:UIMA-1242
type:Bug
changed files:uimaj-core/src/main/java/org/apache/uima/cas/impl/TypeSystem2Xml.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/TypeSystemImpl.java
texts:Array-valued features are written out incorrectly when serializing type system
When serializing a type system that contains type with array-valued features, type declarations as below are generated:<name>org.apache.uima.test.Test</name><description/><supertypeName>uima.tcas.Annotation</supertypeName><features><featureDescription><name>sofa</name><description/><rangeTypeName>uima.cas.Sofa</rangeTypeName></featureDescription><featureDescription><name>begin</name><description/><rangeTypeName>uima.cas.Integer</rangeTypeName></featureDescription><featureDescription><name>end</name><description/><rangeTypeName>uima.cas.Integer</rangeTypeName></featureDescription><featureDescription><name>array</name><description/><rangeTypeName>uima.tcas.Annotation[]</rangeTypeName></featureDescription></features></typeDescription><typeDescription><name>uima.tcas.Annotation[]</name><description/><supertypeName>uima.cas.FSArray</supertypeName></typeDescription></types>These are of course incorrect and can't be read back in.
issueID:UIMA-1243
type:Bug
changed files:
texts:testFindAbsoluteUrl(org.apache.uima.resource.metadata.impl.Import_implTest) fails on windows
URL comparison fails because device is in capitals (C in one instance, and in lowercase (c in the other.  Not sure how to fix this.-------------------------------------------------------------------------------Test set: org.apache.uima.resource.metadata.impl.Import_implTest-------------------------------------------------------------------------------Tests run: 3, Failures: 1, Errors: 0, Skipped: 0, Time elapsed: 0.031 sec <<< FAILURE!testFindAbsoluteUrl(org.apache.uima.resource.metadata.impl.Import_implTest)  Time elapsed: 0.016 sec  <<< FAILURE!junit.framework.AssertionFailedError: expected:<file:/C:/code/uima/uimaj-core/foo/bar/MyFile.xml> but was:<file:/c:/code/uima/uimaj-core/foo/bar/MyFile.xml> at junit.framework.Assert.fail(Assert.java:47) at junit.framework.Assert.failNotEquals(Assert.java:282) at junit.framework.Assert.assertEquals(Assert.java:64) at junit.framework.Assert.assertEquals(Assert.java:71) at org.apache.uima.resource.metadata.impl.Import_implTest.testFindAbsoluteUrl(Import_implTest.java:124) at org.apache.uima.resource.metadata.impl.Import_implTest.testFindAbsoluteUrl(Import_implTest.java:124) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25) at java.lang.reflect.Method.invoke(Method.java:585) at junit.framework.TestCase.runTest(TestCase.java:154) at junit.framework.TestCase.runBare(TestCase.java:127) at junit.framework.TestResult$1.protect(TestResult.java:106) at junit.framework.TestResult.runProtected(TestResult.java:124) at junit.framework.TestResult.run(TestResult.java:109) at junit.framework.TestCase.run(TestCase.java:118) at junit.framework.TestSuite.runTest(TestSuite.java:208) at junit.framework.TestSuite.run(TestSuite.java:203) at sun.reflect.GeneratedMethodAccessor313.invoke(Unknown Source) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25) at java.lang.reflect.Method.invoke(Method.java:585) at org.apache.maven.surefire.junit.JUnitTestSet.execute(JUnitTestSet.java:213) at org.apache.maven.surefire.suite.AbstractDirectoryTestSuite.executeTestSet(AbstractDirectoryTestSuite.java:138) at org.apache.maven.surefire.suite.AbstractDirectoryTestSuite.execute(AbstractDirectoryTestSuite.java:125) at org.apache.maven.surefire.Surefire.run(Surefire.java:132) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25) at java.lang.reflect.Method.invoke(Method.java:585) at org.apache.maven.surefire.booter.SurefireBooter.runSuitesInProcess(SurefireBooter.java:290) at org.apache.maven.surefire.booter.SurefireBooter.main(SurefireBooter.java:818)
issueID:UIMA-1244
type:Bug
changed files:
texts:PDF for Tutorials and Users&#39; Guides printing fails on page 32
The PDF for the Tutorials and Users' Guides fails to print with Acrobat Reader 8 and 9 (may print with earlier versions - not confirmed).   Generating the PDF with the lastest release of Apache FOP (0.95) seems to avoid this issue.  Move the doc generation to 0.95 and check the resulting docs print OK.See discussion: http://markmail.org/message/rv236b6gxxsxrhg6
issueID:UIMA-1245
type:Bug
changed files:
texts:Processing order of parent CAS different on UIMA and UIMA AS
Arron Kaplan raised the question of when parent CASes are processed relative to their children. See http://markmail.org/message/5cop7iv2nshouhgs  As of now, the processing order for a multi-threaded UIMA AS aggregate is different than that for a single-threaded UIMA aggregate.A discussion with Burn, Adam, Jerry, Marshall and myself concluded that the default processing order for UIMA AS should be changed to be the same as in UIMA, in order to have the same application behavior for both. This will be done by suspending flow of a parent CAS after it is returned from a CasMultiplier delegate until all its children CASes have finished processing.However, there also needs to be a UIMA AS deployment option for CasMultiplier delegates that allows the parent CAS to resume processing immediately after being returned from the CM. This option is needed to enable parallel processing.
issueID:UIMA-1246
type:Bug
changed files:
texts:Error handling for CASes generated in an aggregate needs clarification.
Burn raised the question of error handling for CM children within a multi-threaded UIMA AS aggregate. A summary of discussion with Burn, Adam, Jerry, Marshall and Eddie is below.A child CAS is a CAS that was generated by a CasMultiplier delegate within the same aggregate. The child's parent CAS will never be returned by an aggregate until all processing of it's children is completed.A child CAS may encounter an error condition while being processed by a delegate. If the delegate error handling results in a non-recoverable error, processing of the child's parent CAS will be stopped and the error report will be returned against that parent CAS. If the parent CAS is itself a child CAS, the error will be propagated to its parent CAS.Note:The parent CAS(es) may have other outstanding children in play (currently being processed). Our discussion touched on but did not fully analyze whether processing on these children should continue or be stopped. More discussion needed.
issueID:UIMA-1247
type:Bug
changed files:uimaj-core/src/main/java/org/apache/uima/internal/util/JmxMBeanAgent.java
texts:MBean Registration not thread-safe
If you create multiple instances of the same Analysis Engine simultaneously in different threads, it often results in WARNING messages being written to the log file about failed JMX MBean registration.  These don't cause the AE to fail, but the messages are disconcerting, especially since they contain the entire stack trace.  When logging is going to the console these messages can be mistaken for serious errors.At the very least the warning should not contain the stack trace so it doesn't look as threatening.  Better would be to fix the MBean registration so it does not encounter these problems.
issueID:UIMA-1248
type:Bug
changed files:uimaj-core/src/main/java/org/apache/uima/resource/impl/ResourceManager_impl.java
texts:ResourceManager initialization is not thread-safe
If multiple threads concurrently call UIMAFramework.produceAnalysisEngine and pass the same instance of ResourceManager as an argument, you can get intermittent exceptions in the ResourceManager such as:java.lang.ArrayIndexOutOfBoundsException  at java.lang.System.arraycopy(Native Method)  at java.util.ArrayList.ensureCapacity(ArrayList.java:170)  at java.util.ArrayList.add(ArrayList.java:351)  at org.apache.uima.resource.impl.CasManager_impl.addMetaData(CasManager_impl.java:82)  at org.apache.uima.analysis_engine.impl.AnalysisEngineImplBase.initialize(AnalysisEngineImplBase.java:115)  at org.apache.uima.analysis_engine.impl.AggregateAnalysisEngine_impl.initialize(AggregateAnalysisEngine_impl.java:126)The workaround is to synchronize the calls to UIMAFramework.produceAnalysisEngine.   However, this is suboptimal if annotator initialization is expensive and you want it to be run in parallel on multiple cores.  We should consider adding synchronization to the ResourceManager (and the classes it delegates to such as CasManager) to allow this to work.
issueID:UIMA-1249
type:Improvement
changed files:uimaj-core/src/main/java/org/apache/uima/UIMARuntimeException.java
uimaj-core/src/main/java/org/apache/uima/resource/impl/CasManager_impl.java
uimaj-core/src/main/java/org/apache/uima/resource/impl/CasManager_impl.java
texts:CasManager_impl logic for lazy merge of the type system could lead to excessive work or missed errors
The CasManager_impl class is sometimes (mostly?) (but not always) used when assembling a pipeline of UIMA components.  There is one instance of this associated with each Resource Manager instance.  (PearWrapper versions of the ResourceManager share this component).It has 2 phases.  At "initialization", its method addMetaData is repeatedly called as a part of the initialization phase of components being assembled to run under one ResourceManager instance, to collect all the metadata from the components (e.g., their individual type systems, type priorities, and index definitions).At the first call that requires the merged result, e.g. getCasDefinition(), the class merges all the collected metadata and uses it to produce the CAS's type system, indexes, etc.  After this first call, additional calls to addMetaData which attempt to add new things not already in the merge, should result in an error.  In the current implementation, the call to addMetaData in this case not only won't result in any error, but it will reset the class instance, so that a subsequent call to get the CAS definition will result in merging being again called, and a new, non-identical merged result will be returned.  This could result in CASes in a pool, for instance, having different type systems.Normally, this sequence will never happen; however, in the multi-threaded case, where initialization and processing could occur at the same time across multiple instances, it could happen that addMetaData could be called by a thread still initializing, while another thread has already obtained the "final" merged CAS definition.  In these cases, the addMetaData call could be "ignored", but in the general case, one would need to check to see if the metaData being added would change the existing type system, and throw an error if it did.
issueID:UIMA-125
type:Improvement
changed files:
texts:Apache UIMA client should be able to communicate with IBM UIMA (1.x or 2.0) service
For ease of migration it is important that an application running Apache UIMA should be able to call services deployed under previous versions of UIMA.Previous discussions with Eddie have indicated this would be fairly straightforward for single-Sofa CASes, not necessarily for CASes containing multiple Sofas.  Possibly support for single-Sofa CASes only is sufficient, as that would still help migration for the vast majority of UIMA users.
issueID:UIMA-1250
type:Bug
changed files:uimaj-core/src/main/java/org/apache/uima/analysis_engine/impl/AggregateAnalysisEngine_impl.java
texts:Some initialization messages may not appear as the Logger object changes during initialization
In the initialize method in AggregateAnalysisEngine_impl the logger object returned by the local getLogger() method changes ... for the init_begin msg it is correct, but after initASB has been called when the init_successful msg is logged the logger object is the one for the ASB_impl class.  All 3 implementations of AnalysisEngine use the getLogger() method in Resource_ImplBase which gets it from its local UimaContext ... but this is changed during initialization.
issueID:UIMA-1251
type:Bug
changed files:uimaj-core/src/main/java/org/apache/uima/analysis_engine/asb/impl/ASB_impl.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/asb/impl/FlowControllerContainer.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/impl/AggregateAnalysisEngine_impl.java
texts:If one delegate in an aggregate uses a JMS service descriptor and another fails to initialize, the JVM fails to terminate
When initialization of an aggregate fails we need to give the successful delegates the opportunity to release their resources.  Critical for JMS service adapters as they create a thread that waits on replies from the remote service.  Reported as a runAE hang by Jerry Quinn.
issueID:UIMA-1253
type:Bug
changed files:
texts:UIMA-AS Can&#39;t run Aggregate containing a CAS Consumer delegate
I have an aggregate that contains a CAS Consumer as a delegate.  When I deploy this as an async aggregate in UIMA-AS, it complains:java.lang.ClassCastException: org.apache.uima.collection.impl.CasConsumerDescription_impl   at org.apache.uima.aae.controller.PrimitiveAnalysisEngineController_impl.assignServiceMetadata(PrimitiveAnalysisEngineController_impl.java:165)  at org.apache.uima.aae.controller.PrimitiveAnalysisEngineController_impl.initializeAnalysisEngine(PrimitiveAnalysisEngineController_impl.java:143)
issueID:UIMA-1254
type:Bug
changed files:
texts:UIMA AS Aggregate ServiceInfo JMX Component is Missing  Broker URL
UIMA AS Aggregate registers ServiceInfo MBean with JMX. One of its attributes is Broker URL which contains a URL of the service Broker. This attribute is not set. The missing attributes breaks Jmx Monitor.
issueID:UIMA-1255
type:Bug
changed files:
texts:Modify UIMA-AS Aggregate to Handle Cas Not Found Error
Catch Cas Not Found exception in the finalStep(), log it and return. This exception can occur when one thread is processing a child of an input CAS in parallel with another thread processing a second child of the same CAS. The first thread may remove the input CAS before the second thread completes.When this happens, the second thread eventually will try to fetch the input CAS but by that time the CAS no longer exists. An exception is thrown and send through the error handler which reports it to a client. This exception should be handled by the aggregate and not sent to the client.
issueID:UIMA-1256
type:Bug
changed files:uimaj-core/src/main/java/org/apache/uima/cas/impl/XmiCasDeserializer.java
texts:UIMA-AS XMI serialization loses items appended to an FSList
I have an FSList that contains 2 FeatureStructures.  I send it to a remote annotator that creates approximately 40 new FeatureStructures and appends them to the end of the FSList.  It also adds these new FSs to the indexes.When I use xmi serialization, the CAS comes back without the new FSs having been added to the FSList, although I do see them in the indexes.  When I use binary serialization, all works fine.
issueID:UIMA-1257
type:Improvement
changed files:uimaj-core/src/main/java/org/apache/uima/util/CasCreationUtils.java
uimaj-core/src/main/java/org/apache/uima/util/CasCreationUtils.java
texts:Type System Merging Should Produce Consistent Ordering of Types
Currently when type systems are merged across annotators, the ordering of the types produced by the merge method is not defined, and varies according to the ordering in which the individual type system descriptors are passed to the merge method.  The ordering depends on the order in which individual AEs are initialized, which is also not defined, and may even vary according to JVM version.One reason to improve this is that UIMA-AS has a feature to allow binary serialization, but it requires that type systems be identical on both sides of the connection, and it is difficult to ensure this if ordering cannot be relied on.
issueID:UIMA-1258
type:Improvement
changed files:uimaj-core/src/main/java/org/apache/uima/util/CasCopier.java
uimaj-core/src/main/java/org/apache/uima/util/CasCopier.java
texts:Optimize performance of CasCopier when input and output TypeSystems are the same
The CasCopier can spend a lot of time looking up type and feature handles, which is wasted when the TypeSystems of the input and output CASes are identical.  This should be optimized so that type and feature handles from the source CAS can be used in the target CAS whenever they share a TypeSystem object.
issueID:UIMA-1259
type:Bug
changed files:
texts:Service MBean methods for accessing UIMA-CPP JMX statistics need to be synchronized
The org.apache.uima.aae.controller.UimacppServiceManagement class implements the service MBean, which  reports JMX statistics of UIMA-CPP engines. Some of the 'get...()' methods of this class modify the state of the class instance, other 'get...()' methods access modified instance variables. To ensure proper access to JMX statistics of UIMA-CPP engines, all the 'get...()' methods of this class need to be synchronized.
issueID:UIMA-126
type:Improvement
changed files:
texts:add news section to the website

issueID:UIMA-1260
type:Improvement
changed files:
texts:[SimpleServer] Expose some "private" variables and method as "protected" so that new subclasses for UIMA-AS can be defined
See comment in UIMA-1156 (http://issues.apache.org/jira/browse/UIMA-1156)
issueID:UIMA-1262
type:Improvement
changed files:
texts:Make changes to superPoms active before they are *installed*
The maven system allows refactoring things using an inheritance tree.  We use this capability via a hierarchy starting with uimaj project's POM. We also have a "flat" layout for subprojects, following Eclipse conventions.  When running maven on a component, say, uimaj-ep-configurator, its POM has a parent POM.  This parent is "looked up" using the maven system of identifying artifacts, in the maven repository chain, starting with the local repository.  This means that if you change any of the super POMs in the chain, those changes are ignored until you do a "mvn install" on those POMs.  The work-around was to do a "mvn -N install" in the directory where the changed POM was.  The -N flag says just do the install on the POM, and skip any sub-processing of the aggregated "modules" (if any) that the POM specified using the <modules> element.Recently, while trying to improve the maven builds, I (again) forgot this fact, and wondered why my changes to the superPom were not having any effect.  To overcome this (for future maintainers so they won't suffer from this), add an optional <relativePath> element to the <parent> element of all the POMs in the uimaj and uimaj-as projects.  (Perhaps this should also be done, at some point, for the other projects too, but that can be another Jira).The <relativePath> is a relative path to the directory containing the parent POM, and will be tried first before looking up the POM in the repositories.
issueID:UIMA-1264
type:Bug
changed files:
texts:Regex annotator goes into infinite loop on patterns that match the empty string
When a regex matches the empty string (e.g., a* matching against bbbb), and the match strategy is "matchAll", the regex annotator goes into an infinite loop.
issueID:UIMA-1265
type:Bug
changed files:
texts:Incomplete Metadata Returned From UIMA AS Primitive Service When Deployed With Synchronous Aggregate
When a primitive service is deployed with a descriptor containing UIMA synchronous aggregate, the getMeta request returns an incomplete metadata. The type system appears to be missing.
issueID:UIMA-1266
type:Bug
changed files:uimaj-core/src/main/java/org/apache/uima/resource/metadata/ProcessingResourceMetaData.java
texts:AnalysisEngineMetaData.getTypeSystem() returns null
When "in" is an XMLInputSource for an analysis engine descriptor, the following returns null if it's an aggregate AE:UIMAFramework.   getXMLParser().   parseAnalysisEngineDescription(in).   getAnalysisEngineMetaData().                        getTypeSystem()Though I understand the reason for this (an aggregate AE's type system is just the union of its delegates' type systems, and isn't described explicitly in the aggregate descriptor), it would be more convenient if it worked for aggregates too.At the least, the documentation should reflect this limitation.
issueID:UIMA-1267
type:New Feature
changed files:uimaj-core/src/main/java/org/apache/uima/pear/tools/PackageInstaller.java
uimaj-core/src/main/java/org/apache/uima/pear/tools/PackageInstaller.java
texts:Pear installer: expose the ability to install pear file without intermediate component ID

issueID:UIMA-1268
type:Bug
changed files:uimaj-core/src/main/java/org/apache/uima/pear/util/FileUtil.java
texts:Pear installer can&#39;t detect encoding of UTF-8 XML file
The pear installer needs to detect file encoding for the $main_root replacement it's doing.  This does not work for at least one xml file I have, for no reason that I'm able to determine.  Instead of falling back on some default and try with that, the pear installer just bombs.
issueID:UIMA-1269
type:Bug
changed files:
texts:NPE when using a C++ service deployed via JNI
C++ services don't support delta CAS so the JNI wrapper clears the Marker before uploading the C++ CAS but then the service crashes when trying to return a delta CAS to its caller.  May also have a problem in an aggregate if one of its services does not support delta CAS ... need to invalidate the input Marker and make the aggregate return a full CAS.  Should also create a fresh Marker for following delegates so they can return delta CASes.
issueID:UIMA-127
type:Improvement
changed files:
texts:Add conference/workshop section to web site
Add conference section to website (plus initial content).
issueID:UIMA-1270
type:Bug
changed files:
texts:runRemoteAsyncAE uses binary serialization which is not supported for native CPP services
Default serialization should be xmi with binary an option
issueID:UIMA-1271
type:Bug
changed files:
texts:UIMA-AS Should Use TextMessage Only for GetMeta Request and Reply
UIMA-AS is using BytesMessage for getMeta request and response if it is configured to use binary serialization. GetMeta messages should always be passed in a TextMessage for compatibility with older services. The GetMeta reply should also include a flag that indicates service support of binary serialization. The client will not use binary serialization (even if is configured with binary) if the service says that it doesnt  support it.
issueID:UIMA-1272
type:Bug
changed files:
texts:Change Prefetch Value On a Temp Queue Connection Used By UIMA AS Client API
Uima AS client API uses default prefetch (meaning 1000) on a connection to the temp reply queue. This may increase a memory footprint of a client since the high prefetch value directs the broker to send many messages to the activemq internal buffer on the client side. Use explicit prefetch with value of 1 to limit number of messages the broker sends to the internal buffer.
issueID:UIMA-1273
type:Bug
changed files:uimaj-core/src/main/java/org/apache/uima/analysis_engine/impl/PearAnalysisEngineWrapper.java
uimaj-core/src/main/java/org/apache/uima/pear/tools/InstallationController.java
uimaj-core/src/main/java/org/apache/uima/pear/tools/PackageBrowser.java
texts:Pear runtime pulls in all jar files in pear lib directory, no matter if they&#39;re on the classpath or not
The pear runtime will not only use the classpath as defined in metadata/install.xml, it will also pick up any jar in the lib directory.  It even recurses down into subdirectories.  This is undocumented, and most unexpected.I chatted with Michael about this.  He thinks it may be because the same code that creates the classpath in the pear packager is used in the runtime.  The packager does collect all jar files it can find and puts them in the classpath, and the pear file.  That's fine for the packager, but not the runtime.  We should either have an explicit classpath, or use all jar files in the lib dir, but not both.
issueID:UIMA-1274
type:Improvement
changed files:
texts:Add binary serialization option to JMS service descriptor
Given the performance optimized binary serialization method now available, enable its use by the JMS service adapter.The JMS service adapter allows UIMA aggregates and applications like CVD to access a UIMA AS service.
issueID:UIMA-1275
type:Bug
changed files:
texts:Mistake in CAS Multiplier documentation
The UIMA Tutorial and Developers' Guides says in 7.1.1.:"If hasNext returned true, the framework will call the CAS Multiplier's next method. The CAS Multiplier creates a new CAS (we will see how in a moment), populates it, and returns it from the hasNext method."Should be "... and returns it from the next method", right ?
issueID:UIMA-1276
type:Bug
changed files:
texts:XMI files are opened by default with the text editor and not with the cas editor
With eclipse 3.4 xmi and xcas files are opended by default with the built in eclipse text editor and not with the cas editor.
issueID:UIMA-1277
type:Bug
changed files:
texts:CasEditor line length setting is ignored
Together with eclipse 3.4 the Cas Editor ignores the line length hint.
issueID:UIMA-1278
type:Improvement
changed files:
texts:Add ability to report JMS reconnection status
The ControllerCallbackListener needs to be extended to provide APIs to report JMS reconnection status.At present this status is reported by C++ services via the UimacppServiceController bean,
issueID:UIMA-1279
type:Bug
changed files:
texts:UIMA AS Client Not Handling Errors When Deploying Synchronous Aggregate
Uima AS Client hangs while handling errors that occur during a deployment of synchronous aggregate. Need new testcases to test deployment of synchronous aggregate using jms service descriptor.
issueID:UIMA-128
type:Bug
changed files:uimaj-core/src/main/java/org/apache/uima/cas/impl/FeatureStructureImpl.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/CASImpl.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/CASMgrSerializer.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FeatureStructureImpl.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/LowLevelCAS.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/LowLevelTypeSystem.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FsGeneratorArray.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/TypeSystem2Xml.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/TypeSystemImpl.java
uimaj-core/src/main/java/org/apache/uima/util/TypeSystemUtil.java
texts:ll_setStringValue not checking if feature range is subtype of String with Allowed Values, not doing Allowed Value check
The JCas code generated for setting string values uses the ll_setStringValue method in the CASImpl.  This method does not check if the type of the feature being set is a subtype of String with allowed values, and doesn't throw the needed exception if the item being set is not in the set of allowed values.
issueID:UIMA-1280
type:Bug
changed files:
texts:Missing message key in CPM at FINEST logging
The message key "UIMA_CPM_pipeline_exception__FINEST" is used in org.apache.uima.collection.impl.cpm.engine.ProcessingUnit but is not in the properties file org.apache.uima.collection.impl.cpm.cpm_messages
issueID:UIMA-1281
type:Bug
changed files:uimaj-core/src/main/java/org/apache/uima/resource/metadata/ConfigurationParameterSettings.java
uimaj-core/src/main/java/org/apache/uima/uimacpp/UimacppAnalysisComponent.java
texts:Parameter overrides ignored for C++ annotators
Should document this restriction (and any others) if we don't fix it.
issueID:UIMA-1282
type:Improvement
changed files:
texts:Improve web-site
Improve the web-site, keeping the anakia build process.  Change the build.xml to not copy files from xdoc to doc; this serves no purpose other than to take up room in SVN.  Files which only need "copying" are now put directly only in docs/.   Add a base.css style sheet, and make use of it, moving much of the styling info from the site.vsl macros used by anakia/velocity to the css.  Change the look/feel to one suggested by a professional web designer.  Although it uses some color schemes (derived from the UIMA logo), have alternative cues where possible for color blind people.  Reorganize the left-hand navigation bar a bit, keeping more frequently referenced links toward the top.  Redo the top UIMA logo to be more compact, and make it clickable - to go to home page (consistent with many other Apache websites).  Decorate links that go off-site, and specify opening in new page.Generate the News page table of contents links from the news items themselves.Generate the download page entries from xml specs in the project.xml file.Add on the download page where appropriate information about platform.  For instance, there are a couple of components (the CAS Editor, and UIMACPP) that have binaries generated for particular platforms.Redo main page - add a high level "picture" of everything on the site, divided up into frameworks, components, andInfrastructure, in recognition that the project has grown beyond just a framework.  Add page for Annotators and a page for tools and servers (content mainly from Sandbox page),Add info on viewing mailing lists as forums and/or blogs.  Add a site search capability at the top of each page, and put on the bottom a set of common links, including a new one to a "privacy policy" (as discussed on legal-discuss).  Add a contact-us link (sends mail to uima-dev).
issueID:UIMA-1283
type:Improvement
changed files:
texts:Improve POMs so that eclipse build no longer requery maven repos once a day
Currently, a maven build will query the main maven repo to see if a more recent date of an eclipse jar at the particular version number is available.  Since we specify versions by exact version numbers, this is useless to do (because eclipse jars in the main maven repo are not updated for the same version).  So set this repo access update policy to "never".Also, set the repo for eclipse jars to not use "snapshots" - we only build with released eclipse jars.These two fixes should speed up the maven builds of uima by skipping the pinging of maven central for all the eclipse jars we depend on, once a day.
issueID:UIMA-1284
type:Bug
changed files:
texts:PrimitiveAnalysisEngine_impl.collectionProcessComplete() does not log RuntimeExceptions or Errors
The PrimitiveAnalysisEngine_impl has a few methods that hide all unchecked Throwables thrown from annotators.  For example, collectionProcessComplete() will silently fail if the underlying AnalysisComponent.collectionProcessingComplete() method throws a RuntimeException.  public void collectionProcessComplete() throws AnalysisEngineProcessException {    enterCollectionProcessComplete();    try {      getAnalysisComponent().collectionProcessComplete();    } finally {      exitCollectionProcessComplete();    }  }This also appears to be an issue with PrimitiveAnalysisEngine_impl.processAndOutputNewCASes() and PrimitiveAnalysisEngine_impl.batchProcessComplete().  Hmm, it looks like PrimitiveAnalysisEngine_impl.callAnalysisComponentProcess() gets it almost right, but will still hide Errors because they are not converted into AnalysisEngineProcessExceptions.This is important because the lack of a logged stack trace makes it hard to find a RuntimeException or Error thrown from a component that runs for a number of hours.
issueID:UIMA-1285
type:Bug
changed files:
texts:Fix Flow Object Not In Flow Cache Error
CASes returned from an inner aggregate CM are not associated with an input CAS. An error occurs when the client aggregate attempts to locate a Flow Object using an invalid Cas reference id. When an inner aggregate returns a CAS back to the client it must set the parent id property to the id of the input CAS.
issueID:UIMA-1286
type:Bug
changed files:
texts:UIMA AS Service Doesnt Start a Timer On Connection To a Temp Reply Queue
The Uima AS service doesnt time out idle connections to a broker. This may lead to an exception:ERROR TransportConnector             - Could not accept connection : java.net.SocketException: Too many open filesjava.net.SocketException: Too many open filesThis problem may occur when a client application repeatedly restarts Uima Client API many times. After each restart the client sends a CAS and receives a response, then it is stopped. The service accumulates connections to the client's temp reply queue. When the client terminates the broker kills the temp queue but the service still keeps the connection open causing a leak.Start a timer after each reply.
issueID:UIMA-1287
type:Bug
changed files:
texts:deployAsyncService.sh does not work if UIMA_HOME contains a whitespace
On my macbook the deployAsyncService.sh script fails to start f the UIMA_HOME contains a whitespace.Here the error messsage:Exception in thread "main" java.lang.NoClassDefFoundError:2/config/Logger/propertiesIn that case UIMA_HOME="/Users/kottmann/Downloads/apache-uima-as 2"
issueID:UIMA-1288
type:Improvement
changed files:
texts:Need a Better Approach For Specifying UIMA AS Broker URL in Deployment Descriptor
Each UIMA AS deployment descriptor requires at least one Broker URL for the connection factory. Instead of hard coding the URL, perhaps a placeholder for it should be used. At runtime, the placeholder could be resolved to the actual URL by Spring resolver component. The value could come from either an external file or from an environment. The new approach should accommodate specifying more than one placeholder, since an aggregate may have delegates whose queues are managed by a different broker. The new approach would simplify deployment of UIMA AS services, especially during testing.A placeholder syntax could be inherited from Spring, where it looks like ${placeholder-name}. dd2spring would need to change to handle a placeholder notation in addition to supporting hard coded broker URL that we use now. A new bean must be added to the generated xml. It will be :<bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">    <property name="systemPropertiesModeName"  value="SYSTEM_PROPERTIES_MODE_OVERRIDE"/>   </bean>This bean is setup to resolve placeholders using system variables, like -Dplaceholder-name=placeholder-value
issueID:UIMA-129
type:Bug
changed files:
texts:$main_root replacement does not work for components of a merged pear file.
When having a merged pear file, it has the following directory structuredescpear1/descpear2/descthe $main_root replacement is only done in the root desc folder but not in pear1/desc or pear2/desc folder. So a merged pear file is not installed correctlyif one of the components (pear1 or pear2) need a $main_root replacement.
issueID:UIMA-1291
type:Bug
changed files:
texts:FileNotFoundException with addSourceToJars under Windows when UIMA_HOME contains whitespace
When executing addSourceToJars MS-DOS batch file under Windows and the UIMA_HOME variable has whitespace in it (like C:\Program Files\apache-uima), then one gets errors of the following type:C:\..........\uimaj-2.2.2-incubating\jVinci\src\main\java>jar -uvf C:\Program Files\apache-uima\lib\jVinci.jar *java.io.FileNotFoundException: C:\Program (The system cannot find the file specified)A solution is to simply surround the %UIMA_HOME% strings in addSourceToJars with quotations, for example:jar -uvf "%UIMA_HOME%\lib\jVinci.jar" *
issueID:UIMA-1292
type:Bug
changed files:
texts:Uima AS Jms Listener Should Support Retry When Establishing Connection To a Broker
UIMA AS service should support retry when a listener on the service input queue fails due to a broker not being available. The listener should log a message stating the fact that the broker is not available and it should enter a loop attempting to reconnect. When a broker becomes available the listener should reconnect, log a message that the connection was made, and proceed to complete initialization.
issueID:UIMA-1293
type:Bug
changed files:
texts:Replies from remote CasMultipliers that don&#39;t always generate CASes are not handled correctly
If a remote CM generates 1 CAS for every N input, some of the childless parents do not continue in the flow. Since the default FC uses "dropIfNewCasProduced" all CASes should continue in the flow except for every N-th one being replaced by its child.
issueID:UIMA-1294
type:Improvement
changed files:
texts:Enable access of service&#39;s ipaddr from process Cas replies
Process Cas reply messages contain the service's host ipaddr, but there is no mechanism to retrieve this info. Also, would be nice for the sample program, RunRemoteAsyncAE to show how to access this info and to display it.
issueID:UIMA-1296
type:Bug
changed files:
texts:UIMA AS Service Not Processing Stop Request
Remote Uima AS Service is not processing STOP request from a client. These requests are send by a client to a remote Cas Multiplier to abort generation of child CAses from a given input CAS. This used to work, but I think got broken when we've added selectors. We use two selectors on the input queue:<property name="messageSelector" value="Command=2000 OR Command=2002"/>and<property name="messageSelector" value="Command=2001"/>The first selector accepts Process and CPC requests which are processed by one listener and the second selector is for GetMeta requests that are processed by a separate listener (thread). We need to process STOP requests by GetMeta listener. dd2Spring need to change to support addtional request type. Use the following selector on the GetMeta listener:<property name="messageSelector" value="Command=2001 OR Command=2006"/>
issueID:UIMA-1297
type:Bug
changed files:
texts:Uima AS Service Not Handling Send Failures Correctly
When a send requst fails due to a lost broker connection, the uima AS aggregate removes the CAS from the outstanding list. Subsequently, when a timer pops the Timeout Exception is reported against the wrong CAS.Fix the code so that the CAS remains in the outstanding list until the timer pops.
issueID:UIMA-1298
type:Bug
changed files:
texts:A shared remote CM hangs when one of its clients runs out of memory
Twice I observed that when one client aggregate of a shared remote CM crashed with an out-of-memory exception the service stopped responding to the other client's requests.  No errors found in the service log.  The client was not using the service at the time of the crash.  Requests stacked up on the input queue ... almost as if the service was blocked on an empty pool, or ...?  Killing a client (cntl-C) did not cause the hang.  Weird!
issueID:UIMA-1299
type:New Feature
changed files:
texts:Contribution of Lucene CAS Indexer
Lucas is a UIMA CAS consumer component which writes CAS data into a Lucene index. It is based on a XML-based "mapping configuration  file" in which the user can determine which UIMA annotations should be put into which Lucene field, and how this field is set up (e.g. indexed and/or stored). In addition, some basic functionality for (ontolgical) hypernym indexing is provided.Additionally, Lucas is able to perform offset-based token stream alignment and merging of UIMA annotations (via token position increment) in the same Lucene field (e.g. "documenttext" or "title")
issueID:UIMA-13
type:Task
changed files:
texts:Javadocs should be posted on the website

issueID:UIMA-130
type:Bug
changed files:uimaj-core/src/main/java/org/apache/uima/analysis_engine/asb/impl/FlowControllerContainer.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/impl/AggregateAnalysisEngine_impl.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/impl/AnalysisEngineDescription_impl.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/impl/PrimitiveAnalysisEngine_impl.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/impl/UimacppAnalysisEngineImpl.java
uimaj-core/src/main/java/org/apache/uima/resource/ResourceCreationSpecifier.java
uimaj-core/src/main/java/org/apache/uima/resource/impl/ResourceCreationSpecifier_impl.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/asb/impl/FlowControllerContainer.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/impl/AggregateAnalysisEngine_impl.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/impl/AnalysisEngineDescription_impl.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/impl/PrimitiveAnalysisEngine_impl.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/impl/UimacppAnalysisEngineImpl.java
uimaj-core/src/main/java/org/apache/uima/resource/ResourceCreationSpecifier.java
uimaj-core/src/main/java/org/apache/uima/resource/impl/ResourceCreationSpecifier_impl.java
texts:ResourceCreationSpecifier.validate() provides no way to pass datapath information
The ResourceCreationSpecifier.validate() method does not take a ResourceManager as an argument, so users cannot pass in datapath information.  This means that the validate() method cannot necessarily resolve import-by-name.  But the validate() method does try to check for valid parameter overrides, which can't be done if the aggregate imports delegates by name.  It throws an exception while trying to resolve the import-by-name in this case. Either there should be an overridden method validate(ResourceManager), or validate() should not attempt to do anything involving delegates &#8211; saving that for doFullValidation(ResourceManager) instead.
issueID:UIMA-1300
type:New Feature
changed files:
texts:The client API needs to support optional callback listener before sendCas
When using a collection reader with the client API, application control is limited to callbacks on the completion of commands. In order to measure processing latency, a client must in addition be notified just before each process request is sent.
issueID:UIMA-1301
type:Improvement
changed files:
texts:Update documentation, log problems when dictionary entries don&#39;t load, remove diagnostic message during dictionary loading

issueID:UIMA-1302
type:Bug
changed files:
texts:PerformanceReports for PEAR not being generated in a CPE
When an installed PEAR is included as an AE in a Collection Processing Engine, the performance report generated by the CPE doesn't include any figures for the PEAR. The only work-around is to install the pear and then reference the AE descriptor directly, however this ruins the entire point of using the PEAR - it automatically sets the classpath, datapath etc for you. I discussed this issue with Thilo Goetz, who said I should raise a bug against it. Please see correspondence below about this issue with Thilo.My Message:Hi Thilo,I work for the LanguageWare team in Dublin, and am having an issue getting performance numbers for PEARs used in a Collection Processing Engine. Essentially, when you refer to the PEAR using the pearSpecifier file, then the performance of the PEAR is not included in the Performance Report. However, if you run the PEAR by referring to its main descriptor directly (and setting up the classpath etc manually) you will correctly get the performance of the components in the PEAR included in the performance report.Am I doing something wrong, or is there a way to work around this? For example, is this just an issue when using PEARs in a CPE, or can I get the information some other way? I'm trying to set up an automated process for testing the performance of a PEAR against a corpus, and would like to avoid having to write code / scripts for thisHis Responses:Hi Kevin,that issue somehow seems familiar.  I've looked into those PerformanceReports because of another bug I found, and I think I noticed this, too (http://www.mail-archive.com/uima-dev%40incubator.apache.org/msg06565.html).  So I think this is a UIMA issue, due to the special nature of pear descriptors (they are not regular AE descriptors).  So the only workaround I can think of at this time is to not use pears, or install the pear and then reference the AE descriptor directly, if that's possible.Related PostsI found this post http://markmail.org/message/doknwh5iecuhtai3 that seems to refer to the exact same issue
issueID:UIMA-1303
type:Bug
changed files:
texts:Uima AS Creates Jms Sessions With Wrong Acknowledgment Property
When creating a jms session Uima AS uses the following:connection.createSession(false, 0);The above is bad in two ways:1) uses a hardcoded value of 0 instead of constant from Session class2) the intended value for the second param is Session.AUTO_ACKNOWLEDGE whose actual value is 1 not 0.Change the second value to the createSession() method to be Session.AUTO_ACKNOWLEDGE
issueID:UIMA-1304
type:Bug
changed files:uimaj-cpe/src/main/java/org/apache/uima/collection/impl/cpm/container/deployer/vinci/VinciCasProcessorDeployer.java
texts:Error handling parameters in CPE with a Vinci processor
The handling of the error handling parameters of a CPE that has a Vinci remote Cas processor with its "service-access" deployment parameter set to "random" is buggyIf you set the error parameters to the following values:          <errorHandling>          <errorRateThreshold action="continue" value="10/1000" />          <maxConsecutiveRestarts action="continue" value="10"waitTimeBetweenRetries="10000" />          <timeout max="600000" default="-1" />          </errorHandling>It looks like, when the Vinci processor fails for some reason, the CPE intents gracefully to reconnect up to N times (N=10 which is the value of the maxConsecutiveRestarts parameter) which is the expected behaviour. But the "waitTimeBetweenRetries" delay is not used at all.Apparently in the implementation of method:           private int attachToServices(boolean redeploy, String aServiceUri, int howMany,                  ProcessingContainer aProcessingContainer) throws Exception;of the class org.apache.uima.collection.impl.cpm.container.deployer.vinci.VinciCasProcessorDeployerthe "sleepBetweenRetries" only occurs if the Vinci Cas processor is in "exclusive" mode.On the contrary (random mode) the method calls directly the method          private synchronized booleanactivateProcessor(CasProcessorConfiguration aCasProcessorConfig,                  String aService, ProcessingContainer aProcessingContainer, boolean redeploy);         Which uses a hard coded timeout of 1 sec (SLEEP_TIME) between each retries instead of the waitTimeBetweenRetries.The bug has been confirmed by Jerry Cwiklik and he proposed the attached patch which solves the problem
issueID:UIMA-1305
type:Task
changed files:
texts:Cas Editor: Remove eclipse project files
The Cas Editor can now build with maven, eclipse integration also works now with maven eclipse:eclipse, eclipse projects files are no longer needed, remove them.
issueID:UIMA-1306
type:Improvement
changed files:
texts:uimaj-examples: opennlp_wrappers not compatible with opennlp 1.4.x
The OpenNLP namefind package changed somewhat for 1.4.x.  The OpenNLP wrapper examples that are shipped with UIMA seem to still be written for compatibility with OpenNLP 1.3.x.  As a result, the uimaj-examples opennlp_wrappers examples do not compile against OpenNLP 1.4.x.The most difficult to resolve problems are in the class org.apache.uima.examples.opennlp.annotator.NEDetector .  This class will need to be re-written inorder to use the namefind interfaces in OpenNLP1.4.x.  In particular, the following method no longer exists in OpenNLP:opennlp.tools.lang.english.NameFinder.find(ArrayList, Map) .Of course, since the method no longer exists, compilation fails.
issueID:UIMA-1307
type:Bug
changed files:
texts:Cas Editor: Icons are not included in maven build
The icons for the Cas Editor are located in the icons folder which is not a standard resource folder in maven.
issueID:UIMA-1308
type:Bug
changed files:
texts:Cas Editor: plugin.xml is not included in maven build

issueID:UIMA-1309
type:Bug
changed files:
texts:Fix Uima AS testcase testPrimitiveServiceProcessPingFailure() to ignore RuntimeException
Modify testPrimitiveServiceProcessPingFailure() testcase to ignore ResourceInitializationException which is thrown by the client API due to failure of the service to respond to Ping request.
issueID:UIMA-1310
type:Bug
changed files:
texts:Fix Uima AS Client memory leak
While running testcases in debug mode in eclipse there is evidence of a memory leak. One of the threads in the Uima AS client is not terminating when the testcase stops. It looks like a thread in BaseUIMAAsynchronousEngineCommon_impl.serveCASes() is not stopping. This thread is reading an internal queue containing CASes destined for the remote service. It blocks in the take() method of the queue and thus causing a leak.
issueID:UIMA-1311
type:New Feature
changed files:
texts:On Uima AS service startup log its runtime environment
When the top level Uima AS service starts log current runtime information, like the OS info, Java Info, System Info, and Classpath.
issueID:UIMA-1312
type:Bug
changed files:
texts:Cas Editor: OSGI manifest should export all packages

issueID:UIMA-1313
type:Bug
changed files:
texts:Cas Editor: Resources are not synchronized correctly with Corpus Explorer View

issueID:UIMA-1314
type:New Feature
changed files:
texts:Add OSGI support to uima-as
UIMA AS should support running in an OSGI container.To achieve this an uimaj-as-ep-runtime plugin is added to the uima-asproject which creates an osgi bundle which wraps all uima-as jar files,like it is done for the uimaj-ep-runtime plugin.
issueID:UIMA-1315
type:Bug
changed files:
texts:Fix a hang in the Uima AS client
When running Uima AS testDeployAgainAndAgain() testcase found a bug that causes a hang. When a client completes the first run it doesnt reset a casQueueProducerReady boolean flag in the stop() method. Subsequent run causes the client API to hang since the CAS producing thread is not started due to the casQueueProducerReady  flag not being reset.
issueID:UIMA-1316
type:Bug
changed files:uimaj-core/src/main/java/org/apache/uima/analysis_engine/impl/AggregateAnalysisEngine_impl.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/asb/impl/FlowControllerContainer.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/asb/ASB.java
texts:FlowController collectionProcessComplete() method not called
Discovered working with UIMA AS, and subsequently found not to be working with core UIMA either.Based on offline discussion between Jerry and Adam, the suggested fix was to the FC wrapper:"The FlowControllerContainer wrapper around the FlowController object does not expose collectionProcessComplete() method. Add a new method and delegate collectionProcessComplete to FlowController instance."
issueID:UIMA-1317
type:Bug
changed files:
texts:Modify UIMA AS Endpoint Object To Use Volatile Booleans
Endpoint object in Uima AS should declare booleans as volatile to avoid possible race conditions. Due to java memory model, an unsychronized change of a boolean value in one thread may not be visible to another thread. Declaring a boolean as volatile fixes this without requiring explicit synchronization.
issueID:UIMA-1318
type:Improvement
changed files:
texts:Allow to add an AnalysisEngineDescription to a CpeDescription
This would allow to build up an AnalysisEngineDesription programmatically (and so only in memory present) and use that directly in a CPE (without creating a temporary descriptor file of that description and provide that for the CPE).I propose methods likeCpeComponentDescriptor.setResourceSpecifier(ResourceSpecifier rs);Then a an example for using it would look like this:AnalysisEngineDescription aeDescr = ResourceSpecifierFactory.createAnalysisEngineDescription();// Setup aeDescr programmaticallyCpeCasProcessor cpeProc = CpeDescriptorFactory.produceCasProcessor("CAS Proc 1");CPEComponentDescriptor compDescr = CpeDescriptorFactory.produceComponentDescriptor("");compDescr.setResourceSpecifier(aeDescr);cpeProc.setCpeComponentDescriptor(compDescr);Analog for Consumer and CollectionReader.
issueID:UIMA-132
type:Improvement
changed files:uimaj-core/src/main/java/org/apache/uima/UimaContext.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/annotator/AnnotatorContext.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/impl/AnnotatorContext_impl.java
uimaj-core/src/main/java/org/apache/uima/impl/UimaContext_ImplBase.java
uimaj-core/src/main/java/org/apache/uima/resource/impl/DataResource_impl.java
uimaj-core/src/main/java/org/apache/uima/UimaContext.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/annotator/AnnotatorContext.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/impl/AnnotatorContext_impl.java
uimaj-core/src/main/java/org/apache/uima/impl/UimaContext_ImplBase.java
uimaj-core/src/main/java/org/apache/uima/resource/impl/DataResource_impl.java
uimaj-core/src/main/java/org/apache/uima/resource/impl/DataResource_impl.java
uimaj-core/src/main/java/org/apache/uima/resource/impl/DataResource_impl.java
texts:Provide better support for filenames with spaces in resource URL
The UimaContext.getResourceURL() method is difficult to use correctly.  It is tempting for users to write code such as: URL url = getContext().getResourceURL(key); FileReader fr = new FileReader(url.getPath());which is not safe since the URL can contain spaces encoded as %20, and the url.getPath() does not automatically decode them.We should add the alternative methods and appropriate JavaDoc comments guiding the user toward the appropriate method:URI getResourceURI() &#8211; this works better because URI.getPath() does do decoding.String getResourceFilePath() &#8211; if the URL is a "file:" URL, return its decoded path, otherwise throw an exception (e.g., for an "http" URL)Additionally, it would be nice if we supported filenames (without the file: prefix) in the <fileUrl> descriptor element, for example:<fileUrl>c:/program files/myproj/myfile.txt</fileUrl>Currently this gives a MalformedUrlException, but it would be helpful for the framework to detect that exception and try appending "file:/" to see if that makes a valid URL.
issueID:UIMA-1320
type:Bug
changed files:uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/ui/ParameterDelegatesSection.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/ui/ParameterSection.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/ui/dialogs/AddParameterDialog.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/files/PickOverrideKeysAndParmName.java
texts:Parameter Definitions dialog does not allow parameters with same name in different groups.
The Parameter Definitions dialog of the Component Descriptor Editor does not allow me to add identifiers with the same name in different groups (Error: Parameter Names must be unique), although the Tutorial and Users Guide says in 1.2.1.4 that this is possible.
issueID:UIMA-1321
type:Bug
changed files:
texts:UIMA C++ 2.2.2: compile error: call of overloaded &#39;addParam(XMLFileLoc)&#39; is ambiguous
Hi,I tried to compile the packaged release of the C++ implementation of the framework using GNU C++ 4 on Ubuntu Linux,and got the following error:In file included from ./uima/resmgr.hpp:54,                 from ./uima/importdescription.hpp:46,                 from ./uima/typesystemdescription.hpp:44,                 from ./uima/taespecifier.hpp:45,                 from ./uima/engine.hpp:48,                 from ./uima/annotator_context.hpp:48,                 from ../cas/xcasdeserializer_handler.cpp:54:./uima/location.hpp: In constructor 'uima::util::Location::Location()':./uima/location.hpp:140: warning: deprecated conversion from string constant to 'char*'../cas/xcasdeserializer_handler.cpp: In member function 'virtual void uima::XCASDeserializerHandler::error(const xercesc_3_0::SAXParseException&)':../cas/xcasdeserializer_handler.cpp:923: error: call of overloaded 'addParam(XMLFileLoc)' is ambiguous./uima/exceptions.hpp:172: note: candidates are: void uima::ErrorMessage::addParam(const char*) <near match>./uima/exceptions.hpp:174: note:                 void uima::ErrorMessage::addParam(const std::string&) <near match>./uima/exceptions.hpp:176: note:                 void uima::ErrorMessage::addParam(const UChar*) <near match>./uima/exceptions.hpp:178: note:                 void uima::ErrorMessage::addParam(const icu_4_0::UnicodeString&)./uima/exceptions.hpp:182: note:                 void uima::ErrorMessage::addParam(long int)./uima/exceptions.hpp:184: note:                 void uima::ErrorMessage::addParam(long unsigned int)./uima/exceptions.hpp:186: note:                 void uima::ErrorMessage::addParam(int)./uima/exceptions.hpp:188: note:                 void uima::ErrorMessage::addParam(unsigned int)./uima/exceptions.hpp:190: note:                 void uima::ErrorMessage::addParam(double)../cas/xcasdeserializer_handler.cpp:924: error: call of overloaded 'addParam(XMLFileLoc)' is ambiguous./uima/exceptions.hpp:172: note: candidates are: void uima::ErrorMessage::addParam(const char*) <near match>./uima/exceptions.hpp:174: note:                 void uima::ErrorMessage::addParam(const std::string&) <near match>./uima/exceptions.hpp:176: note:                 void uima::ErrorMessage::addParam(const UChar*) <near match>./uima/exceptions.hpp:178: note:                 void uima::ErrorMessage::addParam(const icu_4_0::UnicodeString&)./uima/exceptions.hpp:182: note:                 void uima::ErrorMessage::addParam(long int)./uima/exceptions.hpp:184: note:                 void uima::ErrorMessage::addParam(long unsigned int)./uima/exceptions.hpp:186: note:                 void uima::ErrorMessage::addParam(int)./uima/exceptions.hpp:188: note:                 void uima::ErrorMessage::addParam(unsigned int)./uima/exceptions.hpp:190: note:                 void uima::ErrorMessage::addParam(double)&#91;...&#93;When commenting out all calls to msg.addParam() in the sources, the shared libraries build fine.Any ideas?Thanks,Jochen
issueID:UIMA-1322
type:Bug
changed files:
texts:Uima AS service should fetch broker URL from ServiceInfo object when creating connection to a reply queue
When creating a connection to a reply queue the service should check if Broker URL is available in the ServiceInfo object and if so it should be the broker to use. Current code gets the value for the broker URL from its getServiceUri() method which sometimes returns a null value.
issueID:UIMA-1323
type:Bug
changed files:
texts:Fix NPE in Uima AS GetMetaErrorHandler
Fix NPE that is caused by dereferencing 'delegate' variable on line 106 in GetMetaErrorHandler. Add a check for null before dereferencing delegate.
issueID:UIMA-1324
type:Bug
changed files:
texts:Uima AS not logging exceptions generated by Spring while parsing invalid Deployment Descriptor
When parsing an invalid deployment descriptor Spring generates exceptions on std err. These exceptions are not logged in the uima log.
issueID:UIMA-1325
type:Bug
changed files:
texts:jVinci pom.xml should have relative path to parent pom
If jVinci is build from the jVinci project folder the following error occurs. The reason for the error is a missing relative path to the parent pom."&#91;INFO&#93; Scanning for projects...&#91;INFO&#93; ------------------------------------------------------------------------&#91;ERROR&#93; FATAL ERROR&#91;INFO&#93; ------------------------------------------------------------------------&#91;INFO&#93; Error building POM (may not be this project's POM).Project ID: org.apache.uima:jVinci:jar:${uimaj-release-version}Reason: Cannot find parent: org.apache.uima:uimaj for project: org.apache.uima:jVinci:jar:${uimaj-release-version} for project org.apache.uima:jVinci:jar:${uimaj-release-version}"
issueID:UIMA-1326
type:Improvement
changed files:uimaj-examples/src/main/java/org/apache/uima/examples/xmi/UimaTypeSystem2Ecore.java
uimaj-examples/src/main/java/org/apache/uima/examples/xmi/Ecore2UimaTypeSystem.java
uimaj-examples/src/main/java/org/apache/uima/examples/xmi/UimaTypeSystem2Ecore.java
uimaj-examples/src/main/java/org/apache/uima/examples/xmi/XmiEcoreCasConsumer.java
texts:Remove EMF dependency from uimaj-ep-runtime plugin
The uimaj-ep-runtime plugin depends on EMF, this dependency makes deploying inan non eclipse OSGI environment difficult since EMF depends on org.eclipse.core.runtime,which depends on many other eclipse plugins.Since EMF is only really used in the examples project, the dependency is removedfrom uimaj-core and the classes Ecore2UimaTypeSystem and UimaTypeSystem2Ecore.javaare moved to uimaj-examples.The uimaj-ep-runtime plugin contains currently uimaj-examples, that could be moved to a seperate plugin or shipped with an OSGI bundle.
issueID:UIMA-1327
type:Bug
changed files:
texts:Cannot start broker with startBroker.sh script
startBroker.sh script fails with this error "bin/startBroker.sh: 47: /home/joern/Desktop/apache-uima-as-2.3.0/apache-activemq-4.1.1/bin/activemq: Permission denied". It fails because the file apache-activemq-4.1.1/bin/activemq does not has the executable bit set.
issueID:UIMA-1328
type:Bug
changed files:
texts:deployAsyncService.sh causes Log4j FileNotFoundException
The following exception is printed to the console during startup:bin/deployAsyncService.sh tagger/desc/Deploy_TextAnalysis.xml >>> Setting defaultBrokerURL to:log4j:ERROR setFile(null,true) call failed.java.io.FileNotFoundException: /activemq-data/activemq.log (No such file or directory) at java.io.FileOutputStream.openAppend(Native Method) at java.io.FileOutputStream.<init>(FileOutputStream.java:177) at java.io.FileOutputStream.<init>(FileOutputStream.java:102) at org.apache.log4j.FileAppender.setFile(FileAppender.java:272) at org.apache.log4j.RollingFileAppender.setFile(RollingFileAppender.java:156) at org.apache.log4j.FileAppender.activateOptions(FileAppender.java:151) at org.apache.log4j.config.PropertySetter.activate(PropertySetter.java:247) at org.apache.log4j.config.PropertySetter.setProperties(PropertySetter.java:123) at org.apache.log4j.config.PropertySetter.setProperties(PropertySetter.java:87) at org.apache.log4j.PropertyConfigurator.parseAppender(PropertyConfigurator.java:645) at org.apache.log4j.PropertyConfigurator.parseCategory(PropertyConfigurator.java:603) at org.apache.log4j.PropertyConfigurator.configureRootCategory(PropertyConfigurator.java:500) at org.apache.log4j.PropertyConfigurator.doConfigure(PropertyConfigurator.java:406) at org.apache.log4j.PropertyConfigurator.doConfigure(PropertyConfigurator.java:432) at org.apache.log4j.helpers.OptionConverter.selectAndConfigure(OptionConverter.java:460) at org.apache.log4j.LogManager.<clinit>(LogManager.java:113) at org.apache.log4j.Category.getInstance(Category.java:514) at org.apache.commons.logging.impl.Log4JCategoryLog.<init>(Log4JCategoryLog.java:100) at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:39) at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:27) at java.lang.reflect.Constructor.newInstance(Constructor.java:513) at org.apache.commons.logging.impl.LogFactoryImpl.newInstance(LogFactoryImpl.java:502) at org.apache.commons.logging.impl.LogFactoryImpl.getInstance(LogFactoryImpl.java:285) at org.apache.commons.logging.impl.LogFactoryImpl.getInstance(LogFactoryImpl.java:255) at org.apache.commons.logging.LogFactory.getLog(LogFactory.java:381) at org.springframework.util.ClassUtils.<clinit>(ClassUtils.java:67) at org.springframework.core.io.DefaultResourceLoader.<init>(DefaultResourceLoader.java:52) at org.springframework.context.support.AbstractApplicationContext.<init>(AbstractApplicationContext.java:184) at org.springframework.context.support.AbstractRefreshableApplicationContext.<init>(AbstractRefreshableApplicationContext.java:80) at org.springframework.context.support.AbstractXmlApplicationContext.<init>(AbstractXmlApplicationContext.java:58) at org.springframework.context.support.FileSystemXmlApplicationContext.<init>(FileSystemXmlApplicationContext.java:91) at org.springframework.context.support.FileSystemXmlApplicationContext.<init>(FileSystemXmlApplicationContext.java:77) at org.apache.uima.adapter.jms.activemq.SpringContainerDeployer.deploy(SpringContainerDeployer.java:370) at org.apache.uima.adapter.jms.service.UIMA_Service.deploy(UIMA_Service.java:170) at org.apache.uima.adapter.jms.service.UIMA_Service.main(UIMA_Service.java:406)
issueID:UIMA-1329
type:Bug
changed files:
texts:Cas Editor: Documents are not saved correctly
Saving a document in the Cas Editor does not writes changes back to the file. That was broken through removing the RCP stuff.
issueID:UIMA-133
type:Bug
changed files:uimaj-tools/src/main/java/org/apache/uima/tools/pear/merger/PMControllerHelper.java
uimaj-tools/src/main/java/org/apache/uima/tools/pear/merger/PMControllerHelper.java
texts:PEAR Merger adds only 1 JAR file from the delegate &#39;lib&#39; folder to the generated aggregate CLASSPATH
PEAR Merger does not add more than 1 JAR file from the delegate 'lib' folder to the generated aggregate CLASSPATH.
issueID:UIMA-1330
type:Bug
changed files:
texts:Cas Editor: Problems with split packages and maven build
It seems that this issue was encountered already in UIMA-951. It will be fixed as described there.
issueID:UIMA-1331
type:Bug
changed files:
texts:Cas Editor: Invalid documents are not opened after they are fixed
If an invalid document is opened the correct error message is displayed in the document editor,if the invalid file is now corrected and valid the error message is still shown.
issueID:UIMA-1332
type:Improvement
changed files:
texts:[DDE] Allow an "empty" value for the "Broker URL for input queue" field (related to UIMA-1288)
Allow an "empty" value for the "Broker URL for input queue" field in Overview page of DDE GUI. Right now, the value of this field is "required".See UIMA-1288 for details.
issueID:UIMA-1333
type:Improvement
changed files:uimaj-examples/src/main/java/org/apache/uima/examples/flow/WhiteboardFlowController.java
uimaj-examples/src/main/java/org/apache/uima/examples/flow/WhiteboardFlowController2.java
uimaj-core/src/main/java/org/apache/uima/flow/CasFlow_ImplBase.java
uimaj-core/src/main/java/org/apache/uima/flow/JCasFlow_ImplBase.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/asb/impl/FlowContainer.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/asb/impl/FlowControllerContainer.java
texts:JCasFlow_ImplBase.setJCas() should be deprecated, and this action always done by framework
Everytime I create a new FC to use this.getJCas() in the next() method the program crashes because the JCas had not been previously set. Can anyone explain why it is not right to have the framework automatically make the association between flow object and specific CAS whenever a flow object is returned from computeFlow and from newCasProduced methods?
issueID:UIMA-1334
type:Bug
changed files:
texts:Sandbox - SimpleServer missing config-xml.jar
The SimpleServer tutorial mentions a config-xml.jar file to be copied into the CATALINA_HOME/shared/lib directory.  However, that file does not exist when using a subversion checkout of the sandbox trunk.   I am not sure if this is related, but starting the Tomcat instance without this file results in the following exception:  Apr 24, 2009 2:06:59 PM org.apache.uima.simpleserver.servlet.SimpleServerServlet initServerSEVERE: UIMA Simple Service configuaration failedorg.apache.uima.pear.tools.PackageInstallerException: The following error occurred during the installation verification of component WhitespaceTokenizer: org.apache.uima.util.InvalidXMLException: Invalid descriptor at file:/opt/cagrid/jakarta-tomcat-5.0.28/webapps/uima/resources/./WhitespaceTokenizer/desc/WhitespaceTokenizer.xml. at org.apache.uima.util.impl.XMLParser_impl.parse(XMLParser_impl.java:193) at org.apache.uima.util.impl.XMLParser_impl.parseResourceManagerConfiguration(XMLParser_impl.java:760) at org.apache.uima.util.impl.XMLParser_impl.parseResourceManagerConfiguration(XMLParser_impl.java:748) at org.apache.uima.pear.util.UIMAUtil.identifyUimaComponentCategory(UIMAUtil.java:246) at org.apache.uima.pear.util.UIMAUtil.identifyUimaComponentCategory(UIMAUtil.java:126) at org.apache.uima.pear.tools.InstallationTester.<init>(InstallationTester.java:97) at org.apache.uima.pear.tools.InstallationController.verifyComponentInstallation(InstallationController.java:1109) at org.apache.uima.pear.tools.InstallationController.verifyComponent(InstallationController.java:1993) at org.apache.uima.pear.tools.PackageInstaller.installPackage(PackageInstaller.java:233) at org.apache.uima.pear.tools.PackageInstaller.installPackage(PackageInstaller.java:67) at org.apache.uima.simpleserver.Service.loadPear(Service.java:294) at org.apache.uima.simpleserver.Service.configurePear(Service.java:141) at org.apache.uima.simpleserver.servlet.SimpleServerServlet.initServer(SimpleServerServlet.java:277) at org.apache.uima.simpleserver.servlet.SimpleServerServlet.init(SimpleServerServlet.java:228) at javax.servlet.GenericServlet.init(GenericServlet.java:211) at org.apache.catalina.core.StandardWrapper.loadServlet(StandardWrapper.java:1029) at org.apache.catalina.core.StandardWrapper.allocate(StandardWrapper.java:687) at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:144) at org.apache.catalina.core.StandardValveContext.invokeNext(StandardValveContext.java:104) at org.apache.catalina.core.StandardPipeline.invoke(StandardPipeline.java:520) at org.apache.catalina.core.StandardContextValve.invokeInternal(StandardContextValve.java:198) at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:152) at org.apache.catalina.core.StandardValveContext.invokeNext(StandardValveContext.java:104) at org.apache.catalina.core.StandardPipeline.invoke(StandardPipeline.java:520) at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:137) at org.apache.catalina.core.StandardValveContext.invokeNext(StandardValveContext.java:104) at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:118) at org.apache.catalina.core.StandardValveContext.invokeNext(StandardValveContext.java:102) at org.apache.catalina.core.StandardPipeline.invoke(StandardPipeline.java:520) at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:109) at org.apache.catalina.core.StandardValveContext.invokeNext(StandardValveContext.java:104) at org.apache.catalina.core.StandardPipeline.invoke(StandardPipeline.java:520) at org.apache.catalina.core.ContainerBase.invoke(ContainerBase.java:929) at org.apache.coyote.tomcat5.CoyoteAdapter.service(CoyoteAdapter.java:160) at org.apache.coyote.http11.Http11Processor.process(Http11Processor.java:799) at org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler.processConnection(Http11Protocol.java:705) at org.apache.tomcat.util.net.TcpWorkerThread.runIt(PoolTcpEndpoint.java:577) at org.apache.tomcat.util.threads.ThreadPool$ControlRunnable.run(ThreadPool.java:683) at java.lang.Thread.run(Thread.java:595)Caused by: org.w3c.dom.DOMException: NAMESPACE_ERR: An attempt is made to create or change an object in a way which is incorrect with regard to namespaces. at org.apache.xml.utils.DOMBuilder.startElement(DOMBuilder.java:322) at org.apache.xalan.transformer.TransformerIdentityImpl.startElement(TransformerIdentityImpl.java:1020) at org.apache.uima.util.impl.SaxDeserializer_impl.startElement(SaxDeserializer_impl.java:201) at org.apache.xerces.parsers.AbstractSAXParser.startElement(Unknown Source) at org.apache.xerces.impl.XMLNSDocumentScannerImpl.scanStartElement(Unknown Source) at org.apache.xerces.impl.XMLNSDocumentScannerImpl$NSContentDispatcher.scanRootElementHook(Unknown Source) at org.apache.xerces.impl.XMLDocumentFragmentScannerImpl$FragmentContentDispatcher.dispatch(Unknown Source) at org.apache.xerces.impl.XMLDocumentFragmentScannerImpl.scanDocument(Unknown Source) at org.apache.xerces.parsers.XML11Configuration.parse(Unknown Source) at org.apache.xerces.parsers.XML11Configuration.parse(Unknown Source) at org.apache.xerces.parsers.XMLParser.parse(Unknown Source) at org.apache.xerces.parsers.AbstractSAXParser.parse(Unknown Source) at org.apache.uima.util.impl.XMLParser_impl.parse(XMLParser_impl.java:176) ... 38 more at org.apache.uima.pear.tools.PackageInstaller.installPackage(PackageInstaller.java:242) at org.apache.uima.pear.tools.PackageInstaller.installPackage(PackageInstaller.java:67) at org.apache.uima.simpleserver.Service.loadPear(Service.java:294) at org.apache.uima.simpleserver.Service.configurePear(Service.java:141) at org.apache.uima.simpleserver.servlet.SimpleServerServlet.initServer(SimpleServerServlet.java:277) at org.apache.uima.simpleserver.servlet.SimpleServerServlet.init(SimpleServerServlet.java:228) at javax.servlet.GenericServlet.init(GenericServlet.java:211) at org.apache.catalina.core.StandardWrapper.loadServlet(StandardWrapper.java:1029) at org.apache.catalina.core.StandardWrapper.allocate(StandardWrapper.java:687) at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:144) at org.apache.catalina.core.StandardValveContext.invokeNext(StandardValveContext.java:104) at org.apache.catalina.core.StandardPipeline.invoke(StandardPipeline.java:520) at org.apache.catalina.core.StandardContextValve.invokeInternal(StandardContextValve.java:198) at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:152) at org.apache.catalina.core.StandardValveContext.invokeNext(StandardValveContext.java:104) at org.apache.catalina.core.StandardPipeline.invoke(StandardPipeline.java:520) at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:137) at org.apache.catalina.core.StandardValveContext.invokeNext(StandardValveContext.java:104) at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:118) at org.apache.catalina.core.StandardValveContext.invokeNext(StandardValveContext.java:102) at org.apache.catalina.core.StandardPipeline.invoke(StandardPipeline.java:520) at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:109) at org.apache.catalina.core.StandardValveContext.invokeNext(StandardValveContext.java:104) at org.apache.catalina.core.StandardPipeline.invoke(StandardPipeline.java:520) at org.apache.catalina.core.ContainerBase.invoke(ContainerBase.java:929) at org.apache.coyote.tomcat5.CoyoteAdapter.service(CoyoteAdapter.java:160) at org.apache.coyote.http11.Http11Processor.process(Http11Processor.java:799) at org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler.processConnection(Http11Protocol.java:705) at org.apache.tomcat.util.net.TcpWorkerThread.runIt(PoolTcpEndpoint.java:577) at org.apache.tomcat.util.threads.ThreadPool$ControlRunnable.run(ThreadPool.java:683) at java.lang.Thread.run(Thread.java:595)
issueID:UIMA-1335
type:Bug
changed files:
texts:Cas Editor: An annotation editor should be closed if file is deleted

issueID:UIMA-1336
type:Improvement
changed files:
texts:allow multiple dictionary entries to match against a single string
If multiple dictionary entries contain the same text, only one will be selected to match against the input text, even if the parameter "FindAllMatches" is set to true
issueID:UIMA-1338
type:Improvement
changed files:
texts:Custom plugable ProcessingUnit for CPMEngine
Kind of intended this way through "PROCESSING_PIPELINE_IMPL" system param, but boundaries between CPMEngine and ProcessingUnit not clearly defined.
issueID:UIMA-1339
type:Bug
changed files:
texts:MESSAGE LOCALIZATION FAILED -- missing key UIMAJMS_send_reply_failed__FINE
Key in resource bundle is correct (UIMAJMS_send_reply_failed__INFO) ... code is wrong.
issueID:UIMA-134
type:Improvement
changed files:uimaj-core/src/main/java/org/apache/uima/util/CasCopier.java
uimaj-core/src/main/java/org/apache/uima/util/CasCopier.java
uimaj-core/src/main/java/org/apache/uima/util/CasCopier.java
uimaj-core/src/main/java/org/apache/uima/util/CasCopier.java
texts:Extend CasCopier to support multiple views
The CasCopier utility class should support multiple views/Sofas.1) There should be a way to copy multiple views in the source CAS, each to its own view in the target CAS, while keeping a "memory" of copied FS so duplicates are not created.2) References to Sofas need to be preserved in the target CAS.  If we copy a source FS referencing a Sofa with SofaID "Foo" then this should result in a reference to the Sofa with the same SofaID in the target CAS.  If that Sofa does not exist, we can either create it or throw an exception (probably this should be determined by an agument to the method call).
issueID:UIMA-1340
type:Bug
changed files:
texts:PearAnalysisEngineWrapper does not expose Management Interface of the wrapped AE
Through the PEAR API it is possible to create an AE which do not provide any details of its operation through the Management Interface. The reason is that the created PearAnalysisEngineWrapper object does not expose the Management Interface from the wrapped AE. A client can only read the never updated performance stats of the PearAnalysisEngineWrapper object.
issueID:UIMA-1341
type:Improvement
changed files:uimaj-core/src/main/java/org/apache/uima/UimaContext.java
uimaj-core/src/main/java/org/apache/uima/cas/CAS.java
uimaj-core/src/main/java/org/apache/uima/cas/FSIndex.java
uimaj-core/src/main/java/org/apache/uima/cas/FSIterator.java
unused-saved/src/org/apache/uima/cas/impl/AnnotationIndexImpl.java
uimaj-core/src/main/java/org/apache/uima/cas/text/AnnotationIndex.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/CasDocumentProvider.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/fsview/FeatureStructureBrowserViewPage.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/asb/ASB.java
uimaj-core/src/main/java/org/apache/uima/cas/FSIndex.java
uimaj-core/src/main/java/org/apache/uima/cas/FSIterator.java
uimaj-core/src/main/java/org/apache/uima/cas/Feature.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FSIteratorImplBase.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FeatureImpl.java
uimaj-core/src/main/java/org/apache/uima/jcas/JCas.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/AnalysisEngineDescription.java
uimaj-core/src/main/java/org/apache/uima/cas/ConstraintFactory.java
uimaj-core/src/main/java/org/apache/uima/CompositeResourceFactory.java
uimaj-core/src/main/java/org/apache/uima/UimaContext.java
uimaj-core/src/main/java/org/apache/uima/UimaContextAdmin.java
uimaj-core/src/main/java/org/apache/uima/analysis_component/AnalysisComponent.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/AnalysisEngineDescription.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/AnalysisEngineManagement.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/asb/ASB.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/metadata/FlowConstraints.java
uimaj-core/src/main/java/org/apache/uima/cas/CAS.java
uimaj-core/src/main/java/org/apache/uima/cas/ConstraintFactory.java
uimaj-core/src/main/java/org/apache/uima/cas/FSIndexRepository.java
uimaj-core/src/main/java/org/apache/uima/cas/Type.java
uimaj-core/src/main/java/org/apache/uima/cas/TypeSystem.java
uimaj-core/src/main/java/org/apache/uima/cas/text/AnnotationTreeNode.java
uimaj-core/src/main/java/org/apache/uima/cas_data/CasData.java
uimaj-core/src/main/java/org/apache/uima/collection/EntityProcessStatus.java
uimaj-core/src/main/java/org/apache/uima/collection/metadata/CasProcessorExecutable.java
uimaj-core/src/main/java/org/apache/uima/flow/FlowController.java
uimaj-core/src/main/java/org/apache/uima/flow/FlowControllerContext.java
uimaj-core/src/main/java/org/apache/uima/jcas/JFSIndexRepository.java
uimaj-core/src/main/java/org/apache/uima/resource/CasManager.java
uimaj-core/src/main/java/org/apache/uima/resource/ResourceSpecifierList.java
uimaj-core/src/main/java/org/apache/uima/resource/metadata/FsIndexCollection.java
uimaj-core/src/main/java/org/apache/uima/resource/metadata/MetaDataObject.java
uimaj-core/src/main/java/org/apache/uima/resource/metadata/ResourceManagerConfiguration.java
uimaj-core/src/main/java/org/apache/uima/resource/metadata/TypePriorities.java
uimaj-core/src/main/java/org/apache/uima/resource/metadata/TypeSystemDescription.java
uimaj-core/src/main/java/org/apache/uima/util/ProcessTrace.java
uimaj-core/src/main/java/org/apache/uima/util/ProcessTraceEvent.java
texts:Introduce generics in UIMA core API
The UIMA core API should make use of generics. To achieve this all interfaces should be updated to make use of generics. All changesmust be backward compatible to previous releases of UIMA.
issueID:UIMA-1342
type:Improvement
changed files:uimaj-tools/src/main/java/org/apache/uima/tools/cvd/CVD.java
uimaj-tools/src/main/java/org/apache/uima/tools/stylemap/StyleMapEditor.java
uimaj-tools/src/main/java/org/apache/uima/tools/viewer/CasAnnotationViewer.java
uimaj-cpe/src/main/java/org/apache/uima/cas_data/impl/vinci/VinciCasDataConverter.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/cpm/BaseCPMImpl.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/cpm/container/ProcessingContainer_Impl.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/cpm/engine/CPMEngine.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/cpm/utils/JavaTimer.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/cpm/utils/Timer.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/cpm/vinci/cas_data/VinciPrimitiveValue.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/metadata/cpe/CasProcessorCpeObject.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/metadata/cpe/CpeCollectionReaderCasInitializerImpl.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/metadata/cpe/CpeDescriptionImpl.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/metadata/cpe/CpeDescriptorFactory.java
jVinci/src/main/java/org/apache/vinci/transport/vns/client/VNSConfig.java
uimaj-core/src/main/java/org/apache/uima/ResourceSpecifierFactory.java
uimaj-core/src/main/java/org/apache/uima/UIMAFramework.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/AnalysisEngine.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/ResultSpecification.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/annotator/AnnotatorContext.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/impl/AnalysisEngineImplBase.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/impl/AnnotatorContext_impl.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/impl/UimacppAnalysisEngineImpl.java
uimaj-core/src/main/java/org/apache/uima/cas/CAS.java
uimaj-core/src/main/java/org/apache/uima/cas/admin/CASMgr.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/CASImpl.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/TypeImpl.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/TypeSystemImpl.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/XmiCasSerializer.java
uimaj-core/src/main/java/org/apache/uima/cas_data/FeatureStructure.java
uimaj-core/src/main/java/org/apache/uima/cas_data/impl/FeatureStructureImpl.java
uimaj-core/src/main/java/org/apache/uima/collection/CollectionReader.java
uimaj-core/src/main/java/org/apache/uima/collection/CollectionReader_ImplBase.java
uimaj-core/src/main/java/org/apache/uima/collection/base_cpm/CasDataCollectionReader.java
uimaj-core/src/main/java/org/apache/uima/collection/metadata/CpeCasProcessor.java
uimaj-core/src/main/java/org/apache/uima/collection/metadata/CpeCollectionReader.java
uimaj-core/src/main/java/org/apache/uima/collection/metadata/CpeDescription.java
uimaj-core/src/main/java/org/apache/uima/impl/ResourceSpecifierFactory_impl.java
uimaj-core/src/main/java/org/apache/uima/jcas/JCas.java
uimaj-core/src/main/java/org/apache/uima/jcas/tcas/Annotation.java
uimaj-core/src/main/java/org/apache/uima/pear/tools/InstallationDescriptor.java
uimaj-core/src/main/java/org/apache/uima/resource/metadata/impl/ResourceManagerConfiguration_impl.java
uimaj-core/src/main/java/org/apache/uima/util/JCasPool.java
uimaj-core/src/main/java/org/apache/uima/util/Logger.java
uimaj-core/src/main/java/org/apache/uima/util/XMLInputSource.java
uimaj-core/src/main/java/org/apache/uima/util/XMLParser.java
uimaj-core/src/main/java/org/apache/uima/util/impl/JSR47Logger_impl.java
uimaj-core/src/main/java/org/apache/uima/util/impl/Log4jLogger_impl.java
uimaj-core/src/main/java/org/apache/uima/util/impl/Logger_impl.java
uimaj-core/src/main/java/org/apache/uima/util/impl/SaxDeserializer_impl.java
uimaj-core/src/main/java/org/apache/uima/util/impl/XMLParser_impl.java
uimaj-core/src/main/java/org/apache/uima/ResourceSpecifierFactory.java
uimaj-core/src/main/java/org/apache/uima/UIMAFramework.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/AnalysisEngine.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/AnalysisProcessData.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/ResultSpecification.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/TaeDescription.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/TextAnalysisEngine.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/annotator/AnnotatorContext.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/impl/AnalysisEngineImplBase.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/impl/AnalysisProcessData_impl.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/impl/AnnotatorContext_impl.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/impl/TaeDescription_impl.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/impl/UimacppAnalysisEngineImpl.java
uimaj-core/src/main/java/org/apache/uima/cas/CAS.java
uimaj-core/src/main/java/org/apache/uima/cas/FeatureValuePath.java
uimaj-core/src/main/java/org/apache/uima/cas/ParsingException.java
uimaj-core/src/main/java/org/apache/uima/cas/SofaID.java
uimaj-core/src/main/java/org/apache/uima/cas/admin/CASMgr.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/CASImpl.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/TypeImpl.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/TypeSystemImpl.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/XmiCasSerializer.java
uimaj-core/src/main/java/org/apache/uima/cas_data/FeatureStructure.java
uimaj-core/src/main/java/org/apache/uima/cas_data/impl/FeatureStructureImpl.java
uimaj-core/src/main/java/org/apache/uima/collection/CasInitializer.java
uimaj-core/src/main/java/org/apache/uima/collection/CasInitializerDescription.java
uimaj-core/src/main/java/org/apache/uima/collection/CasInitializer_ImplBase.java
uimaj-core/src/main/java/org/apache/uima/collection/CollectionReader.java
uimaj-core/src/main/java/org/apache/uima/collection/CollectionReader_ImplBase.java
uimaj-core/src/main/java/org/apache/uima/collection/base_cpm/CasDataCollectionReader.java
uimaj-core/src/main/java/org/apache/uima/collection/base_cpm/CasDataInitializer.java
uimaj-core/src/main/java/org/apache/uima/collection/base_cpm/CasDataInitializer_ImplBase.java
uimaj-core/src/main/java/org/apache/uima/collection/impl/CasInitializerDescription_impl.java
uimaj-core/src/main/java/org/apache/uima/collection/metadata/CpeCasProcessor.java
uimaj-core/src/main/java/org/apache/uima/collection/metadata/CpeCollectionReader.java
uimaj-core/src/main/java/org/apache/uima/collection/metadata/CpeCollectionReaderCasInitializer.java
uimaj-core/src/main/java/org/apache/uima/collection/metadata/CpeDescription.java
uimaj-core/src/main/java/org/apache/uima/flow/SimpleStepWithResultSpec.java
uimaj-core/src/main/java/org/apache/uima/impl/CasInitializerFactory_impl.java
uimaj-core/src/main/java/org/apache/uima/impl/ResourceSpecifierFactory_impl.java
uimaj-core/src/main/java/org/apache/uima/impl/SofaID_impl.java
uimaj-core/src/main/java/org/apache/uima/internal/util/TextAnalysisEnginePool.java
uimaj-core/src/main/java/org/apache/uima/jcas/JCas.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/Sofa.java
uimaj-core/src/main/java/org/apache/uima/jcas/tcas/Annotation.java
uimaj-core/src/main/java/org/apache/uima/pear/tools/InstallationDescriptor.java
uimaj-core/src/main/java/org/apache/uima/resource/metadata/impl/ResourceManagerConfiguration_impl.java
uimaj-core/src/main/java/org/apache/uima/util/JCasPool.java
uimaj-core/src/main/java/org/apache/uima/util/Logger.java
uimaj-core/src/main/java/org/apache/uima/util/TCasToInlineXml.java
uimaj-core/src/main/java/org/apache/uima/util/XMLInputSource.java
uimaj-core/src/main/java/org/apache/uima/util/XMLParser.java
uimaj-core/src/main/java/org/apache/uima/util/impl/JSR47Logger_impl.java
uimaj-core/src/main/java/org/apache/uima/util/impl/Log4jLogger_impl.java
uimaj-core/src/main/java/org/apache/uima/util/impl/Logger_impl.java
uimaj-core/src/main/java/org/apache/uima/util/impl/SaxDeserializer_impl.java
uimaj-core/src/main/java/org/apache/uima/util/impl/XMLParser_impl.java
texts:Use @Deprecated annotation also
Currently only the @deprecated javadoc tag is used to indicate deprecation, but it is not guaranteed to issue a compiler warning in client code, though the sun java compiler does it. To fix it we can just add the @Deprecate annotation additional which is specified to issue a compiler warning and is supported since java 1.5.I suggest that we use the eclipse code clean up tool to do it once for all code in our repository.For further information see:http://java.sun.com/j2se/1.5.0/docs/guide/javadoc/deprecation/deprecation.html
issueID:UIMA-1343
type:Bug
changed files:
texts:Uima AS aggregate controller should synchronize code that processes CPC replies from delegates
Uima AS aggregate allows concurrent processing of CPC replies from its delegates. This creates a problem when two different threads call collectionProcessComplete() on the Flow Controller at the same time. The result is an ArithmeticException: /by zero. The collectionProcessComplete() call should only be done once. Add synchronization to prevent calling collectionProcessComplete() more than once.
issueID:UIMA-1344
type:Bug
changed files:uimaj-core/src/main/java/org/apache/uima/cas/impl/XCASSerializer.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/XCASSerializer.java
texts:XCAS Serialization doesn&#39;t handle StringArrays with null elements
This code illustrates the problem:    //create string array where some elements are unset (null)    StringArrayFS strArray = cas.createStringArrayFS(3);    strArray.set(1, "value");    cas.getIndexRepository().addFS(strArray);    //serialize to XCAS    ByteArrayOutputStream baos = new ByteArrayOutputStream();    XCASSerializer.serialize(cas,baos);This problem affects Vinci services
issueID:UIMA-1345
type:Improvement
changed files:
texts:Use generics in uimaj-core test code
The uimaj-core test code should use generics to detect possible compatibility errors with the generics UIMA interfaces.
issueID:UIMA-1346
type:Task
changed files:
texts:Update UIMA dependency to 2.3.0-incubating-SNAPSHOT
Update the UIMA dependency from 2.2.2-incubating to 2.3.0-incubating-SNAPSHOT
issueID:UIMA-1347
type:Improvement
changed files:
texts:Move resources from src/main/java folder to src/main/resources
All resources should be moved to the resource folder.
issueID:UIMA-1348
type:Bug
changed files:
texts:Uima AS UIMA_Service class is not handling default broker correctly
While processing command line args, UIMA_Service uses an incorrect test to determine if a default broker should be used. The code uses:    String brokerURL = getArg("-brokerURL",args);to fetch brokerURL. If the URL is not specified on the command line, the getArg() method returns "" (empty string). But the code checks for a null.
issueID:UIMA-1349
type:Bug
changed files:
texts:Documentation does not mention that resource implementation should implement
In page 37 of the 2.2.2 documentation (section 1.5.4.3) it should say that StringMapResource_impl should implement org.apache.uima.resource.SharedResourceObject.(That's where the 'load' method comes from.)This is trivial to fix but it really hampers the understanding of the section.
issueID:UIMA-135
type:Task
changed files:
texts:Remove Entity View mode from DocumentAnalyzer
The DocumentAnalyzer's entity view mode is currently broken, and it only ever worked for annotators that used an IBM-proprietary type system.  We need to remove this mode and leave the ability for IBM to add such capability in its own derivative of the DocumentAnalyzer.
issueID:UIMA-1351
type:Bug
changed files:
texts:Cas Editor: New type grouped annotation outline is missing uima.cas.Annotation type
This mistake also causes a NPE when an uima.cas.Annotation is added or removed in the editor.
issueID:UIMA-1352
type:Bug
changed files:unused-saved/src/org/apache/uima/cas/impl/FSRBTIndex.java
uimaj-core/src/main/java/org/apache/uima/internal/util/rb_trees/IntArrayRBT.java
uimaj-core/src/main/java/org/apache/uima/internal/util/rb_trees/CompIntArrayRBT.java
texts:java.lang.ClassCastException using find() with a SET index
It is not possible to use the FSIndex.find() method when the indexing strategy is a SET.A java.lang.ClassCastException is thrown.For example:FSIndex idx = aJCas.getJFSIndexRepository().getIndex("idx_SET");while (doSomething) {   MyFeatureStructure myFs = new MyFeatureStructure(aJCas);   myFs.setMyFeature(value);   myFs.addToIndexes();   // Try to recover from index       MyFeatureStructure otherFs = (MyFeatureStructure)idx.find(myFs);  // ClassCastException !!!!   ...}
issueID:UIMA-1353
type:Bug
changed files:
texts:UIMA-AS JUnit test code suppresses some exceptions so may not report some test failures
The test support code suppresses the ServiceShutdownException (and others) which can make failing tests appear OK.
issueID:UIMA-1354
type:New Feature
changed files:
texts:Add camel based uima-as driver
The camel uima-as driver sends a camel message body to a uima-as pipeline. A use case is to trigger the processing of documentin a database. That can be achieved through sending an ID to a uima-as pipeline which then reads the document form a datebase,processes it and writes the result back to a database.
issueID:UIMA-1355
type:Bug
changed files:
texts:When one delagate in a parallel step fails, the flow continues without waiting for the last reply
When a delegate in a parallel step fails the number of replies received is incremented twice, so the reply from the last delegate is not merged into the CAS.  When it is received it will reenter the flow if the CAS is still active, causing even more trouble.I have a test case that demonstrates the problem.Also we should make the check for all-replies-received atomic so that only one reply- or error-processing thread will send the CAS on to the next step, or, depending on the error-handling, discard the CAS or terminate the service.
issueID:UIMA-1356
type:Improvement
changed files:
texts:Add source to UIMA Eclipse plugins
Sources added by the addSourceToJars script are only added to the jar files under the lib folder of UIMA_HOME and not to the Eclipse UIMA plugins. So if you use those plugins for development, then the sources can't be accessed in Eclipse.
issueID:UIMA-1357
type:Bug
changed files:
texts:Uima AS testcase hangs when run in a loop
When running testPrimitiveServiceProcessPingFailure() testcase in a loop, a hang occurs. To replicate add this testcase to the extended test suite: public void test2TestsOverAndAover() throws Exception  {    System.out.println("-------------- test2TestsOverAndAover -------------");    for (int num=0; num<50; num++) {      System.out.println("\nRunning iteration " + num );      testPrimitiveServiceProcessPingFailure();    }  }
issueID:UIMA-1358
type:Bug
changed files:
texts:Exceptions on generated CASes are returned to client without parentage information
The client should be told which of its input CASes might have (indirectly) generated this failing CAS.  Also is there any value in sending more than one exception if many children fail?  If the aggregate is not a CM then the client should just be told that the input CAS failed.Here is part of a recent email discussion on this problem:I think I have a somewhat clearer picture of how we might handle errors on child CASes.  First consider Primitive & Aggregate CMs, and then a non-CM aggregate that contains a CM. I can see 3 different ways an application may wish to handle errors on child CASes:Primitive CM Stop generating children/descendants of the input CAS and return an exception on the input CASGenerate an "incomplete" CAS &#8211; perhaps marked as "damaged"(useful when the total count must be preserved and a place-holder provided)Ignore the error, generate no CAS and carry on to generate the next CAS (if any)Aggregate CMStop generating any more children/descendants from the input CAS and return the exception on the input CASAllow the CAS to continue in the flowQuietly drop the CAS, do not return it and do not generate an exceptionSimple Aggregate with internal CMStop generating any more children/descendants from the input CAS and return the exception on the input CASAllow the CAS to continue in the flow (it will be dropped at the end of the flow)Quietly drop the CAS as if it reached the end of the flow, and do not generate an exceptionCurrently our aggregate error-handling supports #2, while #3 doesn't depend on the framework.  I have added aggregate support for #3 to the AdvancedFixedFlowController in the UIMA-AS test suite (as part of Jira 1353) in the form of a new AllowDropOnFailure option which specifies the delegates for which a failing CAS can be dropped, i.e. skip to the end of the flow with the forceCasToBeDropped flag set.  (I used it to test the thresholdWindow error handling to verify that an intermittently failing delegate is disabled when N of the last M CASes fail.)But I don't think our docs indicate what should happen in #1 and the current implementation handles it differently ... the exception is associated with the child CAS without any reference to the input CAS, and the CM continues to generate children, so the client can get many exceptions that refer to unknown CASes.  The getParentCasReferenceId() method in the UimaASProcessStatus (which I could not find in the JavaDocs) can be used to associate a child CAS with the input CAS that generated it, but it is always null when an exception is returned. Consider the information available to the entityProcessComplete callback when an input CAS successfully generates 2 children:returnedCAS  getCasReferenceId() getParentCasReferenceId() isException()  Child1   ID-of-Child1   ID-of-Parent  false  Child2   ID-of-Child2   ID-of-Parent  false  Parent   ID-of-Parent   null    false If the 2nd child causes an exception then the client might see (Option A)returnedCAS  getCasReferenceId() getParentCasReferenceId() isException()  Child1   ID-of-Child1   ID-of-Parent  false  null   ID-of-Parent   null    trueOr we could put the failing child's ID in the status (Option B)returnedCAS  getCasReferenceId() getParentCasReferenceId() isException()  Child1   ID-of-Child1   ID-of-Parent  false  null   ID-of-Child2   ID-of-Parent  trueNote that in an Aggregate CM the failing CAS may not have been generated directly by the parent, but by any one of its descendants.I think option A  is cleaner and easier to document ... "exception always on input CAS".  If the ID of the failing child is useful we could wrap the exception in another that said something like "Exception inherited from generated CAS xyz"Any other options we should consider?I'll put this in a Jira as that may be the better place to discuss it.
issueID:UIMA-1359
type:Bug
changed files:
texts:Strange warning message when deploying an Aggregate CM
What's the correct syntax when deploying an aggregate CM?When running testClientWithAggregateMultiplier we get the warning:         WARN: line-number: 36 deployment descriptor for analysisEngine: TopLevelTaeQueue is for a top-level CAS Multiplier (or Collection Reader wrapped as a CAS Multiplier). However, the <casMultiplier> element is missing.  Defaulting to a poolSize of 1, initialFsHeapSize of 2,000,000      but when I add the casMultiplier element it decides to ignore it!         WARNING: line-number: 36 casMultiplier settings for poolSize ( poolSize="55") and initialFsHeapSize ( ) will be ignored for the analysisEngine with key= TopLevelTaeQueue  because the pool specs are set using the contained delegate cas multiplier specification.      The change I made was:Index: uimaj-as-activemq/src/test/resources/deployment/Deploy_AggregateMultiplier.xml===================================================================&#8212; uimaj-as-activemq/src/test/resources/deployment/Deploy_AggregateMultiplier.xml (revision 779293)+++ uimaj-as-activemq/src/test/resources/deployment/Deploy_AggregateMultiplier.xml (working copy)@@ -34,6 +34,7 @@         <import location="../descriptors/analysis_engine/SimpleTestAggregateCasMultiplier.xml"/>       </topDescriptor>       <analysisEngine>+                     <casMultiplier poolSize="55"/>          <delegates>           <remoteAnalysisEngine key="TestMultiplier">
issueID:UIMA-136
type:Bug
changed files:
texts:String subtype test case break Maven build
String subtype test case break Maven build.  The JCas type must not start with the name "Test", else Maven interprets it as a test case and fails the build.
issueID:UIMA-1360
type:Task
changed files:uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/ui/property/AnnotationPropertyPage.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/DocumentUimaImpl.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/annotation/DrawingStyle.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/CustomInformationControl.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/action/LowerLeftAnnotationSideAction.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/contextmenu/TypeMenu.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/outline/ModeSensitiveContentProvider.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/editview/EditViewPage.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/outline/OutlineLabelProvider.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/contextmenu/IShowAnnotationsListener.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/FeatureValue.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/AbstractAnnotationDocumentListener.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/util/AnnotationComparator.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/ArrayValue.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/editview/FeatureStructureContentProvider.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/CasEditorError.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/editview/validator/CellEditorValidatorFacotory.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/util/UimaUtil.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/action/LowerRightAnnotationSideAction.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/util/StrictTypeConstraint.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/outline/AnnotationTreeNodeList.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/action/DeleteFeatureStructureAction.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/context/AnnotationEditingControlCreator.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/contextmenu/IModeMenuListener.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/fsview/TypeCombo.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/util/AnnotationSelection.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/annotation/EclipseAnnotationPeer.java
uimaj-ep-cas-editor-ide/src/main/java/org/apache/uima/caseditor/ide/wizards/ImportDocumentWizardPage.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/outline/AnnotationTreeNode.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/Images.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/ChangeModeAction.java
uimaj-ep-cas-editor-ide/src/main/java/org/apache/uima/caseditor/ide/wizards/ContainerElementFilter.java
uimaj-ep-cas-editor-ide/src/main/java/org/apache/uima/caseditor/ide/wizards/ImportDocumentWizard.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/editview/validator/ByteCellEditorValidator.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/FeatureStructureSelectionIterator.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/annotation/BoxDrawingStrategy.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/core/TaeError.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/AbstractDocumentListener.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/IAnnotationEditorModifyListener.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/outline/TypeGroupedContentProvider.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/util/ContainingConstraint.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/util/Primitives.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/QuickTypeSelectionDialog.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/editview/validator/IntegerCellEditorValidator.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/AnnotationDocument.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/action/MergeAnnotationAction.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/editview/CreateFeatureStructureDialog.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/AnnotationEditor.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/FeatureStructureSelectionProvider.java
uimaj-ep-cas-editor-ide/src/main/java/org/apache/uima/caseditor/ide/wizards/DocumentImportStructureProvider.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/ICustomInformationControlContentHandler.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/annotation/BackgroundDrawingStrategy.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/action/WideLeftAnnotationSideAction.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/editview/validator/FloatCellEditorValidator.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/fsview/FeatureStructureBrowserViewPage.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/annotation/UnderlineDrawingStrategy.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/outline/AnnotationTypeTreeNode.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/annotation/TextColorDrawingStrategy.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/AnnotationStyle.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/editview/ValueColumnLabelProvider.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/editview/FeatureColumnLabelProvider.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/action/WideRightAnnotationSideAction.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/util/ObjectTransfer.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/util/Span.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/AbstractDocument.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/AnnotationEditorActionContributor.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/AnnotationEditorView.java
uimaj-ep-cas-editor-ide/src/main/java/org/apache/uima/caseditor/ide/DefaultCasDocumentProvider.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/editview/validator/ShortCellEditorValidator.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/outline/OutlineContentProviderBase.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/core/model/dotcorpus/DotCorpusSerializer.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/CasDocumentProviderFactory.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/util/IDGenerator.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/core/model/dotcorpus/DotCorpus.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/util/FeatureStructureTransfer.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/CasEditorPlugin.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/contextmenu/ModeMenu.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/IEditorSelectionListener.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/fsview/FeatureStructureLabelProvider.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/FindAnnotateDialog.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/fsview/FeatureStructureBrowserView.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/FindAnnotateAction.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/annotation/TokenDrawingStrategy.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/core/model/DefaultColors.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/contextmenu/ShowAnnotationsMenu.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/AnnotationSelectionListener.java
uimaj-ep-cas-editor-ide/src/main/java/org/apache/uima/caseditor/ide/NlpProject.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/AnnotationInformationProvider.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/CasDocumentProvider.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/ModelFeatureStructure.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/annotation/BracketDrawingStrategy.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/outline/OutlineTableSorter.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/ICasDocumentListener.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/FeatureStructureSelection.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/outline/SwitchStyleAction.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/outline/AnnotationOutline.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/fsview/ITypePaneListener.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/outline/OutlineStyles.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/editview/EditView.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/context/AnnotationEditingControl.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/ICasDocument.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/editview/validator/LongCellEditorValidator.java
texts:Graduate the Cas Editor out of the sandbox
This task includes: Moving the Cas Editor source code to uimaj Merging the Cas Editor documentation into the main UIMA documentation Updating JIRA Integrate Cas Editor into UIMA build
issueID:UIMA-1361
type:Task
changed files:
texts:Lucas: Convert documentation into docbook format
Right now the project contains a maven site with the documentation, but UIMA uses docbook for its documentation. The maven site should be converted into  docbook.
issueID:UIMA-1362
type:Improvement
changed files:
texts:Cas Editor pom should use ${uimaj-release-version variable instead of hardcoded version string

issueID:UIMA-1363
type:Improvement
changed files:
texts:Access to individual type index iterators
UIMA feature structure iterators for a given type always include its subtypes. While this is generally the best thing to do, if an application requires more precise control over the types it needs an ability to iterate over the instances of a specific type only, leaving the subtypes out. In the current UIMA this is not possible to achieve.This is especially important for performance as iterating over an aggregate index is vastly more complicated than listing an individual index. In certain real-world scenarios using our AFST engine we are able to achieve close to 20% performance improvement on complete processing pipelines by simply giving the AFST type set iterator access to individual type iterators.The attached patch implements a new "ll_leafIterator()" method in LowLevelIndex which returns an iterator over the root type of an index. It also includes a simple alternative to FSIndexRepositoryImpl.PointerIterator for leaf types, also improving the performance when iterating over leaf types.
issueID:UIMA-1364
type:Improvement
changed files:
texts:Concurrent modification checks dominate index iteration time.
Iterating over the annotation index with even a moderate number of defined types is dominated by the time spent checking individual indexes for concurrent modification. This is due to the fact that concurrent modification checks are done on all types being iterated over, even if the iteration only needs to process a couple of iterators. In fact, checking all iterators for modification has linear complexity in the number of subiterators used, while the actual iteration can be implemented with logarithmic complexity using e.g. a binary heap.The UIMA documentation and JavaDoc do not state that the iterators should always recognize concurrent modification (FSIterator JavaDoc states "Implementations of this interface are not required to be fail-fast. That is, if the iterator's collection is modified, the effects on the iterator are in general undefined."). It thus makes sense to reduce the number of iterators being tested for concurrent modification at each moveToNext() step.The attached patch replaces the checkConcurrentModificationAll() call in FSIndexRepositoryImpl.PointerIterator.moveToNext() with concurrent modification checks on only the iterators being used by the step; as the iterator becomes invalid it also checks all involved iterators for modification. By doing this it should be able to catch almost all concurrent modification without the excessive overhead.In one of our performance tests iterating over the annotation index with 140 types defined is more than twice faster after the attached patch is applied.
issueID:UIMA-1365
type:Bug
changed files:
texts:Code trying to ensure reverse iterators list items in the opposite order of forward ones is present but not working
FSIndexRepositoryImpl contains pieces of code that are meant to ensure forward and reverse iterators are inverses of each other by doing additional comparison by FS address to resolve equality. However, this is not fully implemented and isn't working properly.The iteratorComparator defined by the PointerIterator class is not used for sorting elements in moveToNext() and moveToPrevious(), where the default comparators for the iterators are used instead. For the typical use of PointerIterator of listing the annotation index this does not cause a problem as the type priorities ensure ordering between indexes of different types, while the ordering is always defined within the individual indexes.The piece of code implementing the extra comparison should either be removed or corrected.
issueID:UIMA-1366
type:Improvement
changed files:uimaj-core/src/main/java/org/apache/uima/cas/impl/FSIndexRepositoryImpl.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/LowLevelIndex.java
texts:Binary heap annotation iterator implementation
The attached patch is a logarithmic complexity implementation of FSIndexRepositoryImpl.PointerIterator. The implementation maintains a binary heap of indexes and a short sorted section before the start of the heap to avoid spending more time than the old UIMA iterator when a couple of types completely dominate the heap.It offers small advantage when iterating over a small number of types and should be significantly faster for large numbers of types, as well as in situations where moveToNext() is not the only operation used on the iterator.
issueID:UIMA-1367
type:Bug
changed files:
texts:UIMA-AS docs & JavaDocs don&#39;t fully describe the UimaASStatusCallbackListener interface
They claim the callbacks provide an org.apache.uima.collection.EntityProcessStatus but it's actually an extension (org.apache.uima.aae.client.UimaASProcessStatus) with 2 extra methods.Also need a correction as says that "On success aStatus will be null"Also need to state when (or if) entityProcessComplete provides a null CAS, and that the input CAS is provided when an exception has occurred.Note:  When running the tests I do see replies with a null CAS, with & without IDs in the status, but some are to be expected until 1358 is fixed.
issueID:UIMA-1368
type:Improvement
changed files:uimaj-core/src/main/java/org/apache/uima/cas/admin/FSIndexComparator.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FSIndexRepositoryImpl.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FSIndexComparatorImpl.java
texts:Compiler warnings in CAS index impl code
Try to eliminate at least some of the compiler warnings in the CAS indexing impl.
issueID:UIMA-1369
type:Bug
changed files:
texts:ResourceInitializationException in a collocated delegate causes a hang
When a collocated AE throws ResourceInitializationException the UIMA service wrapper (UIMA_Service) is not notified. The exception is silently handled in UimaAsThreadFactory. Modify Primitive Controller to notify the service wrapper of initialization failure so that it can terminate the service.
issueID:UIMA-137
type:Bug
changed files:
texts:Import_implTest fails on mvn package
Running org.apache.uima.resource.metadata.impl.Import_implTestTests run: 3, Failures: 0, Errors: 1, Skipped: 0, Time elapsed: 0.031 sec <<< FAILURE!Unfortunately, this is all the information I get.  Test runs fine in Eclipse.  Modifying the working directory in Eclipse does not make the test fail, either.
issueID:UIMA-1370
type:Improvement
changed files:
texts:Lucas: add the usual suspects to svnignore

issueID:UIMA-1371
type:New Feature
changed files:
texts:Performance improvement: remove reliance on Property class and excess String building to reduce in-memory dictionary size.
Performance improvement: remove reliance on Property class and excess String building to reduce in-memory dictionary size.
issueID:UIMA-1372
type:Improvement
changed files:
texts:Improve description of ConceptMapper on UIMA sandbox components web page
Here is the proposed new wording:ConceptMapper is a powerful, highly configurable dictionary UIMA-based annotator. Numerous parameters can be used to specify various aspects of the lookup algorithm, input processing and output options. The dictionary structure is flexible, allowing any number synonyms to be associated with an entry, and any number of attributes to be associated with entries or synonyms. Lookup and matching against dictionary entries can be performed against contiguous or non-contiguous blocks of text, and token order independant lookup is also allowed (for example, the tokens "A" "B" would be considered a match against dictionary entry "B" "A"). Additionally, ConceptMapper can be configured to use any tokenizer annotator, enabling tokenization of its dictionaries identically with the input text.
issueID:UIMA-1373
type:Bug
changed files:
texts:SimpleUimaAsService needs a POM
The Simple UIMA As Service does not have a Project Object Model (POM) file
issueID:UIMA-1374
type:Bug
changed files:
texts:TikaAnnotator source code does not compile because of incorrect package declarations
Thilo:"I extracted the TikaAnnotator into my Eclipse workspace.Eclipse is complaining that a bunch of source files (allgenerated JCas files) are in the wrong place: they liveunder org/apache/uima/tika, but their package declarationsaye org.apache.uima (without the tika).Now here's the part that I really don't understand: mavendoes not complain, but just compiles everything andcreates the jar (where the class files end up in theircorrect place).That mystery aside: can I move the source files to theirproper place, or am I missing something?  Thanks."
issueID:UIMA-1375
type:Bug
changed files:
texts:Fix a race condition while handling CASes generated by a Cas Multiplier
The Uima AS aggregate sometimes tries to use a wrong CAS pool when deserializing CASes received from a remote CM. The aggregate stores a key of the delegate CM in a cache before sending a CAS to the delegate. When the Aggregate receives a child CAS, it looks up the cache with parent CAS id and retrieves the CM delegate key. Sometimes, when the aggregate looks up the CM delegate key it receives a key of the next CM suggesting that the state of cache entry changes unexpectedly.
issueID:UIMA-1376
type:Bug
changed files:
texts:Fix NPE in Uima AS Aggregate while handling getMeta responses
While merging type system from a delegate Uima AS the following exception is thrown:6/8/09 8:59:20 AM - 32: org.apache.uima.aae.error.handler.GetMetaErrorHandler.handleError: WARNING: {0}java.lang.NullPointerException at org.apache.uima.resource.CasDefinition.<init>(CasDefinition.java:66) at org.apache.uima.resource.impl.CasManager_impl.getCasDefinition(CasManager_impl.java:94) at org.apache.uima.resource.impl.CasManager_impl.createNewCas(CasManager_impl.java:196) at org.apache.uima.util.CasPool.fillPool(CasPool.java:319) at org.apache.uima.util.CasPool.<init>(CasPool.java:191) at org.apache.uima.resource.impl.CasManager_impl.defineCasPool(CasManager_impl.java:174) at org.apache.uima.resource.impl.CasManager_impl.defineCasPool(CasManager_impl.java:152) at org.apache.uima.aae.EECasManager_impl.defineCasPool(EECasManager_impl.java:60) at org.apache.uima.aae.AsynchAECasManager_impl.initialize(AsynchAECasManager_impl.java:98) at org.apache.uima.aae.AsynchAECasManager_impl.initialize(AsynchAECasManager_impl.java:86) at org.apache.uima.aae.controller.AggregateAnalysisEngineController_impl.mergeTypeSystem(AggregateAnalysisEngineController_impl.java:2182) at org.apache.uima.aae.handler.input.MetadataResponseHandler_impl.handle(MetadataResponseHandler_impl.java:133) at org.apache.uima.aae.handler.HandlerBase.delegate(HandlerBase.java:158) at org.apache.uima.aae.handler.input.ProcessResponseHandler.handle(ProcessResponseHandler.java:673) at org.apache.uima.adapter.jms.activemq.JmsInputChannel.onMessage(JmsInputChannel.java:665) at org.apache.uima.adapter.jms.activemq.ConcurrentMessageListener$1.run(ConcurrentMessageListener.java:163) at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886) at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908) at java.lang.Thread.run(Thread.java:619)it could be that this is caused when two threads simultaneously try to merge their typesystems. This exception happens rarely, suggesting a race condition of some sort or/and perhaps, that the core is not thread safe with respect to merging typesystems in multiple threads. The latter is just a speculation.
issueID:UIMA-1378
type:Bug
changed files:
texts:Build of uimaj-examples project fails
Classpath for uimaj-examples project references old xstream-1.1.2.jar instead of xstream-1.2.2.jarOffending file appears to be uima-as-distr/src/main/eclipseProject/classpath
issueID:UIMA-1379
type:Bug
changed files:
texts:Type system namespace should be org.apache.uima.tika, not just org.apache.uima

issueID:UIMA-138
type:Bug
changed files:uimaj-cpe/src/main/java/org/apache/uima/collection/impl/cpm/engine/ArtifactProducer.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/cpm/engine/ArtifactProducer.java
texts:Example MeetingFinderCPE_withXmlDetagging.xml doesn&#39;t work
Reported by user on alphaWorks forum:I recently started working with UIMA and have still some problems especially with one Collection Processing Engine, that was provided with UIMA examples. The CPE's name is MeetingFinderCPE_WithXmlDetagging. I haven't yet changed anything about the Java or XML code and it seems to me there is an error which originates either from distribution incompabilities or maybe there is an error in some part of the code. I keep receiving an error message that reads:com.ibm.uima.analysis_engine.AnalysisEngineProcessException: Annotator processing failed. Caused by: CASRuntimeException: No sofaFS with name xmlDocument found.As I have only found a bad solution to this problem, it would be great if someone might take care of it, especially since it is an example that is not mentioned in the tutorial. -----------------------------------------------------------------------------Adam:There are two issues:  (a) The CPE GUI doesn't support sofaMappings at all.(b) The example descriptor tried to supply a CollectionReader sofa Mapping that mapped the Collection Reader's initialView to a CPE Sofa called "rawDocument".  This isn't supported - it results in an error saying "rawDocument" is not found before the CollectionReader is even called.  Should this be supported?
issueID:UIMA-1380
type:Bug
changed files:uimaj-tools/src/main/java/org/apache/uima/tools/cpm/CpmPanel.java
texts:SwingWorker is Sun code that can&#39;t be relicensed under Apache license and needs to be removed
SwingWorker.java is sample code from the Swing tutorial that was copied verbatim.  Must be removed.  Fortunately, it's only used in one place, where it can easily be replaced.
issueID:UIMA-1381
type:Task
changed files:
texts:Write documentation for uimaj-as-camel project

issueID:UIMA-1382
type:Improvement
changed files:
texts:Change log level for JMS timeout between services and their reply queues
UIMA AS Services respond to the temp reply queues specified in the requests. The service maintains the JMS connection with the reply queue to minimize overhead on subsequent replies. However, in order to avoid holding on to too many resources, these connections are dropped after a specified period (default = 30 min).These connection drops are currently logged at INFO level, which can be a problem for a highly scaled system. Moving them to CONFIG.
issueID:UIMA-1383
type:Improvement
changed files:
texts:Add UIMA workshop/conference announcements to web site
Add announcements for GSCL and LSM UIMA workshops.
issueID:UIMA-1384
type:Bug
changed files:
texts:WhitespaceTokenizer pom still references UIMA 2.2.2
Will check other components as well.
issueID:UIMA-1385
type:Bug
changed files:
texts:Regex annotator does not close concept file input stream after reading
This leads to problems on windows as the file remains locked and may not be deleted.
issueID:UIMA-1386
type:Bug
changed files:uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/annotation/BackgroundDrawingStrategy.java
texts:Cas Editor: BackgroundDrawingStrategy throws IllegalArgumentException
java.lang.IllegalArgumentException: Index out of bounds at org.eclipse.swt.SWT.error(SWT.java:3761) at org.eclipse.swt.SWT.error(SWT.java:3695) at org.eclipse.swt.SWT.error(SWT.java:3666) at org.eclipse.swt.custom.StyledText.getText(StyledText.java:4518) at org.apache.uima.caseditor.editor.annotation.BackgroundDrawingStrategy.draw(BackgroundDrawingStrategy.java:72) at org.eclipse.jface.text.source.AnnotationPainter.drawDecoration(AnnotationPainter.java:1424) at org.eclipse.jface.text.source.AnnotationPainter.handleDrawRequest(AnnotationPainter.java:1390) at org.eclipse.jface.text.source.AnnotationPainter.paintControl(AnnotationPainter.java:1334) at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:217) at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:84) at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1003) at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1027) at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1012) at org.eclipse.swt.widgets.Composite.WM_PAINT(Composite.java:1424) at org.eclipse.swt.widgets.Control.windowProc(Control.java:3842) at org.eclipse.swt.widgets.Canvas.windowProc(Canvas.java:337) at org.eclipse.swt.widgets.Display.windowProc(Display.java:4541) at org.eclipse.swt.internal.win32.OS.DispatchMessageW(Native Method) at org.eclipse.swt.internal.win32.OS.DispatchMessage(OS.java:2371) at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3420) at org.eclipse.jface.window.Window.runEventLoop(Window.java:825) at org.eclipse.jface.window.Window.open(Window.java:801) at org.eclipse.ui.dialogs.PropertyDialogAction.run(PropertyDialogAction.java:157) at org.eclipse.jface.action.Action.runWithEvent(Action.java:498) at org.eclipse.ui.actions.RetargetAction.runWithEvent(RetargetAction.java:230) at org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection(ActionContributionItem.java:583) at org.eclipse.jface.action.ActionContributionItem.access$2(ActionContributionItem.java:500) at org.eclipse.jface.action.ActionContributionItem$5.handleEvent(ActionContributionItem.java:411) at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:84) at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1003) at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:3823) at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3422) at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:2384) at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:2348) at org.eclipse.ui.internal.Workbench.access$4(Workbench.java:2200) at org.eclipse.ui.internal.Workbench$5.run(Workbench.java:495) at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:288) at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:490) at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:149) at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:113) at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:193) at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:110) at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:79) at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:386) at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:179) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25) at java.lang.reflect.Method.invoke(Method.java:597) at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:549) at org.eclipse.equinox.launcher.Main.basicRun(Main.java:504) at org.eclipse.equinox.launcher.Main.run(Main.java:1236)
issueID:UIMA-1387
type:Task
changed files:
texts:Cas Editor: Remove pde log viewer from perspective

issueID:UIMA-1388
type:Bug
changed files:
texts:TypeSystem2Xml creates an incompatible type system descriptor
A type system (at least if it uses FSArray in it) that is converted to a type system descriptor by using "TypeSystem2Xml.typeSystem2Xml(cas.getTypeSystem(), out);" can't be used for later CAS creations anymore, as it is incompatible with the descriptor needed by "CasCreationUtils.createCas(descriptor, null, new FsIndexDescription&#91;0&#93;);".CasCreationUtils.createCAS throws an CASAdminException then (see below).The serialization of a type system with TypeSystemUtil.typeSystem2TypeSystemDescription(cas.getTypeSystem()).toXML is not affected, and so a good workaround. CASAdminException: Can't derive from type "uima.cas.FSArray" since it is inheritance final. at org.apache.uima.cas.impl.TypeSystemImpl.addType(TypeSystemImpl.java:581) at org.apache.uima.util.CasCreationUtils.setupTypeSystem(CasCreationUtils.java:733) at org.apache.uima.util.CasCreationUtils.doCreateCas(CasCreationUtils.java:590) at org.apache.uima.util.CasCreationUtils.createCas(CasCreationUtils.java:352) at org.apache.uima.util.CasCreationUtils.createCas(CasCreationUtils.java:304) at org.pubcurator.uima.utils.FullCasDeserializerTest.testDeserialize(FullCasDeserializerTest.java:45) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25) at java.lang.reflect.Method.invoke(Method.java:597) at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:44) at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15) at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:41) at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20) at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:28) at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:31) at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:73) at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:46) at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:180) at org.junit.runners.ParentRunner.access$000(ParentRunner.java:41) at org.junit.runners.ParentRunner$1.evaluate(ParentRunner.java:173) at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:28) at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:31) at org.junit.runners.ParentRunner.run(ParentRunner.java:220) at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:46) at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38) at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:467) at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:683) at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:390) at org.eclipse.pde.internal.junit.runtime.RemotePluginTestRunner.main(RemotePluginTestRunner.java:62) at org.eclipse.pde.internal.junit.runtime.CoreTestApplication.run(CoreTestApplication.java:23) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25) at java.lang.reflect.Method.invoke(Method.java:597) at org.eclipse.equinox.internal.app.EclipseAppContainer.callMethodWithException(EclipseAppContainer.java:574) at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196) at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:110) at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:79) at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:368) at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:179) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25) at java.lang.reflect.Method.invoke(Method.java:597) at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:559) at org.eclipse.equinox.launcher.Main.basicRun(Main.java:514) at org.eclipse.equinox.launcher.Main.run(Main.java:1311) at org.eclipse.equinox.launcher.Main.main(Main.java:1287)
issueID:UIMA-1389
type:Test
changed files:
texts:Remove OpenNLP example wrapper
The OpenNLP wrapper are not compatible with OpenNLP 1.4.x and the OpenNLP team will release its own wrapper for 1.4.x.
issueID:UIMA-1390
type:Improvement
changed files:
texts:UIMA should include a User Library containing all the necessary jars for Eclipse projects
We could include a uima.userlibraries file containing all the jars needed by projects using UIMA ... would avoid the need to add the jars one by one when setting up the classpath ... simply import this file and then add the library to the project's build path.  It could contain separate sets for core UIMA and UIMA-AS.The adjustExamplePaths script could correct its absolute paths.
issueID:UIMA-1391
type:Improvement
changed files:
texts:Client of a CAS Multiplier should be able to stop processing of a CAS
Normally the number of CASes generated by a Cas Multiplier is determined by the CM itself, but with an aggregate CM that number may be hard to anticipate or control.  Some applications may not need all of the generated CASes ... they may be satisfied once an appropriate amount of information has been returned.Hence it would be convenient for the client to be able to request that the CM stop generating CASes, and if an aggregate, stop processing any internal CASes generated from the input CAS.  Such a request is probably only useful for CMs acting as pure segmenters ... if the CM is merging CASes or resegmenting them then the process could be terminated by the application upon receiving an end-of-stream CAS.  It might be an acceptable simplification to have the stop request stop all processing of active CASes, but then again it may be easily handled by the changes being made to stop an aggregate CM when a generated CAS produces an exception.
issueID:UIMA-1392
type:Bug
changed files:
texts:OpenCalaisAnnotator&#39;s annotations have truncated &#39;coveredText&#39; field
When running OpenCalaisAnnotator all of the annotations' 'coveredText' fields have the first character missing (i.e.: annotation of type Organization for text "Microsoft" has coveredText property set to "icrosoft", annotation of type Currency for text "$240,000" has coveredText set to "240,000"...)
issueID:UIMA-1393
type:Improvement
changed files:
texts:UimaSerializer should make use of ThreadLocal
The current implementation tries to emulate ThreadLocal with a Map and a lock. Using ThreadLocal directly has the advantage of makingthe code simpler and enabling garbage collection for cached instances when the belonging thread ends.
issueID:UIMA-1394
type:Bug
changed files:
texts:Uima AS should log Id of an expired CAS
Uima AS should log an Id of a CAS that is received after a Timeout. Such CAS might have been removed from the cache and is consider expired. Adding an id will help in the debugging.
issueID:UIMA-1395
type:Bug
changed files:
texts:No way to programatically kill a uimacpp process launched by UimacppServiceController
UIMA CPP services can be launched by the UIMA_Service class when the UIMA AS deployment descriptor contains the element<custom name="run_top_level_CPP_service_as_separate_process"/>If the JVM is stopped, a shutdown hook in UimacppServiceController willterminate the CPP process. However, if UimacppServiceController is itselfdeployed in an application container, such as a Tomcat application, there is no way to terminate the CPP process when stopping the application.
issueID:UIMA-1396
type:Improvement
changed files:uimaj-core/src/main/java/org/apache/uima/analysis_component/CasAnnotator_ImplBase.java
uimaj-core/src/main/java/org/apache/uima/analysis_component/CasMultiplier_ImplBase.java
uimaj-core/src/main/java/org/apache/uima/analysis_component/JCasAnnotator_ImplBase.java
uimaj-core/src/main/java/org/apache/uima/analysis_component/JCasMultiplier_ImplBase.java
texts:Use generics in uimaj-core org.apache.uima.analysis_component package

issueID:UIMA-1397
type:Improvement
changed files:uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/fsview/FeatureStructureBrowserViewPage.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/outline/TypeGroupedContentProvider.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/FeatureValue.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/outline/OutlineContentProviderBase.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/fsview/FeatureStructureBrowserView.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/editview/EditView.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/ICasEditor.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/outline/AnnotationTreeNodeList.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/editview/FeatureStructureContentProvider.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/AnnotationDocument.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/AnnotationEditorView.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/ChangeModeAction.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/AnnotationEditor.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/ICasDocument.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/editview/EditViewPage.java
texts:Extract CasEditor interface from AnnotationEditor
The Cas Editor should use a ICasEditor interface to decouple the views from a particular editor implemention.The decoupling makes it possible to implement a new editor which can reuse the existing views.
issueID:UIMA-1398
type:Improvement
changed files:uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/AbstractDocument.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/AnnotationDocument.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/AnnotationEditor.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/DocumentUimaImpl.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/ICasDocument.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/action/MergeAnnotationAction.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/action/WideRightAnnotationSideAction.java
texts:Refactor ICasDocument interface to be more generic for non-text cas editors
The ICasDocument interface should be refactored to be more generic for non text cas editor implementations.All methods should have FeatureStructure typed parameters instead of AnnotationFS.
issueID:UIMA-1399
type:Bug
changed files:
texts:Deployment of C++ service ignores <environmentVariable name="UIMACPP_STARTING_DIRECTORY">
UIMA AS deployment descriptors allow specification of the starting directory for external processes launched by Java. Currently this element is ignored by UimacppServiceController
issueID:UIMA-14
type:Bug
changed files:
texts:Plugin manifests still list IBM as the vendor

issueID:UIMA-1400
type:Bug
changed files:uimaj-core/src/main/java/org/apache/uima/resource/impl/CasManager_impl.java
uimaj-core/src/main/java/org/apache/uima/impl/UimaContext_ImplBase.java
uimaj-core/src/main/java/org/apache/uima/UimaContextAdmin.java
texts:Uima aggregate with embedded Cas Multiplier fails if one attempts to create multiple instances of it in the same JVM
When trying to scale Uima aggregate with a Cas Multiplier in the same JVM, the code fails with the following:org.apache.uima.analysis_engine.AnalysisEngineProcessException: The method CasManager.defineCasPool() was called twice by the same Analysis Engine This is due to the fact that the CasManager creates a single CAS pool for any given Cas Multiplier, no matter how many instances of it are created. The first instance of a particular CM creates a CAS Pool and the pool is associated with that instance using a CM's qualified name obtained from the component's uima context. The second instance of the same CM fails, since its trying to create another CAS pool with the same qualified name as the first instance. Create and assign a unique name in the Uima context for each instance of a component. Use the unique name when calling defineCasPool() so that every instance of the CM component creates its own CAS pool.
issueID:UIMA-1401
type:Improvement
changed files:
texts:Uima AS should assign explicit name to processing threads
Uima AS should provide more descriptive names to threads it creates to enable better debugging.
issueID:UIMA-1402
type:Bug
changed files:
texts:Uima AS listener threads sometimes hangs while trying to stop
While trying to stop the listener, Uima AS sometimes hang in the UimaDefaultMessageListenerContainer destroy method.
issueID:UIMA-1403
type:Bug
changed files:
texts:Lucas: many test cases fail
Lots of test cases in Lucas fail.  They have not been adapted to the new directory layout.  There's also at least one absolute path in the test config referring to test input data.  Please use local data as test input (i.e., put the test data in the src/test/resources folder).  Please discuss on the mailing list if current test data is proprietary and needs to be replaced with publicly available data.
issueID:UIMA-1404
type:Bug
changed files:uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/editview/EditViewPage.java
texts:It is not possible to set feature values with subtypes of the feature type.
It is not possible to set features with subtypes of the feature type.More specific, given an annotation A of type X that has a feature of type Y and another annotation B of type Z which is a subtype of Y.In order to create a reference from A to B, one fixes annotation A in the edit view and drags annotation B from the outline view to the slot of type Y. However, it fails since the edit view only allows annotations of type Y not subtypes.We assume that the bug is located in org.apache.uima.caseditor.editor.editview.EditViewPage.java - Line 629 (Type.equals check).
issueID:UIMA-1405
type:Bug
changed files:
texts:Uima AS not allowing deployment of more than one deployment descriptor in the same jvm
Uima AS fails with ResourceInitializationException when one tries to deploy more than one deployment descriptor using deployAsyncService script. The problem is that components in generated spring context files are deployed into a single Spring container. But each spring context files defines singleton objects that are not meant to be used externally. An example of such non-shared singleton would the InProcessCache. It is meant to be shared by components defined in a single context file. There are few possibly solutions here:1) modify dd2spring to assign unique names to spring beans to prevent sharing across context files. 2) modify uima-as deployer to deploy each context file in a separate spring container3) find a way to prevent spring from sharing singleton objects across context files.
issueID:UIMA-1406
type:Bug
changed files:
texts:UimacppServiceController should implement AnalysisEngineController interface
The UimacppServiceController is not implementing AnalysisEngineController interface which is a common interface for uima AS controllers. To provide a common mechanism for lifecycle mgmt for both java and cpp controllers it would be best to have the cpp controller implement the common interface. With support of this interface, a service wrapper (servler, UIMA_Service) can stop a controller not matter of its type ( java or cpp).
issueID:UIMA-1407
type:Bug
changed files:
texts:Fix UimaAS log messages
Some Uima AS messages are not logged properly by Aggregate controller.
issueID:UIMA-1408
type:Bug
changed files:uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/annotation/BackgroundDrawingStrategy.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/util/Span.java
texts:Annotation highlightning does not work with background drawing strategy
An annotation which is visualized with the background drawing strategy in the cas text edtiro is not highlighted when selected in the outline view. The annotation appearance should change to give the user a feedback which annotation is selected.
issueID:UIMA-1409
type:Bug
changed files:
texts:The implementation of the uimaj-as-camel producer must be thread safe but is not
The producer implementation is sharing a map between the async CAS sender and the call back listener. This map is not thread safe but must be.
issueID:UIMA-141
type:Bug
changed files:uimaj-tools/src/main/javajet/jcasgen/includedTemplates/ArrayBoundsChecking.javajet
uimaj-tools/src/main/javajet/jcasgen/templates/JCasType.javajet
uimaj-tools/src/main/java/org/apache/uima/tools/jcasgen/JCasTypeTemplate.java
uimaj-tools/src/main/javajet/jcasgen/includedTemplates/AnnotationMethods.javajet
uimaj-jet-expander/src/org/apache/uima/util/jet/JetExpander.java
texts:JCasGen - bring over missing templates and template build tool jet_expander
JCasGen tool has two "source files" which are generated from templates.  The templates and the tool that generates the source files (jet-expander) are missing - add them.
issueID:UIMA-1410
type:Bug
changed files:
texts:The uimaj-as-camel producer should report and log all error/exceptions
There are several TODOs in the implementation which must be replaced with proper error handling and logging.
issueID:UIMA-1411
type:Bug
changed files:
texts:Instructions for building eclipse update site are wrong
Instructions both on website and ant script need to be fixed.
issueID:UIMA-1412
type:Improvement
changed files:
texts:EntityProcessStatus implementations should implement toString to ease debuging
The eclipse debugger calls the toString method of an object to get a string representation which is displayed in the debugger. To ease debugging the EntityProcessStatus implemenations should reveal basic information about the object in an overwritten toString method.
issueID:UIMA-1413
type:Task
changed files:
texts:Add uimaj-as-camel to uima as distribution
The uimaj-as-camel project should be included in the distribution.
issueID:UIMA-1414
type:Task
changed files:
texts:Add Cas Editor to uima distribution
The Cas Editor should be included in the uima distribution.
issueID:UIMA-1415
type:Bug
changed files:
texts:Unix shell scripts should not use -vx debug arguments
Some of the scripts in the bin folder of the distribution use the shell with the -vx debug option which leadsto printing parts of the script to the shell.The debug arguments should be removed to not confuse users.These scripts are affected:jcasgen.sjcasgen_merge.shibmUimaToApacheUima.sh
issueID:UIMA-1416
type:Bug
changed files:
texts:Stop sending ShutdownException from Uima AS service to the client
Uima AS service sends a ShutdownException to its client before the service terminates. This exception should not be propagated to the client. Instead, a service should send a cause exception along with an input Cas Id that triggered a shutdown due to exceeded error threshold.
issueID:UIMA-1417
type:Improvement
changed files:
texts:ResourceConfigurationException to be thrown from the initialize(context) method
Hello,In the UIMA Tutorial and Developer's Guide, section "Throwing Exceptions from Annotators", it is written that one can throw 3 kinds of exceptions, one of which is the ResourceConfigurationException. And it is written that is good to read the configuration parameters in the inialize() method, but unfortunately the initialize() method can throw only ResourceInitializationException, so I am not able to throw the ResourceConfigurationException. The method signature is:public void initialize(UimaContext context) throws ResourceInitializationExceptionCan you add also the ResourceConfigurationException or correct the documentation?Greetings,Nikolay
issueID:UIMA-1418
type:Bug
changed files:uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/FindAnnotateAction.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/FindAnnotateDialog.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/fsview/TypeCombo.java
texts:Find/Annotate dialog annotation type should be synchronized with editor mode
The Find/Annotate dialog in the Cas Editor chooses uima.tcas.Annotation as the default type. The behavior can easily confuse users becausethe uima.tcas.Annotation type is not necessarily visualized in the editor. The default type should be changed to the mode type of the editor, since the mode type is always shown and often thats also the type a user needs.
issueID:UIMA-1419
type:Improvement
changed files:uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/FindAnnotateDialog.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/action/LowerLeftAnnotationSideAction.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/action/LowerRightAnnotationSideAction.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/action/WideLeftAnnotationSideAction.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/action/WideRightAnnotationSideAction.java
texts:Find/Annotate dialog should have buttons to adjust annoation span
Annotations created with the Find/Annotate dialog often do not match the desired span completely. Buttons to adjust the annotation span should be added to the dialog.
issueID:UIMA-142
type:Bug
changed files:
texts:JCas version of getLocalFSData() returning wrong type
The Sofa method getLocalFSData() returns a CAS Array of primitive CAS types like integers, bytes, etc.  But the return value for this method in the JCas is FSArray - which is an array of Feature Structures.  Change this to return FeatureStructure (a supertype of TOP).
issueID:UIMA-1420
type:Bug
changed files:uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/AnnotationEditor.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/CasDocumentProvider.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/annotation/EclipseAnnotationPeer.java
texts:Annotation Editor updates are too slow when it displays a huge number of annotations
The Annotation Editor needs to much time to update the displayed text with annotations when the annotation model behind it is updated. The implementation right now triggers a repaint for remove and add AnnotationFS operations and two repaints for an update to an existing AnnotationFS.These repaints can take around a second on a newspaper article which is visualized with all token annotations. This huge delay makes the Cas Editor nearly unusable.
issueID:UIMA-1421
type:Bug
changed files:uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/outline/AnnotationOutline.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/outline/TypeGroupedContentProvider.java
texts:Removing a huge number of annoations is slow
Removing a huge number of annotations at once in the Cas Editor takes way to much time.
issueID:UIMA-1422
type:Bug
changed files:
texts:Improve/fix build process for Eclipse Plugins
Eclipse update site build not working, parts seem broken.  See http://markmail.org/thread/5m6kzwczxlqdyknh
issueID:UIMA-1423
type:Bug
changed files:
texts:Document import broken
The import functionality seems to be broken: It is not possible to import plain text files into a corpus folder. An error dialog without an error message is shown.
issueID:UIMA-1424
type:Task
changed files:
texts:Remove .launch files from Cas Editor
The Cas Editor offers .launch files with the intention of making launching it easy. Though these files are platform and eclipse version dependent and usually do not work. They should be removed to not further confuse our users.
issueID:UIMA-1425
type:Bug
changed files:
texts:Cas Editor plugin tests cannot be executed
The Cas Editor defines plugin tests which are executed inside eclipse the junit plugin test runner. The runner fails with a strange error message indicating that the test classes do not have test methods.
issueID:UIMA-1427
type:Question
changed files:
texts:AE as Eclipse plugin + resource definitions = ResourceAccessException
Please see http://article.gmane.org/gmane.comp.apache.uima.general/2147This issue provides the sample plugins to demonstrate the problem.
issueID:UIMA-1428
type:Improvement
changed files:uimaj-core/src/main/java/org/apache/uima/cas/impl/StringArrayFSImpl.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/BooleanArrayFSImpl.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/DoubleArrayFSImpl.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/BooleanConstraint.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FloatArrayFSImpl.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FloatConstraint.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/IntConstraint.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/ShortArrayFSImpl.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/IntArrayFSImpl.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/ByteArrayFSImpl.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/EmbeddedConstraint.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/ArrayFSImpl.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/StringConstraint.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/LongArrayFSImpl.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/TypeImpl.java
texts:Remove unused private constructors from org.apache.uima.cas.impl package classes

issueID:UIMA-1429
type:Bug
changed files:
texts:Generate unique JMX name for every UIMA AS client instance
When an application creates a second instance of a UIMA AS client in the same JVM, an exception is thrown in the initialize() method. Only the first instance initializes correctly. This exception is thrown when the second instance attempts to register a JMX MBean (to expose client side stats) with a JMX Server. This is due to the fact that both instances try to register the MBean using the same ObjectName. Modify the client code to make the name unique before registering with JMX.
issueID:UIMA-143
type:Improvement
changed files:uimaj-core/src/main/java/org/apache/uima/jcas/impl/JCasImpl.java
uimaj-core/src/main/java/org/apache/uima/cas/CAS.java
uimaj-core/src/main/java/org/apache/uima/jcas/JCas.java
texts:JCas and CAS interface and impl refactoring for more sharing
Now that there is a JCas interface, look into some refactoring to share the interface definitions where possible.  This includes:Adding some methods to JCas to make it more like the CAS.  Cases where different types are returned can't be shared; e.g. one returns a CAS the other a JCas.Shared items put into new class BaseCas.
issueID:UIMA-1430
type:Bug
changed files:uimaj-core/src/main/java/org/apache/uima/cas/impl/XmiCasDeserializer.java
texts:XmiCasDeserializerHandler.readFS(String, String, String, Attributes) should throw an instantiated exception
The methods instantiates an exception in an error code but does not throw it. To fix the issue the exception should be thrown.
issueID:UIMA-1431
type:Bug
changed files:uimaj-core/src/main/java/org/apache/uima/internal/util/IntArrayUtils.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/impl/ResultSpecification_impl.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/LLUnambiguousIteratorImpl.java
texts:Fix some potential overflow errors
Findbugs finds some integer computations which can overflow (silently).  We've ignored these before, but with (some) users now running on 32 GB 64-bit Linuxes, it is possible these may occur.
issueID:UIMA-1432
type:Bug
changed files:uimaj-adapter-soap/src/main/java/org/apache/uima/adapter/soap/AxisAnalysisEngineServiceStub.java
uimaj-adapter-vinci/src/main/java/org/apache/uima/adapter/vinci/VinciAnalysisEngineServiceStub.java
uimaj-adapter-vinci/src/main/java/org/apache/uima/adapter/vinci/VinciBinaryAnalysisEngineServiceStub.java
texts:Function SOAP AxisAnalysisEngineServiceStub.callAnalysisEngineMetaData() fails and should be removed
See thread: http://markmail.org/message/ri7kfrle333erpvcThe function AxisAnalysisEngineServiceStub.callGetAnalysisEngineMetaData() has been replaced by AxisResourceServiceStub.callGetMetaData(), so callGetAnalysisEngineMetaData should be removed.
issueID:UIMA-1433
type:Bug
changed files:
texts:UIMA AS service creates too many JMS connections
UIMA AS service maintains connections to client's reply queue. These connections are cached and reused. When the connection becomes idle for too long, it is closed. Current default connection timeout is set to 30 minutes. This value can be changed via System property -DSessionTimeoutOverride=n.JMS Connections are expensive, and if too many are created the broker may become unstable. As optimization, the service should create a single JMS connection (per broker) and use it to create jms sessions and message producers for each client. This change will  reduce number of threads the broker needs to manage in deployments where clients and services use a single broker for messaging.
issueID:UIMA-1434
type:Bug
changed files:
texts:UIMA AS logs an exception when handling stale messages
Stale messages should not be logged with an exception. Messages can become stale for a number of reasons and should not be logged as a warning. Instead of an exception, a message should be logged to indicate that the stale message was processed.
issueID:UIMA-1435
type:Bug
changed files:
texts:UIMA AS client creates too many JMS connections to a broker
Currently, a JMS Connection is created for every instance of UIMA AS client. When scaling UIMA AS client in the same JVM, this results in many connections to the same Broker. As optimization, the first instance of UIMA AS client should create a single connection to the broker and store it in a static data structure. Subsequent UIMA AS client instances should reuse the connection to create JMS sessions. The connection will be closed when all client instances call stop() method.
issueID:UIMA-1436
type:Bug
changed files:
texts:Fix UIMA AS client code to address race conditions that may result in a hang
There are few places in the code where race conditions exist that may result in a hang.
issueID:UIMA-1437
type:Bug
changed files:
texts:Fix UIMA AS testcase code to address intermittent hangs
A recent fix that introduced a SharedConnection object exposed a threading problem in the testcase code. Testcases in the extended suite were not being completely cleaned up between runs. Some of the threads from a previous testcase were still running in a new testcase. Modify the testcase code to make sure that all threads are finished before starting another testcase.
issueID:UIMA-1438
type:Bug
changed files:
texts:Don&#39;t delete src/main/resources/META-INF
The uimaj-as-camel project has a service file located below src/main/resources/META-INF/ which must be included in the build. Right now the folder gets deleted on mvn clean and mvn package by the CleanLicenseNoticeDisclaimer ant task. The intention of the ant task is to only delete the LICENSE, NOTICE and  DISCLAIMER files.
issueID:UIMA-1439
type:Bug
changed files:
texts:Fix interemittent hangs in UIMA AS when stopping the JMS listener
When stopping UIMA AS listener, the ThreadPoolTaskExecutor shutdown method is called and the code than waits for all threads managed by the executor to stop. The problem is that listener's stop method may be called from one of the threads that are being managed by the executor. The executor tries to stop the thread and the thread tries to stop the executor. This leads to a hang.
issueID:UIMA-144
type:Bug
changed files:
texts:Wrong impl in JCasImpl for getView(local-view-name)
This method is erronously creating a new JCas instance for every call, instead of operating "lazily" in creating only if the JCas didn't exist.
issueID:UIMA-1440
type:Improvement
changed files:
texts:Documentation build: add ant script that copies the docbook prereqs from a known location
I often build from clean svn extracts to make sure everything is clean.  When I build the distribution, the build needs to download saxon etc. to be able to build the documentation.  This takes forever, and requires manual intervention.  Add a small ant script that allows you to copy the required files from a local directory to save some time during the build.
issueID:UIMA-1441
type:Bug
changed files:uimaj-core/src/main/java/org/apache/uima/cas/impl/FSIteratorImplBase.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/Subiterator.java
texts:Incorrect use of Collection.binarySearch in UnambiguousIteratorImpl
Same issue as https://issues.apache.org/jira/browse/UIMA-464
issueID:UIMA-1442
type:Improvement
changed files:uimaj-core/src/main/java/org/apache/uima/internal/util/rb_trees/CompIntArrayRBT.java
uimaj-core/src/main/java/org/apache/uima/internal/util/rb_trees/IntRBTNode.java
uimaj-core/src/main/java/org/apache/uima/internal/util/rb_trees/RBTNode.java
uimaj-core/src/main/java/org/apache/uima/internal/util/rb_trees/RedBlackTree.java
texts:RedBlackTree should use generics
The value of the RedBlackTree should be generic.
issueID:UIMA-1443
type:Improvement
changed files:uimaj-core/src/main/java/org/apache/uima/internal/util/rb_trees/RedBlackTree.java
texts:RedBlackTree should implement Iterable

issueID:UIMA-1444
type:Improvement
changed files:uimaj-core/src/main/java/org/apache/uima/cas/impl/FeatureStructureImpl.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/XmiCasDeserializer.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FSIndexRepositoryImpl.java
unused-saved/src/org/apache/uima/cas/impl/AnnotationIndexImpl.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/XCASSerializer.java
unused-saved/src/org/apache/uima/cas/impl/FSListIteratorImpl.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FSIteratorImplBase.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FeatureValuePathImpl.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/TypeSystemImpl.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/StringConstraint.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/XmiCasSerializer.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/ConstraintFactoryImpl.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/XCASDeserializer.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/CASImpl.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/TypeImpl.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/XmiSerializationSharedData.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/CASMgrSerializer.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/OutOfTypeSystemData.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/TypeSystem2Xml.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/BooleanConstraint.java
uimaj-core/src/main/java/org/apache/uima/cas/FSIterator.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FSFloatConstraintImpl.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FloatConstraint.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FSClassRegistry.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/IntConstraint.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FilteredIterator.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/Subiterator.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/EmbeddedConstraint.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/AnnotationTreeNodeImpl.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/PathConstraint.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/DebugFSLogicalStructure.java
texts:cas.impl package should use generics
The cas.impl package should use generics to verify the changes made to the API and to reduce the huge number of compiler warnings.
issueID:UIMA-1445
type:Improvement
changed files:uimaj-core/src/main/java/org/apache/uima/cas/impl/FSTypeConstraintImpl.java
texts:Refactor FSTypeConstraintImpl

issueID:UIMA-1446
type:Bug
changed files:
texts:org.apache.uima.simpleserver.config.impl.SimpleFilterImpl.match() can cause a null pointer exception
in org.apache.uima.simpleserver.config.impl.SimpleFilterImpl  private final boolean match(Stack<String> stack, FeatureStructure fs) {   ...fs can be null (if a non-leave feature in the feature path is null) but that is not checked for.Suggested fix:  private final boolean match(Stack<String> stack, FeatureStructure fs) { if (fs == null) {     return (this.getCondition().getConditionType() == FilterOp.NULL); } if (stack.isEmpty()) {        ...
issueID:UIMA-1447
type:Bug
changed files:
texts:Tabulations are annotated as tokens after a space
This is a test-text for the Whitespace Tokenizer in the UIMA Sandbox. It behaves as follows:  i.e. a '\t' character after a space is annotated as a token and its covered text is set to the empty string ""! I suppose it shoudn't be the case, am I wrong?
issueID:UIMA-1448
type:Improvement
changed files:
texts:Add generics to LinearTypeOrderBuilderImpl
The class LinearTypeOrderBuilderImpl should be re-factored to use generics and checked for correct class casting.
issueID:UIMA-1449
type:Bug
changed files:
texts:Fix ConcurrentModificationException in the Delegate object
Delegate object throws ConcurrentModificationException while accessing its lists. It looks like one thread is changing a list while another is changing it. Synchronize access to the list to make sure only one thread operates on it at any given time.
issueID:UIMA-145
type:Improvement
changed files:
texts:Port CVD documentation to DocBook

issueID:UIMA-1450
type:Bug
changed files:
texts:UIMA AS controller creates a component CAS Pool with a wrong name
The Uima AS controller incorrectly names a CAS Pool during initialization. It uses qualifiedContextName instead of a unique name. The core fix UIMA-1400 broke the UIMA AS to the extent that the CM is always given a Cas Pool of 1 leading to a performance problem. In initializeComponentCasPool() method use getComonentName() call to define the CAS Pool.
issueID:UIMA-1451
type:Improvement
changed files:uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/TAEConfiguratorPlugin.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/MultiPageEditor.java
texts:findbugs changes for ep-configurator (CDE)
fix minor findbug issues in ep-configurator
issueID:UIMA-1452
type:Improvement
changed files:uimaj-core/src/main/java/org/apache/uima/cas_data/impl/CasDataToXCas.java
uimaj-core/src/main/java/org/apache/uima/util/impl/ProcessTraceEvent_impl.java
uimaj-core/src/main/java/org/apache/uima/collection/impl/CollectionReaderDescription_impl.java
uimaj-core/src/main/java/org/apache/uima/util/CasPool.java
uimaj-core/src/main/java/org/apache/uima/flow/impl/FlowControllerDescription_impl.java
uimaj-core/src/main/java/org/apache/uima/pear/util/ProcessUtil.java
uimaj-core/src/main/java/org/apache/uima/uimacpp/UimacppAnalysisComponent.java
uimaj-core/src/main/java/org/apache/uima/internal/util/XmlElementNameAndContents.java
uimaj-core/src/main/java/org/apache/uima/pear/tools/PackageBrowser.java
uimaj-core/src/main/java/org/apache/uima/impl/RootUimaContext_impl.java
uimaj-core/src/main/java/org/apache/uima/flow/impl/FlowControllerContext_impl.java
uimaj-core/src/main/java/org/apache/uima/util/impl/Logger_impl.java
uimaj-core/src/main/java/org/apache/uima/internal/util/StringToIntMap.java
uimaj-core/src/main/java/org/apache/uima/util/impl/JSR47Logger_impl.java
uimaj-core/src/main/java/org/apache/uima/pear/util/XMLUtil.java
uimaj-core/src/main/java/org/apache/uima/internal/util/BrowserUtil.java
uimaj-core/src/main/java/org/apache/uima/internal/util/GraphNode.java
uimaj-core/src/main/java/org/apache/uima/internal/util/XMLUtils.java
uimaj-core/src/main/java/org/apache/uima/pear/tools/InstallationDescriptorHandler.java
uimaj-core/src/main/java/org/apache/uima/util/CasToInlineXml.java
uimaj-core/src/main/java/org/apache/uima/pear/tools/InstallationProcessor.java
uimaj-core/src/main/java/org/apache/uima/collection/impl/CasConsumerDescription_impl.java
uimaj-core/src/main/java/org/apache/uima/cas_data/impl/CasDataImpl.java
uimaj-core/src/main/java/org/apache/uima/collection/CollectionReader_ImplBase.java
uimaj-core/src/main/java/org/apache/uima/internal/util/ResourcePool.java
uimaj-core/src/main/java/org/apache/uima/collection/impl/CasInitializerDescription_impl.java
uimaj-core/src/main/java/org/apache/uima/pear/tools/InstallationDescriptor.java
uimaj-core/src/main/java/org/apache/uima/resource/impl/ConfigurationManagerImplBase.java
uimaj-core/src/main/java/org/apache/uima/util/CasCopier.java
uimaj-core/src/main/java/org/apache/uima/impl/UimaContext_ImplBase.java
uimaj-core/src/main/java/org/apache/uima/internal/util/SymbolTable.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/LinearTypeOrderBuilderImpl.java
uimaj-core/src/main/java/org/apache/uima/impl/ChildUimaContext_impl.java
uimaj-core/src/main/java/org/apache/uima/util/impl/XMLParser_impl.java
uimaj-core/src/main/java/org/apache/uima/pear/tools/PackageCreator.java
uimaj-core/src/main/java/org/apache/uima/pear/util/StringUtil.java
uimaj-core/src/main/java/org/apache/uima/flow/JCasFlowController_ImplBase.java
uimaj-core/src/main/java/org/apache/uima/util/AnalysisEngineUtils.java
uimaj-core/src/main/java/org/apache/uima/internal/util/UIMAClassLoader.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/XmiCasSerializer.java
uimaj-core/src/main/java/org/apache/uima/internal/util/CommandLineParser.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/XCASDeserializer.java
uimaj-core/src/main/java/org/apache/uima/pear/tools/LocalInstallationAgent.java
uimaj-core/src/main/java/org/apache/uima/pear/tools/InstallationController.java
uimaj-core/src/main/java/org/apache/uima/cas_data/impl/FeatureStructureImpl.java
uimaj-core/src/main/java/org/apache/uima/collection/base_cpm/CasDataCollectionReader_ImplBase.java
uimaj-core/src/main/java/org/apache/uima/flow/impl/CapabilityLanguageFlowObject.java
uimaj-core/src/main/java/org/apache/uima/util/impl/ProcessTrace_impl.java
uimaj-core/src/main/java/org/apache/uima/flow/ParallelStep.java
uimaj-core/src/main/java/org/apache/uima/pear/util/FileUtil.java
uimaj-core/src/main/java/org/apache/uima/util/JCasPool.java
uimaj-core/src/main/java/org/apache/uima/internal/util/CharArraySpanMap.java
uimaj-core/src/main/java/org/apache/uima/flow/CasFlowController_ImplBase.java
uimaj-core/src/main/java/org/apache/uima/util/AnalysisEnginePerformanceReports.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/CASMgrSerializer.java
uimaj-core/src/main/java/org/apache/uima/util/TypeSystemUtil.java
uimaj-core/src/main/java/org/apache/uima/pear/util/UIMAUtil.java
uimaj-core/src/main/java/org/apache/uima/pear/util/MessageRouter.java
uimaj-core/src/main/java/org/apache/uima/flow/FlowController_ImplBase.java
uimaj-core/src/main/java/org/apache/uima/resource/metadata/impl/MetaDataObject_impl.java
uimaj-core/src/main/java/org/apache/uima/resource/impl/ResourceManager_impl.java
uimaj-core/src/main/java/org/apache/uima/internal/util/CharacterUtils.java
uimaj-core/src/main/java/org/apache/uima/cas_data/impl/CasDataUtils.java
uimaj-core/src/main/java/org/apache/uima/flow/impl/FixedFlowController.java
uimaj-core/src/main/java/org/apache/uima/util/FileUtils.java
uimaj-core/src/main/java/org/apache/uima/internal/util/AnalysisEnginePool.java
unused-saved/src/org/apache/uima/cas/impl/FSRBTIndex.java
uimaj-core/src/main/java/org/apache/uima/internal/util/Graph.java
uimaj-core/src/main/java/org/apache/uima/internal/util/ArrayUtils.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/DebugFSLogicalStructure.java
uimaj-core/src/main/java/org/apache/uima/util/impl/Log4jLogger_impl.java
texts:add generic type info to some classes in uima-core
Manually examine and add generic type arguments to some classes in uima-core that resist the Eclipse "infer generic arguments" method.  (Resist - means that when you do that operation, you get some errors, e.g., two methods with same erasure)
issueID:UIMA-1453
type:Improvement
changed files:uimaj-core/src/main/java/org/apache/uima/analysis_engine/impl/ResultSpecification_impl.java
texts:some findbugs cleanup in uimaj-core

issueID:UIMA-1454
type:Bug
changed files:
texts:Stale requests are processed and subsequently labeled as exceptions
When a client submits one or more requests to a service and then terminates before the service has a chance to reply, the service will still process the requests and then fail trying to send the reply with a long stack trace.There are two problems here: processing a request which cannot be replied to,and throwing an exception for expected behavior.The following is suggested:1. catch these exceptions and log a single line at INFO level that a reply could      not be sent to {identified reply queue name}2. put this reply queue on a "do not process" list to be checked before processing    new requests.3. clean up the "do not process" list based on time or max number of entries.
issueID:UIMA-1455
type:Improvement
changed files:
texts:Lucas should not use deprecated lucene API
Right now Lucas uses deprecated lucene APIs. That should be refactored to use the new suggested API.
issueID:UIMA-1456
type:Bug
changed files:
texts:SimpleServer: sample config file does not work
The tokenizer config sample file that comes with the simple server does not work, it's using an incorrect namespace.  This is on the version in trunk, I did not verify that the released version has the same issue.
issueID:UIMA-1457
type:Bug
changed files:
texts:SimpleServer: docs need updating for Tomcat 6
The current instructions do not work out of the box with Tomcat 6.
issueID:UIMA-1458
type:Bug
changed files:
texts:Remove the Cas Editor from the sandbox page.

issueID:UIMA-1459
type:Bug
changed files:
texts:Fix UIMA AS bugs reported by Findbugs
There are many bugs found by Findbugs in the UIMA As code. Some are minor like a deadstore in a var that is never used. Others are more severe like dereferencing a var that is not checked for NULL. Clean up the code to eliminate reported bugs.
issueID:UIMA-146
type:Bug
changed files:
texts:UimacppAnalysisComponent doesn&#39;t support ResultSpecification
It looks like UimacppAnalysisComponent will always pass a null result specification through the JNI.  This should be fixed once the C++ enablement layer is ready.Note that the new Java annotator interfaces have a setResultSpecification(ResultSpecification) method, rather than including a ResultSpecification on the process call.  We could consider doing that in C++ as well.  This has the advantage of notifying the annotator only when the result spec changes, so the annotator doesn't waste time checking the result spec on every process call.
issueID:UIMA-1460
type:Bug
changed files:
texts:AnnotationTokenStream.next(Token) should not catch Throwable
The method should not catch Throwable and re-throw it as IOException.
issueID:UIMA-1461
type:Task
changed files:
texts:update sandbox POMs to 2.3.0-incubating-SNAPSHOT version

issueID:UIMA-1462
type:Bug
changed files:
texts:SimpleUimaAsService has checked in SimpleServer libraries as binaries
For the upcoming release, this should be changed so it depends on the SimpleServer project directly.
issueID:UIMA-1464
type:Bug
changed files:
texts:SimpleServer NOTICE file missing JSR 173 attribution

issueID:UIMA-1465
type:Bug
changed files:uimaj-core/src/main/java/org/apache/uima/analysis_engine/impl/PearAnalysisEngineWrapper.java
texts:running a pearSpecifier as a top level component fails with NullPointerException
This happens when produceAnalysisEngine call is done with no additional parameters, for top level pears. Bug introduced  by changes in UIMA-1107 which began using the additionalParameters value, which is why this worked in 2.2.2 level.
issueID:UIMA-1466
type:Bug
changed files:uimaj-core/src/main/java/org/apache/uima/analysis_engine/impl/AnalysisEngineImplBase.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/impl/PearAnalysisEngineWrapper.java
texts:Instantiating top level pearSpecifier: reconfigure throwing NPE and need to set Session
A user reported these two issues when trying to run a top level pear.  See http://markmail.org/thread/jbacko4l6jyonzse A discussion with Adam L indicates the problem may be being caused by the fact that the PearSpecifier interface extends the ResourceServiceSpecifier, and things would work better if it extended the ResourceCreationSpecifier - in that the cause of the NPE which is a null value for the map representing the configuration parameters, in the method ConfigurationManagerImplBase.validateConfigurationParameterSettings.  This map is setup by Resource_ImplBase if the specifier is a subtype of ResourceCreationSpecfier, but not otherwise.Also, the session is setup, but again, only if the specifier is a subtype of ResourceCreationSpecifier.  So, the first thing to investigate is to see if we can switch this, and what the impact would be.
issueID:UIMA-1467
type:Bug
changed files:uimaj-core/src/main/java/org/apache/uima/analysis_engine/impl/AnalysisEngineImplBase.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/impl/AnalysisEngineImplBase.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/impl/PearAnalysisEngineWrapper.java
texts:PearAnalysisEngineWrapper should forward remaining methods in its interfaces to the contained AE including reconfigure and management interfaces
Reported by a user - seeing NPE when calling reconfigure.  That NPE is being caused by another issue (see UIMA-1466), but investigation revealed that the reconfigure method was defaulting to just (attempting to) validate the new parameters, and those were not being forwarded to the wrapped pear.A good summary of previous work here is in UIMA-1150 .
issueID:UIMA-1468
type:Bug
changed files:
texts:Saving of annotations and relations does not always work properly
We have encountered a problem concerning saving manually annotated documents with the Apache UIMA CasEditor.In short, not all annotations and relations are always saved when saving an xmi file. That is, oftentimes we save an annotated document and reopen it with the annotation editor, some of the annotations and all relations are missing.We are not quite sure what the underlying problem is and we even didn't manage to always reproduce it, but this is what we've done and observed:After importing a text file (.txt) and opening its corresponding xmi file with the annotation editor we annotated some entities and created relations among them afterwards. We then saved and closed that file. Reopening it again, in most cases the first couple of annotations still existed. However, subsequent annotations and, especially, all relations were missing.An interesting observation that might help to find the actual problem is the following: When we annotated and saved the same previously edited document again, everything worked fine, i.e. all annotations and relations had actually been saved.
issueID:UIMA-1469
type:Wish
changed files:
texts:Add Lucas to the sandbox home page
Please make this text available under http://incubator.apache.org/uima/sandbox.html#lucene.consumer (which is already published):Lucene CAS indexer (Lucas)The Lucene CAS indexer (Lucas) is a UIMA CAS consumer that stores CAS data in a Lucene (http://lucene.apache.org) index. The consumer transforms annotation objects of a CAS into Lucene token streams which are stored in a Lucene document. Token streams can further be processed by token filters. Lucas comes with a set of own token filters and integrations for some Lucene token filters. Furthermore, you can deploy your own token filters. The mapping between UIMA annotations and Lucene tokens and token filtering is configured by a xml mapping file. The Java source of the consumer can be accessed in the SVN repository at http://svn.apache.org/repos/asf/incubator/uima/sandbox/trunk/Lucas.
issueID:UIMA-147
type:Bug
changed files:
texts:"Building with Maven" link on website nav bar does not work
Clicking the "Building with Maven" link on the nav bar brings me to the top of the "Source Code" page.  The intention was to link to a section in the middle of the page, but it doesn't seem to work.Anyway, I think this approach may be confusing and it might be better to create a separate page with the build instructions if it's desired to have a direct link from the nav bar.
issueID:UIMA-1470
type:Bug
changed files:uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/AnnotationEditor.java
texts:Annotation Editor tries to place cursor on invalid position
The Annotation Editor tries to place a cursor between the chars of a multi char line delimiter which results in an IllegalArgumentException.The bug causes the following exception:java.lang.IllegalArgumentException: Argument not valid at org.eclipse.swt.SWT.error(SWT.java:3865) at org.eclipse.swt.SWT.error(SWT.java:3799) at org.eclipse.swt.SWT.error(SWT.java:3770) at org.eclipse.swt.custom.StyledText.setCaretOffset(StyledText.java:7882) at org.apache.uima.caseditor.editor.AnnotationEditor.selectionChanged(AnnotationEditor.java:950) at org.apache.uima.caseditor.editor.AnnotationEditor$DocumentListener.updatedAnnotation(AnnotationEditor.java:300) at org.apache.uima.caseditor.editor.AbstractAnnotationDocumentListener.updated(AbstractAnnotationDocumentListener.java:75) at org.apache.uima.caseditor.editor.AbstractDocumentListener.updated(AbstractDocumentListener.java:62) at org.apache.uima.caseditor.editor.AbstractDocument.fireUpdatedFeatureStructure(AbstractDocument.java:114) at org.apache.uima.caseditor.editor.DocumentUimaImpl.update(DocumentUimaImpl.java:145) at org.apache.uima.caseditor.editor.AnnotationDocument.update(AnnotationDocument.java:132) at org.apache.uima.caseditor.editor.action.WideRightAnnotationSideAction.wideRightAnnotationSide(WideRightAnnotationSideAction.java:65) at org.apache.uima.caseditor.editor.action.WideRightAnnotationSideAction.run(WideRightAnnotationSideAction.java:77) at org.eclipse.ui.actions.BaseSelectionListenerAction.runWithEvent(BaseSelectionListenerAction.java:168) at org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection(ActionContributionItem.java:584) at org.eclipse.jface.action.ActionContributionItem.access$2(ActionContributionItem.java:501) at org.eclipse.jface.action.ActionContributionItem$6.handleEvent(ActionContributionItem.java:452) at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:84) at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1176) at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:3493) at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3112) at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:2405) at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:2369) at org.eclipse.ui.internal.Workbench.access$4(Workbench.java:2221) at org.eclipse.ui.internal.Workbench$5.run(Workbench.java:500) at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:332) at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:493) at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:149) at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:113) at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:194) at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:110) at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:79) at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:368) at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:179) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25) at java.lang.reflect.Method.invoke(Method.java:597) at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:559) at org.eclipse.equinox.launcher.Main.basicRun(Main.java:514) at org.eclipse.equinox.launcher.Main.run(Main.java:1311) at org.eclipse.equinox.launcher.Main.main(Main.java:1287)
issueID:UIMA-1471
type:Improvement
changed files:uimaj-core/src/main/java/org/apache/uima/cas_data/impl/CasDataUtils.java
texts:CasDataUtils should be refactored and reviewed
The CasDataUtils class should be reviewed and re-factored to eliminate the (unnecessary) explicit type checks in the various utility methods.
issueID:UIMA-1472
type:Bug
changed files:
texts:Uima AS imports ConcurrentHashMap from a wrong package
ActiveMQMessageSender imports:edu.emory.mathcs.backport.java.util.concurrent.ConcurrentHashMap;This appears to exist in activemq 4.1.1 jar and thus resolving fine. Newer AMQ jars do not define this class.Instead the code should have imported java.util.concurrent.ConcurrentHashMap
issueID:UIMA-1473
type:Bug
changed files:
texts:mvn assembly:assembly failing with msg about illegal character in path name to ant in repo
When running mvn assembly:assembly in uimaj-distr get a failure: Illegal character in path at index 18: file:/C:/Documents and Settings/Administrator/.m2/repository/org/apache/ant/ant/1.7.0/ant-1.7.0.jarThis error goes away if we delete the part of the POM that was attempting to specify 1.7.0 level of ant, but also had the comment that it wasn't working.  The current ant level downloaded by maven if no level is specified is 1.7.1 which is fine for our use.
issueID:UIMA-1474
type:Improvement
changed files:
texts:review POMs for specification of obsolete, out-of-date levels of components
The assembly POM for instance, calls out old versions of the javadoc plugin (2.0) - current is 2.5.
issueID:UIMA-1475
type:Bug
changed files:
texts:UIMA AS testcases hang when run with JDK 1.5
Uima AS testcases seem to hang when running with JDK 1.5. A workaround is to use JDK 1.6.
issueID:UIMA-1476
type:Bug
changed files:
texts:Fix race condition in the UIMA As client when creating a shared JMS connection
When scaling a UIMA AS client in the same JVM there is a race condition that causes NullPointer exception. The exception is thrown when trying to access a JMSConnection object that is not yet initialized. The problem is in the setupConnection() method where the SharedConnection is initialized in two steps:1) Default constructor creates an instance of the SharedConnection2) setConnection method is called with a new Connection objectThe problem is that the code in initialize() method checks if the sharedConnection != null and if so proceeds to initializeProducer() method. So the race condition is that SharedConnection constructor  finishes, a thread sees that it is not null and calls initializeProducer BEFORE the connection is set.Fix the code so that connection is passed in as an argument to a constructor assuring that as soon as the SharedConnection is instantiated it is fully initialized
issueID:UIMA-1477
type:Bug
changed files:
texts:UIMA AS client hangs while handling CPC request
When UIMA AS client is initialized it acquires a CPC semaphore to control when to send a CPC request. The semaphore is released when a number of CASes sent equals a number of CASes received. Only when equal the semaphore is released and the CPC request is allowed to be sent. In a case when a client is initialized but never sends any CASes this logic fails. The semaphore is never released causing a hang while trying to acquire a semaphore in collectionProcessComplete().Add a new test case to replicate the problem.Fix the code to handle sending CPC from a client that doesnt send CASes to a service.
issueID:UIMA-1478
type:Bug
changed files:
texts:possible NullPointerException on CASInitializer
code at lline 69return casMgr.getCAS().getCurrentView();could raise a not handled NPE on casMgr and getCAS()
issueID:UIMA-1479
type:Task
changed files:
texts:Move UIMA-AS out of sandbox, change to an "add-on" packaging style to the core
UIMA-AS was voted to graduate from the sandbox.  Make the needed changes to effect this, including:1) moving it to uimaj node in SVN (eclipse plugins I think are already there)2) changing the build so that its assembler builds an add-on-to-uima-base bin/src distribution.  (It used to include most of base UIMA
issueID:UIMA-148
type:Bug
changed files:uimaj-core/src/main/java/org/apache/uima/resource/impl/ConfigurableDataResource_impl.java
uimaj-core/src/main/java/org/apache/uima/resource/impl/DataResource_impl.java
uimaj-core/src/main/java/org/apache/uima/util/LoggerPrintStream.java
uimaj-core/src/main/java/org/apache/uima/resource/impl/ConfigurableDataResource_impl.java
uimaj-core/src/main/java/org/apache/uima/resource/impl/DataResource_impl.java
uimaj-core/src/main/java/org/apache/uima/util/LoggerPrintStream.java
texts:Calls to URL.equals and URL.hashCode should be removed
Marshall wrote:Findbugs has just been updated to find additional issues- the currentversion is 1.1.3.One of the new things it finds is uses of java.net.URL.equals(...) andhashCode().  It turns outthese methods make blocking calls to DNS services on the internet.See:http://michaelscharf.blogspot.com/2006/11/javaneturlequals-and-hashcode-make.html
issueID:UIMA-1480
type:Improvement
changed files:
texts:Add version compatibility verification to UIMA-AS for base UIMA level
As part of the repackaging of UIMA-AS, it won't necessarily be packaged with a version of base UIMA - so it should verify that the version of base UIMA it is running with is OK.  For now, require that it be at the corresponding level that is released - e.g., 2.3.0 for the Base and 2.3.0 for UIMA-AS.
issueID:UIMA-1481
type:Improvement
changed files:
texts:add Javadocs to UIMA-AS assembly

issueID:UIMA-1482
type:Improvement
changed files:
texts:Implement PEAR support for UIMA AS
UIMA AS should support the deployment pears. The great advantage of pears is that a user does not have to set up the classpath manually and that the pear can be tested prior deployment with standard uima tooling. One way to implement it would be to extend the AS deployment descriptor to point to a pear file or pear specifier. In the case it points to a pear file uima as must take care of installing the pear.
issueID:UIMA-1483
type:Bug
changed files:uimaj-core/src/main/java/org/apache/uima/jcas/JCas.java
uimaj-core/src/main/java/org/apache/uima/jcas/impl/JCasImpl.java
texts:Incorrect generification of JCas interface
The generification of the JCas interface for the getViewIterator methods is incorrect. The mistake was not recognized because the implementation of the JCas interface is not yet converted to use generics.
issueID:UIMA-1484
type:Improvement
changed files:
texts:Update UIMA-AS Documentation
Update UIMA-AS documentation to describe new features and changes.
issueID:UIMA-1485
type:Bug
changed files:
texts:UIMA Tutorial and Developers guide in sub title 1.3.2 should be AAE and not AE
"1.3.2. AEs can also contain CAS Consumers" should be "1.3.2. AAEs can also contain CAS Consumers"
issueID:UIMA-1486
type:Improvement
changed files:
texts:Lucas should not depend on google collections snapshot version
Lucas should not depend on google collections snapshot version. It should either be replaced by a release version of google collections or the dependency should be removed. In most places through the code its only used to get an empty iterator which could be done in a util method to avoid this extra dependency.
issueID:UIMA-1487
type:Bug
changed files:
texts:Add support for collectionProcessComplete timeout setting in JMS service adapter
The JMS service adapter is used to allow UIMA aggregates to call UIMA AS services, similar to Vinci and SOAP services. The JMS adapter supports process and getmeta timeouts, but not CPC.
issueID:UIMA-1488
type:Improvement
changed files:uimaj-core/src/main/java/org/apache/uima/resource/CasDefinition.java
uimaj-core/src/main/java/org/apache/uima/resource/impl/CasManager_impl.java
uimaj-core/src/main/java/org/apache/uima/resource/CasDefinition.java
uimaj-core/src/main/java/org/apache/uima/resource/impl/CasManager_impl.java
uimaj-core/src/main/java/org/apache/uima/resource/impl/ConfigurationManagerImplBase.java
uimaj-core/src/main/java/org/apache/uima/resource/impl/ConfigurationManager_impl.java
uimaj-core/src/main/java/org/apache/uima/resource/impl/RelativePathResolver_impl.java
uimaj-core/src/main/java/org/apache/uima/resource/impl/ResourceCreationSpecifier_impl.java
uimaj-core/src/main/java/org/apache/uima/resource/impl/ResourceManager_impl.java
uimaj-core/src/main/java/org/apache/uima/resource/impl/Session_impl.java
uimaj-core/src/main/java/org/apache/uima/resource/metadata/impl/Capability_impl.java
uimaj-core/src/main/java/org/apache/uima/resource/metadata/impl/ConfigurationGroup_impl.java
uimaj-core/src/main/java/org/apache/uima/resource/metadata/impl/ConfigurationParameterDeclarations_impl.java
uimaj-core/src/main/java/org/apache/uima/resource/metadata/impl/ConfigurationParameterSettings_impl.java
uimaj-core/src/main/java/org/apache/uima/resource/metadata/impl/ConfigurationParameter_impl.java
uimaj-core/src/main/java/org/apache/uima/resource/metadata/impl/FsIndexCollection_impl.java
uimaj-core/src/main/java/org/apache/uima/resource/metadata/impl/MetaDataObject_impl.java
uimaj-core/src/main/java/org/apache/uima/resource/metadata/impl/ResourceManagerConfiguration_impl.java
uimaj-core/src/main/java/org/apache/uima/resource/metadata/impl/ResourceMetaData_impl.java
uimaj-core/src/main/java/org/apache/uima/resource/metadata/impl/TypePriorities_impl.java
uimaj-core/src/main/java/org/apache/uima/resource/metadata/impl/TypePriorityList_impl.java
uimaj-core/src/main/java/org/apache/uima/resource/metadata/impl/TypeSystemDescription_impl.java
texts:Generics for org.apache.uima.resoruce classes
The  org.apache.uima.resoruce should use generics in its classes.
issueID:UIMA-1489
type:Improvement
changed files:uimaj-core/src/main/java/org/apache/uima/util/TCasToInlineXml.java
uimaj-core/src/main/java/org/apache/uima/cas/FSIndexRepository.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/CASImpl.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FSIndexRepositoryImpl.java
uimaj-core/src/main/java/org/apache/uima/util/CasCopier.java
uimaj-core/src/main/java/org/apache/uima/util/ConsumerCasUtils.java
texts:Generify FSIndexRepository
Add generics to the FSIndexRepository interface.
issueID:UIMA-149
type:Improvement
changed files:uimaj-core/src/main/java/org/apache/uima/analysis_engine/impl/ResultSpecification_impl.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/impl/ResultSpecification_impl.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/impl/ResultSpecification_impl.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/impl/ResultSpecification_impl.java
texts:Cloning may fail for subclasses of ResultSpecification
Findbugs found this problem, and says: clone method does not call super.clone()This non-final class defines a clone() method that does not call super.clone(). If this class ("A") is extended by a subclass ("B"), and the subclass B calls super.clone(), then it is likely that B's clone() method will return an object of type A, which violates the standard contract for clone().If all clone() methods call super.clone(), then they are guaranteed to use Object.clone(), which always returns an object of the correct type.Solution could be to mark this class "final" if we don't want users to extend it.
issueID:UIMA-1490
type:Bug
changed files:
texts:C++ service fails to properly terminate when UimacppServiceController is stopped.
The C++ service is still running after UimacppServiceController has terminated. The problem appears to be that the AnalysisEngine instances are not explicitly destroyed.
issueID:UIMA-1491
type:Bug
changed files:unused-saved/src/org/apache/uima/cas/impl/AnnotationIndexImpl.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/Subiterator.java
uimaj-core/src/main/java/org/apache/uima/cas/CAS.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/AnnotationTreeImpl.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/AnnotationTreeNodeImpl.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/CASImpl.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FSIteratorImplBase.java
uimaj-core/src/main/java/org/apache/uima/jcas/impl/JCasImpl.java
uimaj-core/src/main/java/org/apache/uima/cas/text/AnnotationIndex.java
uimaj-core/src/main/java/org/apache/uima/cas/text/AnnotationTree.java
uimaj-core/src/main/java/org/apache/uima/cas/text/AnnotationTreeNode.java
uimaj-core/src/main/java/org/apache/uima/jcas/JCas.java
texts:Correct generics in org.apache.uima.cas.text
The AnnotationIndex should allow AnnotationIndexes which have a suptype of AnnotationFS as type parameter.AnnotationTree and AnnotationTreeNode should also be generic.
issueID:UIMA-1492
type:Bug
changed files:
texts:wrong equals impl in FSLeafIndexImpl
Findbugs reporting Equals checking for noncompatible operand in FSLeafIndexImpl, line 347.This equals method is checking to see if the argument, an incompatible type (i.e., a class that is neither a supertype nor subtype of FSLeafIndexImpl)., is "equal" to this FSLeafIndexImpl's comparator.  So we could get a particular comparitor being said to be "equal" to a FSLeafIndexImpl.
issueID:UIMA-1493
type:Bug
changed files:uimaj-core/src/main/java/org/apache/uima/analysis_engine/impl/PearAnalysisEngineWrapper.java
texts:Findbugs reporting inconsistent synchronization in ResourceManager - pear wrapper

issueID:UIMA-1494
type:Bug
changed files:uimaj-core/src/main/java/org/apache/uima/analysis_engine/impl/PearAnalysisEngineWrapper.java
texts:PearWrapper - don&#39;t forward finalize method
finalize method called on the object by the GC, so don't also call it via forwarding.  (Findbugs)
issueID:UIMA-1495
type:Bug
changed files:
texts:dd2spring throws SAXParseException if parameters are appended to a broker URL
If a brokerURL includes ActiveMQ parameters, e.g.  tcp://foo.com:61616?wireFormat.maxInactivityDuration=30000we get:org.springframework.beans.factory.xml.XmlBeanDefinitionStoreException: Line 30 in XML document from URL file:C:/DOCUME~1/ADMINI~1/LOCALS~1/Temp/UIMAdd2springOutput6969751502912373687.xml is invalid; nested exception is org.xml.sax.SAXParseException: Attribute value "qBroker_tcp_c__ss_foo.com_c_61616?wireFormat.maxInactivityDuration=30000" of type ID must be a name.Caused by: org.xml.sax.SAXParseException: Attribute value "qBroker_tcp_c__ss_foo.com_c_61616?wireFormat.maxInactivityDuration=30000" of type ID must be a name.
issueID:UIMA-1496
type:Improvement
changed files:uimaj-examples/src/main/java/org/apache/uima/examples/xmi/UimaTypeSystem2Ecore.java
uimaj-core/src/main/java/org/apache/uima/util/CasCreationUtils.java
texts:Generics for CasCreationUtils

issueID:UIMA-1497
type:Task
changed files:PearPackagingMavenPlugin/src/main/java/org/apache/uima/pear/tools/PearPackagingMojo.java
texts:change build for pear packaging maven plugin
Per discussion on uima-dev here: http://markmail.org/thread/5oqscqtwpfnrd53a the uima pear packaging maven plugin should be changed to enable it to be "published" as a component to the incubator maven repository.  Currently it is packaged as a part of the sandbox build.Tasks to accomplish this:  1) move in SVN out of the sandbox to a new project under the svn "uimaj" node.  2) change documentation to indicate it is not a "sandbox" component, but a full-fledged component.    3) integrate into uima-docbooks  4) change build - make part of base uima build.  Verify this promotes it to the incubator maven repository
issueID:UIMA-1498
type:Improvement
changed files:
texts:if an exception is rethrown, the original exception is not currently passed through
if an exception is rethrown, the original exception is not currently passed through
issueID:UIMA-1499
type:Bug
changed files:uimaj-core/src/main/java/org/apache/uima/util/CasPool.java
texts:Potential ClassCastException in CasPool
The CasPool has a constructorCasPool(int aNumInstances, Collection aComponentDescriptionsOrMetaData,        Properties aPerformanceTuningSettings, ResourceManageraResourceManager)where aComponentDescriptionsOrMetaData is a collection which can containaccordingto javadoc "AnalysisEngineDescription, CollectionReaderDescription,CasConsumerDescription or ProcessingResourceMetaData objects"A reference of the Collection is passed to fillPool which passes theCollectionto a CasDefinition constructor which then casts everything toProcessingResourceMetaData,which will result in a ClassCastException in the case ofAnalysisEngineDescription,CollectionReaderDescription and CasConsumerDescription objects.
issueID:UIMA-15
type:Task
changed files:
texts:Semantic Search repackaging
Do everything needed to repackage semantic search capability, including any adjustments to Eclipse launchers (we have one for semantic search).
issueID:UIMA-150
type:Bug
changed files:
texts:DebugFSLogicalStructure - fix cache setting for Unexpanded Feature Structures (found by Findbugs)
Findbugs found cache value never being set in DebugFSLogicalStructure.The "items" field of Unexpanded FeatureStructures inner class was only ever set to null.
issueID:UIMA-1500
type:Improvement
changed files:uimaj-core/src/main/java/org/apache/uima/analysis_engine/annotator/AnnotatorContext.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/annotator/Annotator_ImplBase.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/annotator/GenericAnnotator.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/annotator/GenericAnnotator_ImplBase.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/annotator/JTextAnnotator.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/annotator/JTextAnnotator_ImplBase.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/annotator/TextAnnotator.java
texts:Deprecate UIMA 1.x classes in org.apache.uima.analysis_engine.annotator
The mentioned package contains 1.x classes and interfaces, which have a comment which suggest using 2.0 API.These classes and interfaces should be deprecated, namely these are:Annotator_ImplBase.javaAnnotatorContext.javaAnnotatorContext.javaGenericAnnotator_ImplBase.javaGenericAnnotator.javaJTextAnnotator_ImplBase.javaJTextAnnotator.javaTextAnnotator.java
issueID:UIMA-1501
type:Improvement
changed files:
texts:more refactoring and updating - parent POMs
use pluginManagement and dependencyManagement to refactor additional items.  Update to javadoc plugin 2.5 (the current level - what the superPom specifies).
issueID:UIMA-1502
type:Improvement
changed files:
texts:Using getSofaDataStream instead of getDocumentText
I would like to known if it could be better to get the CAS text content by calling the getSofaDataStream method of the CAS class instead of getting it by the getDocumentText one.Actually, CAS sofas can be set either by calling the setSofaDataString method (aka setDocumentText), or by calling the setSofaDataArray one, or by calling the setSofaDataURI one. However, the getDocumentText method (aka getSofaDataString) provides the content of CASes whose sofas are only set by the first method whereas the getSofaDataStream method retieves content whatever the called method. A method able to get String from an InputStream is then needed.Am I wrong in thinking it's an Improvement?
issueID:UIMA-1503
type:Task
changed files:
texts:right after 2.3.0 release - tasks
Tasks to do right after 2.3.0 release (edit as needed to keep this as an active reminder): update website to include pointer to maven plugin for pear packager verify pearPackagerMavenPlugin is in incubator repo and works
issueID:UIMA-1504
type:Improvement
changed files:uimaj-core/src/main/java/org/apache/uima/util/CasCreationUtils.java
uimaj-core/src/main/java/org/apache/uima/internal/util/AnalysisEnginePool.java
uimaj-core/src/main/java/org/apache/uima/internal/util/ResourcePool.java
uimaj-core/src/main/java/org/apache/uima/internal/util/TextAnalysisEnginePool.java
uimaj-core/src/main/java/org/apache/uima/impl/AnalysisEngineFactory_impl.java
uimaj-core/src/main/java/org/apache/uima/impl/CasConsumerFactory_impl.java
uimaj-core/src/main/java/org/apache/uima/impl/CasInitializerFactory_impl.java
uimaj-core/src/main/java/org/apache/uima/impl/CollectionReaderFactory_impl.java
uimaj-core/src/main/java/org/apache/uima/impl/CompositeResourceFactory_impl.java
uimaj-core/src/main/java/org/apache/uima/impl/CustomResourceFactory_impl.java
uimaj-core/src/main/java/org/apache/uima/impl/UIMAFramework_impl.java
uimaj-core/src/main/java/org/apache/uima/ResourceFactory.java
uimaj-core/src/main/java/org/apache/uima/UIMAFramework.java
uimaj-core/src/main/java/org/apache/uima/collection/CasConsumer_ImplBase.java
uimaj-core/src/main/java/org/apache/uima/collection/CasInitializer_ImplBase.java
uimaj-core/src/main/java/org/apache/uima/collection/CollectionProcessingEngine.java
uimaj-core/src/main/java/org/apache/uima/collection/CollectionReader_ImplBase.java
uimaj-core/src/main/java/org/apache/uima/collection/base_cpm/CasDataCollectionReader_ImplBase.java
uimaj-core/src/main/java/org/apache/uima/collection/base_cpm/CasDataConsumer_ImplBase.java
uimaj-core/src/main/java/org/apache/uima/collection/base_cpm/CasDataInitializer_ImplBase.java
uimaj-core/src/main/java/org/apache/uima/collection/impl/CasConsumerDescription_impl.java
uimaj-core/src/main/java/org/apache/uima/collection/impl/CasInitializerDescription_impl.java
uimaj-core/src/main/java/org/apache/uima/collection/impl/CollectionReaderDescription_impl.java
uimaj-core/src/main/java/org/apache/uima/resource/Resource.java
uimaj-core/src/main/java/org/apache/uima/resource/ResourceManager.java
uimaj-core/src/main/java/org/apache/uima/resource/Resource_ImplBase.java
uimaj-core/src/main/java/org/apache/uima/resource/impl/ConfigurableDataResource_impl.java
uimaj-core/src/main/java/org/apache/uima/resource/impl/DataResource_impl.java
uimaj-core/src/main/java/org/apache/uima/resource/impl/FileLanguageResource_impl.java
uimaj-core/src/main/java/org/apache/uima/resource/impl/ResourceCreationSpecifier_impl.java
uimaj-core/src/main/java/org/apache/uima/resource/impl/ResourceManager_impl.java
uimaj-core/src/main/java/org/apache/uima/resource/service/impl/ResourceService_impl.java
texts:Generify the additionalParams Map through the uimaj-core codebase
The additionalParams Map has a String key and can contains all kinds of Objects, so the correct generification would beMap<String, Object>.
issueID:UIMA-1505
type:Improvement
changed files:uimaj-core/src/main/java/org/apache/uima/analysis_engine/AnalysisEngine.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/TypeOrFeature.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/asb/impl/ASB_impl.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/asb/impl/FlowContainer.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/asb/impl/FlowControllerContainer.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/impl/AggregateAnalysisEngine_impl.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/impl/AnalysisEngineDescription_impl.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/impl/AnalysisEngineImplBase.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/impl/AnalysisEngineManagementImpl.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/impl/MultiprocessingAnalysisEngine_impl.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/impl/PearAnalysisEngineWrapper.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/impl/PrimitiveAnalysisEngine_impl.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/impl/TypeOrFeature_impl.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/impl/UimacppAnalysisEngineImpl.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/impl/compatibility/AnalysisComponentAdapterFactory.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/impl/compatibility/AnnotatorAdapter.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/impl/compatibility/CasConsumerAdapter.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/impl/compatibility/CollectionReaderAdapter.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/metadata/impl/AnalysisEngineMetaData_impl.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/metadata/impl/CapabilityLanguageFlow_impl.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/metadata/impl/FixedFlow_impl.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/service/impl/AnalysisEngineServiceAdapter.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/service/impl/AnalysisEngineService_impl.java
texts:Generics for org.apache.uima.analysis_engine classes

issueID:UIMA-1506
type:Improvement
changed files:
texts:update Bean Scripting Framework Annotator with info about licenses and documentation
update with info received in email: http://markmail.org/thread/e3q5gk6h42jggg5c
issueID:UIMA-1507
type:Improvement
changed files:uimaj-core/src/main/java/org/apache/uima/collection/base_cpm/BaseCollectionReader.java
texts:BaseCollectionReader should extend Resource
To allow a call to produceResource to create a BaseCollectionReader, it must extend the Resource interface.
issueID:UIMA-1508
type:Improvement
changed files:
texts:Generify uimaj-core
Parent issue for all generification issues for uimaj-core to keep track of all changes and the overall progress. All generification issues should specify this issue as parent issue.
issueID:UIMA-1509
type:Improvement
changed files:uimaj-core/src/main/java/org/apache/uima/internal/util/ResourcePool.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/service/impl/AnalysisEngineService_impl.java
uimaj-core/src/main/java/org/apache/uima/impl/AnalysisEngineFactory_impl.java
uimaj-core/src/main/java/org/apache/uima/impl/CasConsumerFactory_impl.java
uimaj-core/src/main/java/org/apache/uima/impl/CasInitializerFactory_impl.java
uimaj-core/src/main/java/org/apache/uima/impl/CollectionReaderFactory_impl.java
uimaj-core/src/main/java/org/apache/uima/impl/CompositeResourceFactory_impl.java
uimaj-core/src/main/java/org/apache/uima/impl/CustomResourceFactory_impl.java
uimaj-core/src/main/java/org/apache/uima/impl/UimaContext_ImplBase.java
uimaj-core/src/main/java/org/apache/uima/util/SimpleResourceFactory.java
uimaj-core/src/main/java/org/apache/uima/resource/ResourceManager.java
uimaj-core/src/main/java/org/apache/uima/ResourceFactory.java
uimaj-core/src/main/java/org/apache/uima/UIMAFramework.java
uimaj-core/src/main/java/org/apache/uima/resource/service/impl/ResourceService_impl.java
texts:Generify the aResourceClass Class through the uimaj-core codebase
It should be declared as Class<? extends Resource>.
issueID:UIMA-151
type:New Feature
changed files:
texts:Add project for uima whitespace tokenizer implementation
Add project for uima whitespace tokenizer implementation
issueID:UIMA-1510
type:Improvement
changed files:
texts:improve uimaj-distr assembly
change POM to POM style (from Jar style) - previous problem seems to have gone away which required Jar style.  This way, no extraneous "jar" file is generated.update dependency sets with useProjectArtifact = false to avoid 18 warning messages.factor out version/scope from dependency setsuse current level of JavaDoc generation tool (works much faster, is preset to Java 5 in parent poms, etc.)use current level of assembly plugin 2.2-beta-4, up from 2.2-beta-2drop bz2 formats
issueID:UIMA-1512
type:Bug
changed files:
texts:some subproject POMs missing dependency on JUnit
For example, uimaj-adapter-vinci is missing this dependency.  This makes its test case not compile (or run).  However, if you build this using mvn install in a super-pom of this project, it works OK, it seems which is why we didn't "notice" I guess.  It shows up if you do a "mvn eclipse:clean eclipse:eclipse" - and then refresh the project in Eclipse.
issueID:UIMA-1513
type:Improvement
changed files:
texts:Update Cas Editor documentation for 2.3.0 release
The Cas Editor documentation should be updated. It should explain the new features and the screen-shots should be replaced with current ones.
issueID:UIMA-1514
type:Bug
changed files:
texts:uimaj-as-camel should not use default Bundle-SymbolicName
The uimaj-as-camel Bundle-SymbolicName should be org.apache.uima.camel.
issueID:UIMA-1516
type:Bug
changed files:uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/AnnotationEditor.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/CasDocumentProvider.java
texts:Deleted annotations remain highlighted
Open a previously annotated document. When you now select any annotation which already exists and delete it via the delete button, its highlighting in the annotation editor does not disappear until you close and reopen the document. On the contrary, highlighting of annotations (and no highlighting of deleted annotations) that have been created after opening the document works fine.
issueID:UIMA-1517
type:Improvement
changed files:
texts:Don&#39;t set executable bits on non-executables, when building assemblies
Example, the .html files in doc folder have this bit set  Ubuntu 9.04 won't open in browser via double click if set
issueID:UIMA-1518
type:Improvement
changed files:
texts:improve SandboxDistr assembly
Same changes as UIMA-1510
issueID:UIMA-1519
type:Improvement
changed files:uimaj-core/src/main/java/org/apache/uima/jcas/JFSIndexRepository.java
texts:Generify JFSIndexRepository

issueID:UIMA-152
type:New Feature
changed files:
texts:add component test utilities project
add component test utilities project
issueID:UIMA-1520
type:Improvement
changed files:uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/editview/CreateFeatureStructureDialog.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/editview/EditView.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/editview/EditViewPage.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/fsview/TypeCombo.java
texts:An annotation created with the edit view should use span of editor selection
Annotations created in the edit view have right now a begin and end index of 0 and it can only be changed by typing a new index. To improve the situation the beging and end index should be set to the current text selection in the annoation editor.
issueID:UIMA-1521
type:Bug
changed files:
texts:File encoding is platform dependent
Not specifying compiler and resources encoding produces platform dependent file encoding (i.e.: on Macs this leads to MacRoman encoding), UTF-8 (I think) would be better.This can be reached adding <encoding> tag in super pom's compiler plugin plus adding maven-resources-plugin (with encoding set).
issueID:UIMA-1522
type:Improvement
changed files:
texts:Sandbox RegularExpressionAnnotator - change commons-io to test dependency
This jar is only needed by the test cases
issueID:UIMA-1523
type:Bug
changed files:uimaj-core/src/main/java/org/apache/uima/cas/FSIterator.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FSIteratorImplBase.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/Subiterator.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FilteredIterator.java
texts:Generics: FSIterator.moveTo(T) should be moveTo(FeatureStructure)
The moveTo method of the FSIterator should take a FeatureStructure as argument and not the type parameter T.
issueID:UIMA-1525
type:Bug
changed files:
texts:Running an AE inside the Cas Editor does not marks editor as dirty if document is opened

issueID:UIMA-1526
type:New Feature
changed files:
texts:The adaptor of the lucene stop word filter dosn&#39;t support the case sensitive flag
The adaptor of the lucene stop word filter dosn't support the case sensitive flag. It should be configurable in the mapping file.
issueID:UIMA-1527
type:Improvement
changed files:
texts:Upgrade Tika Annotator for 2.3.0 release
Update to Tika 0.4 release, investigate missing Ant script referred to in Readme
issueID:UIMA-1528
type:Bug
changed files:
texts:The documentation describes still the UEAStemmer, which was removed from the distribution
The documentation describes still the removed UEAStemmer. The documentation must be removed
issueID:UIMA-1529
type:Improvement
changed files:
texts:Lucas depends on lucene 2.4.0, it should be lucene 2.4.1
Lucas depends on lucene 2.4.0, it should be lucene 2.4.1
issueID:UIMA-153
type:Bug
changed files:
texts:DocBook formatting fixes - style sheets and CSS wrong for table centering, plus fixes for CVD
The CVD doc conversion found multiple problems with figures.  Some of these were traced to incorrect CSS and XSL-FO customization layers.  Fix these to properly center tables and figures.Also careful checking showed line space slightly off - change from 1.4 to 1.35.  Also - specify the width parameter on the CVD Jpegs so the width for html is the same as specifying no-widths; this causes the PDFs to be reasonably sized.
issueID:UIMA-1530
type:Bug
changed files:
texts:Index naming is not unique in multithreaded scenarios
At the moment lucas appends the host name and the pid to the index name to create unique indexes for each IndexWriter instance. Thats not enough, because there can be more then one index writer in multithreaded scenarios.
issueID:UIMA-1531
type:New Feature
changed files:
texts:Need a script to launch a UIMA-AS service via RunWithJarPath
Use existing RunWithJarPath.class from the core to enable loading jars dynamically when launching UIMA AS service. Currently setUimaClasspath is called to setup static classpath before deployment of UIMA_Service. For more flexibility it would be better to load all jar files from specified locations instead of depending on them to be statically defined in setUimaClasspath. One of the reasons for supporting dynamically loaded jars is the naming scheme used by ActiveMQ. Each version comes with a differently named jars like for exampleapache-activemq-4.1.1.jar, activemq-all-5.2.0.jar, etc.
issueID:UIMA-1532
type:Bug
changed files:
texts:Generics in FSIndex maybe incorrect
The generics in FSIndex still need to be checked for correctness, there is already a thread about that on the mailing list. This issue should make sure we do not forget it.Here is the thread form the dev list:http://markmail.org/message/padxg7yhw5rnsjjo
issueID:UIMA-1533
type:Bug
changed files:
texts:Lucas generated test-sources jar missing license, notice, disclaimer
Lucas build pom includes running the maven-source-plugin.  The test-jar is missing required files. Also - while here, change goals to run in same process per recommendation in the usage section of the docs for the source plugin.
issueID:UIMA-1534
type:Bug
changed files:
texts:Lucas build puts third-party jars into lib dir - need to review Licenses and update Notices for these
The build has a dependency plugin that copies files into the /lib directory of the distribution.  The following files are currently copied:log4j.jargoogle-collections.jarlucene-core.jarlucene-snowball.jarReview licenses and merge any required notices for this.
issueID:UIMA-1535
type:Bug
changed files:
texts:Lucas POM issues
Some issues to resolve for the Lucas POM1) it specifies in distributionManagement <url>scp://login.coling.uni-jena.de/var/lib/maven/coling</url>This looks like it might left over from its life elsewhere.  I think the distributionManagement element should be deleted.2) factor out ant executions for copying standard stuff - done in parent3) There is a section of the POM specifying actions for the phase "site".   We currently do not run a mvn site lifecycle as part of our build process, so I think this will never execute.   Its purpose is to copy to the ${project.build.directory}/site/downloads the downloadable artifacts: the jar and the pear.I think we can leave this in as a comment reminding us in the future if we go to individually downloadable things from our main website, how we might want to do this.4) There is an execution in the Ant-run for building the pear directories that will be bound up with the pear.  This adds  doc/ with a copy of the generated html and pdf from the docbook sources, Should these be included in the PEAR?  They are already included in the binary distribution of the Sandbox. doc/downloads with 2 files: the lucas.xsd, and a sample CasConsumer descriptor.  Do these belong in the PEAR? They are already included in the src and binary distribution of the Sandbox resources dir for the PEAR is populated with the contents of src/test/resources.  This seems a bit unusual - why are the test resources being included in the PEAR?5) The PearPackagingMavenPlugin is setting a classpath that includes $main_root/lib/cglib-nodep-2.1_3.jar  - but this jar is not present.  What is it? can this be deleted? $main_root/lib/google-collect-snapshot-20080530.jar $main_root/lib/log4j-1.2.14.jar $main_root/lib/lucene-core-2.4.0.jar - needs updating to proper level $main_root/lib/lucene-snowball-2.4.0.jarThese need  updating to proper level, which is no level since the level was stripped from the /lib
issueID:UIMA-1536
type:Bug
changed files:uimaj-bootstrap/src/main/java/org/apache/uima/bootstrap/UimaBootstrap.java
texts:move RunWithJarPath into its own project
Testing reveals some issues using RunWithJarPath.   it should use parent-first class loading.  without this, it causes LinkageErrors if one of the jars in its path duplicates a base Java Jar (as is the case: for JMX Beans in Java 5 vs 6). it should be in a jar by itself or with just its dependencies, because anything else in its jar cannot see the new classes (since its jar was loaded by the parent).
issueID:UIMA-1537
type:Improvement
changed files:
texts:License Notice Disclaimer copying
change the common build POM ant executions that work with LICENSE, NOTICE, and DISCLAIMER, to a) source these from the project top level if available (for use by sandbox and other projects having perhaps different versions of these files)b) copy into src/test/resources as well, if src/test/java exists (in preparation for building source jars of the test code)c) skip the whole operation if no src/main/java exists
issueID:UIMA-1538
type:Improvement
changed files:
texts:Common Build Step: build source Jars for java Jars
Add common step that executes if the build type is JAR to build source Jars and maven-attach them to the regular Jars.  See discussion http://markmail.org/thread/blgy6et6xryljhgk
issueID:UIMA-1539
type:Task
changed files:
texts:Update READMEs / Release Notes for 2.3.0 release
READMEs for bin / src for UIMA, UIMA-AS, UIMA-CPP, and UIMA-Sandbox need updating for 2.3.0.  Updates, where possible should include a "What's new / changed" summary paragraph(s). It would be good if we could categorize these under a somewhat stable taxonomy of changes - such as "performance" etc. For instance, in the UIMA base - we've added "Delta CAS" support for remote services.
issueID:UIMA-154
type:New Feature
changed files:
texts:add snowball annotator project
add snowball annotator project
issueID:UIMA-1540
type:Bug
changed files:
texts:Uima AS client consumes too much CPU while waiting for a free CAS
The UIMA AS client enters a busy loop in the getCAS() in BaseUIMAAsynchronousEngineCommon_impl. Since a CAS instance may not be available for awhile, this code wastes CPU cycles by continuously testing for null and trying again. Put the thread to sleep for some time before testing for CAS availability again.
issueID:UIMA-1541
type:Improvement
changed files:
texts:UIMA AS source should be reformated according to uima guideline
The mentioned class should be reformated.
issueID:UIMA-1542
type:Improvement
changed files:
texts:dd2spring error messages specifying descriptor Keys should include parents
dd2spring puts out error messages and often includes the name of the Key of the associated Analysis Engine within an aggregate.Sometimes, the same Key name is used by several aggregates, and just using the Key name is not sufficient to disambiguate which one it is.  Disambiguate by prepending the path of keys to the key, in error messages.Defer past 2.3.0
issueID:UIMA-1543
type:Bug
changed files:
texts:Missing <version> tags in uimaj-distr POM
uimaj-distr POM miss <version> tag in each dependency so the POM is invalid
issueID:UIMA-1544
type:Improvement
changed files:uimaj-bootstrap/src/main/java/org/apache/uima/bootstrap/UimaBootstrap.java
texts:make bootstrap launcher take directories which have .class files in them
Some users don't Jar up their .class files and want to run with these directly.  Add a behavior to the bootstrap that accepts these directories (identified by being directories which have no .jar files) and include them directly in the classpath.
issueID:UIMA-1545
type:Improvement
changed files:uimaj-bootstrap/src/main/java/org/apache/uima/bootstrap/UimaBootstrap.java
texts:UimaBootstrap loader - print out the resulting classpath by default
Print out the actual classpath set up by the bootstrap, by default.  It can be suppressed by adding-DUimaBootstrapSuppressClasspathDisplay This will help future issue resolution by giving users easy way to see exactly what the classpath is they launch with.
issueID:UIMA-1546
type:Bug
changed files:
texts:Fix sandbox notice and license files
Review all sandbox notice and license files.  Make sure top-level notice and license files are aggregates of the component ones.
issueID:UIMA-1547
type:Bug
changed files:
texts:XML problems with simple server test cases
Simple server test cases fail in various JVMs due to various issues with XML generation in those JVMs.  This would not be problem if we had some sort of semantic XML comparison capability (anybody know if there is such a thing out there?).  Since we compare the files literally, little things like whitespace and standalone="no" declarations matter.
issueID:UIMA-1548
type:Bug
changed files:
texts:Include LICENSE/NOTICE/DISCLAIMER files from local sources ahead of common sources
Some of our sub-projects, e.g., the ones in the Sandbox, have individual LICENSE/NOTICE/DISCLAIMER files, that may differ from the common ones for the project because the sub-projects have particular other things they're distributing.Change the antrun configuration to use these in preference to the common ones.Also, change this to support alternate names for these - some of our projects use a suffix of ".txt", others don't.
issueID:UIMA-1549
type:Bug
changed files:
texts:uimaj-core has dependency on log4j coded incorrectly
The dependency is not to be packaged with the result - so the right coding of the scope is "provided",not "compile".  Also, the dependency is optional - it should not be passed by default as a transitive dependency to other maven POMs that depend on the uimaj-core.
issueID:UIMA-155
type:New Feature
changed files:
texts:add cas editor (tae) project
1) Upload the code to this Jira issue.2) Fax the software grant form to the ASF secretary.3) Call a vote on the dev list to accept the contribution.4) Fill in the IP clearance template and add it to the Incubator repo.(Note: see http://incubator.apache.org/ip-clearance/index.html for info on this)5) Announce the contribution to the Incubator PMC. If no issues areraised in 72 hours, then the code can be checked into the code repo.
issueID:UIMA-1550
type:Improvement
changed files:
texts:Remove the uni-jena.de repository from lucas pom

issueID:UIMA-1551
type:Bug
changed files:
texts:Lucas PearPackagingMavenPlugin PEAR classpath is incorrect
The classpath entry says currently:<classpath><!-- PEAR file component classpath settings -->$main_root/lib/cglib-nodep-2.1_3.jar;$main_root/lib/google-collect-snapshot-20080530.jar;$main_root/lib/log4j-1.2.14.jar;$main_root/lib/lucene-core-2.4.0.jar;$main_root/lib/lucene-snowball-2.4.0.jar</classpath>Which is incorrect because, Lucas does not depend anymore on the google-collections snapshot and lucene 2.4.0.
issueID:UIMA-1552
type:Bug
changed files:
texts:Lucas: does not compile with Java 1.5
Lucas uses IOException constructors that are not in Java 1.5.
issueID:UIMA-1553
type:Improvement
changed files:
texts:Add prospective search AE to Lucas
Prospective search is a search method where the search query is given firstand then searched against a stream of text, e.g. a xml feed.Lucene supports prospective search via their MemoryIndexhttp://lucene.apache.org/java/2_4_1/api/contrib-memory/org/apache/lucene/index/memory/MemoryIndex.htmlwhich is a fast one document in memory index.To add prospective search support to Lucas a new AE should be implemented,which uses a resource interface to fetch the search queries either froma user implemented object or from a resource file.The search results should be written to the CAS to be available for furtherprocessing by user implemented AEs.The new AE should share the code which is used to build the Index with theLuceneCASIndexer.
issueID:UIMA-1554
type:Bug
changed files:
texts:Fix CFE notice and license file
The CFE notice and license file only contains Apache boilerplate.  I see some eclipse stuff being pulled in.  Need to check all dependencies that we distribute.  For each dependency, check if it requires one or more attributions in the NOTICE file.  For each dependency, list it together with its license in the LICENSE file.
issueID:UIMA-1555
type:Task
changed files:
texts:repackage UIMA-AS to work as an add-on to base UIMA
Change the UIMA-AS "binary" packaging to be an "add-on" to base UIMA. remove uima base jars from uima-as bin packaging change instructions for installing uima-as to unzipping/taring over base uima level update docs to reflect this packaging. verify that javadocs generate, and that docs say there are 2 javadocs sets - one for base UIMA and one for uima-as addon verify that uima-as startup checks for compatible level of uima base (today this means equal level) verify that the binary examples (in the UIMA_HOME/examples directory) is the proper merge of base and UIMA-AS verify that the scripts work
issueID:UIMA-1556
type:Improvement
changed files:
texts:The LucasCasIndexer should be an Analysis Engine and not a CasConsumer
Right now the LucasCasIndexer is a CasConsumer, but it should be an AnalysisEngine to make reuse of the code to create a documentbased on a specified configuration easy. With that change a base class could be created for AEs which need to process Lucene documents.One use case for this is the prospective search AE (UIMA-1553).Beside that, the UIMA documentation suggests to not longer use Cas Consumers.If we do this change, it should be done before the 2.3.0 release, because it is not backward compatible.
issueID:UIMA-1557
type:Bug
changed files:
texts:LuceneCASIndexer.xml should be in src/test/resources
The mentioned file is located in src/main/resources and is referencing to src/test/resources/lucas.xml. The fileshould be moved to src/test/resources. Otherwise it will be included in a binary distribution with a broken filereference because test resources are not included in a binary distribution.
issueID:UIMA-1558
type:Bug
changed files:
texts:LuceneCASIndexerTest fails if the created LuceneCASIndexer procsess a CAS
The instance of LuceneCASIndexer created in the setUp method throws an exception if it processes a CAS, becausethe lucas.xml file defines mappings for non-existing types.To fix the issue, a type system should be defined and the type names in lucas.xml should be renamedto apache name space (instead of julie lab).
issueID:UIMA-156
type:Improvement
changed files:uimaj-tools/src/main/java/org/apache/uima/tools/cvd/MainFrame.java
texts:CVD uses deprecated API for setting log file.

issueID:UIMA-1560
type:Bug
changed files:uimaj-cpe/src/main/java/org/apache/uima/collection/impl/cpm/container/deployer/VinciTAP.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/metadata/CpeDefaultValues.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/metadata/cpe/CpeCasProcessorsImpl.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/metadata/CpeDefaultValues.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/cpm/engine/CPMEngine.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/cpm/engine/ArtifactProducer.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/cpm/container/deployer/VinciTAP.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/cpm/container/ProcessingContainer_Impl.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/cpm/container/CPEFactory.java
texts:Fix problems reported by FindBugs
Some of the problems reported by Findbugs need to be fixed. Most importantly, null dereferencing, indefinite wait() in a testcase, entering wait() without checking the state of the CPE.
issueID:UIMA-1561
type:Bug
changed files:
texts:UIMA Reference docs 5.5.4 DocumentAnnotation is misspelled
"5.5.4. Adding Features to DocumentAnnotationThere is one built-in type, uima.tcas.DocumentAnnotion, to which applications can add additional features. (All other built-in types are "feature-final" and you cannot add additional features to them.) Frequently, additional features are added to uima.tcas.DocumentAnnotion to provide a place to store document-level metadata. ..."Should be uima.tcas.DocumentAnnotation and not uima.tcas.DocumentAnnotion, in the two mentions of it above.
issueID:UIMA-1562
type:Bug
changed files:uimaj-core/src/main/java/org/apache/uima/analysis_engine/impl/PearAnalysisEngineWrapper.java
texts:CasMultiplier doesn&#39;t work for PEARs
The original code called process(aCas) and returned the EmptyCasIterator. Thus CASes produced were thrown away. The following is a two line change fix:org.apache.uima.analysis_engine.impl.PearAnalysisEngineWrapper   public CasIterator processAndOutputNewCASes(CAS aCAS)         throws AnalysisEngineProcessException {      UIMAFramework.getLogger(this.getClass()).logrb(Level.FINE,            this.getClass().getName(), "processAndOutputNewCASes",            LOG_RESOURCE_BUNDLE, "UIMA_analysis_engine_process_begin__FINE",            new Object[] { this.ae.getAnalysisEngineMetaData().getName() });      CasIterator result = this.ae.processAndOutputNewCASes(aCAS);  // FIXED LINE      UIMAFramework.getLogger(this.getClass()).logrb(Level.FINE,            this.getClass().getName(), "processAndOutputNewCASes",            LOG_RESOURCE_BUNDLE, "UIMA_analysis_engine_process_end__FINE",            new Object[] { this.ae.getAnalysisEngineMetaData().getName() });      return result; // FIXED LINE   }Just the indicated lines are changed.
issueID:UIMA-1565
type:Bug
changed files:
texts:Fix NPE in Uima AS jUnit code when running with AMQ 5.2
Uima AS ActiveMQSupport throws NPE in addHttpConnector() when using AMQ 5.2. It seems that this version of AMQ is not initializing the HTTP Connector the same way as in AMQ 4.1.1. After the connector is created       httpConnector = broker.addConnector(httpURI);it fails with NPE when httpConnector.start() is called.
issueID:UIMA-1566
type:Bug
changed files:
texts:build breaks for some components having no source files
The maven source plugin complains (and stops the build) if no files are put into its archive.  One project that has this behavior is uimaj-as-osgi-runtime - which has no sources.  A workaround fix is to change the maven sources plugin to have the param to include the "pom" - this insures there's always at least one file to include.
issueID:UIMA-1567
type:Improvement
changed files:
texts:Maven build: add <prerequisites> to uimaj to specify minimum Maven release level

issueID:UIMA-1568
type:Improvement
changed files:
texts:Remove no longer used assemble-plugin files from uimaj-ep- projects
These were formerly used before we switched to using the "bundle" maven plugin, and are no longer needed
issueID:UIMA-1569
type:Bug
changed files:uimaj-core/src/main/java/org/apache/uima/cas/Marker.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/CASImpl.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/CASSerializer.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/MarkerImpl.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/Serialization.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/XmiCasSerializer.java
uimaj-core/src/main/java/org/apache/uima/cas/CASRuntimeException.java
texts:Marker should be make invalid when CAS is reset.
When the CAS is reset any Marker created prior to the reset are invalid and should not be used for a later delta CAS serialization.The reset() should make the Marker invalid and calls to delta serialization should test whether the Marker is valid.
issueID:UIMA-157
type:Improvement
changed files:
texts:CAS / CasView API refactoring
1.  GoalsThe following are confusing (or some might say, "broken")(a) the interface "CAS" can be an interface to either the whole CAS or to aview.  Methods like this are poor:CAS view = cas.getView(name);(b) the logic determining which "CAS" (a view or the whole CAS) getspassed to anannotator's process method is needlessly complicated.We would like to improve this in v2.1, so we have a short runway to implement it.  It's acceptable if what we do breaks multi-viewannotators/applicatoins, but it cannot break single-view annotators/applications.We want whatever we do to be easier to document and explain to usersthan what we currently have.2. Proposed SolutionWe don't plan to change the fundamental design of views at this point there isn't time and it's too controversial.  A view still consistsof an index repository and a Sofa.  (Yes, I know someday a view maynot have a Sofa - but for now, it does.)A. New CasView interfaceWe create a new interface CasView.  All of the CAS.getView() methodswill now return type CasView (instead of CAS).The CasView interface will contain all of the sofa-access methods andindexing-related methods that are on the CAS interface.Further discussion: http://www.mail-archive.com/uima-dev@incubator.apache.org/msg00945.htmlProposed sets of methods on each interface: http://cwiki.apache.org/UIMA/casandcasviewinterfaceredesign.html
issueID:UIMA-1571
type:Bug
changed files:
texts:FsVariables book_name should be FsVariablesUserGuide instead of fsVariablesUserGuide
When building the FsVariables on Unix I get the following error message:&#91;INFO&#93; ------------------------------------------------------------------------&#91;ERROR&#93; BUILD ERROR&#91;INFO&#93; ------------------------------------------------------------------------&#91;INFO&#93; An Ant BuildException has occured: The following error occurred while executing this line:/home/joern/uima-dev3/uima-docbook-tool/build/build-docbook.xml:29: The following error occurred while executing this line:/home/joern/uima-dev3/uima-docbook-tool/build/common-properties-per-book.xml:80: /home/joern/uima-dev3/FsVariables/docbook/fsVariablesUserGuide/images not found.The build_documentation.xml contains the following line:property name="book_name" value="fsVariablesUserGuide"/>The book_name value should be changed to "FsVariablesUserGuide".
issueID:UIMA-1572
type:Bug
changed files:
texts:Lucas artifactId does not match folder name in svn
The maven eclipse plugin expects that the folder name of theproject matches the artifactId, but that is not the case for Lucas.The artifactId is "lucas" and the folder name is "Lucas".On Unix eclipse cannot find the "lucas" project, because its named"Lucas".The artifactId should be changed to "Lucas" to solve this issue.
issueID:UIMA-1573
type:Bug
changed files:
texts:setUimaClassPath fixes
as part of the work on UIMA-1555 we're consolidating the uima-as versions of setUimaClassPath into the base versions.  As part of this process, through comparision of the 4 version (UIMA / UIMA-AS, windows / unix) many small differences became apparent, which should be fixed:1) Some scripts missing $CATALINA_HOME/webapps/axis/WEB-INF/lib/mail.jar - Adam recalls this can be needed if the SOAP transport is set up to use "attachments" for binary info, instead of base64 encoding these.2) Some scripts need updating for the .sh to "export" variables intended to be environment variables.  3) Some scripts need updating to account for using UIMACPP_HOME (if set).4) The ordering of classpath Jars is different between Windows and Linux5) CLASSPATH var, if set, is "prepended" to classpath - should be appended after whatever the script sets     UIMA_CLASSPATH pre-existing value is "prepended" - should be appended after whatever the script sets     LD_LIBRARY_PATH is sometimes "prepended" - should be appended after whatever the script sets     DYLD_LIBRARY_PATH (for MacOS) is sometimes "prepended" - should be appended after whatever the script sets
issueID:UIMA-1574
type:Improvement
changed files:
texts:uima-as assembly is to be unzipped over base, but cannot be, because top level dir names differ

issueID:UIMA-1575
type:Improvement
changed files:
texts:Change eclipse update site and feature generation to use common maven mechanisms
Change the Eclipse update site generation:1) make the Feature projects into maven projects, adding a pom specifying "jar" packaging, and making the jar have the normal LIC/NOT/DIS and the feature.properties and feature.xml files2) make the update site into a maven projects, having its pom: invoke the feature poms to build those features use dependency:dependency-copy to copy plugin artifacts into its plugin directory use dependency:dependency-copy to copy the feature jar artifacts into its features directory use the ant-run plugin to build the update site
issueID:UIMA-1576
type:Bug
changed files:uimaj-ep-cas-editor-ide/src/main/java/org/apache/uima/caseditor/ide/DefaultCasDocumentProvider.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/CasDocumentProvider.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/core/model/dotcorpus/DotCorpusSerializer.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/core/model/dotcorpus/DotCorpus.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/contextmenu/ShowAnnotationsMenu.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/AnnotationEditor.java
texts:The AnnotationEditor does not remember the shown annotations when the Cas Editor is restarted
The Annotation Editor does not remember the shown annotations when the Cas Editor is restarted. This bug is confusing for new users, because the Annotation Editor looks different compared to the last time a user used it. For more advanced users it is annoying because by default all annotations are shown in the Annotation Editor but it is common to un-select some to focus on a specific task, the un-selection must be redone after every start of the Cas Editor.
issueID:UIMA-1577
type:Bug
changed files:
texts:Do pear packaging with dependencies included for CFE

issueID:UIMA-1578
type:Improvement
changed files:
texts:The uimaj-as-camel documentation should be extended and reviewed
The documentation should be more specific about what uimaj-as-camel does and extended with a sample. After that is done the documentation should be edited by a native english speaking reviewer.
issueID:UIMA-1579
type:Bug
changed files:
texts:The cas pool size of the camel uima driver must be configurable
The user must be able to configure the cas pool size used by the camel driver component.
issueID:UIMA-158
type:Bug
changed files:uimaj-tools/src/main/java/org/apache/uima/tools/RunAE.java
uimaj-tools/src/main/java/org/apache/uima/tools/components/FileSystemCollectionReader.java
texts:runAE utility does not identify bad XCAS input files
The collection reader used by runAE needs to identify input XCAS files that fail to deserialize properly. Also, the Cas consumer writing the output XCAS file should enable formatting.
issueID:UIMA-1580
type:Bug
changed files:
texts:Synchronize AsynchAECasManager initialize() method to fix NPE while merging type systems
A NPE exception occurs intermittently while merging type systems. There seems to be a race condition where multiple threads attempt to initialize cas pools. The result is an exception that looks like this:org.apache.uima.aae.error.AsynchAEException: java.lang.NullPointerExceptionat org.apache.uima.aae.controller.AggregateAnalysisEngineController_impl.mergeTypeSystem(AggregateAnalysisEngineController_impl.java:2430)at org.apache.uima.aae.handler.input.MetadataResponseHandler_impl.handle(MetadataResponseHandler_impl.java:140)at org.apache.uima.aae.handler.input.MetadataRequestHandler_impl.handle(MetadataRequestHandler_impl.java:78)at org.apache.uima.aae.handler.HandlerBase.delegate(HandlerBase.java:149)at org.apache.uima.aae.handler.input.ProcessResponseHandler.handle(ProcessResponseHandler.java:664)at org.apache.uima.aae.handler.HandlerBase.delegate(HandlerBase.java:149)at org.apache.uima.aae.handler.input.ProcessRequestHandler_impl.handle(ProcessRequestHandler_impl.java:951)at org.apache.uima.aae.spi.transport.vm.UimaVmMessageListener.onMessage(UimaVmMessageListener.java:107)at org.apache.uima.aae.spi.transport.vm.UimaVmMessageDispatcher$1.run(UimaVmMessageDispatcher.java:70)at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)at java.lang.Thread.run(Thread.java:619) Caused by: java.lang.NullPointerExceptionat org.apache.uima.resource.CasDefinition.<init>(CasDefinition.java:66)at org.apache.uima.resource.impl.CasManager_impl.getCasDefinition(CasManager_impl.java:94)at org.apache.uima.resource.impl.CasManager_impl.createNewCas(CasManager_impl.java:196)at org.apache.uima.util.CasPool.fillPool(CasPool.java:319)at org.apache.uima.util.CasPool.<init>(CasPool.java:191)at org.apache.uima.resource.impl.CasManager_impl.defineCasPool(CasManager_impl.java:174)at org.apache.uima.resource.impl.CasManager_impl.defineCasPool(CasManager_impl.java:161)
issueID:UIMA-1581
type:Bug
changed files:
texts:RegularExpressionAnnotator tests fail
the following TestSetFeatureValues tests fail: testSetFeatureValues1 testSetFeatureValues2 testSetFeatureValues3
issueID:UIMA-1582
type:Bug
changed files:
texts:SimpleServer ConfigTest fails
testResultGeneration1 to testResultGeneration10 fail due to a wrong starting carriage return in the expected String used to compare against the actual result;  actual.equals(expected) fails for standoff (not inlined configuration XML).
issueID:UIMA-1583
type:Improvement
changed files:
texts:Regularize Sandbox builds and assembly
Converge the many, often slightly different sandbox builds into a more maintainable structure, achieving the following: common pear packaging for those projects making a pear, including standardized setting of the pear-id, and the copying of any "lib" files found via dependency plugin to the pear lib dir.. common preparation of the "bin" and "src" assembly parts, to make the assembly step easier and consistent.  The assembly step will be very minimal, because each project will have pre-built in target/bin/<artifactId> and target/src/<artifactId> the set of files that should go into the "bin" and "src" distributions.  This approach allows using the maven inheritance mechansim to factor out common operations, so they are more maintainable (versus using a very large and complex "assembly" descriptor). common obtaining of 3rd party Jars to be distributed with sandbox projects, and putting of these into both the "bin" distribution (assembly) and the pear (if one is generated).  Also, any other contents of a top level lib/ will be copied to both of these places in the lib/ directory. common setting of scopes for dependencies for included uima components - some set to "provided", others to "test". The correct scopes are needed to make the dependency pluging reliably pick the right Jars to put into the lib. common build of documentation (if available) from docbook sources, and placing that in both the "bin" assembly, and also in a project/"docs" directory - where the intent is that it will be checked in to SVN, and the website can link to this as "online" documentation for the sandbox projects. common copying of generated docs into pear now that dependencies are being used to get the 3rd party jars, review these to insure all the right jars are being obtained, and adjust the dependencies as needed. for those project using a top level folder "desc" to hold descriptors, include these descriptors in the generated main Jar, where they can be then referenced by "name".  Example: the Whitespace Annotator did this, and the Tagger used this to conveniently run the Whitespace Annotator without using/installing a PEAR. common copying of required LICENSE/NOTICE/DISCLAIMER, plus README files to the src/bin assemblies, and to the PEAR if one is generated. common copying of top level desc and resources directories to the bin, src, (automatically done for  PEAR by pear-packaging-plugin)
issueID:UIMA-1584
type:Bug
changed files:
texts:Document Delta CAS XMI format
Update xmi reference.
issueID:UIMA-1585
type:Improvement
changed files:uimaj-ep-cas-editor-ide/src/main/java/org/apache/uima/caseditor/ide/DefaultCasDocumentProvider.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/outline/OutlineStyles.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/outline/SwitchStyleAction.java
texts:Run RAT on projects, fix missing licenses, add RAT running to POM, document exclusions
Consider adding the RAT maven plugin as you go and record the kind of exclusion when excluding things (e.g., generated, test data, etc. ).
issueID:UIMA-1586
type:Improvement
changed files:
texts:CFE - XMLBeans - use maven plugin to generate the parser
remove (slightly incorrect versions of) the java sources for the generated xml parser produced previously by hand for this project, and replace with a maven plugin step which automatically regenerates these when needed, from the .xsd file.
issueID:UIMA-1587
type:Improvement
changed files:
texts:replace stax jar with better licensed geronimo version
See https://issues.apache.org/jira/browse/LEGAL-42 for reason for changing
issueID:UIMA-1588
type:Bug
changed files:
texts:Work around Eclipse module version comparison issues in Maven
Maven compares (sometimes) versions such that 1.2.3 is considered later than 1.2.3-XXXX.  So you cannot specify a dependency range of [3.3.0,3.4.0) and have it match something in the repo with a version 3.3.0-v20090603.  Work around this by changing the range to [3.2.9,3.4.0) - that is, one notch below the one you want.
issueID:UIMA-1589
type:Improvement
changed files:
texts:CFE - add Readme describing how to regenerate the EMF generated files
Also move the xsd file for XMLBeans to its own directory, and add a directory for the version of that file for EMF generation (it has different namespaces, which results in different Java package names being used).  Also update RAT exclusions for generated files.
issueID:UIMA-159
type:Task
changed files:
texts:Add license/notices etc. files for distribution

issueID:UIMA-1590
type:Improvement
changed files:
texts:fix extractAndBuild scripts
The extractAndBuild scripts need the following improvements: since the builds for uima-as and the sandbox require that these projects be in the same directory as the base uima, fix the script to extract into a subdir of the base uima extraction, and then copy into the same base uima dir. The scripts have been failing when it comes to doing the doc building, because they are missing saxon, jai, and the docbook 4.5 xml files; the script tries to get these from the internet (with permission) but fail on the 2nd request due to a problem of getting Ant I/O to the "console" to work more than once when Ant is invoked from maven.  Also, it's a nuisance.  Change this to attempt to copy over any of this tooling that might be in the same projects that contain the "extractAndBuild" scripts in the first place.  So - if you've fixed those up once, these will be reused. regularize the arguments - so they all take 2 args for the release and release-candidate, so all extractAndBuild args are the same. for the sandbox build - fix the assembly to include the -N parameter - no need to build twice.
issueID:UIMA-1591
type:Improvement
changed files:
texts:Sandbox build - fix copying & cleaning of docs/ for website interaction with SVN
The code for copying the generated docs to the <project>/docs is interacting poorly with SVN.   Some files seem to go missing.Change this to: not automatically delete the /docs dir - do it if a mvn "clean" is invoked only. when deleting the /docs dir, keep the .svn information
issueID:UIMA-1592
type:Improvement
changed files:PearPackagingMavenPlugin/src/main/java/org/apache/uima/pear/tools/PearPackagingMojo.java
texts:PearPackagingMavenPlugin - correct documentation and add usage from command line, and add plugin prefix
The documentation incorrectly states that dependencies added to the lib dir need to be in the classpath - they don't - they are automatically added when the pear is installed.Add a configuration to the pom to set the plugin prefix to pear, enabling maven commands like mvn pear:package to work.
issueID:UIMA-1593
type:Bug
changed files:
texts:AEs that declare multipleDeploymentAllowed=false can&#39;t be deployed as services and called from multiple clients in the same JVM
If an AnalysisEngine descriptor declares multipleDeploymentAllowed=false, the intention is that there cannot be multiple instances of it in the same JVM.  UIMA reports an error if you try to embed such an AE in an aggregate that declares multipleDeploymentAllowed=true.  But this only makes sense for co-located components, not services.Currently, the service wrapper returns the multipleDeploymentAllowed=false as part of the getMetaData() call.   The aggregate AE checks this metadata for consistency, and at that point it isn't aware that it came from a service, so the exception is thrown.Perhaps the service wrapper should be modified to set mutlipleDeploymentAllowed to true when responding to all getMetaData() calls?  Alternatively it could be done on the client side, but to me it makes more sense for the service to do it - why expose this setting if clients have no use for it?
issueID:UIMA-1594
type:Improvement
changed files:
texts:make sandbox assembly build like base and uima-as builds
Currently the base and uima-as builds work as follows:An aggregator POM lists the modules, and has common, factored-out things for the parts.An "assembly" pom is not an aggregator pom, and is just used for assembly.In the sandbox build, the SandboxDistr POM is an aggregator POM and the common factored-out parent for the sandbox projects, but the assembly pom is also an aggregator pom.  So if you do cd SandboxDistrmvn installit build all the projects, and then if you docd SandboxDistr/annotator-package  (where the assembly pom is)mvn assembly:assemblyit rebuilds (but doesn't install) all the sandbox projects.  I've been working around this by codingmvn -N assembly:assembly
issueID:UIMA-1595
type:Bug
changed files:
texts:Change build of Sandbox RegExpr to use xmlbean maven plugin, and delete its lib dir
Change this build to remove the lib dir and add the automatic generation of xmlbean based parser classes at build time, to be consistent with the other 4 sandbox projects which are now using this method.
issueID:UIMA-1596
type:Bug
changed files:
texts:fix sandbox build - use of <profile> for conditional not working for child projects
The SandboxDistr has common, factored-out build steps for the sandbox projects. One of this is to conditionally run the docbook build for the child project, if that project has a build_documentation.xml file.This was being done using a <profile> element in the factored-out Sandbox pom, which activated if that file was present.This works when you do mvn install from the child project; the <profile> is inherited via the <parent> chain, and all is well.However, if you run from the SandboxDistr (with the intent of running the build recurisvely on all the <module> children projects, this fails - because the <profile> is evaluated just once, for the SandboxDistr project.Fix this by abandoning this method of conditional execution, and reverting to <ant> conditional tests.
issueID:UIMA-1597
type:Bug
changed files:
texts:in sandbox common build, change needed to use assembly-bin instead of bin
The change to using assembly-bin requires a reference in the pear builder to be updated from bin to assembly-bin.  Symptom: dependency lib files not being included in the pears.
issueID:UIMA-1598
type:Improvement
changed files:uimaj-core/src/main/java/org/apache/uima/resource/impl/CasManager_impl.java
texts:make CasManager_impl thread-safe
Because it is not thread-safe, users have to remember to serialize on using its services.  See UIMA-1400 for instance.  Defer past 2.3.0 release.
issueID:UIMA-1599
type:Bug
changed files:uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/outline/TypeGroupedContentProvider.java
texts:Outline view may throws ClassCastException in TypeGroupedContentProvider
!ENTRY org.eclipse.ui 4 0 2009-10-05 20:38:20.113!MESSAGE Unhandled event loop exception!STACK 0java.lang.ClassCastException: org.apache.uima.caseditor.editor.outline.AnnotationTypeTreeNode cannot be cast to org.apache.uima.caseditor.editor.outline.AnnotationTreeNode at org.apache.uima.caseditor.editor.outline.TypeGroupedContentProvider.getParent(TypeGroupedContentProvider.java:105) at org.eclipse.jface.viewers.AbstractTreeViewer.getParentElement(AbstractTreeViewer.java:1653) at org.eclipse.jface.viewers.TreeViewer.getParentElement(TreeViewer.java:606) at org.eclipse.jface.viewers.AbstractTreeViewer.internalExpand(AbstractTreeViewer.java:1580) at org.eclipse.jface.viewers.AbstractTreeViewer.internalExpand(AbstractTreeViewer.java:1582) at org.eclipse.jface.viewers.AbstractTreeViewer.setSelectionToWidget(AbstractTreeViewer.java:2470) at org.eclipse.jface.viewers.AbstractTreeViewer.setSelectionToWidget(AbstractTreeViewer.java:2900) at org.eclipse.jface.viewers.StructuredViewer.preservingSelection(StructuredViewer.java:1399) at org.eclipse.jface.viewers.TreeViewer.preservingSelection(TreeViewer.java:402) at org.eclipse.jface.viewers.StructuredViewer.preservingSelection(StructuredViewer.java:1353) at org.eclipse.jface.viewers.StructuredViewer.refresh(StructuredViewer.java:1455) at org.eclipse.jface.viewers.ColumnViewer.refresh(ColumnViewer.java:537) at org.eclipse.jface.viewers.StructuredViewer.refresh(StructuredViewer.java:1414) at org.apache.uima.caseditor.editor.outline.AnnotationOutline$EditorListener.showAnnotationsChanged(AnnotationOutline.java:91) at org.apache.uima.caseditor.editor.AnnotationEditor$3.selectionChanged(AnnotationEditor.java:686) at org.apache.uima.caseditor.editor.contextmenu.ShowAnnotationsMenu$1.handleEvent(ShowAnnotationsMenu.java:107) at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:84) at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1176) at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:3493) at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3112) at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:2405) at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:2369) at org.eclipse.ui.internal.Workbench.access$4(Workbench.java:2221) at org.eclipse.ui.internal.Workbench$5.run(Workbench.java:500) at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:332) at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:493) at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:149) at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:113) at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:194) at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:110) at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:79) at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:368) at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:179) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25) at java.lang.reflect.Method.invoke(Method.java:597) at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:559) at org.eclipse.equinox.launcher.Main.basicRun(Main.java:514) at org.eclipse.equinox.launcher.Main.run(Main.java:1311)
issueID:UIMA-16
type:Bug
changed files:uimaj-cpe/src/main/java/org/apache/uima/collection/impl/cpm/container/CPEFactory.java
texts:NullPointerException in UIMAFramework.newCollectionProcessingManager
NullPointerException due to misplaced XML file for the default CPE descriptor.
issueID:UIMA-160
type:Improvement
changed files:
texts:Logger properties files live in root directory of distribution
It would be nice if they could live in a subdirectory somewhere.
issueID:UIMA-1600
type:Bug
changed files:uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/annotation/BackgroundDrawingStrategy.java
texts:Background drawing style does not draw correctly if an annotation contains a tab
In the case an annotation contains a tab char the background drawing strategy draws 8 spaces for the tab instead of the configured number of spaces per tab in the editor configuration. In the case the number configured does not equal 8 the text drawn toan incorrect position.The issue can be fixed by using the correct number of spaces to draw a tab.
issueID:UIMA-1601
type:Bug
changed files:uimaj-core/src/main/java/org/apache/uima/cas/impl/FSIndexRepositoryImpl.java
texts:moveTo() and iterator(fs) do not point to "leftmost" FS
According to the API docs FSIterator.moveTo(FeatureStructure fs) should move the iterator to "the first features structure that is equal to fs". In case we have multiple annotations of same type and same region (same start/end) as fs moveTo() will point to one of them but not necessarily to the first (leftmost) one (in iterator order).The inconsistency to the API doc is even more clear with FSIndex.iterator(FeatureStructure fs). The API doc states: "The position of the iterator will be set such that the feature structure returned by a call to the iterator's  get() method is greater than or equal to fs, and any previous FS is less than FS." Thus if we have multiple annotations of same type as fs and same region one would expect the iterator to start with the left most one and return all of these annotations using next(). However as with moveTo() this is not the case. E.g. after iterator creation calling moveToPrevious() followed by get() returns sometimes one of the annotations with same region as fs (and same type).
issueID:UIMA-1602
type:Task
changed files:
texts:Update build to 2.3.0

issueID:UIMA-1604
type:New Feature
changed files:
texts:Add ShutdownHook to Uima As Service Wrapper
Uima AS service should implement a ShutdownHook to enable cleanup when the service is killed via kill command. The action taken by the shutdown hook should be quiesce and stop.
issueID:UIMA-1605
type:Bug
changed files:
texts:Fixed Findbugs issues
Corrected a few issues discovered by Findbugs.
issueID:UIMA-1606
type:Bug
changed files:
texts:On eclipse 3.3.1.1 package not automatically added to the list of  imported packages
When doing an eclipse build of uimaj-ep-jcasgen project, found the package org.eclipse.jdt.core.jdom was not being automatically added to imported package list although mvn install builds successfully.
issueID:UIMA-1607
type:Bug
changed files:
texts:Wrong log formatter used in uima-as
When running the uima-as test described in section 3.4 of the  README, the uima.log is always produced in the xml format.  The problem appears to be caused by the bootstrap jar as just before the service start it outputs:  log4j:WARN No appenders could be found for logger (org.springframework.context.support.FileSystemXmlApplicationContext).  log4j:WARN Please initialize the log4j system properly.Perhaps the bootstrap program needs to be in uima-core.jar so it can find the specified log formatter: org.apache.uima.internal.util.UIMALogFormatter
issueID:UIMA-1608
type:Bug
changed files:
texts:JMX statistics are not being updated
Process CAS requests are not updating the statistics correctly.
issueID:UIMA-1609
type:Bug
changed files:
texts:binary assembly wrongly including FOP files
The uima-docbook-tools project downloads some FOP components when used to build documentation. These are not to be distributed with UIMA - they are downloaded as needed.  the fop-config.xml file is needed, though.  Fix assembly specs
issueID:UIMA-161
type:Improvement
changed files:
texts:adding documentation for PEAR API
adding some chapters about the PEAR API to the documentation. E.g. how to install a PEAR file using the API.
issueID:UIMA-1610
type:Improvement
changed files:
texts:add a changeVersion build tool to handle changes needed in sandbox release
model after existing changeVersion ant scripts in uimaj-distr and uima-as-distr
issueID:UIMA-1611
type:Bug
changed files:
texts:UimacppServiceControlled need to implement isStopped()
Required in order for UIMA_Service to undeploy and shutdown when handling a stop or quiesce and stop command.
issueID:UIMA-1612
type:Improvement
changed files:
texts:Removed Unused classes from UIMA AS org.apache.uima.aae.error.handler package
org.apache.uima.aae.error.handler package contains a number of ErrorHandler classes that are not used.
issueID:UIMA-1613
type:Improvement
changed files:
texts:run Rat consistently for all maven assemblies
Make all assemblies and RAT testing of those assemblies work the same way (convention over configuration).  Have common parent POM concerned with doing assemblies, and have the 3 distribution poms (that build the base, uima-as, and sandbox distributions) use this as a common parent.Builds are done in the "package" lifecycle.  After build is done, in the "verify" lifecycle (just before "install), run the RAT tool.  Incorporate into the distribution POMs the set of RAT exclusions.  Include a step of unpacking the assemblies (because the RAT tool doesn't work on zips).Running mvn install will now do the assemblies and do the RAT testing.  This effectively automates future RAT testing.Running mvn install on the new superPom for distributions will build all 3 distributions (base, sandbox, and uima-as, not uima-cpp).  Insure the assemblies are not uploaded to the maven repo's - (they're big, not jars, and should instead be downloaded from our website). After this change, to build distributions, do mvn install, not mvn assembly:assembly, on the distribution POMs.  Cripple mvn assembly:assembly so some kind of error message comes out reminding to use mvn install instead. Update website with new instructions on building distributions.
issueID:UIMA-1614
type:Task
changed files:
texts:update 2.3.0-incubating-SNAPSHOT to drop the snapshot in prep for release

issueID:UIMA-1615
type:Bug
changed files:
texts:make build-from-sources work
fix various issues to make build from release sources work
issueID:UIMA-1616
type:Bug
changed files:
texts:Add ability to quiesce C++ service before shutdown
Need the ability to ask a C++ services to complete the current work before shutting down. Undeploying a service should not result in loss of work.
issueID:UIMA-1617
type:Bug
changed files:
texts:Add support for quiesce and shut down
The C++ service wrapper needs to be modified to handle quiesce and shutdown requests from the command line as well as from a Java controller.A 'q' entered at the command line should  cause the wrapper to wait for the processing instances to complete the current work before shutdown.  A 's' entered at the command line should  result in an immediate shut down. Ctrl C is to be handled as a quiesce and shutdown.
issueID:UIMA-1618
type:Bug
changed files:
texts:Rename CasEditor NLP category to "Cas Editor" and the NLP project to "Cas Editor Project"
Right now the Cas Editor still uses NLP as category (e.g. in the new wizard or as view category) and the Cas Editor project is called "Project" the names should be changed from "NLP" to "Cas Editor" and form Project to "Cas Editor Project".
issueID:UIMA-1619
type:Bug
changed files:
texts:Clarify that a Cas Editor Project is required to use the Cas Editor in the documentation
The documentation should clearly say that a Cas Editor Project is required to use the Cas Editor, and that it does not work without it.
issueID:UIMA-162
type:Sub-task
changed files:uimaj-tools/src/main/java/org/apache/uima/tools/cpm/CpmPanel.java
uimaj-tools/src/main/java/org/apache/uima/tools/cpm/CpmPanel.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/metadata/cpe/CpeDescriptionImpl.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/metadata/cpe/CpeDescriptionImpl.java
texts:Modify CPE GUI to preserve settings in CPE descriptor that&#39;s opened, even if GUI doesn&#39;t support editing those settings

issueID:UIMA-1620
type:Improvement
changed files:
texts:Add options runAECpp to enable testing of annotator in a  multithreaded setup.
Add options to runAECpp:1) instantiate multiple instances of the analysis engine and run these concurrently on different threads.2) option to do multiple runs of the same inputs.3) randomize the next input to process4) random delays between calls to process
issueID:UIMA-1621
type:Bug
changed files:uimaj-tools/src/main/java/org/apache/uima/tools/cvd/MainFrame.java
texts:CVD should work when classes loaded dynamically
If CVD is loaded via the bootstrap loader it gets a NPE when configuring the logger.
issueID:UIMA-1622
type:Improvement
changed files:
texts:Make uima-as dependencies more precise
see http://markmail.org/thread/ktujtkwoqpihnqu4
issueID:UIMA-1623
type:Bug
changed files:
texts:Error handling incorrect if multiple delegates have the same window values
When delegates have the same processCas error configuration dd2spring gives them the same Threshold object ... but that has R/W storage when a threshold window is specified, causing premature error actions.   Fix is to give each delegate a unique instance when necessary.
issueID:UIMA-1624
type:Bug
changed files:
texts:Uima AS service should start listeners on its input queue on succesfull initialization only
Currently UIMA AS service JMS listener starts as soon as it is initialized. There are two listeners started on an input queue each with a different selector. One listener is for processing GetMeta while the other for Process messages. The listeners start in separate threads and become active despite the fact that the rest of service components may not have finished initializing. This creates a problem if the service fails in annotator code while initializing. Since the GetMeta listener is active, it may fetch GetMeta request from a queue and try to process it. The current code prevents the GetMeta from being processed since the service has not finished initializing. If the AE initialization fails, the getMeta is never returned to the client. Fix input queue listeners so that they become active only after successful initializationof AEs. In case of aggregates, allow listeners on temp reply queues to start immediately so that GetMeta replies from delegates can be processed.
issueID:UIMA-1625
type:Bug
changed files:uimaj-core/src/main/java/org/apache/uima/analysis_engine/impl/AnalysisEngineManagementImpl.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/service/impl/AnalysisEngineServiceAdapter.java
texts:AnalysisEngmeManagementImpl getAnalysisTime() and getCasesProcessedPerSecond() should include remote service call time.
Service call time is recorded but not included in analysis time and in computing CASes per second.
issueID:UIMA-1626
type:Bug
changed files:
texts:JmsOutputChannel.sendReply(Throwable t, ...) fails if exception is not serializeable
One of the AEs calls a webservice to retrieve informations needed for analysis, in case anerroroccurs UIMA-AS prints out a strange exception to the console.If sendReply is called and a Throwable is passed whichis not serializeable then sending fails, and another exceptionis thrown which is wrapped and re-thrown as AsynchAEException.At the beginning of the sendReply method it should be possible to checkif a Throwable is serializebale, and in the case it is not, the cause (maybe plus stack trace)could be send like its done  for AsynchAEException (line 986).As part of this issue it should also be investigated why the stack trace gets so longafter a while. The file to which console message are redirect to grew up to 7.2GB.Here is the stack trace from the console:org.apache.uima.aae.error.AsynchAEException: java.lang.RuntimeException: com.sun.xml.internal.messaging.saaj.soap.ver1_1.SOAPPart1_1Impl   at org.apache.uima.adapter.jms.activemq.JmsOutputChannel.sendReply(JmsOutputChannel.java:1038)   at org.apache.uima.aae.controller.AggregateAnalysisEngineController_impl.sendReplyWithException(AggregateAnalysisEngineController_impl.java:1763)   at org.apache.uima.aae.controller.AggregateAnalysisEngineController_impl.sendReplyToRemoteClient(AggregateAnalysisEngineController_impl.java:1825)   at org.apache.uima.aae.controller.AggregateAnalysisEngineController_impl.replyToClient(AggregateAnalysisEngineController_impl.java:1943)   at org.apache.uima.aae.controller.AggregateAnalysisEngineController_impl.finalStep(AggregateAnalysisEngineController_impl.java:1567)   at org.apache.uima.aae.controller.AggregateAnalysisEngineController_impl.abortProcessingCas(AggregateAnalysisEngineController_impl.java:971)   at org.apache.uima.aae.controller.AggregateAnalysisEngineController_impl.process(AggregateAnalysisEngineController_impl.java:1010)   at org.apache.uima.aae.error.handler.ProcessCasErrorHandler.handleError(ProcessCasErrorHandler.java:521)   at org.apache.uima.aae.error.ErrorHandlerChain.handle(ErrorHandlerChain.java:57)   at org.apache.uima.aae.controller.BaseAnalysisEngineController.handleError(BaseAnalysisEngineController.java:1242)   at org.apache.uima.aae.controller.AggregateAnalysisEngineController_impl.finalStep(AggregateAnalysisEngineController_impl.java:1651)   at org.apache.uima.aae.controller.AggregateAnalysisEngineController_impl.abortProcessingCas(AggregateAnalysisEngineController_impl.java:971)   at org.apache.uima.aae.controller.AggregateAnalysisEngineController_impl.process(AggregateAnalysisEngineController_impl.java:1010)   at org.apache.uima.aae.error.handler.ProcessCasErrorHandler.handleError(ProcessCasErrorHandler.java:521)   at org.apache.uima.aae.error.ErrorHandlerChain.handle(ErrorHandlerChain.java:57)   at org.apache.uima.aae.controller.BaseAnalysisEngineController.handleError(BaseAnalysisEngineController.java:1242)   at org.apache.uima.aae.controller.AggregateAnalysisEngineController_impl.finalStep(AggregateAnalysisEngineController_impl.java:1651)   at org.apache.uima.aae.controller.AggregateAnalysisEngineController_impl.abortProcessingCas(AggregateAnalysisEngineController_impl.java:971)   at org.apache.uima.aae.controller.AggregateAnalysisEngineController_impl.process(AggregateAnalysisEngineController_impl.java:1010)   at org.apache.uima.aae.error.handler.ProcessCasErrorHandler.handleError(ProcessCasErrorHandler.java:521)   at org.apache.uima.aae.error.ErrorHandlerChain.handle(ErrorHandlerChain.java:57)   at org.apache.uima.aae.controller.BaseAnalysisEngineController.handleError(BaseAnalysisEngineController.java:1242)   at org.apache.uima.aae.controller.AggregateAnalysisEngineController_impl.finalStep(AggregateAnalysisEngineController_impl.java:1651)   at org.apache.uima.aae.controller.AggregateAnalysisEngineController_impl.abortProcessingCas(AggregateAnalysisEngineController_impl.java:971)   at org.apache.uima.aae.controller.AggregateAnalysisEngineController_impl.process(AggregateAnalysisEngineController_impl.java:1010)   at org.apache.uima.aae.error.handler.ProcessCasErrorHandler.handleError(ProcessCasErrorHandler.java:521)   at org.apache.uima.aae.error.ErrorHandlerChain.handle(ErrorHandlerChain.java:57)   at org.apache.uima.aae.controller.BaseAnalysisEngineController.handleError(BaseAnalysisEngineController.java:1242)   at org.apache.uima.aae.controller.AggregateAnalysisEngineController_impl.finalStep(AggregateAnalysisEngineController_impl.java:1651)   at org.apache.uima.aae.controller.AggregateAnalysisEngineController_impl.abortProcessingCas(AggregateAnalysisEngineController_impl.java:971)   at org.apache.uima.aae.controller.AggregateAnalysisEngineController_impl.process(AggregateAnalysisEngineController_impl.java:1010)   at org.apache.uima.aae.error.handler.ProcessCasErrorHandler.handleError(ProcessCasErrorHandler.java:521)   at org.apache.uima.aae.error.ErrorHandlerChain.handle(ErrorHandlerChain.java:57)   at org.apache.uima.aae.controller.BaseAnalysisEngineController.handleError(BaseAnalysisEngineController.java:1242)   at org.apache.uima.aae.controller.AggregateAnalysisEngineController_impl.finalStep(AggregateAnalysisEngineController_impl.java:1651)   at org.apache.uima.aae.controller.AggregateAnalysisEngineController_impl.abortProcessingCas(AggregateAnalysisEngineController_impl.java:971)   at org.apache.uima.aae.controller.AggregateAnalysisEngineController_impl.process(AggregateAnalysisEngineController_impl.java:1010)   at org.apache.uima.aae.error.handler.ProcessCasErrorHandler.handleError(ProcessCasErrorHandler.java:521)   at org.apache.uima.aae.error.ErrorHandlerChain.handle(ErrorHandlerChain.java:57)   at org.apache.uima.aae.controller.BaseAnalysisEngineController.handleError(BaseAnalysisEngineController.java:1242)   at org.apache.uima.aae.controller.AggregateAnalysisEngineController_impl.finalStep(AggregateAnalysisEngineController_impl.java:1651)   at org.apache.uima.aae.controller.AggregateAnalysisEngineController_impl.abortProcessingCas(AggregateAnalysisEngineController_impl.java:971)   at org.apache.uima.aae.controller.AggregateAnalysisEngineController_impl.process(AggregateAnalysisEngineController_impl.java:1010)   at org.apache.uima.aae.error.handler.ProcessCasErrorHandler.handleError(ProcessCasErrorHandler.java:521)   at org.apache.uima.aae.error.ErrorHandlerChain.handle(ErrorHandlerChain.java:57)   at org.apache.uima.aae.controller.BaseAnalysisEngineController.handleError(BaseAnalysisEngineController.java:1242)   at org.apache.uima.aae.controller.AggregateAnalysisEngineController_impl.finalStep(AggregateAnalysisEngineController_impl.java:1651)   at org.apache.uima.aae.controller.AggregateAnalysisEngineController_impl.abortProcessingCas(AggregateAnalysisEngineController_impl.java:971)   at org.apache.uima.aae.controller.AggregateAnalysisEngineController_impl.process(AggregateAnalysisEngineController_impl.java:1010)   at org.apache.uima.aae.error.handler.ProcessCasErrorHandler.handleError(ProcessCasErrorHandler.java:521)   at org.apache.uima.aae.error.ErrorHandlerChain.handle(ErrorHandlerChain.java:57)   at org.apache.uima.aae.controller.BaseAnalysisEngineController.handleError(BaseAnalysisEngineController.java:1242)   at org.apache.uima.aae.controller.AggregateAnalysisEngineController_impl.finalStep(AggregateAnalysisEngineController_impl.java:1651)   at org.apache.uima.aae.controller.AggregateAnalysisEngineController_impl.abortProcessingCas(AggregateAnalysisEngineController_impl.java:971)   at org.apache.uima.aae.controller.AggregateAnalysisEngineController_impl.process(AggregateAnalysisEngineController_impl.java:1010)   at org.apache.uima.aae.error.handler.ProcessCasErrorHandler.handleError(ProcessCasErrorHandler.java:521)   at org.apache.uima.aae.error.ErrorHandlerChain.handle(ErrorHandlerChain.java:57)   at org.apache.uima.aae.controller.BaseAnalysisEngineController.handleError(BaseAnalysisEngineController.java:1242)   at org.apache.uima.aae.controller.AggregateAnalysisEngineController_impl.finalStep(AggregateAnalysisEngineController_impl.java:1651)   at org.apache.uima.aae.controller.AggregateAnalysisEngineController_impl.abortProcessingCas(AggregateAnalysisEngineController_impl.java:971)   at org.apache.uima.aae.controller.AggregateAnalysisEngineController_impl.process(AggregateAnalysisEngineController_impl.java:1010)   at org.apache.uima.aae.error.handler.ProcessCasErrorHandler.handleError(ProcessCasErrorHandler.java:521)   at org.apache.uima.aae.error.ErrorHandlerChain.handle(ErrorHandlerChain.java:57)   at org.apache.uima.aae.controller.BaseAnalysisEngineController.handleError(BaseAnalysisEngineController.java:1242)   at org.apache.uima.aae.controller.AggregateAnalysisEngineController_impl.finalStep(AggregateAnalysisEngineController_impl.java:1651)   at org.apache.uima.aae.controller.AggregateAnalysisEngineController_impl.abortProcessingCas(AggregateAnalysisEngineController_impl.java:971)   at org.apache.uima.aae.controller.AggregateAnalysisEngineController_impl.process(AggregateAnalysisEngineController_impl.java:1010)   at org.apache.uima.aae.error.handler.ProcessCasErrorHandler.handleError(ProcessCasErrorHandler.java:521)   at org.apache.uima.aae.error.ErrorHandlerChain.handle(ErrorHandlerChain.java:57)   at org.apache.uima.aae.controller.BaseAnalysisEngineController.handleError(BaseAnalysisEngineController.java:1242)   at org.apache.uima.aae.controller.AggregateAnalysisEngineController_impl.finalStep(AggregateAnalysisEngineController_impl.java:1651)   at org.apache.uima.aae.controller.AggregateAnalysisEngineController_impl.abortProcessingCas(AggregateAnalysisEngineController_impl.java:971)   at org.apache.uima.aae.controller.AggregateAnalysisEngineController_impl.process(AggregateAnalysisEngineController_impl.java:1010)   at org.apache.uima.aae.error.handler.ProcessCasErrorHandler.handleError(ProcessCasErrorHandler.java:521)   at org.apache.uima.aae.error.ErrorHandlerChain.handle(ErrorHandlerChain.java:57)   at org.apache.uima.aae.controller.BaseAnalysisEngineController.handleError(BaseAnalysisEngineController.java:1242)   at org.apache.uima.aae.controller.AggregateAnalysisEngineController_impl.finalStep(AggregateAnalysisEngineController_impl.java:1651)   at org.apache.uima.aae.controller.AggregateAnalysisEngineController_impl.abortProcessingCas(AggregateAnalysisEngineController_impl.java:971)   at org.apache.uima.aae.controller.AggregateAnalysisEngineController_impl.process(AggregateAnalysisEngineController_impl.java:1010)   at org.apache.uima.aae.error.handler.ProcessCasErrorHandler.handleError(ProcessCasErrorHandler.java:521)   at org.apache.uima.aae.error.ErrorHandlerChain.handle(ErrorHandlerChain.java:57)   at org.apache.uima.aae.controller.BaseAnalysisEngineController.handleError(BaseAnalysisEngineController.java:1242)   at org.apache.uima.aae.controller.AggregateAnalysisEngineController_impl.finalStep(AggregateAnalysisEngineController_impl.java:1651)   at org.apache.uima.aae.controller.AggregateAnalysisEngineController_impl.abortProcessingCas(AggregateAnalysisEngineController_impl.java:971)   at org.apache.uima.aae.controller.AggregateAnalysisEngineController_impl.process(AggregateAnalysisEngineController_impl.java:1010)   at org.apache.uima.aae.error.handler.ProcessCasErrorHandler.handleError(ProcessCasErrorHandler.java:521)   at org.apache.uima.aae.error.ErrorHandlerChain.handle(ErrorHandlerChain.java:57)   at org.apache.uima.aae.controller.BaseAnalysisEngineController.handleError(BaseAnalysisEngineController.java:1242)   at org.apache.uima.aae.controller.AggregateAnalysisEngineController_impl.finalStep(AggregateAnalysisEngineController_impl.java:1651)   at org.apache.uima.aae.controller.AggregateAnalysisEngineController_impl.abortProcessingCas(AggregateAnalysisEngineController_impl.java:971)   at org.apache.uima.aae.controller.AggregateAnalysisEngineController_impl.process(AggregateAnalysisEngineController_impl.java:1010)   at org.apache.uima.aae.error.handler.ProcessCasErrorHandler.handleError(ProcessCasErrorHandler.java:521)   at org.apache.uima.aae.error.ErrorHandlerChain.handle(ErrorHandlerChain.java:57)   at org.apache.uima.aae.controller.BaseAnalysisEngineController.handleError(BaseAnalysisEngineController.java:1242)   at org.apache.uima.aae.controller.AggregateAnalysisEngineController_impl.finalStep(AggregateAnalysisEngineController_impl.java:1651)   at org.apache.uima.aae.controller.AggregateAnalysisEngineController_impl.abortProcessingCas(AggregateAnalysisEngineController_impl.java:971)   at org.apache.uima.aae.controller.AggregateAnalysisEngineController_impl.process(AggregateAnalysisEngineController_impl.java:1010)   at org.apache.uima.aae.error.handler.ProcessCasErrorHandler.handleError(ProcessCasErrorHandler.java:521)   at org.apache.uima.aae.error.ErrorHandlerChain.handle(ErrorHandlerChain.java:57)   at org.apache.uima.aae.controller.BaseAnalysisEngineController.handleError(BaseAnalysisEngineController.java:1242)   at org.apache.uima.aae.controller.AggregateAnalysisEngineController_impl.finalStep(AggregateAnalysisEngineController_impl.java:1651)   at org.apache.uima.aae.controller.AggregateAnalysisEngineController_impl.abortProcessingCas(AggregateAnalysisEngineController_impl.java:971)   at org.apache.uima.aae.controller.AggregateAnalysisEngineController_impl.process(AggregateAnalysisEngineController_impl.java:1010)   at org.apache.uima.aae.error.handler.ProcessCasErrorHandler.handleError(ProcessCasErrorHandler.java:521)   at org.apache.uima.aae.error.ErrorHandlerChain.handle(ErrorHandlerChain.java:57)   at org.apache.uima.aae.controller.BaseAnalysisEngineController.handleError(BaseAnalysisEngineController.java:1242)   at org.apache.uima.aae.controller.AggregateAnalysisEngineController_impl.finalStep(AggregateAnalysisEngineController_impl.java:1651)   at org.apache.uima.aae.controller.AggregateAnalysisEngineController_impl.abortProcessingCas(AggregateAnalysisEngineController_impl.java:971)   at org.apache.uima.aae.controller.AggregateAnalysisEngineController_impl.process(AggregateAnalysisEngineController_impl.java:1010)   at org.apache.uima.aae.error.handler.ProcessCasErrorHandler.handleError(ProcessCasErrorHandler.java:521)   at org.apache.uima.aae.error.ErrorHandlerChain.handle(ErrorHandlerChain.java:57)   at org.apache.uima.aae.controller.BaseAnalysisEngineController.handleError(BaseAnalysisEngineController.java:1242)   at org.apache.uima.aae.controller.AggregateAnalysisEngineController_impl.finalStep(AggregateAnalysisEngineController_impl.java:1651)   at org.apache.uima.aae.controller.AggregateAnalysisEngineController_impl.abortProcessingCas(AggregateAnalysisEngineController_impl.java:971)   at org.apache.uima.aae.controller.AggregateAnalysisEngineController_impl.process(AggregateAnalysisEngineController_impl.java:1010)   at org.apache.uima.aae.error.handler.ProcessCasErrorHandler.handleError(ProcessCasErrorHandler.java:521)   at org.apache.uima.aae.error.ErrorHandlerChain.handle(ErrorHandlerChain.java:57)   at org.apache.uima.aae.controller.BaseAnalysisEngineController.handleError(BaseAnalysisEngineController.java:1242)   at org.apache.uima.aae.controller.AggregateAnalysisEngineController_impl.finalStep(AggregateAnalysisEngineController_impl.java:1651)   at org.apache.uima.aae.controller.AggregateAnalysisEngineController_impl.abortProcessingCas(AggregateAnalysisEngineController_impl.java:971)   at org.apache.uima.aae.controller.AggregateAnalysisEngineController_impl.process(AggregateAnalysisEngineController_impl.java:1010)   at org.apache.uima.aae.error.handler.ProcessCasErrorHandler.handleError(ProcessCasErrorHandler.java:521)   at org.apache.uima.aae.error.ErrorHandlerChain.handle(ErrorHandlerChain.java:57)   at org.apache.uima.aae.controller.BaseAnalysisEngineController.handleError(BaseAnalysisEngineController.java:1242)   at org.apache.uima.aae.controller.AggregateAnalysisEngineController_impl.finalStep(AggregateAnalysisEngineController_impl.java:1651)   at org.apache.uima.aae.controller.AggregateAnalysisEngineController_impl.abortProcessingCas(AggregateAnalysisEngineController_impl.java:971)   at org.apache.uima.aae.controller.AggregateAnalysisEngineController_impl.process(AggregateAnalysisEngineController_impl.java:1010)   at org.apache.uima.aae.error.handler.ProcessCasErrorHandler.handleError(ProcessCasErrorHandler.java:521)   at org.apache.uima.aae.error.ErrorHandlerChain.handle(ErrorHandlerChain.java:57)   at org.apache.uima.aae.controller.BaseAnalysisEngineController.handleError(BaseAnalysisEngineController.java:1242)   at org.apache.uima.aae.controller.AggregateAnalysisEngineController_impl.finalStep(AggregateAnalysisEngineController_impl.java:1651)   at org.apache.uima.aae.controller.AggregateAnalysisEngineController_impl.abortProcessingCas(AggregateAnalysisEngineController_impl.java:971)   at org.apache.uima.aae.controller.AggregateAnalysisEngineController_impl.process(AggregateAnalysisEngineController_impl.java:1010)   at org.apache.uima.aae.error.handler.ProcessCasErrorHandler.handleError(ProcessCasErrorHandler.java:521)   at org.apache.uima.aae.error.ErrorHandlerChain.handle(ErrorHandlerChain.java:57)   at org.apache.uima.aae.controller.BaseAnalysisEngineController.handleError(BaseAnalysisEngineController.java:1242)   at org.apache.uima.aae.controller.AggregateAnalysisEngineController_impl.finalStep(AggregateAnalysisEngineController_impl.java:1651)   at org.apache.uima.aae.controller.AggregateAnalysisEngineController_impl.abortProcessingCas(AggregateAnalysisEngineController_impl.java:971)   at org.apache.uima.aae.controller.AggregateAnalysisEngineController_impl.process(AggregateAnalysisEngineController_impl.java:1010)   at org.apache.uima.aae.error.handler.ProcessCasErrorHandler.handleError(ProcessCasErrorHandler.java:521)   at org.apache.uima.aae.error.ErrorHandlerChain.handle(ErrorHandlerChain.java:57)   at org.apache.uima.aae.controller.BaseAnalysisEngineController.handleError(BaseAnalysisEngineController.java:1242)   at org.apache.uima.aae.controller.AggregateAnalysisEngineController_impl.finalStep(AggregateAnalysisEngineController_impl.java:1651)   at org.apache.uima.aae.controller.AggregateAnalysisEngineController_impl.abortProcessingCas(AggregateAnalysisEngineController_impl.java:971)   at org.apache.uima.aae.controller.AggregateAnalysisEngineController_impl.process(AggregateAnalysisEngineController_impl.java:1010)   at org.apache.uima.aae.error.handler.ProcessCasErrorHandler.handleError(ProcessCasErrorHandler.java:521)   at org.apache.uima.aae.error.ErrorHandlerChain.handle(ErrorHandlerChain.java:57)   at org.apache.uima.aae.controller.BaseAnalysisEngineController.handleError(BaseAnalysisEngineController.java:1242)   at org.apache.uima.aae.controller.AggregateAnalysisEngineController_impl.finalStep(AggregateAnalysisEngineController_impl.java:1651)   at org.apache.uima.aae.controller.AggregateAnalysisEngineController_impl.abortProcessingCas(AggregateAnalysisEngineController_impl.java:971)   at org.apache.uima.aae.controller.AggregateAnalysisEngineController_impl.process(AggregateAnalysisEngineController_impl.java:1010)   at org.apache.uima.aae.error.handler.ProcessCasErrorHandler.handleError(ProcessCasErrorHandler.java:521)   at org.apache.uima.aae.error.ErrorHandlerChain.handle(ErrorHandlerChain.java:57)   at org.apache.uima.aae.controller.BaseAnalysisEngineController.handleError(BaseAnalysisEngineController.java:1242)   at org.apache.uima.aae.controller.AggregateAnalysisEngineController_impl.finalStep(AggregateAnalysisEngineController_impl.java:1651)   at org.apache.uima.aae.controller.AggregateAnalysisEngineController_impl.abortProcessingCas(AggregateAnalysisEngineController_impl.java:971)   at org.apache.uima.aae.controller.AggregateAnalysisEngineController_impl.process(AggregateAnalysisEngineController_impl.java:1010)   at org.apache.uima.aae.error.handler.ProcessCasErrorHandler.handleError(ProcessCasErrorHandler.java:521)   at org.apache.uima.aae.error.ErrorHandlerChain.handle(ErrorHandlerChain.java:57)   at org.apache.uima.aae.controller.BaseAnalysisEngineController.handleError(BaseAnalysisEngineController.java:1242)   at org.apache.uima.aae.controller.AggregateAnalysisEngineController_impl.finalStep(AggregateAnalysisEngineController_impl.java:1651)   at org.apache.uima.aae.controller.AggregateAnalysisEngineController_impl.abortProcessingCas(AggregateAnalysisEngineController_impl.java:971)   at org.apache.uima.aae.controller.AggregateAnalysisEngineController_impl.process(AggregateAnalysisEngineController_impl.java:1010)   at org.apache.uima.aae.error.handler.ProcessCasErrorHandler.handleError(ProcessCasErrorHandler.java:521)   at org.apache.uima.aae.error.ErrorHandlerChain.handle(ErrorHandlerChain.java:57)   at org.apache.uima.aae.controller.BaseAnalysisEngineController.handleError(BaseAnalysisEngineController.java:1242)   at org.apache.uima.aae.controller.AggregateAnalysisEngineController_impl.finalStep(AggregateAnalysisEngineController_impl.java:1651)   at org.apache.uima.aae.controller.AggregateAnalysisEngineController_impl.abortProcessingCas(AggregateAnalysisEngineController_impl.java:971)   at org.apache.uima.aae.controller.AggregateAnalysisEngineController_impl.process(AggregateAnalysisEngineController_impl.java:1010)   at org.apache.uima.aae.error.handler.ProcessCasErrorHandler.handleError(ProcessCasErrorHandler.java:521)   at org.apache.uima.aae.error.ErrorHandlerChain.handle(ErrorHandlerChain.java:57)   at org.apache.uima.aae.controller.BaseAnalysisEngineController.handleError(BaseAnalysisEngineController.java:1242)   at org.apache.uima.aae.controller.AggregateAnalysisEngineController_impl.finalStep(AggregateAnalysisEngineController_impl.java:1651)   at org.apache.uima.aae.controller.AggregateAnalysisEngineController_impl.abortProcessingCas(AggregateAnalysisEngineController_impl.java:971)   at org.apache.uima.aae.controller.AggregateAnalysisEngineController_impl.process(AggregateAnalysisEngineController_impl.java:1010)   at org.apache.uima.aae.error.handler.ProcessCasErrorHandler.handleError(ProcessCasErrorHandler.java:521)   at org.apache.uima.aae.error.ErrorHandlerChain.handle(ErrorHandlerChain.java:57)   at org.apache.uima.aae.controller.BaseAnalysisEngineController.handleError(BaseAnalysisEngineController.java:1242)   at org.apache.uima.aae.controller.AggregateAnalysisEngineController_impl.finalStep(AggregateAnalysisEngineController_impl.java:1651)   at org.apache.uima.aae.controller.AggregateAnalysisEngineController_impl.abortProcessingCas(AggregateAnalysisEngineController_impl.java:971)   at org.apache.uima.aae.controller.AggregateAnalysisEngineController_impl.process(AggregateAnalysisEngineController_impl.java:1010)   at org.apache.uima.aae.error.handler.ProcessCasErrorHandler.handleError(ProcessCasErrorHandler.java:521)   at org.apache.uima.aae.error.ErrorHandlerChain.handle(ErrorHandlerChain.java:57)   at org.apache.uima.aae.controller.BaseAnalysisEngineController.handleError(BaseAnalysisEngineController.java:1242)   at org.apache.uima.aae.controller.AggregateAnalysisEngineController_impl.finalStep(AggregateAnalysisEngineController_impl.java:1651)   at org.apache.uima.aae.controller.AggregateAnalysisEngineController_impl.abortProcessingCas(AggregateAnalysisEngineController_impl.java:971)   at org.apache.uima.aae.controller.AggregateAnalysisEngineController_impl.process(AggregateAnalysisEngineController_impl.java:1010)   at org.apache.uima.aae.error.handler.ProcessCasErrorHandler.handleError(ProcessCasErrorHandler.java:521)   at org.apache.uima.aae.error.ErrorHandlerChain.handle(ErrorHandlerChain.java:57)   at org.apache.uima.aae.controller.BaseAnalysisEngineController.handleError(BaseAnalysisEngineController.java:1242)   at org.apache.uima.aae.controller.AggregateAnalysisEngineController_impl.finalStep(AggregateAnalysisEngineController_impl.java:1651)   at org.apache.uima.aae.controller.AggregateAnalysisEngineController_impl.abortProcessingCas(AggregateAnalysisEngineController_impl.java:971)   at org.apache.uima.aae.controller.AggregateAnalysisEngineController_impl.process(AggregateAnalysisEngineController_impl.java:1010)   at org.apache.uima.aae.error.handler.ProcessCasErrorHandler.handleError(ProcessCasErrorHandler.java:521)   at org.apache.uima.aae.error.ErrorHandlerChain.handle(ErrorHandlerChain.java:57)   at org.apache.uima.aae.controller.BaseAnalysisEngineController.handleError(BaseAnalysisEngineController.java:1242)   at org.apache.uima.aae.controller.AggregateAnalysisEngineController_impl.finalStep(AggregateAnalysisEngineController_impl.java:1651)   at org.apache.uima.aae.controller.AggregateAnalysisEngineController_impl.abortProcessingCas(AggregateAnalysisEngineController_impl.java:971)   at org.apache.uima.aae.controller.AggregateAnalysisEngineController_impl.process(AggregateAnalysisEngineController_impl.java:1010)   at org.apache.uima.aae.error.handler.ProcessCasErrorHandler.handleError(ProcessCasErrorHandler.java:521)   at org.apache.uima.aae.error.ErrorHandlerChain.handle(ErrorHandlerChain.java:57)   at org.apache.uima.aae.controller.BaseAnalysisEngineController.handleError(BaseAnalysisEngineController.java:1242)   at org.apache.uima.aae.controller.AggregateAnalysisEngineController_impl.finalStep(AggregateAnalysisEngineController_impl.java:1651)   at org.apache.uima.aae.controller.AggregateAnalysisEngineController_impl.abortProcessingCas(AggregateAnalysisEngineController_impl.java:971)   at org.apache.uima.aae.controller.AggregateAnalysisEngineController_impl.process(AggregateAnalysisEngineController_impl.java:1010)   at org.apache.uima.aae.error.handler.ProcessCasErrorHandler.handleError(ProcessCasErrorHandler.java:521)   at org.apache.uima.aae.error.ErrorHandlerChain.handle(ErrorHandlerChain.java:57)   at org.apache.uima.aae.controller.BaseAnalysisEngineController.handleError(BaseAnalysisEngineController.java:1242)   at org.apache.uima.aae.controller.AggregateAnalysisEngineController_impl.finalStep(AggregateAnalysisEngineController_impl.java:1651)   at org.apache.uima.aae.controller.AggregateAnalysisEngineController_impl.abortProcessingCas(AggregateAnalysisEngineController_impl.java:971)   at org.apache.uima.aae.controller.AggregateAnalysisEngineController_impl.process(AggregateAnalysisEngineController_impl.java:1010)   at org.apache.uima.aae.error.handler.ProcessCasErrorHandler.handleError(ProcessCasErrorHandler.java:521)   at org.apache.uima.aae.error.ErrorHandlerChain.handle(ErrorHandlerChain.java:57)   at org.apache.uima.aae.controller.BaseAnalysisEngineController.handleError(BaseAnalysisEngineController.java:1242)   at org.apache.uima.aae.controller.AggregateAnalysisEngineController_impl.finalStep(AggregateAnalysisEngineController_impl.java:1651)   at org.apache.uima.aae.controller.AggregateAnalysisEngineController_impl.abortProcessingCas(AggregateAnalysisEngineController_impl.java:971)   at org.apache.uima.aae.controller.AggregateAnalysisEngineController_impl.process(AggregateAnalysisEngineController_impl.java:1010)   at org.apache.uima.aae.error.handler.ProcessCasErrorHandler.handleError(ProcessCasErrorHandler.java:521)   at org.apache.uima.aae.error.ErrorHandlerChain.handle(ErrorHandlerChain.java:57)   at org.apache.uima.aae.controller.BaseAnalysisEngineController.handleError(BaseAnalysisEngineController.java:1242)   at org.apache.uima.aae.controller.AggregateAnalysisEngineController_impl.finalStep(AggregateAnalysisEngineController_impl.java:1651)   at org.apache.uima.aae.controller.AggregateAnalysisEngineController_impl.abortProcessingCas(AggregateAnalysisEngineController_impl.java:971)   at org.apache.uima.aae.controller.AggregateAnalysisEngineController_impl.process(AggregateAnalysisEngineController_impl.java:1010)   at org.apache.uima.aae.error.handler.ProcessCasErrorHandler.handleError(ProcessCasErrorHandler.java:521)   at org.apache.uima.aae.error.ErrorHandlerChain.handle(ErrorHandlerChain.java:57)   at org.apache.uima.aae.controller.BaseAnalysisEngineController.handleError(BaseAnalysisEngineController.java:1242)   at org.apache.uima.aae.controller.AggregateAnalysisEngineController_impl.finalStep(AggregateAnalysisEngineController_impl.java:1651)   at org.apache.uima.aae.controller.AggregateAnalysisEngineController_impl.abortProcessingCas(AggregateAnalysisEngineController_impl.java:971)   at org.apache.uima.aae.controller.AggregateAnalysisEngineController_impl.process(AggregateAnalysisEngineController_impl.java:1010)   at org.apache.uima.aae.error.handler.ProcessCasErrorHandler.handleError(ProcessCasErrorHandler.java:521)   at org.apache.uima.aae.error.ErrorHandlerChain.handle(ErrorHandlerChain.java:57)   at org.apache.uima.aae.controller.BaseAnalysisEngineController.handleError(BaseAnalysisEngineController.java:1242)   at org.apache.uima.aae.controller.AggregateAnalysisEngineController_impl.finalStep(AggregateAnalysisEngineController_impl.java:1651)   at org.apache.uima.aae.controller.AggregateAnalysisEngineController_impl.abortProcessingCas(AggregateAnalysisEngineController_impl.java:971)   at org.apache.uima.aae.controller.AggregateAnalysisEngineController_impl.process(AggregateAnalysisEngineController_impl.java:1010)   at org.apache.uima.aae.error.handler.ProcessCasErrorHandler.handleError(ProcessCasErrorHandler.java:521)   at org.apache.uima.aae.error.ErrorHandlerChain.handle(ErrorHandlerChain.java:57)   at org.apache.uima.aae.controller.BaseAnalysisEngineController.handleError(BaseAnalysisEngineController.java:1242)   at org.apache.uima.aae.controller.AggregateAnalysisEngineController_impl.finalStep(AggregateAnalysisEngineController_impl.java:1651)   at org.apache.uima.aae.controller.AggregateAnalysisEngineController_impl.abortProcessingCas(AggregateAnalysisEngineController_impl.java:971)   at org.apache.uima.aae.controller.AggregateAnalysisEngineController_impl.process(AggregateAnalysisEngineController_impl.java:1010)   at org.apache.uima.aae.error.handler.ProcessCasErrorHandler.handleError(ProcessCasErrorHandler.java:521)   at org.apache.uima.aae.error.ErrorHandlerChain.handle(ErrorHandlerChain.java:57)   at org.apache.uima.aae.controller.BaseAnalysisEngineController.handleError(BaseAnalysisEngineController.java:1242)   at org.apache.uima.aae.controller.AggregateAnalysisEngineController_impl.finalStep(AggregateAnalysisEngineController_impl.java:1651)   at org.apache.uima.aae.controller.AggregateAnalysisEngineController_impl.abortProcessingCas(AggregateAnalysisEngineController_impl.java:971)   at org.apache.uima.aae.controller.AggregateAnalysisEngineController_impl.process(AggregateAnalysisEngineController_impl.java:1010)   at org.apache.uima.aae.error.handler.ProcessCasErrorHandler.handleError(ProcessCasErrorHandler.java:521)   at org.apache.uima.aae.error.ErrorHandlerChain.handle(ErrorHandlerChain.java:57)   at org.apache.uima.aae.controller.BaseAnalysisEngineController.handleError(BaseAnalysisEngineController.java:1242)   at org.apache.uima.aae.controller.AggregateAnalysisEngineController_impl.finalStep(AggregateAnalysisEngineController_impl.java:1651)   at org.apache.uima.aae.controller.AggregateAnalysisEngineController_impl.abortProcessingCas(AggregateAnalysisEngineController_impl.java:971)   at org.apache.uima.aae.controller.AggregateAnalysisEngineController_impl.process(AggregateAnalysisEngineController_impl.java:1010)   at org.apache.uima.aae.error.handler.ProcessCasErrorHandler.handleError(ProcessCasErrorHandler.java:521)   at org.apache.uima.aae.error.ErrorHandlerChain.handle(ErrorHandlerChain.java:57)   at org.apache.uima.aae.controller.BaseAnalysisEngineController.handleError(BaseAnalysisEngineController.java:1242)   at org.apache.uima.aae.controller.AggregateAnalysisEngineController_impl.finalStep(AggregateAnalysisEngineController_impl.java:1651)   at org.apache.uima.aae.controller.AggregateAnalysisEngineController_impl.abortProcessingCas(AggregateAnalysisEngineController_impl.java:971)   at org.apache.uima.aae.controller.AggregateAnalysisEngineController_impl.process(AggregateAnalysisEngineController_impl.java:1010)   at org.apache.uima.aae.error.handler.ProcessCasErrorHandler.handleError(ProcessCasErrorHandler.java:521)   at org.apache.uima.aae.error.ErrorHandlerChain.handle(ErrorHandlerChain.java:57)   at org.apache.uima.aae.controller.BaseAnalysisEngineController.handleError(BaseAnalysisEngineController.java:1242)   at org.apache.uima.aae.controller.AggregateAnalysisEngineController_impl.finalStep(AggregateAnalysisEngineController_impl.java:1651)   at org.apache.uima.aae.controller.AggregateAnalysisEngineController_impl.abortProcessingCas(AggregateAnalysisEngineController_impl.java:971)   at org.apache.uima.aae.controller.AggregateAnalysisEngineController_impl.process(AggregateAnalysisEngineController_impl.java:1010)   at org.apache.uima.aae.error.handler.ProcessCasErrorHandler.handleError(ProcessCasErrorHandler.java:521)   at org.apache.uima.aae.error.ErrorHandlerChain.handle(ErrorHandlerChain.java:57)   at org.apache.uima.aae.controller.BaseAnalysisEngineController.handleError(BaseAnalysisEngineController.java:1242)   at org.apache.uima.aae.controller.AggregateAnalysisEngineController_impl.finalStep(AggregateAnalysisEngineController_impl.java:1651)   at org.apache.uima.aae.controller.AggregateAnalysisEngineController_impl.abortProcessingCas(AggregateAnalysisEngineController_impl.java:971)   at org.apache.uima.aae.controller.AggregateAnalysisEngineController_impl.process(AggregateAnalysisEngineController_impl.java:1010)   at org.apache.uima.aae.error.handler.ProcessCasErrorHandler.handleError(ProcessCasErrorHandler.java:521)   at org.apache.uima.aae.error.ErrorHandlerChain.handle(ErrorHandlerChain.java:57)   at org.apache.uima.aae.controller.BaseAnalysisEngineController.handleError(BaseAnalysisEngineController.java:1242)   at org.apache.uima.aae.controller.AggregateAnalysisEngineController_impl.finalStep(AggregateAnalysisEngineController_impl.java:1651)   at org.apache.uima.aae.controller.AggregateAnalysisEngineController_impl.abortProcessingCas(AggregateAnalysisEngineController_impl.java:971)   at org.apache.uima.aae.controller.AggregateAnalysisEngineController_impl.process(AggregateAnalysisEngineController_impl.java:1010)   at org.apache.uima.aae.error.handler.ProcessCasErrorHandler.handleError(ProcessCasErrorHandler.java:521)   at org.apache.uima.aae.error.ErrorHandlerChain.handle(ErrorHandlerChain.java:57)   at org.apache.uima.aae.controller.BaseAnalysisEngineController.handleError(BaseAnalysisEngineController.java:1242)   at org.apache.uima.aae.controller.AggregateAnalysisEngineController_impl.finalStep(AggregateAnalysisEngineController_impl.java:1651)   at org.apache.uima.aae.controller.AggregateAnalysisEngineController_impl.abortProcessingCas(AggregateAnalysisEngineController_impl.java:971)   at org.apache.uima.aae.controller.AggregateAnalysisEngineController_impl.process(AggregateAnalysisEngineController_impl.java:1010)   at org.apache.uima.aae.error.handler.ProcessCasErrorHandler.handleError(ProcessCasErrorHandler.java:521)   at org.apache.uima.aae.error.ErrorHandlerChain.handle(ErrorHandlerChain.java:57)   at org.apache.uima.aae.controller.BaseAnalysisEngineController.handleError(BaseAnalysisEngineController.java:1242)   at org.apache.uima.aae.controller.AggregateAnalysisEngineController_impl.finalStep(AggregateAnalysisEngineController_impl.java:1651)   at org.apache.uima.aae.controller.AggregateAnalysisEngineController_impl.abortProcessingCas(AggregateAnalysisEngineController_impl.java:971)   at org.apache.uima.aae.controller.AggregateAnalysisEngineController_impl.process(AggregateAnalysisEngineController_impl.java:1010)   at org.apache.uima.aae.error.handler.ProcessCasErrorHandler.handleError(ProcessCasErrorHandler.java:521)   at org.apache.uima.aae.error.ErrorHandlerChain.handle(ErrorHandlerChain.java:57)   at org.apache.uima.aae.controller.BaseAnalysisEngineController.handleError(BaseAnalysisEngineController.java:1242)   at org.apache.uima.aae.controller.AggregateAnalysisEngineController_impl.finalStep(AggregateAnalysisEngineController_impl.java:1651)   at org.apache.uima.aae.controller.AggregateAnalysisEngineController_impl.abortProcessingCas(AggregateAnalysisEngineController_impl.java:971)   at org.apache.uima.aae.controller.AggregateAnalysisEngineController_impl.process(AggregateAnalysisEngineController_impl.java:1010)   at org.apache.uima.aae.error.handler.ProcessCasErrorHandler.handleError(ProcessCasErrorHandler.java:521)   at org.apache.uima.aae.error.ErrorHandlerChain.handle(ErrorHandlerChain.java:57)   at org.apache.uima.aae.controller.BaseAnalysisEngineController.handleError(BaseAnalysisEngineController.java:1242)   at org.apache.uima.aae.controller.AggregateAnalysisEngineController_impl.finalStep(AggregateAnalysisEngineController_impl.java:1651)   at org.apache.uima.aae.controller.AggregateAnalysisEngineController_impl.abortProcessingCas(AggregateAnalysisEngineController_impl.java:971)   at org.apache.uima.aae.controller.AggregateAnalysisEngineController_impl.process(AggregateAnalysisEngineController_impl.java:1010)   at org.apache.uima.aae.error.handler.ProcessCasErrorHandler.handleError(ProcessCasErrorHandler.java:521)   at org.apache.uima.aae.error.ErrorHandlerChain.handle(ErrorHandlerChain.java:57)   at org.apache.uima.aae.controller.BaseAnalysisEngineController.handleError(BaseAnalysisEngineController.java:1242)   at org.apache.uima.aae.controller.AggregateAnalysisEngineController_impl.finalStep(AggregateAnalysisEngineController_impl.java:1651)   at org.apache.uima.aae.controller.AggregateAnalysisEngineController_impl.abortProcessingCas(AggregateAnalysisEngineController_impl.java:971)   at org.apache.uima.aae.controller.AggregateAnalysisEngineController_impl.process(AggregateAnalysisEngineController_impl.java:1010)   at org.apache.uima.aae.error.handler.ProcessCasErrorHandler.handleError(ProcessCasErrorHandler.java:521)   at org.apache.uima.aae.error.ErrorHandlerChain.handle(ErrorHandlerChain.java:57)   at org.apache.uima.aae.controller.BaseAnalysisEngineController.handleError(BaseAnalysisEngineController.java:1242)   at org.apache.uima.aae.controller.AggregateAnalysisEngineController_impl.finalStep(AggregateAnalysisEngineController_impl.java:1651)   at org.apache.uima.aae.controller.AggregateAnalysisEngineController_impl.abortProcessingCas(AggregateAnalysisEngineController_impl.java:971)   at org.apache.uima.aae.controller.AggregateAnalysisEngineController_impl.process(AggregateAnalysisEngineController_impl.java:1010)   at org.apache.uima.aae.error.handler.ProcessCasErrorHandler.handleError(ProcessCasErrorHandler.java:521)   at org.apache.uima.aae.error.ErrorHandlerChain.handle(ErrorHandlerChain.java:57)   at org.apache.uima.aae.controller.BaseAnalysisEngineController.handleError(BaseAnalysisEngineController.java:1242)   at org.apache.uima.aae.controller.AggregateAnalysisEngineController_impl.finalStep(AggregateAnalysisEngineController_impl.java:1651)   at org.apache.uima.aae.controller.AggregateAnalysisEngineController_impl.abortProcessingCas(AggregateAnalysisEngineController_impl.java:971)   at org.apache.uima.aae.controller.AggregateAnalysisEngineController_impl.process(AggregateAnalysisEngineController_impl.java:1010)   at org.apache.uima.aae.error.handler.ProcessCasErrorHandler.handleError(ProcessCasErrorHandler.java:521)   at org.apache.uima.aae.error.ErrorHandlerChain.handle(ErrorHandlerChain.java:57)   at org.apache.uima.aae.controller.BaseAnalysisEngineController.handleError(BaseAnalysisEngineController.java:1242)   at org.apache.uima.aae.controller.AggregateAnalysisEngineController_impl.finalStep(AggregateAnalysisEngineController_impl.java:1651)   at org.apache.uima.aae.controller.AggregateAnalysisEngineController_impl.abortProcessingCas(AggregateAnalysisEngineController_impl.java:971)   at org.apache.uima.aae.controller.AggregateAnalysisEngineController_impl.process(AggregateAnalysisEngineController_impl.java:1010)   at org.apache.uima.aae.error.handler.ProcessCasErrorHandler.handleError(ProcessCasErrorHandler.java:521)   at org.apache.uima.aae.error.ErrorHandlerChain.handle(ErrorHandlerChain.java:57)   at org.apache.uima.aae.controller.BaseAnalysisEngineController.handleError(BaseAnalysisEngineController.java:1242)   at org.apache.uima.aae.controller.AggregateAnalysisEngineController_impl.finalStep(AggregateAnalysisEngineController_impl.java:1651)   at org.apache.uima.aae.controller.AggregateAnalysisEngineController_impl.abortProcessingCas(AggregateAnalysisEngineController_impl.java:971)   at org.apache.uima.aae.controller.AggregateAnalysisEngineController_impl.process(AggregateAnalysisEngineController_impl.java:1010)   at org.apache.uima.aae.error.handler.ProcessCasErrorHandler.handleError(ProcessCasErrorHandler.java:521)   at org.apache.uima.aae.error.ErrorHandlerChain.handle(ErrorHandlerChain.java:57)   at org.apache.uima.aae.controller.BaseAnalysisEngineController.handleError(BaseAnalysisEngineController.java:1242)   at org.apache.uima.aae.controller.AggregateAnalysisEngineController_impl.finalStep(AggregateAnalysisEngineController_impl.java:1651)   at org.apache.uima.aae.controller.AggregateAnalysisEngineController_impl.abortProcessingCas(AggregateAnalysisEngineController_impl.java:971)   at org.apache.uima.aae.controller.AggregateAnalysisEngineController_impl.process(AggregateAnalysisEngineController_impl.java:1010)   at org.apache.uima.aae.error.handler.ProcessCasErrorHandler.handleError(ProcessCasErrorHandler.java:521)   at org.apache.uima.aae.error.ErrorHandlerChain.handle(ErrorHandlerChain.java:57)   at org.apache.uima.aae.controller.BaseAnalysisEngineController.handleError(BaseAnalysisEngineController.java:1242)   at org.apache.uima.aae.controller.AggregateAnalysisEngineController_impl.finalStep(AggregateAnalysisEngineController_impl.java:1651)   at org.apache.uima.aae.controller.AggregateAnalysisEngineController_impl.abortProcessingCas(AggregateAnalysisEngineController_impl.java:971)   at org.apache.uima.aae.controller.AggregateAnalysisEngineController_impl.process(AggregateAnalysisEngineController_impl.java:1010)   at org.apache.uima.aae.error.handler.ProcessCasErrorHandler.handleError(ProcessCasErrorHandler.java:521)   at org.apache.uima.aae.error.ErrorHandlerChain.handle(ErrorHandlerChain.java:57)   at org.apache.uima.aae.controller.BaseAnalysisEngineController.handleError(BaseAnalysisEngineController.java:1242)   at org.apache.uima.aae.controller.AggregateAnalysisEngineController_impl.finalStep(AggregateAnalysisEngineController_impl.java:1651)   at org.apache.uima.aae.controller.AggregateAnalysisEngineController_impl.abortProcessingCas(AggregateAnalysisEngineController_impl.java:971)   at org.apache.uima.aae.controller.AggregateAnalysisEngineController_impl.process(AggregateAnalysisEngineController_impl.java:1010)   at org.apache.uima.aae.error.handler.ProcessCasErrorHandler.handleError(ProcessCasErrorHandler.java:521)   at org.apache.uima.aae.error.ErrorHandlerChain.handle(ErrorHandlerChain.java:57)   at org.apache.uima.aae.controller.BaseAnalysisEngineController.handleError(BaseAnalysisEngineController.java:1242)   at org.apache.uima.aae.controller.AggregateAnalysisEngineController_impl.finalStep(AggregateAnalysisEngineController_impl.java:1651)   at org.apache.uima.aae.controller.AggregateAnalysisEngineController_impl.abortProcessingCas(AggregateAnalysisEngineController_impl.java:971)   at org.apache.uima.aae.controller.AggregateAnalysisEngineController_impl.process(AggregateAnalysisEngineController_impl.java:1010)   at org.apache.uima.aae.error.handler.ProcessCasErrorHandler.handleError(ProcessCasErrorHandler.java:521)   at org.apache.uima.aae.error.ErrorHandlerChain.handle(ErrorHandlerChain.java:57)   at org.apache.uima.aae.controller.BaseAnalysisEngineController.handleError(BaseAnalysisEngineController.java:1242)   at org.apache.uima.aae.controller.AggregateAnalysisEngineController_impl.finalStep(AggregateAnalysisEngineController_impl.java:1651)   at org.apache.uima.aae.controller.AggregateAnalysisEngineController_impl.abortProcessingCas(AggregateAnalysisEngineController_impl.java:971)   at org.apache.uima.aae.controller.AggregateAnalysisEngineController_impl.process(AggregateAnalysisEngineController_impl.java:1010)   at org.apache.uima.aae.error.handler.ProcessCasErrorHandler.handleError(ProcessCasErrorHandler.java:521)   at org.apache.uima.aae.error.ErrorHandlerChain.handle(ErrorHandlerChain.java:57)   at org.apache.uima.aae.controller.BaseAnalysisEngineController.handleError(BaseAnalysisEngineController.java:1242)   at org.apache.uima.aae.controller.AggregateAnalysisEngineController_impl.finalStep(AggregateAnalysisEngineController_impl.java:1651)   at org.apache.uima.aae.controller.AggregateAnalysisEngineController_impl.abortProcessingCas(AggregateAnalysisEngineController_impl.java:971)   at org.apache.uima.aae.controller.AggregateAnalysisEngineController_impl.process(AggregateAnalysisEngineController_impl.java:1010)   at org.apache.uima.aae.error.handler.ProcessCasErrorHandler.handleError(ProcessCasErrorHandler.java:521)   at org.apache.uima.aae.error.ErrorHandlerChain.handle(ErrorHandlerChain.java:57)   at org.apache.uima.aae.controller.BaseAnalysisEngineController.handleError(BaseAnalysisEngineController.java:1242)   at org.apache.uima.aae.controller.AggregateAnalysisEngineController_impl.finalStep(AggregateAnalysisEngineController_impl.java:1651)   at org.apache.uima.aae.controller.AggregateAnalysisEngineController_impl.abortProcessingCas(AggregateAnalysisEngineController_impl.java:971)   at org.apache.uima.aae.controller.AggregateAnalysisEngineController_impl.process(AggregateAnalysisEngineController_impl.java:1010)   at org.apache.uima.aae.error.handler.ProcessCasErrorHandler.handleError(ProcessCasErrorHandler.java:521)   at org.apache.uima.aae.error.ErrorHandlerChain.handle(ErrorHandlerChain.java:57)   at org.apache.uima.aae.controller.BaseAnalysisEngineController.handleError(BaseAnalysisEngineController.java:1242)   at org.apache.uima.aae.controller.AggregateAnalysisEngineController_impl.finalStep(AggregateAnalysisEngineController_impl.java:1651)   at org.apache.uima.aae.controller.AggregateAnalysisEngineController_impl.abortProcessingCas(AggregateAnalysisEngineController_impl.java:971)   at org.apache.uima.aae.controller.AggregateAnalysisEngineController_impl.process(AggregateAnalysisEngineController_impl.java:1010)   at org.apache.uima.aae.error.handler.ProcessCasErrorHandler.handleError(ProcessCasErrorHandler.java:521)   at org.apache.uima.aae.error.ErrorHandlerChain.handle(ErrorHandlerChain.java:57)   at org.apache.uima.aae.controller.BaseAnalysisEngineController.handleError(BaseAnalysisEngineController.java:1242)   at org.apache.uima.aae.controller.AggregateAnalysisEngineController_impl.finalStep(AggregateAnalysisEngineController_impl.java:1651)   at org.apache.uima.aae.controller.AggregateAnalysisEngineController_impl.abortProcessingCas(AggregateAnalysisEngineController_impl.java:971)   at org.apache.uima.aae.controller.AggregateAnalysisEngineController_impl.process(AggregateAnalysisEngineController_impl.java:1010)   at org.apache.uima.aae.error.handler.ProcessCasErrorHandler.handleError(ProcessCasErrorHandler.java:521)   at org.apache.uima.aae.error.ErrorHandlerChain.handle(ErrorHandlerChain.java:57)   at org.apache.uima.aae.controller.BaseAnalysisEngineController.handleError(BaseAnalysisEngineController.java:1242)   at org.apache.uima.aae.controller.AggregateAnalysisEngineController_impl.finalStep(AggregateAnalysisEngineController_impl.java:1651)   at org.apache.uima.aae.controller.AggregateAnalysisEngineController_impl.abortProcessingCas(AggregateAnalysisEngineController_impl.java:971)   at org.apache.uima.aae.controller.AggregateAnalysisEngineController_impl.process(AggregateAnalysisEngineController_impl.java:1010)   at org.apache.uima.aae.error.handler.ProcessCasErrorHandler.handleError(ProcessCasErrorHandler.java:521)   at org.apache.uima.aae.error.ErrorHandlerChain.handle(ErrorHandlerChain.java:57)   at org.apache.uima.aae.controller.BaseAnalysisEngineController.handleError(BaseAnalysisEngineController.java:1242)   at org.apache.uima.aae.controller.AggregateAnalysisEngineController_impl.finalStep(AggregateAnalysisEngineController_impl.java:1651)   at org.apache.uima.aae.controller.AggregateAnalysisEngineController_impl.abortProcessingCas(AggregateAnalysisEngineController_impl.java:971)   at org.apache.uima.aae.controller.AggregateAnalysisEngineController_impl.process(AggregateAnalysisEngineController_impl.java:1010)   at org.apache.uima.aae.error.handler.ProcessCasErrorHandler.handleError(ProcessCasErrorHandler.java:521)   at org.apache.uima.aae.error.ErrorHandlerChain.handle(ErrorHandlerChain.java:57)   at org.apache.uima.aae.controller.BaseAnalysisEngineController.handleError(BaseAnalysisEngineController.java:1242)   at org.apache.uima.aae.controller.AggregateAnalysisEngineController_impl.finalStep(AggregateAnalysisEngineController_impl.java:1651)   at org.apache.uima.aae.controller.AggregateAnalysisEngineController_impl.abortProcessingCas(AggregateAnalysisEngineController_impl.java:971)   at org.apache.uima.aae.controller.AggregateAnalysisEngineController_impl.process(AggregateAnalysisEngineController_impl.java:1010)   at org.apache.uima.aae.error.handler.ProcessCasErrorHandler.handleError(ProcessCasErrorHandler.java:521)   at org.apache.uima.aae.error.ErrorHandlerChain.handle(ErrorHandlerChain.java:57)   at org.apache.uima.aae.controller.BaseAnalysisEngineController.handleError(BaseAnalysisEngineController.java:1242)   at org.apache.uima.aae.controller.AggregateAnalysisEngineController_impl.finalStep(AggregateAnalysisEngineController_impl.java:1651)   at org.apache.uima.aae.controller.AggregateAnalysisEngineController_impl.abortProcessingCas(AggregateAnalysisEngineController_impl.java:971)   at org.apache.uima.aae.controller.AggregateAnalysisEngineController_impl.process(AggregateAnalysisEngineController_impl.java:1010)   at org.apache.uima.aae.error.handler.ProcessCasErrorHandler.handleError(ProcessCasErrorHandler.java:521)   at org.apache.uima.aae.error.ErrorHandlerChain.handle(ErrorHandlerChain.java:57)   at org.apache.uima.aae.controller.BaseAnalysisEngineController.handleError(BaseAnalysisEngineController.java:1242)   at org.apache.uima.aae.controller.AggregateAnalysisEngineController_impl.finalStep(AggregateAnalysisEngineController_impl.java:1651)   at org.apache.uima.aae.controller.AggregateAnalysisEngineController_impl.abortProcessingCas(AggregateAnalysisEngineController_impl.java:971)   at org.apache.uima.aae.controller.AggregateAnalysisEngineController_impl.process(AggregateAnalysisEngineController_impl.java:1010)   at org.apache.uima.aae.error.handler.ProcessCasErrorHandler.handleError(ProcessCasErrorHandler.java:521)   at org.apache.uima.aae.error.ErrorHandlerChain.handle(ErrorHandlerChain.java:57)   at org.apache.uima.aae.controller.BaseAnalysisEngineController.handleError(BaseAnalysisEngineController.java:1242)   at org.apache.uima.aae.controller.AggregateAnalysisEngineController_impl.finalStep(AggregateAnalysisEngineController_impl.java:1651)   at org.apache.uima.aae.controller.AggregateAnalysisEngineController_impl.abortProcessingCas(AggregateAnalysisEngineController_impl.java:971)   at org.apache.uima.aae.controller.AggregateAnalysisEngineController_impl.process(AggregateAnalysisEngineController_impl.java:1010)   at org.apache.uima.aae.error.handler.ProcessCasErrorHandler.handleError(ProcessCasErrorHandler.java:521)   at org.apache.uima.aae.error.ErrorHandlerChain.handle(ErrorHandlerChain.java:57)   at org.apache.uima.aae.controller.BaseAnalysisEngineController.handleError(BaseAnalysisEngineController.java:1242)   at org.apache.uima.aae.controller.AggregateAnalysisEngineController_impl.finalStep(AggregateAnalysisEngineController_impl.java:1651)   at org.apache.uima.aae.controller.AggregateAnalysisEngineController_impl.abortProcessingCas(AggregateAnalysisEngineController_impl.java:971)   at org.apache.uima.aae.controller.AggregateAnalysisEngineController_impl.process(AggregateAnalysisEngineController_impl.java:1010)   at org.apache.uima.aae.error.handler.ProcessCasErrorHandler.handleError(ProcessCasErrorHandler.java:521)   at org.apache.uima.aae.error.ErrorHandlerChain.handle(ErrorHandlerChain.java:57)   at org.apache.uima.aae.controller.BaseAnalysisEngineController.handleError(BaseAnalysisEngineController.java:1242)   at org.apache.uima.aae.controller.AggregateAnalysisEngineController_impl.finalStep(AggregateAnalysisEngineController_impl.java:1651)   at org.apache.uima.aae.controller.AggregateAnalysisEngineController_impl.abortProcessingCas(AggregateAnalysisEngineController_impl.java:971)   at org.apache.uima.aae.controller.AggregateAnalysisEngineController_impl.process(AggregateAnalysisEngineController_impl.java:1010)   at org.apache.uima.aae.error.handler.ProcessCasErrorHandler.handleError(ProcessCasErrorHandler.java:521)   at org.apache.uima.aae.error.ErrorHandlerChain.handle(ErrorHandlerChain.java:57)   at org.apache.uima.aae.controller.BaseAnalysisEngineController.handleError(BaseAnalysisEngineController.java:1242)   at org.apache.uima.aae.controller.AggregateAnalysisEngineController_impl.finalStep(AggregateAnalysisEngineController_impl.java:1651)   at org.apache.uima.aae.controller.AggregateAnalysisEngineController_impl.abortProcessingCas(AggregateAnalysisEngineController_impl.java:971)   at org.apache.uima.aae.controller.AggregateAnalysisEngineController_impl.process(AggregateAnalysisEngineController_impl.java:1010)   at org.apache.uima.aae.error.handler.ProcessCasErrorHandler.handleError(ProcessCasErrorHandler.java:521)   at org.apache.uima.aae.error.ErrorHandlerChain.handle(ErrorHandlerChain.java:57)   at org.apache.uima.aae.controller.BaseAnalysisEngineController.handleError(BaseAnalysisEngineController.java:1242)   at org.apache.uima.aae.controller.AggregateAnalysisEngineController_impl.finalStep(AggregateAnalysisEngineController_impl.java:1651)   at org.apache.uima.aae.controller.AggregateAnalysisEngineController_impl.abortProcessingCas(AggregateAnalysisEngineController_impl.java:971)   at org.apache.uima.aae.controller.AggregateAnalysisEngineController_impl.process(AggregateAnalysisEngineController_impl.java:1010)   at org.apache.uima.aae.error.handler.ProcessCasErrorHandler.handleError(ProcessCasErrorHandler.java:521)   at org.apache.uima.aae.error.ErrorHandlerChain.handle(ErrorHandlerChain.java:57)   at org.apache.uima.aae.controller.BaseAnalysisEngineController.handleError(BaseAnalysisEngineController.java:1242)   at org.apache.uima.aae.controller.AggregateAnalysisEngineController_impl.finalStep(AggregateAnalysisEngineController_impl.java:1651)   at org.apache.uima.aae.controller.AggregateAnalysisEngineController_impl.abortProcessingCas(AggregateAnalysisEngineController_impl.java:971)   at org.apache.uima.aae.controller.AggregateAnalysisEngineController_impl.process(AggregateAnalysisEngineController_impl.java:1010)   at org.apache.uima.aae.error.handler.ProcessCasErrorHandler.handleError(ProcessCasErrorHandler.java:521)   at org.apache.uima.aae.error.ErrorHandlerChain.handle(ErrorHandlerChain.java:57)   at org.apache.uima.aae.controller.BaseAnalysisEngineController.handleError(BaseAnalysisEngineController.java:1242)   at org.apache.uima.aae.controller.AggregateAnalysisEngineController_impl.finalStep(AggregateAnalysisEngineController_impl.java:1651)   at org.apache.uima.aae.controller.AggregateAnalysisEngineController_impl.abortProcessingCas(AggregateAnalysisEngineController_impl.java:971)   at org.apache.uima.aae.controller.AggregateAnalysisEngineController_impl.process(AggregateAnalysisEngineController_impl.java:1010)   at org.apache.uima.aae.error.handler.ProcessCasErrorHandler.handleError(ProcessCasErrorHandler.java:521)   at org.apache.uima.aae.error.ErrorHandlerChain.handle(ErrorHandlerChain.java:57)   at org.apache.uima.aae.controller.BaseAnalysisEngineController.handleError(BaseAnalysisEngineController.java:1242)   at org.apache.uima.aae.controller.AggregateAnalysisEngineController_impl.finalStep(AggregateAnalysisEngineController_impl.java:1651)   at org.apache.uima.aae.controller.AggregateAnalysisEngineController_impl.abortProcessingCas(AggregateAnalysisEngineController_impl.java:971)   at org.apache.uima.aae.controller.AggregateAnalysisEngineController_impl.process(AggregateAnalysisEngineController_impl.java:1010)   at org.apache.uima.aae.error.handler.ProcessCasErrorHandler.handleError(ProcessCasErrorHandler.java:521)   at org.apache.uima.aae.error.ErrorHandlerChain.handle(ErrorHandlerChain.java:57)   at org.apache.uima.aae.controller.BaseAnalysisEngineController.handleError(BaseAnalysisEngineController.java:1242)   at org.apache.uima.aae.controller.AggregateAnalysisEngineController_impl.finalStep(AggregateAnalysisEngineController_impl.java:1651)   at org.apache.uima.aae.controller.AggregateAnalysisEngineController_impl.abortProcessingCas(AggregateAnalysisEngineController_impl.java:971)   at org.apache.uima.aae.controller.AggregateAnalysisEngineController_impl.process(AggregateAnalysisEngineController_impl.java:1010)   at org.apache.uima.aae.error.handler.ProcessCasErrorHandler.handleError(ProcessCasErrorHandler.java:521)   at org.apache.uima.aae.error.ErrorHandlerChain.handle(ErrorHandlerChain.java:57)   at org.apache.uima.aae.controller.BaseAnalysisEngineController.handleError(BaseAnalysisEngineController.java:1242)   at org.apache.uima.aae.controller.AggregateAnalysisEngineController_impl.finalStep(AggregateAnalysisEngineController_impl.java:1651)   at org.apache.uima.aae.controller.AggregateAnalysisEngineController_impl.abortProcessingCas(AggregateAnalysisEngineController_impl.java:971)   at org.apache.uima.aae.controller.AggregateAnalysisEngineController_impl.process(AggregateAnalysisEngineController_impl.java:1010)   at org.apache.uima.aae.error.handler.ProcessCasErrorHandler.handleError(ProcessCasErrorHandler.java:521)   at org.apache.uima.aae.error.ErrorHandlerChain.handle(ErrorHandlerChain.java:57)   at org.apache.uima.aae.controller.BaseAnalysisEngineController.handleError(BaseAnalysisEngineController.java:1242)   at org.apache.uima.aae.controller.AggregateAnalysisEngineController_impl.finalStep(AggregateAnalysisEngineController_impl.java:1651)   at org.apache.uima.aae.controller.AggregateAnalysisEngineController_impl.abortProcessingCas(AggregateAnalysisEngineController_impl.java:971)   at org.apache.uima.aae.controller.AggregateAnalysisEngineController_impl.process(AggregateAnalysisEngineController_impl.java:1010)   at org.apache.uima.aae.error.handler.ProcessCasErrorHandler.handleError(ProcessCasErrorHandler.java:521)   at org.apache.uima.aae.error.ErrorHandlerChain.handle(ErrorHandlerChain.java:57)   at org.apache.uima.aae.controller.BaseAnalysisEngineController.handleError(BaseAnalysisEngineController.java:1242)   at org.apache.uima.aae.controller.AggregateAnalysisEngineController_impl.finalStep(AggregateAnalysisEngineController_impl.java:1651)   at org.apache.uima.aae.controller.AggregateAnalysisEngineController_impl.abortProcessingCas(AggregateAnalysisEngineController_impl.java:971)   at org.apache.uima.aae.controller.AggregateAnalysisEngineController_impl.process(AggregateAnalysisEngineController_impl.java:1010)   at org.apache.uima.aae.error.handler.ProcessCasErrorHandler.handleError(ProcessCasErrorHandler.java:521)   at org.apache.uima.aae.error.ErrorHandlerChain.handle(ErrorHandlerChain.java:57)   at org.apache.uima.aae.controller.BaseAnalysisEngineController.handleError(BaseAnalysisEngineController.java:1242)   at org.apache.uima.aae.controller.AggregateAnalysisEngineController_impl.finalStep(AggregateAnalysisEngineController_impl.java:1651)   at org.apache.uima.aae.controller.AggregateAnalysisEngineController_impl.abortProcessingCas(AggregateAnalysisEngineController_impl.java:971)   at org.apache.uima.aae.controller.AggregateAnalysisEngineController_impl.process(AggregateAnalysisEngineController_impl.java:1010)   at org.apache.uima.aae.error.handler.ProcessCasErrorHandler.handleError(ProcessCasErrorHandler.java:521)   at org.apache.uima.aae.error.ErrorHandlerChain.handle(ErrorHandlerChain.java:57)   at org.apache.uima.aae.controller.BaseAnalysisEngineController.handleError(BaseAnalysisEngineController.java:1242)   at org.apache.uima.aae.controller.AggregateAnalysisEngineController_impl.finalStep(AggregateAnalysisEngineController_impl.java:1651)   at org.apache.uima.aae.controller.AggregateAnalysisEngineController_impl.abortProcessingCas(AggregateAnalysisEngineController_impl.java:971)   at org.apache.uima.aae.controller.AggregateAnalysisEngineController_impl.process(AggregateAnalysisEngineController_impl.java:1010)   at org.apache.uima.aae.error.handler.ProcessCasErrorHandler.handleError(ProcessCasErrorHandler.java:521)   at org.apache.uima.aae.error.ErrorHandlerChain.handle(ErrorHandlerChain.java:57)   at org.apache.uima.aae.controller.BaseAnalysisEngineController.handleError(BaseAnalysisEngineController.java:1242)   at org.apache.uima.aae.controller.AggregateAnalysisEngineController_impl.finalStep(AggregateAnalysisEngineController_impl.java:1651)   at org.apache.uima.aae.controller.AggregateAnalysisEngineController_impl.finalStep(AggregateAnalysisEngineController_impl.java:1634)   at org.apache.uima.aae.controller.AggregateAnalysisEngineController_impl.abortProcessingCas(AggregateAnalysisEngineController_impl.java:955)   at org.apache.uima.aae.controller.AggregateAnalysisEngineController_impl.process(AggregateAnalysisEngineController_impl.java:1010)   at org.apache.uima.aae.error.handler.ProcessCasErrorHandler.handleError(ProcessCasErrorHandler.java:512)   at org.apache.uima.aae.error.ErrorHandlerChain.handle(ErrorHandlerChain.java:57)   at org.apache.uima.aae.handler.input.ProcessResponseHandler.handleProcessResponseWithException(ProcessResponseHandler.java:535)   at org.apache.uima.aae.handler.input.ProcessResponseHandler.handle(ProcessResponseHandler.java:642)   at org.apache.uima.aae.handler.HandlerBase.delegate(HandlerBase.java:149)   at org.apache.uima.aae.handler.input.ProcessRequestHandler_impl.handle(ProcessRequestHandler_impl.java:951)   at org.apache.uima.aae.spi.transport.vm.UimaVmMessageListener.onMessage(UimaVmMessageListener.java:107)   at org.apache.uima.aae.spi.transport.vm.UimaVmMessageDispatcher$1.run(UimaVmMessageDispatcher.java:70)   at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)   at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)   at java.lang.Thread.run(Thread.java:619)Caused by: java.lang.RuntimeException: com.sun.xml.internal.messaging.saaj.soap.ver1_1.SOAPPart1_1Impl   at org.apache.activemq.command.ActiveMQObjectMessage.storeContent(ActiveMQObjectMessage.java:102)   at org.apache.activemq.command.ActiveMQObjectMessage.setObject(ActiveMQObjectMessage.java:144)   at org.apache.uima.adapter.jms.activemq.JmsOutputChannel.sendReply(JmsOutputChannel.java:1001)   ... 516 moreCaused by: java.io.NotSerializableException: com.sun.xml.internal.messaging.saaj.soap.ver1_1.SOAPPart1_1Impl   at java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1156)   at java.io.ObjectOutputStream.defaultWriteFields(ObjectOutputStream.java:1509)   at java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1474)   at java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1392)   at java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1150)   at java.io.ObjectOutputStream.defaultWriteFields(ObjectOutputStream.java:1509)   at java.io.ObjectOutputStream.defaultWriteObject(ObjectOutputStream.java:416)   at com.sun.org.apache.xerces.internal.dom.NodeImpl.writeObject(NodeImpl.java:2017)   at sun.reflect.GeneratedMethodAccessor162.invoke(Unknown Source)   at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)   at java.lang.reflect.Method.invoke(Method.java:597)   at java.io.ObjectStreamClass.invokeWriteObject(ObjectStreamClass.java:945)   at java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1461)   at java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1392)   at java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1150)   at java.io.ObjectOutputStream.defaultWriteFields(ObjectOutputStream.java:1509)   at java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1474)   at java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1392)   at java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1150)   at java.io.ObjectOutputStream.defaultWriteFields(ObjectOutputStream.java:1509)   at java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1474)   at java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1392)   at java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1150)   at java.io.ObjectOutputStream.defaultWriteFields(ObjectOutputStream.java:1509)   at java.io.ObjectOutputStream.defaultWriteObject(ObjectOutputStream.java:416)   at java.lang.Throwable.writeObject(Throwable.java:648)   at sun.reflect.GeneratedMethodAccessor161.invoke(Unknown Source)   at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)   at java.lang.reflect.Method.invoke(Method.java:597)   at java.io.ObjectStreamClass.invokeWriteObject(ObjectStreamClass.java:945)   at java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1461)   at java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1392)   at java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1150)   at java.io.ObjectOutputStream.defaultWriteFields(ObjectOutputStream.java:1509)   at java.io.ObjectOutputStream.defaultWriteObject(ObjectOutputStream.java:416)   at java.lang.Throwable.writeObject(Throwable.java:648)   at sun.reflect.GeneratedMethodAccessor161.invoke(Unknown Source)   at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)   at java.lang.reflect.Method.invoke(Method.java:597)   at java.io.ObjectStreamClass.invokeWriteObject(ObjectStreamClass.java:945)   at java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1461)   at java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1392)   at java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1150)   at java.io.ObjectOutputStream.defaultWriteFields(ObjectOutputStream.java:1509)   at java.io.ObjectOutputStream.defaultWriteObject(ObjectOutputStream.java:416)   at java.lang.Throwable.writeObject(Throwable.java:648)   at sun.reflect.GeneratedMethodAccessor161.invoke(Unknown Source)   at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)   at java.lang.reflect.Method.invoke(Method.java:597)   at java.io.ObjectStreamClass.invokeWriteObject(ObjectStreamClass.java:945)   at java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1461)   at java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1392)   at java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1150)   at java.io.ObjectOutputStream.writeObject(ObjectOutputStream.java:326)   at org.apache.activemq.command.ActiveMQObjectMessage.storeContent(ActiveMQObjectMessage.java:96)   ... 518 more
issueID:UIMA-1627
type:Bug
changed files:
texts:Application link not working on gcc 4.2
Need to explicitly specify -lapr-1
issueID:UIMA-1628
type:Bug
changed files:
texts:deployCppService does not return <elementType> on getMeta replies
3. I deployed the uimacpp AE service which has exactly the same typesystem as a uimaj AE in the pipeline. However, the CASes are incompatible with the following reason: There is a type 'Constituent' which has a 'children' feature. 'children' is of the range type 'FSArray' with the element type 'Constituent'. However, when getting the typesystem from the uimacpp service, the element type is ignored. Both components cannot be plugged into one pipeline, because of an exception complaining about incompatible typesystems.I will work around the last issue by altering the typesystem (removing the element type), but this is not satisfactory.Kind regardsMatthias
issueID:UIMA-1629
type:Bug
changed files:
texts:UIMACPP <import> behavior not sufficiently documented
1. uimacpp does not support import by name <import name="..." />, which I think is not mentioned in the documentation.2. using <import location="..." /> employs a different path resolving strategy from that of uimaj: both  support using absolute paths and relative paths (relative to the descriptor in which the import occurs) uimacpp can be given the environment variable UIMACPP_DATAPATH which is additionally used to resolve relative paths However, uimaj does not support resolving relative <import location="..." /> from it's datapath.Kind regardsMatthias
issueID:UIMA-163
type:Bug
changed files:uimaj-cpe/src/main/java/org/apache/uima/collection/impl/metadata/cpe/CpeCasProcessorsImpl.java
texts:CpeCasProcessors.removeCasProcessor always throws "invalid index" exception
I think there's a missing "else" in this code   public void removeCpeCasProcessor(int aPosition) throws CpeDescriptorException {    if (aPosition <= casProcessors.size()) {      casProcessors.remove(aPosition);    }    throw new CpeDescriptorException(CpmLocalizedMessage.getLocalizedMessage(            CPMUtils.CPM_LOG_RESOURCE_BUNDLE, "UIMA_CPM_EXP_invalid_array_index__WARNING",            new Object[] { Thread.currentThread().getName() }));  }
issueID:UIMA-1630
type:Bug
changed files:
texts:Fix IndexOutOfBounds exception in BaseAnalysisEngineController
There seems to be a synchronization problem in BaseAnalysisEngineController leading to the exception like this:Caused by: java.lang.IndexOutOfBoundsException: Index: 2, Size: 0  at java.util.ArrayList.RangeCheck(ArrayList.java:547)  at java.util.ArrayList.get(ArrayList.java:322)  at org.apache.uima.aae.controller.BaseAnalysisEngineController.stop(BaseAnalysisEngineController.java:1741)  at org.apache.uima.aae.controller.BaseAnalysisEngineController.stop(BaseAnalysisEngineController.java:1707)  at org.apache.uima.aae.controller.AggregateAnalysisEngineController_impl.stop(AggregateAnalysisEngineController_impl.java:2753)  at org.apache.uima.aae.controller.BaseAnalysisEngineController.terminate(BaseAnalysisEngineController.java:1967)  at org.apache.uima.aae.controller.BaseAnalysisEngineController.terminate(BaseAnalysisEngineController.java:1940)  at org.apache.uima.adapter.jms.activemq.SpringContainerDeployer.initializeContainer(SpringContainerDeployer.java:313)  at org.apache.uima.adapter.jms.activemq.SpringContainerDeployer.deploy(SpringContainerDeployer.java:390)  ... 7 moreThe aggregate controller attempts to stop its colocated delegates and fails with IndexOutOfBounds. It looks like one thread is trying to stop, while another is cleaning up a HashMap. Need to synchronize these activities.
issueID:UIMA-1631
type:Bug
changed files:uimaj-bootstrap/src/main/java/org/apache/uima/bootstrap/UimaBootstrap.java
texts:UimaBootstrap Loader approach fails to work for classes loaded by logger (and maybe other parts of Java)
The bootstrap loader is creating a URLClassLoader whose parent is the application class loader - also the one obtained from ClassLoader.getSystemClassLoader() method.  The Logger configuration is defined to load classes uses the application class loader, and fails to find any of the classes made available by the bootstrap class loader.An attempted fix that used the -Djava.system.class.loader failed to work for IBM Java 5 because that Java doesn't use the loader returned by ClassLoader.getSystemClassLoader() to load the logger classes. Fix this by not creating a new class loader, and just adding the new jars and directories to the current application class loader, using reflection to enable accessing the addUrl method.  This approach presumes that the application class loader is a subclass of URLClassLoader, which seems to be true at least for Sun and IBM Javas, launched with the normal java command.
issueID:UIMA-1632
type:Bug
changed files:
texts:UIMA AS service does not recover from broker failure and subsequent restart
When the broker dies and is subsequently restarted, the UIMA AS service recovers listeners on its input queue but it is not cleaning up its endpoints to remote delegates properly. In a request to the remote delegate, the service sends an old temp reply queue. This leads to JMS exceptions in the delegate while trying to reply to tmp destinations that no longer exist in a new broker. Fix the code to recover connection from a failed broker, clear the cache of delegate endpoints, create a new temp reply queue and listener and add a new temp reply queue to the outgoing request message.
issueID:UIMA-1633
type:Bug
changed files:
texts:UimaASStatusCallbackListener javadoc should say when aStatus can be null
The UimaASStatusCallbackListener interface should say when aStatus can be null. The docbook documentation says for all three methods "On success aStatus will be null", but it seems that it is not true anymore for entityProcessComplete because aStatus is needed to retrieve the cas reference id.
issueID:UIMA-1635
type:Improvement
changed files:
texts:uima-as docs review fixes for 2.3.0 level
Review uima-as docbook and update for 2.3.0
issueID:UIMA-1636
type:Bug
changed files:
texts:Modify property names used to enable and configure UIMA AS Jmx Monitor
To enable UIMA AS JMX monitor, a user can specify a formatter class and a frequency at which stats are collected by the monitor using the following system properties:-Djmx.monitor.frequency=<value>-Djmx.monitor.formatter=<custom formatter>The name spaces used appear as if they are part of standard jmx spec which may confuse users. Modify the name spaces to start with uima, like so:-Duima.jmx.monitor.frequency=<value>-Duima.jmx.monitor.formatter=<custom formatter>
issueID:UIMA-1637
type:Bug
changed files:
texts:Update JMX MBeans exposed by UIMA AS
Remove obsolete properties from ServiceInfoMBean: replyQueueName, deploymentDescriptor. Modify UIMA AS service to set service state: Initializing, Running, Disabled, Stopping. Currently only Running, Disabled and Active are supported. "Active" seems the same as Running and should be removed. Add new JMX property to UIMA AS ClientInfo MBean "seriallization" and set it to either xmi or binary. Add idle time to server perfomance MBean.
issueID:UIMA-1638
type:Bug
changed files:
texts:Remove dumping stack traces to stdout in UIMA AS
UIMA AS dumps stack traces to stdout in many places. Instead of dumping stack traces to stdout log them in uima log.
issueID:UIMA-1639
type:Bug
changed files:
texts:Fixed bugs which disabled compiled dicts, static dict attributes

issueID:UIMA-164
type:New Feature
changed files:
texts:Add source distribution

issueID:UIMA-1640
type:Bug
changed files:
texts:UIMA AS aggregate is not merging Flow Controller&#39;s metadata
UIMA AS aggregate ignores Flow Controller's metadata during initialization. This results in an incomplete type system returned to the aggregate's client.
issueID:UIMA-1641
type:Bug
changed files:
texts:Cas Processor integration was changed, but documentation not updated
The integration of Cas Processor into the Cas Editor was updated, but not the documentation.
issueID:UIMA-1642
type:Improvement
changed files:
texts:Regex rule file parameter should allow wildcard expressions when using the datapath to locate rule files
Improve the regex annotator so it can load rule files with wildcard expressions such as ruledir/*.rule
issueID:UIMA-1643
type:Bug
changed files:
texts:UIMA AS client does not recover correctly when the connection to a broker fails
When the connection to the broker is lost, the UIMA AS client does not attempt to reconnect as it is done in the UIMA AS service. When the jms send() fails due to a lost connection, the UIMA AS client notifies the application but in addition should log a single message that the connection was lost  and enter a recovery loop attempting to reconnect at regular intervals. Any failures during this recovery should be silently handled. If the application does not want to recover from a bad connection it should call stop() on the client API which will stop the recovery, cleanup resources and terminate the UIMA AS client.
issueID:UIMA-1644
type:Bug
changed files:
texts:uimaj-as-camel throws a NullPointerException when a null status is returned on initializationComplete
Add a null check to prevent it from throwing the NPE.
issueID:UIMA-1645
type:Bug
changed files:
texts:uimaj-as-camel needs a timeout parameter
Add the timeout parameter to the configuration string
issueID:UIMA-1646
type:Bug
changed files:
texts:Using failover in broker URL causes XML exception
In the deployment descriptor the broker URL is specified asfailover:(tcp://10.45.2.100:61616,tcp://10.45.2.101:61616)?randomize=falseand that causes on startup of the worker node the following exception:org.springframework.beans.factory.xml.XmlBeanDefinitionStoreException: Line 14 in XML document from URL file:/tmp/UIMAdd2springOutput63279.xml is invalid; nested exception is org.xml.sax.SAXParseException: Attribute value "qBroker_failover_c_(tcp_c_ss_10.45.2.100_c_61616,tcp_c_ss_10.45.2.101_c_61616)" of type ID must be a name.Caused by: org.xml.sax.SAXParseException: Attribute value "qBroker_failover_c_(tcp_c_ss_10.45.2.100_c_61616,tcp_c_ss_10.45.2.101_c_61616)" of type ID must be a name.  at com.sun.org.apache.xerces.internal.util.ErrorHandlerWrapper.createSAXParseException(ErrorHandlerWrapper.java:195)  at com.sun.org.apache.xerces.internal.util.ErrorHandlerWrapper.error(ErrorHandlerWrapper.java:131)  at com.sun.org.apache.xerces.internal.impl.XMLErrorReporter.reportError(XMLErrorReporter.java:384)  at com.sun.org.apache.xerces.internal.impl.XMLErrorReporter.reportError(XMLErrorReporter.java:318)  at com.sun.org.apache.xerces.internal.impl.dtd.XMLDTDValidator.validateDTDattribute(XMLDTDValidator.java:1427)  at com.sun.org.apache.xerces.internal.impl.dtd.XMLDTDValidator.addDTDDefaultAttrsAndValidate(XMLDTDValidator.java:1333)  at com.sun.org.apache.xerces.internal.impl.dtd.XMLDTDValidator.handleStartElement(XMLDTDValidator.java:1940)  at com.sun.org.apache.xerces.internal.impl.dtd.XMLDTDValidator.startElement(XMLDTDValidator.java:764)  at com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl.scanStartElement(XMLDocumentFragmentScannerImpl.java:1359)  at com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl$FragmentContentDriver.next(XMLDocumentFragmentScannerImpl.java:2747)  at com.sun.org.apache.xerces.internal.impl.XMLDocumentScannerImpl.next(XMLDocumentScannerImpl.java:648)  at com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl.scanDocument(XMLDocumentFragmentScannerImpl.java:510)  at com.sun.org.apache.xerces.internal.parsers.XML11Configuration.parse(XML11Configuration.java:807)  at com.sun.org.apache.xerces.internal.parsers.XML11Configuration.parse(XML11Configuration.java:737)  at com.sun.org.apache.xerces.internal.parsers.XMLParser.parse(XMLParser.java:107)  at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(DOMParser.java:225)  at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(DocumentBuilderImpl.java:283)  at org.springframework.beans.factory.xml.DefaultDocumentLoader.loadDocument(DefaultDocumentLoader.java:76)  at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.doLoadBeanDefinitions(XmlBeanDefinitionReader.java:351)  at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:303)  at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:280)  at org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(AbstractBeanDefinitionReader.java:131)  at org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(AbstractBeanDefinitionReader.java:147)  at org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(AbstractBeanDefinitionReader.java:173)  at org.springframework.context.support.AbstractXmlApplicationContext.loadBeanDefinitions(AbstractXmlApplicationContext.java:112)  at org.springframework.context.support.AbstractXmlApplicationContext.loadBeanDefinitions(AbstractXmlApplicationContext.java:79)  at org.springframework.context.support.AbstractRefreshableApplicationContext.refreshBeanFactory(AbstractRefreshableApplicationContext.java:101)  at org.springframework.context.support.AbstractApplicationContext.obtainFreshBeanFactory(AbstractApplicationContext.java:389)  at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:324)  at org.springframework.context.support.FileSystemXmlApplicationContext.<init>(FileSystemXmlApplicationContext.java:93)  at org.springframework.context.support.FileSystemXmlApplicationContext.<init>(FileSystemXmlApplicationContext.java:77)  at org.apache.uima.adapter.jms.activemq.SpringContainerDeployer.deploy(SpringContainerDeployer.java:434)  at org.apache.uima.adapter.jms.service.UIMA_Service.deploy(UIMA_Service.java:165)  at org.apache.uima.adapter.jms.service.UIMA_Service.main(UIMA_Service.java:387)  at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)  at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)  at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)  at java.lang.reflect.Method.invoke(Method.java:597)  at org.apache.uima.bootstrap.UimaBootstrap.main(UimaBootstrap.java:98)org.apache.uima.resource.ResourceInitializationException  at org.apache.uima.adapter.jms.activemq.SpringContainerDeployer.deploy(SpringContainerDeployer.java:441)  at org.apache.uima.adapter.jms.service.UIMA_Service.deploy(UIMA_Service.java:165)  at org.apache.uima.adapter.jms.service.UIMA_Service.main(UIMA_Service.java:387)  at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)  at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)  at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)  at java.lang.reflect.Method.invoke(Method.java:597)  at org.apache.uima.bootstrap.UimaBootstrap.main(UimaBootstrap.java:98)Caused by: org.springframework.beans.factory.xml.XmlBeanDefinitionStoreException: Line 14 in XML document from URL file:/tmp/UIMAdd2springOutput63279.xml is invalid; nested exception is org.xml.sax.SAXParseException: Attribute value "qBroker_failover_c_(tcp_c_ss_10.45.2.100_c_61616,tcp_c_ss_10.45.2.101_c_61616)" of type ID must be a name.  at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.doLoadBeanDefinitions(XmlBeanDefinitionReader.java:359)  at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:303)  at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:280)  at org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(AbstractBeanDefinitionReader.java:131)  at org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(AbstractBeanDefinitionReader.java:147)  at org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(AbstractBeanDefinitionReader.java:173)  at org.springframework.context.support.AbstractXmlApplicationContext.loadBeanDefinitions(AbstractXmlApplicationContext.java:112)  at org.springframework.context.support.AbstractXmlApplicationContext.loadBeanDefinitions(AbstractXmlApplicationContext.java:79)  at org.springframework.context.support.AbstractRefreshableApplicationContext.refreshBeanFactory(AbstractRefreshableApplicationContext.java:101)  at org.springframework.context.support.AbstractApplicationContext.obtainFreshBeanFactory(AbstractApplicationContext.java:389)  at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:324)  at org.springframework.context.support.FileSystemXmlApplicationContext.<init>(FileSystemXmlApplicationContext.java:93)  at org.springframework.context.support.FileSystemXmlApplicationContext.<init>(FileSystemXmlApplicationContext.java:77)  at org.apache.uima.adapter.jms.activemq.SpringContainerDeployer.deploy(SpringContainerDeployer.java:434)  ... 7 moreCaused by: org.xml.sax.SAXParseException: Attribute value "qBroker_failover_c_(tcp_c_ss_10.45.2.100_c_61616,tcp_c_ss_10.45.2.101_c_61616)" of type ID must be a name.  at com.sun.org.apache.xerces.internal.util.ErrorHandlerWrapper.createSAXParseException(ErrorHandlerWrapper.java:195)  at com.sun.org.apache.xerces.internal.util.ErrorHandlerWrapper.error(ErrorHandlerWrapper.java:131)  at com.sun.org.apache.xerces.internal.impl.XMLErrorReporter.reportError(XMLErrorReporter.java:384)  at com.sun.org.apache.xerces.internal.impl.XMLErrorReporter.reportError(XMLErrorReporter.java:318)  at com.sun.org.apache.xerces.internal.impl.dtd.XMLDTDValidator.validateDTDattribute(XMLDTDValidator.java:1427)  at com.sun.org.apache.xerces.internal.impl.dtd.XMLDTDValidator.addDTDDefaultAttrsAndValidate(XMLDTDValidator.java:1333)  at com.sun.org.apache.xerces.internal.impl.dtd.XMLDTDValidator.handleStartElement(XMLDTDValidator.java:1940)  at com.sun.org.apache.xerces.internal.impl.dtd.XMLDTDValidator.startElement(XMLDTDValidator.java:764)  at com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl.scanStartElement(XMLDocumentFragmentScannerImpl.java:1359)  at com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl$FragmentContentDriver.next(XMLDocumentFragmentScannerImpl.java:2747)  at com.sun.org.apache.xerces.internal.impl.XMLDocumentScannerImpl.next(XMLDocumentScannerImpl.java:648)  at com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl.scanDocument(XMLDocumentFragmentScannerImpl.java:510)  at com.sun.org.apache.xerces.internal.parsers.XML11Configuration.parse(XML11Configuration.java:807)  at com.sun.org.apache.xerces.internal.parsers.XML11Configuration.parse(XML11Configuration.java:737)  at com.sun.org.apache.xerces.internal.parsers.XMLParser.parse(XMLParser.java:107)  at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(DOMParser.java:225)  at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(DocumentBuilderImpl.java:283)  at org.springframework.beans.factory.xml.DefaultDocumentLoader.loadDocument(DefaultDocumentLoader.java:76)  at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.doLoadBeanDefinitions(XmlBeanDefinitionReader.java:351)  ... 20 more
issueID:UIMA-1647
type:Bug
changed files:
texts:Scripts fail to call runUimaClass.sh
Executing deployAsyncService.sh fails with the following error message:.: 28: runUimaClass.sh: not found deployAsyncService.sh calls runUimaClass.sh with ". runUimaClass.sh ...",in an older version this script called setUimaClassPath.sh, but that was done with the absolute path:. "$UIMA_HOME/bin/setUimaClassPath.sh"I suggest that we change all our .sh scripts to use the absolute path likeit was done before for at least the deployAsyncService.sh script.
issueID:UIMA-1648
type:Bug
changed files:
texts:UIMA AS lib path contains duplicate entries
After starting with deployAsyncService.sh the LIB_PATH is traced to the console,but it contains the same entries over and over again:+ JVM LIB_PATH:/usr/lib/jvm/java-6-sun-1.6.0.10/jre/lib/amd64/server:/usr/lib/jvm/java-6-sun-1.6.0.10/jre/lib/amd64:/usr/lib/jvm/java-6-sun-1.6.0.10/jre/../lib/amd64:/home/uadmin/apache-uima-asNEW/uimacpp/lib:/home/uadmin/apache-uima-asNEW/uimacpp/examples/tutorial/src:/home/uadmin/apache-uima-asNEW/uimacpp/lib:/home/uadmin/apache-uima-asNEW/uimacpp/examples/tutorial/src:/home/uadmin/apache-uima-asNEW/uimacpp/lib:/home/uadmin/apache-uima-asNEW/uimacpp/examples/tutorial/src:/home/uadmin/apache-uima-asNEW/uimacpp/lib:/home/uadmin/apache-uima-asNEW/uimacpp/examples/tutorial/src:/home/uadmin/apache-uima-asNEW/uimacpp/lib:/home/uadmin/apache-uima-asNEW/uimacpp/examples/tutorial/src:/home/uadmin/apache-uima-asNEW/uimacpp/lib:/home/uadmin/apache-uima-asNEW/uimacpp/examples/tutorial/src:/home/uadmin/apache-uima-asNEW/uimacpp/lib:/home/uadmin/apache-uima-asNEW/uimacpp/examples/tutorial/src:/home/uadmin/apache-uima-asNEW/uimacpp/lib:/home/uadmin/apache-uima-asNEW/uimacpp/examples/tutorial/src::/usr/java/packages/lib/amd64:/lib:/usr/lib
issueID:UIMA-1649
type:Bug
changed files:
texts:deployAsyncService.sh log4j warnings
When starting with deployAsyncService.sh there is log4j warning:log4j:WARN No appenders could be found for logger (org.springframework.context.support.FileSystemXmlApplicationContext).log4j:WARN Please initialize the log4j system properly.Maybe I am doing something wrong ? Otherwise I think a default log4j.properties should be provided ...
issueID:UIMA-165
type:Bug
changed files:
texts:Need JCAS fixes for DocumentatAnnotation and type merging
The current build has the DocumentAnnotation JCas cover class in uima-core.jar.  This creates a problem for anyone who has added features to this type and run JCasGen.Fixes as suggested by Marshall and agreed by Adam:> a) Do the work to make it easy to get singletons (or whatever we're> calling this feature) out of the CAS>> b) Change JCasGen to not generate DocumentAnnotation if the merged> version = the base>> c) Add the DocumentAnnotation jar back to the build, with instructions> to remove it from the> deployment and substitute a JCasGenerated one if the application needs a> special one.
issueID:UIMA-1650
type:Bug
changed files:
texts:Bug in common launcher script causing UIMA_CLASSPATH to be ignored
This was caught by Burn when looking at another issue - setting LOCAL_SAVED_UIMA_CLASSPATH that is never used.  Need to check if the intent on the order is being correctly followed, also.
issueID:UIMA-1651
type:Bug
changed files:
texts:We should remove runRemoteAsyncAEmultiple.cmd
It has no value ... just calls runRemoteAsyncAE 10 times ... and there is no sh version.
issueID:UIMA-1653
type:Bug
changed files:
texts:XMI Serialization of replies is not checking for FS references when serializing incoming FSs
As discovered by Matthias Wendt when the incoming FS has a feature with multiple references  which is set by the C++ annotator, the FS reference is not serialized.   Mathias  provided the sample XMI below returned in the  reply from a C++ service where  the 'variant' feature gets an id-ref value of "4", but there is no object having xmi:id="4".The feature 'variant'  has MultipleReferenceAllowed set to true.  The encompassing FS is passed to C++  annotator which sets the 'variant' feature. ....(.........................n....K[..........$..T,...2....<?xml version ="1.0" encoding="UTF-8"?><xmi:XMI xmlns:examples="http:///org/apache/uima/e xamples.ecore" xmlns:cas="http:///uima/cas.ecore" xmlns:tcas="http:///uima/ tcas.ecore" xmlns:xmi="http://www.omg.org/XMI"  xmi:version="2.0"><cas:NULL xmi:id="0"/> <cas:Sofa xmi:id="1" sofaNum="1" sofaID="_InitialView" mimeTy pe="text" sofaString="Load or edit text here."/>. <tcas:DocumentAnnotation xmi:id="2" sofa="1" begin="0" end="23" language="en"/>. <examples:David xmi :id="3" sofa="1" begin="0" end="1" variants="4"/>.<cas:View sofa="1" member s="2 3"/></xmi:XMI>....9......CasReference...-37f4a0fc:124c9361c79:-7feb..C ommand.......IdleTime.......?...MessageFrom...DAVEDETECTORQ..MessageType... ....Payload.......ServerURI...tcp://localhost:61616..TimeInAnalytic........ `..TimeInProcessCAS........`..TimeInService...........TimeToDeserializeCAS. .......P..TimeToSerializeCAS...................
issueID:UIMA-1654
type:Bug
changed files:
texts:UIMA AS client doesnt remove its MBean from the JMX Server on shutdown
UIMA AS client registers a jmx bean with the JMX server but never unregisters it when it is stopped. Modify code to remove the mbean in the stop() method
issueID:UIMA-1655
type:Bug
changed files:
texts:Fix NPE in UIMA AS service while creating a new listener
While recovering a listener UIMA AS service should check if its still running. A NPE is thrown if the service is stopping while another thread is still recovering from a lost broker connection.
issueID:UIMA-1656
type:Bug
changed files:
texts:UIMA AS aggregate should not attempt to send getMeta request to remotes when its stopping
The aggregate attempts to send getMeta requests to remotes even though it is in a process of stopping due to a failure of a previous GetMeta request. Modify sendRequestForMetadataToRemoteDelegates() to check the state of the aggregate before attempting GetMeta request.
issueID:UIMA-1657
type:Bug
changed files:
texts:UIMA AS client fails if a failover broker uri with multiple endpoints is used
The initialize time out if a failover broker uri with multiple endpoints is used e.g.:failover:(tcp://XXX1:61616,tcp://XXX2:61616)?randomize=false On the client side it results in a time out exception:Caused by: org.apache.uima.resource.ResourceInitializationException   at org.apache.uima.adapter.jms.client.BaseUIMAAsynchronousEngine_impl.initialize(BaseUIMAAsynchronousEngine_impl.java:637)   at org.apache.uima.camel.UimaAsProducer.<init>(UimaAsProducer.java:142)   at org.apache.uima.camel.UimaAsEndpoint.createProducer(UimaAsEndpoint.java:89)   at org.apache.camel.processor.SendProcessor.doStart(SendProcessor.java:93)   at org.apache.camel.impl.ServiceSupport.start(ServiceSupport.java:49)   at org.apache.camel.util.ServiceHelper.startService(ServiceHelper.java:42)   at org.apache.camel.util.ServiceHelper.startServices(ServiceHelper.java:53)   at org.apache.camel.processor.DelegateProcessor.doStart(DelegateProcessor.java:68)   at org.apache.camel.impl.ServiceSupport.start(ServiceSupport.java:49)   at org.apache.camel.util.ServiceHelper.startService(ServiceHelper.java:42)   at org.apache.camel.util.ServiceHelper.startServices(ServiceHelper.java:53)   at org.apache.camel.processor.DelegateProcessor.doStart(DelegateProcessor.java:68)   at org.apache.camel.impl.ServiceSupport.start(ServiceSupport.java:49)   at org.apache.camel.util.ServiceHelper.startService(ServiceHelper.java:42)   at org.apache.camel.util.ServiceHelper.startServices(ServiceHelper.java:53)   at org.apache.camel.processor.DelegateProcessor.doStart(DelegateProcessor.java:68)   at org.apache.camel.impl.ServiceSupport.start(ServiceSupport.java:49)   at org.apache.camel.util.ServiceHelper.startService(ServiceHelper.java:42)   at org.apache.camel.util.ServiceHelper.startServices(ServiceHelper.java:53)   at org.apache.camel.processor.DelegateAsyncProcessor.doStart(DelegateAsyncProcessor.java:54)   at org.apache.camel.impl.ServiceSupport.start(ServiceSupport.java:49)   at org.apache.camel.util.ServiceHelper.startService(ServiceHelper.java:42)   at org.apache.camel.util.ServiceHelper.startServices(ServiceHelper.java:53)   at org.apache.camel.impl.DefaultConsumer.doStart(DefaultConsumer.java:85)   at org.apache.camel.component.jms.JmsConsumer.doStart(JmsConsumer.java:58)   at org.apache.camel.impl.ServiceSupport.start(ServiceSupport.java:49)   at org.apache.camel.impl.DefaultCamelContext.addService(DefaultCamelContext.java:422)   at org.apache.camel.impl.DefaultCamelContext.startRoutes(DefaultCamelContext.java:664)   at org.apache.camel.impl.DefaultCamelContext.doStart(DefaultCamelContext.java:635)   at org.apache.camel.spring.SpringCamelContext.maybeDoStart(SpringCamelContext.java:166)   at org.apache.camel.spring.SpringCamelContext.doStart(SpringCamelContext.java:161)   at org.apache.camel.impl.ServiceSupport.start(ServiceSupport.java:49)   at org.apache.camel.spring.SpringCamelContext.maybeStart(SpringCamelContext.java:96)   at org.apache.camel.spring.SpringCamelContext.onApplicationEvent(SpringCamelContext.java:115)   ... 12 moreCaused by: org.apache.uima.aae.error.UimaASMetaRequestTimeout   ... 46 moreAnd on the worker node it results in this exception:rg.apache.uima.aae.error.AsynchAEException: javax.jms.JMSException: Could not create Transport. Reason: java.lang.IllegalArgumentException: Invalid connect parameters: {randomize=false}   at org.apache.uima.adapter.jms.activemq.JmsEndpointConnection_impl.openChannel(JmsEndpointConnection_impl.java:284)   at org.apache.uima.adapter.jms.activemq.JmsEndpointConnection_impl.openChannel(JmsEndpointConnection_impl.java:147)   at org.apache.uima.adapter.jms.activemq.JmsEndpointConnection_impl.open(JmsEndpointConnection_impl.java:301)   at org.apache.uima.adapter.jms.activemq.JmsEndpointConnection_impl.open(JmsEndpointConnection_impl.java:290)   at org.apache.uima.adapter.jms.activemq.JmsOutputChannel.getEndpointConnection(JmsOutputChannel.java:493)   at org.apache.uima.adapter.jms.activemq.JmsOutputChannel.sendReply(JmsOutputChannel.java:1153)   at org.apache.uima.aae.controller.BaseAnalysisEngineController.sendMetadata(BaseAnalysisEngineController.java:2627)   at org.apache.uima.aae.controller.AggregateAnalysisEngineController_impl.sendMetadata(AggregateAnalysisEngineController_impl.java:2585)   at org.apache.uima.aae.handler.input.MetadataRequestHandler_impl.handle(MetadataRequestHandler_impl.java:69)   at org.apache.uima.adapter.jms.activemq.JmsInputChannel.onMessage(JmsInputChannel.java:643)   at org.springframework.jms.listener.AbstractMessageListenerContainer.doInvokeListener(AbstractMessageListenerContainer.java:518)   at org.springframework.jms.listener.AbstractMessageListenerContainer.invokeListener(AbstractMessageListenerContainer.java:479)   at org.springframework.jms.listener.AbstractMessageListenerContainer.doExecuteListener(AbstractMessageListenerContainer.java:451)   at org.springframework.jms.listener.AbstractPollingMessageListenerContainer.doReceiveAndExecute(AbstractPollingMessageListenerContainer.java:323)   at org.springframework.jms.listener.AbstractPollingMessageListenerContainer.receiveAndExecute(AbstractPollingMessageListenerContainer.java:261)   at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.invokeListener(DefaultMessageListenerContainer.java:982)   at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.executeOngoingLoop(DefaultMessageListenerContainer.java:974)   at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.run(DefaultMessageListenerContainer.java:876)   at java.lang.Thread.run(Thread.java:619)Caused by: javax.jms.JMSException: Could not create Transport. Reason: java.lang.IllegalArgumentException: Invalid connect parameters: {randomize=false}   at org.apache.activemq.util.JMSExceptionSupport.create(JMSExceptionSupport.java:35)   at org.apache.activemq.ActiveMQConnectionFactory.createTransport(ActiveMQConnectionFactory.java:242)   at org.apache.activemq.ActiveMQConnectionFactory.createActiveMQConnection(ActiveMQConnectionFactory.java:255)   at org.apache.activemq.ActiveMQConnectionFactory.createActiveMQConnection(ActiveMQConnectionFactory.java:227)   at org.apache.activemq.ActiveMQConnectionFactory.createConnection(ActiveMQConnectionFactory.java:175)   at org.apache.uima.adapter.jms.activemq.JmsEndpointConnection_impl.openChannel(JmsEndpointConnection_impl.java:195)   ... 18 moreCaused by: java.lang.IllegalArgumentException: Invalid connect parameters: {randomize=false}   at org.apache.activemq.transport.TransportFactory.doConnect(TransportFactory.java:144)   at org.apache.activemq.transport.TransportFactory.doConnect(TransportFactory.java:51)   at org.apache.activemq.transport.TransportFactory.connect(TransportFactory.java:80)   at org.apache.activemq.ActiveMQConnectionFactory.createTransport(ActiveMQConnectionFactory.java:240)   ... 22 moreIt looks like that JmsMessageContext.chooseServerUri transform itfromfailover:(tcp://XXX1:61616,tcp://XXX2:61616)?randomize=falseintotcp://XXX2:61616)?randomize=falsewhich is then later rejected. The removal of the call to chooseServerUir fixed the problem in my particular case, but might failif http is used.
issueID:UIMA-1658
type:Bug
changed files:
texts:UIMA AS worker does not respond to client initialize after failover
A Pure Master Slave Broker is used to increase availability of the broker. More information about it can be found in the activemq documentation:http://activemq.apache.org/pure-master-slave.html In a test we simulated Master failure through killing the process with kill -9.Here is the log output from the worker node:INFO  FailoverTransport              - Successfully connected to tcp://XXX1:61616 Here I stopped the master broker process with kill -9 WARN  FailoverTransport              - Transport failed to tcp://XXX1:61616 , attempting to automatically reconnect due to: java.io.EOFExceptionWARN  FailoverTransport              - Transport failed to tcp://XXX1:61616 , attempting to automatically reconnect due to: java.io.EOFExceptionWARN  FailoverTransport              - Transport failed to tcp://XXX1:61616 , attempting to automatically reconnect due to: java.io.EOFExceptionINFO  FailoverTransport              - Successfully reconnected to tcp://XXX2:61616INFO  FailoverTransport              - Successfully reconnected to tcp://XXX2:61616INFO  FailoverTransport              - Successfully reconnected to tcp://XXX2:61616 Afterwards the client was restarted but got a time out error during initialize.During initializes it sends a message to the worker nodes input queue, but thismessage if never retrieved.I used the activemq web interface to get some information about the message:Command     2001MessageFrom     ID:XXXX-51032-1257865414664-0:1:1ServerURI     failover:(tcp://XXX1:61616,tcp://XXX2:61616)?randomize=falseMessageType     3000
issueID:UIMA-1659
type:Bug
changed files:
texts:UIMA AS aggregate creates a redundant temp reply queue for each delegate
While creating an endpoint connection to a delegate, the aggregate creates a temp reply queue in JmsOutputChannel.getEndpointConnection() for no apparent reason. This should not be done as temp reply queues are created during initialization of the aggregate. These redundant queues actually cause one of the testcases in the extended test to fail intermittently.
issueID:UIMA-166
type:Sub-task
changed files:uimaj-tools/src/main/java/org/apache/uima/tools/jcasgen/Jg.java
texts:Change JCasGen to not generate DocumentAnnotation if the merged version = the base
If the input to JCasGen, a fully merged type system, has a definition of DocumentAnnotation which is identical to the built in one (i.e., it doesn't add any new features), then don't generate DocumentAnnotation cover classes - assume the built-in one will be used.
issueID:UIMA-1660
type:Improvement
changed files:
texts:uimaj-as-camel should support failover in configruation string
It should be possible to use a failover broker URI in the configuration string.
issueID:UIMA-1661
type:Task
changed files:
texts:tag 2.3.0 release candidates

issueID:UIMA-1662
type:Bug
changed files:
texts:uima-as extract and build script has copy/paste error - is building base uima instead of uima-as
fixing in the trunk and also in the 01 tag
issueID:UIMA-1663
type:Bug
changed files:
texts:All directories in UIMA distribution should be 755
The uima-as-2.3.0-incubating-bin.tar.gz and uimaj-2.3.0-incubating-bin.tar.gz contain directories which also have write permissions for group and other set. That permissions for directories should be 755 (no write for group and other). Here is a list of the directories:apache-uimabinconfigapache-activemq.4.1.1as_configexamples (only uima-as)saxonI did not check uimacpp and the sandbox.
issueID:UIMA-1664
type:Bug
changed files:
texts:Windows command line files not working
Windows command line files for running scripts fail.
issueID:UIMA-1665
type:Bug
changed files:
texts:UIMA AS aggregate not handling timeouts correctly for parallel delegates
Burn discovered a bug in UIMA AS aggregate while handling timeouts from delegates in a parallel step. A delegate timeout that is subsequently disabled (due to error handling setting action=disable), causes error handling code to (incorrectly) double increment the count of delegates that responded. The count is maintained to determine how many delegates in a parallel step responded and if it is ok to allow the CAS to continue with the flow. This counter is incremented when a reply comes or there is a timeout. When the counter reaches the expected number, the CAS is allowed to continue on with flow. The double increment causes a CAS to continue in the flow prematurely.
issueID:UIMA-1666
type:Bug
changed files:
texts:CasPoolSize should equal numberOfInstances when deploying a primitive component
When deploying a primitive component, the cas pool size should equal the number of instances.  If a user explicitly sets the cas pool size in the deployement descriptor, it should be overridden and set to the number of instances and a warning log message written.  If set to less than the number of instance, the user does not get the expected performance improvement and its too easy to get this wrong.
issueID:UIMA-1667
type:Improvement
changed files:
texts:UIMA AS should also log the ActiveMQ version on startup
UIMA AS should also log the ActiveMQ version on startup.
issueID:UIMA-1668
type:Bug
changed files:
texts:Update sample descriptor for cas editor test UI_009
The UI_009 test depends on an AE descriptor which uses the Regex annotator from the examples project,tough this dependencies was removed from the uima eclipse runtime project.The test should be updated to use a dummy AE which is already part of the cas editor.
issueID:UIMA-1669
type:Improvement
changed files:
texts:Add Cas Editor sample project to distribution
The Cas Editor sample project should be added to the distribution.
issueID:UIMA-167
type:Task
changed files:
texts:Find and verify Docbook license(s)
I did a quick check and couldn't find the license info for Docbook xsl (on sourceforge) and Docbook XML (from OASIS).  Need to find these and confirm we can "distribute", or delete from our distribution.
issueID:UIMA-1670
type:Improvement
changed files:
texts:uima-as startup issues
The README saysWhen the broker starts it will print a message such as:      INFO: Listening for connections at: tcp://yourHostname:61616The message has changed, and now reads:INFO  TransportServerThreadSupport   - Listening for connections at: tcp://yourHostname:61616The deployAsyncService, out of the box, causes the warning:log4j:WARN No appenders could be found for logger (org.springframework.context.support.FileSystemXmlApplicationContext).log4j:WARN Please initialize the log4j system properly.The README should have a default for 3.2.b command as an example, and point the reader to 3.4 "Quick Test".The deployAsyncService command (and maybe others too) prints:Enter 'q' to quiesce and stop the service or 's' to stop it now:However, if you enter a q (in windows), nothing happens, and the letter you pressed is not echoed.  But if you press "enter", the letter is echoed, and the action happens.
issueID:UIMA-1671
type:Bug
changed files:
texts:UIMA AS client fails to localize exception message when executed in an OSGI server
An UIMA AS client executed in an OSGI server fails to localize exception messages. The uima runtime bundle uses org.apache.uima.internal.util.I18nUtil to localize exception messages, this fails because the runtime bundlecannot see the classpath of the uima as osgi runtime bundle.To solve the issue the classpath of the uima as osgi runtime bundle should be made visible to the uima runtimebundle with Eclipse-RegisterBuddy which fixs the issue in a Spring DM Server.
issueID:UIMA-1672
type:Bug
changed files:
texts:BaseAnalysisEngineController.stopCasMultiplier should log stopping also to log file
The mentioned method should log in line 2045 also to the logger:System.out.println(">>> Instance Hashcode:" + hashCode() + " Controller:"    + getComponentName() + " Stopping Collocated Delegate Cas Multiplier:"    + casMultiplier.getKey());
issueID:UIMA-1673
type:Bug
changed files:
texts:uimaee_messages.properties contains key UIMAEE_stopping_collocated_cm_INFO twice
The file contains the key twice:UIMAEE_stopping_collocated_cm_INFO =  Controller: {0} Stopping Collocated Delegate Cas Multiplier: {1} UIMAEE_stopping_collocated_cm_INFO =  Controller: {0} Stopping Remote Delegate Cas Multiplier: {1} Maybe the second one should be UIMAEE_stopping_remote_cm_INFO, can someone please confirm that?At least UIMAEE_stopping_remote_cm_INFO is used at BaseAnalysisEngineController line 2040, but doesnot occur in uimaee_messages.properties.
issueID:UIMA-1674
type:Bug
changed files:
texts:Exception thrown from CasMultiplier.process should be reported to client as failure
The first Analysis Engine in our uima-as setup is a CasMultiplier,we implement the process method and from this method our implementationthrows a RuntimeException, not nice but it can happen.In the client interface we get the CAS back, but EntityProcessStatus.isException returns false,but it should return true and provide the exception.
issueID:UIMA-1675
type:Bug
changed files:
texts:UIMA AS client does not log time out error correctly
This is the log from the client (written to console):INFO: Timeout While Waiting For Reply From Delegate:SearchQueueUima Process CAS Request Timed Out. Configured Reply Window Of 120,000. Cas Reference Id:5679462b:12511e6d9cf:-7fcc Nov 20, 2009 3:05:38 PM org.apache.uima.adapter.jms.client.ClientServiceDelegate handleErrorINFO: Process Timeout. Uima AS Client Didnt Receive Process Reply Within Configured Window Of: {0}But should be: ... Configured Window Of: 120,000And it should be logged with unit.
issueID:UIMA-1676
type:Bug
changed files:
texts:Regex: pear install.xml is missing 2 of the 3 jar files
The regex pear file is not packaged correctly.  2 out of 3 jar files are missing from the install.xml file, resulting in ClassNotFoundExceptions when you're trying to run the installed pear.
issueID:UIMA-1677
type:Improvement
changed files:
texts:UIMA-AS Doc updates from proofreading

issueID:UIMA-1678
type:Bug
changed files:PearPackagingMavenPlugin/src/main/java/org/apache/uima/pear/tools/PearPackagingMojo.java
texts:Pear builder maven plugin should use "Package" mode of buildComponentClassPath
The part of the PEAR system which sets up the class path (implemented in buildComponentClassPath method) can be run in two modes, one for "packaging" and the other for use at "runtime".  The difference is that the "runtime" just uses the specified classpath, while the "packaging" creates a classpath adding jars found in the lib/ directory.  The Maven plugin to create a package should use the "packaging" version.  This will help with backwards compatibility.While changing things, the Maven plugin should use a definite order for building the classpath, starting with the actual artifact, any entries in a user-specified classpath, and then the jars from the lib directory, last (in arbitrary order).  And it should not add things to the classpath that are already there (remove duplicates).
issueID:UIMA-1679
type:Bug
changed files:
texts:UIMA scripts set memory options that override user&#39;s setiings
Old setUimaClassPath set -Xms128M -Xmx800M only if user didn't set UIMA_JVM_OPTS.New runUinaClass always appends these to the user's options which overrides their settings.Perhaps we shouldn't be setting any defaults at all.
issueID:UIMA-168
type:Task
changed files:uimaj-tools/src/main/java/org/apache/uima/tools/cvd/MainFrame.java
uimaj-core/src/main/java/org/apache/uima/cas/CAS.java
uimaj-core/src/main/java/org/apache/uima/jcas/JCas.java
texts:undo CommonCas change
Undo UIMA-143,  Due to lack of concensus and strong objection to change.
issueID:UIMA-1680
type:Bug
changed files:
texts:Async Scaleout Monitor has many issues
uima.jmx.monitor.interval is required (not optional) to activate the internal JMX logging.During testing by Burn and Eddie: Output is not appearing; null pointer exception is thrown:Exception in thread "Thread-25" java.lang.NullPointerException at org.apache.uima.aae.jmx.monitor.SingleLineUimaJmxMonitorListener.onNewMetrics(SingleLineUimaJmxMonitorListener.java:75) at org.apache.uima.aae.jmx.monitor.JmxMonitor.notifyListeners(JmxMonitor.java:132) at org.apache.uima.aae.jmx.monitor.JmxMonitor.run(JmxMonitor.java:539) at java.lang.Thread.run(Thread.java:735)Getting message: 19: org.apache.uima.aae.jmx.monitor.JmxMonitor.collectStats: WARNING: Thread: Thread-25 Exception:java.lang.reflect.UndeclaredThrowableException  (May be OK?)On Linux: got an InstantiationException loading the basic formatter class
issueID:UIMA-1681
type:Bug
changed files:
texts:Wrong value for JMX monitoring property
Documentation says uima.jmx.monitor.interval but code looks for uima.jmx.monitor.frequency
issueID:UIMA-1682
type:Improvement
changed files:
texts:Notify the user if the language in the CAS is set to "x" and the SnowballAnnotator won&#39;t work properly.
If you don't use debugging tools such as the CVD, the language of the CAS is per default set to "x". In this case the SnowballAnnotator won't work. It would be nice to notify the user, that the language isn't set properly.
issueID:UIMA-1683
type:Bug
changed files:
texts:fix copyright notice in the NOTICE files
says 2008
issueID:UIMA-1684
type:Bug
changed files:
texts:UIMA-CPP readme-s refer to 2.2.2
These need updating to 2.3.0 and review for correctness at this level.
issueID:UIMA-1685
type:Bug
changed files:
texts:Sandbox licenses has uima-as licenses, but those are now moved out into a separate entity
The Sandbox license still includes the licenses for uima-as, which was moved out of the sandbox.  Remove these.
issueID:UIMA-1686
type:Bug
changed files:
texts:add licenses from some Sandbox projects to overall Sandbox license
A license review reveals some licenses for some sandbox projects which are not pulled into the overall sandbox license.  Examples are the Sun Public LIcense and the Mozilla license.  When fixing this, observe the need to label category B licenses (see http://www.apache.org/legal/resolved.html )
issueID:UIMA-1687
type:Bug
changed files:
texts:correct top-level svn license/notice files
Top level license and notice files should correspond to the "source" license/notice files
issueID:UIMA-1688
type:Bug
changed files:uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/AnnotationEditor.java
uimaj-ep-cas-editor-ide/src/main/java/org/apache/uima/caseditor/ide/DefaultCasDocumentProvider.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/ui/property/AnnotationPropertyPage.java
texts:Cas Editor throws NPE when cleaning a document which is opened
The Cas Edtior throws an NPE when a document is "cleaned" with the clean action and the documen is open.!ENTRY org.eclipse.jface 4 0 2009-12-01 18:02:09.672!MESSAGE Unhandled event loop exception during blocked modal context.!STACK 0org.eclipse.swt.SWTException: Failed to execute runnable (java.lang.NullPointerException) at org.eclipse.swt.SWT.error(SWT.java:3884) at org.eclipse.swt.SWT.error(SWT.java:3799) at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:137) at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:3468) at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3115) at org.eclipse.jface.operation.ModalContext$ModalContextThread.block(ModalContext.java:173) at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:388) at org.eclipse.jface.dialogs.ProgressMonitorDialog.run(ProgressMonitorDialog.java:507) at org.eclipse.ui.internal.progress.ProgressMonitorJobsDialog.run(ProgressMonitorJobsDialog.java:275) at org.eclipse.ui.internal.progress.ProgressManager.run(ProgressManager.java:1178) at org.apache.uima.caseditor.ui.action.RunnableAction.run(RunnableAction.java:72) at org.eclipse.jface.action.Action.runWithEvent(Action.java:498) at org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection(ActionContributionItem.java:584) at org.eclipse.jface.action.ActionContributionItem.access$2(ActionContributionItem.java:501) at org.eclipse.jface.action.ActionContributionItem$5.handleEvent(ActionContributionItem.java:411) at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:84) at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1176) at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:3493) at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3112) at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:2405) at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:2369) at org.eclipse.ui.internal.Workbench.access$4(Workbench.java:2221) at org.eclipse.ui.internal.Workbench$5.run(Workbench.java:500) at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:332) at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:493) at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:149) at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:113) at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:194) at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:110) at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:79) at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:368) at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:179) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:616) at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:559) at org.eclipse.equinox.launcher.Main.basicRun(Main.java:514) at org.eclipse.equinox.launcher.Main.run(Main.java:1311)Caused by: java.lang.NullPointerException at org.apache.uima.caseditor.core.model.dotcorpus.DotCorpus.getAnnotation(DotCorpus.java:213) at org.apache.uima.caseditor.core.model.DotCorpusElement.getAnnotation(DotCorpusElement.java:191) at org.apache.uima.caseditor.editor.DefaultCasDocumentProvider.getAnnotationStyle(DefaultCasDocumentProvider.java:131) at org.apache.uima.caseditor.editor.AnnotationEditor$AnnotationAccess.getLayer(AnnotationEditor.java:408) at org.eclipse.jface.text.source.AnnotationPainter.getDecoration(AnnotationPainter.java:851) at org.eclipse.jface.text.source.AnnotationPainter.catchupWithModel(AnnotationPainter.java:679) at org.eclipse.jface.text.source.AnnotationPainter.updatePainting(AnnotationPainter.java:940) at org.eclipse.jface.text.source.AnnotationPainter.paint(AnnotationPainter.java:1653) at org.apache.uima.caseditor.editor.AnnotationEditor.syncAnnotations(AnnotationEditor.java:888) at org.apache.uima.caseditor.editor.AnnotationEditor$DocumentListener.changed(AnnotationEditor.java:309) at org.apache.uima.caseditor.editor.AbstractDocument.fireChanged(AbstractDocument.java:131) at org.apache.uima.caseditor.editor.DocumentUimaImpl.changed(DocumentUimaImpl.java:156) at org.apache.uima.caseditor.ui.action.DocumentActionRunnable$1.run(DocumentActionRunnable.java:132) at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:35) at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:134) ... 36 more
issueID:UIMA-1689
type:Improvement
changed files:
texts:fix some miscompares between svn export and source-distribution
It was noted in reviewing our release candidate that a diff between our source distribution and the export of the svn tag are somewhat different.  Some of these are due to the source distribution copying things like licenses, disclaimers, readmes, etc., to the top level of the source distribution - so these are fine.  Others are due to things we use in development, which are not used to build the distributions.  (example: some build scripts like signEclipseUpdateSite,  or the project uimaj-jet-expander - only used when changing the jcas gen templates and regenerating the corresponding java code, or the project uimaj-internal-tools - I think not currently used).Others are left-overs.  For instance, the docs for the PearPackagingMavenPlugin - these were merged into the main tools doc; however the old docs are still in SVN (but are not put into the source distribution).  I think I want to leave them there, because I think in the future we may be breaking out that project as a separately released item, and maybe adding to the maven tooling even...Finally, there are some things that should be fixed.  For instance, the docbook tooling downloads the FOP version.  but it also seems that we've checked into SVN some older levels of the FOP jar.  These should be removed.  Check the differences for uimaj, uima-as, and the Sandbox, and reduce the discrepancies.
issueID:UIMA-169
type:Sub-task
changed files:uimaj-tools/src/main/java/org/apache/uima/tools/components/FileSystemCollectionReader.java
uimaj-tools/src/main/java/org/apache/uima/tools/components/InlineXmlCasConsumer.java
uimaj-tools/src/main/java/org/apache/uima/tools/components/XCasWriterCasConsumer.java
uimaj-tools/src/main/java/org/apache/uima/tools/components/XmiWriterCasConsumer.java
uimaj-tools/src/main/java/org/apache/uima/tools/components/XmlDetagger.java
uimaj-tools/src/main/java/org/apache/uima/tools/components/FileSystemCollectionReader.java
uimaj-tools/src/main/java/org/apache/uima/tools/components/InlineXmlCasConsumer.java
uimaj-tools/src/main/java/org/apache/uima/tools/components/XCasWriterCasConsumer.java
uimaj-tools/src/main/java/org/apache/uima/tools/components/XmiWriterCasConsumer.java
uimaj-tools/src/main/java/org/apache/uima/tools/components/XmlDetagger.java
texts:Create separate uima-document-annotation Maven project and jar file
This is needed because the DocumentAnnotation class cannot reside in uima-core.jar if users are going to generate their own version of it.
issueID:UIMA-1690
type:Bug
changed files:uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/outline/TypeGroupedContentProvider.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/outline/ModeSensitiveContentProvider.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/outline/TypeGroupedContentProvider.java
texts:After cleaning a document the outline view does not sync
After cleaning a document the outline view still contains annotations, but they should be removed. It seems that the implementation of the changed() method in the document listener is incorrect.
issueID:UIMA-1691
type:Improvement
changed files:
texts:change checkout to export in extract and build scripts
There's no need to keep svn tracking locally when doing builds.  This will make things go slightly faster.
issueID:UIMA-1692
type:Bug
changed files:
texts:add missing license headers to .project files etc. in uimaj-eclipse-... projects

issueID:UIMA-1693
type:Bug
changed files:
texts:Pear installer: logger config not found when running pear installer
I installed the 2.3-RC5 Eclipse tooling, imported the examples projects and tried to run the pear installer via the preconfigured pear installer launch configuration.  This results in the exception below.  The same does not happen when the pear installer is started via the .bat file.  Pear installation works regardless, so this is minor and should not hold up 2.3.java.io.FileNotFoundException: \config\Logger.properties (The system cannot find the path specified.) at java.io.FileInputStream.open(Native Method) at java.io.FileInputStream.<init>(FileInputStream.java:112) at java.io.FileInputStream.<init>(FileInputStream.java:72) at java.util.logging.LogManager.readConfiguration(LogManager.java:459) at java.util.logging.LogManager$3.run(LogManager.java:221) at java.security.AccessController.doPrivileged(AccessController.java:202) at java.util.logging.LogManager.<clinit>(LogManager.java:207)
issueID:UIMA-1694
type:Bug
changed files:
texts:Error &#39;scm url cannot be null&#39; on uimaj POM
When launching 'mvn -Dmaven.repo.local=/tmp/uimaj-rc5 clean install' for testing the new 2.3.0-rc5, an error 'scm url cannot be null' on uimaj POM comes out
issueID:UIMA-1695
type:Improvement
changed files:uimaj-core/src/main/java/org/apache/uima/util/CasCreationUtils.java
texts:Eclipse tooling: CDE fully instantiates components of aggregates, resulting in OutOfMemory issues
When I create an aggregate descriptor from several installed pears (e.g., WS tokenizer, tagger & regex), the CDE creates an OOM situation on Eclipse 3.5 and Sun Java 6 on windows.  This seems to be due to the fact that the CDE fully instantiates delegate components to get at their metadata.  Is this really necessary?  We keep all our metadata in xml specifically so we don't have to do this.
issueID:UIMA-1696
type:Bug
changed files:
texts:Fix log messages in UIMA AS aggregate
Aggregate should swap arguments when logging certain messages. There are a few messages where the key in a property file expects delegate key but the code places CAS id and where the CAS id is expected the code places delegate key.
issueID:UIMA-1698
type:Bug
changed files:
texts:Colocated service shows a wrong count for number of messages processed
Colocated service' reply queue JMX stats dont show getMeta reply message. The count is off by one for number of messages sent to the client. It appears that the Executor code is not incrementing the dequeCount correctly.
issueID:UIMA-1699
type:Bug
changed files:
texts:UIMA-AS start broker appears to hang - but maybe a logging issue (RC6)
Running the bringup tests with RC6 - the logging appears to be not working properly.bin/startBroker.sh appears to hang.  But it is actually running ( both on Linux and Windows ) - as indicated by trying the sample in section 3.4 of the README for UIMA-AS.The "log" specified in the log4j configuration is created, but is empty.
issueID:UIMA-170
type:Sub-task
changed files:
texts:Update documentation for the use of JCAS with DocumentAnnotation
Documentation should explain that if the user adds features to DocumentAnnotation then they should omit uima-document-annotation.jar from their classpath and use their own generated class instead.The documentation should explain that using this feature will result in more work for people who are attempting to assemble annotators togther into aggregates, in particular that they may need to be willing and have the know-how to re-run JCasGen over the merged type system.
issueID:UIMA-1700
type:Improvement
changed files:
texts:copy LIC/NOT files to top level for UIMA-AS
The License and Notice files for uima-as are under some directories - need to be easily findable at the top level.
issueID:UIMA-1701
type:Bug
changed files:
texts:dd2spring script fails
The script was not changed to use the new jarpath runner, so it just calls setUimaClassPath , which is no longer modified by uima-as installation.  So it doesn't get any of the new uima-as jars.  While here, check for any other scripts that need updating.
issueID:UIMA-1702
type:Bug
changed files:
texts:Service fails to start when the broker of one of its delegates is missing
Repeated logs on the console and in 5 activemq.log files:INFO  efaultMessageListenerContainer - Could not refresh JMS Connection - retrying in 5 msjavax.jms.JMSException: Could not connect to broker URL: tcp://gale-iod.basistech.com:8002. Reason: java.net.ConnectException: Connection refused: connectThe error handling of <getMetadataErrors maxRetries="0" timeout="60000" errorAction="disable"/>is not applied ... aggregate service never initializes.  Deployed via -d option of runRemoteAsyncAE
issueID:UIMA-1703
type:Bug
changed files:
texts:UIMA AS service uses the same log4j.properties file as the AMQ broker
Same log4j.properties file is used by AMQ broker started from startBroker script and by UIMA AS service. The UIMA AS service startup script sets this property -Dlog4j.configuration=file:c:\uima\releases\2.3.0-07\apache-uima\as_config\log4j.propertiesit is picked up by AMQ and Spring and used for logging. The same log4j.properties file is copied from as_config directory to UIMA_HOME/bin/amq/config when startBroker script is started for the first time. So, the same configuration is used by two different processes. This doesnt seem right. We most likely need different log4j.properties for each process since each of them needs to log at different level. For example, the broker needs to be started with INFO level logging to show status information on broker startup. Logging at INFO level when UIMA AS service starts may lead to excessive messages being logged. An instance of this is when a broker is killed  when a service is running. The broker failure forces listeners to reconnect using Spring's blocking call. This call produces log msgs at INFO level at 5 sec intervals. The fix would be to use a different property files. UIMA AS should use a basic configuration with a single log of say 100MB size and should log at WARNING level only.
issueID:UIMA-1704
type:Bug
changed files:
texts:UIMA AS aggregate doesnt handle service broker restart
If a delegate service broker is restarted, the aggregate client doesnt attempt to recreate a listener to a temp reply queue. This may cause a hang or a timeout in the aggregate client. In this scenario there are two brokers: one managing aggregate service queue and a second that manages delegate service temp reply queue. When the latter is restarted, the dispatch code does not attempt to create a new listener. The aggregate code should detect a failure of the broker, mark a delegate as FAILED and kill the listener. On subsequent CAS request, the aggregate should attempt to create a new listener and a new JMS Connection to a broker. Failure to re-establish the connection is subject to error handling as defined in deployment descriptor Process error configuration for the delegate.
issueID:UIMA-1705
type:Bug
changed files:
texts:UIMA AS client fails when service broker is restarted
If an application creates multiple instances of UIMA AS client, each connected to a different service, a broker restart is not handled correctly.Only one instance of a client re-initializes correctly and handles the re-connect. Remaining client instances still use stale broker connection. When a connection failure is detected, the client code enters a loop trying to recover the connection. Once recovered, a singleton SharedConnection object is initialized with a new Connection, message listeners of all clients are restarted on new temp reply queues but MessageProducers are not re-initialized. Modify code that detects connection failure to invalidate MessageProducer in each client. Also, add code to detect invalid MessageProducer and force creation of a new instance using new Connection object.
issueID:UIMA-1706
type:Bug
changed files:
texts:UIMA AS Camel driver should handle broker connection lost correctly
In the case of a broker connection lost the system might hang, because it is waiting for outstanding CASes which willnever return, because after reconnecting to the broker the old temp reply queue cannot be accessed anymore.When the system receives a BrokerConnectionException all outstanding CASes should be reported as failed.
issueID:UIMA-1707
type:Bug
changed files:
texts:String features in out-of-typesystem data not normalized on service replies
Christoph Büscher  to uima-userI currently encountered a problem with the XMI deserialization of a feature structure after calling a remote C++ AS annotator from a CPE. The szenario is the following:1. I add a custom feature structure "DocumentData" containing an String Feature (the document URL) to the CAS in my CPE. The exact URL causing the problem is:documentURL="http://www.gesundheitsnachrichten.net/live/navigation/live.php?navigation_id=11&_psmand=1"2. The CAS get's serialized to XMI before sending it to a remote C++ TAE. I added a breakpoint to UimaSerializer.serializeCasToXmi() and get the following part in the XMI string:documentURL="http://www.gesundheitsnachrichten.net/live/navigation/live.php?navigation_id=11&_psmand=1"So here the "&" character seems to be excaped correctly.3. When the document comes back, the same feature in the XMI string received in UimaSerializer.deserializeCasFromXmi() reads:documentURL="http://www.gesundheitsnachrichten.net/live/navigation/live.php?navigation_id=11&_psmand=1"an now the SAXParser throws the following exception:org.xml.sax.SAXParseException: The reference to entity "_psmand" must end with the ';' delimiter.       at org.apache.xerces.parsers.AbstractSAXParser.parse(Unknown Source)       at org.apache.uima.aae.UimaSerializer.deserializeCasFromXmi(UimaSerializer.java:170)       at ...because the "&" comes back unescaped.-----------------------------------Christoph Büscher to uima-userI did some further testing and the problem seems to happen when the FS is notdeclared in the remote C++ TAE but declared and set in an AE in the (lokal) main application (in out case a CPE running various Java AEs).------------------------------------------Nice work Christoph!
issueID:UIMA-1708
type:Bug
changed files:
texts:Trailing blank following log property level causing problems with IBM Java 6
Well, you'll have trouble believing this one.  We had a logging issue which we finally isolated to only failing on IBM Java 6, not on IBM Java5 or on Sun Javas.  The issue was that the setting of the logger, done by uncommenting the last line in the distributed Logger.properties file (it's in uimaj-distr, /src/main/properties/Logger.properties) is written as &#35; To set the logging level for the UIMA framework itself, specify:&#35; org.apache.uima.level = ALL where there is a "blank" following the word "ALL".The properties file is read using the Properties.load method, which preserves that trailing blank.  This makes the setting for the level not compare equal to any of the defined levels.  In most other Java impls, the value of the level is "trimmed" before the compare, but not in IBM's Java 6 SR 3 impl.You can see this for yourself, with a tiny test case:  public static void main(String[] args) {    Logger log = Logger.getLogger("org.apache.uima");    log.log(Level.FINEST, "Test");    log.log(Level.INFO, "info");  }Set up a logger.properties file with the org.apache.uima level setting at FINEST with a trailing blank, and try on the various Javas...Fix for now: change our default properties file to remove the trailing blank on the commented-out line.
issueID:UIMA-1709
type:Bug
changed files:
texts:Modify log4j.properties file used by ActiveMQ broker to restore location of the log file
Restore log4j.properties file in as_config directory to its original state. This file is now exclusively used by ActiveMQ. Change the location of a log file to  ${activemq.base}/activemq-data/activemq.log. The placeholder is set in the startBroker script.
issueID:UIMA-171
type:Improvement
changed files:uimaj-tools/src/main/java/org/apache/uima/tools/cvd/CVD.java
uimaj-tools/src/main/java/org/apache/uima/tools/cvd/CVD.java
texts:Make CVD look-and-feel configurable

issueID:UIMA-1710
type:Bug
changed files:
texts:All projects should fail if not compiled with at least maven 2.2.0
Right now the build fails if uimaj is build with a maven version prior 2.2.0, but it does not fail in other projects.If a maven version prior 2.2.0 is used the build should fail with the invalid version error message inall projects, instead of:&#91;INFO&#93; Error configuring: org.apache.maven.plugins:maven-antrun-plugin. Reason: java.lang.NoSuchMethodError: org.apache.tools.ant.util.FileUtils.close(Ljava/io/InputStream;)V
issueID:UIMA-1712
type:Bug
changed files:
texts:Finalize typesystem only when top level aggregate is ready
a UIMA AS service will finalize its typesystem incorrectly if 1. it is an AS-async-aggregate containing a colocated delegate which is itself an async aggregate, AND 2. the colocated async aggregate finishes initialization before one of the other top level delegates, AND 3. the late top level delegate has new types or new type priorities.This can result in initialization errors if a type priority or AE initialization method references a missing type or feature, or an exception later in process() doing the same.The bug is caused because the typesystem is finalized when any colocated async aggregate finishesinitialization.
issueID:UIMA-1713
type:Bug
changed files:
texts:Java and UIMA things holding on to objects loaded via Resource Manager fail when switching to another Resource Manager class loader instance
JNDI and JMX both use "system-wide" "registries" of objects.  These objects, for uima-as, can be loaded from a Resource Manager in cases where the uima-as classes are on the Resource Manager's classpath.  A use case where this can occur is a UIMA aggregate containg 2 PEAR descriptors, each having a potentially different version of uima-as in the PEAR's classpath, being used as a client to a remote uima-as service.  (Note that the uima-as client for this is represented in UIMA as a "custom resource specifier", so this use case can also apply to future "custom resources".)The system-wide registries for JNDI and JMX use a string handle to locate objects, and cache found objects in the registry.  The first use loads the object, using the class loader in effect at the place where the lookup is requested.  For uima-as being used as a custom resource, the class loader used is the UIMA class loader associated with the current resource manager.If, subsequently, another resource manager instance (actually, another class loader instance within the UIMA resource manager) is used to run the uima-as classes, the lookups by name for objects in these registries will succeed, but will return objects that were loaded under a different class loader.  This causes ClassCastExceptions, because the superclasses / interfaces used in the currently running code (running under the 2nd classloader) no longer are the superclasses / interfaces of the objects retrieved under the 1st classloader.See http://markmail.org/message/2r5coddmuuprucyk for discussion of this issue in the context of running the Configuration Descriptor Editor (CDE).
issueID:UIMA-1714
type:Bug
changed files:uimaj-core/src/main/java/org/apache/uima/internal/util/I18nUtil.java
uimaj-core/src/main/java/org/apache/uima/internal/util/MsgLocalizationClassLoader.java
texts:Message Bundles not visible when loaded under a UIMA Resource Manager class loader
UIMA-AS has message bundles.  When uima-as classes are loaded under a resource manager class loader, the message bundle is not visible when logging occurs.
issueID:UIMA-1715
type:Bug
changed files:
texts:uima-as client design contract for insuring proper cleanup not supported by core UIMA
The uima-as jms client design contract is to call "stop" after a call to "initialize", in order to clean up sockets, etc.  However, base uima code has methods that call initialize just get client metadata, e.g.,  CasCreationUtilities.getMetaDataList, which are general purpose and are supposed to work for any analysis engine resource.I think the jms client should figure out how to clean up after itself.  Using finalize for this is not a good idea, for the standard reasons (see end of article http://java.sun.com/developer/technicalArticles/javase/finalization/ ).  Perhaps we need to call destroy after the call to produceResource, and insure that destroy is implemented by JmsAnalysisEngineServiceAdapter (and others) to release/cleanup
issueID:UIMA-1716
type:Bug
changed files:
texts:UIMA Sandbox components in tag 2.2.2 are 2.3.0-SNAPSHOT
All the POMs in the UIMA Sandbox tag 2.2.2-incubating claim that they are 2.3.0-incubating-SNAPSHOT. I know that tags should not be changed, but I would still vote for fixing those versions and also have them depend on UIMA 2.2.2-incubating if possible. Obviously Marshall Schor has changed this after the tagging as part of UIMA-1461 in revision 798670, which unfortunately lacks any explanation.
issueID:UIMA-1717
type:Wish
changed files:
texts:Use Apache Hudson and Nexus repository facilities
The ASF seems to provide a continuous integration facility (c.f. http://wiki.apache.org/general/Hudson), as well as a Nexus Maven artifact repository (c.f. http://wiki.apache.org/portals/FrontPage/HowtoUseNexusForRelease). It would be great if UIMA would make use of these facilities, allowing for better testing as well as access to fresh snapshot artifacts. It would hopefully also facilitate things for people compiling UIMA or the UIMA sandbox on their private Hudson instances.
issueID:UIMA-1718
type:Bug
changed files:uimaj-core/src/main/java/org/apache/uima/analysis_engine/impl/PrimitiveAnalysisEngine_impl.java
texts:The UIMA core code fails to unlock a CAS if there is an exception in CasMultiplier&#39;s next() or hasNext() methods
If there is an exception in user's Cas Multiplier hasNext() or next() method, the framework does not unlock the input CAS. If an application attempts to reset a CAS that failed in above methods, the following is produced: CASAdminException: Can't flush CAS, flushing is disabled.Modify AnalysisComponentCasIterator (an inner class of PrimitiveAnalysisEngine_impl) to call ((CASImpl)mInputCas).restoreClassLoaderUnlockCas();in both hasNext() and next() while handling an exception thrown from user's code.
issueID:UIMA-1719
type:Improvement
changed files:
texts:update copyright and pub dates to 2010
Update the copyright/notice files and pub dates.
issueID:UIMA-172
type:Task
changed files:
texts:Status page needs updating
For the quarterly board report, the instructions include checking the project's incubation Status file is up to date.  Ours has several problems:1) broken links to our website2) wrong URL for our wiki (link works, though)3) Jira reference link missing4) Incubation status reports - nothing is here.  Should these be links to something?Other projects put their status html input in various places   &#8211; some on wiki pages  &#8211; some in their SVN repository eg.  ... /Status  &#8211; some in their SVN repository for the web-siteMaybe we should do the last?
issueID:UIMA-1721
type:Bug
changed files:
texts:Missing link in UIMA AS Camel Component documentation
The link to Writing Components is missing.
issueID:UIMA-1722
type:Improvement
changed files:uimaj-core/src/main/java/org/apache/uima/resource/impl/ResourceManager_impl.java
uimaj-core/src/main/java/org/apache/uima/util/CasCreationUtils.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/MultiPageEditor.java
texts:CDE is very slow to open an aggregate containing a remote UIMA-AS component
I have an aggregate containing 3 remote UIMA-AS components.  It takes about a minute (maybe more) to open this in the CDE, which makes it very cumbersome to use.
issueID:UIMA-1723
type:Bug
changed files:
texts:Error Handling of UIMA AS service is not working when Timeout occurs and error handling action=Continue
When a process timeout occurs on a remote delegate whose error handling action says Continue, the ErrorHandler fails to send a CAS to the process() method to allow the CAS to continue on with the flow. Instead, it marks the CAS as failed, notifies a client with an exception, and finally drops the CAS.
issueID:UIMA-1724
type:Bug
changed files:
texts:UIMA AS service uses wrong Broker URL when handling replies to a client
When handling replies, UIMA AS service uses broker URL that was provided by the client in a request message instead of using a Broker that manages service's input queue. Reply queues are always created in the same broker that manages the service queue.
issueID:UIMA-1725
type:New Feature
changed files:
texts:UIMA AS should provide a way to change the Process Timeout dynamically
There is a need to provide a finer level of control over the Process Timeout setting. Currently, UIMA AS client's Process Timeout defaults to 60 secs and can be overriden by an application during initialization of the client. Once set, it remains the same for the duration of the client. There is no way to change it in the middle of the run. Some applications may need to adjust the timeout on per CAS basis. The same functionality (dynamically controlled timeout) may also be useful for UIMA AS services. The exact mechanism for implementing this new feature is up for debate. For UIMA AS client, perhaps a new client API can be added to change the timeout value. The application would change the timeout, call send ( synchronous or asynchronous), and change the timeout value back to what it was when the reply is received. Another approach would be to add the timeout value to the CAS and have the UIMA AS client check for it before forwarding the CAS to a service. Yet another approach would be JMX, although this seems cumbersome.
issueID:UIMA-1726
type:Bug
changed files:
texts:Long GC causes UIMA AS service to loose broker connection and marks the client as dead
When the JVMs GC takes a long time, the UIMA AS fails to validate the broker connection and proceeds to close it as if the broker died. It seems that the long GC freezes the jvm and prevents the low level socket pinging to work correctly. This pinging is a mechanism by which the low level AMQ code relies upon to detect a broker failure. In this case, the broker is actually fine. The side effect of the above is that the UIMA AS service falsely adds the client to the DoNotProcess list. This is an optimization that was recently added that prevents wasting processing cycles while handling CASes that are known to have come from clients that had gone away. Each CAS origin is checked against that list and if there is a match the CAS is thrown away. It seems that we need a better mechanism to detect broker failure.
issueID:UIMA-1727
type:Bug
changed files:uimaj-cpe/src/main/java/org/apache/uima/collection/impl/cpm/engine/ArtifactProducer.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/cpm/engine/CPMEngine.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/cpm/BaseCPMImpl.java
texts:CPM doesnt validate registered CallbackListener references
The CPM uses a list of registered listeners to notify an application of certain events. The application registers listeners with the CPM before it starts the run. Apparently, the CPM doesnt validate a listener reference provided by the application and blindly adds it a list. If the reference is null, the NPE is thrown when trying to send notifications. Fix the code to validate listener reference to prevent adding null references.
issueID:UIMA-1728
type:Bug
changed files:
texts:UIMA AS Service logs falsely Stopping Collocated Delegate Cas Multiplier message
The service has one CM which creates for every CAS one new CAS and a dummy AE which throws an exception on every second CAS.It looks like that for each exception thrown from the AE.process method the stopping collocated delegate CM message is printedand logged:>>> Instance Hashcode:28681226 Controller:TestAAE Stopping Collocated Delegate Cas Multiplier:TestCMand1/25/10 1:14:51 PM - 13: org.apache.uima.aae.controller.AggregateAnalysisEngineController_impl.stopCasMultiplier: INFO: Controller: TestAAE Stopping Collocated Delegate Cas Multiplier: TestAAEThe problem might relate to the hang issue reported here:http://markmail.org/message/5dr5r3yyha4kbtlb
issueID:UIMA-1729
type:Wish
changed files:
texts:Add reference to project Behemoth from website
http://code.google.com/p/behemoth-pebble/ is an open source platform for large scale document processing which allows to deploy UIMA applications  over Hadoop.
issueID:UIMA-173
type:Improvement
changed files:uimaj-core/src/main/java/org/apache/uima/cas/CAS.java
uimaj-core/src/main/java/org/apache/uima/cas/FSIndexRepository.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FSIndexRepositoryImpl.java
uimaj-core/src/main/java/org/apache/uima/cas/CAS.java
uimaj-core/src/main/java/org/apache/uima/cas/FSIndexRepository.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FSIndexRepositoryImpl.java
texts:Create Default Bag Indexes when addFsToIndexes is called but no index has been defined for that type
The basic idea is that CAS.addFsToIndexes(FS) andIndexRepository.addFs(FS) should always add the FS to an index.  Ifno appropriate index occurs we just create a bag index.  The FS can beretrieved by using IndexRepository.getAllIndexedFS(Type).The thinking is that if an annotator bothered to try to add somethingto the indexes, there was a reason for it, and it's a whole lot betterto respect that than to just silently ignore it.Note that this doesn't cause any loss in performance if an annotatornever adds an FS to the indexes.  We still support subordinate FS thatare linked off of other FS but never indexed.More discussion here: http://www.mail-archive.com/uima-dev@incubator.apache.org/msg01132.html
issueID:UIMA-1730
type:Improvement
changed files:
texts:redo sandbox doc setup on website
Many of the sand box projects have documentation.  Make these available in a uniform way, sharing the docbook images that are common.  Update the sandbox page and the toolsServers pages, adding new components that are currently missing but are included in the sandbox release.Add released sandbox and uima-as docs to the Documentation page.
issueID:UIMA-1731
type:Bug
changed files:
texts:ResourceInitializationExceptions thrown by a deployed aggregate are only partially logged
When the XcasCollectionReader fails to init because its input directory is missing it reports the cause when run in core UIMA, i.e.Caused by: org.apache.uima.resource.ResourceInitializationException: Initialization of annotator class "com.ibm.nlp.readers.XcasCollectionReader" failed.  (Descriptor: file:/.automount/hlthome01/a/hlthome01/homes/hlthome01.3/burn/workspace/factotem/desc/pipe/readers/XcasCollectionReader.xml)Caused by: org.apache.uima.resource.ResourceInitializationException: Invalid value for parameter "InputDirectory" in component "null" &#8211; directory "xmidata" does not exist.but when deployed under UIMA-AS this detailed exception is missing ... all we get is the higher-level cause, e.g.1/30/10 10:56:15 PM - 3: org.apache.uima.aae.controller.PrimitiveAnalysisEngineController_impl.initializeAnalysisEngine: WARNING: org.apache.uima.resource.ResourceInitializationException: Initialization of annotator class "com.ibm.nlp.readers.XcasCollectionReader" failed.  (Descriptor: file:/u/burn/workspace/factotem/desc/pipe/readers/XcasCollectionReader.xml)Also, the detailed message lists the component as "null" ... the collection reader follows the example code and reports the error with:      throw new ResourceInitializationException(          ResourceConfigurationException.DIRECTORY_NOT_FOUND,          new Object[] { PARAM_INPUTDIR, this.getMetaData().getName(), directory.getPath() });How should we retrieve the component name?
issueID:UIMA-1733
type:Task
changed files:
texts:Import AlchemyAPI Annotator code inside the Sandbox
Once the SGA has been recorded we can start importing the code
issueID:UIMA-1734
type:Bug
changed files:
texts:UIMA-AS Deployment Descriptor doesn&#39;t work with Eclipse 3.4.2
There is a problem when running DDE in Eclipse 3.4.2:3.4.2 Linux - fail3.4.2 Windows - fail3.5.1 Linux OK3.5.1 Windows OK3.3.2 Windows OKLook like there are some images used by the form are missing.These images are belong to some plugins that might not be the same for Eclipse 3.4.2 and 3.5.x.---- Stack Trace -------------------eclipse.buildId=M20090211-1700java.version=1.6.0_16java.vendor=Sun Microsystems Inc.BootLoader constants: OS=win32, ARCH=x86, WS=win32, NL=en_USCommand-line arguments:  -os win32 -ws win32 -arch x86 -clean!ENTRY org.eclipse.ui.workbench.texteditor 4 0 2010-02-04 09:07:23.657!MESSAGE The 'org.eclipse.wst.jsdt.web.ui.internal.hyperlink.script.JSPJavaHyperlinkDetector' extension from plug-in 'org.eclipse.wst.jsdt.web.ui' to the 'org.eclipse.ui.workbench.texteditor.hyperlinkDetectors' extension point will be ignored because it contains invalid attributes.!ENTRY org.eclipse.ui.workbench.texteditor 4 0 2010-02-04 09:07:23.657!MESSAGE The 'org.eclipse.wst.jsdt.web.ui.internal.hyperlink.script.event.JSPJavaHyperlinkDetector' extension from plug-in 'org.eclipse.wst.jsdt.web.ui' to the 'org.eclipse.ui.workbench.texteditor.hyperlinkDetectors' extension point will be ignored because it contains invalid attributes.!ENTRY org.eclipse.ui 4 0 2010-02-04 09:07:46.388!MESSAGE Unable to create editor ID taeconfigurator.editors.MultiPageEditor: An unexpected exception was thrown.!STACK 0java.lang.NullPointerException   at org.eclipse.ui.internal.forms.widgets.FormImages$ImageIdentifier.hashCode(FormImages.java:69)   at org.eclipse.ui.internal.forms.widgets.FormImages$ComplexImageIdentifier.hashCode(FormImages.java:138)   at java.util.HashMap.get(HashMap.java:300)   at org.eclipse.ui.internal.forms.widgets.FormImages.getGradient(FormImages.java:187)   at org.eclipse.ui.internal.forms.widgets.FormHeading.updateGradientImage(FormHeading.java:868)   at org.eclipse.ui.internal.forms.widgets.FormHeading.setTextBackground(FormHeading.java:718)   at org.eclipse.ui.forms.widgets.Form.setTextBackground(Form.java:315)   at org.apache.uima.dde.internal.page.OverviewPage.createFormContent(OverviewPage.java:375)   at org.eclipse.ui.forms.editor.FormPage$1.run(FormPage.java:151)   at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:70)   at org.eclipse.ui.forms.editor.FormPage.createPartControl(FormPage.java:149)   at org.eclipse.ui.forms.editor.FormEditor.pageChange(FormEditor.java:488)   at org.apache.uima.taeconfigurator.editors.MultiPageEditor.pageChangeSuper(MultiPageEditor.java:615)   at org.apache.uima.dde.internal.DeploymentDescriptorEditor.pageChangeForCurrentEditor(DeploymentDescriptorEditor.java:308)   at org.apache.uima.taeconfigurator.editors.MultiPageEditor.pageChange(MultiPageEditor.java:1118)   at org.eclipse.ui.part.MultiPageEditorPart.setActivePage(MultiPageEditorPart.java:973)   at org.eclipse.ui.forms.editor.FormEditor.setActivePage(FormEditor.java:623)   at org.eclipse.ui.part.MultiPageEditorPart.createPartControl(MultiPageEditorPart.java:314)   at org.eclipse.ui.internal.EditorReference.createPartHelper(EditorReference.java:661)   at org.eclipse.ui.internal.EditorReference.createPart(EditorReference.java:428)   at org.eclipse.ui.internal.WorkbenchPartReference.getPart(WorkbenchPartReference.java:594)   at org.eclipse.ui.internal.EditorReference.getEditor(EditorReference.java:266)   at org.eclipse.ui.internal.WorkbenchPage.busyOpenEditorBatched(WorkbenchPage.java:2820)   at org.eclipse.ui.internal.WorkbenchPage.busyOpenEditor(WorkbenchPage.java:2729)   at org.eclipse.ui.internal.WorkbenchPage.access$11(WorkbenchPage.java:2721)   at org.eclipse.ui.internal.WorkbenchPage$10.run(WorkbenchPage.java:2673)   at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:70)   at org.eclipse.ui.internal.WorkbenchPage.openEditor(WorkbenchPage.java:2668)   at org.eclipse.ui.internal.WorkbenchPage.openEditor(WorkbenchPage.java:2652)   at org.eclipse.ui.actions.OpenWithMenu.openEditor(OpenWithMenu.java:337)   at org.eclipse.ui.actions.OpenWithMenu.access$0(OpenWithMenu.java:325)   at org.eclipse.ui.actions.OpenWithMenu$2.handleEvent(OpenWithMenu.java:187)   at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:84)   at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1003)   at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:3823)   at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3422)   at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:2384)   at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:2348)   at org.eclipse.ui.internal.Workbench.access$4(Workbench.java:2200)   at org.eclipse.ui.internal.Workbench$5.run(Workbench.java:495)   at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:288)   at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:490)   at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:149)   at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:113)   at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:193)   at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:110)   at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:79)   at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:386)   at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:179)   at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)   at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)   at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)   at java.lang.reflect.Method.invoke(Method.java:597)   at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:549)   at org.eclipse.equinox.launcher.Main.basicRun(Main.java:504)   at org.eclipse.equinox.launcher.Main.run(Main.java:1236)   at org.eclipse.equinox.launcher.Main.main(Main.java:1212)
issueID:UIMA-1735
type:Bug
changed files:
texts:Javadoc Link on Website is Broken
The "Javadoc Online" link from http://incubator.apache.org/uima/documentation.html seems to be broken.  It points at: http://incubator.apache.org/uima/downloads/releaseDocs/2.3.0-incubating/docs/api/index.html, but I get a 404 Not Found error for that URL.
issueID:UIMA-1736
type:Bug
changed files:
texts:Tutorial example - no match between text and code in 1.3.1
In "UIMA Tutorial and Developer's guide", section 1.3.1 "Combining annotators", there are references to "sentences and words" ouptuts for the TutorialDateTime annotator: for a TutorialDateTime annotator. This annotator detects dates and times (and also sentences and words) In this case, for example, we have decided to suppress the Word and Sentence annotations that are produced by the TutorialDateTime annotator. You should see that RoomNumbers, Dates, and Times are all shown but that Words and Sentences are notBut the source code provided (annotator and descriptor) does not deal with words/sentences.It seems that either the text or the code should be modified in order to make them consistent.
issueID:UIMA-1739
type:Improvement
changed files:uimaj-tools/src/main/java/org/apache/uima/tools/util/gui/FormPanel.java
texts:Modification of FormPanel&#39;s  getCaptionFromName method
I'll suggest to change the current if-then condition « if (c > 'A' && c < 'Z') » to that one « if (c >= 'A' && c <= 'Z') » found in org.apache.uima.tools.util.gui.FormPanel.getCaptionFromName(String name).
issueID:UIMA-174
type:Task
changed files:uimaj-core/src/main/java/org/apache/uima/pear/tools/InstallationController.java
uimaj-core/src/main/java/org/apache/uima/pear/tools/InstallationDescriptor.java
uimaj-core/src/main/java/org/apache/uima/pear/util/FileUtil.java
texts:Remove @author tags from Java source
Remove @author tags (usually inserted by Eclipse) to align with Apache Way of fostering community spirit
issueID:UIMA-1740
type:Bug
changed files:
texts:Mock integration tests on AlchemyAPI Annotator
Since previously the API key was already put inside the AE descriptor and now it's been removed, the URL call should be mocked to avoid tests' failure due to HTTP 403
issueID:UIMA-1741
type:Bug
changed files:
texts:Add AlchmeyAPI Annotator documentation
Generated documentation on features and use of AlchemyAPI Annotator must be provided
issueID:UIMA-1742
type:Bug
changed files:
texts:UIMA AS Aggregate not exposing number of consumer threads on its delegate&#39;s reply queues
UIMA AS Spring listener uses a single thread per delegate to handle replies. If a deployment descriptor is configured to process replies using multiple threads, the UIMA AS creates a concurrent listener with a thread pool to which the single-threaded Spring listener delegates all reply messages. This logic was added to assure that the parent CAS is always processed ahead of its children. The problem is that a JMX console shows a single JMS Consumer on a reply queue. This is correct, but the number of threads in the concurrent listener should be shown in the UIMA AS MBeans.
issueID:UIMA-1743
type:Bug
changed files:
texts:UIMA AS aggregate may hang when one of its primitive delgates fails during initialization
There is a race condition in UIMA AS that may lead to a hang while trying to stop an aggregate service with multiple primitive delegates. If one of the delegates fails during initialization and the DD says to terminate, the aggregate sends STOP event to each delegate to force clean shutdown. When a primitive is instantiating AE via produceAnalysisEngine() call and the STOP comes on another thread, the state of the service is changed to stopped. When the AE is finally initialized and produceAnalysisEngine() returns, the code does not check for service status and proceeds to call postInitialize() which spins a cleanup thread and marks the service as initialized successfully. There are two problems:1) Primitive service doesnt check if it has been stopped after produceAnalysisEngine()  returns2) In postInitialize(), the primitive service always starts a cleanup thread no matter what the status of the service is. This cleanup thread is never stopped and leads to a hang.
issueID:UIMA-1744
type:Bug
changed files:
texts:Remove generated local path comments inside AlchemyAPI Annotator FeatureStructures
remove /** ... /Users/... */ comments inside FeatureStructures generated by JCasGen inside AlchemyAPI Annotator
issueID:UIMA-1745
type:Bug
changed files:
texts:Wrong name in TextLanguageDetectionAEDescriptor
name inside TextLanguageDetectionAEDescriptor.xml descriptor of AlchemyAPIAnnotator refers to TextCategorizationAEDescriptor
issueID:UIMA-1746
type:Bug
changed files:uimaj-core/src/main/java/org/apache/uima/pear/util/FileUtil.java
uimaj-core/src/main/java/org/apache/uima/util/XMLInputSource.java
texts:Lock with org.apache.uima.utils.XmlInputSource (uimaj-core)
See: http://uima.markmail.org/thread/4h7ljnaz26v4jiclXmlInputSource.close() locks the JARs where a JARUrlConnection is used. This bug is described in the SUN bug database: http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=4386865To fix that we only have to insert the following lines before each 'URL.openStream()' call:     URLConnection urlConnection = mURL.openConnection();    if(urlConnection instanceof JarURLConnection)     {        ((JarURLConnection) mURL.openConnection()).setDefaultUseCaches(false);    }
issueID:UIMA-1747
type:Bug
changed files:
texts:TikaAnnotator: null pointer exception in MarkupHandler.populateCAS
I get the following NPE.java.lang.NullPointerException at org.apache.uima.cas.impl.CASImpl.createFS(CASImpl.java:474) at org.apache.uima.tika.MarkupHandler.populateCAS(MarkupHandler.java:168) at org.apache.uima.tika.TIKAWrapper.populateCASfromURL(TIKAWrapper.java:105) at org.apache.uima.tika.FileSystemCollectionReader.getNext(FileSystemCollectionReader.java:99) at org.apache.uima.collection.impl.cpm.engine.ArtifactProducer.readNext(ArtifactProducer.java:494) at org.apache.uima.collection.impl.cpm.engine.ArtifactProducer.run(ArtifactProducer.java:711)
issueID:UIMA-1748
type:Bug
changed files:
texts:BSFAnnotator fails tests
All tests fail saying it can't locate files such as TEST.bsh.
issueID:UIMA-1749
type:Improvement
changed files:
texts:UIMA AS uses one instance of a Serializer object
There is a single instance of a Deserializer object processing incoming CASes and also a single instance of a Serializer object processing outgoing CASes. This may bottleneck UIMA AS Service when handling large CASes and multiple threads are processing incoming and outgoing CASes. It would be more efficient to create and dedicate an instance of a Serializer/Deserializer to each processing thread so that multiple CASes cas be serialized/deserialized at the same time.
issueID:UIMA-175
type:Task
changed files:
texts:Website build instructions for docbook need to direct users to the README.FIRST file

issueID:UIMA-1750
type:Bug
changed files:
texts:Tutorial and Developers&#39; Guides: setActionOnMaxError
In "UIMA Tutorial and Developer's guide", section 3.3.2 "Configuring a Collection Processing Engine Descriptor Programmatically", the example code contains a repetition of the setActionOnMaxError method call://Continue, despite errors and skip bad CaspersonTitleProcessor.setActionOnMaxError("terminate");...//  Define and add CAS ConsumerCpeIntegratedCasProcessor consumerProcessor = CpeDescriptorFactory.produceCasProcessor("Printer");consumerProcessor.setDescriptor([descriptor]);//Define batch sizeconsumerProcessor.setBatchSize(100);//Terminate CPE on max errorspersonTitleProcessor.setActionOnMaxError("terminate");The first instance seems wrongly commented, while the second wrongly placed.
issueID:UIMA-1751
type:Bug
changed files:
texts:Fix NPE while looking up MessageProducer
ActiveMQMessageSender throws NPE in getMessageProducer() sometimes when the UIMA AS client is stopping. A race condition seems to be the cause. A thread doing a send tries to dereference engine object after the engine was forced to stop.
issueID:UIMA-1752
type:New Feature
changed files:
texts:Fisheye for Repository
Setup a Fisheye source code search and browser for the repository.This would be useful to new people to the project for locating classes, example code and packages. It is free for open source projects and ActiveMQ has one setup already.
issueID:UIMA-1753
type:Bug
changed files:
texts:XmiCasSerializer passes null for an attribute&#39;s URI and localName
XmiCasSerializer.XmiCasDocSerializer has this method:      private void addAttribute(AttributesImpl attrs, String attrName, String attrValue) {          attrs.addAttribute(null, null, attrName, cdataType, attrValue);      } This causes a NullPointerException in some ContentHandlers (such as those for EXI from Siemens and AgileDelta).The JavaDoc says to pass an empty String for these parameters when you don't have a good value for them.So the line should be changed to:    attrs.addAttribute("", "", attrName, cdataType, attrValue); I tested that change with the AgileDelta ContentHandler, and it no longer threw any exceptions.
issueID:UIMA-1754
type:Bug
changed files:
texts:Incorrect description of getCAS() method in UIMA AS documentation
Chapter 4.2 The UimaAsynchronousEngine Interface describes UIMA AS client interface. Its description of getCAS() tells the reader to call reset() or release() on the CAS before calling getCAS() again. This is wrong when the client application uses an async style of sending CASes using sendCAS() method. When using async calls, the framework actually releases a CAS after the user's listener callback completes. The code calls release() if the user callback is not provided. The only time when the user's code must call release() or reset() is when the synchronous calls are made via sendAndReceive(). In this style of invocation, the framework does not call release() nor reset() and it is user's responsibility to do so.
issueID:UIMA-1755
type:Task
changed files:
texts:Improve Maven build
Do this work in a branch (mavenAlign), because it is extensive and may take some time to get it working the way people want it to work.Improve the maven build with the goal of making it more aligned with the "maven way", being simpler, and following Apache conventions.Subtasks will track individual parts of this.
issueID:UIMA-1756
type:Sub-task
changed files:uimaj-core/src/main/java/org/apache/uima/cas/Marker.java
uimaj-core/src/main/java/org/apache/uima/flow/SimpleStepWithResultSpec.java
uimaj-core/src/main/java/org/apache/uima/uimacpp/UimacppAnalysisComponent.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/metadata/cpe/CpeDescriptorFactory.java
uimaj-core/src/main/java/org/apache/uima/InternationalizedException.java
uimaj-core/src/main/java/org/apache/uima/collection/metadata/CasProcessorMaxRestarts.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/XmiCasDeserializer.java
uimaj-core/src/main/java/org/apache/uima/util/XmlCasSerializer.java
uimaj-core/src/main/java/org/apache/uima/flow/SimpleStep.java
uimaj-core/src/main/java/org/apache/uima/collection/metadata/CpeSofaMappings.java
uimaj-core/src/main/java/org/apache/uima/util/XMLParser.java
uimaj-core/src/main/java/org/apache/uima/cas/CAS.java
uimaj-core/src/main/java/org/apache/uima/search/IndexBuildSpecification.java
uimaj-core/src/main/java/org/apache/uima/util/InstrumentationFacility.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/asb/ASB.java
uimaj-core/src/main/java/org/apache/uima/util/CasCopier.java
uimaj-core/src/main/java/org/apache/uima/resource/ResourceCreationSpecifier.java
uimaj-core/src/main/java/org/apache/uima/cas/FeatureStructure.java
uima-docbook-references/src/docbook/images/references/ref.javadocs/image002.jpg
uimaj-core/src/main/java/org/apache/uima/collection/metadata/CpeCollectionReaderIterator.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/XmiCasSerializer.java
uimaj-core/src/main/java/org/apache/uima/search/Style.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/cpm/engine/CPMChunkTimeoutException.java
uimaj-core/src/main/java/org/apache/uima/cas/FSBooleanConstraint.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/AnalysisEngine.java
uimaj-core/src/main/java/org/apache/uima/pear/tools/InstallationController.java
uimaj-core/src/main/java/org/apache/uima/UimaContextAdmin.java
uimaj-core/src/main/java/org/apache/uima/collection/metadata/CpeSofaMapping.java
uimaj-core/src/main/java/org/apache/uima/flow/ParallelStep.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/XmiSerializationSharedData.java
uimaj-core/src/main/java/org/apache/uima/util/CasCreationUtils.java
uima-docbook-references/src/docbook/ref.javadocs.xml
uimaj-core/src/main/java/org/apache/uima/analysis_engine/AnalysisEngineServiceStub.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/AnalysisEngineDescription.java
uimaj-core/src/main/java/org/apache/uima/UIMAFramework.java
uimaj-core/src/main/java/org/apache/uima/jcas/JCas.java
uimaj-core/src/main/java/org/apache/uima/resource/CasManager.java
texts:Maven-align: POM work
1) eliminate need for any individual project checkout to depend on another project being checked out simultaneously.  This includes:  switching to docbkx maven plugin instead of our own docbook tooling (see other subtask) using maven-remote-resources plugin for including common, shared things, rather than referring to other projects (see other subtask) use POM dependencies from the repositories2) make POMs inherit from Apache master POM.3)  separate parent poms from aggregation poms.4) make POMs inherit from Apache common POM5) make parent poms separately releasable, using the apache/maven convention for version numbering (single digit).6) position aggregator poms in the conventional position (not flat structure) to enable some plugins (assembly and release) to function better.
issueID:UIMA-1757
type:Sub-task
changed files:
texts:use docbkx to create docbooks in place of current docbook tools project
1) align target dir structures with the way docbkx conventionally does this2) update docbooks to 4.4 from 4.5 DTD (4.5 not in maven repo, 5.0 is, but may require more changes)3) write parent pom for docbkx4) change poms doing docbook to add docbkx in the pre-site phase5) figure out olink database strategy - this should probably be remote resources, pulled in via maven dependencies (i.e., when a docbook links to another one, it has a dependency on that other docbook's olink database).
issueID:UIMA-1758
type:Sub-task
changed files:
texts:remove dependency on checked-out other projects
use maven-remote-resources plugin for including common, shared things, rather than referring to other checked-out projects
issueID:UIMA-1759
type:Sub-task
changed files:
texts:make project versioning more conventional
1) make aggregator poms distinct from parent poms2) aggregator poms to specify which version(s) of modules they are including (some may not change release to release)3) Eliminate the use of properties in values for versions  (these cause warning messages when used with maven 3 - saying this support will not work in the future)4) align project versioning with the way the maven "release " plugin works.5) make parent poms separately releasable, using the apache/maven convention for version numbering of these kinds of artifacts (e.g., simple number, starting with 1).
issueID:UIMA-176
type:Task
changed files:
texts:put apache board statuses into a page linked from our uima website and update uima project status page to reflect this
Update incubator/uima website to have an apache-board-status page.  Put old statuses there.  Update project status to point to this page. Input Jan 07 status. Change index page to ref this new page.
issueID:UIMA-1760
type:Bug
changed files:
texts:Fix AE Descriptors&#39; names
Name of AE Descriptors are wrong for:HtmlMicroformatsAEDescriptor.xmlURLMicroformatsAEDescriptor.xmlTextKeywordExtractionAEDescriptor.xml
issueID:UIMA-1761
type:Bug
changed files:uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/FindAnnotateDialog.java
texts:Cas Editor logs SWTException when the Find/Annotate dialog is closed
The Cas Editor throws a SWTException every time the find/annotate is closed.Here is the exception:org.eclipse.swt.SWTException: Widget is disposedat org.eclipse.swt.SWT.error(SWT.java:3884)at org.eclipse.swt.SWT.error(SWT.java:3799)at org.eclipse.swt.SWT.error(SWT.java:3770)at org.eclipse.swt.widgets.Widget.error(Widget.java:450)at org.eclipse.swt.widgets.Widget.checkWidget(Widget.java:388)at org.eclipse.swt.widgets.Control.setEnabled(Control.java:3643)at org.apache.uima.caseditor.editor.FindAnnotateDialog.updateAnnotationButtons(FindAnnotateDialog.java:267)at org.apache.uima.caseditor.editor.FindAnnotateDialog.buttonPressed(FindAnnotateDialog.java:426)at org.eclipse.jface.dialogs.Dialog$2.widgetSelected(Dialog.java:624)at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:228)at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:84)at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1176)at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:3493)at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3112)at org.eclipse.jface.window.Window.runEventLoop(Window.java:825)at org.eclipse.jface.window.Window.open(Window.java:801)at org.apache.uima.caseditor.editor.FindAnnotateAction.run(FindAnnotateAction.java:47)at org.eclipse.jface.action.Action.runWithEvent(Action.java:498)at org.eclipse.ui.commands.ActionHandler.execute(ActionHandler.java:185)at org.eclipse.ui.internal.handlers.LegacyHandlerWrapper.execute(LegacyHandlerWrapper.java:109)at org.eclipse.core.commands.Command.executeWithChecks(Command.java:476)at org.eclipse.core.commands.ParameterizedCommand.executeWithChecks(ParameterizedCommand.java:508)at org.eclipse.ui.internal.handlers.HandlerService.executeCommand(HandlerService.java:169)at org.eclipse.ui.internal.keys.WorkbenchKeyboard.executeCommand(WorkbenchKeyboard.java:470)at org.eclipse.ui.internal.keys.WorkbenchKeyboard.press(WorkbenchKeyboard.java:824)at org.eclipse.ui.internal.keys.WorkbenchKeyboard.processKeyEvent(WorkbenchKeyboard.java:880)at org.eclipse.ui.internal.keys.WorkbenchKeyboard.filterKeySequenceBindings(WorkbenchKeyboard.java:569)at org.eclipse.ui.internal.keys.WorkbenchKeyboard.access$3(WorkbenchKeyboard.java:510)at org.eclipse.ui.internal.keys.WorkbenchKeyboard$KeyDownFilter.handleEvent(WorkbenchKeyboard.java:125)at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:84)at org.eclipse.swt.widgets.Display.filterEvent(Display.java:1467)at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1175)at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1200)at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1185)at org.eclipse.swt.widgets.Widget.sendKeyEvent(Widget.java:1212)at org.eclipse.swt.widgets.Widget.gtk_key_press_event(Widget.java:706)at org.eclipse.swt.widgets.Control.gtk_key_press_event(Control.java:2837)at org.eclipse.swt.widgets.Composite.gtk_key_press_event(Composite.java:703)at org.eclipse.swt.widgets.Widget.windowProc(Widget.java:1570)at org.eclipse.swt.widgets.Control.windowProc(Control.java:4586)at org.eclipse.swt.widgets.Display.windowProc(Display.java:4191)at org.eclipse.swt.internal.gtk.OS._gtk_main_do_event(Native Method)at org.eclipse.swt.internal.gtk.OS.gtk_main_do_event(OS.java:7586)at org.eclipse.swt.widgets.Display.eventProc(Display.java:1185)at org.eclipse.swt.internal.gtk.OS._g_main_context_iteration(Native Method)at org.eclipse.swt.internal.gtk.OS.g_main_context_iteration(OS.java:1858)at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3110)at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:2405)at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:2369)at org.eclipse.ui.internal.Workbench.access$4(Workbench.java:2221)at org.eclipse.ui.internal.Workbench$5.run(Workbench.java:500)at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:332)at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:493)at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:149)at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:113)at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:194)at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:110)at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:79)at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:368)at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:179)at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)at java.lang.reflect.Method.invoke(Method.java:597)at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:559)at org.eclipse.equinox.launcher.Main.basicRun(Main.java:514)at org.eclipse.equinox.launcher.Main.run(Main.java:1311)at org.eclipse.equinox.launcher.Main.main(Main.java:1287)
issueID:UIMA-1762
type:Task
changed files:
texts:TLP migration tasks
1) move website:  on people, do checkout of uima/site/trunk/uima-website/docs into /www/uima.apache.orgThe command to do this :cd /www/uima.apache.orgsvn checkout http://svn.apache.org/repos/asf/uima/site/trunk/uima-website/docs .   <<<-note trailing period here...2) Notify MarkMail, GMane (any others?) of mailing list name changes3) remove incubation disclaimer everywhere4) update Jira notification to dev@uima.a.o, sent-from for Jira notifications, and the Jira UIMA project URL. (first 2 have to be done by Infra).
issueID:UIMA-1763
type:Sub-task
changed files:
texts:Switch to using Nexus for releasing
Do whatever modifications are needed and document process for releasing and using snapshots via Nexus.See what the Maven Project is using to understand what needs to be done.http://maven.apache.org/developers/release/releasing.htmlApache Portals added this info to the basic release info, for using Nexus:  http://wiki.apache.org/portals/FrontPage/HowtoUseNexusForReleasehttp://maven.apache.org/developers/committer-settings.htmlThere is also the staging documentation in the Nexus book:http://www.sonatype.com/books/nexus-book/reference/staging.html
issueID:UIMA-1764
type:Bug
changed files:
texts:Wrong behavior of the annotation index subiterator
I noticed a strange behavior of the annotation index subiterator inuimaj 2.2.2 and 2.3.0.Consider the sentence: 'Testing the UIMA-Framework'with tokens: 'Testing' 'the' 'UIMA-Framework'and the named entity: 'UIMA'The type priorities list NamedEntity on top of the Token type.If I call the Token subiterator for the NamedEntity 'UIMA' withstrict=false, I get an empty result. According to the docs, thedefinition of Tokens contained in the NamendEntity is in thestrict=false setting defined as:  annot.getBegin() <= b.getBegin() <= annot.getEnd()for NamedEntity annot and Token b. This is true for 'UIMA' and'UIMA-Framework', but the subiterator is empty.If I change the NamedEntity to ' UIMA' (including the preceeding space),then it works correctly, and the Token 'UIMA-Framework' is contained inthe subiterator.I appended a simple java class with all needed files to demonstrate theproblem. Any ideas?
issueID:UIMA-1765
type:Sub-task
changed files:
texts:"Apache UIMA Source Code" site links to old svn location
The links to subversion are pointing to the old incubator repository location. All links should be updated to the new TLP location.
issueID:UIMA-1766
type:Bug
changed files:
texts:Fix Memory Leak in UIMA AS Service
When running an Aggregate with a colocated Cas Multiplier per CAS statistics are not being removed from a Map maintained by the Cas Multiplier service. As more CASes are sent to the CM, instances of ServicePerformance object are added to the Map and never removed leading to a memory leak and eventual OOM error.
issueID:UIMA-1768
type:Improvement
changed files:
texts:bundle build failing for cas editor due to maybe wrong eclipse dependency
When I build using my m2eclipse environment, I get a report that the dependency for <groupId>org.eclipse.swt</groupId><artifactId>org.eclipse.swt.win32.win32.x86</artifactId>and<groupId>org.eclipse.ui</groupId><artifactId>views</artifactId>both of which specify version <version>[3.3.0.0,4.0.0)</version>can't be resolved, because there isn't any version that matches in the repositories.  If I change the lower bound to 3.2.0 - it works.The eclipse stuff seems to be in the repo1.maven.org/eclipse/org/eclipse ... etc. and if you look there, there are only the 3.2.0 and 3.2.1 versions, which is why changing this to 3.2.0 as the lower bound makes it work.Is this ok to change?
issueID:UIMA-1769
type:Improvement
changed files:
texts:Document on uima website maven design and use

issueID:UIMA-177
type:Improvement
changed files:uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/MultiPageEditor.java
uimaj-tools/src/main/java/org/apache/uima/tools/jcasgen/Jg.java
texts:JCasGen should notify user when "type merging" has occurred
In light of the issues with composability of annotators that use JCas combined with "type merging" (using different definitions of the same type, with different feature sets), we should add a notification to JCasGen and the CDE whenever type merging is detected.  The user should be warned that what they are doing may negatively impact the composability of their annotator.Can we get this in for 2.1?
issueID:UIMA-1770
type:Bug
changed files:
texts:UIMA AS Aggregate Client sends FreeCas requests to a wrong broker
When a remote Cas Multiplier input queue is managed by a different broker than its aggregate client's input queue, requests to free CAS are sent to a wrong broker. The aggregate client attempts to send it to a broker that manages its input queue instead of the broker that manages the CM queues. The result of this attempt is an exception:4/23/10 4:52:37 PM - 51: org.apache.uima.adapter.jms.activemq.JmsEndpointConnection_impl.send: WARNING: javax.jms.InvalidDestinationException: Cannot publish to a deleted Destination: temp-queue://ID:bj-55263-1272055444334-0:2:1 at org.apache.activemq.ActiveMQSession.send(ActiveMQSession.java:1597) at org.apache.activemq.ActiveMQMessageProducer.send(ActiveMQMessageProducer.java:227) at org.apache.activemq.ActiveMQMessageProducerSupport.send(ActiveMQMessageProducerSupport.java:300) at org.apache.uima.adapter.jms.activemq.JmsEndpointConnection_impl.send(JmsEndpointConnection_impl.java:552) at org.apache.uima.adapter.jms.activemq.JmsOutputChannel.sendRequest(JmsOutputChannel.java:564) at org.apache.uima.aae.controller.AggregateAnalysisEngineController_impl.finalStep(AggregateAnalysisEngineController_impl.java:1758) at org.apache.uima.aae.controller.AggregateAnalysisEngineController_impl.executeFlowStep(AggregateAnalysisEngineController_impl.java:2172) at org.apache.uima.aae.controller.AggregateAnalysisEngineController_impl.process(AggregateAnalysisEngineController_impl.java:1206) at org.apache.uima.aae.handler.HandlerBase.invokeProcess(HandlerBase.java:118) at org.apache.uima.aae.handler.input.ProcessResponseHandler.cancelTimerAndProcess(ProcessResponseHandler.java:109) at org.apache.uima.aae.handler.input.ProcessResponseHandler.handleProcessResponseWithCASReference(ProcessResponseHandler.java:381) at org.apache.uima.aae.handler.input.ProcessResponseHandler.handle(ProcessResponseHandler.java:645) at org.apache.uima.aae.handler.HandlerBase.delegate(HandlerBase.java:149) at org.apache.uima.aae.handler.input.ProcessRequestHandler_impl.handle(ProcessRequestHandler_impl.java:987) at org.apache.uima.aae.spi.transport.vm.UimaVmMessageListener.onMessage(UimaVmMessageListener.java:107) at org.apache.uima.aae.spi.transport.vm.UimaVmMessageDispatcher$1.run(UimaVmMessageDispatcher.java:70) at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886) at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908) at java.lang.Thread.run(Thread.java:619)Since the Free Cas requests are never delivered to a Cas Multiplier, the entire system hangs due to exhausted Cas Pool in the CM.
issueID:UIMA-1771
type:Bug
changed files:uimaj-core/src/main/java/org/apache/uima/util/CasToInlineXml.java
texts:CasToInlineXml truncates attributes
org.apache.uima.util.CasToInlineXml has a hard coded limit of 64 characters for attribute values.  This makes inline xml suitable only for debugging, and the documentation contains no warning to this effect.Given that this component is part of uima-core (and not just example code) I would expect such pitfalls to be at least documented.  A better solution would be to make the truncating optional/configurable, so that inline xml could be used as a basis for further processing outside UIMA.
issueID:UIMA-1772
type:Bug
changed files:
texts:Fix UIMA AS Aggregate Log Entry When Executing Flow Controller step
An entry in the UIMA Log has arguments reversed. It shows CAS id for delegate and delegate key for the CAS Id for log message key: UIMAEE_next_step__FINEST
issueID:UIMA-1773
type:Bug
changed files:
texts:UIMA AS aggregate not handling mis-configured FlowController
If a flow controller is misconfigured with a wrong AE key, the Uima AS aggregate is not handling an invalid step object (null) returned from the flow controller's next() method. In executeFlowStep() the aggregate code checks for three types of objects: SimpleStep, ParallelStep, and FinalStep. There is no default section to handle invalid type of Step object. This leads to a lost CAS and may eventually cause a hang due to exhausted CAS pool. The current code never transitions a CAS to the finalStep and subsequent release causing eventual hang.
issueID:UIMA-1774
type:Bug
changed files:uimaj-core/src/main/java/org/apache/uima/cas/impl/CASImpl.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/SofaFSImpl.java
texts:CAS.setSofaDataArray(ArrayFS) does not work for StringArrayFS
setSofaDataArray is intended to support all ArrayFS types except for FSArray and BooleanArray.
issueID:UIMA-1775
type:Improvement
changed files:
texts:TLP Graduation incubator tidying up
Remove from incubator reporting schedule - already done (by Jukka Zitting 4/2010) Update Projects in Incubation table - move to graduated Remove entry from right side panel on incubator website Tidy the project status page After release as non-incubator, removing current incubator releases (will still be available in archive) and updating uima download page to reflect this. Verifying that confluence commit msgs are going to the right mailing list (dev@uima.apache.org)
issueID:UIMA-1776
type:Improvement
changed files:
texts:broken / bad links for docbook-generated sandbox docs, and PearPackagingMavenPlugin on website
The links need to be updated for 2.3.0.  The PearPackagingMavenPlugin doc was moved into the main tools doc, but the link on the website points to the 2.2.2 version of the tools doc, which doesn't have the content.
issueID:UIMA-1778
type:Improvement
changed files:
texts:improve Javadocs by eliminating Javadoc warnings
Fix warnings repoted by Javadoc utility.  Examples a @param is not a parameter name @return tag has no arguments @return used in method declaring void as return
issueID:UIMA-1779
type:Improvement
changed files:
texts:UimaAsynchronousEngine should have javadoc for constants
The interface should have javadoc for the static final fields used to configure uima-as. In my case I am especially interested in the difference between CasPoolSize and ShadowCasPoolSize.
issueID:UIMA-178
type:Improvement
changed files:uimaj-tools/src/main/java/org/apache/uima/tools/cvd/FSNode.java
uimaj-tools/src/main/java/org/apache/uima/tools/cvd/MainFrame.java
uimaj-tools/src/main/java/org/apache/uima/tools/cvd/StringFsPopupEventAdapter.java
uimaj-tools/src/main/java/org/apache/uima/tools/cvd/FSNode.java
uimaj-tools/src/main/java/org/apache/uima/tools/cvd/MainFrame.java
uimaj-tools/src/main/java/org/apache/uima/tools/cvd/StringFsPopupEventAdapter.java
uimaj-tools/src/main/java/org/apache/uima/tools/cvd/FSNode.java
texts:CVD can not display long string values
When very long strings (thousands of characters) are used as feature values, those strings take an extremely long time to display in the FS display.  This is in particular a problem with Sofas, as the complete document text is referenced from the Sofa FS.
issueID:UIMA-1780
type:Bug
changed files:
texts:Some cross refs in PDFs missing
While converting ConceptMapper to docbkx, I noticed that some cross refs in the PDF output were missing (they were present and worked in the HTML output).  Eventually traced this to what looks like a long standing bug in the Docbook XSL style sheets for PDF output.  I've posted a bug report to the Docbook project to get this fixed.  Meanwhile, this Jira covers implementing the fix as a local customization.
issueID:UIMA-1781
type:Bug
changed files:
texts:UIMA AS Client sends a CPC request too soon
The scenario that leads to the problem involves an application that sends multiple CASes. Immediately after sending each CAS, the application sends a CPC. So the sequence is: CAS1 - CPC - CAS2 - CPC - CASn - CPC.When UIMA AS client times out waiting for a CAS reply from a service it marks a service as timed out. If a an application sends another CAS, the UIMA AS client detects the state of the service as timed out, sends a GetMeta Ping to a service and places the CAS on a pending list. The control is than returned to the application. If the application calls collectionProcessComplete() method, the UIMA AS client, while still waiting for GetMeta Ping reply,  sends a CPC request to a service. When the GetMeta Ping reply finally arrives, the UIMA AS client sends a CAS from a pending list to a service. In this scenario, the CPC ends up in the service queue ahead of a CAS. This is a wrong behaviour. The UIMA AS client should not send a CPC while still waiting for GetMeta Ping reply and certainly not before a pending CAS is sent.
issueID:UIMA-1782
type:Improvement
changed files:uimaj-ep-cas-editor-ide/src/main/java/org/apache/uima/caseditor/ide/wizards/ImportDocumentWizard.java
uimaj-ep-cas-editor-ide/src/main/java/org/apache/uima/caseditor/ide/wizards/ImportDocumentWizardPage.java
uimaj-ep-cas-editor-ide/src/main/java/org/apache/uima/caseditor/ide/wizards/DocumentImportStructureProvider.java
uimaj-ep-cas-editor-ide/src/main/java/org/apache/uima/caseditor/ide/wizards/DocumentImportStructureProvider.java
uimaj-ep-cas-editor-ide/src/main/java/org/apache/uima/caseditor/ide/wizards/ImportDocumentWizard.java
uimaj-ep-cas-editor-ide/src/main/java/org/apache/uima/caseditor/ide/wizards/ImportDocumentWizardPage.java
texts:Encoding of text files during import should be confugurable
During import of text files into a corpus it seems to be impossible to control the encoding used. Looks like the default platform encoding is used (Latin 1 on Western Windows systems). The Eclipse default encoding settings for text files don't seem to affect import encoding. That makes it impossible to import documents with international characters in UTF8.Ideally the encoding should be selectable in a drop down field in the import wizard.
issueID:UIMA-1783
type:Improvement
changed files:
texts:Documentation should be improved
The current CasEditor documentation is far to short to allow people a smooth start. We have been using the CasEditor a lot over the last year but were forced to write and maintain a "Getting Started" guide ourselves to work around this. Even after more than a year of working with it I still have not figured out how to get "Processors" to work.Unfortunately the editor is not self-explanatory and the lack of documentation is slowing adoption. One key point we noted for new users is the lack of mouse/context-menu equivalents for the most important functions (add/delete/edit annotations). Of course nobody will use them in the long run but that is where people look for the function. And that is also where the keyboard shortcut could be advertised.I think a sample project is crucial for better adoption (there is already a JIRA issue for that).I am attaching a PDF with the startup guide for our users. That is by no means perfect and some of it's content is covered by existing documentation. But it still may be helpful.
issueID:UIMA-1784
type:Improvement
changed files:
texts:CAS serialization format should be configurable at import time
Some of our older tools for precsion/recall etc still only work with the XCAS format.The  CasEditor is pretty flexible with regard to allowing mixing of xcas and xmi cas documents in a corpus. The one point where the support for "legacy" xcas corpora could be improved would be at import.A check box that would allow to select the target format (XCAS or XMI-CAS) would be very helpful.
issueID:UIMA-1785
type:Improvement
changed files:uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/AnnotationEditor.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/action/DeleteFeatureStructureAction.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/AnnotationEditor.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/AnnotationEditor.java
texts:Add context menu support for most important editing functions
The Cas Editor right now does not offer context menu support for most important editing functions, these are only available via keyboard shortcuts which works fine for experienced users but makes it difficult for new users to get started. The context menu should also help new users to learn about the keyboard shortcuts.The editor context menu should have additional the following items:Annotate (Shift + Enter)Quick Annotate (Enter)Delete Annotation (Del)
issueID:UIMA-1786
type:Bug
changed files:
texts:UIMA AS aggregate CM hangs due to client not sending Free Cas Request
The UIMA AS client is not handling expired CASes coming from a Cas Multiplier aggregate.The scenario leading to a problem is as follows:The aggregate CM is configured with a single thread in a listener processing Process and CPC requests. The client is configured to timeout before the service sends a child CAS. The client is configured with no CPC timeout.UIMA AS client sends a CAS to an aggregate CasMultiplier which takes a long time to process (or there is a long GC). Before any child CASes are sent to a client, the client times out and sends a CPC. A bit later, the aggregate CM sends a child CAS. The client receives the CAS and finds that its parent CAS has expired. The client logs a message and ignores the CAS. The client is NOT sending the free Cas request to the aggregate CM, causing the aggregate to hang waiting for all of its CASes to be processed. Since the Free CAS never comes, the aggregate internal state is never updated and the thread processing the CPC is stuck (hangs). Modify UIMA AS client code to always send free cas request to a CM service.
issueID:UIMA-1787
type:Bug
changed files:uimaj-ep-cas-editor-ide/src/main/java/org/apache/uima/caseditor/ide/wizards/DocumentImportStructureProvider.java
uimaj-ep-cas-editor-ide/src/main/java/org/apache/uima/caseditor/ide/wizards/ImportDocumentWizard.java
texts:Import document wizard must display a meaningful error message
The document import wizard display right now in the case of an error an error dialog which does not contain any error message, just anempty space is displayed.The error dialog should of course contain a meaningful error message.
issueID:UIMA-1788
type:Bug
changed files:
texts:Two dashes in a row in pom comment raise maven error
Although it's perfectly good xml, apparently, we can't have two dashes in a row (--) in a pom.xml comment.
issueID:UIMA-1789
type:Improvement
changed files:
texts:deployAsyncService script should use -XX:+HeapDumpOnOutOfMemoryError
In case a user application needs to much memory an OuOfMemoryError stops the UIMA AS service. It wouldbe nice if the VM would just dump the memory for further analysis and stops afterwards.For a sun vm this can be achieved with this command line option:-XX:+HeapDumpOnOutOfMemoryErrorCan this be done in our script, does it also work with other VMs ?
issueID:UIMA-179
type:Improvement
changed files:uimaj-core/src/main/java/org/apache/uima/jcas/JFSIndexRepository.java
uimaj-core/src/main/java/org/apache/uima/jcas/impl/JFSIndexRepositoryImpl.java
texts:Need method JFSIndexRepository.getAllIndexedFS(type)
In 2.0 we added FSIndexRepository.getAllIndexedFS(Type) which is a way for users to get access to all indexed instances of a type without knowing the index label.  The equivalent should be added to JFSIndexRepository as well.  This is important for the "default bag indexes" to be usable, because the user will not be aware of the index label in this case.
issueID:UIMA-1791
type:Bug
changed files:
texts:UIMA AS logs Timeouts at INFO level instead of WARNING
Modify UIMA AS to log timeouts at WARNING level instead of INFO
issueID:UIMA-1792
type:Bug
changed files:
texts:UIMA AS dumps debug messages to stdout
UIMA AS dumps debug message like this to stdout:Client Received ServiceInfo Notification from CAS Multiplier For CAS:Review the code to remove writing debug msgs to stdout
issueID:UIMA-1793
type:Improvement
changed files:uimaj-tools/src/main/java/org/apache/uima/tools/jcasgen/Jg.java
uimaj-tools/src/main/java/org/apache/uima/tools/jcasgen/Jg.java
texts:jcasgen: load the descriptor from the classpath
Hi,I would like to propose a small patch to the Jg class (org.apache.uima.tools.jcasgen.Jg). At the moment it is only possible to generate the source code for the typesystem when the corresponding descriptor file is located somewhere on your disk. I have the use case, where I want the typesystem descriptor to be contained inside a (company wide) jar. That means, I need to load the typesystem descriptor from the classpath.The attached patch adds a little bit of extra info to the "-jcasgeninput" parameter ind the "main1" method. If the value starts with "classpath:" the patch will try to look for everything after "classpath:" with its ClassLoader. If the ClassLoader can find the resource and the "outputDirectory" is not null, everything works. If the ClassLoader cannot find the resource, the corresponding error is generated.If the "-jcasgeninput" parameter does not start with "classpath:" everything works as before, only that the file is being converted to an URL instance that is given to the XMLInputSource object.What I am not sure about it the use of the "xmlSourceFileName" member variable and what it should contain if the descriptor is loaded from the classpath. Actually I don't even know what this variable does...I have not found any unittest for this class. So the code is tested with my maven mojo and works as expected. If anyone can provide me with more info about how to test the Eclipse plugin I could also test this, but I certainly need help there...Any comments? BestDaniel
issueID:UIMA-1794
type:New Feature
changed files:
texts:Add error handling option for UIMA AS services accessed by core UIMA
A core UIMA analysis engine has no error handling. Exceptions are passed back to the caller. Remote services accessed from a core aggregate AE add a timeout option which will generate a timeout exception.Marshall has a scenario where a scaled out UIMA aggregate AE running as a hadoop mapper has a remote delegate. This delegate is implemented as a UIMA AS service, accessed via a JMS client descriptor. In extremely rare cases the remote service takes too long to finish processing.In order for the hadoop job to complete successfully, Marshall would like a "continue on failure" option, where after a timeout the error is ignored and the original CAS sent to the remote service is used to continue processing in the core UIMA aggregate. This option is easy to implement with UIMA AS services, because a copy of the outstanding CAS is held by the client.The syntax would be to add an optional argument to the JMS client descriptor, e.g.<parameter name="ignore_process_errors" value="true"/>
issueID:UIMA-1795
type:Bug
changed files:
texts:mode=csv in parameter list but not implemented
The variable servletPOSTParameters includes "csv" as possible value for the "mode" option, and it thus appears on the documentation page, but this option is not actually implemented.It was removed from the html form two years ago (see https://issues.apache.org/jira/browse/UIMA-1004 ), but remained in the parameter list.
issueID:UIMA-1796
type:Improvement
changed files:
texts:Automate inclusion in release notes of Jira issues
Current release process has a manual step to generate the release note which is done by generating a Jira report of issues fixed in a particular release, and copying it into a set of release notes at the end.  The overall release note typically looks like:A brief descriptionsAn overview of major changes for this releaseMigration information from previous releasesHow to get involvedHow to report issuesList of Jira's fixed (generated)Figure out how to automate the list of Jira's.  A possibility: use the maven changes plugin
issueID:UIMA-1797
type:Bug
changed files:
texts:UIMA AS processParentLast logic is not working correctly
UIMA AS aggregate fails with NPE when using multiple CMs  configured with processParentLast=true. The aggregate throws this:java.lang.NullPointerException        at org.apache.uima.aae.controller.AggregateAnalysisEngineController_impl.forceToDropTheCas(AggregateAnalysisEngineController_impl.java:1822)        at org.apache.uima.aae.controller.AggregateAnalysisEngineController_impl.finalStep(AggregateAnalysisEngineController_impl.java:1624)        at org.apache.uima.aae.controller.AggregateAnalysisEngineController_impl.finalStep(AggregateAnalysisEngineController_impl.java:1714)        at org.apache.uima.aae.controller.AggregateAnalysisEngineController_impl.executeFlowStep(AggregateAnalysisEngineController_impl.java:2175)        at org.apache.uima.aae.controller.AggregateAnalysisEngineController_impl.process(AggregateAnalysisEngineController_impl.java:1207)        at org.apache.uima.aae.handler.HandlerBase.invokeProcess(HandlerBase.java:118)        at org.apache.uima.aae.handler.input.ProcessResponseHandler.cancelTimerAndProcess(ProcessResponseHandler.java:108)        at org.apache.uima.aae.handler.input.ProcessResponseHandler.handleProcessResponseWithCASReference(ProcessResponseHandler.java:383)        at org.apache.uima.aae.handler.input.ProcessResponseHandler.handle(ProcessResponseHandler.java:647)        at org.apache.uima.aae.handler.HandlerBase.delegate(HandlerBase.java:149)        at org.apache.uima.aae.handler.input.ProcessRequestHandler_impl.handle(ProcessRequestHandler_impl.java:989)        at org.apache.uima.aae.spi.transport.vm.UimaVmMessageListener.onMessage(UimaVmMessageListener.java:107)        at org.apache.uima.aae.spi.transport.vm.UimaVmMessageDispatcher$1.run(UimaVmMessageDispatcher.java:70)        at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)        at java.lang.Thread.run(Thread.java:619)It does not matter if CMs are colocated or remote. If there is more than one CM with processParentLast=true, the code fails as above. The failure seems to occur while processing parent of the last child CAS.
issueID:UIMA-1798
type:Improvement
changed files:
texts:Add exclusion of uima-cpe in uimaj-as-activemq pom
uimaj-as-activemq pom has a dependency on uimaj-examples which is dependent on uimaj-cpe, vinci and other poms which are not necessary to build uimaj-as-activemq. Add exclusion in uimaj-as-activemq pom on uimaj-examples to remove dependency on unnecessary poms
issueID:UIMA-1799
type:Improvement
changed files:
texts:UIMA AS should provide a way to increase prefetch size on a reply queue
UIMA AS currently provides no way to change prefetch size on a reply queue. A default of 1 is used. This slows down the rate of processing messages by a service. Each UIMA AS service has a dedicated submitter thread whose main job is to deliver a message to a thread pool for processing. Since the submitter thread executes very fast and the prefetch=1 , the submitter thread is constantly waiting for the Broker to deliver the next message. Increasing prefetch forces the Broker to deliver multiple messages to a service which buffers them until the submitter thread is ready. The size of the prefetch should be equal to a scalout factor defined on each reply queue. The default is still 1. NOTE: increasing prefetch effects memory requirement for the service. The larger the prefetch the more messages are buffered taking up more memory.
issueID:UIMA-18
type:Improvement
changed files:
texts:Placeholder for Architectural Cleanups / Changes
This is a place to list architectural cleanup issues.  Edit this to fix / augment.  Perhaps sub-tasks of this can be particular issues we decide are being worked on.1) Index for everything (needed for simple access to singletons) 2016 status: have auto default bag index for everything2) Simple access for singletons 2016 status: there's an add-on for this3) Deciding about Sofa names and View names, (not)having a 1-1 correspondence between sofas and views. 2016 status: sofa names and view names are treated as the same in the current design, so there's a required 1-1 correspondence between sofas and views.4) Removing/reducing type system augmentation via merging 2016 status: type system merging a core part.5) Begin able to configure remote components 2016 status: no support for this. Remote components (e.g. services) configured when they start up.  Any "parameters" that need to be passed from client to server need to be passed in the individual CAS being sent, as part of the user's design.6) Adding "session" caching for remote components 2016 status: not done, not contemplated7) Supporting operations over sets of multiple CASes with more than just external resources8) Integrating OSGi enablement
issueID:UIMA-180
type:Task
changed files:
texts:Update "What&#39;s new in Apache UIMA 2.0" section of documentation
First of all, it should be "Apache UIMA 2.1".  And right now it has a combination of things that changed from 1.x to 2.0 and things that changed from IBM UIMA 2.0 to Apache UIMA 2.1, which need to be more clearly separated.  Finally, we need to make sure that it's up to date with all the changes we've actually made.
issueID:UIMA-1800
type:Bug
changed files:
texts:UIMA AS should block msg submitter thread if a thread pool is empty
If a queue scaleout factor > 1, the UIMA AS creates a thread pool and a managing Executor object. The threads in a pool are used to process incoming messages. A submitter thread receives a jms message via a callback from Spring and delivers it to the Executor for processing in one of the threads from the pool. If a thread pool is empty, the Executor policy is to use the submitter thread to process the message. Since there is a single submitter thread (per queue) this policy slows down the submitter thread and prevents it from delivering messages for processing by other threads.Change the code to prevent the submitter thread from doing processing. Instead, block the submitter thread if the thread pool becomes empty. As soon as a thread becomes available, the submitter thread should deliver a message and wait for a callback from Spring.
issueID:UIMA-1801
type:Bug
changed files:
texts:UIMA AS Aggregate sends STOP message to colocated delegate during shutdown
While stopping, the UIMA AS aggregate sends a STOP message to its colocated delegates. This message is not acted upon and is simply dropped. Modify the aggregate code to prevent it from sending useless messages.
issueID:UIMA-1802
type:Bug
changed files:
texts:Missing of a type Entity in TextRankedEntityExtractionAEDescriptor.xml
The supported entity types of AlchemyAPI include RadioProgram and RadioStation but the TextRankedEntityExtractionAEDescriptor.xml AE descriptor contains only RadioProgram Entity in the typesystem.If i run TextRankedEntityExtractionAEDescriptor.xml to a Text contains RadioStation Entity return me an error.The solution is to create a new type RadioStation in TextRankedEntityExtractionAEDescriptor.xm
issueID:UIMA-1803
type:Bug
changed files:
texts:Reconfiguring AE causes NPE on AbstractAlchemyAnnotator
While reconfiguring an existing AE a NPE comes out caused by a null UIMAContext object that in turns is generated by the lack of the call to the super.initialize() method inside the overriding initialize()
issueID:UIMA-1804
type:Bug
changed files:
texts:cleanup uima-build-helper-maven-plugin
artifact name should match the name of the SVN folder.Change parent pom to uima's top parent pom (from maven's parent).Change version numbering to correspond to other build artifacts (1-SNAPSHOT)
issueID:UIMA-1805
type:Bug
changed files:
texts:change aggregate for build projects version to follow version convention for those
is now 2.3.1-SNAPSHOT, should be 1-SNAPSHOT
issueID:UIMA-1806
type:Bug
changed files:
texts:fixes for releasing, in build poms
Various fixes discovered while working through the release plugin process, for the build tooling.  See individual commit logs for details
issueID:UIMA-1807
type:Bug
changed files:
texts:UIMA AS jmx monitor throws javax.management.AttributeNotFoundException while collecting stats
When initializing, the UIMA AS JMX monitor fetches and caches references to UIMA MBeans to be used later to collect stats. It seems that the CM delegate key, contained in ServiceInfoMBean is bad and subsequent JMX lookup returns an invalid proxy reference to the CM Cas Pool. The exception:java.lang.reflect.UndeclaredThrowableException at $Proxy10.getAvailableInstances(Unknown Source) at org.apache.uima.aae.jmx.monitor.JmxMonitor.collectStats(JmxMonitor.java:421) at org.apache.uima.aae.jmx.monitor.JmxMonitor.run(JmxMonitor.java:540) at java.lang.Thread.run(Thread.java:619)Caused by: javax.management.AttributeNotFoundException: No such attribute: AvailableInstances at com.sun.jmx.mbeanserver.PerInterface.getAttribute(PerInterface.java:63) at com.sun.jmx.mbeanserver.MBeanSupport.getAttribute(MBeanSupport.java:216) at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.getAttribute(DefaultMBeanServerInterceptor.java:666) at com.sun.jmx.mbeanserver.JmxMBeanServer.getAttribute(JmxMBeanServer.java:638) at javax.management.remote.rmi.RMIConnectionImpl.doOperation(RMIConnectionImpl.java:1403) at javax.management.remote.rmi.RMIConnectionImpl.access$200(RMIConnectionImpl.java:72) at javax.management.remote.rmi.RMIConnectionImpl$PrivilegedOperation.run(RMIConnectionImpl.java:1264) at javax.management.remote.rmi.RMIConnectionImpl.doPrivilegedOperation(RMIConnectionImpl.java:1359) at javax.management.remote.rmi.RMIConnectionImpl.getAttribute(RMIConnectionImpl.java:600) at sun.reflect.GeneratedMethodAccessor200.invoke(Unknown Source) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25) at java.lang.reflect.Method.invoke(Method.java:597) at sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:305) at sun.rmi.transport.Transport$1.run(Transport.java:159) at java.security.AccessController.doPrivileged(Native Method) at sun.rmi.transport.Transport.serviceCall(Transport.java:155) at sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:535) at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:790) at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:649) at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886) at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908) at java.lang.Thread.run(Thread.java:619) at sun.rmi.transport.StreamRemoteCall.exceptionReceivedFromServer(StreamRemoteCall.java:255) at sun.rmi.transport.StreamRemoteCall.executeCall(StreamRemoteCall.java:233) at sun.rmi.server.UnicastRef.invoke(UnicastRef.java:142) at com.sun.jmx.remote.internal.PRef.invoke(Unknown Source) at javax.management.remote.rmi.RMIConnectionImpl_Stub.getAttribute(Unknown Source) at javax.management.remote.rmi.RMIConnector$RemoteMBeanServerConnection.getAttribute(RMIConnector.java:878) at javax.management.MBeanServerInvocationHandler.invoke(MBeanServerInvocationHandler.java:263) ... 4 moreis logged and the CM is excluded from monitor output. This is broken since we've put in support for multiple colocated Cas Multipliers. To support that each CM is assigned a unique key to distinguish from other CMs. A UUID-like string is added to a delegate key for the CM MBean name. Delegate keys are not unique and it is possible to have more than one with the same key. However, the monitor still uses the delegate key to fetch the CM MBean but such MBean does not exist leading to the problem.
issueID:UIMA-1808
type:Bug
changed files:uimaj-ep-cas-editor-ide/src/main/java/org/apache/uima/caseditor/ide/wizards/DocumentImportStructureProvider.java
texts:Invalid constructor for String used in Cas Editor
The CAS Editor class DocumentImportStructureProvider uses a form of String constructor that is not available in Java 5.  Please set your build JVM for UIMA projects to specify Java 5, not Java 6, to catch these.
issueID:UIMA-1809
type:Bug
changed files:
texts:Docbook Olink incorrectly using project.version
The olink info is kept in 1-SNAPSHOT, but the properties specify using ${project.version}, which is the using project's version.  Change this to be 1-SNAPSHOT, and check all other uses of project.version in Build
issueID:UIMA-181
type:Task
changed files:
texts:UIMA Project Website - add drafts of project guidelines and contribution policy
Project Guidelines and Contribution Policy are referenced from the UIMA Project status page, but are missing.  Construct them by combining the best of other Apache projects info about these.
issueID:UIMA-1810
type:Bug
changed files:
texts:Website link to Subclipse installation site is out of date
On http://uima.apache.org/svn.html#checkout.using.eclipse, it says to extract the UIMA code in Eclipse to use Subclipse from http://subclipse.tigris.org/update_1.0.x. That's a very old version of Subclipse.  When I tried using it with m2eclipse, it caused my Eclipse JVM to crash!  The version from http://subclipse.tigris.org/update_1.6.x/ worked.
issueID:UIMA-1811
type:Bug
changed files:
texts:add/fix instructions for building UIMA
for the new build system
issueID:UIMA-1812
type:Task
changed files:
texts:update all poms referring to parent-pom-top version 1-SNAPSHOT to drop the -SNAPSHOT
Now that version 1 of the parent-pom-top is released, change references to use it.
issueID:UIMA-1813
type:Bug
changed files:
texts:aggregate parent pom build fails rat test
The aggregate parent pom is placed so that it includes the sub poms in its directory.  This causes sub poms which are not in the <modules> list to be scanned by RAT.There are other issues where this inclusion of sub poms makes for problems - such as Eclipse listing the poms twice in the project explorer view.Fix this by moving the aggregate-parent-pom project to be on the same directory level as all the other poms.Note: This will require that Eclipse developers delete and check out the build directory and re-import the build projects (sorry about that...)
issueID:UIMA-1814
type:Improvement
changed files:
texts:Try making release:prepare work with all build projects by adding in relative-path
Currently, release:prepare, after it rewrites the pom version to be "1" from "1-SNAPSHOT", can't find the parent poms in the set being released.  A suggestion from the maven user list is to use the <relativePath> element to help it find these.  Try this and see if it works.
issueID:UIMA-1815
type:Bug
changed files:
texts:specify release plugin version 2.0 to get support for "flat" hierarchies
The version of the release-plugin selected by the Apache common POM version 7 is 2.0-beta-9 which doesn't have the fixes needed to support "flat" hierarchies (see http://jira.codehaus.org/browse/MRELEASE-261 ).  This is fixed in 2.0, and 2.0 has been out since January 2010 (no longer in beta) - so switch to that version.
issueID:UIMA-1816
type:Task
changed files:
texts:update parent-pom-top references to version 2

issueID:UIMA-1817
type:Bug
changed files:uimaj-core/src/main/java/org/apache/uima/analysis_engine/metadata/impl/FlowControllerDeclaration_impl.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/XCASSerializer.java
uimaj-core/src/main/java/org/apache/uima/resource/metadata/impl/ConfigurationParameterDeclarations_impl.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/XmiCasSerializer.java
texts:xml namespace handling in XmiCasDocSerializer / NPE with Saxon in classpath
While experimenting with UIMA I observed a problem similar to the one already posted here: http://tinyurl.com/32spzv9. Since removing Saxon from the classpath was not an option, I found the problem to be the way namespaces are handled in org.apache.uima.cas.impl.XmiCasSerializer$XmiCasDocSerializer.First of all, the addAttribute/3 method was incorrectly passing null as uri and localName parameters. According to the javadoc, these must at least be empty strings. I added a hack to extract the localName from the qName, if available.Second, the method computeNamespaceDeclarationAttrs/1 only added namespaces as attributes, which are not honored by Saxon. I think this is correct, as the SAX2 standard states that namespaces must be declared via startPrefixMapping/2, so I added that, as well.Attached you find a patch with changes which work for me (and seem to solve the problem).
issueID:UIMA-1818
type:New Feature
changed files:
texts:Provide simple mechanism to capture all CASes input to specified delegate
The existing approach to capturing CASes sent to a component is to insert a new CAS-serializer-annotator just before it in the flow, or modify the component itself to serialize CASes. Both of these approaches require modifications to existing code and/or component descriptors, are somewhat time consuming and error prone.A much simpler approach is to just "turn on" CAS logging for a particular component using Java properties before starting the process, or to turn CAS logging on/off for an already running process using JMX operations.This issue covers using Java properties to turn on CAS logging for any delegate of an asynchronous aggregate.CAS logging would be controlled by the following properties:UIMA_CASLOG_BASE_DIRECTORY - optional; this is the directory under which other directories with XmiCas files will be created. If not specified, the processes current directory will be the base.UIMA_CASLOG_COMPONENT_ARRAY - This is a space separated list of delegates keys. If a delegate is nested inside a co-located async aggregate, the name would include the key name of the aggregate, e.g. "someAggName/someDelName". The XmiCas files will then be written into $UIMA_CASLOG_BASE_DIRECTORY/someAggName/someDelName/UIMA_CASLOG_TYPE_NAME - optional; this is the name of a FeatureStructure in the CAS containing a unique string to use the name each XmiCas file. If not specified, XmiCas file name will be NNN.xmi, where NNN is  the time in microseconds since the component was initialized.UIMA_CASLOG_FEATURE_NAME - optional unless if the TYPE_NAME is specified; this parameter gives the string feature to use. An example of type and feature names to use would be "org.apache.uima.examples.SourceDocumentInformation" and "uri".
issueID:UIMA-1819
type:Task
changed files:
texts:Update all modules to depend on version 1 of parent poms
Dependencies need to be updated to refer to version 1 of parent poms instead of 1-SNAPSHOT.  Parent poms version 1 aren't released yet, so will do this work in a branch first, and merge into trunk later.
issueID:UIMA-182
type:Sub-task
changed files:uimaj-core/src/main/java/org/apache/uima/util/CasCreationUtils.java
uimaj-core/src/main/java/org/apache/uima/util/CasCreationUtils.java
uimaj-core/src/main/java/org/apache/uima/util/CasCreationUtils.java
texts:Extend CasCreationUtils methods for type system merging to return list of types where feature-merge was required

issueID:UIMA-1820
type:Bug
changed files:
texts:UIMA AS Aggreagate reports Cas Not Found In CasManager Cache
The following exception is thrown by UIMA AS aggregate:org.apache.uima.aae.error.AsynchAEException: Cas Not Found In CasManager Cache. CasReferenceId::-701a2da0:12970a6839f:-7ffd is Invalid at org.apache.uima.aae.InProcessCache.getCacheEntryForCAS(InProcessCache.java:477) at org.apache.uima.aae.InProcessCache.getTopAncestorEndpoint(InProcessCache.java:469) at org.apache.uima.aae.controller.AggregateAnalysisEngineController_impl.getReplyEndpoint(AggregateAnalysisEngineController_impl.java:2092) at org.apache.uima.aae.controller.AggregateAnalysisEngineController_impl.replyToClient(AggregateAnalysisEngineController_impl.java:2018) at org.apache.uima.aae.controller.AggregateAnalysisEngineController_impl.finalStep(AggregateAnalysisEngineController_impl.java:1647) at org.apache.uima.aae.controller.AggregateAnalysisEngineController_impl.executeFlowStep(AggregateAnalysisEngineController_impl.java:2175) at org.apache.uima.aae.controller.AggregateAnalysisEngineController_impl.process(AggregateAnalysisEngineController_impl.java:1207) at org.apache.uima.aae.handler.HandlerBase.invokeProcess(HandlerBase.java:118) at org.apache.uima.aae.handler.input.ProcessResponseHandler.cancelTimerAndProcess(ProcessResponseHandler.java:108) at org.apache.uima.aae.handler.input.ProcessResponseHandler.handleProcessResponseWithCASReference(ProcessResponseHandler.java:383) at org.apache.uima.aae.handler.input.ProcessResponseHandler.handle(ProcessResponseHandler.java:647) at org.apache.uima.aae.handler.HandlerBase.delegate(HandlerBase.java:149) at org.apache.uima.aae.handler.input.ProcessRequestHandler_impl.handle(ProcessRequestHandler_impl.java:989) at org.apache.uima.aae.spi.transport.vm.UimaVmMessageListener.onMessage(UimaVmMessageListener.java:107) at org.apache.uima.aae.spi.transport.vm.UimaVmMessageDispatcher$1.run(UimaVmMessageDispatcher.java:70) at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886) at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908) at java.lang.Thread.run(Thread.java:619)The scenario that leads to this problem involves Top Level Aggregate Cas Multiplier with a collocated Aggregate CM delegate which contains a Primitive CM. The problem is caused by a bug in the Aggregate code that handles new CASes arriving from a nested Aggregate CM. The new CAS is added to the Top Level Aggregate LocalCache but the code is not incrementing a parent child count, resulting in a premature release of the parent in the top level aggregate. Another side effect of this is that the new CAS is not removed from a local cache if a lookup of a parent CAS fails. This leads to a hang if the application sends a CPC, since there is a CAS in the cache that is not removed but the CPC is only processed if the cache becomes empty.
issueID:UIMA-1821
type:Bug
changed files:
texts:Fix NPE in the UIMA AS client
The following NPE is thrown in the UIMA AS client:WARNING:java.lang.NullPointerException        at org.apache.uima.adapter.jms.client.BaseUIMAAsynchronousEngineCommon_impl.handleMetadataReply(BaseUIMAAsynchronousEngineCommon_impl.java:999)        at org.apache.uima.adapter.jms.client.BaseUIMAAsynchronousEngineCommon_impl.onMessage(BaseUIMAAsynchronousEngineCommon_impl.java:1678)        at org.apache.activemq.ActiveMQMessageConsumer.dispatch(ActiveMQMessageConsumer.java:1021)        at org.apache.activemq.ActiveMQSessionExecutor.dispatch(ActiveMQSessionExecutor.java:122)        at org.apache.activemq.ActiveMQSessionExecutor.iterate(ActiveMQSessionExecutor.java:192)        at org.apache.activemq.thread.PooledTaskRunner.runTask(PooledTaskRunner.java:122)        at org.apache.activemq.thread.PooledTaskRunner$1.run(PooledTaskRunner.java:43)        at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)        at java.lang.Thread.run(Thread.java:619)it seems that the application has called stop() method before a getMeta reply came back from a service. When stopping, the UIMA AS client invalidates some objects which leads to the NPE. Modify client code to check the state of the client while handling replies.
issueID:UIMA-1822
type:Bug
changed files:
texts:aggregate parent pom source-release.zip missing a directory, won&#39;t build from unzipped instance
The release:perform builds a source release.zip for the aggregate.  When unzipped, this has a directory structure that doesn't match the directory structure in SVN or the SVN checkout-working-copy; it's missing the parent-poms directory that "collects" in subdirectories all the parent pom projects.Fix this by overriding the conventions for the invocation of the assembly plugin to build the correct directory structure.
issueID:UIMA-1823
type:Task
changed files:
texts:Incrementally release build artifacts to eliminate dependencies on -SNAPSHOTs
The Maven release plugin updates versions in poms, parent -pom references, and dependencies, for things being released together at one go.  However this doesn't work for dependencies that are within the <build> element.To get around this, release things in the build in the following order, updating components as needed before each release, to depend on things officially released  preceeding them.Suggested order *uima-jar-resource-bundle  (done)*parent-pom-top (depends in build section on above)  (done 7/8/2010)Next batch (no intra-project dependencies)*uima-build-helper-maven-plugin*uima-assembly-single-project*uima-docbook-resource-bundle*parent-pom-distr*parent-pom-docbookNext batch*parent-pom-ibm-notice*parent-pom-eclispe-plugins*parent-pom-annotator*parent-pom-distrNext*parent-pom-eclipse-plugins-ibm-noticeThe parent-pom-annotator has a dependency on PearPackagingMavenPlugin.Set this to 2.3.0-incubating for now; after uimaj has its first 2.3.1 non-incubating release,update this to 2.3.1.The aggregate-parent-poms project won't be released in this cycle; it has served its purpose(letting us climb the learning curve on using the release plugin), and will be released only if it is convenient in the future to re-release a bunch of these without concern for simultaneously updating the dependency versions in the <build> sections of the sub-modules.
issueID:UIMA-1824
type:Bug
changed files:
texts:Classes are Missing for FileParser_Impl
I downloaded the sources of the UIMA Sandbox 2.3.0 addon annotators. Both, the DictionaryAnnotator and the RegularExpressionAnnotator are missing some basic classes in the import section:DictionaryAnnotator:  file: org.apache.uima.annotator.dict_annot.dictionary.impl. DictionaryFileParserImpl.java  5 missing imports: org.apache.incubator.uima.regex.*RegularExpressionAnnotator:  file: org.apache.uima.annotator.dict_annot.dictionary.impl. DictionaryFileParserImpl.java  11 missing imports: org.apache.incubator.uima.*Only in the BIN version of the Sandbox Addon with precompiled JARs the JARs contain these files (compiled). The source distribution does not and thus, does not even compile. It looks like that this is a mistake resuming from the no-longer-incubator-state of UIMA.
issueID:UIMA-1825
type:Bug
changed files:
texts:remove snapshot dependencies

issueID:UIMA-1826
type:Bug
changed files:
texts:OpenCalaisAnnotator annotations with negative begin/end
When passing some text inputs to OpenCalais service, the returned RDF has instances without begin/end and the corresponding annotations have -7 as begin/end values.
issueID:UIMA-1827
type:Bug
changed files:
texts:Build of docbooks failing - because plugin repositories don&#39;t include the snapshots
The apache common pom ( http://repo1.maven.org/maven2/org/apache/apache/7/apache-7.pom ) includes a repository for normal artifact resolution which points to the "snapshots" in repository.apache.org - the apache repo for snapshots (which is where UIMA artifact snapshots are deployed).  However, the Apache common POM assumes that you're not releasing any maven plugins.  The UIMA build tools include one maven plugin, and the uimaj toolkit include the pear-packaging-maven-plugin.  Therefore, we need to have a snapshot repo for the plugin repo.  Add the needed pluginRepositories element.
issueID:UIMA-1828
type:Bug
changed files:
texts:change maven prereq level to 3.0-beta-1
Since this level is required.
issueID:UIMA-1829
type:Bug
changed files:
texts:update poms for projects that depended on older versions of xxx-SNAPSHOT to the proper version.
update poms for projects that depended on older versions of xxx-SNAPSHOT to the proper version.  This is a released version, if that exists, or is a new xxx-SNAPSHOT version, if that supercedes the released version.  Current setup has dependencies on 1-SNAPSHOTs which no longer exist
issueID:UIMA-183
type:Improvement
changed files:uimaj-core/src/main/java/org/apache/uima/cas/CAS.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/CASImpl.java
uimaj-core/src/main/java/org/apache/uima/jcas/JFSIndexRepository.java
uimaj-core/src/main/java/org/apache/uima/jcas/impl/JFSIndexRepositoryImpl.java
texts:(CAS/JCAS).getAnnotationIndex  should declare return type AnnotationIndex
The getAnnotationIndex methods declare return type FSIndex, and require the user to do a typecast to AnnotationIndex.  Previously we were stuck with this because changing it would break binary compatibility, but now's our chance to clean it up.  The change would be source-compatible.
issueID:UIMA-1830
type:Task
changed files:
texts:update poms for projects that depend on older versions of parent-pom-top-4-SNAPSHOT to the released version.
do this work in a branch until version 4 release is approved
issueID:UIMA-1831
type:Bug
changed files:
texts:UIMA AS test deployment descriptors contain absolute paths instead of relative paths
There a few deployment descriptors used in UIMA AS extended tests that contain absolute paths to AE descriptors. Change those to use relative paths instead.
issueID:UIMA-1832
type:Task
changed files:
texts:merge depend-on-parent-pom-4 branch into trunk

issueID:UIMA-1833
type:Improvement
changed files:
texts:Create an AE for training the HMM Tagger models
There is a class to train a model for the HMM Tagger out of a corpus. However, this is a standalone application that does not take advantage of the UIMA capabilities. It would be better to train such a model thanks to an analysis engine.A training CPE would be like : 1- a collection reader loading the gold standard corpus 2- the HMM Tagger model trainer analysis engine that would browse some specific annotation, extract the material to feed the learning algorithm and finally export a model file.
issueID:UIMA-1834
type:Improvement
changed files:uimaj-core/src/main/java/org/apache/uima/impl/UIMAFramework_impl.java
uimaj-core/src/main/versionJava/org/apache/uima/impl/UimaVersion.java
texts:Automate inclusion of current release / version info in uimaj and uima-as
Both uimaj and uima-as have static Java strings identifying the release version.  These have been manually maintained.  Automate this so the right version is inserted (from the pom), and perhaps also consider including svn tag info.  Also consider whether to maintain this info at a finer grain (e.g., for each Jar), and if so, how to make it available at run time.
issueID:UIMA-1835
type:Bug
changed files:
texts:Explicit rat excludes must include release.properties
The default rat excludes has the release.properties file (a generated file created during the release process by the release plugin).  If the rat exclude list is overridden, this isn't "merged" - so be sure to include it.
issueID:UIMA-1836
type:Improvement
changed files:
texts:Add concept tagging service to alchemy-annotator
Add concept tagging service &#91;1&#93; fo alchemy-annotator.&#91;1&#93; : http://www.alchemyapi.com/api/concept/
issueID:UIMA-1837
type:Improvement
changed files:
texts:Add OSGi annotators&#39; versions
Add multi module project which uses the Apache Maven Felix Plugin to generate OSGi version of UIMA Sandbox annotators
issueID:UIMA-1838
type:Task
changed files:
texts:update poms for projects that depend on older versions of July 9 release of build tooling to the released version.
do this work in a branch until the release is approved
issueID:UIMA-1839
type:Bug
changed files:uimaj-core/src/main/java/org/apache/uima/cas/impl/CASImpl.java
texts:String-subtype features can&#39;t be set to null?
If you try to set a string-subtype feature to null, you get a NullPointerException:java.lang.NullPointerException at java.lang.String.compareTo(String.java:1167) at java.lang.String.compareTo(String.java:92) at java.util.Arrays.binarySearch0(Arrays.java:2001) at java.util.Arrays.binarySearch(Arrays.java:1943) at org.apache.uima.cas.impl.CASImpl.ll_setStringValue(CASImpl.java:3203) at org.apache.uima.cas.impl.FeatureStructureImpl.setStringValue(FeatureStructureImpl.java:130)The documentation doesn't specifically address whether this is allowed, but my intuition was that it should be.  For one thing, a string-subtype feature can have the value null when it is uninitialized, so why shouldn't I be able to explicitly set it to null?A simple way to replicate is to add the line    fs.setStringValue(stringSetFeat, null);to the test case method StringSubtypeTest.testCas()
issueID:UIMA-184
type:Improvement
changed files:uimaj-core/src/main/java/org/apache/uima/jcas/JCas.java
uimaj-core/src/main/java/org/apache/uima/jcas/impl/JCasImpl.java
texts:Add getAnnotationIndex() to JCas API, impl via forwarding to CAS
Add getAnnotationIndex() to JCas API, impl via forwarding to CAS
issueID:UIMA-1840
type:Bug
changed files:uimaj-core/src/main/java/org/apache/uima/analysis_engine/impl/PrimitiveAnalysisEngine_impl.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/impl/ResultSpecification_impl.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/impl/RsFeat.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/impl/RsFeats.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/impl/RsFullFeatNames.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/impl/RsLang.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/impl/RsLangs.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/impl/RsType.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/impl/RsTypesMap.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/impl/TypeOrFeature_impl.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/impl/compatibility/AnnotatorAdapter.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/TypeSystemImpl.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/impl/ResultSpecification_impl.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/ResultSpecification.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/impl/PrimitiveAnalysisEngine_impl.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/impl/ResultSpecification_impl.java
texts:Result Specification behavior incorrect for aggregates
For a scenario using default result specifications, if an annotator with language "x-unspecified" is included in an aggregate with a different language, say "en", any containsType method calls from the annotator will return false. This behavior is incorrect given that the annotator has declared that it will work with any language.
issueID:UIMA-1841
type:Task
changed files:
texts:update projects to depend on parent-pom-docbook version 2 (no snapshot)

issueID:UIMA-1842
type:Task
changed files:
texts:update poms to refer to released version of parent-pom: annotator, eclipse-plugins, ibm-notice and single-project

issueID:UIMA-1843
type:Task
changed files:
texts:update poms to refer to released version of parent-pom-eclipse-plugins-ibm-notice

issueID:UIMA-1844
type:Bug
changed files:
texts:add exclude for release.properties to those poms that override the default apache-rat-plugin configuration of excludes
The rat plugin by default excludes the release.properties generated file (generated by the release plugin) from its source-header-checks.  If a project, however, overrides this configuration (typically because it has other things to exclude), this default is lost.  Fix is to add this default to all sets of overriding excludes.
issueID:UIMA-1845
type:Bug
changed files:
texts:Fix sandbox-runtime-project (osgi-bundles) dependencies
Fix dependencies of each module in a way that does not require other than uimaj-ep-runtime to enable and activate the bundle
issueID:UIMA-1846
type:Bug
changed files:
texts:Correct issues around building eclipse plugins and update site
While trying to test a patch for code used in a plugin, I tried building an eclipse update site and installing it, and found several problems.1) Some "BND" bundle instructions for dealing with split packages accidently duplicated an "exclude". The newer release of the maven-bundle-plugin now treates these duplicates differently, causing an invalid Eclipse manifest to be generated, which is only discovered when you try to install from the update-site, and you get messages like: Eclipse: uimaj-ep-configurator: Descriptor Editor 2.3.1.SNAPSHOT (org.apache.uima.desceditor 2.3.1.SNAPSHOT) requires 'package !org.eclipse.jface.text 0.0.0' but it could not be found    Note the "!" in front of the package name, which is caused by the duplicate exclude entry.  2) The uimaj-ep-jcasgen plugin didn't specify the correct parent, so the maven bundle plugin wasn't properly configured.3) The uimaj-ep-runtime plugin was depending on the maven-bundle-plugin:bundle goal to embed the dependent Jars.  However, this goal is turned off (by the common parent pom) and just the ordinary maven-jar-plugin is used.  A fix to correct this by turning on the bundle goal, and turning off the jar goal, for just this project, showed up another error: the method of passing in the final build artifact name has a substitutable parameter for the version, which the maven-jar-plugin substitutes, but the maven-bundle-plugin doesn't.  To work around this, don't use the "bundle" goal, go back to using the jar goal, adding a build step that uses maven-dependency-plugin:unpack-dependencies to create the embedding.4) the feature projects (e.g. uimaj-eclipse-feature-tools) specifies the incubator urls, update these to the new locations.5) the code in the update-site project put in to automatically copy the current plugins to the target needs to rename the jars from their maven names to the names that correspond to the eclipse plugin ids and follow Eclipse conventions
issueID:UIMA-1847
type:Bug
changed files:
texts:Eclipse plugins not working with more recent version of maven-bundle-plugin
With the newer version of maven-bundle-plugin (previous release used 1.4.0, current is 2.1.0, but the parent-pom-eclipse-plugins is using 2.0.1 which was the current version when that pom was made), the generated Manifest is more detailed.  However it is broken - inside the generated MANIFEST.MF, he org.eclipse.core.runtime import is declared now with the additional clause registry=split.This affected several plugins, including in the core, the uimaj-ep-configurator, the uimaj-ep-debug, and uimaj-ep-jcasgen plugins.The result: the update site would build, and would install, however, when attempting to run the plugins, they would fail with class-not-found exceptions.The fix: it would work to go back to 1.4.0.  But a better fix is to change the instructions to handle split packages better: Add the bundle org.eclipse.core.runtime to the Require-Bundle instructions, and add its negation, (!org.eclipse.core.runtime) to the Import-Package instruction, as required by OSGi.While there, check the other negations to insure they are correct.  The Require-Bundle clause takes a bundle-id, which by convention only is often the package name.
issueID:UIMA-1848
type:Improvement
changed files:
texts:XmiCasDeserializer needs to support both nested and flat forms of XMI.
I use the XmiCasSerializer to write XMI files.  These files are read by an eclipse / EMF based application and modified.  The output is perfectly valid XMI but the file is nested not flat.  The Deserializer only reads flat, it would be very useful if it would read both flat and nested formats.I have a sample implementation if you need it.
issueID:UIMA-1849
type:Bug
changed files:
texts:Deployment file in UIMA AS extended tests uses absolute instead of relative path
Deploy_NamesAndPersonTitleRecognizer.xml in UIMA AS extended tests references descriptor file using absolute path. Replace with a relative path.
issueID:UIMA-185
type:Improvement
changed files:uimaj-core/src/main/java/org/apache/uima/jcas/cas/TOP.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/FloatList.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FeatureStructureImpl.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/SofaFSImpl.java
uimaj-core/src/main/java/org/apache/uima/jcas/impl/JCasImpl.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FSTypeConstraintImpl.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/IntegerList.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/Sofa.java
uimaj-core/src/main/java/org/apache/uima/cas/CASException.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/CASImpl.java
uimaj-core/src/main/java/org/apache/uima/cas/CASRuntimeException.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FSIndexRepositoryImpl.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/CASSerializer.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FeatureValuePathImpl.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/AnnotationTreeNodeImpl.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/FSList.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/LinearTypeOrderBuilderImpl.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/StringList.java
texts:Make CAS use same Exception concept as the rest of UIMA
The CAS for historical reasons uses a different exception localization mechanism than the rest of UIMA.  This should be changed.
issueID:UIMA-1850
type:Bug
changed files:
texts:UIMA AS process error handler incorrectly handles a CAS that arrives after a timeout
The ProcessErrorHandler drops a CAS that arrives from a delegate late (after a timeout) without first checking if the CAS has any children. This leads to NPE exception(s) and possible hangs. The code should first check if the CAS has any children being processed and if so, leave the CAS in play. The parent CAS will eventually be dropped when its last child is processed.
issueID:UIMA-1851
type:Bug
changed files:
texts:Fix UIMA AS jUnit test to generate files into uimaj-as-activemq/target/temp directory
One of the UIMA AS extended tests creates a temp directory in  uimaj-as-activemq project folder. When attempting to build the project, maven fails. One approach is to exclude the temp directory in project's pom file, but a better approach is to generate the temp directory under target where it is cleaned up when maven build runs.
issueID:UIMA-1852
type:Improvement
changed files:uimaj-examples/src/main/java/org/apache/uima/examples/cas/PersonTitleAnnotator.java
uimaj-examples/src/main/java/org/apache/uima/tutorial/ex3/TutorialDateTime.java
texts:improve examples in case where they fail to produce output due to ResultSpecifications
Several times users have been confused when they run example code for the PersonTitle annotator, or the TutorialDateTime annotator, and they see that no results were produced.  This can be due to the passed in Result Specification to the primitive annotator having some specification, and the CAS being processed having an incompatible specification.  For instance, the TutorialDateTime annotator has an output capability specification that says it can produce date time output for CASes having the language "en" or a subset (e.g., "en-us").   If the CAS coming in has no language specified (or is x-unspecified) or is a language which is not a subset of "en" (e.g., pt-br - brazilian portuguese), then that annotator can't produce output.  Sometimes users forget to specify a language, and don't realize this.  To help explain to users what is going on, have the example annotators print out a one-time message to the effect that they are not producing any output due to the result specification, and show the relevant parts of the specification, and the language coming in with the CAS.
issueID:UIMA-1853
type:Bug
changed files:uimaj-core/src/main/java/org/apache/uima/cas/impl/FeatureValuePathImpl.java
jVinci/src/main/java/org/apache/vinci/transport/vns/service/ServiceRegistry.java
uimaj-examples/src/main/java/org/apache/uima/examples/ExampleApplication.java
uimaj-examples/src/main/java/org/apache/uima/examples/SofaExampleAnnotator.java
uimaj-examples/src/main/java/org/apache/uima/tutorial/ex3/TutorialDateTime.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/impl/ResultSpecification_impl.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FeaturePathImpl.java
texts:fix some findbugs issues in uima base
Run findbugs and fix significant issues in uimaj core projects
issueID:UIMA-1854
type:Bug
changed files:
texts:fixup uima-as eclipse plugins for deployeditor and add to eclipse update site
The poms and xml files for the uima-as deploy editor (the editor, the runtime, and the "feature" project) need updating to 2.3.1 from 2.3.0-incubating, and to make use of the the build tooling.  The eclipse-update-site project needs to be updated to add these.
issueID:UIMA-1855
type:Bug
changed files:
texts:Address problems reported by Findbugs in UIMA AS
Findbugs reports lazy initialization and inconsistent synchronization and a few other minor problems.
issueID:UIMA-1856
type:Bug
changed files:
texts:Restore RunRemoteAsyncAE in UIMA AS examples to its original state
The latest fix in RunRemoteAsyncAE.java includes changes not meant to be saved. Restore the file to original state.
issueID:UIMA-1857
type:Improvement
changed files:
texts:reduce the complexity of the one-time-setup
There are 2 complexities: The patching of docbkx plugin to get it to work with 3.0 maven The install of special versions of the m2eclipse pluginFind ways to simplify or eliminate these.
issueID:UIMA-1858
type:Bug
changed files:
texts:Eclipse debug structural form not working for JCas
The structural form display for JCas in the Eclipse debugger doesn't show the structural form.
issueID:UIMA-1859
type:Bug
changed files:uimaj-core/src/main/java/org/apache/uima/util/XMLSerializer.java
uimaj-core/src/main/java/org/apache/uima/util/XMLSerializer.java
texts:XMLSerializer does not produce XML 1.1 header
If you create an XMLSerializer and set its output stream, and then call sax2xml.setOutputProperty(OutputKeys.VERSION, "1.1"), the output XML file will have an <?xml version="1.0"...> header instead of the desired version="1.1".A workaround is to call sax2xml.setOutputProperty(OutputKeys.VERSION, "1.1") before setting the output stream.Test case:    ByteArrayOutputStream baos = new ByteArrayOutputStream();    XMLSerializer sax2xml = new XMLSerializer(baos, false);    sax2xml.setOutputProperty(OutputKeys.VERSION, "1.1");    ContentHandler ch = sax2xml.getContentHandler();        ch.startDocument();    ch.startElement("","foo","foo", new AttributesImpl());    ch.endElement("", "foo", "foo");    ch.endDocument();    String xmlStr = new String(baos.toByteArray(), "UTF-8");    assertEquals("<?xml version=\"1.1\" encoding=\"UTF-8\"?><foo/>", xmlStr);
issueID:UIMA-186
type:Bug
changed files:uimaj-core/src/main/java/org/apache/uima/analysis_engine/impl/compatibility/AnnotatorAdapter.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/impl/compatibility/AnnotatorAdapter.java
texts:AnalysisEngine.setResultSpecification doesn&#39;t clear out previously cached result specification information
Problem exposed by this line in AnalysisEngine_implTest, previously commented out:    // TODO: resultSpec not supported   assertEquals(resultSpec, TestAnnotator.lastResultSpec);
issueID:UIMA-1860
type:Bug
changed files:uimaj-core/src/main/java/org/apache/uima/analysis_engine/impl/PrimitiveAnalysisEngine_impl.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/impl/ResultSpecification_impl.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/impl/RsFeat.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/impl/RsFeats.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/impl/RsFullFeatNames.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/impl/RsLang.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/impl/RsLangs.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/impl/RsType.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/impl/RsTypesMap.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/impl/TypeOrFeature_impl.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/impl/compatibility/AnnotatorAdapter.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/TypeSystemImpl.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/ResultSpecification.java
texts:ResultSpec behavior incorrect in several cases
Write more test cases examining behavior regarding type/subtype inheritance for both features and types in result specs, and language subsumption testing, using both containsType or containsFeature, with and without intersection.Issues found include: Supertype with allFeatures sets allFeatures for all subtypes.  Correct behavior: specifying allFeatures on a type should only imply allFeatures for features that are known for that type.  Features introduced only in subtypes should not be included. Serialization/deserialization ignores languages other than x-unspecified; it should support the full result-specification.  potential (future?) use case: sending result specs to remote delegates. This was due to a misinterpretation of a javadoc comment.  The getResultTypesAndFeatures() (with no arguments) previously was defined to skip any language tests when retreiving the types and features.  This is quite different from filtering only those with language x-unspecified.  Make sure any rework keeps this behavior.  That being said, the extracted types and features are missing any language information. Assume a feature F introduced in a supertype T.  A result spec T:F should be sufficient to return true for a test of T2:F, where T2 is a subtype ot T (currently returns false). The corner case where a result spec has type T with "allFeats" but type T and/or feature T:F doesn't exist in the type system - containsType("T") or containsFeature("T:F")  should return true.  Needed for backwards compatibility.
issueID:UIMA-1861
type:Bug
changed files:
texts:SnowballAnnotator needs refactoring
SnowballAnnotator is extending the deprecated JTextAnnotator_ImplBase, have some unused imports and generics should be enabled.Moreover the initialize() method fails due to the AnnotatorContext object being null when run in a 2.3.1-SNAPSHOT distribution.
issueID:UIMA-1862
type:Improvement
changed files:
texts:upgrade docbkx plugin to 2.0.11
upgrade parent-pom-docbook to use docbkx version 2.0.11 which fixes a problem we were working around by having a custom patch that all users needed to do in a one-time setup.Fix one-time setup documentation to remove this custom patch.update poms that depend on this to the new release level.release using a similar multi-staging-repos release process as was done in this previous release note: http://markmail.org/message/4ae7zb4ucmivlkaaadd doc section to the site release.xml describing the multi-staging-repos approach for build tooling.
issueID:UIMA-1863
type:Improvement
changed files:
texts:Entity annotators enhance for  AlchemyAPI Annotator
A list of improvements has been discussed on the ML: When list of available entities change on alchemyAPI site the entity annotator could throw ClassNotFoundException while using reflection to implement the corresponding type, so we should get rid of it Define a BaseEntity for entities to avoid each of them having to define the same features inside the typeSystem Implement a method to find the text spans that refer to the entity and create the corresponding Annotations (binding them to the "parent" entity)
issueID:UIMA-1864
type:Improvement
changed files:
texts:parent-pom-eclipse-plugins-ibm-notice should avoid running the build actions intended for real eclipse plugin builds
The action of building the parent poms intended to be used as super-poms in the chain above eclipse plugins should not run the parts of the poms that are intended just for the eclipse plugins.  This is done by including a special file in the parent-pom project whose presence causes the skipping of the build steps intended only for actual eclipse plugins.This file is missing for parent-pom-eclipse-plugins-ibm-notice; add it.
issueID:UIMA-1865
type:Improvement
changed files:
texts:lock down transitive dependency version for Eclipse components
Someone uploaded corrupted versions of Eclipse 3.6 artifacts to maven central today, and it broke our builds for things like eclipse plugins, which transitively reference artifacts which are being resolved to the corrupted versions.To work around this and prevent this in the future, lock down all the transitive dependencies (or at least the ones affected now), to versions which "work".
issueID:UIMA-1866
type:Bug
changed files:uimaj-tools/src/main/java/org/apache/uima/tools/cvd/MainFrame.java
uimaj-tools/src/main/java/org/apache/uima/tools/cvd/control/FileSaveAsEventHandler.java
uimaj-tools/src/main/java/org/apache/uima/tools/cvd/control/XCASSaveHandler.java
uimaj-tools/src/main/java/org/apache/uima/tools/cvd/control/XCASSaveTSHandler.java
uimaj-tools/src/main/java/org/apache/uima/tools/cvd/control/XmiCasSaveHandler.java
texts:CVD does not warn user about over-writing an existing xmi file
I use the CVD on a weekly basis for inspecting XMI files.  Every so often I select the file menu option "Write XMI CAS File" by accident when I meant to select  "Read XMI CAS File".  Unfortunately, the dialog that comes up when you select either of these options looks exactly the same except for the title which I invariably ignore.  So, I go about navigating to the file I want to open, select it, and then instead of reading it into the CVD it writes out the current contents of the CVD destroying my XMI file.  It would be really nice if it would prompt me asking "this file exists, are you sure you want to overwrite existing file?" - or something to that effect.
issueID:UIMA-1867
type:Bug
changed files:
texts:UIMA AS Cas Multiplier Not Releasing CASes On Send Failures
UIMA AS Cas Multiplier does not  release a CAS on send failures to a client. The client may have previously terminated while its input CAS was being processed. When the client dies, its temp reply queue is deleted and the Cas Multiplier is unable to deliver CASes. In such case, the Cas Multiplier detects send failure but it does not release a CAS causing eventual hang. The hang may be due to exhausted CAS pool or due to a non-empty cache while processing subsequent CPC request. The CPC is only allowed to be processed if ALL previously sent CASes are processed and the cache becomes empty.
issueID:UIMA-1868
type:Improvement
changed files:
texts:cleanup distribution assembly
The xxx-distr projects "src" distributions are only excluding the /target; they should exclude other files, such as the Eclipse .classpath, .settings, etc.The xxx-distr projects, when they build their javadocs, have the "id" of that step misspelled - it should match the spelling in the parent-pom-top in order to inherit the settings there (those settings turn off a bunch of noisy warnings that would otherwise completely obscure any real issues).
issueID:UIMA-1869
type:Improvement
changed files:
texts:Remove KEYS files from source and bin distributions
see http://markmail.org/message/sreqzlrvkjp4nbxt  KEYS files have no purpose in the distributions.
issueID:UIMA-187
type:Bug
changed files:uimaj-core/src/main/java/org/apache/uima/jcas/JCas.java
uimaj-core/src/main/java/org/apache/uima/jcas/impl/JCasImpl.java
uimaj-core/src/main/java/org/apache/uima/cas/CAS.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/CASImpl.java
texts:getSofaDataString() is documented in the manual but does not exist in the code
It's exactly equivalent to getDocumentText() but I would vote to add it for consistency.
issueID:UIMA-1870
type:Bug
changed files:
texts:fix bin distribution directory structure to match what we had before

issueID:UIMA-1871
type:Bug
changed files:
texts:UIMA AS Aggregate CAS Multiplier Not Releasing Input CAS on Collocated Delegate Failure
In this scenario a client sends CAS to UIMA AS Aggregate CM. A co-located delegate throws an exception on an input CAS. The aggregate returns an exception to the client but does not release an input CAS leading to a hang.
issueID:UIMA-1872
type:Bug
changed files:
texts:UIMA AS Primitive Service ResourceInitializationException is Silently Handled
When deploying Uima AS Primitive service, a custom ThreadFactory is used to initialize each AE instance in its own thread. Once initialized, the AE instance is pinned to its thread. Subsequent process() calls will be done in the same thread that was used to initialize an AE. An exception thrown by AE during initialization propagates all the way to the custom ThreadFactory where it is silently ignored. Three bugs here:1) The exception must be logged in the UimaAsThreadFactory.newThread() method.2) Controller's callback listener must be called to notify the listener of initialization exception 3) There is no testcase in extended test suite to expose this bug
issueID:UIMA-1873
type:Bug
changed files:
texts:jcasgenp eclipse plugin seems to be missing one dependency
Installing uima eclipse tooling into eclipse installations sometimes reports missing dependency (which can be worked around by installing emf).Add this missing dependency, so 3.5 / 3.6 versions of the provisioning system can go and download it.
issueID:UIMA-1874
type:Improvement
changed files:uimaj-core/src/main/java/org/apache/uima/UIMARuntimeException.java
uimaj-core/src/main/java/org/apache/uima/analysis_component/AnalysisComponent_ImplBase.java
texts:robustification around calling super.initialize() in annotators
add error messages to the standard base annotator classes that users extend, to cover the case where the user forgot to call super.initialize().  There are two fields that could be null if this super call isn't done.  Instead of throwing NPE when they're referenced byt he base class impl, give an informative error message.Fix the cases in our code where super.initialize() isn't called, including in our documentation.
issueID:UIMA-1875
type:New Feature
changed files:uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/ui/property/AnnotationPropertyPage.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/annotation/DrawingStyle.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/annotation/BoxDrawingStrategy.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/core/model/dotcorpus/DotCorpusSerializer.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/ui/property/EditorAnnotationPropertyPage.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/AnnotationStyle.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/AnnotationEditor.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/annotation/TagDrawingStrategy.java
texts:ability to visualize and quickly update/add values to primitive features
I spent a bit of time evaluating the CAS Editor recently and have the following suggestion.  It is common to have annotation tasks in which adding a primitive value to a annotation feature happens frequently.  Here's one common annotation task - part-of-speech tagging.  Usually, the way this task is performed is a part-of-speech tagger is run on some data and a part-of-speech tag is added as a string value to a feature of a token type.  The annotator's task is then to look at the part-of-speech tags and make sure they look right and fix the ones that aren't.  However, the only way to see the part-of-speech tag is by clicking on the token annotation in the text and view the value of the feature in the editor view.  This makes the tool really unusable for this annotation task.  What would be really nice is to be able to display the part-of-speech tags above or below the tokens so that the linguist can scan the sentence with its tags and quickly find the errors.  There are a number of other annotation tasks that have similar requirements.  For example, named entities usually have category labels which would be nice to display.  Word sense disambiguation data is also similar.
issueID:UIMA-1876
type:Improvement
changed files:
texts:Upgrade UIMA AS to a new version of ActiveMQ
UIMA AS currently uses an old version of AMQ. There have been numerous bug fixes and improvements to AMQ since v.4.1.1. Test compatibility of UIMA AS with a newer version of AMQ and modify POMs and other scripts accordingly.
issueID:UIMA-1877
type:Bug
changed files:uimaj-core/src/main/java/org/apache/uima/util/TypeSystemUtil.java
texts:TypeSystemUtil.typeSystem2TypeSystemDescription() ignores multipleReferencesAllowed
multipleReferencesAllowed=true needs to be preserved in the type system description.Thanks to Diman Karagiozov for finding this issue.
issueID:UIMA-1878
type:Bug
changed files:
texts:TikaAnnotator doesn&#39;t handle spaces in path string
If you give a value for InputDirectory that contains a space, then TikiAnnotator silently does nothing.This is because File objects are converted directly to a URL, and openStream() fails because the space character wasn't converted to %20.When this happens, the exception is ignored and the CAS text is set to "".It would be better to convert the File object to a URI and the URI to a URL.  This will convert the space character correctly.Secondly, it would be better the throw an exception rather than silently ignore it.A suggested patch is attached.
issueID:UIMA-1879
type:Bug
changed files:uimaj-tools/src/main/java/org/apache/uima/tools/components/XCasWriterCasConsumer.java
uimaj-tools/src/main/java/org/apache/uima/tools/components/XmiWriterCasConsumer.java
texts:xcaswriter and xmicaswriter not handling spaces in file path
need the uri trick to handle blanks
issueID:UIMA-188
type:Bug
changed files:
texts:AnalysisEngine_implTest incorrectly failing on PowerMac platform
The uima core AnalysEngine_implTest has this code in it:      // test that CAS Consumer ran      File outFile = JUnitExtension.getFile("CpmOutput.txt");      assertTrue(outFile.lastModified() >= startTime);On the PowerMac platform, this test fails (but not in "debug" Eclipse running !).  It fails because the lastModified() always returns 000 as the least significant digits of the time, whereas the starTime is apparantly accurate to all significant digits.Need to come up with a more robust way to determine the CAS Consumer ran.
issueID:UIMA-1880
type:Task
changed files:
texts:External Resources page should link to the OpenNLP project
The External Resources page should link to the OpenNLP website.The link to the website is: http://www.opennlp.orgThe OpenNLP team released recently the opennlp uima integration:https://sourceforge.net/projects/opennlp/forums/forum/9944/topic/3851515For everyone who is interested the integration can be downloaded here:https://sourceforge.net/projects/opennlp/files/OpenNLP%20Tools/1.4.3/
issueID:UIMA-1881
type:Task
changed files:
texts:update release notes for 2.3.1 SDK build
Also remove refs to incubation disclaimers, fix urls pointing to old incubator site
issueID:UIMA-1882
type:Bug
changed files:uimaj-core/src/main/java/org/apache/uima/cas_data/impl/CasDataToXCas.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/CasConverter.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/asb/impl/ASB_impl.java
texts:fix misc issues around release process of 2.3.1 SDK

issueID:UIMA-1883
type:Bug
changed files:
texts:UIMA shell scripts (e.g. cvd.sh) do not support space in filenames
Some UIMA shell scripts do not handle parameters to files that have spaces in their name. For example:cvd.sh -desc /some/path with spaces/desc.xmlThis command fails as the parameter file path with spaces is not escaped.Changing $* to "$@" in shell scripts fixed the issue.
issueID:UIMA-1884
type:Improvement
changed files:
texts:add @pre to set of known tags for javadoc
Many Java source files use a @pre tag in the Javadoc comment (to indicate preconditions).  The Javadoc processor issues a warning for each of these.  Add @pre to the list of allowed Javadoc tags to get rid of this warning.
issueID:UIMA-1885
type:Improvement
changed files:
texts:Allow placeholders for endpoint names in deployment descriptors
UIMA AS deployment descriptors allow ${placeholders} for brokerURL values which are resolved via Java properties, but require fixed strings for endpoint values. There are scenarios where endpoint names should also be variable; one example are tools used to drive arbitrary service queues.
issueID:UIMA-1886
type:Bug
changed files:
texts:XMI serialization incorrectly handling string feature set to an empty string
String feature set to empty string is skipped during deserialization and subsequently incorrectly appears as if the feature is not set.
issueID:UIMA-1887
type:New Feature
changed files:uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/styleview/AnnotationTypeNode.java
uimaj-ep-cas-editor-ide/src/main/java/org/apache/uima/caseditor/ide/WorkspaceResourceDialog.java
uimaj-ep-cas-editor-ide/src/main/java/org/apache/uima/caseditor/ide/DefaultCasDocumentProvider.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/DocumentUimaImpl.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/IAnnotationStyleListener.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/styleview/AnnotationStyleViewPage.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/CasDocumentProvider.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/ui/property/AnnotationPropertyPage.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/ui/property/EditorAnnotationPropertyPage.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/core/model/DefaultColors.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/AnnotationDocument.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/contextmenu/ShowAnnotationsMenu.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/styleview/AnnotationStyleView.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/AnnotationEditor.java
texts:It should be possible to open a CAS file from a non Cas Editor project
It should be possible to open a  CAS files which are inside an eclipse java project (and not an eclipse CAS Editor project) with the CAS Editor.After spending more time on the issue the plan how to implement it changed again.The previous idea of having an additional plugin for this functionality is dropped and the change is directlyintegrated into the Cas Editor plugin.There are two changes which must be performed for this issue:1. The Document Provider is extended with a custom logic to open a CAS file from a non Cas Editor Project.Its assumed that the type system is placed in a certain location, if it cannot find in this location theuser if prompted by a dialog to provide a valid type system for the CAS.This mechanism should be improved in the future to play nicely together with all other plugins wich also needaccess to a type system, like the description editors.2.The UI to configure the annotation styles must be moved to the editor and away from the Cas Editor Projecthandling code. To accomplish this the Document Provider should be responsible for accessing/modifyingthe styling information. A new view is added to the editor which can display the styling information and gives access to the annotation property dialog to modify the styling.The styling information is shared between all editors type system wide, if the style is changed in one editorits changed in all other editors which display a CAS with the same type system.The goal of this issue is to create an initial solution which can then be refined by input from users and other uima developers.
issueID:UIMA-1888
type:Bug
changed files:
texts:docbook builds missing a file
The docbook builds need to find in the local repo the file: org/apache/uima/uima-docbook-olink/1-SNAPSHOT/docbook-olink/pdf/site.xml
issueID:UIMA-1889
type:Bug
changed files:uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/ui/property/AnnotationPropertyPage.java
texts:Annotation Property Page should also show the uima.tcas.Annotation type
The mentioned type is missing and should be added to the list. The current code only retrieves the sub types of uima.tcas.Annotation and mistakenly does not add the type itself to the list.
issueID:UIMA-189
type:Bug
changed files:
texts:Maven building on *nix platforms including Mac OS X broken in several ways
There are many places where there is a specification for the "current" directory, specified as "/".  This apparently works on Windows, but on *nix it goes to the root directory.  A fix which might work is to change these to "./".The maven build is setting the permissions of the jar files strangely, maybe.  The evidence: on a Mac platform, run the build, then look at the uima-runtime plugin: unzip it using the built-in Mac tool for this.  The resulting files have permissions set as follows:-w---r-TThis makes Eclipse not able to load the jar classes.  When changed to the normal rw-rr-, Eclipse works.I have not confirmed that Maven is at fault here - it could be the unzipper program - not sure how this all works on a Mac.
issueID:UIMA-1890
type:Bug
changed files:
texts:SimpleServer does not set content-type header
The content-type header is not set which creates problems in some settings (e.g. when behind a rewriting proxy).Putting response.setHeader("content-type","text/xml") (or "text/html" depending on mode) in SimpleServerServlet.doGet/doPost seems to fix the problem.Don't know if SimpleUimaAsService is also affected.
issueID:UIMA-1891
type:Improvement
changed files:
texts:Add a set mode action to the Style View context menu
The Style View context menu should have an action which can change the mode the selected annotation.
issueID:UIMA-1892
type:Bug
changed files:uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/ui/property/AnnotationPropertyPage.java
texts:Annotation Properties dialog move layer buttons do not change the layer
The move layer buttons in the Annotation Property page do not change the layer.
issueID:UIMA-1893
type:Improvement
changed files:uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/AnnotationEditor.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/contextmenu/ModeMenu.java
texts:The mode menu of the annotation editor should mark the currently selected mode
To give the user an additional feedback about the currently selected mode should be marked in the mode menu of the editor.
issueID:UIMA-1894
type:Bug
changed files:uimaj-ep-cas-editor-ide/src/main/java/org/apache/uima/caseditor/ide/wizards/ContainerElementFilter.java
uimaj-ep-cas-editor-ide/src/main/java/org/apache/uima/caseditor/ide/wizards/ImportDocumentWizardPage.java
texts:Document import wizard should support writing a CAS to any folder.
The import wizard only supports writing a CAS into a corpus folder. Since there is no type system needed to create a CAS, the wizard should offer the possibility to write the CAS into any folder.
issueID:UIMA-1895
type:Improvement
changed files:uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/core/model/dotcorpus/DotCorpus.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/AnnotationDocument.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/AnnotationEditorPreferenceInitializer.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/AnnotationEditorPreferencePage.java
texts:Move the editor line length parameter to the editor preference page
Move the Cas Editor line length property to the editor preference page.The preference page should be created for this.
issueID:UIMA-1896
type:Bug
changed files:uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/QuickTypeSelectionDialog.java
texts:Annotate dialog is missing the uima annotation type
The dialog which pops on shift+enter is missing the uima annotation type, only subtypes are shown.Add the uima annotation type to this dialog.
issueID:UIMA-1897
type:Bug
changed files:
texts:PEAR descriptors are not recognized as annotators
A PEAR descriptor in a cas processor folder is not recognized as an annotator. This was caused byUIMA-767.To fix this issue the content handling framework should correctly identify analysis engine andpear descriptors as annotators.
issueID:UIMA-1898
type:Bug
changed files:
texts:UIMA AS not compatible with ActiveMQ 5.4.+
The latest AMQ version 5.4.+ comes with dependency on Spring Framework 3.0.+. This version of Spring contains an API change in DefaultMessageListenerContainer class.DefaultMessageListenerContainer.setTaskExecutor() parameter changed from org.springframework.core.task.TaskExecutor to java.util.concurrent.Executor. This produces java.lang.NoSuchMethodError: org/springframework/jms/listener/DefaultMessageListenerContainer.setTaskExecutor(Lorg/springframework/core/task/TaskExecutor.Change UIMA AS JMS listener code to support the new API. The code should be backwards compatible with older versions of Spring. Consider using java's Reflection to examine the class instance to call supported method.
issueID:UIMA-1899
type:Improvement
changed files:
texts:add capability to run docbook PDF generation with additional paper sizes
Restore the ability to specify the paper size for formatting PDFs.  See http://uima.markmail.org/thread/6iabgxutdhtvbmao
issueID:UIMA-190
type:Bug
changed files:uimaj-core/src/main/java/org/apache/uima/cas/impl/FSIndexRepositoryImpl.java
texts:Type priority test case failing with IBM JDK 1.5
The reason the test case fails seems to be due to the incorrect setup of the test case.  The way the test is set up, the type priority sort order is initialized more than once, resulting in erratic behavior.
issueID:UIMA-1900
type:Improvement
changed files:
texts:make parent-poms build their dependents for easier releasing
Add <modules> sections to parent-poms to have them normally build all their dependents, recursively.  This will allow easy releasing when a parent pom is updated, of all dependent parent poms.  see http://uima.markmail.org/thread/rxlt4ubvcbvyirnk
issueID:UIMA-1901
type:Improvement
changed files:
texts:upgrade to current maven plugin versions
Several maven plugins have been recently upgraded and are at full release status (not beta).  Run mvn versions, identify which ones should be upgraded, and upgrade these.
issueID:UIMA-1902
type:Bug
changed files:
texts:UIMA AS detection of missing client reply queue is not working leading to client timeouts
UIMA AS service checks for existence of a reply queue before processing an incoming request. This is done to prevent wasting cycles processing a request if it is known that the client has gone away. Current approach is based on checking broker's queue inventory for presence of a temp reply queue provided in a request msg.  The framework code uses JMX connection to a broker to perform the queue lookup. If the lookup fails, the framework concludes that the client has gone away, places the reply queue in a list of destinations known to be dead and throws away the request msg. Any subsequent msg containing the same reply queue is automatically thrown away since the destination is marked as dead. Occasionally, the JMX lookup fails even though (as reported by some users) the client is alive at the time the lookup was done. It seems that perhaps under load JMX fails, reporting false positive result ( queue not present). The failed lookup results in a dropped request msg and ultimately in a client timeout (or possible hang if the client is not using timout). Modify the implementation to stop using JMX to perform lookups. Instead, before any processing takes place, send a small msg (ACK) back to the client via JMS. If the send fails, report the problem, drop the request and wait for the next request. Also, dont add failed destination to the list of clients known to be dead. Each request should be subject to an ACK no matter what happened previously.The new approach, although generating more jms traffic, has some advantages:1) A client is immediately notified when its request has been picked by a service and is ready to be processed.2) A client "knows" which service is processing each request3) A client can use a different timeout strategy since it knows precisely when its request is ready to be processed.
issueID:UIMA-1903
type:Task
changed files:
texts:update poms to next build tools level (parent-pom-top:6)

issueID:UIMA-1904
type:Task
changed files:
texts:Trademarks: Check and update project, including website, to conform to trademark requirements
Apache has published updated guidelines for trademark compliance, here: http://www.apache.org/foundation/marks/pmcs.htmlThere is a checklist ( http://www.apache.org/foundation/marks/pmcs.html#checklist ) which has to be submitted in the quarterly project reports to the ASF board.
issueID:UIMA-1905
type:Task
changed files:
texts:update trunk poms to depend on -SNAPSHOT versions of build tooling
Implement "3b)" below:Each "release" of the build tooling takes time and effort, from several people,for doing the release, preparing test versions of our code referring to the newrelease, and testing the build tooling, and then doing an svn "merge" of theupdated parent-pom references to pick up the new versions, back into the trunk.I would like to reduce this .  Here's a proposal:Update the current projects in UIMA that use these build tools, to depend onthat previous SNAPSHOT, instead of depending on "released" versions. This will create a "problem" when releasing the projects that use these: projects, when released, cannot depend on snapshots.  To overcome this, at thetime we release, say uimaj-sdk project, do one of the following:3a) Change the build tooling for parent-pom-dist to include a <modules><module>that specifies the uimaj-distr project, and then do the release from theparent-pom-top.  This will release the build tooling, plus all the items inuimaj-distr, together. Downside of this: it introduces a cross SVN-checkout directory dependency,because the <module> must have some kind of relative reference from a "build"checkout (working directory A, say), and the uimaj SDK checkout (workingdirectory B, for instance).  It also requires that, after releasing, we updateparent-pom-distr to remove the <modules> section.3b) When it's time to release, release the build tooling, like we do now, andbefore closing the Nexus staging repo, also release the uimaj-distr projects. Release will complain that there are "still" snapshot poms, but according tohttp://jira.codehaus.org/browse/MRELEASE-583 (which is included in the set ofthings included in the 2.1 version, which we're now using) the release pluginwill let you change these to release levels, as part of the release:prepareprocess.With this approach, we can fiddle the build tooling as much as we need to whilegetting a release to "go", and then release things.
issueID:UIMA-1907
type:Improvement
changed files:
texts:drop distr source release, use instead the standard source zip release
The release process currently builds two "source release"s.  One is ours, the other is the standard,maven-built one, which is more-or-less guaranteed to match an svn checkout.Our source release does some special things:1) it sets executable bits.  One might argue this is needed only in the /bin distr.2) it copies stuff in uimaj-distr/src/main/readme to the "top level".  Files copied include the LICENSE/NOTICE, RELEASE_NOTES, README, and some command scripts to manipulate the sources.The custom src file adds a directory Eclipse, which has an Eclipse "launcher"that runs the packageAllJavaSourcesIntoJar command.  This might be droppable,because our releases will now have the java sources for each project "attached"in the maven sense, so if m2eclipse is being used, the sources should be fetchedautomatically when needed.The custom src file is also missing the DEPENDENCIES file, and is also missing 2of the 3 aggregate- projects.Do what is needed to make the standard source-release.zip build serve as the source distribution.
issueID:UIMA-1908
type:Bug
changed files:
texts:Bogus empty relativePath from parent section in various POMs
I have notived that a number of POMs in uimaj trunk and in the sandbox contain empty relativePath elements. These seem to profoundly confuse the m2eclipse plugin. I can see no reason why these empty elements should be present. Do they serve any particular purpose? Otherwise I would suggest they be removed.
issueID:UIMA-1909
type:Bug
changed files:
texts:Bogus empty relativePath from parent section in various POMs
I have notived that a number of POMs in uimaj trunk and in the sandbox contain empty relativePath elements. These seem to profoundly confuse the m2eclipse plugin. I can see no reason why these empty elements should be present. Do they serve any particular purpose? Otherwise I would suggest they be removed.
issueID:UIMA-191
type:Bug
changed files:uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/ui/dialogs/AbstractDialog.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/ui/dialogs/TypesWithNameSpaces32.java
texts:CDE: adding feature value type in default namespace does not work correctly
When adding a feature in the type system editor, try choosing a type in the default (i.e., empty) namespace.  The type will be added with a leading period.  Seems like the code does not check for the empty namespace.
issueID:UIMA-1910
type:Improvement
changed files:
texts:Merge READMEs (src/bin) into one; move README/RELEASE_NOTES  to top level, remove issues fixed from RELEASE_NOTES
Putting these at the top level follows maven conventions, and reduces custom assembly configuration, and makes it work with https://issues.apache.org/jira/browse/UIMA-1907 using the standard maven sources assembly.The src README was concerned only with building from sources; this is now standardized, and the description is small.The bin README had information that the src build should have had in its readme.  These can be merged.The RELEASE_NOTES contained a summary of what's new/changed etc., plus a hand-copied list of Jira's fixed - https://issues.apache.org/jira/browse/UIMA-1796 eliminates this requirement, so just point instead to the generated list.Use only the html version of the release notes, drop the .txt version, to reduce release effort.Update the assembly configurations as needed to get these resources from the new places.
issueID:UIMA-1912
type:Improvement
changed files:
texts:Changes for GCC 4.3+ compatibilty and header file conventions
Header files streamlining in GCC 4.3 on requires adding header file include statements.using namespace statements should not be in header files.
issueID:UIMA-1913
type:Bug
changed files:
texts:Replace usage of ActiveMQ CPP utitlity APIs with APR functions
Remove dependency on Active MQ utitlity functions.
issueID:UIMA-1914
type:Improvement
changed files:
texts:merge build tooling artifacts into one, to simplify release process
When build artifacts are updated, releasing can be difficult.  This is because some of the artifacts are dependent on the top parent pom being built, and those artifacts, in turn, depend on the top parent pom (circular refs).  Based on discussion on the mailing list (see http://uima.markmail.org/thread/ryh6voctne6vqb7d ), it would simplify things to collapse all of the build artifacts into just one parent-pom.Do this, making the packaging of that a Jar, and putting into it also the resource bundles needed by the other parent poms.  Change the resource bundle need for assemblies to just plain descriptor references, eliminating the need for bundle refs.  Do what's needed to override the normal source-release assembly, so that our "improved" version is used (it works with flat-hierarchies).Merge all the other parent-poms into one, using either the existence of some file/directory (e.g. src/docbook ) to trigger the particular profile, or, where none can be found, make a new trigger consisting of a file at the top level called something like: "marker-file-identifying-xxxxxx".  Those projects which need these profiles will need to have (empty) files like this to trigger the profile.Use this mechanism instead of pointing to different parent-poms to control the build (as there will now be just one parent pom for all uima projects).Update the projects to use the new parent pom.
issueID:UIMA-1915
type:Bug
changed files:
texts:UIMA AS client code synchronizes same critical region twice
The BaseUIMAAsynchronousEngine_impl.stop() method double synchronizes the same piece of code for no reason. Remove one of the synchronized{} blocks.
issueID:UIMA-1916
type:Bug
changed files:
texts:releasing with remote-resource-bundle may fail due to version not updating
We configure the remote-resource-plugin to use a customized resource artifact (currently uima-build-resources).  At the moment, the parent-pom configures this plugin with the GAV (groupId, artifactId, and Version) at version 1-SNAPSHOT.When the release happens, the release plugin does not update this configuration parameter to reflect the release version.  (at least, it doesn't when doing release:prepare -DdryRun=true).   So the tag created will have the wrong version (it will have 1-SNAPSHOT, it should be changed to 1).  A workaround is to manually update the tag for this after release:prepare, before doing release:perform.I'm going to ask on maven-user list for the maven way to do this.Finally, there's another bug: the configuration for the remote-release-plugin is pointing to the old location for this and needs to get updated to point to the uima-build-resources artifact.
issueID:UIMA-1917
type:Bug
changed files:
texts:parent-pom use of dependency + unpack-dependencies inadvertantly affecting children poms
In an attempt to get the release plugin to automatically update the uima-build-resources version number, I had switched the inclusion of the uima-build-resources files from maven-dependency-plugin goal of unpack to unpack-dependencies.  Although this worked for building the parent pom, when run on a ordinary child pom (e.g., the DictionaryAnnotator), the dependencies were the entire set of dependencies merged from the parent pom and the child pom, and the unpack-dependencies unpacked all of them.Since there were other issues with getting the release plugin to automaitcally manage the uima-build-resources version number see https://issues.apache.org/jira/browse/UIMA-1916 ), fix this by changing back to the unpack goal, specifying just the artifact and files wanted, and remove the <dependencies> spec from the parent-pom to avoid having it merged with all children.
issueID:UIMA-1918
type:Bug
changed files:
texts:pom dependencies out of sync
The current POM on trunk references 2.3.0-incubating-SNAPSHOT, whereas everything else in Sandbox has moved to 2.3.1-SNAPSHOT.I got it to build taking parts of the SimpleServer POM, but can't confirm that it works correctly because of other probably unrelated problems (java.lang.NullPointerException at org.apache.uima.adapter.jms.client.BaseUIMAAsynchronousEngine_impl.initialize(BaseUIMAAsynchronousEngine_impl.java:595))I didn't see SimpleUimaAsService in any of the Sandbox-2.3.0 tags, so adjusting the dependencies on the trunk version seems to be the only option at this point.
issueID:UIMA-1919
type:Improvement
changed files:
texts:change apache-release build to not do individual project Javadocs for -distr projects
The -distr projects already build Javadocs for the aggregate of the individual modules, but with a filtering of the classes, to show the public APIs.  The default apache-release build (done when the apache-release profile is activated, which it is by default during during release, or if you specify -Papache-release on the mvn command line) builds additionally, Javadocs for everything.   These Javadocs are full of warnings because we haven't been very careful in writing the Javadocs.Building individual Javadocs for every Java module makes the build much slower.  These Javadocs are not included in the distribution, but would be available (if generated) in the Maven repository.  However, the source code is also being generated for each module during release, and that is also available in the with the main artifact in the Maven repository (when finally released).  That has been sufficient for our previous releases.For these reasons, override the apache-release profile for the -distr aggregate projects to remove the Javadoc builds for the -distr projects.
issueID:UIMA-192
type:Bug
changed files:uimaj-core/src/main/java/org/apache/uima/util/impl/XMLParser_impl.java
uimaj-core/src/main/java/org/apache/uima/util/impl/XMLParser_impl.java
texts:Schema validation doesn&#39;t work with Sun Java 1.4, causes fatal error.
This is caught by the unit tests when run under Sun Java 1.4.2.  This exception is reported:org.apache.uima.util.InvalidXMLException: Invalid descriptor at file:/C:/alally/dev/workspace_apache/uimaj-core/target/test-classes/TypePrioritiesImplTest/SimpleTypePriorities.xml. at org.apache.uima.util.impl.XMLParser_impl.parse(XMLParser_impl.java:183) at org.apache.uima.util.impl.XMLParser_impl.parseTypePriorities(XMLParser_impl.java:663) at org.apache.uima.util.impl.XMLParser_impl.parseTypePriorities(XMLParser_impl.java:651) at org.apache.uima.resource.metadata.impl.TypePriorities_implTest.testBuildFromXmlElement(TypePriorities_implTest.java:66) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25) at java.lang.reflect.Method.invoke(Method.java:324) at junit.framework.TestCase.runTest(TestCase.java:154) at junit.framework.TestCase.runBare(TestCase.java:127) at junit.framework.TestResult$1.protect(TestResult.java:106) at junit.framework.TestResult.runProtected(TestResult.java:124) at junit.framework.TestResult.run(TestResult.java:109) at junit.framework.TestCase.run(TestCase.java:118) at junit.framework.TestSuite.runTest(TestSuite.java:208) at junit.framework.TestSuite.run(TestSuite.java:203) at org.eclipse.jdt.internal.junit.runner.junit3.JUnit3TestReference.run(JUnit3TestReference.java:128) at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38) at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:460) at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:673) at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:386) at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:196)Caused by: org.xml.sax.SAXNotRecognizedException: Feature: http://apache.org/xml/features/validation/schema at org.apache.crimson.parser.XMLReaderImpl.setFeature(XMLReaderImpl.java:219) at org.apache.uima.util.impl.XMLParser_impl.parse(XMLParser_impl.java:143) ... 21 more
issueID:UIMA-1920
type:Bug
changed files:
texts:Binary Assemblies need updating for fetching docbook artifacts from their new spots under ../d/.. and putting them in the right hierarchies
The binary assemblies need to fetch the documentation built with the docbook toolchain from the spot where that toolchain is configured to put the output - now under .../target/site/d/:  ../target/site/d       css           stylesheet-html.css       images           [bookname]/[bookpartname]/...    <-- image files      [bookname].html      [bookname].pdf In the assemblies, change the source (where these files come from) to reflect this layout in the target/site/d directory.Change the layout in the assemblies to preserve the relative position of thehtml, images, and css files and directories, because the html has relative refs to these.Both the html and PDF files support links between the various "books".  These linksare setup to be "relative", and assume a relative layout that looks like this:  some-top-level-dir      d          [bookname].html          [bookname].pdfCurrently, the PDF layout is presuming an extra directory above the "d",which is inconsistent with how the html is specified.  Fix this to correspondto how the html is arranged, by updating the build/uima-docbook-olink project,which is where these default layouts are specified.Change the assemblies to copy the information under site/d to the assemblydocs directory, (including the "d").
issueID:UIMA-1921
type:Bug
changed files:
texts:release fails because some dependencies are set using a property, and they don&#39;t get updated to the next release level by release:perform
The release:perform updates the property from 2.3.1-SNAPSHOT to 2.3.1 for the tag, correctly.  However, the next check-in the release plugin does for the next version leaves it at 2.3.1.  I think this is by design.The m2eclipse plugin tries to use workspace projects to resolve, but that fails, since the workspace projects were updated to 2.3.2-SNAPSHOT.  I think m2eclipse should, in that case, revert to setting up the Eclipse classpath to refer to the .m2 repository (which has the just-built tag, at 2.3.1 (no shapshot), but it seems not to.Try changing things to not use properties, and see if everything is updated to the next -SNAPSHOT level.
issueID:UIMA-1922
type:Bug
changed files:
texts:XmiCasDeserializer mentions XCAS in error messages instead of XMI CAS
If an error occurs during parsing an XMI CAS the XmiCasDeserializer says "Error parsing XCAS from source ..." for various errors, correct should be "Error parsing XMI CAS from source ...".Mentioning XCAS is confusing because the deserialized CAS is in the XMI format.
issueID:UIMA-1923
type:Bug
changed files:
texts:add DEPENDENCIES to the list of RAT exclusions
For projects which produce JARs and are released by running mvn release... on them directly (that is, "cd" to that project, and run mvn release...), a top level DEPENDENCIES file is generated, which need to have a RAT exclusion.I hadn't noticed this before, because I've only run mvn release on pom (not jar) projects.  But now, I've run it on the uima-build-resources which is a Jar project, and this issues appeared.  It would also be an issue when releasing individual sandbox (jar) projects.  Add DEPENDENCIES to the RAT exclusion list, in the common UIMA parent pom.For the uima-build-resources project (which doesn't (can't) depend on our common parent-pom, because the parent pom "depends" on it), find another way to make this work.
issueID:UIMA-1924
type:Improvement
changed files:
texts:have apache-release always generate an updated jira-report
This avoids future errors encountered when doing mvn release... where the release manager might forget to run the report to pick up the latest changes, at the cost of perhaps running it too often.  Consider a way to skip this under the control of some -D parameter... e.g. -DnoJiraReport to accomodate the use case where the release manager knows the report is current and doesn't need re-doing.
issueID:UIMA-1925
type:New Feature
changed files:
texts:Enable failover protocol support in UIMA C++ service wrapper
Support for the failover protocol is required to supported distributed queues using the ActiveMQ network of brokers capability.ActiveMQ CPP 3.2 plus requires migration to APR 1.3.8.
issueID:UIMA-1926
type:Bug
changed files:
texts:parent-pom setting wrong jiraVersion for child projects
The configuration for the maven-changes-plugin is being set in a way that causes substitution of the property to capture the parent pom's value for this property, instead of the child.  Figure out a fix.
issueID:UIMA-1927
type:Bug
changed files:
texts:jira-report not updating - new one runs, but doesn&#39;t overwrite the old one
Figure out why the report is running (according to the console log, but not updating the files.
issueID:UIMA-1928
type:Bug
changed files:
texts:the auto-jira-issue is running on all projects in a multi-module build, needs to run only on the top one

issueID:UIMA-1929
type:Bug
changed files:
texts:jira-reports are being generated 4 times when only once is needed, during release
The first factor of 2x comes from putting two executions in the pluginManagement section - one was for the command-line and the other was for child processes that wanted to have this.  But when the child includes a this plugin, even though it specifies only one execution, the other execution happens, also (it's inherited from the parent's pluginManagement).  Merge these, using the id default-cli.The 2nd factor of 2x comes from the Javadoc plugin - it "Invokes the execution of the lifecycle phase generate-sources prior to executing itself.", even though this has already happened.  It happens that the change:jira-report is bound to generate-sources - so move it elsewhere.
issueID:UIMA-193
type:Bug
changed files:
texts:PEAR Encoding Test gives NullPointerException under Sun Java 1.4.2
java.lang.NullPointerException at org.apache.uima.pear.util.PearEncodingTest.testUTF8WithSignature(PearEncodingTest.java:54) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25) at java.lang.reflect.Method.invoke(Method.java:324) at junit.framework.TestCase.runTest(TestCase.java:154) at junit.framework.TestCase.runBare(TestCase.java:127) at junit.framework.TestResult$1.protect(TestResult.java:106) at junit.framework.TestResult.runProtected(TestResult.java:124) at junit.framework.TestResult.run(TestResult.java:109) at junit.framework.TestCase.run(TestCase.java:118) at junit.framework.TestSuite.runTest(TestSuite.java:208) at junit.framework.TestSuite.run(TestSuite.java:203) at org.eclipse.jdt.internal.junit.runner.junit3.JUnit3TestReference.run(JUnit3TestReference.java:128) at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38) at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:460) at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:673) at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:386) at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:196)
issueID:UIMA-1930
type:Improvement
changed files:
texts:TikaAnnotator should have Tika version updated
Tika version is at 0.4, should be migrated to 0.7.
issueID:UIMA-1931
type:Sub-task
changed files:
texts:Enable LanguageIdentifier to extract language
From 0.5 version on Tika has a LanguageIdentifier to extract document language (using NGrams) so it would be good to add that capability too.
issueID:UIMA-1932
type:Improvement
changed files:uimaj-tools/src/main/java/org/apache/uima/tools/images/Images.java
texts:Some artwork imbeds the phrase "An Apache Incubator Project" - needs updating to remove Incubator
For example, Document Analyzer has a banner with this graphic.  Also, the About menu pick for this has the incubator http address, and a 2009 copyright.Check other tooling also.
issueID:UIMA-1933
type:Bug
changed files:
texts:restore improved NOTICE.vm to uima-build-resources
When merging the build resources together, the new version of NOTICE.vm was dropped (this is the one that allows adding extra notice info).  Restore it, and also fix the build to do the required maven-remote-resources:bundle goal.
issueID:UIMA-1934
type:Improvement
changed files:uimaj-core/src/main/versionJava/org/apache/uima/impl/UimaVersion.java
uimaj-tools/src/main/java/org/apache/uima/tools/cvd/control/AboutHandler.java
uimaj-tools/src/main/java/org/apache/uima/tools/cvd/control/ManualHandler.java
texts:CVD encodes its copyright date wrong, and says incubator
see AboutHandler in the tools project.  Also, the CVD launcher assumptions about where to find the tools.html file need to be updated to find it in the new arrangement.
issueID:UIMA-1935
type:Improvement
changed files:
texts:update eclipse feature projects for 2.3.1
1) for the xxx-eclipse-feature-xxx projects, factor slightly their versions: main version is in the pom as e.g. 2.3.1-SNAPSHOT derived version in the feature.xml - inject via resource "filtering" using the osgi version of the main version2) update to reference plugins in feature.xml using same filtering, osgi versions.  This implies that a particular feature is released with its plugins, so they're at the same version (e.g. 2.3.1.SNAPSHOT or 2.3.1 when the release is done).3) update eclipse-update-site project to follow a different versioning starting with 3 and incrementing by one for each release4) update eclipse-update-site for new mirror information - add non-incubator source
issueID:UIMA-1936
type:Bug
changed files:
texts:UIMA AS code base should log all trace msgs instead dumping to stdout
Replace System.out.println by UIMAFramework logging messages in org.apache.uima.adapter.jms.client.BaseUIMAAsynchronousEngine_impl.java.
issueID:UIMA-1937
type:Bug
changed files:
texts:UIMA AS JMX Monitor throws javax.management.AttributeNotFoundException: No such attribute: AvailableInstances
The JMX Monitor throws javax.management.AttributeNotFoundException: No such attribute: AvailableInstances exception when it tries to access CM CasPool MBean properties. Looks like RMI proxy is not valid when the look up is done
issueID:UIMA-1938
type:New Feature
changed files:
texts:Modify UIMA AS Primitive Service to optionally dump JVM stack if process() method takes too long
Add instrumentation to the UIMA AS Primitive service that will force JVM Stack dump if AE takes too long to process a CAS. Enable the instrumentation via -D variable. This enhancement may prove useful when debugging user code.
issueID:UIMA-1939
type:Bug
changed files:uimaj-core/src/main/java/org/apache/uima/analysis_engine/impl/UimacppAnalysisEngineImpl.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/impl/UimacppAnalysisEngineImpl.java
texts:Cannot run a C++ aggregate from Java
The UimacppAnalysisEngine fails to initialize a C++ aggregate.
issueID:UIMA-194
type:Bug
changed files:
texts:Tools highlight incorrect annotation offsets due to XML serialization bug in Sun Java 1.4.2
The XML serialization support in Sun Java 1.4.2_12 doesn't serialize CR characters to XML.  As a result, if the document text contains CR characters, XCAS or XMI serialization will cause them to be lost, resulting in incorrect annotation offsets.  This is exposed in the DocumentAnalyzer, with the highlighting being incorrect if the input document contains CR characters.Unit test failure occurred in XCasToCasDataHandlerTest, but the test was modified so it passes.  In that test an assertEquals of two strings fails, yet the strings appear identical in the compare viewer.The problem does not occur in Sun Java 1.5 or later, or with IBM Java.Probably a documentation update is an appropriate way to address this.
issueID:UIMA-1940
type:Bug
changed files:
texts:TypeSystemDescription element missing when Aggregate AE metadata is serialized to XML

issueID:UIMA-1941
type:Bug
changed files:
texts:UIMA CPP aggregate AE incorrect handling of sofa mapping

issueID:UIMA-1942
type:Bug
changed files:
texts:Our batch scripts can&#39;t handle the default path for 32bit software on Win64 machines as it contains parentheses
The default path for 32 bit software on 64 bit windows installations is something like C:\Program Files (x86).  This interferes with SET commands in our batch scripts of the the form (set varname=value).  Since the value may contain a closing paren, the command interpreter gets confused.  Fix by using the alternative syntax of set "varname=value".
issueID:UIMA-1944
type:Bug
changed files:
texts:change build parenting poms to introduce additional parent, add top level build point for multi-module projects
Follow the suggestions listed here: http://markmail.org/message/wygh25tdl4w6yyvoSummary:1) keep build/trunk/parent-pom   - overall UIMA project common factored-out things for sharing among all projects in UIMA2) for each multi-module project (uimaj, etc.) have an additional parent pom that inherits from (1); make submodules inherit from this.  This pom will hold overrides/updates to the common parent pom.  Over time, things in here that are common with other multi-module projects within UIMA  will be moved to (1).3) for each multi-module project, define a top-most pom that's an aggregator for (2) and the submodules.  To make this buildable in trunk, put <relativePath> elements for the local parent pom.  Or, even better, put the top-most pom in the directory that contains all the projects, which is the Maven convention.  Then, you don't need the <relativePath> elements at all, things work by convention.   (Well, after trying this, this isn't quite correct, the convention applies when the "parent" pom is in the containing directory, not the "aggregating" pom.)
issueID:UIMA-1945
type:Improvement
changed files:uimaj-core/src/main/java/org/apache/uima/util/CasCopier.java
texts:convert recursive impl of CAS Copier to non-recursive to avoid out-of-stack space errors
User has reported running out of stack space - traced to long UIMA list which was being copied using the CasCopier utility, which places two "calls" for each element of the list on the Java stack.Convert this to a non-recursion implementation.
issueID:UIMA-1946
type:Bug
changed files:
texts:parent-pom has wrong dependency on SNAPSHOT version of uima-build-resources
Need to have the parent-pom depend on the released version of the uima-build-resources.  Also, override in subproject parent poms, until another parent-pom release happens.
issueID:UIMA-1947
type:Improvement
changed files:
texts:Replace Corpus Explorer with the Project Explorer
The Cas Editor has its own navigator view called the Corpus Explorer, this view should be replaced with the Project Explorer from the Common Navigator Framework (CNF). The reason it was not built on CNF in the first place is that CNF was not available when then Corpus Explorerwas written.There are a few good reasons to switch to CNF:  Many things will just be replaced by CNF functionality. These are for example basic functionality like, copy, paste, move,delete, rename a file. The missing (UIMA-556) drag and drop support will be available trough CNF. The structure of a CAS (important for multi-view support, UIMA-572) will be available to other projects which do not use the Cas Editor project nature. And Cas Editor projects could be viewed with all its content along with other projects also exposing a deeper structure like java projects. The dependency on the org.eclipse.ui.ide plugin will be obsolete, making the Cas Editor easier to integrate into RCP applications.
issueID:UIMA-1948
type:Bug
changed files:uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/AnnotationEditor.java
texts:The Annotation Editor should reveal the selected annotation
The Annotation Editor should scroll to the selected annotation if the line containingit is not currently visible. Especially if a user is working on a long text its difficult tofind the selected annotation.
issueID:UIMA-1949
type:Improvement
changed files:uimaj-core/src/main/java/org/apache/uima/cas/Feature.java
texts:Javadoc should point out difference between Features getDomain and getRange
The javadoc should explain how range and domain differ. The current javadoc just uses theseterms again, which does not add any information.Should it be extended like this?getDomain:Get the domain type for this feature. The domain is the type which defines this feature.getRange:Get the range type for this feature.  The range defines the type of the feature value.
issueID:UIMA-195
type:Bug
changed files:
texts:Logging test fails when logger properties file and log file are specified for unit tests
Not sure this is a bug, but it would be nice if it could be fixed.  I'm trying to run our test cases with logging to a file instead of a console, so I don't get deluged with logging info.  When I specify, for example, -Djava.util.logging.config.file=../uimaj-distr/src/main/properties/Logger.properties -Djava.util.logging.config.file=uima.log, JSR47Logger_implTest.testIsLoggable() fails with a NullPointerException.
issueID:UIMA-1950
type:Bug
changed files:uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/editview/EditViewPage.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/editview/ValueColumnLabelProvider.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/util/Primitives.java
texts:Filling a feature in the Edit View is difficult if it not has a value yet
Philip Ogren:"On a related note - I have noticed that filling the value of e.g. a feature of type string is really hard to do if it does not yet have a value. The problem is that it requires extremely precise mouse movements to activate the cursor in the empty text field. This is very tiresome for situations in which the text is not pre-annotated automatically."(was reported together with UIMA-1875)
issueID:UIMA-1951
type:Bug
changed files:uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/annotation/BoxDrawingStrategy.java
texts:Box Drawing Strategy does not draw the bottom line of the box always correctly
The Annotation Editor can visualize annotations with a Box drawing style. If a new annotation whichis drawn with this style is added, the bottom line of the annotation is missing. The reasons for the missing bottom line is, that the drawRectangle call draws the box outside ofthe clearing area. To solve this issue just reduce the height of the drawn box by one. Another solution would be to increase the clearing area.
issueID:UIMA-1952
type:Improvement
changed files:
texts:Change UIMA-AS binary build to include base UIMA
To make using UIMA-AS easier, include a particular version of uimaj sdk as part of its binary distribution.
issueID:UIMA-1953
type:Bug
changed files:
texts:setting property for common version in parent pom doesn&#39;t work - change to working alternative
The uimaj sdk build factors out the version number for dependencies on other uimaj artifacts.  Having one spot in the parent pom makes this easy to change.  But it doesn't work when it comes time to run the release:prepare step - the attempt to "rewrite" pom versions doesn't handle this case.After some experimentation and googling, I found it will handle having the dependent version come from the common parent pom for uimaj, but just not from a custom property.  Change to this approach:1) still factor out the dependency to the parent, but make it the same as the parent pom's version.2) change the version ref in the child poms to ${project.parent.version}.This approach creates a tie between the normal dependency version for components, and the version of the common parent; since we're probably going to have all the components at the same version level anyways for a while, I don't think this is an issue, for now.
issueID:UIMA-1954
type:Bug
changed files:uimaj-ep-cas-editor-ide/src/main/java/org/apache/uima/caseditor/ide/DefaultCasDocumentProvider.java
texts:Annotation Style View fails to save changes for Cas Editor Projects
The Annotation Style View can open a properties dialog to modify the annotation styles, themodified annotation styles are shown in the editor, but the modification is not saved to disk. On the next start of the Cas Editor the styles are as before.The code path used to set the annotation styles from the Annotation Styles View fails to serialize the dot corpus file.To fix this issue serialize the dot corpus file.
issueID:UIMA-1955
type:Bug
changed files:
texts:remove unused dependency on missing activemq artifact
uima-as-distr has a dependency on activemq activeio-core at version 3.0.0-incubator.  This dependency was copied from the 4.1.1 release of activemq, from its top level POM.This version is no longer available.  Googling it shows may other projects have build failures due to its having gone missing.It prevents uima-as-distr from building in a fresh (empty) maven .m2 environment.  Our build doesn't use it, and we will be soon migrating our activeMQ level to a more recent release.  So remove this for now to allow building.
issueID:UIMA-1956
type:Bug
changed files:uimaj-ep-cas-editor-ide/src/main/java/org/apache/uima/caseditor/ide/NlpProject.java
texts:Annotation style and colors change when Cas Editor is started from a new Cas Editor Project
The annotation styles and color change, when the Cas Editor is started on a fresh Cas Editor Project andone style is changed. Investigate what exactly is causing the change, and find a solution to fix the issue.
issueID:UIMA-1957
type:Improvement
changed files:
texts:fix intermittent failure to gen Javadocs due to wrong link for java apis
Javadoc running attempts to link to Java APIs where possible.  The Maven Javadoc plugin deduces a web site location for these from the compiler Java level.  If it's 1.5, it is choosing http://java.sun.com/j2se/1.5.0/docs/api but that's now an "intermittent" redirect to an Oracle site (since Oracle bought Sun).If the redirect fails, the Javadoc plugin produces this message:&#91;ERROR&#93; Error fetching link: http://java.sun.com/j2se/1.5.0/docs/api/package-list. Ignored it.Add a configuration parameter to associate the correct site for this.
issueID:UIMA-1958
type:Bug
changed files:
texts:Cas Editor plugin package only contains icons which are at the top-level of the icons folder
The Cas Editor plugin uses a bunch of images which are stored in the uimaj-ep-caseditor/icons folder.Inside the icons folder are a few images at the top-level, and serveral additional images inside sub-folders.All the images which are located inside the sub folders are not copied over into the eclipse plugin package.To fix this issue, change the build to copy all images inside the icons folder.We cannot release before this issue if fixed, because the Cas Editor is seriously brokenwithout these images.
issueID:UIMA-1959
type:Improvement
changed files:
texts:improve eclipse feature projects to have them build ok in Eclipse without errors
The feature.xml file needs to have the version of the feature (spelled using OSGi conventions, not Maven conventions - meaning to use periods, not dashes) injected into the feature.xml from the pom version.  This was being done by using Maven's "filtering" of resources specifying this in the pom in a <resources> element with <filtering> set to true.This worked for building with Maven, but Eclipse builds didn't work - the project shows an "error" because substitutable values aren't allowed in the feature.xml.Fix this by (a) moving the feature.xml to src/main/resources and adding a step to copy it (for Eclipse to see and use) to the top level, with filtering.  Since this is common for all feature projects, add a profile for this in the project-wide common parent, and activate it with a marker-file-identifying-eclipse-feature.(For now, also copy into feature projects until next project-wide pom is released).
issueID:UIMA-196
type:Bug
changed files:
texts:IteratorTest.testIterator() fails with Sun Java 1.6

issueID:UIMA-1960
type:Bug
changed files:uimaj-core/src/main/versionJava/org/apache/uima/impl/UimaVersion.java
texts:enable uima-as to check for proper version of base UIMA
UIMA-AS checks the version of the base UIMA and complains if these are not equal.Change this so UIMA-AS has injected from the pom at build/release time the base uimaj version it is being built upon, to allow these to be different.This may be needed, for instance, if base uimaj is released at version 2.3.1, and uima-as is not yet released and is at 2.3.1-SNAPSHOT.
issueID:UIMA-1961
type:Bug
changed files:
texts:https://svn.apache.org/repos/asf/uima/uimaj/trunk/uimaj-distr/src/main/readme/KEYS is broken
Link to the KEYS file is broken.  Don't know where it has gotten to...
issueID:UIMA-1962
type:Improvement
changed files:
texts:change jira changes report to include issues in "Resolved" "Fixed" state
The filtering currently reports only issues in the "Closed", "Fixed" category.  This change picks up issues also in the "Resolved" "Fixed" category, which could prove more valuable for users.
issueID:UIMA-1963
type:Bug
changed files:
texts:UimacppServiceController does not shutting down UIMA C++ service
C++ process is not shutdown when  Java controller process is stopped during initialization.  The shutdown hook should be registered before C++ process is started.
issueID:UIMA-1964
type:Bug
changed files:
texts:UIMA C++ service wrapper is not correctly shutting down when Java controller terminates
See UIMA-1963 - related fix to UimacppServiceController.
issueID:UIMA-1965
type:Bug
changed files:uimaj-core/src/main/java/org/apache/uima/cas/impl/XmiCasDeserializer.java
texts:XMI Delta CAS Serialization doesn&#39;t work when preexisting FS is indexed in a new View
I think I ran into a problem with XMI delta CAS serialization.  Here's my use case:  I start with a CAS that has a FeatureStructure (not annotation) indexed in the InitialView.  I want to send this to a remote service, wihch will create a new view and add the exisitng FeatureStructure to the indexes of that view.  With delta XMI CAS serialization, this does not seem to work.  The FeatureStructure is not present in the indexes of the new view.Here is a unit test (to be added to XmiCasDeserializerTest.java) that illustrates the problem:  public void testDeltaCasIndexExistingFsInNewView() throws Exception {    CAS cas1 = CasCreationUtils.createCas(typeSystem, new TypePriorities_impl(),            indexes);    CAS cas2 = CasCreationUtils.createCas(typeSystem, new TypePriorities_impl(),            indexes);    cas1.setDocumentText("This is a test document in the initial view");    Type referentType = cas1.getTypeSystem().getType("org.apache.uima.testTypeSystem.Referent");    FeatureStructure fs1 = cas1.createFS(referentType);    cas1.getIndexRepository().addFS(fs1);    //serialize complete      XmiSerializationSharedData sharedData = new XmiSerializationSharedData();    String xml = serialize(cas1, sharedData);    System.out.println(xml);    int maxOutgoingXmiId = sharedData.getMaxXmiId();    //deserialize into cas2    XmiSerializationSharedData sharedData2 = new XmiSerializationSharedData();          this.deserialize(xml, cas2, sharedData2, true, -1);    CasComparer.assertEquals(cas1, cas2);    //create Marker, add/modify fs and serialize in delta xmi format.    Marker marker = cas2.createMarker();    //create View    CAS view = cas2.createView("NewView");    //add FS to index    Type referentType2 = cas2.getTypeSystem().getType("org.apache.uima.testTypeSystem.Referent");    Iterator<FeatureStructure> fsIter = cas2.getIndexRepository().getAllIndexedFS(referentType2);    while (fsIter.hasNext()) {      FeatureStructure fs = fsIter.next();      view.getIndexRepository().addFS(fs);    }    AnnotationFS cas2newAnnot = view.createAnnotation(cas2.getAnnotationType(), 6, 8);    view.getIndexRepository().addFS(cas2newAnnot);    // serialize cas2 in delta format     String deltaxml1 = serialize(cas2, sharedData2, marker);    System.out.println(deltaxml1);    //deserialize delta xmi into cas1    this.deserialize(deltaxml1, cas1, sharedData, true, maxOutgoingXmiId, AllowPreexistingFS.allow);    //check that new View contains the FS     CAS deserView = cas1.getView("NewView");    Iterator<FeatureStructure> deserFsIter = deserView.getIndexRepository().getAllIndexedFS(referentType);    assertTrue(deserFsIter.hasNext());  }
issueID:UIMA-1966
type:Bug
changed files:
texts:uimaj-eclipse-feature-runtime has src/ set with svn ignore, but it contains needed resource
UIMA-1959 added the feature.xml file under src/main/resources, but it apparently never was getting checked in - because the src folder had been set to svn ignore.  So, although it built fine in all my testing, it failed to find the feature.xml file when building from the clean svn checkout done by release:perform.  This failure is considered by default in Maven to be a soft failure; see if it can be made a fatal one.  And undo the svn ignore on this file.
issueID:UIMA-1967
type:Improvement
changed files:
texts:UIMAJ build from the top level
The uimaj 2.3.1 source release package is a bit misleading in that it places a copy of the uimaj/README file in the top level directory even though the advertised "mvn install" build command doesn't work from there.Instead of fixing that problem, it would seem like a good idea to actually move the uimaj/pom.xml and uimaj/README files directly to the top level directory in svn.As a potential further simplification, it seems to me like it would be possible to merge also the uimaj-distr/* and aggregate-uimaj/pom.xml files to the top level.
issueID:UIMA-1968
type:Improvement
changed files:
texts:add RAT exclusion for pearTest/UTF16 style files to work around Rat problem
Thilo found that RAT checking failed on an Intel platform running Ubuntu using a default file encoding of UTF-8.  RAT uses the Java Reader (which uses the platform default encoding) and that throws a sun.io.MalformedInputException (see http://markmail.org/message/s7mf3bws63xnyj7b).The UTF16 encoded files causing this problem are test data, and have the apache license anyway, so exclude these from the Rat check for uimaj-core.
issueID:UIMA-1969
type:New Feature
changed files:
texts:Add support for external resources hosted on an http server
Currently external resources for an Analysis Engine can only be loaded from the file system. This is useful for many use cases in which the resources are almost static and rarely change. In our scenario the resourcesare updated frequently and hosted on a central server. The server could expose a file system over the networkvia NFS or windows file sharing, but it seems to be more intuitiv and easier to just distribute the resources via http.In order to do that the resource loading must be extended to also support resource which are available viahttp. It seems that the current code for the file URLs can be easily extended to also allow http resources. According to the documentation it uses URL.openStream and forbids http URLs which would be supportedby that method.
issueID:UIMA-197
type:Bug
changed files:
texts:TypePriorityTest.testMain() fails with Sun Java 1.6
Type priorities come out wrong with Java 1.6.
issueID:UIMA-1971
type:Bug
changed files:
texts:AggregateAnalysisEngineController should disable Delta CAS serialization if a remote delegate replies with a full CAS
When a Aggregate AE controller receives a full CAS in reply from  a remote delegate, it should disable delta CAS serialization for all subsequent serialization of this CAS.  This applies particularly when remote service is  a UIMA C++ service which does not currently support Delta CAS.
issueID:UIMA-1972
type:Improvement
changed files:
texts:move some build steps under apache-release profile
Some build processes are of interest only for Apache Release.  It would be good to be able to have the xxx-distr binary build and public api Javadoc creation steps skipped during day-to-day aggregate builds (see comment in UIMA-1967).We currently have the build processes set up such that the source-release build step is already only done under the apache-release profile.  To meet these goals, move the Rat check (not of interest to non-Apache developers) and the build of the binary artifact (and the public api Javadoc) so they are only done if the apache-release profile is specified.  This profile is automatically selected during the release process, and may be manually selected whenever needed (by adding -Papache-release to the mvn command).
issueID:UIMA-1973
type:Bug
changed files:
texts:Add getTaskExecutor() method to UimaDefaultMessageListenerContainer
Spring v.3.0.3 that comes with AMQ 5.4.1 throws an exception shown below when attempting to set a TaskExecutor via setTaskExecutor():Invalid JavaBean property 'taskExecutor' being accessed! Ambiguous write methods found next to actually used [public void org.apache.uima.adapter.jms.activemq.UimaDefaultMessageListenerContainer.setTaskExecutor(org.springframework.core.task.TaskExecutor)]: [public void org.springframework.jms.listener.DefaultMessageListenerContainer.setTaskExecutor(java.util.concurrent.Executor)]This is thrown by Spring framework's bean introspector class when a Java Bean ( in this case UimaDefaultMessageListenerContainer) contains a setter method with no matching getter method. This exception is described here: https://jira.springsource.org/browse/SPR-6399The solution to quite this down is to add getTaskExcutor() method.
issueID:UIMA-1974
type:Bug
changed files:
texts:UIMA AS assembly script creates bogus folders in bin directory
Assembly script bin.xml in uima-as-distr defines a bogus dependency set which instructs maven to create apache-uima/bin folders in the bin directory.
issueID:UIMA-1975
type:Bug
changed files:
texts:UIMA AS extended tests import mx4j classes for no reason
TestUimaASExtended.java imports import mx4j.remote.rmi.ClientExceptionCatcher which sets up dependency on mx4j. This is unnecessary since the test code does not use mx4j. Remove the import
issueID:UIMA-1976
type:Bug
changed files:
texts:Deprecate BrokerDeployer in UIMA AS
This class in no longer used in UIMA AS. Deprecate it.
issueID:UIMA-1977
type:Bug
changed files:
texts:dd2spring reports condition as unsupported, but now is supported - remove warning
dd2spring has a check for multiple remote CAS multipliers and if it finds this, reports a "not supported" error.  This was the case, but this restriction was removed (either in 2.3.0 or the upcoming 2.3.1 release, I think).Remove this error message and test.
issueID:UIMA-1978
type:Improvement
changed files:
texts:Copy runUimaClass.* scripts from uimaj to uima-as
runUimaClass.* scripts are currently copied from uimaj distribution during UIMA AS maven assembly. Both scripts check if ACTIVEMQ_HOME is set. If not, the scripts define ACTIVEMQ_HOME variable and set it to $UIMA_HOME/apache-activemq-4.1.1. Copy both scripts to uima-as-distr scripts folder, change them to point to apache-activemq-5.4.1 and finally exclude them (in bin.xml) from being copied from uimaj to uima-as/bin.
issueID:UIMA-1979
type:Bug
changed files:
texts:UIMA AS allows concurrent access to JMS Session instance
JmsEndpointConnection_impl does not synchronize access to JMS Session object to prevent multiple threads from accessing it. Per JMS spec. Section 4.4.6:"Sessions are designed for serial use by one thread at a time."There are four methods in the above class where access to the JMS Session is not synchronized:produceTextMessage()produceByteMessage()produceObjectMessage()isOpen()
issueID:UIMA-198
type:Bug
changed files:
texts:CPE Test Cases fail when run with "mvn test"
There are tests in cpm, which only fail with> mvn testbut not with> mvn installOr when run from Eclipse.The failing tests are:org.apache.uima.collection.impl.CollectionProcessingEngine_implTestorg.apache.uima.collection.impl.cpm.SofaCPE_SofaUnawareCC_Testorg.apache.uima.collection.impl.cpm.SofaCPE_Testorg.apache.uima.collection.impl.cpm.SofaMixedCPE_Test
issueID:UIMA-1980
type:Bug
changed files:
texts:UIMA AS extended test testTerminateOnFlowControllerExceptionOnDisable() fails
Modify testTerminateOnFlowControllerExceptionOnDisable() fails due to unexpected exception received by the test harness. The test is setup erroneously to expect success. Instead an exception is returned and an assertion fails. Change code from:runTest(null, eeUimaEngine, String.valueOf(broker.getMasterConnectorURI()), "TopLevelTaeQueue",            1, PROCESS_LATCH); to runTest(null, eeUimaEngine, String.valueOf(broker.getMasterConnectorURI()), "TopLevelTaeQueue",            1, EXCEPTION_LATCH);
issueID:UIMA-1981
type:Bug
changed files:
texts:UIMA AS releases parent CAS prematurely
UIMA AS aggregate uses a child counter along with a few booleans kept in a cache to determine when to put parent CAS in play. If there are no more child CASes in play and the parent CAS has returned from a CM, the CAS may proceed into a finalStep() or into process() if parentProcessLast=true. Upon return from a CM, the state of the CAS is marked as returned from CM. Problem is it remains set to as returned even though it may be subsequently sent to another delegate CM. When the last child CAS is processed, the parent CAS is released even though it may still be in a CM delegate. The fix for this is to reset "return from delegate" flag to false before dispatching a CAS to the next delegate in a flow.
issueID:UIMA-1982
type:Bug
changed files:
texts:Align addons to 2.3.1 SDK release and 1 parent pom
Drop 2.3.1-SNAPSHOT version dependencies in favor of just released 2.3.1, migrate PearPackagingMavenPlugin dependency from 2.3.0-incubating to 2.3.1 and switch addons parent pom version to 1
issueID:UIMA-1983
type:Improvement
changed files:uimaj-tools/src/main/javajet/jcasgen/templates/JCasType.javajet
uimaj-tools/src/main/java/org/apache/uima/tools/jcasgen/JCasTypeTemplate.java
texts:JCasGen prouces source files with name shadowing/conflicts
When the compiler warnings are set to complain when name shadowing or name conflicts exist, then the source files produced by JCasGen contain many warnings.  It sure would be nice if these files came out pristine rather than having compiler warnings.  Eclipse does not seem to allow for fine grained compiler warning configuration (i.e. to ignore certain warnings for certain source folders or packages) but only works at the project level.    Therefore, I must either turn these warnings off for the entire project or must ignore the warnings in the type system java files.  I'm guessing that this is a side effect of an intentional design decision (re eg typeIndexID) and so I am not that hopeful that this can be fixed but thought I would ask anyways.  Thanks,Philip
issueID:UIMA-1984
type:New Feature
changed files:
texts:RDF formats CAS Consumer component
Provide a CAS Consumer to write CASs as RDF (and other similar formats) files.This component uses Apache Clerezza to provide the RDF capabilities (using its UIMA integration modules).Supported formats for generated files are: 1. application/rdf+xml2. text/turtle3. application/x-turtle4. text/rdf+nt5. text/rdf+n3
issueID:UIMA-1985
type:New Feature
changed files:
texts:Solr CAS Consumer component
Create a CAS Consumer to write CAS and FeatureStructures as Solr documents and fields to a remote or embedded Solr instance
issueID:UIMA-1986
type:Bug
changed files:
texts:Fix Synchronization on Long could deadlock Reported by Findbugs
Local class StackDumpTimer in PrimitiveAnalysisEngineController_impl  is synchronizing a block of code using a primitive (Long) which is not a good idea.Finbugs documentation on this bug says:"DL: Synchronization on boxed primitive could lead to deadlock (DL_SYNCHRONIZATION_ON_BOXED_PRIMITIVE)The code synchronizes on a boxed primitive constant, such as an Integer.private static Integer count = 0;...  synchronized(count) {      count++;     }...Since Integer objects can be cached and shared, this code could be synchronizing on the same object as other, unrelated code, leading to unresponsiveness and possible deadlock"
issueID:UIMA-1987
type:Improvement
changed files:
texts:Add "Powered by UIMA" link to the website
Add "Powered by UIMA" link to the related Wiki page on the website
issueID:UIMA-1988
type:Task
changed files:
texts:Update uima-website KEYS file with a new Public Key for JC
Add my Public Key to the KEYS file
issueID:UIMA-1989
type:Task
changed files:
texts:Update UIMA AS README for the new 2.3.1 release
Describe main changes since 2.3.0Remove references to AMQ 4.1.1
issueID:UIMA-199
type:Bug
changed files:uimaj-core/src/main/java/org/apache/uima/analysis_engine/impl/AnalysisEngineManagementImpl.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/impl/AnalysisEngineManagementImpl.java
texts:JMX Support has problems with AE names containing special characters (e.g. commas)
JMX MBean registration fails, logging a warning message, if an AE <name> contains a comma or other characters prohibited by JMX (comma, quote, question mark, asterisk, or backslash).Our unit tests expose this error and log "JMX registration failed" messages.
issueID:UIMA-1990
type:Bug
changed files:uimaj-jet-expander/src/org/apache/uima/util/jet/JetExpander.java
texts:uima-jet-expander fails to find include files, and has wrong dependency on source location
uimaj-jet-expander is a utility that is run whenever the JCas gen templates need to be regenerated from updated javajet sources .  It hasn't been run since some time in 2007, I think.  Related issue UIMA-1983 caused me to update the javajet sources and try to run it - but it had two problems.The method for finding the included files failed - probably due to some subtle change in how File is implemented from Java 1.5 onwards.The Eclipse launchers for this utility assumed the files were directly in the Eclipse workspace (which in my configuration, they are not).
issueID:UIMA-1991
type:Improvement
changed files:
texts:change to use now released version 2.3.1 of pear packager maven plugin
This doesn't change any functionality, but allows our build to no longer need things from the incubator version of the maven repository.
issueID:UIMA-1992
type:Improvement
changed files:
texts:avoid javadoc intermittent not finding java apis
see http://jira.codehaus.org/browse/MJAVADOC-301.  Until this is released, override the default java API link url
issueID:UIMA-1993
type:Bug
changed files:
texts:Add documentation to the website for AlchemyAPI Annotator, RDFCASConsumer and Solrcas
AlchemyAPI Annotator doc has to be published on the website, RDFCASConsumer and Solrcas need also the docbook files.
issueID:UIMA-1994
type:Bug
changed files:
texts:Fix NPE in UIMA AS Client When Running with Log Level > INFO
NPE is thrown in AsynchAECasManager.iniitalize method if log level > INFO and UIMA AS client application does not provide initial heap size in ApplicationContext. If the context is not provided, the UIMA AS client initialize() method passes null for performanceTuningSettings when calling AsynchAECasManager.initialize(). Inside that method, the  performanceTuningSettings is dereferenced causing NPE.
issueID:UIMA-1995
type:Bug
changed files:
texts:AMQ 5.4.1 Broker from UIMA AS 2.3.1 not starting on Linux
activemq startup script in ACTIVEMQ_HOME/bin directory is corrupt and not starting the 5.4.1 broker. I think that this is because it was copied from a windows AMQ 5.4.1 installation. Also, fix startBroker.sh to point to apache-activemq-5.4.1 instead of 4.1.1.
issueID:UIMA-1996
type:Bug
changed files:
texts:Remove deprecated destroyApplicationContextOnStop property from activemq-nojournal.xml
destroyApplicationContextOnStop property has been deprecated. Remove it from broker element in activemq-journal.xml
issueID:UIMA-1997
type:Bug
changed files:
texts:UIMA AS build does not generate distribution for linux (*.tar.gz)
bin.xml in UIMA AS assembly comments out <format>tar.gz</format>  which produces UIMA AS distribution for the linux platform.
issueID:UIMA-1998
type:Task
changed files:
texts:Update LICENSE and NOTICE files for UIMA AS
Modify for consistency with ActiveMQ 5.4.1 legal notice and license
issueID:UIMA-1999
type:Improvement
changed files:
texts:Modify UIMA AS poms to move RAT plugins to a new pluginManagement section
see UIMA-1972.  This change allows only running RAT during apache-release.
issueID:UIMA-2
type:Task
changed files:uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/ui/dialogs/ResourcePickerDialog.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/ui/dialogs/TypesWithNameSpaces.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/files/ContextForPartDialog.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/files/MultiResourceSelectionDialog.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/files/PickOverrideKeysAndParmName.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/ui/dialogs/TypesWithNameSpaces32.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/model/FlowNodes.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/ui/dialogs/AddTypeDialog.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/ui/dialogs/SelectTypeDialog.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/ui/dialogs/AbstractDialog.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/ui/OverviewPage.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/ui/dialogs/ContentAssistField32.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/ui/dialogs/AddIndexDialog.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/TAEConfiguratorPlugin.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/MultiPageEditor.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/ui/ParameterSection.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/ui/dialogs/AddFeatureDialog.java
texts:Fix licensing issues with Eclipse plugins
Some files in the Eclipse plugins are licensed under the EPL.  These should be either removed (for instance, kept on SourceForge, with the packaging changed so that Apache gets & distributes binary-only versions of these files), or rewritten to no longer be derivative works.  The latter is the better course, and probably can be done with some small redesign (TBD).
issueID:UIMA-20
type:Bug
changed files:
texts:PearMerger unit test failure
PearMergerTest fails with error message:java.lang.NoClassDefFoundError: org/apache/uima/tutorial/DateAnnot at org.apache.uima.example.DateTime.<clinit>(DateTime.java:131)        ... at org.apache.uima.tools.pear.merger.PearMergerTest.testPearMerger(PearMergerTest.java:138)A look into the pear files that are being merged shows that JCAS classes (including DateTime) are located in the directory org/apache/uima/example/types, which doesn't match the package name.  So this is a bad PEAR file and the PearMergerTest is correctly reporting an error.Previously this issue was masked because the classpath for the tests incorrectly included the uimaj-examples project, which does contain the correct JCAS types.
issueID:UIMA-200
type:Bug
changed files:uimaj-core/src/main/java/org/apache/uima/analysis_engine/asb/impl/ASB_impl.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/asb/impl/ASB_impl.java
texts:Excessive releases of CAS on error in Aggregate CasMultiplier
Careful checking of the log file for AnalysisEngine_implTest shows that there are "CAS returned to pool from which it was not checked out" warnings that are logged by the unit tests that check error conditions.  This is because CAS.release() is being called multiple times on the same CAS, which should not happen.
issueID:UIMA-2000
type:Task
changed files:
texts:Remove Docbook Processing from uima-as-parent pom.xml
see UIMA-1946.  Remove the profile for doing docbook processing in this pom, because it was there just to supply a fix, which is now present and inherited from the common project-wide parent pom (version 2), and is no longer needed here.
issueID:UIMA-2001
type:Bug
changed files:
texts:Fix UIMA AS deployment desciptor from extended tests
Deply_AggregateWithRemoteMultiplier script uses tcp://0.0.0.0:61616 for broker URL. This doesnt seem to work with the embedded broker. Change to tcp://localhost:61616
issueID:UIMA-2002
type:Task
changed files:
texts:update uimaj poms for new parent-pom-2
move RAT configuration, where done, into pluginManagement, update uimaj-parent to refer to released version of parent-pom-2, remove any local "fixes" now available in parent-pom-2
issueID:UIMA-2003
type:Bug
changed files:
texts:WhitespaceTokenizerPerfTest failure in sandbox Last Changed Rev: 1056535
=== error------------------------------------------------------- T E S T S-------------------------------------------------------Running org.apache.uima.annotator.WhitespaceTokenizerPerfTestTests run: 1, Failures: 1, Errors: 0, Skipped: 0, Time elapsed: 0.046 sec <<< FAILURE!Running org.apache.uima.annotator.WhitespaceTokTestTests run: 3, Failures: 0, Errors: 3, Skipped: 0, Time elapsed: 0.181 sec <<< FAILURE!Results :Failed tests:   testEnglishProcessingTest(org.apache.uima.annotator.WhitespaceTokenizerPerfTest)Tests in error:   testAnnotatorSpecial(org.apache.uima.annotator.WhitespaceTokTest)  testAnnotatorEnglish(org.apache.uima.annotator.WhitespaceTokTest)  testAnnotatorTabs(org.apache.uima.annotator.WhitespaceTokTest)Tests run: 4, Failures: 1, Errors: 3, Skipped: 0&#91;INFO&#93; ------------------------------------------------------------------------&#91;ERROR&#93; BUILD FAILURE&#91;INFO&#93; ------------------------------------------------------------------------&#91;INFO&#93; There are test failures.== command :  cd sandbox/aggregate-addons mvn install== svn info : URL: http://svn.apache.org/repos/asf/uima/sandbox/trunkRepository Root: http://svn.apache.org/repos/asfRepository UUID: 13f79535-47bb-0310-9956-ffa450edef68Revision: 1058796Node Kind: directorySchedule: normalLast Changed Author: tommasoLast Changed Rev: 1056535Last Changed Date: 2011-01-07 23:15:36 +0100 (Fri, 07 Jan 2011)
issueID:UIMA-2004
type:Improvement
changed files:
texts:Cleanup UIMA AS binary assembly
remove commented code from bin.xml. Remove fileset related to uima-as-docbook. Multiple filesets copy same artifacts from activemq-5.4.1 for no reason.
issueID:UIMA-2005
type:Bug
changed files:
texts:Binary assembly script for UIMA AS doesnt copy AMQ README.txt
bin.xml assembly script doesn't include AMQ 5.4.1 README.txt file. Without this file, amq broker doesn't start. There is an explicit test in AMQ provided activemq startup script that is looking for README.txt
issueID:UIMA-2006
type:Bug
changed files:
texts:Switch addons to parent-pom 2
Switch addons to just released parent-pom 2 removing unnecessary POM lines
issueID:UIMA-2007
type:Bug
changed files:
texts:uima-as-osgi plugin is missing most of its content
The jar for this is missing the actual code.  There are also several unresolved &#91;warnings&#93; generated during the running of the Felix Bundle plugin.
issueID:UIMA-2009
type:Task
changed files:
texts:Modify Eclipse update site scripts
Update uimaj-eclipse-feature-deployeditor feature.xml and uimaj-eclipse-update-site pom.xml
issueID:UIMA-201
type:Task
changed files:
texts:Document limitations of XML parser packaged with Sun Java 1.4
When Sun Java 1.4, the XML parser bundled with the JRE does not support: Schema validation Parsing of XML descriptors containing a Byte Order MarkThis can be addressed by installing Xerces, or using a different JRE.We should document this issue and the workaround.
issueID:UIMA-2010
type:Bug
changed files:
texts:Rollback UIMA AS poms to 2.3.1 SNAPSHOT
Assigned wrong tag to Release Candidate. Should have chosen 2.3.1-rc1
issueID:UIMA-2011
type:Bug
changed files:uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/AnnotationEditorPreferenceConstants.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/AnnotationEditorPreferenceInitializer.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/AnnotationEditorPreferencePage.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/DocumentUimaImpl.java
texts:Can&#39;t open XMI with data not specified by type system
Given a XMI that contains annotations of types not present in the specified type system of the project, the CASe Editor can't open the file and displays an error.
issueID:UIMA-2012
type:Bug
changed files:uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/DocumentUimaImpl.java
texts:Handling of imported type systems causes error
When opening a XMI with a type system that imports other type systems (by location), the editor displays an error. This problem occurs, if XMI contains data of types that are specified in the imported type systems. May be related to UIMA-2011.
issueID:UIMA-2014
type:Improvement
changed files:
texts:create a top level project for the Addons
Make a top level project for the addons, allowing the ones we want to release together to be released using the common release approaches used for 2.3.1.   Try combining the -distr capability into the same pom (that is, don't have a separate addons-distr project), per the suggestion in UIMA-1967.
issueID:UIMA-2015
type:Bug
changed files:
texts:some addons not passing RAT audit
RAT fails on some sandbox projects -need to add RAT configuration for these.  e.g.  BSFAnnotator
issueID:UIMA-2016
type:Improvement
changed files:
texts:javadoc configuration too specific to one execution - make more general
Make the things that need repeating in each javadoc execution common by moving them to the configuration above the execution one. Examples of things to move are the <tags> and <javaApiLinks> elements
issueID:UIMA-2017
type:Bug
changed files:
texts:Fix TikaAnnotator-osgi
Fontbox and jembox dependencies are not available in Maven central anymore in their bundle version
issueID:UIMA-2018
type:Task
changed files:
texts:Add Solrcas-osgi to sandbox-osgi-runtime
Add the osgi version of Solrcas to sandbox-osgi-runtime
issueID:UIMA-2019
type:Task
changed files:
texts:correct license/notice files for distrs containing icons copied from the SVG Icons project
Some of our source distributions contain icons that are copied from Eclipse - these need to have the appropriate license/notice information incorporated into source (and if not already there, binary) distribution.
issueID:UIMA-202
type:Bug
changed files:uimaj-core/src/main/java/org/apache/uima/analysis_engine/impl/AnalysisEngineDescription_impl.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/impl/AnalysisEngineDescription_impl.java
texts:AnalysisEngineDescription.getDelegateAnalysisEngineSpecifiers() should only resolve delegate imports, not other imports
Currently this is resolving all imports in the aggregate, which doesn't make sense and is causing trouble in the CDE.
issueID:UIMA-2020
type:Improvement
changed files:
texts:Clarify in REAME files that source-release build requires -Papache-release parameter

issueID:UIMA-2021
type:Bug
changed files:
texts:fix uima-as license and notice to incorporate UIMA-2019 - a new additional license and notice
UIMA-2019 added a missing license and notice to the base UIMA SDK.  Because UIMA-AS is built on top of that, it needs to incorporate this additional license and notice in its license / notice (both the source and binary packaging).
issueID:UIMA-2022
type:Bug
changed files:uimaj-core/src/main/java/org/apache/uima/cas/impl/CASImpl.java
texts:APIs for adding new feature to type are inconsistent in defaulting multipleReferencesAllowed, leading to merge failures
The method addFeature(...) on TypeSystemImpl, when the boolean multipleReferencesAllowed is not specified as an argument, default this to "true".The method addFeature(...) on an instance of TypeDescriptionImpl, when multipleReferencesAllowed is not specified as an argument, default this to "null".CasCreationUtils mergeFeatures(...) throws a ResourceInitializationException saying INCOMPATIBLE_MULTI_REFS if a feature is has multipleReferencesAllowed as true in one, and "null" in the other.  The comment in the code says that "false" is the default.The use case driving this is reported in  http://mail-archives.apache.org/mod_mbox/uima-user/201101.mbox/%3C267885741.1859849.1296090121503.JavaMail.root@sz0143a.emeryville.ca.mail.comcast.net%3E.There are multiple ways to fix this. The actual type stores the value of multipleReferencesAllowed as a "boolean", so "null" is not an option. So, we can't change the value of the multipleReferencesAllowed default to match what happens in TypeDescriptionImpl, namely, to set the value to "null".Try changing the merge code to allow merging if the feature is not an array or a List (because multipleReferencesAllowed is only used for those cases).  Or, change callers of the addFeature(...) in TypeSystemImpl to explicitly set the multipleReferencesAllowed to false if the range cannot be a list element or an array.
issueID:UIMA-2023
type:Task
changed files:
texts:Rename sandbox-osgi-runtime and its modules
Rename sandbox-osgi-runtime to addons-osgi-runtime and rename each module according to the artifactId
issueID:UIMA-2024
type:Improvement
changed files:
texts:Add to uima-as project a new file containing AMQ components excluded from UIMA AS release
ActiveMQ ships with a number of components which UIMA AS binary release does not need. These components are not included in the UIMA AS release. Create a file documenting such components.
issueID:UIMA-2025
type:Improvement
changed files:
texts:Merge uima-as and uima-as-distr projects
No need for two projects one building source release the other binary. Merge the two under uima-as project.
issueID:UIMA-2026
type:Bug
changed files:
texts:Move uima-addons and uima-addons-parent to sandbox/trunk
uima-addons and uima-addons-parent had been committed outside trunk so they need to be put in it.
issueID:UIMA-2027
type:Bug
changed files:
texts:UIMA AS binary assembly script doesnt include uima as docs in a distribution
UIMA AS binary assembly script should copy contents of /uima-as-docbooks/target/site/d to docs/d. Currently it is not being done and uima as docs are not in the binary distribution.
issueID:UIMA-2028
type:Bug
changed files:
texts:Source distribution top folder name should be apache-opennlp-src
Change the folder name to apache-opennlp-src in the src.bin assembly descriptor.
issueID:UIMA-2029
type:Improvement
changed files:
texts:Modify RunRemoteAsyncAE status message on service startup
Replace "UIMAEE Initialization Complete" with "UIMA AS Service Initialization Complete" on service startup
issueID:UIMA-203
type:Bug
changed files:
texts:maven build for eclipse plugins is inconsistent - the runtime plugin may be missing the .jar packaging
The mvn install build process for the eclipse plugins builds .zip files and .jar files for all plugins except the uimaj-ep-runtime, where it only builds the .zip.  I'm not sure why both .zip and .jar files are being built.  The new Eclipse packaging practice is to build just .jar files, I think.  In any case, this should be consistent.
issueID:UIMA-2030
type:Bug
changed files:
texts:Fix invalid paths in various uima as scripts
A few uima as scripts still point to an old uima-as path instead of apache-uima-as. Also fix docs paths in eclipseProject/classpath.
issueID:UIMA-2031
type:Bug
changed files:
texts:FileSystemCollectionReader.xml in UIMA AS examples doesnt specify Language parameter
MeetingDetectorTAE's subcomponent TutorialDateTime shows a warning in its process method when deployed with FileSystemCollectionReader :No output is being produced by the TutorialDateTime annotator because the Result Specification did not contain a request for the type  org.apache.uima.tutorial.TimeAnnot nor  org.apache.uima.tutorial.DateAnnot with the language 'x-unspecified'  (Note: this message will only be shown once.)This is due to the fact that the CAS language is not specified. Modify CollectionReader's descriptor to set Language parameter
issueID:UIMA-2033
type:Bug
changed files:
texts:some parent poms putting apache snapshot repo for plugins under wrong xml element
The parent poms have a repository configuration for maven plugins pointing to repository.apache.org.  However, these need to be under <pluginRepositories><pluginRepository> xml elements, not <repositories><repository> ones.
issueID:UIMA-2034
type:Bug
changed files:
texts:Solrcas should list uimaj-component-test-util dependency with scope "test" instead of "default" scope
Solrcas should list uimaj-component-test-util as dependency with scope test.Otherwise it indicated that the jar plus dependencies should be on theclasspath while deployed which is not necessary.
issueID:UIMA-2035
type:Improvement
changed files:
texts:Solrcas should make commit after adding document to server configurable
The Solrcas AE commits after every added document. It should be possible to disable the commit. Some users might want to use autocommit to achieve a better throughput.
issueID:UIMA-2036
type:Improvement
changed files:
texts:Solrcas AE should be extensible to support the creation of a custom SolrServer instance
In some cases it is necessary to control the creation of the SolrServer. Examples for such a need are customized http parameters, load balanced solr server or maybe a streaming http solr server.The SolrCASConsumer class defines a createServer method. This method should be changed from private to protected in order to allow overwriting it.
issueID:UIMA-2037
type:Improvement
changed files:
texts:Add method to create a CAS to AnnotatorTester
The AnnotatorTest encapsulates the AnalysisEngine and calling AnalysisEngine.newCAS() is not possible. For testing it is handy to have the ability to create a fresh CAS which can be prepared as needed.  There should be an additional AnnotatorTester.createCAS method which will produce a CAS which has theAnalysisEngines type system.
issueID:UIMA-2038
type:Bug
changed files:
texts:UIMA AS process does not terminate reliably
UIMA AS two stop options dont seem to work reliably. Neither 's' nor 'q' on the command line force a clean shutdown of the process. Actually, there is also a related problem. Namely, when the shutdown succeeds it appears that the Shared Connection that all Spring listeners use is not closed which leads to an ugly exception on the broker console. This happens every time the service is terminated. Review listeners shutdown code and make sure that when the last listener terminates the connection is stopped before the process exits. Also, make sure that uima threads from custom pools are daemon threads to allow the jvm to collect them on shutdown. NOTE: AMQ version 4.x internal threads are not daemon threads and there is special code in the listener to wait for them to stop before exiting. Newer AMQ version use daemon threads so shutting down AMQ is much more reliable.
issueID:UIMA-2039
type:Task
changed files:
texts:upload site.xml for eclipse update site to main distribution site
The Eclipse update site appears to be missing the 2.3.1 components.  It actually has the components, but one file, the site.xml, wasn't uploaded properly. Re-upload it.
issueID:UIMA-204
type:Bug
changed files:
texts:Plugin builds have zip files with extra top level directories
If you unzip the target plugin zip file, you get something which looks like a plugin folder.  But it actually contains another folder of exactly the same name which is the real plugin folder.  This makes the normal action of unzipping the zip file and installing the resulting folder into the Eclipse plugin directory not work.  Of course, this may go away if we don't use zip packaging at all for plugins... (see UIMA-203)
issueID:UIMA-2041
type:Bug
changed files:
texts:Solrcas mapping switches values of language and text
The mapping file specifies language and text mappings. The file is parsed correctly.The parsed values are used to construct an instance of SolrMappingConfiguration.Inside this class the values for language and text are assigned to the wrong member variables.
issueID:UIMA-2042
type:Improvement
changed files:
texts:SolrCASConsumer should be refactored to not use JCas
The SolrCASConsumer should not depend on JCas, because that makes it impossible to use with non JCas analysis pipelines. Since in these applications the JCas types for the type system might not exist.The SolrCASConsumer is also not using any of the advantages JCas offers and should just use the CAS APIs instead.
issueID:UIMA-2043
type:Improvement
changed files:
texts:SolrCASConsumers initialize method should be refactored
In the initialize method the following is done:String solrInstanceTypeParam = String.valueOf(context.getConfigParameterValue("solrInstanceType"));assert solrInstanceTypeParam != null;The assert will always be true since String.valueOf never returns a null reference, even whenyou pass a null reference to it, it will return the string "null".getConfigParameterValue can actually return null, and we should fail the initialization ifnot all necessary parameters to run it are specified in the descriptor. It should failwith a meaningful error message.Using assert is not a safe way to fail the initialization because asserts are usuallydisabled.
issueID:UIMA-2044
type:Bug
changed files:
texts:UIMA AS Spring Container throws ava.lang.IllegalArgumentException: Display name must not be empty
Spring throws java.lang.IllegalArgumentException: Display name must not be empty  when deploying UIMA AS service using AE descriptor which does not specify <name..> element or its value is an empty string. Modify UIMA AS Spring Deployer component to check for missing name and generate one instead. The generated name will be the AE Class name (minus the package part).
issueID:UIMA-2045
type:Bug
changed files:
texts:Solrcas: All files should begin witht he AL 2.0 header
In our java source files the AL 2.0 header should be the first element. And it should not be placed after the imports or package elements in java source files.
issueID:UIMA-2046
type:Bug
changed files:
texts:Solrcas should not support the embedded solr server
Solrcas currently supports running an embedded Solr server. This functionality should be removed and only used for testing.The Solr documentation gives the following reasons not do use an embedded Solr server:"The simplest, safest, way to use Solr is via Solr's standard HTTP interfaces. Embedding Solris less flexible, harder to support, not as well tested, and should be reserved for special circumstances."(http://wiki.apache.org/solr/EmbeddedSolr) In our case it has also the disadvantage that Solrcas is harder to use because it is not clear that allthe Solr and Lucene dependencies are not required.
issueID:UIMA-2047
type:Improvement
changed files:
texts:Solrcas should not resolve the solrmapping file only via the classpath
The solrmapping file is currently only resolved via the classpath. It should be possible to place a solrmapping file next to the AE descriptor and load it like referenced descriptors. The Solrcas jar file also contains a default solrmapping file. That should not be included in the jar file, otherwise it might accidentally be loaded depending on the location of that jar on the classpath.
issueID:UIMA-2048
type:Improvement
changed files:
texts:UIMA AS should identify a delegate service in a Timeout Exception
When UIMA AS Client/Aggregate times out waiting for a reply from a delegate service, a Timeout Exception is logged. The exception itself does not identify which delegate service timed out. Further in the log the UIMA AS does identify the timed out delegate but there is no reason why this information should not be in the Timeout Exception. It would identify the offending delegate without a need to research the log. Apply the changes to both the UIMA AS client as well as the UIMA AS aggregate.
issueID:UIMA-2049
type:Bug
changed files:uimaj-ep-cas-editor-ide/src/main/java/org/apache/uima/caseditor/ide/DefaultCasDocumentProvider.java
uimaj-ep-cas-editor-ide/src/main/java/org/apache/uima/caseditor/ide/NlpProject.java
texts:CasEditor does not always saves changes under certain circumstances
More details soon.
issueID:UIMA-205
type:Bug
changed files:uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/ui/AggregateSection.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/ui/FlowSection.java
texts:CDE fails to add/rmv flow constraints when user-defined flow is specified without any flow constraints
When using user-defined flows, the specification of flow constraints is optional.  If specified, they can be used as additional "configuration" information for the user-defined flow.  If they are not specified, and the user uses the CDE to add something to the initially empty flow constraint, the CDE needs to update the descriptor to add a flow constraint (Fixed flow), in order to have something to add the the flow constraint to.
issueID:UIMA-2050
type:Bug
changed files:
texts:FileUtilsTest.testReadWriteTempFile does not run on all platform default encodings
In FileUtilTest we have the following piece of code:FileUtils.saveString2File(text, tmpFile1);text is a String which contains a German umlaut, dependingon the platform local it might not be possible to encode and decode theumlaut correctly. In that case the umlaut is encoded as "?" and then decoded"?", which fails the assertEquals which expects the correct umlaut.To make the UIMA build independent of the local we have to drop this part of thetest where it writes the file without specifying the local. In the other part of the test thefile is saved with UTF-8 encoding which is available per Java Specification on every compliant JVM.
issueID:UIMA-2051
type:Bug
changed files:
texts:Import_implTest.testFindAbsoluteUrl fails on Hudson
This test fails on hudson and should be fixed.The following error messages is printed out:Error Messageexpected:<file:/zonestorage/hudson/home/hudson/hudson-slave/workspace/UIMA-SDK/trunk/uimaj-core/foo/bar/MyFile.xml> but was:<file:/home/hudson/hudson-slave/workspace/UIMA-SDK/trunk/uimaj-core/foo/bar/MyFile.xml>Stacktrace:junit.framework.AssertionFailedError: expected:<file:/zonestorage/hudson/home/hudson/hudson-slave/workspace/UIMA-SDK/trunk/uimaj-core/foo/bar/MyFile.xml> but was:<file:/home/hudson/hudson-slave/workspace/UIMA-SDK/trunk/uimaj-core/foo/bar/MyFile.xml> at junit.framework.Assert.fail(Assert.java:47) at junit.framework.Assert.failNotEquals(Assert.java:282) at junit.framework.Assert.assertEquals(Assert.java:64) at junit.framework.Assert.assertEquals(Assert.java:71) at org.apache.uima.resource.metadata.impl.Import_implTest.testFindAbsoluteUrl(Import_implTest.java:124)
issueID:UIMA-2052
type:Improvement
changed files:
texts:UIMA-AS should use a profile to run extended tests
UIMA AS defines a set of tests which are called "extended test" and are not run as part of the normal build, because they take too long. Currently a pom.xml file must edited to run these test. It would be better to have a profile which enabled the extended test. That makes it easier for the developer to run them and it makes it possible for hudson to run them.
issueID:UIMA-2053
type:Improvement
changed files:
texts:Changes to standardize UIMA C++ build and packaging on Linux
The proposed modifications to the build process and to version numbering are described in the wiki page https://cwiki.apache.org/UIMA/proposed-changes-to-uima-c-build-and-packaging.html.The build process will directly invoke the autotools command and will be invoked from the root of an SVN extract or unzipped source tarball. Package version number and library version number will be handled separately.  These will not be tied to UIMA Java SDK release numbers. The library version number will be based on the libtool version numbering mechanism to better support backward compatibility of annotator binaries.
issueID:UIMA-2054
type:Improvement
changed files:
texts:Improve Solrcas integration test
Introduce integration tests that write documents to Solr via Solrcas and then retrieve them to check they were indexed as expected
issueID:UIMA-2055
type:Task
changed files:
texts:Refactor UIMA AS JmsOutputChannel code
There is quite a bit of redundancy in JmsOutputChannel source. Combine common code and simplify.
issueID:UIMA-2057
type:Improvement
changed files:
texts:Improve error handling in Solrcas
Remove debugging assertions and improve error handling
issueID:UIMA-2058
type:Bug
changed files:
texts:UIMA AS example program RunRemoteAsyncAE calls System.exit()
There are bunch of System.exit() calls in the RunRemoteAsyncAE.java. If any of them are triggered (usually in response to exception from service) the program just exits without first stopping the UIMA AS client. The result of this is an ugly exception in the broker: INFO  Transport                      - Transport failed: java.net.SocketException: Connection resetjava.net.SocketException: Connection reset        at java.net.SocketInputStream.read(SocketInputStream.java:168)        at org.apache.activemq.transport.tcp.TcpBufferedInputStream.fill(TcpBufferedInputStream.java:50)        at org.apache.activemq.transport.tcp.TcpTransport$2.fill(TcpTransport.java:575)        at org.apache.activemq.transport.tcp.TcpBufferedInputStream.read(TcpBufferedInputStream.java:58)        at org.apache.activemq.transport.tcp.TcpTransport$2.read(TcpTransport.java:560)        at java.io.DataInputStream.readInt(DataInputStream.java:370)        at org.apache.activemq.openwire.OpenWireFormat.unmarshal(OpenWireFormat.java:269)        at org.apache.activemq.transport.tcp.TcpTransport.readCommand(TcpTransport.java:226)        at org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:218)        at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:201)        at java.lang.Thread.run(Thread.java:619)
issueID:UIMA-2059
type:Improvement
changed files:
texts:Modify UIMA AS assembly script to include version in the base directory name
Currently the UIMA AS binary release artifacts are unzipped into a base directory apache-uima-as. There is no easy way to identify which version it is. Most Apache project binaries include a version as part of their base dir name, like apache-activemq-5.4.1, apache-camel-2.4.0. Same should be done with uima-as as well as the core uima.
issueID:UIMA-206
type:Bug
changed files:uimaj-core/src/main/java/org/apache/uima/cas/impl/CASImpl.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/CASImpl.java
texts:setSofaDataXXX(xxx, mime) methods do not set sofa mime feature
Reported by user.  Methods such as setSofaDataString(text, mime) do not set the Sofa mime feature.
issueID:UIMA-2060
type:Improvement
changed files:
texts:Add ShutdownHook to UIMA AS client code
UIMA AS client should detect when its process is terminating and perform necessary cleanup. Applications using UIMA AS client may not call stop() on the UIMA AS client and exit, causing an ugly exception on the broker console. ShutdownHook makes sure that the stop() is always called which closes broker connection.
issueID:UIMA-2061
type:Task
changed files:
texts:Introduce autocommit parameter in Solrcas to control Solr autocommit capability
Introduce autocommit parameter inside the descriptor to enable/disable sending <commit/> messages to Solr.In a future version that could also be discovered directly downloading and parsing solrconfig.xml from Solr.
issueID:UIMA-2063
type:Bug
changed files:
texts:UIMA AS Build Requires spring-aop-3.0.3.RELEASE.jar
Add missing spring jar: spring-aop-3.0.3.RELEASE.jar
issueID:UIMA-2064
type:Bug
changed files:
texts:UIMA AS client doesnt always throw ResourceProcessException
The UIMA AS client doesnt throw ResourceProcessException in some cases when the application invokes it via sendAndReceive().
issueID:UIMA-2065
type:Improvement
changed files:
texts:UIMA AS client needs ShutdownHook to close broker connection
If an application exits without calling stop method on the UIMA AS client, an ugly exception is thrown by the broker:java.net.SocketException: Connection reset        at java.net.SocketInputStream.read(SocketInputStream.java:168)        at org.apache.activemq.transport.tcp.TcpBufferedInputStream.fill(TcpBufferedInputStream.java:50)        at org.apache.activemq.transport.tcp.TcpTransport$2.fill(TcpTransport.java:575)        at org.apache.activemq.transport.tcp.TcpBufferedInputStream.read(TcpBufferedInputStream.java:58)        at org.apache.activemq.transport.tcp.TcpTransport$2.read(TcpTransport.java:560)        at java.io.DataInputStream.readInt(DataInputStream.java:370)        at org.apache.activemq.openwire.OpenWireFormat.unmarshal(OpenWireFormat.java:269)        at org.apache.activemq.transport.tcp.TcpTransport.readCommand(TcpTransport.java:226)        at org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:218)        at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:201)        at java.lang.Thread.run(Thread.java:619)This exception is thrown by the broker when it realizes that the socket connection to a client closed unexpectedly. Add a Shutdown Hook to the client to enable cleanup even though the application exits without calling stop().
issueID:UIMA-2066
type:Improvement
changed files:
texts:Solrcas should be fail-fast if type system mapping is incompatible
The SolrCASConsumer does not check if the specified types in the mapping file are actually compatible with the provided type system. Depending on the mapping and the processed CASes it might fail or cause incorrectly indexed data. In both cases the problem might be hard to diagnose when it also depends on the data in the CAS, e.g. it only fails if a FS of a certain type is present.During initialization the compatibility should be checked and in case of a problem fail with a meaningful error message.
issueID:UIMA-2067
type:Bug
changed files:
texts:Solrcas should remove CAS.toString() to field mapping aka "CasMapping"
Solrcas has a feature to map CAS.toString to a field in Solr. CAS.toString return the memory address of the CAS obejct, which in most contexts does not has any meaning to a user. This mapping should be removed since users might easily assume it could be used as an unique id which it cannot. There is also no reason to index the CAS memory address.If a user wishes to index debugging information it should be added as FSes to the CAS and indexed. The functionality to do that is already present via type to field mappings.
issueID:UIMA-2068
type:Bug
changed files:
texts:Modify UIMA AS broker configuration file to include optimizedDispatch="true"
Running a broker with optimizedDispatch="true" yields much better performance. Without this setting the broker is really slow under heavy load. By default, AMQ uses two threads per each jms session: transport thread and a session thread. With optimizedDispatch=true only one thread is used: the transport thread.
issueID:UIMA-2069
type:Bug
changed files:
texts:Remove hardcoded port numbers from UIMA AS tests
Currently extended tests use hardcoded port numbers in broker URLs. Also, most deployment descriptors use hardcoded URLs with specific port numbers. Modify all deployment descriptors to use placeholder for broker URL. During test bootstrapping, first test if a default port is open and if not increment it and test it again until an open port is found. Once found set the System property to enable UIMA AS to resolve the placeholder.
issueID:UIMA-207
type:Bug
changed files:uimaj-core/src/main/java/org/apache/uima/cas/CAS.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/CASImpl.java
uimaj-core/src/main/java/org/apache/uima/jcas/JCas.java
uimaj-core/src/main/java/org/apache/uima/jcas/impl/JCasImpl.java
uimaj-core/src/main/java/org/apache/uima/cas/CAS.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/CASImpl.java
uimaj-core/src/main/java/org/apache/uima/jcas/JCas.java
uimaj-core/src/main/java/org/apache/uima/jcas/impl/JCasImpl.java
uimaj-core/src/main/java/org/apache/uima/cas/CAS.java
uimaj-core/src/main/java/org/apache/uima/jcas/JCas.java
uimaj-core/src/main/java/org/apache/uima/cas/CAS.java
uimaj-core/src/main/java/org/apache/uima/jcas/JCas.java
texts:Documentation errors
Reported by User:Javadocs for createView say:Create a view and its underlying Sofa (subject of analysis). The view provides access to the Sofa data and the index repository that contains metadata (annotations and other feature structures) pertaining to that Sofa. presumably should say only the view is created ... the Sofa must be added with one of the setSofa... calls. (Adam: I think the Sofa FS is created, but the data is not set.  This could be clearer.)In section 6.2.7 of the SDK UG there is an example of createView with a 2nd arg of mime-type & an unsupported createDefaultTextViewCAS casView = cas.createView("mySofaName", mime-type);// (OR)CAS casView = cas.createDefaultText View();
issueID:UIMA-2070
type:Task
changed files:
texts:Update versions in opennlp uima descriptors to 1.5.1
All versions in the xml descriptors should be updated to 1.5.1.
issueID:UIMA-2071
type:Improvement
changed files:
texts:Change the specification of sorting keys to correspond to the sequence needed by the latest Jira upgrade
UIMA AS JIRA report is currently being sorted with the resolution first, then the key, then the type.  It should be with the type, then the key, then the resolution.  This happened because Jira was recently upgraded, and the upgrade reversed the meaning of the sequence of keys in the sorting specification.  So, reverse the sequence, so it corresponds to the new Jira.Changing in the local uima-as parent pom, as well as the overall build parent-pom.  The local change should be removed (it will be redundant) once the overall parent-pom is released and the uima-as parent pom is updated to depend on it.
issueID:UIMA-2072
type:Bug
changed files:
texts:Fix UIMA AS log message
Fix UIMAJMS_container_init_exception__WARNING message so that it does not require an argument. All this needs to do is to indicate that there is a problem while initializing a top level service and dump the exception.
issueID:UIMA-2073
type:Improvement
changed files:
texts:Add sentiment analysis service to AlchemyAPI Annotator
AlchemyAPI provides a new sentiment analysis service (see http://www.alchemyapi.com/api/sentiment/textc.html) that would be nice to wrap in AlchemyAPIAnnotator
issueID:UIMA-2074
type:Sub-task
changed files:
texts:Enable sentiment recognition at entity level
Sentiment analysis can be triggered also within the Entity Extraction service so a configuration parameter should be added to control this addition information
issueID:UIMA-2075
type:Bug
changed files:
texts:UIMA AS deploy script Deploy_NoOpAnotatorWithCpCDelay contains wrong AE descriptor name
Maven build fails on non-windows platform while executing UIMA AS extended tests. The testClientCpcTimeout() test uses Deploy_NoOpAnotatorWithCpCDelay.xml deployment descriptor where the AE descriptor name has capitalization error. The AE descriptor name should be NoOpAnnotatorWithCpcDelay.xml not NoOpAnnotatorWithCpCDelay.xml. Note the capitalization difference in ...Cpc...
issueID:UIMA-2076
type:Bug
changed files:
texts:Modify maven-failsafe-plugin in uimaj-as-activemq pom.xml to use UTF-8 encoding
The maven-safefail-plugin in uima-as-activemq pom.xml does not set UTF-8 encoding. This causes a WARNING:File encoding has not been set, using platform encoding {default encoding} when maven runs extended tests on Apple OS and linux. On Mac the default encoding seems to be: MacRomanModify failsafe-plugin to use UTF-8 encoding.
issueID:UIMA-2077
type:Bug
changed files:
texts:Remove base test from extended-test profile in uimaj-as-activemq failsafe plugin contained in pom.xml
The failsafe-plugin should only run extended tests in the extended-test profile. Currently both the base and extended tests run.
issueID:UIMA-2078
type:Bug
changed files:uimaj-core/src/main/java/org/apache/uima/analysis_engine/impl/MultiprocessingAnalysisEngine_impl.java
uimaj-core/src/main/java/org/apache/uima/resource/impl/CasManager_impl.java
uimaj-core/src/main/java/org/apache/uima/impl/UimaContext_ImplBase.java
uimaj-core/src/main/java/org/apache/uima/resource/Resource.java
uimaj-core/src/main/java/org/apache/uima/resource/Resource_ImplBase.java
uimaj-core/src/main/java/org/apache/uima/resource/impl/CasManager_impl.java
texts:Fix intermittent problem with CAS release while running scaled up AE in UIMA AS
While running extended tests on Mac, the testScaledSyncAggregateProcess() test failed with:org.apache.uima.analysis_engine.AnalysisEngineProcessException: CasManager.release(CAS) was called with a CAS that does not belong to this CasManager.\ at org.apache.uima.analysis_engine.asb.impl.ASB_impl$AggregateCasIterator.processUntilNextOutputCas(ASB_impl.java:701)\ at org.apache.uima.analysis_engine.asb.impl.ASB_impl$AggregateCasIterator.<init>(ASB_impl.java:409)\ at org.apache.uima.analysis_engine.asb.impl.ASB_impl.process(ASB_impl.java:342)\ at org.apache.uima.analysis_engine.impl.AggregateAnalysisEngine_impl.processAndOutputNewCASes(AggregateAnalysisEngine_impl.java:267)\ at org.apache.uima.aae.controller.PrimitiveAnalysisEngineController_impl.process(PrimitiveAnalysisEngineController_impl.java:514)\ at org.apache.uima.aae.handler.HandlerBase.invokeProcess(HandlerBase.java:121)\ at org.apache.uima.aae.handler.input.ProcessRequestHandler_impl.handleProcessRequestFromRemoteClient(ProcessRequestHandler_impl.java:474)\ at org.apache.uima.aae.handler.input.ProcessRequestHandler_impl.handle(ProcessRequestHandler_impl.java:952)\ at org.apache.uima.aae.handler.input.MetadataRequestHandler_impl.handle(MetadataRequestHandler_impl.java:78)\ at org.apache.uima.adapter.jms.activemq.JmsInputChannel.onMessage(JmsInputChannel.java:702)\ at org.springframework.jms.listener.AbstractMessageListenerContainer.doInvokeListener(AbstractMessageListenerContainer.java:535)\ at org.springframework.jms.listener.AbstractMessageListenerContainer.invokeListener(AbstractMessageListenerContainer.java:495)\ at org.springframework.jms.listener.AbstractMessageListenerContainer.doExecuteListener(AbstractMessageListenerContainer.java:467)\ at org.springframework.jms.listener.AbstractPollingMessageListenerContainer.doReceiveAndExecute(AbstractPollingMessageListenerContainer.java:323)\ at org.springframework.jms.listener.AbstractPollingMessageListenerContainer.receiveAndExecute(AbstractPollingMessageListenerContainer.java:261)\ at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.invokeListener(DefaultMessageListenerContainer.java:1056)\ at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.run(DefaultMessageListenerContainer.java:952)\ at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)\ at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)\ at org.apache.uima.aae.UimaAsThreadFactory$1.run(UimaAsThreadFactory.java:106)\ at java.lang.Thread.run(Thread.java:680)\Caused by: org.apache.uima.UIMARuntimeException: CasManager.release(CAS) was called with a CAS that does not belong to this CasManager.\ at org.apache.uima.resource.impl.CasManager_impl.releaseCas(CasManager_impl.java:131)\ at org.apache.uima.cas.AbstractCas_ImplBase.release(AbstractCas_ImplBase.java:35)\ at org.apache.uima.cas.impl.CASImpl.release(CASImpl.java:3604)\ at org.apache.uima.cas.impl.CASImpl.release(CASImpl.java:3602)\ at org.apache.uima.analysis_engine.asb.impl.ASB_impl$AggregateCasIterator.processUntilNextOutputCas(ASB_impl.java:689)\The above test deploys 5 instances of synchronous aggregate containing a CM and a NoOp Annotator. The CM generates 1 CAS for each input CAS. Total of 5 CASes are sent to the service for processing. Some of the CASes are processed and returned back to the client. I am not totally sure what the problem is at this time. It seems like the ASB is trying to release a child CAS when the above exception occurs. All instances of sync aggregates share Resource Manager containing common CasManager. Unable to reproduce this problem on Linux, Windows or Mac. Further diagnosis points toward an issue with the UIMA Java SDK, for use cases where multiple instances of an aggregate (containing a Cas Multiplier) are created and run using a shared common UIMA Context / Resource Manager.  Several parts of the Resource Manager are not thread safe.  Figure out where things like getEmptyCas need to be synchronized.Come up with a better test case (that isn't so intermittent).
issueID:UIMA-2079
type:Improvement
changed files:
texts:UIMA-AS Service logs a pid on startup, it should be separated with a space
The logged PID is frequently needed during testing to stop an UIMA-AS Service which runs in the background.Since the PID is not separated by a space from the colon it must be selected by moving the mouse in order to copy it via ctrl+c. To improve this add a space before it, then it can be selected by double clicking.
issueID:UIMA-208
type:Improvement
changed files:
texts:Merge TaeSpecifierSchema.xsd  with resourceSpecifierSchema.xsd
TaeSpecifierSchema.xsd is a bad name since "TAE" is deprecated.  Also there;s not much reason to have two separate files.  Most of the things in resourceSpecifierSchema.xsd are obsolete anyway.Recommend that the contents of TaeSpecifierSchema.xsd be merged into resourceSpecifierSchema.xsd and the former be deleted.
issueID:UIMA-2080
type:Bug
changed files:
texts:UIMA AS serice ShutdownHook dumps message to stderr
Modify ShutdownHook in UIMA_Service to log a message instead of dumping it to stderr.
issueID:UIMA-2081
type:Bug
changed files:
texts:UIMA-AS extended test intermittent failure - message InvalidDestinationException: Cannot publish to a deleted Destination: temp-queue ...
The extended tests, the testDeployAgainAndAgain occasionally fails.  The failure occurs in the following sequence:The test starts, it deploys some services, these connect to the broker.  It deploys a client, this client sets up a connection to the broker, and creates a temp queue, and then immediately sends a getMeta request using the just created temp queue as the reply destination.  The service gets the getMeta, and responds, by attempting to send the reply to that temp queue.But the Broker hasn't (apparently) quite finished create the queue, and so we get a message to the console log saying:javax.jms.InvalidDestinationException: Cannot publish to a deleted Destination: temp-queue:// ...The error is quite intermittent.  Sometimes there is no error reported for this testDeployAgainAndAgain.  However, if I put that test into a loop, it seems to fail somewhere between 200 - 300 seconds of running on the MacBook.  If I insert a 1/10 second delay after the Client creates the temp queue on the broker, and before the Client uses that temp queue in a getMeta request, then it runs for hours with no error being reported.Suggestion: insert a short delay after first setting up a temp queue in a broker, before using that queue in messages, to insure it has a chance to get set up.  Consider making a test case for this for ActiveMQ.
issueID:UIMA-2082
type:Improvement
changed files:uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/core/model/dotcorpus/DotCorpusSerializer.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/annotation/TagDrawingStrategy.java
texts:Remove redundant nullchecks in Cas Editor code
Remove all redundant nullchecks found by sonar from theCas Editor code base.
issueID:UIMA-2083
type:Bug
changed files:
texts:UIMA AS service always uses binary serialization
UIMA AS service always specifies 'binary' as a type of payload in an outgoing message. The 'xmi' payload type is never used causing a problem with services (like C++ services)which dont support binary. This bug has been introduced in a recent refactoring of UIMA AS JmsOutputChannel. Modify code to use serialization type defined in the deployment descriptor.
issueID:UIMA-2084
type:Improvement
changed files:
texts:Extend UIMA AS service JMX API to dump service state
Currently UIMA AS jmx service InfoMBean shows the state of a service as INITIALIZING, RUNNING, DISABLED, STOPPING, or FAILED. Extend UIMA AS aggregate to show the state of each delegate both remote and co-located. In case the aggregate is hung during initialization, dumping state of each delegate may help pin point a cause of the hang if the culprit is a delegate. When a delegate returns its metadata to the aggregate its state should change from INITIALIZING to RUNNING. Modify service JMX InfoMBean to include a new method dumpState() to enable dumping state of each UIMA AS service.
issueID:UIMA-2085
type:Bug
changed files:
texts:UIMA AS source distribution contains plain vanilla versions of LICENCE and NOTICE files
The LICENCE and NOTICE files included in the source distribution of UIMA AS are not valid. Maven plugin, packaging the source gets the plain vanilla versions of the two files instead of the ones that were created for UIMA AS. Modify uima-as pom to include maven 'copy-resource' plugin to copy the right files to target/maven-shared-archive-resources/META-INF. This is the place from which the source packaging plugin gets the appropriate LICENSE and NOTICE files when building source distribution. Configure the 'copy-resources' plugin to run in maven's 'process-resources' phase.
issueID:UIMA-2086
type:Improvement
changed files:
texts:add step to enforce requirement for maven version 3 or later
A user had a build issue caused by using maven 2.  Our poms have a prereq for Maven 3, but this is apparently not "checked" by Maven.  Add the check (try using the enforcer plugin).
issueID:UIMA-2087
type:Bug
changed files:
texts:UIMA AS assembly script includes an incorrect version of .classpath
UIMA AS assembly script includes .classpath file from target/uimaj/apache-uima/examples instead of UIMA AS specific one from uima-as/main/eclipseProject. This classpath is used for compiling/running uima-as examples in eclipse.
issueID:UIMA-2088
type:Bug
changed files:
texts:UIMA AS .classpath for examples contains duplicate jar entries
The UIMA AS examples .classpath file contains duplicate entry for commons-logging and an extra (and invalid) location for activemq-all-5.4.1.jar.
issueID:UIMA-2089
type:New Feature
changed files:
texts:Add command line utility to test for a remote UIMA-AS service
A useful utility to work with UIMA-AS services
issueID:UIMA-209
type:Bug
changed files:uimaj-core/src/main/java/org/apache/uima/cas/impl/FeatureStructureImplC.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FeatureStructureImplC.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FeatureStructureImplC.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/TOP.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FeatureStructureImplC.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/TOP.java
texts:FeatureStructure.equals returns false for same FS obtained through different views
This is because the implementation of FeatureStructure.equals checks that the FS are both pointing to the same CAS object.  But the CAS reference of an FS is currently being set to whichever view that FS was created off of.  So if you obtain a reference to an FS through two different views, equals() will always return false because the CAS references don't match.  This broke the CasCopier utility which relies on equals() to work correctly.I will attach a simple patch for the SofaTest testcase that demonstrates the problem.
issueID:UIMA-2090
type:Bug
changed files:
texts:UIMA AS eclipse launch scripts not setup correctly
The two UIMA AS scripts in the uima-as/examples/run_configuration: UIMA Deploy AS Service.launch and UIMA Run Remote Async AE.launch are setup to only work if Maven eclipse plugin is installed. If the examples project is imported to an eclipse with no maven plugin, the launch scripts fail due to invalid classpath. Remove dependency on maven and setup classpath based on UIMA_HOME eclipse variable.
issueID:UIMA-2091
type:Bug
changed files:
texts:UIMA AS assembly script should copy project file from base uima examples
UIMA AS assembly script is not packaging a project file from base uima examples which is needed to run base uima eclipse GUI tools. All of these tools depend on existence of uima-examples project which is currently not being created when importing UIMA  AS examples.
issueID:UIMA-2094
type:Bug
changed files:
texts:uima-addons distr package creates empty archives
The UIMA addons distribution project should refactored to produce non-empty zip/tar.gz archives when launching "mvn -Papache-release package" (only the source archive is correct).
issueID:UIMA-2095
type:Task
changed files:
texts:Update UIMA AS top level README, LICENSE, and NOTICE to point user to corresponding files in uima-as project
The top level UIMA AS README, LICENSE, and NOTICE in the svn should contain a reference to corresponding files found in the uima-as project. This should reduce maintenance of these files.
issueID:UIMA-2096
type:Task
changed files:
texts:Fix uimaj-eclipse-update-site pom.xml and site.xml
The uimaj-eclipse-update-site packaging is incorrect. It includes 2.3.1-SNAPSHOT version of the deployment feature, instead of the 2.3.1. Modify pom.xml and site.xml and redeploy to download site.
issueID:UIMA-2097
type:Bug
changed files:uimaj-core/src/main/java/org/apache/uima/util/UriUtils.java
uimaj-core/src/main/java/org/apache/uima/impl/UimaContext_ImplBase.java
uimaj-core/src/main/java/org/apache/uima/resource/impl/ConfigurableDataResource_impl.java
uimaj-core/src/main/java/org/apache/uima/resource/impl/DataResource_impl.java
uimaj-core/src/main/java/org/apache/uima/util/UriUtils.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/cpm/container/deployer/JavaApplication.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/cpm/container/deployer/NonJavaApplication.java
uimaj-tools/src/main/java/org/apache/uima/tools/components/XCasWriterCasConsumer.java
uimaj-tools/src/main/java/org/apache/uima/tools/components/XmiWriterCasConsumer.java
uimaj-tools/src/main/java/org/apache/uima/tools/cpm/CpmPanel.java
texts:Treatment of URLs with blanks is incorrect in some places
User reported Document Analyzer failing to write correct names in the output directory, when the input directory had a blank in it (on Windows).  Traced this to failing URL handling.Proper URL handling seems to need to observe these principles:1) URL may have "blanks" and other "invalid-in-URI chars"2) URL may have %20 style encoding of blanks and other need-to-be-escaped charactersCreating files from these: need to use File(a-uri-form).Creating URIs from URLs - if the URL has unescaped blanks, etc., the formnew URI(aUrl) fails; the aUrl.toURI() fails (i.e., throws an exception due to illegal chars for URI).To make the URI creation put in the escape chars if they're not there, you need to use the multi-arg form of new URI (see Javadocs).Fix the patches in UIMA-1879 and UIMA-1748.
issueID:UIMA-2098
type:Task
changed files:
texts:Update uima-website to include uima-as-2.3.1 information
Modify downloads page to include uima-as-2.3.1 release artifacts
issueID:UIMA-2099
type:Bug
changed files:uimaj-core/src/main/java/org/apache/uima/pear/util/XMLUtil.java
texts:testUTF16NoSignature(org.apache.uima.pear.util.PearEncodingTest) failing on IBM Java 5
testUTF16NoSignature(org.apache.uima.pear.util.PearEncodingTest)has a solid failure when running with IBM Java 5, but works with Sun/Oracle Java 5.Failure happens when translating the first few bytes in a read buffer into UTF-16LE,in the method detectXmlFileEncoding in org.apache.uima.pear.XMLUtil, when the number of bytes passed in is 7.  Works if this is changed to 6.
issueID:UIMA-21
type:Task
changed files:
texts:Update Version Number
Consensus seems to be to call the version  2.1-incubating-SNAPSHOT.
issueID:UIMA-210
type:Bug
changed files:uimaj-core/src/main/java/org/apache/uima/util/FileUtils.java
uimaj-core/src/main/java/org/apache/uima/util/FileUtils.java
uimaj-tools/src/main/java/org/apache/uima/tools/components/FileSystemCollectionReader.java
uimaj-jet-expander/src/org/apache/uima/util/jet/JetExpander.java
uimaj-examples/src/main/java/org/apache/uima/examples/cpe/FileSystemCollectionReader.java
uimaj-examples/src/main/java/org/apache/uima/examples/ExampleApplication.java
uimaj-examples/src/main/java/org/apache/uima/examples/PrintAnnotations.java
uimaj-examples/src/main/java/org/apache/uima/examples/casMultiplier/CasMultiplierExampleApplication.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/cpm/engine/DebugControlThread.java
uimaj-core/src/main/java/org/apache/uima/util/FileUtils.java
uimaj-examples/src/main/java/org/apache/uima/examples/ExampleApplication.java
uimaj-examples/src/main/java/org/apache/uima/examples/PrintAnnotations.java
uimaj-examples/src/main/java/org/apache/uima/examples/casMultiplier/CasMultiplierExampleApplication.java
uimaj-examples/src/main/java/org/apache/uima/examples/cpe/FileSystemCollectionReader.java
uimaj-core/src/main/java/org/apache/uima/util/FileUtils.java
uimaj-core/src/main/java/org/apache/uima/pear/util/XMLUtil.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/cpm/engine/DebugControlThread.java
uimaj-tools/src/main/java/org/apache/uima/tools/components/FileSystemCollectionReader.java
uimaj-tools/src/main/java/org/apache/uima/tools/docanalyzer/DocumentAnalyzer.java
uimaj-tools/src/main/java/org/apache/uima/tools/docanalyzer/AnnotationViewerDialog.java
uimaj-tools/src/main/java/org/apache/uima/tools/viewer/CasTreeViewer.java
uimaj-jet-expander/src/org/apache/uima/util/jet/JetExpander.java
uimaj-adapter-vinci/src/main/java/org/apache/uima/adapter/vinci/util/VinciTAEClient.java
texts:faulty use of .read(buffer...) in several places - not checking for fewer than expected bytes/chars read
The definition of most instances of stream.read(bufferArray) says it reads up to the length of the array.  We had earlier an issue on a multi-core machine where the length read was much less than the length of the buffer or of the file. (This was in Vinci).  The solution is to wrap these things in code that looks like this from the XTalkTransporter (this assumes the file length is known):  static public void readFully(byte[] b, int length, InputStream in) throws IOException {    int read_so_far = 0;    while (read_so_far < length) {      int count = in.read(b, read_so_far, length - read_so_far);      if (count < 0) {        throw new EOFException();      }      read_so_far += count;    }  }Code which is broken can be found by scanning for .read(Ones I found scanning are:VinciTAEClientFileUtils (copyFile method) (Note: similarly named class FileUtil (no final "s") has a copyFile method that is OK)XMLUtil.java has fragment that could fail incorrectly in detectXmlFileEncoding:      // store the 1st text byte and read next 6 bytes of XML file      buffer&#91;byteCounter++&#93; = (byte) nextByte;      if (iStream.read(buffer, byteCounter, bytes2put - 1) != bytes2put - 1)   //ERROR NOT ALLOWING FOR FEWER BYTES READ        throw new IOException("cannot read file");There are multiple instances of code in JcasSofaTest don't allow for the possiblity of reading fewer than buf size; here's one:      dest = new byte&#91;4&#93;;      is.close();      is = intArrayView.getSofaDataStream();      assertTrue(is != null);      int i = 0;      while (is.read(dest) != -1) {        assertTrue(ByteBuffer.wrap(dest).getInt() == intArrayFS.get(i++));        ;      }And another one like this in SofaTest.DebugControlThread method doCheckpoint has the problemIn our examples, the following have the problem:CasMultiplierExampleApplication FileSystemCollectionReaderExampleApplicationPrintAnnotationsJetExpanderAnd in uimaj-tools:FileSystemCollectionReaderCasTreeViewer
issueID:UIMA-2100
type:New Feature
changed files:uimaj-ep-launcher/src/main/java/org/apache/uima/ep_launcher/AnalysisEngineLaunchConfigurationDelegate.java
uimaj-ep-launcher/src/main/java/org/apache/uima/ep_launcher/LauncherConstants.java
uimaj-ep-launcher/src/main/java/org/apache/uima/ep_launcher/RemoteLauncher.java
uimaj-ep-launcher/src/main/java/org/apache/uima/ep_launcher/ui/AnalysisEngineMainTab.java
uimaj-ep-launcher/src/main/java/org/apache/uima/ep_launcher/AnalysisEngineLaunchConfigurationDelegate.java
uimaj-ep-launcher/src/main/java/org/apache/uima/ep_launcher/AnalysisEngineLaunchConfigurationDelegate.java
uimaj-ep-launcher/src/main/java/org/apache/uima/ep_launcher/RemoteLauncher.java
uimaj-ep-launcher/src/main/java/org/apache/uima/ep_launcher/AnalysisEngineLaunchConfigurationDelegate.java
uimaj-ep-launcher/src/main/java/org/apache/uima/ep_launcher/AnalysisEngineLaunchConfigurationDelegate.java
uimaj-ep-launcher/src/main/java/org/apache/uima/ep_launcher/AnalysisEngineLaunchConfigurationDelegate.java
uimaj-ep-launcher/src/main/java/org/apache/uima/ep_launcher/ui/AnalysisEngineMainTab.java
uimaj-ep-launcher/src/main/java/org/apache/uima/ep_launcher/RemoteLauncher.java
uimaj-ep-launcher/src/main/java/org/apache/uima/ep_launcher/AnalysisEngineLaunchConfigurationDelegate.java
uimaj-ep-launcher/src/main/java/org/apache/uima/ep_launcher/LauncherConstants.java
uimaj-ep-launcher/src/main/java/org/apache/uima/ep_launcher/LauncherPlugin.java
uimaj-ep-launcher/src/main/java/org/apache/uima/ep_launcher/RemoteLauncher.java
uimaj-ep-launcher/src/main/java/org/apache/uima/ep_launcher/ui/AnalysisEngineMainTab.java
uimaj-ep-launcher/src/main/java/org/apache/uima/ep_launcher/ui/AnalysisEngineTabGroup.java
texts:Add eclipse launch support for Analysis Engines
Developing/testing AEs inside eclipse is cumbersome because we do nothave launch support for AEs. To run an AE inside eclipse a small helperclass must be created which can instantiate the AE, supply it with CASesand maybe serialize the processed CASes again.To ease up this process we should have launch support which is capable ofinstantiating an AE (or AAE), supply it with CASes and then serialize the CASesagain. The launch support should also be able to run PEARS.
issueID:UIMA-2101
type:Bug
changed files:uimaj-core/src/main/java/org/apache/uima/util/CasToInlineXml.java
texts:CasToInlineXml adds whitespace
CasToInlineXml adds indentation between adjacent XML elements. E.g. for a single character document with a single annotation covering that one character, it will write:<?xml version="1.0" encoding="UTF-8"?><Document>    <uima.tcas.DocumentAnnotation sofa="Sofa" begin="0" end="1" language="x-unspecified">        <uima.tcas.Annotation sofa="Sofa" begin="0" end="1"> </uima.tcas.Annotation>    </uima.tcas.DocumentAnnotation></Document>I think it should instead write everything in a single line, that is:<?xml version="1.0" encoding="UTF-8"?><Document><uima.tcas.DocumentAnnotation sofa="Sofa" begin="0" end="1" language="x-unspecified"><uima.tcas.Annotation sofa="Sofa" begin="0" end="1"> </uima.tcas.Annotation></uima.tcas.DocumentAnnotation></Document>I believe this could be fixed by replacing the line:XMLSerializer sax2xml = new XMLSerializer(byteArrayOutputStream);with the line:XMLSerializer sax2xml = new XMLSerializer(byteArrayOutputStream, false);I think it's a bug that CasToInlineXml is changing the character offsets, but I would also be happy if there was an alternate constructor or a method on CasToInlineXml that allowed disabling the formatting.
issueID:UIMA-2102
type:Improvement
changed files:uimaj-core/src/main/java/org/apache/uima/resource/impl/ResourceManager_impl.java
uimaj-core/src/main/java/org/apache/uima/resource/impl/ResourceManager_impl.java
texts:Make ResourceManager_impl.ResourceRegistration protected
I wanted to extend the ResourceManager_impl in an effort to explore the injection of POJOs into UIMA components. This effort was complicated a bit because the class ResourceManager_impl.ResourceRegistration is package private. For people who want to implement their own version of a ResourceManager, I suppose it would be helpful if that class was protected instead, so subclasses can properly work with the mInternalResourceRegistrationMap field, which is also protected.
issueID:UIMA-2103
type:Task
changed files:
texts:Final tweaks on uima-addons for the release
This task includes minor changes to release notes, headers, and everything else needed for the addons release
issueID:UIMA-2104
type:Bug
changed files:
texts:Tagger must be built after WhitespaceTokenizer in aggregate-addons
The module list specifies Tagger before WhitespaceTokenizer (alphabetical order) but WhitespaceTokenizer should be installed first since Tagger has a dependency on it and in an empty (offline) Maven repo that dependency cannot be satisfied. Need to set Tagger just after WhitespaceTokenizer in aggregate-addons pom.xml
issueID:UIMA-2105
type:Bug
changed files:
texts:UIMA AS Aggregate Not Handling Broker Restart
UIMA AS aggregate with remote delegate is not recovering correctly when a broker is stopped and subsequently restarted. In this scenario, both the aggregate and the delegate reconnect to the new broker, which is expected. The problem is that the aggregate is not creating a new temp queue and corresponding listener for the remote delegate. The aggregate actually creates the temp queue and a listener if and only if maxRetries>0 in the delegate's error handling configuration. The recovery should be done regardless of the this setting. After broker restart, the subsequent CAS coming in to the aggregate should force creation of a temp reply queue and a new listener on that queue before the CAS is sent to a remote delegate.
issueID:UIMA-2107
type:Bug
changed files:uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/AnnotationDocument.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/AnnotationEditor.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/AnnotationDocument.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/AnnotationEditor.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/outline/OutlineLabelProvider.java
texts:Annotation Editor must display a message when the shown sofa is incompatible (or not set)
The Annotation Editor currently throws an exception when no text sofa is set. The editor should show a meaningful message to the user. It should support to view/edit the FSes with the surrounding views and offer support to switch the CAS view.
issueID:UIMA-2109
type:Task
changed files:
texts:Set latest dependencies/plugins/properties versions for UIMA Addons (where applicable)
According to http://uima.apache.org/release.html, set dependencies' versions to the latest available release where applicable
issueID:UIMA-211
type:Task
changed files:uimaj-tools/src/main/javajet/jcasgen/includedTemplates/ArrayBoundsChecking.javajet
uimaj-core/src/main/java/org/apache/uima/cas/impl/TypeImpl_list.java
uimaj-tools/src/main/javajet/jcasgen/templates/JCasType.javajet
uimaj-tools/src/main/javajet/jcasgen/includedTemplates/AnnotationMethods.javajet
texts:Restructure directory uimaj-tools/src/main/org.apache.uima.jcasgen
Change to uimaj-tools/src/main/javajet/jcasgen because:(1) maven convention is to have the directory immediatley under "main" indicate the kind of file that goes there(2) I didn't like dots in directory names
issueID:UIMA-2110
type:Improvement
changed files:
texts:Turn the HMMTagger class into a more generic class for tagging tasks
Despite its name, the code of the org.apache.uima.examples.tagger.HMMTagger class is not totally independant from the pos tagging task. In addition it assumes that the feature path to update with the result of the tagging is org.apache.uima.TokenAnnotation:posTag.We propose to let the possibility to users to specify by parameter the feature path to set. This parameter is optional. If it is left free, the tagger will work as usually using the org.apache.uima.TokenAnnotation:posTag as default value.By the way, we propose to add three optional parameters : InputView, SentenceType and ModelFile.Since the HMM Learner has got the possibility to specify the view to use to train a model, we consequently decide to give the same possibility for the tagger. By default, it works on the _InitialView. It is actually quite useful in practice!The org.apache.uima.TokenAnnotation type is not the only annotation type which is assumed to be present in the CAS. Actually, the HMMTagger processes tokens sentence by sentence. It uses the   org.apache.uima.SentenceAnnotation to select the tokens. The SentenceType parameter aims at letting the users free to specify their own sentence annotation Type. The default value is org.apache.uima.SentenceAnnotation. The ModelFile parameter is a concurrent way to the resource declaration way to specify a model.Left empty, it won t be considered. Otherwise it will predomine over the resource declaration. When specified, the multiple deployement of the tagger cannot be allowed but in practice for the user it may be easier to configure a parameter through Eclipse.    Two distincts patches will be provided, one for the class and the other for the descriptor.Future improvement of the class might offer the possibility to create new annotations not only to update existing ones.  Future improvement of the descriptor may dissociate what it is up to the tagger and what it is relevant for the pos tagger...
issueID:UIMA-2111
type:New Feature
changed files:
texts:Manage login pasword for ActiveMQ
There is no way to set a user/password for the ActiveMQConnectionFactory
issueID:UIMA-2112
type:Bug
changed files:uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/QuickTypeSelectionDialog.java
texts:Quick type selection blocks UI thread if there are too many types in the type system
The Quick type selection dialog assigns a key shortcut for every type, if there are more types than possible key shortcuts the dialog hangs because the assignment codes loops endlessly. Fix the assignment logic to correctly terminate if there are no more shortcuts available.
issueID:UIMA-2113
type:Bug
changed files:uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/AnnotationEditor.java
texts:Annotation Editor synchronizes annotations very slowly after its first opened
After the Annotation Editor is opened it can take many seconds until all annotations are actually displayed in the editor.This seems to be caused by the usage of the AnnotationModel where each annoation is added individual, instead of one bulk add.
issueID:UIMA-2114
type:Bug
changed files:uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/ui/Utility.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/ui/dialogs/AbstractDialogMultiColTable.java
texts:Endless dialogs when Capabilities Types/Features misclicked
Can reproduce using the UIMA tutorial.1) Open RoomNumberAnnotator.xml2) Go to Capabilities tab.3) Double click RoomNumber type to edit.4) In the Edit Types to a Capability Set, click anywhere in the grid outside the Input / Output cell columns (e.g., click RoomNumber in TypeName).5) A dialog appears telling you to click in the right columns.6) Try clicking OK in the dialog and another appears.7) Repeat 5-7 ad infinitum.Have to quit Eclipse at this point to get out of the loop. Same thing happens in the Add/Edit Features dialog too.
issueID:UIMA-2115
type:Bug
changed files:uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/ui/property/AnnotationPropertyPage.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/ui/property/AnnotationPropertyPage.java
texts:Annotation Style Pages type list gets too long with many types
The Annotation Style Page displays a list of all types in the type system, if there are many types the list is long. The list/table control should use a vertical scroll bar to scroll trough the types instead of beeing very long and using the pages vertical scroll bar.
issueID:UIMA-2116
type:Bug
changed files:uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/ui/AbstractSection.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/ui/AggregateSection.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/ui/dialogs/AbstractDialog.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/ui/dialogs/AddRemoteServiceDialog.java
texts:Component Descriptor Editor problem adding JMS service descriptor as delegate
The aggregate tab allows adding delegates via "add" button or adding remote delegates via "addRemote". Neither of these supports adding JMS (UIMA-AS) service descriptors.The CDE does support UIMA-AS services as delegates if they have been added by editing the source.
issueID:UIMA-2119
type:Improvement
changed files:
texts:Cas Editor should prefix names of contributions with UIMA
The Cas Editor should prefix contribution names with UIMA. Rename view category from "Cas Editor" to "UIMA Cas Editor" Rename "Annotation Editor" to "UIMA Annotation Editor" (or a different name)
issueID:UIMA-212
type:Improvement
changed files:uimaj-adapter-vinci/src/main/java/org/apache/uima/adapter/vinci/VinciAnalysisEngineServiceStub.java
uimaj-adapter-vinci/src/main/java/org/apache/uima/adapter/vinci/VinciBinaryAnalysisEngineServiceStub.java
uimaj-adapter-vinci/src/main/java/org/apache/uima/adapter/vinci/VinciAnalysisEngineServiceStub.java
uimaj-adapter-vinci/src/main/java/org/apache/uima/adapter/vinci/VinciBinaryAnalysisEngineServiceStub.java
jVinci/src/main/java/org/apache/vinci/transport/BaseClient.java
jVinci/src/main/java/org/apache/vinci/transport/VinciClient.java
jVinci/src/main/java/org/apache/vinci/transport/context/VinciContext.java
jVinci/src/main/java/org/apache/vinci/transport/BaseClient.java
jVinci/src/main/java/org/apache/vinci/transport/VinciClient.java
jVinci/src/main/java/org/apache/vinci/transport/context/VinciContext.java
uimaj-adapter-vinci/src/main/java/org/apache/uima/adapter/vinci/VinciAnalysisEngineServiceStub.java
uimaj-adapter-vinci/src/main/java/org/apache/uima/adapter/vinci/VinciBinaryAnalysisEngineServiceStub.java
uimaj-adapter-vinci/src/main/java/org/apache/uima/adapter/vinci/VinciAnalysisEngineServiceStub.java
uimaj-adapter-vinci/src/main/java/org/apache/uima/adapter/vinci/VinciBinaryAnalysisEngineServiceStub.java
uimaj-core/src/main/java/org/apache/uima/UIMAFramework.java
uimaj-core/src/main/java/org/apache/uima/UIMAFramework.java
texts:Turn on socket keepAlive in jVinci
Turn on socket keepAlive by default in jVinci.  Make configurable as a UIMA framework inernal config setting.Details here: http://www.mail-archive.com/uima-dev@incubator.apache.org/msg01527.html
issueID:UIMA-2120
type:Improvement
changed files:uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/contextmenu/ModeMenu.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/contextmenu/ShowAnnotationsMenu.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/contextmenu/TypeMenu.java
texts:Annotation Editor should display type names only with full name space
The Annotation Editor only uses the type (short) name to display types in many places, but that is problematic if two types with different name spaces have the same name. That should be changed and all types should be displayed with their full name space.
issueID:UIMA-2121
type:New Feature
changed files:uimaj-tools/src/main/java/org/apache/uima/tools/pear/install/InstallPearCli.java
uimaj-tools/src/main/java/org/apache/uima/tools/pear/install/InstallPearCli.java
texts:command line PEAR installer
There should be a way to install PEARs without having to use the GUI PearInstaller.  This is especially important when installing all needed PEARs for a project, or doing a clean reinstall.
issueID:UIMA-2122
type:Improvement
changed files:uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/AnnotationEditor.java
uimaj-ep-cas-editor-ide/src/main/java/org/apache/uima/caseditor/ide/TypeSystemLocationPropertyPage.java
uimaj-ep-cas-editor-ide/src/main/java/org/apache/uima/caseditor/ide/DefaultCasDocumentProvider.java
texts:Cas Editor default type system location should be configurable
The Cas Editor currently uses a hard coded default type system location which is TypeSystem.xml at the top of the project folder. This default location should be configureable with a project settings page. The page should save the location as a persistent property of the project in the same way the CDE data path is saved.
issueID:UIMA-2123
type:Task
changed files:uimaj-ep-cas-editor-ide/src/main/java/org/apache/uima/caseditor/ide/DefaultCasDocumentProvider.java
uimaj-ep-cas-editor-ide/src/main/java/org/apache/uima/caseditor/ide/wizards/ImportDocumentWizardPage.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/Images.java
uimaj-ep-cas-editor-ide/src/main/java/org/apache/uima/caseditor/ide/TypeSystemLocationPropertyPage.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/outline/ModeSensitiveContentProvider.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/CasEditorPlugin.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/AnnotationEditor.java
uimaj-ep-cas-editor-ide/src/main/java/org/apache/uima/caseditor/ide/NlpProject.java
texts:Remove Cas Editor Project support from Cas Editor
The Cas Editor started with a special project type called"Cas Editor Project" to mange annotation projects, this specialproject is through recent work which went into the 2.3.1 release now obsolete,since 2.3.1 it is possible to open a CAS file from any project type.The Cas Editor Project and everything which is related to it should be removed.The removal would remove a bunch of code from the Cas Editor.The would be the following: Cas Editor Project model Corpus Explorer Analysis Engine and Cas Consumer run support (replaced for 2.3.2 by the uimaj-ep-launcher plugin)As part of the removal, existing Cas Editor Projects must be migrated gracefully.The migration could be done like this:When the new Cas Editor 2.3.2 is started up the first time,it does the following to migrate a project.1. Reads the dotCorpus file and sets the type system location for the project2. Copies the dotCorpus to the new default styling file locationAfter these two steps a user will be able to open any .xcas or .xmi file insidethe migrated project with the configured styling. The functionality to run anAE will be removed from the Cas Editor and we will instruct our users to usethe new eclipse AE launch support instead.
issueID:UIMA-2124
type:Bug
changed files:
texts:Annotation Editor throws exception when context menu is shown
The Annotation Editor throws an exception when the context menu is shown. It is believed that this exception is linked to the way the "Enter" command is registered.!ENTRY org.eclipse.jface 4 0 2011-04-13 12:34:41.470!MESSAGE The command ("Enter") is undefined!STACK 0java.lang.Exception at org.eclipse.jface.action.ExternalActionManager$CommandCallback.isActive(ExternalActionManager.java:370) at org.eclipse.jface.action.ActionContributionItem.isCommandActive(ActionContributionItem.java:647) at org.eclipse.jface.action.ActionContributionItem.isVisible(ActionContributionItem.java:703) at org.eclipse.jface.action.MenuManager.isChildVisible(MenuManager.java:985) at org.eclipse.jface.action.MenuManager.update(MenuManager.java:759) at org.eclipse.jface.action.MenuManager.handleAboutToShow(MenuManager.java:470) at org.eclipse.jface.action.MenuManager.access$1(MenuManager.java:465) at org.eclipse.jface.action.MenuManager$2.menuShown(MenuManager.java:491) at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:241) at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:84) at org.eclipse.swt.widgets.Display.sendEvent(Display.java:3776) at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1367) at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1390) at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1371) at org.eclipse.swt.widgets.Menu.menuWillOpen(Menu.java:689) at org.eclipse.swt.widgets.Display.windowProc(Display.java:5030) at org.eclipse.swt.internal.cocoa.OS.objc_msgSend(Native Method) at org.eclipse.swt.internal.cocoa.NSMenu.popUpContextMenu(NSMenu.java:68) at org.eclipse.swt.widgets.Menu._setVisible(Menu.java:235) at org.eclipse.swt.widgets.Display.runPopups(Display.java:3699) at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3270) at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:2640) at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:2604) at org.eclipse.ui.internal.Workbench.access$4(Workbench.java:2438) at org.eclipse.ui.internal.Workbench$7.run(Workbench.java:671) at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:332) at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:664) at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:149) at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:115) at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196) at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:110) at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:79) at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:369) at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:179) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25) at java.lang.reflect.Method.invoke(Method.java:597) at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:619) at org.eclipse.equinox.launcher.Main.basicRun(Main.java:574) at org.eclipse.equinox.launcher.Main.run(Main.java:1407) at org.eclipse.equinox.launcher.Main.main(Main.java:1383)
issueID:UIMA-2125
type:Improvement
changed files:uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/AnnotationEditor.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/action/LowerLeftAnnotationSideAction.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/action/LowerRightAnnotationSideAction.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/action/WideLeftAnnotationSideAction.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/action/WideRightAnnotationSideAction.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/outline/AnnotationOutline.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/AnnotationEditor.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/AnnotationEditor.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/AnnotationEditor.java
texts:Annotation Editor and its corresponding Outline View should have key bindings to change annotation spans
The Outline of the Annotation Editor defines actions to change the bounds of an annotation. These actions should be trigger-able by key bindings in the Outline view. The Annotation Editor should also support these actions, they should be triggered via the context menu or via key bindings.
issueID:UIMA-2126
type:Improvement
changed files:
texts:Update of the Lucene libraries to version 2.9.3. Addition of an attribute for field definitions in the mapping file to make this field unique in the resulting index.
The Lucene library dependency has been updated to version 2.9.3. Thus, some classes had to be rewritten using the new Lucene Token API. Not all classes have been adapted to the new API, however, so that the component is not yet Lucene 3.x compliant.Lucas creates multiple Field instances for each field declared in the mapping file which is to be stored as well as indexed. This is done even when not necessary. As this may collide with a unique-key property (e.g. in Solr) a new attribute "unique" has been added to the field element of the mapping file. If the value of this attribute is set to "true" and there is only one declaration for this field name in the mapping file, there will be created only one field instance.This addition has been added to the project's docbook (along with quite some spelling corrections, a few reformulations and corrections to the examples).
issueID:UIMA-2127
type:Wish
changed files:
texts:CAS annotation pointing to type system
I think it would be great if the CAS editor could define a CAS type pointing to the type system. CAS consumers could use that type to store a reference to a remote type system (cf. XML schema/DTD) or to a local type system in a location absolute or relative to the XMI file. For example:org.apache.uima.caseditor.TypeSystemMetaData location = http://myserver/types.xml location = file:../../typesystem.xml location = file:/home/uima/filesystem.xml
issueID:UIMA-2128
type:Wish
changed files:
texts:Support to for gzipped XMI files
Since XMI files tend to grow rather rapidly, it would be great if the CAS Editor supported to read and write gzipped XMI files (.xmi.gz).
issueID:UIMA-2129
type:Bug
changed files:
texts:Check URL availability in URLMicroformatsAnnotatorTest
if the tested URL is unreachable then the test should not fail
issueID:UIMA-213
type:Bug
changed files:uimaj-core/src/main/java/org/apache/uima/InternationalizedException.java
uimaj-core/src/main/java/org/apache/uima/InternationalizedException.java
uimaj-examples/src/main/java/org/apache/uima/examples/RunAE.java
uimaj-examples/src/main/java/org/apache/uima/examples/RunAE.java
uimaj-tools/src/main/java/org/apache/uima/tools/RunAE.java
uimaj-tools/src/main/java/org/apache/uima/tools/docanalyzer/DocumentAnalyzer.java
uimaj-tools/src/main/java/org/apache/uima/tools/RunAE.java
uimaj-tools/src/main/java/org/apache/uima/tools/docanalyzer/DocumentAnalyzer.java
uimaj-tools/src/main/java/org/apache/uima/tools/docanalyzer/DocumentAnalyzer.java
uimaj-tools/src/main/java/org/apache/uima/tools/docanalyzer/DocumentAnalyzer.java
uimaj-adapter-vinci/src/main/java/org/apache/uima/adapter/vinci/VinciAnalysisEngineServiceAdapter.java
uimaj-adapter-vinci/src/main/java/org/apache/uima/adapter/vinci/VinciAnalysisEngineServiceAdapter.java
uimaj-core/src/main/java/org/apache/uima/UimaContextAdmin.java
uimaj-core/src/main/java/org/apache/uima/impl/UimaContext_ImplBase.java
uimaj-core/src/main/java/org/apache/uima/resource/ResourceInitializationException.java
uimaj-core/src/main/java/org/apache/uima/UimaContextAdmin.java
uimaj-core/src/main/java/org/apache/uima/impl/UimaContext_ImplBase.java
uimaj-core/src/main/java/org/apache/uima/resource/ResourceInitializationException.java
uimaj-adapter-soap/src/main/java/org/apache/uima/adapter/soap/SoapAnalysisEngineServiceAdapter.java
uimaj-adapter-soap/src/main/java/org/apache/uima/adapter/soap/SoapAnalysisEngineServiceAdapter.java
texts:DocumentAnalyzer/RunAE tools don&#39;t support XML detagging and Remote Vinci AEs
It generates invalid XCASes as output if you try to do this.  This is because Sofa mapping is used to do XML detagging, but Sofa mapping isn't implemented correctly for Vinci services (in fact it seems completely broken now).  Anyway it is slated to be completely removed for v2.1 (see UIMA-122).It may be possible to do Sofa mapping differently so that the detagged text is stored in the _InitialView, so that Sofa mapping isn't needed for the remote.  Failing that, we'd just need to put in a better error message until such time as we implement Sofa mapping for remotes in a reliable way.
issueID:UIMA-2130
type:Improvement
changed files:
texts:fix line endings in svn for normal text files - set to svn:eol-style native

issueID:UIMA-2131
type:Bug
changed files:
texts:Solrcas uri generation failing on windows
The getURI code in solrcas (SolrCASConsumer) has the code:if (!uri.isAbsolute())         uri = UriUtils.create(new StringBuilder(FILEPATH).append(getContext().getDataPath()).                append("/").append(path.replace(FILEPATH, EMPTY_STRING)).toString()); // this supports relative file pathsOn Windows, the getContext().getDataPath() returned "C:\blah\blah", so the string passed to UriUtils.create was something like:file://C:\a\b\c\Solrcas/src/test/resources/org/apache/uima/solrcas/The "backslash" char is "escaped" by the create method, since it's not a valid in URIs, giving: file://C:%5Ca%5Cb%5Cc%5CSolrcas/src/test/resources/org/apache/uima/solrcas/When this URI is given to new File(...) this causes an error to be thrown:java.lang.IllegalArgumentException: URI has an authority componentIt thinks there's an authority component because of the colon character.  It seems the right thing to do for this kind of an "absolute" URI on Windows, if it starts with a C: or something similar, is to prefix this with another "/" char, so the string looks likefile:///C:\a\b\c\Solrcas/src/test/resources/org/apache/uima/solrcas/ e.g., file: followed by 3 slashes: ///
issueID:UIMA-2132
type:Improvement
changed files:
texts:cleanup svn for some projects which have generated files / folders checked in which shouldn&#39;t be
some addons-osgi-runtime components have extra files/folders from their Eclipse heritage checked in by accident.  remove these.
issueID:UIMA-2133
type:Bug
changed files:
texts:SimpleServer tests are failing on Windows - they have a dependency on new-line and svn:eol-style native broke the tests
Fails on Windows, because newlines are now 2 chars long, and test is expecting 1 char.  Change the svn:eol-style for the test data to use 1 char forms of new lines.
issueID:UIMA-2134
type:Bug
changed files:
texts:Tagger build dependency on Whitespace Tokenizer causes failure for mvn commands which don&#39;t build the jar
Note: This probably should be fixed after the 2.3.1addons release.The Tagger has a dependency on the Whitespace Tokenizer addon component, at the same release level (currently).This means that if you check out the source, and then do a "mvn test", you get a failure, because  although Maven correctly orders things so that the build of the WhitespaceTokenizer happens first because the Maven command is "mvn test", no jar file is built and the Tagger tests fail because they are depending on the Jar being built.The workaround is to run mvn install once, so the right level of the WhitespaceTokenizer is in the local .m2 repo.The fix could be to change the dependency of the WhitespaceTokenizer to a previous (could be unchanging) release, e.g. the 2.3.0 level.  Of course, that can't be done yet, because we haven't released the add-ons to Maven Central (yet) - the last release was to the special repo for incubating projects.My feeling is to leave this as an issue for the 2.3.1 release, and fix it for the next release by depending on the released 2.3.1 version of the WhitespaceTokenizer.
issueID:UIMA-2135
type:Bug
changed files:
texts:undo some svn:eol-style for testcase data
Have to undo some of the svn:eol-style native settings.  Tests pass on Windows, but fail on Unix, for example CFETest (reported failing by Jenkins).
issueID:UIMA-2136
type:Bug
changed files:uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/CasEditorPlugin.java
texts:Cas Editor fails to start when workspace has a closed proejct
The Cas Editor crashes on startup when the workspace has a closed project.Caused by: org.eclipse.core.internal.resources.ResourceException: Resource '/OneOfMyClosedProjects' is not open.    at org.eclipse.core.internal.resources.Project.checkAccessible(Project.java:137)    at org.eclipse.core.internal.resources.Project.hasNature(Project.java:511)    at org.apache.uima.caseditor.CasEditorPlugin.start(CasEditorPlugin.java:90)Apparently the migration from CasEditorProjects to the new way fails whenever there is a closed project in the workspace.  I don't have any projects that need to be migrated, but it tries to check every project I have and fails hard when it can't.  It would be good if somebody could verify that before filing a bug report. The call to hasNature can only be done on open projects. To fix this issue check first that the project is open.
issueID:UIMA-2137
type:Improvement
changed files:uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/QuickTypeSelectionDialog.java
texts:Quick type selection dialog should only show displayed types
The Quick Type Selection dialog currently shows a list of all types in the type system.This causes two issues: A user can add an annotation of a type which is not displayed in the Annotation Editor The dialog is unusable for really large type systemsTo enhance the dialog it should only show the types which are displayed in the Annotation Editor, display means annotation types selected inside the shown annotation types or the mode type.The key short cuts should be defined on the entire type system and not only on the shown types in the dialog, because otherwise a user might gets confused when they change depending on the shown types.
issueID:UIMA-2139
type:Bug
changed files:uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/AnnotationEditor.java
texts:Annotate short cut shift + enter does not work
A user reported that the Shift + Enter short cut to annotate something does not work.He tested on Ubuntu and Windows, it seems also broken on OS X.I believe this was caused by the recent changes to the short cut handling whichwent into the Cas Editor after the 2.3.1 release.
issueID:UIMA-214
type:Bug
changed files:uimaj-tools/src/main/java/org/apache/uima/tools/docanalyzer/DocumentAnalyzer.java
uimaj-tools/src/main/java/org/apache/uima/tools/viewer/CasAnnotationViewer.java
uimaj-tools/src/main/java/org/apache/uima/tools/docanalyzer/DocumentAnalyzer.java
uimaj-tools/src/main/java/org/apache/uima/tools/viewer/CasAnnotationViewer.java
texts:DocumentAnalyzer shouldn&#39;t have to re-contact service to get the typesystem
Currently when running a remote AE in the Document Analyzer, after anlaysis is complete but before the analysis results window is launched, the service is re-contacted to obtain its type system.  In some situations this can be a noticeable delay.  It would be better if the DocumentAnalyzer could "remember" thetype system that was obtained earlier.
issueID:UIMA-2142
type:Improvement
changed files:
texts:Add statusInfo to Results for debugging failures
When a failure occurs on any of the webservices it'd be useful to parse also the reason of such a failure, that is written inside the statusInfo element in the resulting XML/JSoN
issueID:UIMA-2144
type:Task
changed files:
texts:Refactor addons-osgi-runtime build
The addons-osgi-runtime build should be refactored to create OSGi compliant version numbers, just like we do in uimaj-ep-runtime
issueID:UIMA-2145
type:Bug
changed files:
texts:Error adding PEAR file with type priorities to aggregate AE using the CDE
Adding a PEAR file with its own defined types in the typePriorities section of its descriptor produces a ResourceInitializationError in the Eclipse Component Descriptor Editor.To reproduce:Created a simple AE and typeSystem, edit thetypePriorities list to include<priorityList>  <type>uima.tcas.DocumentAnnotation</type>  <type>some.typename.you.Choose</type></priorityList>I export and install the PEAR with no issues.Now create a new aggregate AE and on the aggregate tab of the editor,click Add..., select Import By Location, Browse the file system... to mylocally installed PEAR file, and click OK.  When I save the editor, I seethe following error:"The Descriptor is invalid for the following reason:ResourceInitializationException: Undefined type "some.typename.you.Choose"in type priority list. (Descriptor:...installedPears/testPear/desc/test.xml)"
issueID:UIMA-2147
type:Improvement
changed files:uimaj-core/src/main/java/org/apache/uima/jcas/tcas/Annotation.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/AnnotationBase.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/BooleanArray.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/ByteArray.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/CommonList.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/DoubleArray.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/EmptyFSList.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/EmptyFloatList.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/EmptyIntegerList.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/EmptyStringList.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/FSArray.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/FSArrayList.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/FSHashSet.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/FSList.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/FloatArray.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/FloatList.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/IntegerArray.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/IntegerArrayList.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/IntegerList.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/LongArray.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/NonEmptyFSList.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/NonEmptyFloatList.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/NonEmptyIntegerList.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/NonEmptyStringList.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/ShortArray.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/Sofa.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/StringArray.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/StringList.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/TOP.java
texts:Generate static fields for type names and feature names in JCas wrappers
It would be convient if the JCas wrapper generator would create static final String fields for feature names and for the type name, e.g.public static final String TYPE_NAME = "my.jcastypes.Type";public static final String FEAT_BEGIN = "begin";This would allow cleaner programming with JCas wrappers in cases where the names are required. In particular it would allow to detect certain errors at compile-time and facilitate refactoring.
issueID:UIMA-2148
type:Bug
changed files:uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/FeatureValue.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/editview/EditViewPage.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/editview/ValueColumnLabelProvider.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/util/Primitives.java
texts:Feature having a type with <allowedValues> are not supported
I have defined a type Token with a feature POS. The range of that feature is PartsOfSpeech which is a subclass of String with the allowed values "N" and "V". When I create an annotation of the Type Token in the CAS Editor, the value of the POS feature shows as "unexpected type" and I cannot edit it. Looks like "allowedValues" is not supported by the CAS editor so far.
issueID:UIMA-215
type:Improvement
changed files:uimaj-core/src/main/java/org/apache/uima/util/CasCopier.java
uimaj-core/src/main/java/org/apache/uima/util/CasCopier.java
uimaj-core/src/main/java/org/apache/uima/util/CasCopier.java
uimaj-core/src/main/java/org/apache/uima/util/CasCopier.java
uimaj-examples/src/main/java/org/apache/uima/examples/casMultiplier/SimpleTextMerger.java
uimaj-examples/src/main/java/org/apache/uima/examples/casMultiplier/SimpleTextMerger.java
texts:CasCopier constructor should take source CAS as argument
This would encourage users to create a new CasCopier for each source CAS.  This can be important in a CAS merger, where the CasMultiplier wants to copy from multiple CASes that were passed to its process method.  The CasCopier should be discarded after each call to process because its internal HashMap holds FeatureStructure references, which are not valid after the process method has completed and the source CAS has been reset.
issueID:UIMA-2150
type:Task
changed files:
texts:Remove old versions from Incubator distribution point
To conserve Apache and our mirror partner resources, we need to follow apache policy of removing older distribution artifacts from the incubator distribution point, and update our website accordingly.  The old releases are still available on the archive site, so the website should point there.
issueID:UIMA-2151
type:Improvement
changed files:uimaj-ep-cas-editor-ide/src/main/java/org/apache/uima/caseditor/ide/DefaultCasDocumentProvider.java
uimaj-ep-cas-editor-ide/src/main/java/org/apache/uima/caseditor/ide/WorkspaceResourceDialog.java
uimaj-ep-cas-editor-ide/src/main/java/org/apache/uima/caseditor/ide/wizards/ImportDocumentWizard.java
uimaj-ep-cas-editor-ide/src/main/java/org/apache/uima/caseditor/ide/wizards/ImportDocumentWizardPage.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/CasDocumentProvider.java
uimaj-ep-cas-editor-ide/src/main/java/org/apache/uima/caseditor/ide/CasEditorIdePlugin.java
uimaj-ep-cas-editor-ide/src/main/java/org/apache/uima/caseditor/ide/wizards/DocumentImportStructureProvider.java
uimaj-ep-cas-editor-ide/src/main/java/org/apache/uima/caseditor/ide/TypeSystemLocationPropertyPage.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/AnnotationDocument.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/CasEditorPlugin.java
uimaj-ep-cas-editor-ide/src/main/java/org/apache/uima/caseditor/ide/wizards/ContainerElementFilter.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/AnnotationEditor.java
uimaj-ep-cas-editor-ide/src/main/java/org/apache/uima/caseditor/ide/NlpProject.java
texts:The Cas Editor should be split into two parts
The Cas Editor is currently defined in one plugin, which makes it impossible to nicely integrate it in RCP apps, where certain things are done differently, e.g. the CAS is loaded from xmi/xcas files in the workspace.To ease up the integratio into an RCP app and improve the integration into the the eclipse IDE. The Cas Editor eclipse plugin should be split into two plugins one core plugin and an ide plugin.The core plugin is intended to ease the integration into RCP applications, and the ide plugin is intended for eclipse ide integration, to use the Cas Editor during the development of UIMA related applications.The issue was discussed prior on the UIMA Dev List:http://mail-archives.apache.org/mod_mbox/uima-dev/201106.mbox/%3C4DE62E2F.70605@gmail.com%3E
issueID:UIMA-2152
type:Task
changed files:
texts:Change alchemy-annotator artifactId to AlchemyAPIAnnotator
The Alchemy API Annotator artifactId is alchemy-annotator (inherited from previously donated project) but it should be changed to AlchemyAPIAnnotator
issueID:UIMA-2153
type:Improvement
changed files:
texts:Create new "addons" top level SVN spot for released sandbox addons
The source assembly doesn't match the svn, and won't build.  Part of this is because the svn contains projects in the sand box that are not being "released".  Create a top level SVN spot for released add-ons, and move the sandbox projects being released there.  Note: Users who have the sandbox projects checked out will need to "switch" the svn spot for those to the new spot in svn, after the move is complete.
issueID:UIMA-2154
type:Improvement
changed files:
texts:Uima AS client should log the host ip on CAS timeout
When handling CAS timeout, UIMA AS clients (application client and aggregate client) should log IP of a node where the CAS timed out. This IP is known to the clients since UIMA AS service sends an ack message (containing the IP) for each CAS it receives. The ack is sent to a client before processing of the CAS begins.
issueID:UIMA-2155
type:Bug
changed files:uimaj-core/src/main/java/org/apache/uima/analysis_engine/impl/AnalysisEngineDescription_impl.java
uimaj-core/src/main/java/org/apache/uima/resource/metadata/impl/MetaDataObject_impl.java
uimaj-core/src/main/java/org/apache/uima/util/impl/SaxDeserializer_impl.java
texts:XALAN 2.6.0 overriding normal Java transformer factory in some JVMs causes UIMA XML parser failures
Several people in our group that run Linux with the Sun JDK have run into problems that UIMA fails to parse descriptors unless Xerces 2.9.1 and Xalan 2.7.1. are on the classpath. It might be a good idea to add these two as standard dependencies to uimaj-core. org.apache.uima.util.InvalidXMLException: Invalid descriptor at Chunks.xml.    at org.apache.uima.util.impl.XMLParser_impl.parse(XMLParser_impl.java:194)    at org.apache.uima.util.impl.XMLParser_impl.parseTypeSystemDescription(XMLParser_impl.java:708)    at org.apache.uima.util.impl.XMLParser_impl.parseTypeSystemDescription(XMLParser_impl.java:695)    at org.uimafit.factory.TypeSystemDescriptionFactory.createTypeSystemDescription(TypeSystemDescriptionFactory.java:145)    at org.uimafit.factory.AnalysisEngineFactory.createPrimitiveDescription(AnalysisEngineFactory.java:229)    at wikicounts.RunCountExperiment.run(RunCountExperiment.java:66)    at wikicounts.RunCountExperiment.main(RunCountExperiment.java:27)Caused by: org.w3c.dom.DOMException: NAMESPACE_ERR: An attempt is made to create or change an object in a way which is incorrect with regard to namespaces.    at org.apache.xml.utils.DOMBuilder.startElement(DOMBuilder.java:322)    at org.apache.xalan.transformer.TransformerIdentityImpl.startElement(TransformerIdentityImpl.java:1020)    at org.apache.uima.util.impl.SaxDeserializer_impl.startElement(SaxDeserializer_impl.java:202)    at org.apache.xerces.parsers.AbstractSAXParser.startElement(Unknown Source)    at org.apache.xerces.impl.XMLNSDocumentScannerImpl.scanStartElement(Unknown Source)    at org.apache.xerces.impl.XMLNSDocumentScannerImpl$NSContentDispatcher.scanRootElementHook(Unknown Source)    at org.apache.xerces.impl.XMLDocumentFragmentScannerImpl$FragmentContentDispatcher.dispatch(Unknown Source)    at org.apache.xerces.impl.XMLDocumentFragmentScannerImpl.scanDocument(Unknown Source)    at org.apache.xerces.parsers.XML11Configuration.parse(Unknown Source)    at org.apache.xerces.parsers.XML11Configuration.parse(Unknown Source)    at org.apache.xerces.parsers.XMLParser.parse(Unknown Source)    at org.apache.xerces.parsers.AbstractSAXParser.parse(Unknown Source)    at org.apache.uima.util.impl.XMLParser_impl.parse(XMLParser_impl.java:177)    ... 6 moreCaused by: org.w3c.dom.DOMException: NAMESPACE_ERR: An attempt is made to create or change an object in a way which is incorrect with regard to namespaces.    at org.apache.xerces.dom.AttrNSImpl.setName(Unknown Source)    at org.apache.xerces.dom.AttrNSImpl.<init>(Unknown Source)    at org.apache.xerces.dom.CoreDocumentImpl.createAttributeNS(Unknown Source)    at org.apache.xerces.dom.ElementImpl.setAttributeNS(Unknown Source)    at org.apache.xml.utils.DOMBuilder.startElement(DOMBuilder.java:307)    ... 18 more
issueID:UIMA-2156
type:Improvement
changed files:
texts:UIMA AS should include PID of the process that will analyze CAS
UIMA AS sends an ACK (of type ServiceInfo.class) message to the client as soon as it receives a CAS for processing. Currently the ACK message only identifies IP of the machine where the CAS is being processed. Extend this by including a PID of the UIMA AS process.
issueID:UIMA-2157
type:Improvement
changed files:
texts:Extend UIMA AS Client Callback API
A new API is needed on the UIMA AS client listener to notify an application when CAS processing starts at the remote UIMA AS service. The notification should include CAS reference ID, machine IP and the actual PID of UIMA AS process where the CAS is being processed.
issueID:UIMA-2158
type:Improvement
changed files:
texts:Addons build from top level
Refactor Addons Maven structure in order to build whole 'addons' together, allowing also simplified distribution package generation (for the release).
issueID:UIMA-2159
type:Improvement
changed files:uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/AnnotationEditor.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/CasDocumentProvider.java
uimaj-ep-cas-editor-ide/src/main/java/org/apache/uima/caseditor/ide/DefaultCasDocumentProvider.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/ICasEditor.java
texts:Move type system selection code from Annotation Editor to Document Provider
The Annotation Editor currently contains special logic to locate the type system in an eclipse workspace if it is not available. This logic should be moved to the Default Document Provider in order to make the Annotation Editor independent of the actual Document Provider implementation.
issueID:UIMA-216
type:Improvement
changed files:uimaj-adapter-vinci/src/main/java/org/apache/uima/adapter/vinci/VinciAnalysisEngineService_impl.java
uimaj-adapter-vinci/src/main/java/org/apache/uima/adapter/vinci/util/Constants.java
uimaj-adapter-vinci/src/main/java/org/apache/uima/adapter/vinci/VinciAnalysisEngineService_impl.java
uimaj-adapter-vinci/src/main/java/org/apache/uima/adapter/vinci/util/Constants.java
texts:Add getSupportedXCasVersions to Vinci Services
This needs to be done now, even if we don't make any use of it until v2.2.  Otherwise we'll have no hope of distinguishing v1.x services from v2.1 services.
issueID:UIMA-2160
type:Bug
changed files:uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/AnnotationEditor.java
texts:Annotation Editor throws exceptions on view change if other view has much more lines
The Annotation Editor crashes if the view is changed to another view which has a significant longer text compared to the currently shown view.This issue can be reproduced with eclipse 3.6 and 3.7. Other versions have not been tested, since I first believed the issue is linked to eclipse 3.7.
issueID:UIMA-2161
type:Bug
changed files:
texts:UIMA AS 2.3.1 release missing activemq jars that enable http tunelling
Latest release of UIMA AS is missing a number of ActiveMQ jars that support messaging over http. UIMA AS Extended test suite use maven and its dependency resolution to help find all the needed jars so the problem was not discovered until UIMA AS was run stand alone outside of eclipse. When trying to use http protocol the following exception is thrown:ERROR BrokerService                  - Failed to start ActiveMQ JMS Message Broker. Reason: java.io.IOException: Transport Connector could not be registered in JMX: Transport scheme NOT recognized: &#91;http&#93;Work around:Install a full version of ActiveMQ from http://activemq.apache.org/ and, before starting UIMA AS service, modify environment by setting ACTIVEMQ_HOME to point to the location where ACTIVEMQ is installed.
issueID:UIMA-2162
type:Bug
changed files:
texts:Fix UIMA AS race condition allowing parent CAS to hit the Flow Controller ahead of its child CASes
A race condition exists in the UIMA AS Aggregate with a scaled up reply queue. Multiple, concurrent threads consuming CASes produced by a Cas Multiplier execute at different speeds (most likely due to different de-serialization times) allowing for a parent CAS to call Flow Controller's next() method before all of its child CASes obtain their Flow objects. Add necessary synchronization to orchestrate orderly  flow of CASes to make sure that the parent CAS never reaches the Flow Controller ahead of its children.
issueID:UIMA-2163
type:New Feature
changed files:
texts:Extend UIMA AS to provide Deployment Descriptor Factory
UIMA AS needs a factory for creating Deployment Descriptors at runtime. This would be very useful in UIMA AS extended test suite. Currently there are 100's of static xml deployment descriptors and many of them are clones with just a few changes. Having ability to create a DD for each test will greatly reduce (if not eliminate all) xml dd's. Additional benefit can be realized by applications using UIMA AS. Such applications would be able to compose deployment descriptors (and pipelines) dynamically based on current context instead of relying on statically defined xml dd's.
issueID:UIMA-2164
type:Improvement
changed files:
texts:Change UIMA AS ACK message to include thread id
When UIMA AS service receives a Process request it immediately returns an "ACK" message to the client identifying machine IP  address and service PID. Extend this info to include pipeline thread id. Use "PID:ThreadID" format
issueID:UIMA-2165
type:Improvement
changed files:uimaj-ep-cas-editor-ide/src/main/java/org/apache/uima/caseditor/ide/wizards/DocumentImportStructureProvider.java
texts:Cas Editor document import wizard should replace or remove non-xml characters
When importing a text file which contains non-xml characters the Cas Editor should automatically replace or remove these.
issueID:UIMA-2166
type:Bug
changed files:uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/AnnotationEditor.java
texts:Annotation Editor fails to create annotation when text is selected via by mouse movement
The Annotation Editor displays the text which a user can annotate. To annotate a piece of text a user needs to select the text and then use one of the two annotate actions. There are various ways of selecting the text and users usually just mix them as it fits their need.It turned our when a piece of text is selected by mouse-movement (press left mosue button, move, release)the mode annotate action does not create an annotation.
issueID:UIMA-2168
type:Improvement
changed files:uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/AbstractDocument.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/DocumentUimaImpl.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/ICasDocument.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/AbstractDocument.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/AnnotationDocument.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/AnnotationEditor.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/ICasDocument.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/AbstractDocument.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/AnnotationDocument.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/AnnotationEditor.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/DocumentUimaImpl.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/ICasDocument.java
texts:Refactor the ICasDocument interface to be suitable for all kind of sofas
The ICasDocument interface was made especially for text sofas, over time this was more and more abstracted, but a few artifacts which are specific for text and the Annotation Editor remain. Lets move this out of the interface and into the Annotation Editor directly.
issueID:UIMA-2169
type:Improvement
changed files:uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/AnnotationEditor.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/AnnotationEditorPreferenceInitializer.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/AnnotationEditorPreferencePage.java
texts:Annotation Editor text size should be configurable
The Annotation Editor text size should be easily configurable by the user and by default a little larger.A user might want to increase the text size to better see annotation offsets and to ease mouse selection of text.Changing the text size is already possible, when some default text size was changed, but we feel it is better to have an explicit option for the Annotation Editor.
issueID:UIMA-217
type:Bug
changed files:uimaj-core/src/main/java/org/apache/uima/jcas/cas/TOP.java
texts:actions creating new instances which are subtypes of AnnotationBase should set the sofa ref
Currently the code only does this for subtypes of Annotation, not AnnotationBase, at least for the JCas (TOP impl)
issueID:UIMA-2170
type:Improvement
changed files:uimaj-ep-cas-editor-ide/src/main/java/org/apache/uima/caseditor/ide/CasEditorPerspectiveFactory.java
texts:Rename NlpPerspectiveFactory class to CasEditorPerspectiveFactory
The mentions class should be renamed, because everything else has already been renamed for some time now.
issueID:UIMA-2171
type:Improvement
changed files:
texts:Rename package name for UIMA "Vinci" transport
We maybe should consider changing the package name for the Vinci transport adapter used in UIMA.  Its current package is org.apache.vinci ....Should this be changed to org.apache.uima.vinci ?And would changing this cause API breckage?  If so, maybe we should just leave this alone until someone complains .
issueID:UIMA-2172
type:New Feature
changed files:
texts:Donation of the TextMarker system
Donation of the TextMarker system.TextMarker is a UIMA-based tool for information extraction and more. The full featured editor of the rule language and the build process of UIMA descriptors are complemented with components for visualization, explanation, testing and rule learning.
issueID:UIMA-2173
type:Improvement
changed files:uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/AnnotationEditor.java
texts:Refactor naming of annotate actions in the Annotation Editor
The name of the annotate action inside the Annotation Editor should be changed to Quick Annotate Action, to distinguish it from the other annotate action.
issueID:UIMA-2174
type:Improvement
changed files:uimaj-ep-cas-editor-ide/src/main/java/org/apache/uima/caseditor/ide/wizards/DocumentImportStructureProvider.java
uimaj-ep-cas-editor-ide/src/main/java/org/apache/uima/caseditor/ide/wizards/ImportDocumentWizard.java
uimaj-ep-cas-editor-ide/src/main/java/org/apache/uima/caseditor/ide/wizards/ImportDocumentWizardPage.java
texts:Import Document wizard should have an option for the language
The document import wizard in the Cas Editor should have an option to specify the language. Currently every imported CAS has the default language.
issueID:UIMA-2175
type:Bug
changed files:uimaj-ep-cas-editor-ide/src/main/java/org/apache/uima/caseditor/ide/wizards/ImportDocumentWizard.java
uimaj-ep-cas-editor-ide/src/main/java/org/apache/uima/caseditor/ide/wizards/OverwriteQuery.java
texts:Import wizard throws Null Pointer Exception when it needs to overwrite an existing file
The import wizard throw a Null Pointer Exception when it tries to overwrite an existing file in the workspace. The issue is caused by a missing IOverwriteQuery object in the Import Operation. To fix this issue pass an IOverwriteQuery object to the Import Operation and ask the user if he wants to overwrite or not.
issueID:UIMA-2176
type:Improvement
changed files:
texts:Addons OSGi - embed dependencies as jars, exclude UIMA Jars
Current OSGi packaging for UIMA addon annotators unpacks the code plus the dependencies, and this results in the components with the same names overlaying one another.  Change this to avoid the unpacking.  Current OSGi packaging for UIMA addon annotators includes the UIMA Jars within every addon, even though they are already packaged as an OSGi bundle.  Change this to import these instead.
issueID:UIMA-2177
type:Bug
changed files:
texts:Addons osgi common pom has wrong parent
The parent is set to the overall parent for UIMA, but should be the common uima-addons-parent, in order to pick up common things for those component, such as the definition of the property UimaScmRoot.
issueID:UIMA-2178
type:Improvement
changed files:uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/AnnotationEditor.java
texts:Selection handling in the Annotation Editor is confusing
The Annotation Editor can select annotations which are of the current mode type. Currently the selection can only be changed if a new annotation is selected.It turned out that this behavior is confusing especially for new users for the following reasons: If only one annotation exists, it cannot be un-selected and the annotation color is unexpected, because it is the selection colorTo fix this un-select the annotation when the cursor moves away from the annotation. This way a new user will find out that the color changes depending on the curser position rather quickly.
issueID:UIMA-2179
type:Improvement
changed files:uimaj-ep-cas-editor-ide/src/main/java/org/apache/uima/caseditor/ide/CasEditorIdePreferenceConstants.java
uimaj-ep-cas-editor-ide/src/main/java/org/apache/uima/caseditor/ide/CasEditorIdePreferenceInitializer.java
uimaj-ep-cas-editor-ide/src/main/java/org/apache/uima/caseditor/ide/wizards/ImportDocumentWizard.java
uimaj-ep-cas-editor-ide/src/main/java/org/apache/uima/caseditor/ide/wizards/ImportDocumentWizardPage.java
texts:Document import wizard should remember last used settings
The document import wizard of the Cas Editor should remember the last used settings. Currently the import wizard is always initialized with defaults which is annoying when a user invokes the import wizard a couple of times in a row, because all the settings are gone again. Especially annoying for the encoding and language settings.
issueID:UIMA-218
type:Improvement
changed files:uimaj-core/src/main/java/org/apache/uima/jcas/cas/TOP.java
texts:Creating an subtype of an AnnotationBase in a "base" CAS gives wrong / misleading error message "Can&#39;t create FS of type xxx with this method"
Message should be: Can't create a subtype of AnnotationBase on the Base Cas - this is only allowed on a view.
issueID:UIMA-2180
type:New Feature
changed files:
texts:UIMA AS primitive service should return performance breakdown for each CAS
Current UIMA AS code doesnt extract CAS per component performance breakdown from UIMA aggregate. Such breakdown would be very useful in identifying bottlenecks in a pipeline. This breakdown is available via AnalysisEngine's getManagementInterface(). The API accesses the same performance stats that AE exposes via JMX. Since these stats are cumulative, the UIMA AS code should calculate delta to obtain per CAS performance breakdown. Before calling processAndOutputNewCASes(), the code should make a copy (actually a deep copy) of AnalysisEngineManagement instance(s) and calculate delta (of analysisTime) before returning input CAS.The list containing the breakdown should be serialized into a reply message and de-serialized by the client. The UIMA AS client will provide an application the breakdown as a List via a callback method on UimaAsBaseCallbackListener.
issueID:UIMA-2181
type:Improvement
changed files:
texts:UIMA AS service should identify which thread will process a CAS
UIMA AS service sends a message to a client when it receives a new CAS. This "ACK" message confirms receipt of the CAS and identifies the node and process PID where the CAS will be processed. In addition to that, the ACK message should identify which thread will process the CAS. Append the thread id to the PID using this syntax: "PID:ThreadID"
issueID:UIMA-2182
type:Bug
changed files:
texts:Addons OSGi - bundles not picking up the License/Notice files for the whole bundle
An example:  The BSF Annotator, when packaged not as an OSGi bundle, is packaged as both a single Jar, with only the BSF Annotator code itself, and also as a PEAR file, containing that Jar plus the dependent Jars it needs to run.  The PEAR file has a License/Notice that includes the information needed because of distributing the dependent Jars it needs.  The basic Jar file, containing only the Apache-produced code, has the LICENSE/NOTICE files without this other information - this seems correct to me.The OSGi packaging is distributing the other Jars, so it needs the augmented version of the LICENSE/NOTICE files.  If any OSGi packagings have additional Jars, beyond what is included in the non-OSGi packaging, the License/Notice files for those need to be potentially augmeneted, also.
issueID:UIMA-2183
type:Bug
changed files:
texts:Addons OSGi - License files not the same as the non-OSGi versions - missing things
The BSFAnnotator-osgi LICENSE file is missing the additional licenses (needed because the packaging includes things with non-ASF licenses).  The License in the non-osgi version has these.  Copy that license, adjusted if needed to the OSGi one.  Check all the other OSGi packaged things, also, in case others have this same issue.
issueID:UIMA-2184
type:Improvement
changed files:
texts:Addons OSGi - improve build by removing duplicate projects for osgi builds
The current osgi builds duplicate many things and have extra projects - one per annotator.  The licenses / notices etc can get out of sync between the duplicates.Change this by removing the duplicate projects, and adding an osgi bundle as an additional output packaging, similar to the way that annotators have both a normal jar and PEAR output.
issueID:UIMA-2185
type:Improvement
changed files:
texts:cleanup addon binary build
The binary build assembly has several things to clean up. copying top level release-notes over those in src/main/readme (not currently an issue because there is no release-notes at the top level) LICENSE/NOTICE is not an aggregate of component's binary form versions of these, nor is it a reference to them. stanzas copying src/main/scripts and src/main/properties, both of which are non-existent directories stanzas copying target/site/apidocs of various kinds, which don't exist the assembly is done even when the -Papache-release is not active.  (All our other builds only build the assembly when this is active; some files, such as issues fixed, are only available to be included when this profile is active). the technique used to include the additional support directories for binary packaing, is to copy the files from the ones used to prepare the PEAR packaging.  This includes some PEAR-specific files, in particular the metadata/install.xml, which should not be part of the non-PEAR assembly binary package.
issueID:UIMA-2186
type:Bug
changed files:
texts:addon Solrcas has wrong scope on uima-core dependency
The Solrcas pom depends on uimaj-core, but doesn't set a scope - so uimaj-core JAR is included in the binary and PEAR and OSGi packages.  The scope should be "provided".
issueID:UIMA-2187
type:Bug
changed files:
texts:addon FsVariables is being built as PEAR, but isn&#39;t one
For the 2.3.0 release, this was built by common build strategy in SandboxDistr pom; this put all the code to be assembled into a directory assembly-bin/<artifactId>.For 2.3.1, the top parent pom for UIMA has a profile intended to handle this case, activated by the existence of a file marker-file-identifying-single-project.  Change to use this style.
issueID:UIMA-2188
type:Bug
changed files:
texts:UIMA AS service not releasing CAS if deserializer fails
UIMA AS service should release a CAS back to its CAS pool when deserializer throws an exception. The method in question is deserializeCASandRegisterWithCache() in ProcessRequestHandler.java. It fetches CAS from a CAS pool before deserializing. If deserializer throws an exception, the deserializeCASandRegisterWithCache() returns that exception but never releases the CAS. Add try ... catchand release the CAS if exception is thrown.
issueID:UIMA-2189
type:Task
changed files:
texts:Add ASL headers to TextMarker files
All Text Marker files must have the AL 2.0 license header. Add the license header to all files of the Text Marker system.
issueID:UIMA-219
type:Task
changed files:uimaj-core/src/main/java/org/apache/uima/cas/impl/XCASDeserializer.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/XCASSerializer.java
texts:Clean up XCASSerializer code to remove what&#39;s left of Sofa mapping support
Clean up XCASSerializer code to remove Sofa mappings.  This doesn't work correctly, and is never used anyway &#8211; the service adapters have been changed to check for the use of sofa mapping and throw an exception.
issueID:UIMA-2190
type:Task
changed files:
texts:Translate all German comments in the source code to English
The Text Marker contribution contains a German comments in the source code, since we are an international team and all members can only speak English the comments must be translated to English.
issueID:UIMA-2191
type:Bug
changed files:
texts:Fix extensions pointing to outdated namespaces
The extensions are using outdated extension points with the old namespace
issueID:UIMA-2192
type:Task
changed files:
texts:Apache exports page needs updating for UIMA-AS and UIMA-addons
Since we bundle Tika components inside our addons distribution, we need to go through the process described here: http://www.apache.org/dev/crypto.htmland also, I noticed the information on the exports page for UIMA still shows it in the incubator - that needs updating too.
issueID:UIMA-2193
type:Improvement
changed files:
texts:uima-build-resources: add support for addons bin building
The uima-build-resources needs updating to hold a common assembly binary descriptor used for creating individual binary assemblies for add-on projects.  While we're releasing, update the parent to the latest Apache parent (version 9).
issueID:UIMA-2194
type:Bug
changed files:
texts:uima-build-resources: roll back release candidate to add license/notice in SVN
roll back rc1 and add standard LICENSE / NOTICE file
issueID:UIMA-2195
type:Bug
changed files:
texts:TextMarker: Fix broken imports
During the import the packages have been renamed to the apache uima name space, in some places this did not work correctly and must be fixed manually.
issueID:UIMA-2196
type:Task
changed files:
texts:Correct outdated namespaces
Some namespace still point to outdated packages, e.g., in manifests, hard coded strings and comments.
issueID:UIMA-2197
type:Task
changed files:
texts:Source folder of whisk plugin broken
the source  folder of the whisk plugin is broken (one "src" too much in buildpath)
issueID:UIMA-2198
type:Bug
changed files:
texts:TextMarkerCommonTab dos not display an error if no encoding is set
The error message with commented because the constant was removed in Eclipse 3.7. After the restructuring of the projects, this class will be removed or a correct error message will be set.
issueID:UIMA-2199
type:Improvement
changed files:
texts:uima-build-resources: source-release packaging: switch to standard from multi-module
The uima-parent-pom standard assembly for source-release in version 1 is to do multi-module source release assemblies using a custom descriptor.  For this project, this results in an extra directory - the uima-build-resources (because the multi-module approach inserts this directory), and the fixedVersions goes into both places (2 times).This will go away if we move to a standard hierarchical pom layout for the build stuff, or if we change the source-assembly for this project to use the standard one.  For now, do the latter.
issueID:UIMA-22
type:Bug
changed files:uimaj-tools/src/main/java/org/apache/uima/tools/docanalyzer/DocumentAnalyzer.java
uimaj-tools/src/main/java/org/apache/uima/tools/pear/install/InstallPear.java
uimaj-tools/src/main/java/org/apache/uima/tools/util/gui/AboutDialog.java
uimaj-tools/src/main/java/org/apache/uima/tools/cpm/CpmFrame.java
uimaj-tools/src/main/java/org/apache/uima/tools/viewer/CasTreeViewer.java
uimaj-tools/src/main/java/org/apache/uima/tools/images/Images.java
uimaj-tools/src/main/java/org/apache/uima/tools/cvd/CVD.java
uimaj-tools/src/main/java/org/apache/uima/tools/AnnotationViewerMain.java
uimaj-tools/src/main/java/org/apache/uima/tools/cvd/MainFrame.java
uimaj-tools/src/main/java/org/apache/uima/tools/jcasgen/GUI.java
texts:Tools still use IBM splashscreen
Our tools still use the splashscreen with the IBM logo.    Also they have "Unstructured Information Management Architecture" banners, although these don't have the IBM logo so I'm not sure if this is a problem.
issueID:UIMA-220
type:Bug
changed files:
texts:Failure in XCasToCasDataSaxHandlerTest on Sun Java 1.4.2
I think this is due to a bug in the XSLT implementation in that version of Java, which we've seen before, causing \r characters to not be serialized when an XML document is written out.  Our example CAS has explicit &#13;&#10; sequences in the Sofa.  These are preserved on deserialization, but lost on a subsequent serialization.  This causes the the test case gets an assertEquals failure attempting to compare two strings that have differing line-break styles.  It works on other JRE levels.
issueID:UIMA-2200
type:Bug
changed files:
texts:Underlying cause of an initialization exception is not reported when deployment fails
When deploying an async service with an annotator that fails to init the useful exception cause is omitted.  All I get is:org.apache.uima.resource.ResourceInitializationException: Error initializing "AggBluemaxAnnotator" from descriptor file:...../AggBluemaxAnnotator-IC.xmlWhile runAE on this descriptor yields the complete chain which includes:org.apache.uima.resource.ResourceConfigurationException: No value has been assigned to the mandatory configuration parameter ConfigFile
issueID:UIMA-2201
type:Bug
changed files:
texts:TextMarker IDE functionality missing due to renaming
Restore the functionality of the TextMarker eclipse plugins.Observed bugs till now: missing syntax coloring missing code and template completion missing launch configuration backtesting does not work cev views cannot be loaded explanation views cannot be loaded textruler view cannot be loaded
issueID:UIMA-2202
type:Task
changed files:
texts:Remove author tags from javadocs
At UIMA it is not common to have autor tags in the javadocs, because it is developed by a community and not by an individual. All author tags should be removed from the source code.
issueID:UIMA-2203
type:Bug
changed files:
texts:dead links - from move of annotators from sandbox to addons - in our site
For instance, the http://uima.apache.org/sandbox.html#dict.annotator has a link to http://svn.apache.org/repos/asf/uima/sandbox/trunk/DictionaryAnnotator which is dead.
issueID:UIMA-2204
type:Bug
changed files:
texts:fix license / notice files in addons
Many notice files missing current year in copyright.Solrcas bin distributions include slf4j-simple-1.6.1 but its license/notice is missing from Solrcas.Addons missing some license/notice parts from subprojects.
issueID:UIMA-2205
type:Bug
changed files:
texts:solrcas has a wrong dependency on 2.3.1-SNAPSHOT
Solrcas POM has a property definition <uimaDependencyVersion>2.3.1-SNAPSHOT which is incorrect - the SNAPSHOT is gone, and is now an official 2.3.1 release.  Change this to 2.3.1.
issueID:UIMA-2206
type:Task
changed files:
texts:Further restructuring and renaming of the TextMarker projects
The TextMarker projects should be further restructured, especially the dltk plugins should be merged. That will ease the migration to the maven build process. The engine project should then be separated to a normal java project and a fetcher plugin. This will be done not until the migration to maven.This restructuring enforces some renaming. Therefore, also additional renaming is performed in this task. All projects will be adapted to the UIMA convention for eclipse plugins. The namespaces will be unified to org.apache.uima.textmarker.* and the mention of dltk will be replaced by ide.
issueID:UIMA-2207
type:Improvement
changed files:
texts:Reimplementation of the TextMarker engine
Some severe flaws need to be removed from the TextMarker rule inference. This requires some major refactoring and reimplementation of internal parts of the engine project.This improvement covers: fixes the flaw with the two annotations of the same type starting at the same offset. introduces quantifiers for sequences of rule elements. eases the usage of own seed information.
issueID:UIMA-2208
type:Improvement
changed files:
texts:addons: Dictionary Annotator - create temp file in temp space
The Dictionary Annotator has a method that creates a temp file in the current directory, and then maybe fails to delete it at the end (it got picked up in the source-release distribution).  Change to create a temp file in temp space, and improve deletion.
issueID:UIMA-2209
type:Improvement
changed files:
texts:Addons OSGi - remove useless Eclipse-buddy:registered directive
The common build (specified in the uima-addons-parent pom) adds a directive "Eclipse-buddy:Registered" to the OSGi Manifest.This was done in an attempt (I think) to make it possible for the annotator to work nicely with the UIMA framework.  But, if that was the reason, then it is the wrong form; the form that would need to be used is "Eclipse-RegisterBuddy: org.apache.uima.runtime".  These annotator bundles are intended to be used with OSGi frameworks like Apache Felix, which do not support buddy-loading, in any case; because of this, the uimaj-core jars are packaged within the bundle, and the expected use is to use the bundle as a UIMA application.
issueID:UIMA-221
type:Bug
changed files:
texts:adjustExamplePaths.sh has incorrect jar file names in classpath
needs to be uima-core.jar, not uima_core.jar.  The .bat file was updated but  the.sh was missed.
issueID:UIMA-2210
type:Improvement
changed files:
texts:UIMA parent-pom - review and incorporate things from sub-parent poms, and make next release
Assuming we get the addons release out soon, it seems a good time to review and merge all the little workarounds we did in the individual xxx-parent poms, and move common stuff into the overall one.  Then, in the next releases of things, we can simplify the other parent poms.
issueID:UIMA-2211
type:Bug
changed files:uimaj-core/src/main/java/org/apache/uima/impl/Util.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/asb/impl/FlowContainer.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/asb/impl/FlowControllerContainer.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/impl/PrimitiveAnalysisEngine_impl.java
uimaj-core/src/main/java/org/apache/uima/impl/UimaContext_ImplBase.java
uimaj-core/src/main/java/org/apache/uima/impl/Util.java
uimaj-core/src/main/java/org/apache/uima/resource/impl/CasManager_impl.java
uimaj-core/src/main/java/org/apache/uima/util/CasPool.java
texts:pear failure when using multiple views with JCas
A user reported that setting a sofa mapping in a pipeline initialization that included a Pear which used JCas, caused a failure where the JCas initialization couldn't find the classes to load.Running in debug mode showed that the JCas class loader was not using the Pear's class loader.  Stepping through the code showed that casImpl's switchClassLoader method was failing to switch the classloader for the Pear's annotator, because of the multiple views.  The code looked at the CAS's "jcas" field, and found it null (because it was for a view which had not yet been referenced as a JCas).
issueID:UIMA-2212
type:Bug
changed files:uimaj-core/src/main/java/org/apache/uima/analysis_engine/impl/RsLangs.java
texts:Creating ResultSpec from Capability with no language not treating as x-unspecified for features
A user reports that setting an aggregate output capability with no language specified (which means the same as x-unspecified - that is - output  for any language) - fails, when the spec was for a particular feature.  The workaround they found was to explicitly specify x-unspecified.
issueID:UIMA-2213
type:Bug
changed files:
texts:OSGi builds missing version information on Export-Package
The OSGi build produces Export-Package entries that don't have version information.
issueID:UIMA-2214
type:Bug
changed files:
texts:addon build - make common part conditional on single-project marker file
In order to merge addon-parent pom with master parent, the build part which creates the common binary build artifacts needs to be conditional on the single-project marker file
issueID:UIMA-2215
type:Improvement
changed files:
texts:Lucas should make the create flag for the IndexWriter configurable
Lucas always creates an IndexWriter with a create flag set to true. The create flag should be configurable instead via the properties file, which already exists, and configures all other kind of properties to influence the Index Writer creation.This feature is needed for OpenNLPs Corpus Server, where an index must either be created, or reopened by the Lucas Index Writer.In the current implementation where the flag is always true, reopening is not possible because the index is overwritten.
issueID:UIMA-2216
type:Task
changed files:
texts:remove OSGi builds for now
OSGi packaging of UIMA annotators is being investigated, and some progress is being made, but it's not quite ready for release.  Remove the OSGi packagings for now.
issueID:UIMA-2217
type:Improvement
changed files:uimaj-core/src/main/java/org/apache/uima/analysis_engine/impl/AnalysisEngineManagementImpl.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/impl/AnalysisEngineManagementImplMBean.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/AnalysisEngineManagement.java
uimaj-core/src/main/java/org/apache/uima/UIMAFramework.java
texts:Extend AnalysisEngineManagement interface
Currently, there is no way to determine how long it takes to initialize components in the UIMA aggregate. The framework JMX management interface needs to be extended to expose state of a component (Initializing, Ready), ID of  a thread initializing the component, as well as the total time spent in initialization. These new stats can facilitate debugging of user code to pinpoint hangs and components that are slow to initialize. Changes are needed in the following:1) AnalysisEngineManagement - extend AE Management interface2) AnalysisEngineManagementImpl - implement new API defined in the above interface3) AnalysisEngineManagementImplMBean - expose new APIs via JMX4) UIMAFramework - modify all produceAnalysisEngine() methods to set AE state to Ready after successful call to produceResource() and set the totaltime to initialize AE
issueID:UIMA-2218
type:Task
changed files:
texts:update website for addons release, docs.
After promoting "sandbox" docs corresponding to 2.3.1 addons release, update the website for these.  Also, update the website for addons, vs. sandbox.
issueID:UIMA-2219
type:Improvement
changed files:uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/CasEditorPlugin.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/AnnotationEditor.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/CasDocumentProviderFactory.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/AnnotationEditor.java
texts:ICasEditor implementations should choose document provider based on IEditorInput
The Cas Editor currently only support one Document Provider, that should be extended and it should be possible to register a Document Provider which is selected based on the provided IEditorInput object.
issueID:UIMA-222
type:Bug
changed files:
texts:JavaDoc is not being built
For some reason no JavaDocs are being built when I execute mvn assembly:assembly
issueID:UIMA-2220
type:Improvement
changed files:
texts:Move annotation editor view extensions back to uimaj-ep-cas-editor plugin
As part of the split of the Cas Editor several view extension points have been moved to the ide plugin, but these should really be specified in the uimaj-ep-cas-editor plugin itself.
issueID:UIMA-2221
type:Bug
changed files:
texts:web page display of (TM) trademark not working
While updating the web pages, I noticed that the symbol that used to display as a small TM (for trademark) wasn't displaying correctly. I fooled around with several alternatives, but couldn't get this resolved.I did determine that if the trademark is coded as & # 0 1 5 3;  (with no spaces - here it is with no spaces, which this Jira displays as the TM symbol: &#0153; ), then our Anakia transform transforms this into hex 99 in the xxx.html generated page, which, displays OK in a browsers.  If however, you upload load this to Apache, and view the page from there, it displays incorrectly.In firefox/chrome, if you download the Apache page as "html page only" mode, then you can display that ok locally, again.  But if you download the Apache page as "web page complete" - some kind of transformation happens, including changing the charset= from iso-8859-1 to utf-8, and then the bad display happens.  If I manually change that charset back to iso-8859-1, the tm appears again.  I'm stuck at the moment to understand what is going on, or how to fix.
issueID:UIMA-2222
type:Improvement
changed files:uimaj-ep-cas-editor-ide/src/main/java/org/apache/uima/caseditor/ide/DefaultCasDocumentProvider.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/AnnotationDocument.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/AnnotationEditor.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/CasDocumentProvider.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/ICasEditor.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/TextDocumentProvider.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/styleview/AnnotationStyleViewPage.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/ui/property/EditorAnnotationPropertyPage.java
texts:CasDocumentProvider should be suitable for any kind of ICasEditor
The Cas Editor is build around the idea that a Document Provider is responsible to manage CASes for various ICasEditor implementations. The CAS handling itself should be independent of their content, therefore a CAS which contains a text view can be managed (created, serialized, delted) in the same way as a CAS which contains an audio view.Currently the CasDocumentProvider extends the eclipse text Document Provider, this inheritance should be removed, and the CasDocumentProvider should be independent of the text Document Provider.
issueID:UIMA-2223
type:Story
changed files:
texts:Incorrect address for eclipse plugin download
I went to setup the eclipse plugin following the tutorial at http://uima.apache.org/downloads/releaseDocs/2.2.2-incubating/docs/html/overview_and_setup/overview_and_setup.html#ugr.ovv.eclipse_setupThe provided link at http://www.apache.org/dist/incubator/uima/eclipse-update-site for the addon/update failed. I removed "incubator" and used http://www.apache.org/dist/uima/eclipse-update-site/ instead. This seemed to find and install the plugin correctly.
issueID:UIMA-2224
type:Improvement
changed files:
texts:build - convert top parent pom to use standard source-release build
uimaj and uima-addons now have a hierarchical structure, and can make use of the standard source-release assembly.  Change the top level pom to use this style, and either update uima-as to this style, or override back to the multi-module style in the uima-as-parent.
issueID:UIMA-2225
type:Bug
changed files:uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/CasEditorViewPage.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/editview/EditViewPage.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/outline/AnnotationOutline.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/CasEditorView.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/SubPageSite.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/outline/OutlinePageBook.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/CasEditorViewPage.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/CasEditorViewPage.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/editview/EditViewPage.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/outline/AnnotationOutline.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/outline/OutlinePageBook.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/AbstractDocumentListener.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/AnnotationEditor.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/editview/CreateFeatureStructureDialog.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/editview/EditView.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/editview/EditViewPage.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/editview/FeatureStructureContentProvider.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/fsview/FeatureStructureBrowserView.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/fsview/FeatureStructureBrowserViewPage.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/outline/AnnotationOutline.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/outline/ModeSensitiveContentProvider.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/outline/OutlineContentProviderBase.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/outline/OutlinePageBook.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/outline/TypeGroupedContentProvider.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/styleview/AnnotationStyleView.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/styleview/AnnotationStyleViewPage.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/CasEditorView.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/CasEditorViewPage.java
texts:Reusing of ICasEditor instances doesn&#39;t surrounding update views
If the amount of editor in the workbench is restricted to a certain number, eclipse will reuse already existing editors and sets a new input.In the case an editor input is change all the ICasEditor sensitive views are still bound to the old editor input.The AnnotationEditor can be reused by the eclipse workbench, and also view switches can change the way an input CAS is displayed.The AnnotationEditor itself can deal with any type of CAS sofa, if it is a text it is displayed and if not an appropriate message page is displayed. The surrounding views don't have a mechanism to deal with changing editor input or changing CAS views.Therefore we should extend the page book style annotation editor views with a mechanism to have an additional layer of pages to cover the following cases:a) Show view implementation and cas contents (Maybe destroy it and re-create, reusable viewpages are error prone to implement)b) View cannot be displayed because the document is not available (document failed to load)c) View cannot be displayed because the CAS view is incompatible with this view
issueID:UIMA-2226
type:Bug
changed files:
texts:TikaAnnotator: MarkupAnnotation.attributes FSArray has wrong element type
In TikaAnnotator/desc/MarkupAnnotatorTypeSystem.xml, the MarkupAnnotation type is defined to have a feature named "attributes" of range type FSArray and element type FSArray.The element type should be FSAttribute.
issueID:UIMA-2227
type:New Feature
changed files:
texts:Extend UIMA AS service to use IP address fetched from system environment
UIMA AS service sends a notification msg to a client identifying where (meaning node,pid,thread id) a CAS is about to be processed. Currently the node name is obtained via InetAddress.getLocalHost().getHostAddress(). To enable running services on a simulated node (not physical one), the UIMA AS needs to fetch the IP address from a System environment which will be configured by an application launching the AS service.
issueID:UIMA-2228
type:Bug
changed files:
texts:UIMA AS doesn&#39;t expose CAS instance in onBeforeMessageSend() callback
UIMA AS client sendAndReceive() blocks a thread until either a reply is received or there is a timeout. If an application uses multiple threads each blocked in sendAndReceive(), there is no way for an application to correlate onBeforeMessageSend() and onBeforeProcessCAS() callbacks to a specific CAS. The callbacks only expose cas reference Id, which (in this scenario) does not help since the cas reference id is only available when sendAndReceive() returns. Modify UIMA AS to expose CAS instance when calling onBeforeMessageSend() and onBeforeProcessCAS(). The CAS will be available via a new getCAS() method defined in UimaASProcessStatus which is an argument in both callbacks.
issueID:UIMA-2229
type:Bug
changed files:
texts:UIMA AS client allows registration of callback listener after initialization
UIMA AS client should throw an exception when an application tries to register a callback listener after UIMA AS client initializes. The registration must occur before calling initialize().
issueID:UIMA-223
type:Bug
changed files:
texts:JAR file name changes not mentioned in documentation or handled by migration script
We changed the jar file names (e.g. uima_core.jar -> uima-core.jar), but this is not mentioned in the migration chapter of the documentation and the migration tool doesn't handle it.  It would not be difficult to add this to the set of replacements that the migration tool does, and it would save users some trouble if we can migrate their script files and such things automatically.
issueID:UIMA-2230
type:Bug
changed files:
texts:UIMA AS client code should catch and log exception thrown in onBeforeMessageSend and onBeforeProcessCAS callbacks (user code)
Current code doesnt catch exceptions thrown in user code. Catch exceptions thrown in onBeforeProcessCAS and onBeforeMessageSend callbacks and log them.
issueID:UIMA-2231
type:New Feature
changed files:
texts:UIMA AS client should handle InterruptedException while blocking in sendAndReceive()
UIMA AS doesnt (gracefully) handle InterruptedException while blocking in sendAndReceive() method. An application may want to interrupt a thread stuck in sendAndReceive after some time and this should be supported. Catch the InterruptedException, cancel a timer associated with a CAS sendAndReceive() is waiting for, and throw ResourceProcessException from in sendAndReceive() with a cause:InterruptedException.
issueID:UIMA-2232
type:Bug
changed files:
texts:UIMA AS client timeout handling not working correctly
Scenario: an application uses a single instance of UIMA AS client and multiple threads call sendAndReceive() which blocks each thread waiting for a reply. The client Process timeout is smaller than it takes to process a CAS to force the timeout. Some threads are stuck in sendAndReceive(), suggesting that the timeout handling is not working.
issueID:UIMA-2233
type:New Feature
changed files:
texts:Make the seeding configurable and independent of the rule inference
The seeding needs to become more configurable and the user should be able to choose the seeder or select given annotation types for the initial inference annotations (TextMarkerBasic). Both cases need to be configurable in the analysis engine descriptor. One possible approach for a more configurable seeding is the usage of the rule-based ICU tokenizer that would replace the JFlex lexer.
issueID:UIMA-2234
type:New Feature
changed files:
texts:Dynamic anchoring of rule elements
The rule elements currently match only in one direction: from left to right. For performance reasons the start position of the rule matching should be calculated by some heuristics. An example: Given a document with thousands of words and with only 10 punctuation marks, and a rule "word followed by a punctuation mark". That rule should not start by looking at all words of the document, but at the punctuation marks.
issueID:UIMA-2235
type:New Feature
changed files:
texts:Adapt the TextMarker IDE tooling support to the new features of UIMA-2207
Not all new language elements introduced in UIMA-2207 are yet supported by the Eclipse tooling. The IDE must be adapted to the new functionality, e.g., the formatter currently deletes composed rule elements.
issueID:UIMA-2236
type:Improvement
changed files:
texts:Adapt the TextMarker explanation component to the new features of UIMA-2207
Not all new language elements introduced in UIMA-2207 are yet supported by the explanation component. Check if the rule files of the unit test are correctly explained in the TextMarker IDE.
issueID:UIMA-2237
type:Improvement
changed files:
texts:Remove modifier functionality as default and add "utility" analysis engines to new TextMarker projects.
The modifier functionality should not be integrated as default, but the user has to be able to use such utility analysis engines within TextMarker projects: deploy the additional analysis engines to new TextMarker projects, but remove them from the launch configurations.
issueID:UIMA-2238
type:Improvement
changed files:
texts:TextMarker script parsing in the initialize method
Currently, all scripts are parsed in the process method, for each CAS. Investigate, if it's possible to move the script parsing functionality to the initialization method of the engine.
issueID:UIMA-2239
type:Bug
changed files:
texts:Fix miscellaneous problems in UIMA AS code reported by Findbugs
The latest round of changes introduced a bunch of issues detected by Findbugs, including inconsistent synchronization, possible derefrencing thu null pointer, etc
issueID:UIMA-224
type:New Feature
changed files:
texts:Add release signing and verification info

issueID:UIMA-2240
type:Bug
changed files:uimaj-ep-launcher/src/main/java/org/apache/uima/ep_launcher/RemoteLauncher.java
texts:uimaj-ep-launcher does not call collectionProcessComplete on AE
The uimaj-ep-launcher call the AE to process the defined input CASes, after this is finished the AE is destroyed without calling the collectionProcessComplete method.To fix this call collectionProcessComplete before the call to destroy.
issueID:UIMA-2241
type:Improvement
changed files:
texts:Calibrate heuristic for dynamic anchoring
Calibrate heuristic for dynamic anchoring for the TextMarker rule inference. Currently, it's just  log(|Type|)* ElementIndex * IndexPenalty. Run some tests with combinations of all parameters to optimize the heuristic, e.g., how much faster moveToNext is compared to moveToPrevious and what is the effect on the inference.
issueID:UIMA-2242
type:Bug
changed files:uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/AnnotationEditor.java
texts:Selecting a single character with a double click does not enable Quick Annotate action
A user often needs to create an annotation which covers a single character when he is correcting token annotations. In the case a punctation mark needs to be annotated, it is common to double click the punctation mark in order to select it.This way of selecting a piece of text does not trigger a selection event which is needed to enable / disable the annotation actions. To fix this issue: Add a new selection listener which can listen for text selections, instead of only listening to caret position changes.
issueID:UIMA-2245
type:Improvement
changed files:uimaj-ep-cas-editor-ide/src/main/java/org/apache/uima/caseditor/ide/DefaultCasDocumentProvider.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/styleview/AnnotationStyleViewPage.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/CasDocumentProvider.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/ui/property/EditorAnnotationPropertyPage.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/ICasEditor.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/AnnotationStyleChangeListener.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/contextmenu/ShowAnnotationsMenu.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/AnnotationStyle.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/AnnotationEditor.java
texts:Add a mechanism to the Cas Editor that plugins can save type system scope preferences
Many settings in the Cas Editor need to be saved in a type system scope. This is for example the configuration of annotation styling, annotation key bindings, etc.Plugins which extend the Cas Editor have the same requirement, but the Cas Editor does not support writing of preferences to the existing DotCorpus file, which is saving preferences per type system.To fix this  replace the existing DotCorpus file with an eclipse preference store. This preference stoer can then also be used by plugins to save type system scoped settings.Existing DotCorpus files must be migrated to the preference store. This should be done in a similar way as the migration of Cas Editor projects is done. A popup dialog ask the user if he wants to migrate.
issueID:UIMA-2246
type:Task
changed files:uimaj-core/src/main/java/org/apache/uima/util/CasCreationUtils.java
texts:Switch next base version of UIMA SDK to 2.4.0 from 2.3.2 to account for slight API change
The next release of the base UIMA SDK will have minor API change for JMX beans, plus extensive changes to the CAS editor (I think - including dropping the special kind of "project" for it - unless that was already released?)...To reflect this, change the version number by incrementing the 2.3.x to 2.4.x.
issueID:UIMA-2247
type:Bug
changed files:uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/AnnotationEditor.java
texts:Annotation Editor actions are not enabled when text is selected via the find dialog
A user can select a piece of text in the Annotation Editor with the find dialog. In this case the annotation actions in the Annotation Editor are not updated and usually are disabled.To fix this, send our the selection event correctly.
issueID:UIMA-2248
type:New Feature
changed files:
texts:Add functionality to configure analysis engines within TextMarker scripts
Add functionality to configure analysis engines within TextMarker scripts. First idea: Add an additional action CONFIGURE with a mapping of parameters and their values.
issueID:UIMA-2249
type:Bug
changed files:
texts:UIMA AS client should not create JNDI InitialContext
In BaseUIMAAsynchronousEngine_impl.initialize() method the following lines of code should be removed:Properties props = new Properties();props.setProperty(Context.INITIAL_CONTEXT_FACTORY,"org.apache.activemq.jndi.ActiveMQInitialContextFactory");props.setProperty(Context.PROVIDER_URL,brokerURI);jndiContext = new InitialContext(props);This is dead code not used for anything. Marshall, actually reported seeing NPE thrown from "new InitialContext(props)" when he attached YourKit profiler. Not exactly sure why these NPEs were thrown, since this is not happening when UIMA AS client runs normally ( not under profiler's control). In any case, this code is not needed a should be removed
issueID:UIMA-225
type:Bug
changed files:uimaj-core/src/main/java/org/apache/uima/analysis_engine/impl/UimacppAnalysisEngineImpl.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/impl/UimacppAnalysisEngineImpl.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/impl/UimacppAnalysisEngineImpl.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/impl/UimacppAnalysisEngineImpl.java
texts:doFullValidation fails for C++ Annotator Descriptor
You currently get a warning in the CDE if you try to save a C++ Annotator Descriptor or an aggregate that contains one.  This is because doFullValidation is actually trying to do the full annotator initialization, including loading the dll, which will often fail in the CDE because environment variables aren't set up properly when Eclipse was launched.For Java annotators, we don't do annotator initialization during doFullValidation.  The same should be true for C++ annotators.
issueID:UIMA-2250
type:Bug
changed files:
texts:Remove hardcoded path in UIMA AS DeploymentDescriptorFactory
There is leftover junk from testing in DeploymentDescriptorFactory. Specifically in the main() there is a hardcoded path. This needs to be removed. Any testing of this class should go into jUnit test suite.
issueID:UIMA-2251
type:Bug
changed files:
texts:UIMA AS aggregate disables broker connection
One of the  users reported a problem which seems like a bug in the UIMA AS code which detects status of a   broker connection. The user provided description follows:I have an aggregate AE with a remote primitive (OntoAnnotator). Both havetheir queues at the same broker. Clients send requests to the aggregateusing the sendCAS() method.This was running fine for about 5-6 hours, but then the aggregate logged anerror:11/10/04 02:00:12 INFO cpe.DynamicFlowController$DynamicFlow: Next ExecutingAnnotator :: OntoAnnotator11/10/04 02:00:12 INFO activemq.JmsOutputChannel: ControllerAnalysisAggregator Invalidating JMS Connection To Brokertcp://broker_ip:61616 and Closing Sessions To DelegatesIt had received 4-5 timeouts from the remote delegate over time, but atleast a couple of hours before the above log. Both the broker and the remotedelegate were still running and had not crashed.The aggregate continued processing requests after that &#8211; the CASes areprocessed by all collocated primitives but not the remote one. Each CASprocess request gets an exception:11/10/04 02:00:12 WARNactivemq.JmsEndpointConnection_impl:org.apache.uima.aae.error.DelegateConnectionLostException:Controller:AnalysisAggregator Lost Connection to Delegate:OntoAnnotator atorg.apache.uima.adapter.jms.activemq.JmsEndpointConnection_impl.send(JmsEndpointConnection_impl.java:547)atorg.apache.uima.adapter.jms.activemq.JmsEndpointConnection_impl.send(JmsEndpointConnection_impl.java:509) atorg.apache.uima.adapter.jms.activemq.JmsOutputChannel.dispatch(JmsOutputChannel.java:1366)atorg.apache.uima.adapter.jms.activemq.JmsOutputChannel.sendCasToRemoteEndpoint(JmsOutputChannel.java:1527) atorg.apache.uima.adapter.jms.activemq.JmsOutputChannel.serializeCasAndSend(JmsOutputChannel.java:658)atorg.apache.uima.adapter.jms.activemq.JmsOutputChannel.sendRequest(JmsOutputChannel.java:610) atorg.apache.uima.aae.controller.AggregateAnalysisEngineController_impl.dispatch(AggregateAnalysisEngineController_impl.java:2395)atorg.apache.uima.aae.controller.AggregateAnalysisEngineController_impl.dispatchProcessRequest(AggregateAnalysisEngineController_impl.java:2435) atorg.apache.uima.aae.controller.AggregateAnalysisEngineController_impl.simpleStep(AggregateAnalysisEngineController_impl.java:1295)atorg.apache.uima.aae.controller.AggregateAnalysisEngineController_impl.executeFlowStep(AggregateAnalysisEngineController_impl.java:2316) atorg.apache.uima.aae.controller.AggregateAnalysisEngineController_impl.process(AggregateAnalysisEngineController_impl.java:1230)atorg.apache.uima.aae.handler.HandlerBase.invokeProcess(HandlerBase.java:118) atorg.apache.uima.aae.handler.input.ProcessResponseHandler.cancelTimerAndProcess(ProcessResponseHandler.java:108)When I tried stopping the aggregate, the logs said the following thoughthere was no CAS request in process:11/10/04 10:18:18 WARN service.UIMA_Service: Uima AS ServiceAnalysisAggregator Caught Kill Signal - Initiating Quiesce and Stop11/10/04 10:18:18 INFO controller.BaseAnalysisEngineController: StoppingController: AnalysisAggregator11/10/04 10:18:18 INFO activemq.JmsInputChannel: Stopping Service JMSTransport. Service: q_async_ae11/10/04 10:18:18 INFO activemq.JmsInputChannel: Controller:AnalysisAggregator Stopped Listener on Endpoint: queue://q_async_aeSelector:  Selector:Command=2000 OR Command=2002.11/10/04 10:18:18 INFO activemq.JmsInputChannel: Stopping Service JMSTransport. Service: q_async_ae11/10/04 10:18:18 INFO activemq.JmsInputChannel: Controller:AnalysisAggregator Stopped Listener on Endpoint: queue://q_async_aeSelector:  Selector:Command=2001.11/10/04 10:18:18 INFO controller.BaseAnalysisEngineController: Controller:AnalysisAggregator Registering onEmpty Callback With InProcessCache.11/10/04 10:18:18 INFO controller.BaseAnalysisEngineController: Controller:AnalysisAggregator Awaiting onEmpty Callback From InProcessCacheAfter restarting just the aggregate, it connected to the remote AE justfine. So i'm wondering why the aggregate decided to stop communicating withit earlier?I've seen a previous thread with a similar error (http://thread.gmane.org/gmane.comp.apache.uima.general/3351/focus=3388), butthere the broker was wilfully taken down, whereas I did no such thing.Thanks, and sorry for the barrage of info.Meghana
issueID:UIMA-2252
type:New Feature
changed files:
texts:Migrate TextMarker visualization to CAS Editor
Start the migration of the CEV plugins of the TextMarker using the CAS Editor code base. Investigate the which changes in the CAS Editor are needed to support the existing TextMarker functionality.
issueID:UIMA-2253
type:Bug
changed files:uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/TextDocumentProvider.java
texts:Annotation Editor fails to display type system selection page when ts is not their
The Annotation Editor display a NPE when the type system is not placed in the default location.Here is the NPE:java.lang.NullPointerException at org.apache.uima.caseditor.editor.AnnotationDocument.getCAS(AnnotationDocument.java:242) at org.apache.uima.caseditor.editor.AnnotationDocument.getText(AnnotationDocument.java:71) at org.apache.uima.caseditor.editor.AnnotationDocument.setDocument(AnnotationDocument.java:93) at org.apache.uima.caseditor.editor.TextDocumentProvider.createDocument(TextDocumentProvider.java:81) at org.eclipse.ui.texteditor.AbstractDocumentProvider.createElementInfo(AbstractDocumentProvider.java:333) at org.apache.uima.caseditor.editor.TextDocumentProvider.createElementInfo(TextDocumentProvider.java:106) at org.eclipse.ui.texteditor.AbstractDocumentProvider.connect(AbstractDocumentProvider.java:400) at org.eclipse.ui.texteditor.AbstractTextEditor.doSetInput(AbstractTextEditor.java:4213) at org.eclipse.ui.texteditor.StatusTextEditor.doSetInput(StatusTextEditor.java:237) at org.apache.uima.caseditor.editor.AnnotationEditor.doSetInput(AnnotationEditor.java:789) at org.eclipse.ui.texteditor.AbstractTextEditor$19.run(AbstractTextEditor.java:3200) at org.eclipse.jface.operation.ModalContext.runInCurrentThread(ModalContext.java:464) at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:372) at org.eclipse.jface.window.ApplicationWindow$1.run(ApplicationWindow.java:759) at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:70) at org.eclipse.jface.window.ApplicationWindow.run(ApplicationWindow.java:756) at org.eclipse.ui.internal.WorkbenchWindow.run(WorkbenchWindow.java:2642) at org.eclipse.ui.texteditor.AbstractTextEditor.internalInit(AbstractTextEditor.java:3218) at org.eclipse.ui.texteditor.AbstractTextEditor.init(AbstractTextEditor.java:3245) at org.apache.uima.caseditor.editor.AnnotationEditor.init(AnnotationEditor.java:587) at org.eclipse.ui.internal.EditorManager.createSite(EditorManager.java:828) at org.eclipse.ui.internal.EditorReference.createPartHelper(EditorReference.java:647) at org.eclipse.ui.internal.EditorReference.createPart(EditorReference.java:465) at org.eclipse.ui.internal.WorkbenchPartReference.getPart(WorkbenchPartReference.java:595) at org.eclipse.ui.internal.EditorReference.getEditor(EditorReference.java:289) at org.eclipse.ui.internal.WorkbenchPage.busyOpenEditorBatched(WorkbenchPage.java:2945) at org.eclipse.ui.internal.WorkbenchPage.busyOpenEditor(WorkbenchPage.java:2850) at org.eclipse.ui.internal.WorkbenchPage.access$11(WorkbenchPage.java:2842) at org.eclipse.ui.internal.WorkbenchPage$10.run(WorkbenchPage.java:2793) at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:70) at org.eclipse.ui.internal.WorkbenchPage.openEditor(WorkbenchPage.java:2789) at org.eclipse.ui.internal.WorkbenchPage.openEditor(WorkbenchPage.java:2773) at org.eclipse.ui.internal.WorkbenchPage.openEditor(WorkbenchPage.java:2764) at org.eclipse.ui.ide.IDE.openEditor(IDE.java:651) at org.eclipse.ui.ide.IDE.openEditor(IDE.java:610) at org.eclipse.jdt.internal.ui.javaeditor.EditorUtility.openInEditor(EditorUtility.java:355) at org.eclipse.jdt.internal.ui.javaeditor.EditorUtility.openInEditor(EditorUtility.java:164) at org.eclipse.jdt.ui.actions.OpenAction.run(OpenAction.java:249) at org.eclipse.jdt.ui.actions.OpenAction.run(OpenAction.java:228) at org.eclipse.jdt.ui.actions.SelectionDispatchAction.dispatchRun(SelectionDispatchAction.java:275) at org.eclipse.jdt.ui.actions.SelectionDispatchAction.run(SelectionDispatchAction.java:251) at org.eclipse.jdt.internal.ui.packageview.PackageExplorerActionGroup.handleOpen(PackageExplorerActionGroup.java:376) at org.eclipse.jdt.internal.ui.packageview.PackageExplorerPart$4.open(PackageExplorerPart.java:538) at org.eclipse.ui.OpenAndLinkWithEditorHelper$InternalListener.open(OpenAndLinkWithEditorHelper.java:48) at org.eclipse.jface.viewers.StructuredViewer$2.run(StructuredViewer.java:866) at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42) at org.eclipse.ui.internal.JFaceUtil$1.run(JFaceUtil.java:49) at org.eclipse.jface.util.SafeRunnable.run(SafeRunnable.java:175) at org.eclipse.jface.viewers.StructuredViewer.fireOpen(StructuredViewer.java:864) at org.eclipse.jface.viewers.StructuredViewer.handleOpen(StructuredViewer.java:1152) at org.eclipse.jface.viewers.StructuredViewer$6.handleOpen(StructuredViewer.java:1256) at org.eclipse.jface.util.OpenStrategy.fireOpenEvent(OpenStrategy.java:275) at org.eclipse.jface.util.OpenStrategy.access$2(OpenStrategy.java:269) at org.eclipse.jface.util.OpenStrategy$1.handleEvent(OpenStrategy.java:309) at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:84) at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4125) at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1457) at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1480) at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1465) at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:1270) at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:3971) at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3610) at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:2696) at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:2660) at org.eclipse.ui.internal.Workbench.access$4(Workbench.java:2494) at org.eclipse.ui.internal.Workbench$7.run(Workbench.java:674) at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:332) at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:667) at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:149) at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:123) at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196) at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:110) at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:79) at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:344) at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:179) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25) at java.lang.reflect.Method.invoke(Method.java:597) at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:622) at org.eclipse.equinox.launcher.Main.basicRun(Main.java:577) at org.eclipse.equinox.launcher.Main.run(Main.java:1410)
issueID:UIMA-2255
type:Improvement
changed files:
texts:Add documentation for UIMA-AS tools,including new tool getMetaData
Document the GetMetaRequest class, and add scripts to run it as a command (getMetaData).  Add a chapter to the uima-as "book" that documents all the command line tools, and mentions the deployment descriptor editor.
issueID:UIMA-2256
type:Task
changed files:
texts:Upgrade TextMarker IDE to DLTK 3.0
The IDE is currently still based on 1.0 and therefore the TextMarker IDE relys on the older developer update site for the 1.0 version. The TextMarker IDE should be built upon DLTK versions that are shipped with the current Eclipse release. On the one hand, the TextMarker IDE can be installed without adding additional (old) update sites and, on the other hand, new features and support for new functionality in DLTK 3.0 can be integrated in the TextMarker IDE.
issueID:UIMA-2257
type:Improvement
changed files:
texts:Update and enhance the Cas Editor user documentation
The Cas Editor got a couple of new features recently and the documentation should explain how to use these.Additionally all outdated screenshots should be replaced with current ones.
issueID:UIMA-226
type:Bug
changed files:
texts:In uimaj-examples some resource files are under src/main/java instead of src/main/resources
Because of this they aren't copied to the examples directory of our distribution, or included in uima-examples.jar.  The corresponding example annotators then fail to run.
issueID:UIMA-2260
type:New Feature
changed files:uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/AnnotationEditor.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/AnnotationEditorSelection.java
texts:Let CAS Editor communicate text selection changes
Let CAS Editor communicate text selection changes. Add some interface and listener structure if there is not one yet for the text selection event in the Annotation Editor. Views should be able to be notified also about simple text selection changes in addition to the annotation selection in the editor.
issueID:UIMA-2261
type:Improvement
changed files:uimaj-ep-cas-editor-ide/src/main/java/org/apache/uima/caseditor/ide/DefaultCasDocumentProvider.java
uimaj-ep-cas-editor-ide/src/main/java/org/apache/uima/caseditor/ide/DefaultCasDocumentProvider.java
texts:Cas Editor Ide Plugin needs to store type system dependent session preferences
During the recent refactoring of the preference settings the list of shown types in the Annotation Editor was moved to the session preferences, which lead to the demand to save these to be able to restore the Cas Editor session after it was restarted.Add a mechanism to the Cas Editor Ide Plugin to save the session preferences as a property on the IFile object which holdsthe type system xml.
issueID:UIMA-2262
type:Task
changed files:
texts:Verify no accidental LGPL dependency from Apache Camel / ActiveMQ packaging error
ActiveMQ found an accidental LGPL dependency from Apache Camel - see https://issues.apache.org/jira/browse/AMQ-3491Since we have dependencies on Apache Camel and ActiveMQ, insure our distribution doesn't have a similar issue, and if it does, fix it.
issueID:UIMA-2263
type:Improvement
changed files:uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/AnnotationEditor.java
texts:Add a method to get the current caret position from the AnnotationEditor
The Annotation Editor should have a method wich can be used to retrieve the current caret position.The implementation should rely on the Styled Text widget to get this information.
issueID:UIMA-2265
type:Bug
changed files:uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/outline/AnnotationOutline.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/styleview/AnnotationStyleViewPage.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/AnnotationEditor.java
texts:AnnotationEditor is missing a removeAnnotationListener method
The Annotation Editor should have a remove listener method for the Annotation Editor listener.To fix this issue add this method, and make sure the Cas Editor views are calling it to remove the listener.
issueID:UIMA-2266
type:New Feature
changed files:uimaj-ep-cas-editor-ide/src/main/java/org/apache/uima/caseditor/ide/DefaultCasDocumentProvider.java
uimaj-ep-cas-editor-ide/src/main/java/org/apache/uima/caseditor/ide/searchstrategy/ITypeSystemSearchStrategy.java
uimaj-ep-cas-editor-ide/src/main/java/org/apache/uima/caseditor/ide/searchstrategy/TypeSystemSearchStrategyFactory.java
uimaj-ep-cas-editor-ide/src/main/java/org/apache/uima/caseditor/ide/DefaultCasDocumentProvider.java
uimaj-ep-cas-editor-ide/src/main/java/org/apache/uima/caseditor/ide/searchstrategy/ITypeSystemSearchStrategy.java
uimaj-ep-cas-editor-ide/src/main/java/org/apache/uima/caseditor/ide/searchstrategy/TypeSystemSearchStrategyFactory.java
texts:Enable multiple strategies for finding a suitable type system
Add an extension point for type system search strategies (maybe with priorities). The different strategies need then to be applied in DefaultCasDocumentProvider.createDocument.
issueID:UIMA-2267
type:Improvement
changed files:uimaj-ep-cas-editor-ide/src/main/java/org/apache/uima/caseditor/ide/DefaultCasDocumentProvider.java
texts:CAS Editor should open file with type systems that are out of sync
CAS Editor should open file with type systems that are out of sync. If it is possible, then DefaultCasDocumentProvider.createDocument() should do a refresh.
issueID:UIMA-2268
type:Bug
changed files:
texts:TextMarker Query returns strange results for debugged CAS
TextMarker Query returns strange results: It uses the debug types for listing the matched texts. If it is applied on debugged CAS with this information, then it is also listed as result. Those annotations need to be removed before processing the CAS.
issueID:UIMA-227
type:Bug
changed files:
texts:Distribution docs directory includes XXX_pdf_src.xml files
These are intermediate files and should not be included.
issueID:UIMA-2270
type:Bug
changed files:uimaj-core/src/main/java/org/apache/uima/resource/metadata/impl/MetaDataObject_impl.java
texts:CDE operating very slowly with IBM Java
Opening a large set of descriptors in the Configuration Descriptor Editor (CDE) is very slow using IBM Java.  Investigation reveals that some caching put in to speed up Java Bean introspection was being done on a per-instance-of-a class basis, instead of on a class basis.  The IBM Java appears to create and link a brand-new method.invoke piece of code for each of these instances, which slows down the reflection access approach used by XML parsing and descriptor cloning, considerably. Sun Java doesn't seem sensitive to this; they must have some different approach to reflective method invocation.Fix this by changing the way Introspection results are cached in MetaDataObject_impl to cache Introspection results just once per Class, instead of once per class instance.  This speeds up things by 3x overall (I measured it) in time-to-load a large descriptor into the CDE, and more-or-less matches what Sun Java achieves.
issueID:UIMA-2272
type:New Feature
changed files:
texts:Allow de-/activating of dynamic acnhoring within TextMarker scripts
Allow de-/activating of dynamic acnhoring within TextMarker scripts: create a new action that sets dynamic anchoring and its parameters.
issueID:UIMA-2273
type:New Feature
changed files:uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/editview/CreateFeatureStructureDialog.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/editview/EditView.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/editview/EditViewPage.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/editview/FeatureStructureContentProvider.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/fsview/FeatureStructureBrowserView.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/fsview/FeatureStructureBrowserViewPage.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/outline/AnnotationOutline.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/outline/ModeSensitiveContentProvider.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/outline/OutlineContentProviderBase.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/outline/OutlinePageBook.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/outline/TypeGroupedContentProvider.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/styleview/AnnotationStyleView.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/styleview/AnnotationStyleViewPage.java
uimaj-ep-cas-editor-ide/src/main/java/org/apache/uima/caseditor/ide/DefaultCasDocumentProvider.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/fsview/FeatureStructureBrowserViewPage.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/AnnotationEditor.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/CasDocumentProvider.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/editview/FeatureStructureContentProvider.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/fsview/FeatureStructureBrowserViewPage.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/outline/OutlineContentProviderBase.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/styleview/AnnotationStyleViewPage.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/outline/ModeSensitiveContentProvider.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/outline/OutlineContentProviderBase.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/outline/TypeGroupedContentProvider.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/styleview/AnnotationStyleViewPage.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/AnnotationEditor.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/FindAnnotateDialog.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/AnnotationEditor.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/action/DeleteFeatureStructureAction.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/action/LowerLeftAnnotationSideAction.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/action/LowerRightAnnotationSideAction.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/action/MergeAnnotationAction.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/action/WideLeftAnnotationSideAction.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/action/WideRightAnnotationSideAction.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/editview/CreateFeatureStructureDialog.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/fsview/FeatureStructureBrowserViewPage.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/fsview/TypeCombo.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/outline/AnnotationOutline.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/ICasEditorInputListener.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/AnnotationEditor.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/editview/FeatureStructureContentProvider.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/fsview/FeatureStructureBrowserViewPage.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/outline/OutlineContentProviderBase.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/styleview/AnnotationStyleViewPage.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/AnnotationEditor.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/styleview/AnnotationStyleViewPage.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/styleview/AnnotationStyleViewPage.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/editview/FeatureStructureContentProvider.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/ICasEditorInputListener.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/ICasEditor.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/editview/FeatureStructureContentProvider.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/fsview/FeatureStructureBrowserViewPage.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/AbstractDocument.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/AnnotationDocument.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/AnnotationEditor.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/DocumentUimaImpl.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/ICasDocument.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/ICasDocumentListener.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/ICasEditorInputListener.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/editview/EditViewPage.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/editview/FeatureStructureContentProvider.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/fsview/FeatureStructureBrowserViewPage.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/outline/OutlineContentProviderBase.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/AnnotationEditor.java
uimaj-ep-cas-editor-ide/src/main/java/org/apache/uima/caseditor/ide/DefaultCasDocumentProvider.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/AbstractDocument.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/AnnotationDocument.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/AnnotationEditor.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/CasDocumentProvider.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/DocumentUimaImpl.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/ICasDocument.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/ICasDocumentListener.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/editview/FeatureStructureContentProvider.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/fsview/FeatureStructureBrowserViewPage.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/outline/ModeSensitiveContentProvider.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/outline/OutlineContentProviderBase.java
texts:Let CAS Editor implement IResourceChangeListener
Some functionality to automatically update a opened CAS in the CAS editor if the file was changed would be really nice. I don't know for sure, if this functionality is missing or I simply didn't find it in the code and in Eclipse. In any case, I haven't found a IResourceChangeListener implementation and that is how I would have done it.The general communication shouldn't be a problem to implement, but - in my experience - updating all necessary elements can be tricky. The interface for changing a view can maybe be used and has probably to be extended.
issueID:UIMA-2274
type:Improvement
changed files:
texts:Remove unused classes from Deployment Descriptor Editor plugin
The "uimaj-ep-runtime-deployeditor" plugin contains some classes that are not used by any code in UIMA.Since this plugin is only used by the "uimaj-ep-deployeditor" plugin (Deployment Descriptor Editor), we will eliminate this plugin, remove unused classes, and merge the remained classes into the "uimaj-ep-deployeditor" plugin.
issueID:UIMA-2276
type:Improvement
changed files:uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/fsview/FeatureStructureBrowserViewPage.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/fsview/FeatureStructureBrowserView.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/fsview/FeatureStructureBrowserViewPage.java
texts:The Feature Structure view should remember the last chosen FS type
The Feature Structure view does not remember the last selected type in the combo box when a user opens a new CAS. This means that a user always has to re-select the type he is working with.To fix this store the last used type in the sessions preferences, and initialize the combo box with it when re-creating the FeatureStructureViewPage.
issueID:UIMA-2277
type:Improvement
changed files:
texts:Cas Editor Views should be close able in the Cas Editor Perspective
The views in the Cas Editor perspective should be close able by the user, otherwise it is difficult to replace them with new views which are customized for an annotation task.
issueID:UIMA-2279
type:Bug
changed files:uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/AnnotationEditor.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/AbstractDocument.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/DocumentUimaImpl.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/AnnotationEditor.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/annotation/TokenDrawingStrategy.java
texts:Adding/Removing a lot of annotations to/from the Annotation Editor is slow
The Annotation Editor renders new annotations slowly when a lot of annotations are added at once. Investigate the problem and try to speed up the rendering code.
issueID:UIMA-228
type:Improvement
changed files:
texts:update sandbox website with available components
update sandbox website with available components: Whitespace tokenizer Snowball annotator
issueID:UIMA-2280
type:New Feature
changed files:uimaj-ep-cas-editor-ide/src/main/java/org/apache/uima/caseditor/ide/CasEditorIdePreferenceConstants.java
uimaj-ep-cas-editor-ide/src/main/java/org/apache/uima/caseditor/ide/CasEditorIdePreferenceInitializer.java
uimaj-ep-cas-editor-ide/src/main/java/org/apache/uima/caseditor/ide/CasEditorIdePreferencePage.java
uimaj-ep-cas-editor-ide/src/main/java/org/apache/uima/caseditor/ide/DefaultCasDocumentProvider.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/AnnotationEditorPreferenceConstants.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/AnnotationEditorPreferenceInitializer.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/AnnotationEditorPreferencePage.java
uimaj-ep-cas-editor-ide/src/main/java/org/apache/uima/caseditor/ide/DefaultCasDocumentProvider.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/AnnotationEditorPreferenceConstants.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/AnnotationEditorPreferenceInitializer.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/AnnotationEditorPreferencePage.java
texts:Add option to deactivate the type system mapping
Add an option to deactivate the type system mapping. If deactivated, other strategies for the selection of the type system may be applied even if the CAS was already opened with a valid type system before. The user should be able to de/-activate the usage of the mapping in the preference pages of the CAS Editor. By default, the type system mapping is of course activated.
issueID:UIMA-2282
type:Improvement
changed files:uimaj-ep-cas-editor-ide/src/main/java/org/apache/uima/caseditor/ide/CasEditorPreferencePage.java
texts:Restructuring of preference pages for the CAS Editor
We should define a new group with the title "UIMA Cas Editor" and then use it as a root for the Annotation Editor and the new Cas Editor Ide Preference Page.
issueID:UIMA-2283
type:Improvement
changed files:
texts:top parent pom should include apache snapshot repository for non-release builds
Our override parent poms (e.g. uimaj-parent-pom) have repository entries for the snapshot repo, allowing snapshot built artifacts to be used (just) for snapshot builds (not releases).  Move this capability to the shared common project-wide parent-pom
issueID:UIMA-2285
type:Task
changed files:
texts:Write documentation for the TextMarker projects
Write the documentation for the TextMarker projects. The documentation should cover the installation of the TextMarker IDE, the usage of the Ide in general and its extensions (especially explanation, testing and query) and of course the TextMarker rule language and inference itself.
issueID:UIMA-2286
type:Task
changed files:
texts:Review the remaining issues of the old TextMarker SourceForce project
Review the remaining issues of the abandoned TextMarker SourceForce project. There are still some open bug reports and feature requests. Create an issue here if they still apply.
issueID:UIMA-2287
type:Bug
changed files:
texts:Update mechanism of TextMarker views needs improvement
After the changes in UIMA-2273 and the new functionality when changing the editor input, the TextMarker views were adapted. However, the desired functionality is not working correctly yet. Investigate the update mechanism of the TextMarker views (browser, selection, explain,...) and fix any open problems.
issueID:UIMA-2288
type:Improvement
changed files:
texts:docbook builds intermittently fail with with duplicate ID error, detected by FOP (PDF build) processing
The docbkx process runs an xslt transformation over the source to produce a .fo input file for FOP to produce the PDF.  From time to time, this transformation will generate xml <fo:block id="dxxxx"> elements, with identical "id"s, which FOP then checks for and stops running when it finds one (duplicate ids are illegal in xml). These ids appear not to be used.  I looked through one file - the UIMA tools guide, and didn't see any use.The problem is intermittent, and may be related to multi-core machines.  On my latest laptop (which has 4 real cores), I'm often getting this error.  Rerunning a few times usually gets me around this.  I can increase the likelihood that rerunning works, by kicking off some other CPU-intensive work on my laptop, while the xslt transformation is going onThese generated <fo:block id="dxxx"> elements with duplicate ids always appear around the embedding of external graphics.  Fix this by finding the place in the xslt transform templates which generate this, and remove the id=... part; add this as a customization override template to our docbook process.
issueID:UIMA-2289
type:Bug
changed files:
texts:top parent-pom hardcodes old level of uima-build-resources
The parent pom defines a property, uimaBuildResourcesVersion, which specifies which version of uima-build-resources to use.  However, the docbook processing profile has hardcoded version 1 as the level it uses when running the docbkx process. Change this to use the value of the property.Also, change the value of the property to be 3-SNAPSHOT to pick up the latest.And, while we're in this pom, upgrade to use the current docbkx version 2.0,13 (was 2.0.11)
issueID:UIMA-229
type:Bug
changed files:uimaj-core/src/main/java/org/apache/uima/analysis_engine/impl/AnalysisEngineDescription_impl.java
uimaj-core/src/main/java/org/apache/uima/resource/ResourceInitializationException.java
uimaj-core/src/main/java/org/apache/uima/resource/impl/ResourceCreationSpecifier_impl.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/impl/AnalysisEngineDescription_impl.java
uimaj-core/src/main/java/org/apache/uima/resource/ResourceInitializationException.java
uimaj-core/src/main/java/org/apache/uima/resource/impl/ResourceCreationSpecifier_impl.java
texts:Bad error message if aggregate descriptor flow contains undefined key
If an aggregate descriptor's <fixedFlow> references a delegate key that's not defined anywhere, you get a NullPointerException instead of a helpful error message.org.apache.uima.analysis_engine.AnalysisEngineProcessException at org.apache.uima.analysis_engine.asb.impl.ASB_impl$AggregateCasIterator.processUntilNextOutputCas(ASB_impl.java:574) at org.apache.uima.analysis_engine.asb.impl.ASB_impl$AggregateCasIterator.<init>(ASB_impl.java:393) at org.apache.uima.analysis_engine.asb.impl.ASB_impl.process(ASB_impl.java:326) at org.apache.uima.analysis_engine.impl.AggregateAnalysisEngine_impl.processAndOutputNewCASes(AggregateAnalysisEngine_impl.java:259) at org.apache.uima.analysis_engine.impl.AnalysisEngineImplBase.process(AnalysisEngineImplBase.java:202) at org.apache.uima.collection.impl.cpm.engine.ProcessingUnit.processNext(ProcessingUnit.java:1221) at org.apache.uima.collection.impl.cpm.engine.ProcessingUnit.run(ProcessingUnit.java:668)Caused by: java.lang.NullPointerException at org.apache.uima.flow.impl.FixedFlowController$FixedFlowObject.next(FixedFlowController.java:181) at org.apache.uima.analysis_engine.asb.impl.FlowContainer.next(FlowContainer.java:83) at org.apache.uima.analysis_engine.asb.impl.ASB_impl$AggregateCasIterator.processUntilNextOutputCas(ASB_impl.java:506) ... 6 more
issueID:UIMA-2291
type:Bug
changed files:
texts:Cas Editor Ide jar file is missing in the binary distribution
The Cas Editor Ide jar file is missing in the binary distribution. Add the jar file to the binary distribution and verify that the uimaj-ep-launcher plugin jar file is also included. If not, add it as well.
issueID:UIMA-2292
type:Improvement
changed files:
texts:update release notes for 2.4.0 UIMA SDK

issueID:UIMA-2293
type:Bug
changed files:uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/CasEditorView.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/styleview/AnnotationStyleViewPage.java
uimaj-ep-cas-editor-ide/src/main/java/org/apache/uima/caseditor/ide/DefaultCasDocumentProvider.java
texts:Resource change listener should only reload document when change was not done by a Cas Editor
The Cas Editor should not reload the document when it was saved by itself.
issueID:UIMA-2294
type:Bug
changed files:
texts:Cas Editor View should not share view page
The Cas Editor View accidentally shares a view page between editors. To fix this ensure every editor gets its own view page.
issueID:UIMA-2295
type:Bug
changed files:
texts:timing bug in CPM testcase causes hang
The CpmInitTest has faulty logic - it starts a cpm processing a bunch of docs, and then issues an async stop after 500 milliseconds.  If the pipeline has already finished (say, on a fast CPU), then the tested for callback of "aborted" (which normally happens when the pipeline is stopped before it's finished) is replaced by a callback of "finished".  The test case only checks for aborted.Try fixing this to have an infinite-sized number of docs, so it doesn't "finish" before stopping.
issueID:UIMA-2296
type:Task
changed files:
texts:update eclipse-update-site for 2.4.0 uima sdk
update the eclipse update site for the 2.4.0 release:  put the 2.3.1 deployeditor feature jar into the features, increment POM to version 4, update parent pom to version 3, add copy of plugins for launcher and uimaj-ep-cas-editor-ide, comment out not-yet-released 2.4.0 deployeditor.
issueID:UIMA-2298
type:Improvement
changed files:uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/editview/EditViewPage.java
texts:CasEditor Edit View: Display boolean feature values as check boxes
In my (subjective) opinion, it would be more efficient to display boolean feature values as checkboxes rather than dropdown lists with "true"/"false" values.This would simplify annotation tasks in which many boolean values have to be changed.
issueID:UIMA-2299
type:Improvement
changed files:
texts:move Eclipse build tools to build project
Currently, the two "feature" projects and the eclipse-update-site project are in the uimaj component, but they're not really part of that release, and are updated for new uima-as plugins, etc.  Their output is the eclipse update site.  Move these to the uima/build area.Also consider moving the uimaj-internal-tools to there - since it's not part of the released artifacts for uimaj.
issueID:UIMA-23
type:Bug
changed files:
texts:setUimaClassPath and adjustExamplePaths scripts have incorrect jar names
They reference uima_xxx.jar instead of uima-xxx.jar.
issueID:UIMA-230
type:Bug
changed files:uimaj-tools/src/main/java/org/apache/uima/tools/cpm/CpmFrame.java
uimaj-tools/src/main/java/org/apache/uima/tools/cpm/CpmFrame.java
texts:CPE GUI sometimes won&#39;t start if JList widgets are in use
There's a race condition that can cause a NullPointerException on startup of the CPE GUI.  The GUI loads the last known CPE descriptor and attempts to populate the GUI.  If there are JList widgets needed (for multi-valued parameters) you can sometimes get a NullPointerException in javax.swing.plaf.basic.BasicListUI.updateLayoutState.  Sometimes this error prevents the CPE GUI from starting (other times it is just printed on the console).Swing isn't thread-safe and I think we aren't doing proper synchronization here.
issueID:UIMA-2300
type:Improvement
changed files:
texts:cleanups from UIMA 2.4.0 release
Record here various minor cleanups to do which were discovered during the 2.4.0 release testing. Readme file for building refers to old .../uimaj directory Source-release: drop the   uima-cpe checkpoint files (from testing)  generated uimaj-eclipse-feature-* files  generated uimaj-ep-* META-INF folder and contents
issueID:UIMA-2301
type:Bug
changed files:
texts:Anakia website not generating in UTF-8
Anakia has the ability to generate output in various codepage encodings.  This is controlled by a mostly undocumented setting in the properties, with the name output.encoding.  An example of the failure is the output of the team-list page with the character "u" with 2 dots above it, with the unicode codepoint in hex of "FC", and the UTF-8 encoding of that value as C3 BC. Apache webservers are set to output pages assuming they are UTF-8 encoded, so Anakia must be told to output using UTF-8.Fix this by1) adding a velocity.properties file where the other velocity control files live, namely, in xdocs/stylesheets2) fix the anakia call in the build.xml to use this style sheet, and also fix a bug where the style= setting is incorrect.3) change the character encoding on team-list.xml (source) to be utf-8.
issueID:UIMA-2302
type:Improvement
changed files:
texts:uima sdk doc release needs one more file automated
The documentation for UIMA Java SDK consists of 4 "books" plus a small "index.html" file that links to the 4 books in html.  The index.html file is updated manually for each release, from previous copies of it on our website.Figure out a better way to handle this little file, so there's less "manual" operations, for the next release.
issueID:UIMA-2303
type:Improvement
changed files:
texts:fix some license / notice files inside Jars, and eclipse features
The Jar file for the cas editor has a license and notice, but needs the extra bit we have for including svg icons.  Likewise, the license info for the eclipse features which are shown to the user need to mention this.
issueID:UIMA-2304
type:Bug
changed files:
texts:UIMA AS service serializes Exception object which may contain user defined Exception class not available to the client
When AE throws an exception UIMA wraps it in AnalysisEngineProcessException which is handed off to UIMA AS. This exception is subsequently serialized as a java object and sent in a reply to the client. The client deserializes the cargo back to a java Exception and hands it off to the application via a callback. The problem is that the Exception stack trace may include user defined Exception class(es) which are not available to the client thus causing ClassNotFound while deserializing a reply. Modify UIMA AS service side to serialize an exception to a String and send that to the client.
issueID:UIMA-2305
type:Improvement
changed files:uimaj-tools/src/main/java/org/apache/uima/tools/docanalyzer/DocumentAnalyzer.java
uimaj-tools/src/main/java/org/apache/uima/tools/components/FileSystemCollectionReader.java
uimaj-tools/src/main/java/org/apache/uima/tools/docanalyzer/DocumentAnalyzer.java
uimaj-tools/src/main/java/org/apache/uima/tools/docanalyzer/PrefsMediator.java
texts:Adding graphical components to the DocumentAnalyzer to handle the input file format (xcas, xmi, textDocument)
In the uimaj-tools package, the DocumentAnalyzer class &#91;1&#93; does not offer the way to graphically set up the input file format (xcas, xmi, textDocument) while it uses the FileSystemCollectionReader class &#91;2&#93; which offers its possibility.We propose to add two graphical components: one to set up the input file format (xcas, xmi, textDocument) and the other to indicate if the execution must fails if an encountered type is unknown (when parsing xmi files).&#91;1&#93; org/apache/uima/tools/docanalyzer/DocumentAnalyzer.java&#91;2&#93; org/apache/uima/tools/components/FileSystemCollectionReader.java
issueID:UIMA-2307
type:Bug
changed files:
texts:BasicArrayFS has two unimplemented Functions: copyToArray, copyFromArray.
When trying to use any non-atomic type in an ArrayFS, two functions are vital to copy from / to the FS:void  copyToArray (size_t uiStart, size_t uiEnd, T *destArray, size_t uiDestOffset) const void  copyFromArray (T const *sourceArray, size_t uiStart, size_t uiEnd, size_t uiOffset)As far as I can tell, these need FSHeap::get8BitArray etc to be public.These raise a NotYetImplementedError. Will attach a patch if I find out how to.
issueID:UIMA-2308
type:Bug
changed files:uimaj-core/src/main/java/org/apache/uima/resource/impl/ResourceManager_impl.java
texts:UIMA CasCreationUtils throws NPE when multiple threads in UIMA AS call defineCasPool
UIMA CasCreationUtils throws NPE from setupTypePriorities() when UIMA AS scales AEs in multiple threads. The NPE is due to thread safety issue in UIMA caused by lazy initialization of CAS pools. Seems to be triggered when large type system is used. Synchronize UIMA AS org.apache.uima.aae.EECasManager_impl.defineCasPool() to make sure only one thread at a time executes the code.
issueID:UIMA-2309
type:Bug
changed files:
texts:UIMA AS not calling AE.destroy() method on the same thread that initialized the AE
When stopping, UIMA AS doesnt call AE.destroy() method on the same thread that was used to initialize the AE. Also, UIMA AS thread factory (source of threads which process CASes) sets each thread as daemon resulting in a premature exit of a process. The jvm is free to exit if all threads complete their run() method or all remaining threads in the jvm are daemon threads. This premature exit prevents UIMA AS from completing call to destroy() method on each AE. Refactor code involved in UIMA AS process shutdown.
issueID:UIMA-231
type:Bug
changed files:uimaj-tools/src/main/java/org/apache/uima/tools/cpm/CpmPanel.java
uimaj-tools/src/main/java/org/apache/uima/tools/util/gui/FileSelector.java
uimaj-tools/src/main/java/org/apache/uima/tools/cpm/CpmPanel.java
uimaj-tools/src/main/java/org/apache/uima/tools/util/gui/FileSelector.java
texts:CPEGUI clearAll doesn&#39;t reset file chooser directory consistently
If the first thing you do after launching the CPE GUI is File - Clear All, it doesn't reset the collection reader file chooser to its default state like it is supposed to.
issueID:UIMA-2310
type:Bug
changed files:
texts:TextMarker IDE&#39;s handling of copied packages not compatible with search heuristic of engine
The situation: If the user copied or moved a package, then the IDE creates one folder for the package path instead of the JAVA-like folder structure. The TextMarker engine, however, is not able to locate the scripts in the script paths when the package contains dots that do not refer to a folder structure. May be related to UIMA-2256. Renaming of packages may cause the same problem.
issueID:UIMA-2312
type:New Feature
changed files:
texts:Migrate UIMA C++ service wrapper to ACTIVEMQ CPP 3.4.1
Modify for ACTIVEMQ CPP API changes and location of ACTIVEMQ CPP libraries.
issueID:UIMA-2313
type:Bug
changed files:
texts:SETFEATURE action does not work for Float-valued features
In org.apache.uima.textmarker.action.SetFeatureAction.execute() numberExpr is checked for being uima.cas.Integer or uima.cas.Double but not for uima.cas.Float Float is quite popular for storing confidence values (and it is used exclusively in uima.tt, not Double)
issueID:UIMA-2314
type:Bug
changed files:
texts:UIMA C++ updates to documentation for 2.4.0 release
Update the readme and release notes for upcoming 2.4.0 release of UIMA C++ SDK.
issueID:UIMA-2316
type:Bug
changed files:
texts:UIMA AS should synchronize access to MBean server when registering/unregistering MBeans
Some methods in JmxManager.java dont synchronize access to MBeanServer. Occasinally,exceptions are thrown when multiple threads try to unregister MBeans. Synchronize access to MBeanServer using class level locking ex. synchronized(JmxManager.class) {...}
issueID:UIMA-2317
type:Bug
changed files:
texts:Fix a Deadlock in UIMA AS client
UIMA AS client code uses double synchronization on the same lock for no reason. Also, in some cases code uses more than one lock which can cause a deadlock if another thread also tries to acquire the same locks. This has only been seen/reported once. Relax use of synchronization and refactor code to prevent deadlocks.
issueID:UIMA-2318
type:Improvement
changed files:
texts:Define automatic distribution of a closed term set over multiple fields in one field definition.
In the course of my work I needed LuCas to do a few things which were not possible or at least not too easy out-of-the-box. I checked out the latest LuCas version and adapted it to suit my needs.The main extension arose from the following idea:In the documents I want to index, gene names and identifiers are tagged (into a UIMA type 'Gene'). These identifiers are indexed so you can search for them. For faceting purposes I send these identifiers into a Lucene field named 'facetTerms'. However, I have quite a whole lot of identifiers AND the identifiers are organized in multiple categories in my application. The best thing for me would be to have a single field for each of these categories, containing only gene identifiers belonging to this category.This allows to easily obtain facet counts per category.Now I have over 20 categories and I did not like the idea of a LuCas mapping file with 20 copies of nearly the same field definition.So I allowed new attributes to a field element in the mapping file. These attributes would specify: A file determining the association between each possible term and its category (same format as hypernym file, so one term can belong to multiple categories); The naming scheme of the new fields; Whether to ignore the case when comparing the entries of the above mentioned file to the actual terms extracted from documents.I wrote a class which realizes the distribution of the terms to their categories by creating the corresponding TokenStreams. Each TokenStream is supposed to let only those tokens pass which belong to its category. These tokens are determined by the association file described above. Thus we need the opposite of a StopWordFilter. I've added the 'SelectFilter' for this purpose. This filter mainly takes a set representing a closed vocabulary and lets tokens pass which are included in the set and denies other tokens (here comes the ignore option into play).Another thing I did was to implement a RegExp replacement filter - it simply matches token string against a regular expression. On match the token string is replaced by a given replacement string (may include reg exp replacement characters like &).Please note that the delivered patch file is not complete in terms of documentation, file headers etc. I would add these things if the changes are accepted.
issueID:UIMA-2319
type:New Feature
changed files:
texts:Support uima.cas.Float in TextMarker language
Add new variable type for floats.Add new number type to language elements, e.g. see UIMA-2313.Refactor references on strings ("uima.cas.Float").
issueID:UIMA-232
type:Task
changed files:
texts:Documentation screenshots must be redone
They still show the old "com.ibm" package names, and also some other occurrences of "IBM".  Also they have the old UIMA banner graphics.  So we probably cannot work on this until UIMA-22 is resolved.
issueID:UIMA-2320
type:New Feature
changed files:
texts:Support all UIMA primitive types in TextMarker language
In UIMA-2319 support for float is added. TextMarker should also support the remaining types like byte, short and long. Even if the functionality is practically not needed, no types with those feature types can be defined in TextMarker scripts.
issueID:UIMA-2321
type:Bug
changed files:
texts:Type systems with "Import by name" not correctly built
If the option to use import by name when building TextMarker type systems is activated, then a build exception is thrown. The data path is probably not correctly set on the descriptor folder.
issueID:UIMA-2322
type:Bug
changed files:
texts:Build preferences of TextMarker IDE not persistent
The preferences how UIMA components are built, especially the type systems, are corrupt and the setting cannot be stored.
issueID:UIMA-2323
type:Bug
changed files:
texts:Update data path property when additional projects are referenced
Situation: Type systems are generated with import by name using the data path property of the TextMarker project. Then, the project references additional TextMarker projects for e.g., importing some scripts or engines. In this case the data path of the project needs to be updated.
issueID:UIMA-2324
type:Bug
changed files:
texts:Fix NPE in UIMA AS aggregate which occurs while recovering from Cas Multiplier failure
The following exception happens when UIMA AS aggregate tries to recover from a colocated CM failure:java.lang.NullPointerExceptionat org.apache.uima.aae.controller.AggregateAnalysisEngineController_impl.finalStep(AggregateAnalysisEngineController_impl.java:1819)at org.apache.uima.aae.controller.AggregateAnalysisEngineController_impl.abortProcessingCas(AggregateAnalysisEngineController_impl.java:1041)at org.apache.uima.aae.controller.AggregateAnalysisEngineController_impl.process(AggregateAnalysisEngineController_impl.java:1099)at org.apache.uima.aae.handler.HandlerBase.invokeProcess(HandlerBase.java:118)at org.apache.uima.aae.handler.input.ProcessResponseHandler.cancelTimerAndProcess(ProcessResponseHandler.java:108)at org.apache.uima.aae.handler.input.ProcessResponseHandler.handleProcessResponseWithCASReference(ProcessResponseHandler.java:387)at org.apache.uima.aae.handler.input.ProcessResponseHandler.handle(ProcessResponseHandler.java:666)at org.apache.uima.aae.handler.HandlerBase.delegate(HandlerBase.java:149)at org.apache.uima.aae.handler.input.ProcessRequestHandler_impl.handle(ProcessRequestHandler_impl.java:982)at org.apache.uima.aae.spi.transport.vm.UimaVmMessageListener.onMessage(UimaVmMessageListener.java:107)at org.apache.uima.aae.spi.transport.vm.UimaVmMessageDispatcher$1.run(UimaVmMessageDispatcher.java:70)at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)at org.apache.uima.aae.UimaAsThreadFactory$1.run(UimaAsThreadFactory.java:110)at java.lang.Thread.run(Thread.java:619)
issueID:UIMA-2325
type:Bug
changed files:
texts:TextMarker primitives (e.g. INT) ignore assignment in declaration
TextMarker primitives (e.g. INT) ignores assignment in declaration.Example:INT int = 5;... does not assign 5 to the variable int.
issueID:UIMA-2328
type:Bug
changed files:
texts:UIMACPP cleanup the Linux source distribution
Fixed various issues reported by Marshall Schor:1) removed COPYING AUTHORS ChangeLog README NEWS from source distribution2) removed generated html and other files, builddocs.cmd in docs directory3) added autogen.sh script to source distribution
issueID:UIMA-2329
type:New Feature
changed files:
texts:Improve support of html and xml artifacts in TextMarker
The simple support of html handling is removed in UIMA-2233, especially the information about the surrounding tags and the condition checking this. Add again some functionality to facilitate the processing of html documents with the TextMarker rules. This can for example achieved by an additional seeder that adds annotations for the html elements.
issueID:UIMA-233
type:Bug
changed files:uimaj-core/src/main/java/org/apache/uima/cas/impl/CASImpl.java
texts:CAS View caching works incorrectly
The CASImpl retains references to CAS views in its sofa2tcasmap field, across calls to CAS.reset.  However, during the CAS.reset, the view's mySofaRef is seto to 0.  So the next time someone calls getView(Sofa), the Sofa is looked up in the sofa2tcasmap, and since there is a view there, it is retrieved from the map and returned to the caller.  But the View now has a null Sofa and will not work properly.
issueID:UIMA-2330
type:Improvement
changed files:
texts:Improve rule matching for filtered types
Improve rule matching for filtered types: Validate the behavior of the TextMarker rules for different configurations of filtering settings and add unit tests. When finding new anchors for rule elements the next annotations should also consider offsets after annotations of filtered types. This should result in a even better filtered inference than the old paradigm based on TextMarkerBasics and their stored anchors.
issueID:UIMA-2331
type:Bug
changed files:
texts:Enable direct matching on strings again in TextMarker
Enable direct matching on strings again in TextMarker. Using strings as base condition for rule elements does not work currently. Reimplement this functionality, see TextMarkerLiteralMatcher.
issueID:UIMA-2332
type:Improvement
changed files:
texts:Profile and optimize Ruta inference performance
Increase the speed of the ruta rule inference. A starting point is the slowdown of UIMA-2330, see RutaTypeMatcher.getMatchingAnnotations()
issueID:UIMA-2333
type:Improvement
changed files:
texts:UIMACPP Build one source distribution which includes Windows and Linux files
Currently two source distributions are built - one for Widows and one for Linux - each containing only those files required for the specific environment. The standard practice appears to be to build a source distribution that contains all the files needed to build in any environment.
issueID:UIMA-2334
type:Improvement
changed files:
texts:Make auto-completion in TextMarker IDE case insensitive
Make auto-completion in TextMarker IDE case insensitive.
issueID:UIMA-2335
type:Bug
changed files:
texts:Variable actions break syntax check of TextMarker IDE
Variable actions (variables that contain composed actions) break the syntax check of the TextMarker IDE. As far as I know, nobody did actually ever use this functionality. Either fix the check of existence of those variables in action constructs or remove the concept completely.
issueID:UIMA-2336
type:Bug
changed files:
texts:TextMarker IDE does not build descriptors
The migration to the DLTK 3.0 framework caused that the overridden methods of the builder is not called anymore. Let the builder become a BuildParticipant and update the extensions.
issueID:UIMA-2337
type:Bug
changed files:
texts:Filtering in TextMarker explanation views is not working
Filtering in explanation views is not working correctly, e.g., in the rule list view.
issueID:UIMA-2338
type:Bug
changed files:
texts:TextMarker formatter handles comments after rules incorrectly
Formatter handles comments after rules incorrectly. Comments in general should not change their position towards rules when the script is formatted, e.g., the coverage of learnt rules of the TextRuler framework.
issueID:UIMA-2339
type:Bug
changed files:
texts:TextMarker matching on parent types with additional removed grandchild
Matching on parent types with additional removed grandchilds works only for annotations that weren't covered by the grandchilds.Example:DECLARE WeightedItem TreeNode, TreeLeaf;DECLARE TreeNode CurrentRoot;... some MARK(TreeNode) and MARK(TreeLeaf)... some MARK(CurrentNode) additionally on TreeNodes... some UNMARK(CurrentNode)then...WeightedItem matches only on FSs that weren't covered by the CurrentNode.Solution:Match explicitly on the leaf types TreeNode and TreeLeaf instead of WeightedItem.
issueID:UIMA-234
type:Bug
changed files:uimaj-core/src/main/java/org/apache/uima/resource/CasManager.java
uimaj-core/src/main/java/org/apache/uima/resource/impl/CasManager_impl.java
uimaj-core/src/main/java/org/apache/uima/util/CasPool.java
uimaj-core/src/main/java/org/apache/uima/resource/CasManager.java
uimaj-core/src/main/java/org/apache/uima/resource/impl/CasManager_impl.java
uimaj-core/src/main/java/org/apache/uima/util/CasPool.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/cpm/engine/CPECasPool.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/cpm/engine/CPMEngine.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/cpm/engine/CPECasPool.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/cpm/engine/CPMEngine.java
texts:CAS Multiplier "internal" CASes should have identical type system to CPE CAS Pool
Currently the type systems are not identical and so Type and Feature handles can't be shared in a CAS Multiplier, which is very inconvenient.See http://www.mail-archive.com/uima-dev@incubator.apache.org/msg01670.htmlI'll see if this is easy enough to fix in 2.1.
issueID:UIMA-2341
type:Improvement
changed files:
texts:Indentation in TextMarker script files
Old feature request by Georg Fette: I would like to have a proper indentation for rules that span over multiple lines. At the moment I put tabs in front of the lines myself. If I copy those lines and paste them, my indentations are gone.
issueID:UIMA-2342
type:New Feature
changed files:
texts:Extend loading of external references in TextMarker
Locate external files of the analysis engine like scripts, descriptors and resources also within jars or by arbitrary URLs
issueID:UIMA-2343
type:New Feature
changed files:
texts:Add "created by" explanation for annotations in TextMarker
Explain to the user by which rule the selected annotation was created.
issueID:UIMA-2344
type:Improvement
changed files:
texts:Improve type system handling of boundary matchers in TextRuler framework
Improve type system handling of boundary matchers, like LP2. Currently, the user needs to add the additional types to the preprocess script. The (boundary) types should be created by the TextRuler framework and automatically added to the learnt script. This means, that the types system the leanrer is based on needs to be extended in the background by the framework.
issueID:UIMA-2345
type:Bug
changed files:
texts:Show TextMarker popups only in useful situations
Show TextMarker popups only in useful situations, e.g., the user does not need to call a TextMarker script when synchronizing his projects.
issueID:UIMA-2346
type:Improvement
changed files:
texts:For Docbook docs, add trademark symbol to first use of Apache UIMA
Part of trademark work.
issueID:UIMA-2347
type:Bug
changed files:
texts:StackOverflowError by greedy TextMarker rule elements
The new implementation of the TextMarker rule inference is now based on recursion. Greedy rule elements continue their match on additional annotations therefore with a call of continueMatch(). This causes a quite big call stack for rules like ANY+ on large documents. Investigate the error. Maybe introduce a new method continueOwnMatch that is based on a loop.
issueID:UIMA-2348
type:Improvement
changed files:
texts:Augment uimaCpp binary lic/notice with appropriate items from other embedded binaries
The UIMA C++ binaries includes a lib having compiled versions of other components each having their own license and sometimes notice files.  Go thru those and augment the UIMA C++ Binary license/notice files to include any other licenses and required notices.
issueID:UIMA-2349
type:Improvement
changed files:
texts:incremental corrections to UIMA Schema definition
Correct various inaccuracies in the xsd schema for uima resource descriptors:DelegateAnalysisEngineType can only take a choice of some of the elements in  rs:resourceSpecifier; list just the ones it can take.Same for FlowControllerDeclarationSame for ExternalResourcesTypeAdd comment describing CollectionProcessingComponentType and its relationship to AnalysisEngineDescriptionType
issueID:UIMA-235
type:Improvement
changed files:uimaj-examples/src/main/java/org/apache/uima/tutorial/ex1/RoomNumberAnnotator.java
uimaj-examples/src/main/java/org/apache/uima/tutorial/ex2/RoomNumberAnnotator.java
uimaj-examples/src/main/java/org/apache/uima/tutorial/ex5/RoomNumberAnnotator.java
texts:improve example tutorial code to use Matcher / find() in default mode
get rid of find(pos), use default instead
issueID:UIMA-2350
type:Bug
changed files:uimaj-core/src/main/java/org/apache/uima/resource/metadata/impl/OperationalProperties_impl.java
texts:uima analysis eng. xml parsing error - operational properties
Code inspection done as part of investigations on adding xml parsing comment support reveals that setting operational properties defaulting is not quite working correctly.  This goes undetected if whenever one operational property is set, all of them are set (and defaulting of the others is not depended on).
issueID:UIMA-2351
type:Bug
changed files:
texts:Remove busy loop from uima-as JmsInputChannel
Found a busy loop in the JmsInputChannel which continually checks the state of the jms listener in a dedicated thread. If I remember this was put in to deal with shutdown of AMQ4.1.1 threads which were set to run as daemon threads. Since 4.1.1, AMQ no longer uses daemon threads so no reason to use this code.
issueID:UIMA-2352
type:Bug
changed files:
texts:Build script for uimacpp sdk on Windows does not correctly copy scriptators docs and xerces libs
Missing scriptators in docs directory.  Should only copy libs needed for dynamic linking.
issueID:UIMA-2353
type:Task
changed files:
texts:Convert TextMarker projects to maven
The TextMarker projects in the sandbox have to become maven projects. The engine projects should be a normal maven project whereas the other projects also need to be plugin projects.
issueID:UIMA-2354
type:Bug
changed files:
texts:UIMA AS aggregate fetches too many msgs from its service queue
In this scenario UIMA AS aggregate thread receives a msg from a service queue, desarializes a CAS, fetches the next step from the FC, and deliveres the CAS to a delegate's queue. Once the CAS is delivered to the delegate's queue, the receiving thread is done and proceeds to fetch another msg from a service queue. This is wrong and totaly breaks prefetch=0 idea and effects load balancing if there are multiple instances of UIMA AS aggregate. The receiving thread should not fetch another msg while the previous CAS is still in-play. The code should block the receiving thread after a CAS is delivered to a delegate's queue until the CAS is fully processed.
issueID:UIMA-2355
type:Bug
changed files:
texts:Update UIMA AS documentation to say that continue on error is a supported action for colocated delegates
UIMA AS documentation states that continue on failure action is not allowed when specifying error handling for colocated delegate. This restriction was motivated by the fact that when a CAS processing fails in a colocated delegate, that CAS integrity may be compromised and such CAS should not be used for analysis by downstream annotators. Although this may be true, what to do with the CAS should be left up to the user's FC. The UIMA AS code actually supports continue on error for colocated delegates and the documentation should change to say that it is a valid choice.Also, DDE GUI should change to enable continue on error as a valid choice.
issueID:UIMA-2356
type:Bug
changed files:
texts:FIx warnings generated when creating the UIMA C++ doxygen docs
Fix the comments in header files.
issueID:UIMA-2357
type:Bug
changed files:
texts:simple server documentation out of date - jar names in lib
Documentation states incorrect Jar names in lib (used to be correct but changed after version 2.2.2).  Correct docs.
issueID:UIMA-2358
type:Bug
changed files:
texts:UIMA AS should add a global UncaughtExceptionHandler
Currently UIMA AS process doesnt handle uncaught exceptions. Specifically, it should catch OOM Error and exit the process. When the OOM happens now, the jvm dumps an error (stack trace) and the UIMA AS process just hangs. Since JDK 1.5, java supports per thread as well a system wide (for all threads) custom UncaughtExceptionHandler. The application implements this interface and injects the handler to a specific thread via:Thread.currentThread().setUncaughtExceptionHandler(new MyExceptionHandler());Alternatively, one can set a global error handler via:Thread.setDefaultUncaughtExceptionHandler(new MyExceptionHandler());The latter is the approach that I will implement. When OOM Error happens (and perhaps for all errors), the UIMA AS process should exit. For all other exceptions (not caught in a executing thread), the custom exception handler will simply log the exception at WARNING level.
issueID:UIMA-2359
type:Bug
changed files:
texts:Different results of Text Maker in windows and unix
The class AbstractApplyScriptHandlerJob when called from the workbenck calls, for reding text to be analyzed the method: org.apache.uima.pear.util.FileUtil.loadTextFile(new File(each), "UTF-8");Such a method return nelines in window as 2 new lines. Therefore basic TextMarker annotations appears like:line BREAK BREAKline BREAK BREAKTherefore grammars written on windows must take into account the double break which make them not applicable when running on unix or when using other read methods, such as:      Scanner sc = new Scanner(inFile, "UTF-8");      String out = "";      while (sc.hasNextLine()) {       out += sc.nextLine() + "\n";      }Relates to:https://issues.apache.org/jira/browse/UIMA-2133t
issueID:UIMA-236
type:Improvement
changed files:
texts:Part of getting better results from Docbook - upgrade to current version (4.5 and 1.72.0) and FOP 0.93
This is the current "stable" version of Docbook.  Change to suppport multiple versions of docbook and FOP.
issueID:UIMA-2360
type:Bug
changed files:
texts:uima-as build broken due to missing uimaj 2.4.0 artifacts in maven central
The UIMA SDK release generates an assembly binary distribution zip file.  The release should have pushed this to maven central - allowing the uima-as build to download this artifact and unzip it, to enable binary uima-as builds to include base UIMA.However, the last UIMA release failed to upload these to Maven Central.  Ask on infrastructure for help in uploading these missing artifacts.
issueID:UIMA-2361
type:Bug
changed files:
texts:UIMA C++ fails to build with gcc 4.5.2
Reported by Jean-Cedric ChappelierI just tested the very last version (2.4.0.03 from Jan 25th,downloaded from here:http://people.apache.org/~bhavani/uimacpp-release-candidates/2.4.0/03/uimacpp-2.4.0-src.tgz), and have a few remarks, hopefully helpful.I tested it on a Ubuntu 11.04 with all up-to-date packages butwithout ActiveMQ.....2) secondly, there is a bug in handling properly Xerces XMLFileLoc type in UIMA exceptions, more precisely in ErrorMessage::addParam. XMLFileLoc is indeed an uint64_t (grep XMLFileLoc /usr/include/xercesc/util/Xerces_autoconf_config.hpp) for which ErrorMessage has no good addParam method (ambiguous casting). My g++ 4.5.2 complains about this and refuses to go ahead. I hereby attach a proposed patch (exceptions.patch) for both exceptions.cpp and exceptions.hpp BTW, may I recommend you to add a template ErrorMessage::addParam? This would avoid this kind of problems.
issueID:UIMA-2362
type:Bug
changed files:
texts:Add APR 1.4.x to list of acceptable version to build UIMA C++
Reported by Jean-Cedric Chappelier I just tested the very last version (2.4.0.03 from Jan 25th,downloaded from here:http://people.apache.org/~bhavani/uimacpp-release-candidates/2.4.0/03/uimacpp-2.4.0-src.tgz), and have a few remarks, hopefully helpful.I tested it on a Ubuntu 11.04 with all up-to-date packages butwithout ActiveMQ.1) my first remark is why do you restrict APR to 1.3? I edited APR_VER_REGEXES in configure.ac to include also 1\.4\.&#91;0-9&#93; (mine is 1.4.2) and everything seems to work gracefully.
issueID:UIMA-2363
type:Bug
changed files:
texts:Add APR-Util libraries to the UIMA C++ binary package
ActiveMQ CPP version 3.4.1 used in the deployCppService has a runtime dependency on APR-Util.The buildsdk script needs to be modified to add the APR-Util binaries to the package.APR-Util 1.3.8 will be used in the binary distribution. This version of APR-Util is not one of the products listed in the ASF export classification page http://www.apache.org/licenses/exports/.
issueID:UIMA-2364
type:Bug
changed files:
texts:UIMA-AS client callback has changed so old code such as runRemoteAsyncAE does not get notified
entityProcessComplete has a new 3rd arg holding performance details.  The method in the abstract class needs to call the 2-arg method for backward-compatibility with applications that implement only the 2-arg one.
issueID:UIMA-2365
type:Bug
changed files:
texts:UIMACPP build fails on Mac OS X  stricmp unavailable replace with strcasecmp in deployCppService.hpp
Sylvain Surcin reports:The last problem I met was the reference to stricmp in utils/deployCppService.hpp.This function is not available under Mac OS X.I edited the file to rather user strcasecmp.Here is the patch.Regards and thanks for your work/help,Sylvain
issueID:UIMA-2366
type:Bug
changed files:
texts:Eclipse 3.7, Uima 2.4.0 - Eclipse update site not working
It appears that the http://www.apache.org/dist/uima/eclipse-update-site is not currently available. Not found errors when attempting to access.  Is this the correct way to install the eclipse plugin?
issueID:UIMA-2368
type:Bug
changed files:
texts:UIMA-AS build under Eclipse generates maven errors ... works OK from cmd-line
This msg is from the error log ... according to Marshall this plugin operates on jars when invoked from the cmdline but when invoked from Eclipse it is given the classes folder which it cannot handle.org.apache.maven.lifecycle.LifecycleExecutionException: Failed to execute goal org.apache.maven.plugins:maven-dependency-plugin:2.1:unpack-dependencies (unpackDependentJars) on project uimaj-as-osgi-runtime: Error unpacking file: C:\UIMA\WorkspaceApacheUima\uima-as\uimaj-as-activemq\target\classes to: C:\UIMA\WorkspaceApacheUima\uima-as\uimaj-as-osgi-runtime\target\classesorg.codehaus.plexus.archiver.ArchiverException: The source must not be a directory.
issueID:UIMA-2369
type:Bug
changed files:
texts:Need reliable way to download uima binary artifact from standard Apache spot
The uima-as build is somewhat broken.  A fix was made to download the base uimaj sdk binary build (upon which the uima-as build depends) by adding a new goal to the uima-build-helper-maven-plugin.  That goal has a small bug - it doesn't create the intermediate directories needed when creating the output file for the download.However, it has a bigger problem - the download runs a small loop, reading from the URL open stream, and writing to the local file.  The loop ends when the read method returns -1 for the number of bytes read.  Java is supposed to only return this when the end-of-file is reached, but (randomly) it is getting returned early.  This results in a corrupt download, with only the first part of the file being downloaded.Investigate and fix.
issueID:UIMA-237
type:Improvement
changed files:
texts:Change source build to include only the docbook system zip files
The docbook files for the docbook DTD and XSL are provided as zip files.  The ant routine for building the docbooks from their source unzips these the first time they're needed.  So - exclude from the source packaging all the directories in     uima-docbooks/docbook except "zip"
issueID:UIMA-2370
type:Improvement
changed files:
texts:Change back to a single UIMA-AS client EntityProcessComplete callback for simplicity and compatibility
The additional EntityProcessComplete callback has an extra arg for performance metrics, but this could instead be accessed via the UimaASProcessStatus object.
issueID:UIMA-2371
type:Bug
changed files:
texts:UIMA-AS javadocs do not link to the core UIMA javadocs
Need this link so can view javadocs for uima core classes from the uima-as javadocs.
issueID:UIMA-2372
type:Bug
changed files:
texts:On lost connection to a broker UIMA AS Spring JMS listener excessively logs error msgs
When UIMA AS service loses a connection to a broker, its JMS listener rapidly fills a log with messages:0 Feb 2012 12:33:33,598  WARN UIMA AS Service.UimaDefaultMessageListenerContainer - Could not refresh JMS Connection for destination 'queue://<queue name>' - retrying in 5 ms. Cause: Could not connect to broker URL:tcp://<broker url>:61616?wireFormat.maxInactivityDuration=0. Reason: java.net.ConnectException: Connection refused I've traced the origin of this message to Spring Framework's DefaultMessageListenerContainer.java, refreshConnectionUntilSuccessful() method. Spring is attempting to auto recover the connection by continually testing broker connection until success. Each failure results in a log msg at WARNING level.  To fix this, UimaDefaultMessageListenerContainer should override Spring's refreshConnectionUntilSuccessful() with its own implementation which logs the error once and silently retries until success.
issueID:UIMA-2373
type:Bug
changed files:uimaj-core/src/main/java/org/apache/uima/flow/impl/FixedFlowController.java
uimaj-core/src/main/java/org/apache/uima/flow/impl/FixedFlowController.java
uimaj-core/src/main/java/org/apache/uima/flow/FlowController_ImplBase.java
uimaj-core/src/main/java/org/apache/uima/flow/impl/FixedFlowController.java
texts:Possible bug in FixedFlowController
I am developing a series of Lucene tokenizers which can use UIMA for creating tokens via extracted annotations.While doing a stress test with lots of different strings I experienced the following:[junit] Testsuite: org.apache.lucene.analysis.uima.UIMATypeAwareAnalyzerTest    [junit] Tests run: 2, Failures: 0, Errors: 1, Time elapsed: 92,061 sec    [junit]     [junit] ------------- Standard Error -----------------    [junit] The following exceptions were thrown by threads:    [junit] *** Thread: Thread-9 ***    [junit] java.lang.RuntimeException: java.io.IOException: org.apache.uima.analysis_engine.AnalysisEngineProcessException    [junit]  at org.apache.lucene.analysis.BaseTokenStreamTestCase$AnalysisThread.run(BaseTokenStreamTestCase.java:289)    [junit] Caused by: java.io.IOException: org.apache.uima.analysis_engine.AnalysisEngineProcessException    [junit]  at org.apache.lucene.analysis.uima.UIMATypeAwareAnnotationsTokenizer.incrementToken(UIMATypeAwareAnnotationsTokenizer.java:87)    [junit]  at org.apache.lucene.analysis.BaseTokenStreamTestCase.assertTokenStreamContents(BaseTokenStreamTestCase.java:121)    [junit]  at org.apache.lucene.analysis.BaseTokenStreamTestCase.checkRandomData(BaseTokenStreamTestCase.java:371)    [junit]  at org.apache.lucene.analysis.BaseTokenStreamTestCase.checkRandomData(BaseTokenStreamTestCase.java:295)    [junit]  at org.apache.lucene.analysis.BaseTokenStreamTestCase$AnalysisThread.run(BaseTokenStreamTestCase.java:287)    [junit] Caused by: org.apache.uima.analysis_engine.AnalysisEngineProcessException    [junit]  at org.apache.uima.analysis_engine.asb.impl.ASB_impl$AggregateCasIterator.processUntilNextOutputCas(ASB_impl.java:701)    [junit]  at org.apache.uima.analysis_engine.asb.impl.ASB_impl$AggregateCasIterator.<init>(ASB_impl.java:409)    [junit]  at org.apache.uima.analysis_engine.asb.impl.ASB_impl.process(ASB_impl.java:342)    [junit]  at org.apache.uima.analysis_engine.impl.AggregateAnalysisEngine_impl.processAndOutputNewCASes(AggregateAnalysisEngine_impl.java:267)    [junit]  at org.apache.uima.analysis_engine.impl.AnalysisEngineImplBase.process(AnalysisEngineImplBase.java:267)    [junit]  at org.apache.lucene.analysis.uima.BaseUIMATokenizer.analyzeInput(BaseUIMATokenizer.java:57)    [junit]  at org.apache.lucene.analysis.uima.UIMATypeAwareAnnotationsTokenizer.analyzeText(UIMATypeAwareAnnotationsTokenizer.java:73)    [junit]  at org.apache.lucene.analysis.uima.UIMATypeAwareAnnotationsTokenizer.incrementToken(UIMATypeAwareAnnotationsTokenizer.java:85)    [junit]  ... 4 more    [junit] Caused by: java.lang.IndexOutOfBoundsException: Index: 1, Size: 2    [junit]  at java.util.ArrayList.RangeCheck(ArrayList.java:547)    [junit]  at java.util.ArrayList.get(ArrayList.java:322)    [junit]  at org.apache.uima.flow.impl.FixedFlowController$FixedFlowObject.next(FixedFlowController.java:216)    [junit]  at org.apache.uima.analysis_engine.asb.impl.FlowContainer.next(FlowContainer.java:98)    [junit]  at org.apache.uima.analysis_engine.asb.impl.ASB_impl$AggregateCasIterator.processUntilNextOutputCas(ASB_impl.java:667)    [junit]  ... 11 moreI'm debugging it and see if I can come up with the exact bug (and fix)
issueID:UIMA-2374
type:Bug
changed files:uimaj-core/src/main/java/org/apache/uima/util/Logger.java
uimaj-core/src/main/java/org/apache/uima/util/impl/JSR47Logger_impl.java
uimaj-core/src/main/java/org/apache/uima/util/impl/Log4jLogger_impl.java
uimaj-core/src/main/java/org/apache/uima/util/impl/Logger_impl.java
texts:Log4jLogger_impl always logs wrapper class name instead of caller class name
When enabling classname/filename logging in Log4J, Log4jLogger_impl currently will allways log the  Log4jLogger_impl class/file instead of the name of the caller. This can be fixed by using the Log4J methods intended for use by logger wrappers.
issueID:UIMA-2375
type:Improvement
changed files:uimaj-core/src/main/java/org/apache/uima/util/Logger.java
uimaj-core/src/main/java/org/apache/uima/util/impl/JSR47Logger_impl.java
uimaj-core/src/main/java/org/apache/uima/util/impl/Log4jLogger_impl.java
uimaj-core/src/main/java/org/apache/uima/util/impl/Logger_impl.java
texts:Log methods for log wrappers
The logging framework of UIMA provides wrappers for several logging backends, e.g. for Log4J and JSR47. These frameworks provide special logging methods for logger wrappers that make sure the final logging message contains the correct logging location information (e.g. filename, class, line, etc.). The UIMA Logger interface does not provide such a generic logging method and is, thus, not suitable to be wrapped itself.Wrapping a Logger instance can be interesting for building complex logging message with helper methods, or, to provide an alternative logging API. Recently, uimaFIT 1.3.0 has introduced a more convenient logging API wrapping the UIMA Logger. Unfortunately, currently the class name written to the log is always the name of the logger wrapper, not of the original caller.
issueID:UIMA-2376
type:Bug
changed files:uimaj-core/src/main/java/org/apache/uima/util/CasToInlineXml.java
uimaj-core/src/main/java/org/apache/uima/util/TCasToInlineXml.java
texts:InlineXMLCasConsumer fails depending on locale
It appears that InlineXMLCasConsumer depends on the system locale for some internal transformations. The output appears to be written in UTF8 (outStream.write(xmlAnnotations.getBytes("UTF-8"))) but when used on a machine with a locale of ASCII all accented characters get broken.According to Thilo Goetz, the problem is likely caused by locale-dependent use of ByteArray in CasToInlineXml.java, e.g.:// return XML stringreturn new String(byteArrayOutputStream.toByteArray());
issueID:UIMA-2377
type:Bug
changed files:
texts:Modify UIMA AS service to call System.exit(1) when handling java Error
On OOM, the UIMA AS service is trying to gracefully stop the service via quiesceAndStop. While shutting down, additional OOMs are thrown possibly due to extra logging that takes place during shutdown. These errors leave the jvm in a hanging state. When handling java Error, UIMA AS should try to log, and dump a message to stdout and just exit the jvm.
issueID:UIMA-2378
type:New Feature
changed files:uimaj-core/src/main/java/org/apache/uima/impl/ResourceSpecifierFactory_impl.java
uimaj-core/src/main/java/org/apache/uima/resource/ResourceInitializationException.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/ui/ParameterDelegatesSection.java
uimaj-core/src/main/java/org/apache/uima/resource/metadata/impl/ConfigurationParameter_impl.java
uimaj-core/src/main/java/org/apache/uima/resource/impl/ConfigurationManager_impl.java
uimaj-core/src/main/java/org/apache/uima/UimaContext.java
uimaj-core/src/main/java/org/apache/uima/resource/metadata/OperationalProperties.java
uimaj-core/src/main/java/org/apache/uima/resource/ResourceConfigurationException.java
uimaj-core/src/main/java/org/apache/uima/resource/ConfigurationManager.java
uimaj-core/src/main/java/org/apache/uima/resource/metadata/impl/OperationalProperties_impl.java
uimaj-core/src/main/java/org/apache/uima/ResourceSpecifierFactory.java
uimaj-core/src/main/java/org/apache/uima/util/impl/Settings_impl.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/ui/AbstractSectionParm.java
uimaj-core/src/main/java/org/apache/uima/resource/impl/ConfigurationManagerImplBase.java
uimaj-core/src/main/java/org/apache/uima/impl/UimaContext_ImplBase.java
uimaj-core/src/main/java/org/apache/uima/util/InvalidXMLException.java
uimaj-core/src/main/java/org/apache/uima/impl/ChildUimaContext_impl.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/ui/ParameterSection.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/ui/dialogs/AddParameterDialog.java
uimaj-core/src/main/java/org/apache/uima/resource/metadata/ConfigurationParameter.java
uimaj-core/src/main/java/org/apache/uima/UimaContextAdmin.java
uimaj-core/src/main/java/org/apache/uima/resource/metadata/impl/Import_impl.java
uimaj-core/src/main/java/org/apache/uima/util/Settings.java
uima-docbook-references/src/docbook/ref.javadocs.xml
uimaj-core/src/main/java/org/apache/uima/resource/Resource_ImplBase.java
uimaj-core/src/main/java/org/apache/uima/resource/Resource.java
uimaj-core/src/main/java/org/apache/uima/resource/metadata/impl/ResourceMetaData_impl.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/impl/AnalysisEngineDescription_impl.java
texts:Support external override setting of configuration parameters
Partial implementation of feature discussed in https://cwiki.apache.org/confluence/display/UIMA/Configuring+UIMA+Pipelines+Externally+for+a+particular+run
issueID:UIMA-2379
type:Bug
changed files:uimaj-core/src/main/java/org/apache/uima/jcas/cas/FSArray.java
texts:can&#39;t intuit meaning of copyFromArray and copyToArray methods on FSArray
Regarding this method on org.apache.uima.jcas.cas.FSArray:public void copyFromArray(String[] src, int srcOffset, int destOffset, int length)I read in the 2.3.0 documentation, "Description copied from interface: CommonArrayFS. Copy the contents of an external string array into this array. The strings are parsed and converted to floats."This seems incorrect.It also does not seem informative enough. If I have a feature that is an FSArray of feature structures, what does it mean to copy from an array of strings?Related is what it means to copy such an FSArray of feature structures to an array of strings. Is there some contract implied here?
issueID:UIMA-238
type:Improvement
changed files:
texts:make docbook build script skip build if output exists and target date is later than dependent source dates (normal "make" behavior)
To speed up builds - no need to rerun docbook builds if the output won't change.
issueID:UIMA-2380
type:Bug
changed files:
texts:Remove AnnotationListener when disposed
CAS Editor views of the TextMarker (browser and selection) do not remove themselves as AnnotationListener when disposed.
issueID:UIMA-2381
type:Test
changed files:
texts:Suppress logging of expected exceptions
The console log is cluttered with stack traces from expected exceptions.  If these are suppressed then any it should be easier to locate the cause of any test failures.
issueID:UIMA-2382
type:Bug
changed files:uimaj-core/src/main/java/org/apache/uima/analysis_engine/impl/PrimitiveAnalysisEngine_impl.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/impl/AggregateAnalysisEngine_impl.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/impl/PrimitiveAnalysisEngine_impl.java
uimaj-core/src/main/java/org/apache/uima/resource/Resource_ImplBase.java
texts:Core Framework does not respond to specified logger levels
When logging start & end of annotator initialize & process methods the framework is using the wrong logger object, the one in the UimaContext instead of the class-specific one.
issueID:UIMA-2383
type:Bug
changed files:uimaj-core/src/main/java/org/apache/uima/jcas/cas/AnnotationBase.java
texts:AnnotationBase documentation incorrect
The description for this class reads:the JCas class model for the CAS type uima.cas.Annotation. It defines two integer valued features indicating the begin and end of the span being annotated. There is also a method to retrieve the spanned text as a string.This is incorrect. It should definitely mention that your type must extend this class if it is to be SOFA specific. This is as opposed to extending TOP where your type will not remember which SOFA it was created in.
issueID:UIMA-2384
type:Bug
changed files:uimaj-core/src/main/java/org/apache/uima/jcas/cas/AnnotationBase.java
texts:AnnotationBase.getSofa() implementation has "uima.tcas.Annotation" in exception
The getSofa method is thus defined:  public SofaFS getSofa() {    if (AnnotationBase_Type.featOkTst && ((AnnotationBase_Type) jcasType).casFeat_sofa == null)      this.jcasType.jcas.throwFeatMissing("sofa", "uima.tcas.Annotation");    return (SofaFS) jcasType.ll_cas.ll_getFSForRef(            jcasType.ll_cas.ll_getRefValue(addr, ((AnnotationBase_Type)jcasType).casFeatCode_sofa));  }It seems the missing feature exception should have "uima.tcas.AnnotationBase". If this is correct then a comment might be warranted.
issueID:UIMA-2385
type:Improvement
changed files:uimaj-core/src/main/java/org/apache/uima/cas/impl/CommonAuxHeap.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/CommonAuxHeap.java
texts:Improve XmiCasDeserializer performance
I profiled an expensive CAS deserialization and found that 46% of the time was in CASImpl.ll_getFSForRef (the method that creates a FeatureStructure Java object for a CAS FS).  All those calls were coming from deserializing arrays (of which this particular CAS has many).It is unnecessary to create FeatureStructure Java objects here.  For non-array FSs, XmiCasDeserializer uses low-level CAS APIs in order to avoid this overhead.  But for arrays, it currently does not use the low-level APIs.
issueID:UIMA-2386
type:Question
changed files:
texts:Can our own inhouse headings management tool for entity extraction?
The company I work at is looking at UIMA as a potential environment to use for automated indexing/entity extraction. We have our own application that does headings management. I see the number of annotators that UIMA has as well as adding analysis engines. Could we either directly or indirectly use our tool with UIMA? Our tool would have subject headings to search on the document. Much appreciation for feedback on this. Burt BuchmanSolutions Architect Ebsco Publishingbbuchman@ebscohost.com
issueID:UIMA-2388
type:Bug
changed files:
texts:UIMA AS service doesnt terminate when its error handling threshold is exceeded
When UIMA AS service error threshold is exceeded and action=terminate, the process does not seem to exit. Spin a dedicated shutdown thread and allow the process to cleanup and terminate. If the process does not stop due to one of AEs being stuck in process(), the error handler will call System.exit() after 30 seconds.
issueID:UIMA-2389
type:Bug
changed files:
texts:UIMA AS client doesnt identify service name nor broker url in a stack trace on service timeout
On service timeout, UIMA AS client throws ResourceProcessException with UimaASProcessCasTimeout as a cause. The UimaASProcessCasTimeout, however, does not identify service queue nor a broker making it hard to figure out the source of the problem. Especially, if the timeout occurs in JmsAdapter embedded in a core UIMA AE. The broker URL is also missing from log messages.
issueID:UIMA-239
type:Improvement
changed files:uimaj-core/src/main/java/org/apache/uima/analysis_engine/impl/AnalysisEngineDescription_impl.java
uimaj-core/src/main/java/org/apache/uima/resource/metadata/impl/MetaDataObject_impl.java
uimaj-core/src/main/java/org/apache/uima/util/impl/SaxDeserializer_impl.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/MultiPageEditor.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/ui/AbstractSection.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/metadata/cpe/CpeResourceManagerConfigurationImpl.java
uimaj-core/src/main/java/org/apache/uima/resource/metadata/impl/MetaDataObject_impl.java
uimaj-core/src/main/java/org/apache/uima/util/XMLParser.java
uimaj-core/src/main/java/org/apache/uima/util/XMLSerializer.java
uimaj-core/src/main/java/org/apache/uima/util/impl/SaxDeserializer_impl.java
uimaj-core/src/main/java/org/apache/uima/util/impl/XMLParser_impl.java
uimaj-core/src/main/java/org/apache/uima/util/impl/SaxDeserializer_impl.java
uimaj-core/src/main/java/org/apache/uima/util/impl/XMLParser_impl.java
uimaj-core/src/main/java/org/apache/uima/resource/metadata/impl/MetaDataObject_impl.java
texts:Tools like the CDE which use XML parsing should preserve XML comments; parsers should provide access to XML comments.
An example of a problem which happens if this is not done: the descriptors that come with the UIMA toolkit have a comment that specifies the license information for that file. If you edit a descriptor containing such a comment with the CDE, it strips out all comments.An alternative for license info: add a new, optional element to the descriptor for specifying the license (but this might  be ambigious as to what is being licensed - the descriptor file or what it refers to or ??? )
issueID:UIMA-2390
type:Improvement
changed files:
texts:Variables in Variables for RegexAnnotator
Hello,We are successfully using the RegexAnnotator, but would like to use variables in variables (see example below), is it currently possible?If not, does anyone has a workaround or code?If not, we will provide a patch.Thanks, Renaud <conceptSet>  <variables>    <variable name="volume_units" value="(?:k|d|m|M|µ)?(?:l|L|m3)" />    <variable name="mass_units" value="(?:k|d|m|M|µ)?(?:g)" />    <variable name="units" value="\v{mass_units}/\v{volume_units}" />
issueID:UIMA-2391
type:Bug
changed files:
texts:Uima type merging for string subtypes not working
The basic situation is that we are providing a UIMA-based core that other teams can extend to suit their needs.  As such we are making use of UIMA type merging to allow them to add new features to existing types.  This approach works fine since JCasGen merges the two definitions of the given type and produces a superset of the features.  This is well documented here:http://uima.apache.org/d/uimaj-2.3.1/references.html#ugr.ref.jcas.merging_types.jcasgen_support However, in addition to this, we have the case where we have a string subtype with given allowedValues - lets say values a, b and c.  The other team wants to extend this type and have additional allowedValues, say value d.  Ideally, what I would like to do is the following (which follows the pattern used for adding features):Type Definition #1 (provided by core):    <typeDescription>      <name>com.ibm.Type</name>      <description></description>      <supertypeName>uima.cas.String</supertypeName>      <allowedValues>        <value>          <string>a</string>          <description></description>        </value>        <value>          <string>b</string>          <description></description>        </value>        <value>          <string>c</string>          <description></description>        </value>      </allowedValues>    </typeDescription>     Type Definition #2 (extension to core):    <typeDescription>      <name>com.ibm.Type</name>      <description></description>      <supertypeName>uima.cas.String</supertypeName>      <allowedValues>        <value>          <string>d</string>          <description></description>        </value>      </allowedValues>    </typeDescription>In this case I wanted UIMA to recognize the two definitions at runtime and allow the superset of allowedValues.  However, this does not do the trick - at runtime UIMA throws an exception saying that value d is not an allowed value for com.ibm.Type.
issueID:UIMA-2392
type:Bug
changed files:
texts:UIMA-AS CAS multiplier hangs fetching empty CAS after client timeouts
I'm attaching a test case that reproduces the hang. See the README inside the zip about how to execute it.The annotator (ForwardJCas) consists of a simple CAS multiplier with delays in it scaled out in its own thread within 2 levels of aggregates. It receives a CAS, sleeps for 3 seconds, gets a new empty CAS, copies information into it, sleeps again, and then returns the CAS. The unit test (UimaAsTest) initializes 40 UIMA-AS clients with a timeout of 8 seconds, send 1 CAS from each to the service, and then waits. After 1-2 runs, the CAS multiplier winds up hanging on the getEmptyCas() call in the scaled out annotator. What appears to be happening is that free CAS messages are not being sent from the client to the service in all cases when the timeouts occur. A similar defect (https://issues.apache.org/jira/browse/UIMA-1786) was fixed in 2.3.1 with slightly different symptoms.
issueID:UIMA-2394
type:Bug
changed files:
texts:UIMA AS service wrapper doesnt log exception during initialization
UIMA As service wrapper silently exits while trying to deploy a service with missing dependencies (jars). The bug is in SpringContainerDeployer.initializeContainer(). The try-catch block is not logging an exception thrown from waitForServiceNotification() which reports an initialization failure.
issueID:UIMA-2395
type:Bug
changed files:
texts:UIMA AS service not logging a msg about missing JMX property
UIMA AS service wrapper doesn't log a msg when it detects missing jmx monitor property. The service simply starts with no hint of misconfiguration. The jmx monitor is optional, but requires two parameters: the rate at which to collect stats and jmx port of the monitored service. The latter is specified via -Dcom.sun.management.jmxremote.port=xxx property. If omitted, UIMA AS service wrapper just proceeds as if the jmx monitor was not requested by a user. Modify code to log a message indicating that the jmx port is missing and exit the process.
issueID:UIMA-2396
type:Bug
changed files:
texts:UIMA AS service not terminating when running with JMX Monitor
When configured to run with JMX Monitor, the UIMA AS service is not exiting the jvm when a user tries to stop it by typing 's' or 'q' on the console.
issueID:UIMA-2397
type:Improvement
changed files:
texts:TextMarker: Improve overall functionality in use cases with very large artifacts
TextMarker is not applicable in use cases with very large artifacts, e.g., documents with 500k - 1M tokens.Adapt or exchange the rule language to allow the user to handle such texts: reduce the memory profile of TextMarkerBasic inference annotations, make it configurable respectively. add the concept of simple rules that match only on a single regular expression for adding annotations without inference annotations (related to UIMA-2331). allow the user to skip seeding at the startup of the engine and to apply the seeders on certain annotations within rule inference. introduce language concepts that enable the user to split documents into multiple CASs.
issueID:UIMA-2398
type:Improvement
changed files:
texts:Add retry logic for JMS services to core UIMA
UIMA-AS aggregates support several options to handle exceptions on process calls to a remote service, including automatic retries. Under some networking circumstances the likelihood of communication errors on remote service calls increases and can be problematic. Core UIMA aggregates call UIMA-AS services via the JMS service stub. A useful enhancement to the service stub is to support automatic retries.
issueID:UIMA-2399
type:Bug
changed files:
texts:UIMA AS client not handling GetMeta Ping timeout correctly
The uima-as client marks a service as unavailable when it detects a timeout on a CAS. A subsequent CAS (submitted by an application) is be added to a Pending Dispatch list and the uima-as client sends a GetMeta ping request to a service to check if it is alive. While the client awaits response, any additional CAS submitted by an application is added to the Pending Dispatch List. When the service responds to the GetMeta ping all CASes from a Pending Dispatch list are dispatched to the service. When the service does not respond to the GetMeta ping, the uima-as client fails to reject CASes sitting in the Pending Dispatch list. This may cause a hang if the application draws CASes from a Cas Pool. The client should throw a timeout exception on all CASes in the PendingDispatch list on GetMeta ping timeout
issueID:UIMA-24
type:Improvement
changed files:uimaj-ep-pear-packager/src/main/java/org/apache/uima/pear/insd/edit/InsdConstants.java
uimaj-ep-pear-packager/src/main/java/org/apache/uima/pear/insd/edit/InsdConstants.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/ui/GeneralSection.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/ui/PrimitiveSection.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/ui/GeneralSection.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/ui/PrimitiveSection.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/cpm/container/CPEFactory.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/cpm/container/CPEFactory.java
uimaj-core/src/main/java/org/apache/uima/Constants.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/AnalysisEngineDescription.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/asb/impl/FlowControllerContainer.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/impl/AggregateAnalysisEngine_impl.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/impl/AnalysisEngineDescription_impl.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/impl/PrimitiveAnalysisEngine_impl.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/impl/UimacppAnalysisEngineImpl.java
uimaj-core/src/main/java/org/apache/uima/collection/impl/CasConsumerDescription_impl.java
uimaj-core/src/main/java/org/apache/uima/collection/impl/CasInitializerDescription_impl.java
uimaj-core/src/main/java/org/apache/uima/collection/impl/CollectionReaderDescription_impl.java
uimaj-core/src/main/java/org/apache/uima/flow/impl/FlowControllerDescription_impl.java
uimaj-core/src/main/java/org/apache/uima/impl/AnalysisEngineFactory_impl.java
uimaj-core/src/main/java/org/apache/uima/impl/CasConsumerFactory_impl.java
uimaj-core/src/main/java/org/apache/uima/impl/CollectionReaderFactory_impl.java
uimaj-core/src/main/java/org/apache/uima/resource/ResourceCreationSpecifier.java
uimaj-core/src/main/java/org/apache/uima/resource/ResourceInitializationException.java
uimaj-core/src/main/java/org/apache/uima/uimacpp/UimacppAnalysisComponent.java
uimaj-core/src/main/java/org/apache/uima/Constants.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/AnalysisEngineDescription.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/asb/impl/FlowControllerContainer.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/impl/AggregateAnalysisEngine_impl.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/impl/AnalysisEngineDescription_impl.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/impl/PrimitiveAnalysisEngine_impl.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/impl/UimacppAnalysisEngineImpl.java
uimaj-core/src/main/java/org/apache/uima/collection/impl/CasConsumerDescription_impl.java
uimaj-core/src/main/java/org/apache/uima/collection/impl/CasInitializerDescription_impl.java
uimaj-core/src/main/java/org/apache/uima/collection/impl/CollectionReaderDescription_impl.java
uimaj-core/src/main/java/org/apache/uima/flow/impl/FlowControllerDescription_impl.java
uimaj-core/src/main/java/org/apache/uima/impl/AnalysisEngineFactory_impl.java
uimaj-core/src/main/java/org/apache/uima/impl/CasConsumerFactory_impl.java
uimaj-core/src/main/java/org/apache/uima/impl/CollectionReaderFactory_impl.java
uimaj-core/src/main/java/org/apache/uima/resource/ResourceCreationSpecifier.java
uimaj-core/src/main/java/org/apache/uima/resource/ResourceInitializationException.java
uimaj-core/src/main/java/org/apache/uima/uimacpp/UimacppAnalysisComponent.java
texts:Uninformative error message when trying to create an AE from a descriptor whose frameworkImplementation is incorrect
I ran startVinciService with a deployment descriptor that pointed at an "old" UIMA descriptor whose <frameworkImplementation> was set to com.ibm.uima.java.  The error message was uninformative:org.apache.uima.resource.ResourceInitializationException: The Resource Factory does not know how to create a resource of class org.apache.uima.analysis_engine.AnalysisEngine from the given ResourceSpecifier. (Descriptor: file:/C:/Program Files/IBM/uima/docs/examples/descriptors/analysis_engine/PersonTitleAnnotator.xml)        at org.apache.uima.UIMAFramework.produceResource(UIMAFramework.java:264)        at org.apache.uima.internal.util.ResourcePool.fillPool(ResourcePool.java:261)        at org.apache.uima.internal.util.ResourcePool.<init>(ResourcePool.java:106)        at org.apache.uima.internal.util.AnalysisEnginePool.<init>(AnalysisEnginePool.java:95)        at org.apache.uima.analysis_engine.impl.MultiprocessingAnalysisEngine_impl.initialize(MultiprocessingAnalysisEngine_impl.java:90)        at org.apache.uima.impl.AnalysisEngineFactory_impl.produceResource(AnalysisEngineFactory_impl.java:90)        at org.apache.uima.impl.CompositeResourceFactory_impl.produceResource(CompositeResourceFactory_impl.java:63)        at org.apache.uima.UIMAFramework.produceResource(UIMAFramework.java:260)        at org.apache.uima.UIMAFramework.produceAnalysisEngine(UIMAFramework.java:457)        at org.apache.uima.adapter.vinci.VinciAnalysisEngineService_impl.<init>(VinciAnalysisEngineService_impl.java:121)        at org.apache.uima.adapter.vinci.VinciAnalysisEngineService_impl.main(VinciAnalysisEngineService_impl.java:444)        at org.apache.uima.adapter.vinci.VinciCasObjectProcessorService_impl.main(VinciCasObjectProcessorService_impl.java:54)
issueID:UIMA-240
type:Task
changed files:
texts:Fixup Readme - needs to have other material in it, and should have a file extension I think
Look at old readme's and see what info should be in the new one.To make most OS's behave better, since this is a text file, how about having it end in ".txt"?Some info that should be there:    Supported Platform info:  (levels of Java, etc.)  Setting UIMA_HOME and JAVA_HOME.  Running the "adjustExamplePaths...." script  Verifying installation went ok  A quick pointer to "getting started"  Known issues (if any)
issueID:UIMA-2400
type:Bug
changed files:
texts:Multiple broken links on http://uima.apache.org/external-resources.html
Use http://validator.w3.org/checklink?uri=http%3A%2F%2Fuima.apache.org%2Fexternal-resources.html&hide_type=all&depth=&check=Checkto see the complete result (including permanent redirects).Errors:error Line: 162 http://apache.org/foundataion/thanks.html    Status: 404 Not Founderror Line: 275 http://www-tsujii.is.s.u-tokyo.ac.jp/uima/ redirected to http://www.nactem.ac.uk/tsujii/uima/    Status: 301 -> 404 Not Founderror Line: 245 http://www.julielab.de/content/view/120/176/    Status: 404 File Not Founderror Line: 243 http://www.julielab.de/content/view/117/174/    Status: 404 File Not Founderror Line: 278 http://compbio.uchsc.edu/Hunter_lab/    Status: (N/A) Can't connect to compbio.uchsc.edu:80 (Bad hostname 'compbio.uchsc.edu')Fix:JULIE Lab typesystem:Line: 245 http://www.julielab.de/Resources/Software/UIMA+type+system-p-91.htmlJULIE Lab NLP Toolsuite:Line: 243 http://www.julielab.de/Resources/Software/NLP+Tools.html
issueID:UIMA-2401
type:Bug
changed files:
texts:BaseUIMAAsynchronousEngine_impl does not protect access to SharedConnection in a multi-instance, multi-threaded scenario. Possible javax.jms.IllegalStateException.
We see this problem sporadically when running one instance of BaseUIMAAsynchronousEngine_impl per Thread. This means that each request Thread will instantiate its own instance of BaseUIMAAsynchronousEngine_impl to submit a CAS async. We have noticed in our logs the following exception:org.apache.uima.adapter.jms.client.BaseUIMAAsynchronousEngine_impl WARN  2012-05-04 00:10:46,710 &#91;BaseUIMAAsynchronousEngine_impl.803&#93; - Top Level Controller Initialization Exception.javax.jms.IllegalStateException: The Session is closed at org.apache.activemq.ActiveMQSession.checkClosed(ActiveMQSession.java:722) at org.apache.activemq.ActiveMQSession.createConsumer(ActiveMQSession.java:1101) at org.apache.activemq.ActiveMQSession.createConsumer(ActiveMQSession.java:1060) at org.apache.activemq.ActiveMQSession.createConsumer(ActiveMQSession.java:973) at org.apache.activemq.ActiveMQSession.createConsumer(ActiveMQSession.java:946) at org.apache.uima.adapter.jms.client.BaseUIMAAsynchronousEngine_impl.initializeConsumer(BaseUIMAAsynchronousEngine_impl.java:523) at org.apache.uima.adapter.jms.client.BaseUIMAAsynchronousEngine_impl.initialize(BaseUIMAAsynchronousEngine_impl.java:687)Under further inspection, it seems that the BaseUIMAAsynchronousEngine_impl.initialize does not properly protects the access to the SharedConnection object. Given the following scenario:Thread 1 is in the middle of a call to UimaAsynchronousEngine.initialize.Thread 2 is finishing up and calling UimaAsynchronousEngine.stop.Thread 1 can be schedule out just before trying to create a Consumer (BaseUIMAAsynchronousEngine_impl.java:523). Thread 2 will call stop() and due to client count, cause the Connection to get closed. When Thread 1 comes back, the Connection and Session instances that it has reference to are now invalid.I've attached a test case that forces the exception to prove that there is no proper mutex around access to the SharedConnection between initialize and stop. I believe that the code in question is in BaseUIMAAsynchronousEngine_impl.initialize between lines 682 and 700.createSharedConnection(brokerURI);synchronized (connectionMux) {        // Reuse existing JMS connection if available        if (sharedConnection != null) {          initializeProducer(brokerURI, endpoint, sharedConnection.getConnection());          initializeConsumer(brokerURI, sharedConnection.getConnection());        } else {          initializeProducer(brokerURI, endpoint);          initializeConsumer(brokerURI);        }        // Increment number of client instances. SharedConnection object is a static        // and is used to share a single JMS connection. The connection is closed        // when the last client finishes processing and calls stop().        if (sharedConnection != null) {          sharedConnection.registerClient(this);        }}That entire block should be protected with the sharedConnectionSemaphore.
issueID:UIMA-2402
type:New Feature
changed files:
texts:TextMarker: Enable advanced matching options for CSV tables
The dictionary-matching for the entries of CSV tables with the action MARKTABLE only supports exact matches since it is not configurable by the arguments of the action. The implementation is based on the trie word lists that support options like ignoreCase or ignoreChars. Enable this functionality by extending the language definition of the action.
issueID:UIMA-2403
type:Bug
changed files:
texts:Uima-AS build seems broken. Jenkins keeps failing
Jenkins fails during uima-as build with the following:Waiting for Jenkins to finish collecting datamavenExecutionResult exceptions not emptymessage : Failed to execute goal org.apache.uima:uima-build-helper-maven-plugin:3:copy-from-apache-dist (default) on project uima-as: While creating local file in location /home/jenkins/jenkins-slave/maven-repositories/1/org/apache/uima/uimaj/2.4.0/uimaj-2.4.0-bin.zipcause : While creating local file in location /home/jenkins/jenkins-slave/maven-repositories/1/org/apache/uima/uimaj/2.4.0/uimaj-2.4.0-bin.zipStack trace :org.apache.maven.lifecycle.LifecycleExecutionException: Failed to execute goal org.apache.uima:uima-build-helper-maven-plugin:3:copy-from-apache-dist (default) on project uima-as: While creating local file in location /home/jenkins/jenkins-slave/maven-repositories/1/org/apache/uima/uimaj/2.4.0/uimaj-2.4.0-bin.zip
issueID:UIMA-2404
type:Bug
changed files:
texts:UIMA-AS session inactivity timer thread doesnt cleanup jms correctly
Session inactivity timer pops by default after 30 minutes of inactivity  and it closes JMS connection to a broker. Current code first closes the connection and subsequently tries to close all JMS Sessions associated with the connection. It should be other way around, first close Sessions and than the Connection.
issueID:UIMA-2405
type:Bug
changed files:
texts:Website sidebar: &#39;ASF Sponsors&#39; w/ typo in URL, &#39;Thanks&#39; working duplicate of &#39;ASF Sponsors&#39;
Both bugs in section ASF in left menu:1. Typo in 'ASF Sponsors'-URL   http://apache.org/foundataion/thanks.html-> http://www.apache.org/foundation/thanks.html2. 'Thanks' link is a (working) duplicate of 'ASF Sponsors'http://www.apache.org/foundation/thanks.html
issueID:UIMA-2406
type:Bug
changed files:uimaj-core/src/main/java/org/apache/uima/util/CasToInlineXml.java
texts:CasToInlineXml.generateXML throws ClassCastException when JCas is initialized in CAS
I get the following exception when calling getJCas() on a CAS and passing the CAS to CasToInlineXml.generateXML().  If I pass in a CAS before calling getJCas() it works fine...java.lang.ClassCastException: org.apache.uima.jcas.cas.StringArray incompatible with org.apache.uima.cas.impl.StringArrayFSImpl at org.apache.uima.util.CasToInlineXml.getFeatureAttributes(CasToInlineXml.java:251) at org.apache.uima.util.CasToInlineXml.generateXML(CasToInlineXml.java:159) at org.apache.uima.util.CasToInlineXml.generateXML(CasToInlineXml.java:95)
issueID:UIMA-2407
type:Bug
changed files:
texts:uima-build-helper-maven-plugin at wrong level in maven central
The release 3 maven artifacts for uima-build-helper-maven-plugin, specifically, the CopyFromApacheDist, are at the wrong level.  This makes the uima-as build break.The CopyFromApacheDist.java is at the correct level in SVN, both in the tag for version 3 and the trunk.  No change to the code is needed, it just needs to be re-released, and the maven artifacts checked against the source level.This release will only change the pom (to version 4, etc.).  Because of this, the top level uima parent pom needs an update to specify using version 4 of this plugin. I will attempt to release both of these (the parent-pom and the uima-build-helper-maven-plugin) together.
issueID:UIMA-2408
type:Improvement
changed files:uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/MultiPageEditor.java
uimaj-core/src/main/java/org/apache/uima/internal/util/XMLUtils.java
uimaj-core/src/main/java/org/apache/uima/resource/metadata/impl/MetaDataObject_impl.java
uimaj-core/src/main/java/org/apache/uima/resource/metadata/impl/MetaDataObject_impl.java
uimaj-core/src/main/java/org/apache/uima/resource/metadata/impl/MetaDataObject_impl.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/impl/TypeOrFeature_impl.java
uimaj-core/src/main/java/org/apache/uima/resource/metadata/impl/FsIndexKeyDescription_impl.java
uimaj-core/src/main/java/org/apache/uima/resource/metadata/impl/Import_impl.java
uimaj-core/src/main/java/org/apache/uima/resource/metadata/impl/MetaDataObject_impl.java
uimaj-core/src/main/java/org/apache/uima/util/XMLSerializer.java
uimaj-core/src/main/java/org/apache/uima/resource/metadata/impl/MetaDataObject_impl.java
uimaj-core/src/main/java/org/apache/uima/util/XMLSerializer.java
texts:better xml formatting when serializing
Improve the indenting done when serializing xml.  It should handle a mixed case, where some indenting comes from deserializing the XML in the preserve-comments-and-whitespace mode (which was recently added), and other indenting is "computed" for parts of the object which do not have existing DOM nodes (because, for instance, they were programmatically added, as opposed to being created via a deserialization process).Also, fix the wizards that create the initial "blank" versions to properly indent the templates they produce.
issueID:UIMA-2409
type:Improvement
changed files:uimaj-core/src/main/java/org/apache/uima/util/CasCopier.java
uimaj-core/src/main/java/org/apache/uima/UIMARuntimeException.java
uimaj-core/src/main/java/org/apache/uima/util/CasCopier.java
uimaj-core/src/main/java/org/apache/uima/UIMARuntimeException.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/CASImpl.java
uimaj-core/src/main/java/org/apache/uima/util/CasCopier.java
uimaj-core/src/main/java/org/apache/uima/util/CasCopier.java
uimaj-core/src/main/java/org/apache/uima/util/CasCopier.java
texts:CasCopier.copyCasView should be able to copy into a view with a different name
The CasCopier should be able to copy a CAS view into a new CAS and giving this new CAS view a different name.A common use case is to copy a view of multi view CAS into a new single view CAS.
issueID:UIMA-241
type:Improvement
changed files:
texts:Migration Tool improvement
The migration tool runs without any output to SystemOutput.  It would be good to perhaps output some status info to System Output, and some other info of more importance to SysErr.For instance, you can probably count on the fact that users have NOT read the manual past the first paragraph which says how to run the tool.  So when it comes to a "Document Annotation" and skips it - it would be good to put out a status notice repeating for the user what they are to do about this Other useful normal running output could be something like: scanned xxx files, successfully migrated yyy.  Files needing additional attention are:  (list).
issueID:UIMA-2410
type:Task
changed files:
texts:Create the UIMA-BSP component in sandbox
as discussed create a UIMA-BSP component in sandbox for hosting BSP model based UIMA components
issueID:UIMA-2411
type:Bug
changed files:
texts:TextMarker TRANSFER action not working
The TRANSFER action is not working at all because it uses an old method that should have been removed. Fix the action and delete the method.
issueID:UIMA-2412
type:Bug
changed files:
texts:TextMarker IDE&#39;s formatter deletes arguments of language elements
TextMarker IDE's formatter is deleting some arguments of language elements. This was observed for first column of MARKTABLE action, but is probably occurring also for other actions or conditions. Create unit tests for the formatter functionality and cover all language elements.
issueID:UIMA-2413
type:Bug
changed files:
texts:TextMarker Query view tries to open CEV editor instead of CAS Editor
TextMarker Query view tries to open CEV editor instead of CAS Editor. Redirect to the id of the CAS editor.
issueID:UIMA-2414
type:Bug
changed files:
texts:Fix ConcurrentModificationException in uima-as client
The uima-as client throws org.apache.uima.adapter.jms.client.BaseUIMAAsynchronousEngineCommon_impl WARN  2012-05-25 01:08:41,391 &#91;BaseUIMAAsynchronousEngineCommon_impl$2.2&#93; - java.util.ConcurrentModificationException        at java.util.AbstractList$SimpleListIterator.next(AbstractList.java:64)        at org.apache.uima.adapter.jms.client.BaseUIMAAsynchronousEngineCommon_impl.handleServiceInfo(BaseUIMAAsynchronousEngineCommon_impl.java:1121)while handling ServiceInfo message from a remote service. The service sends this message right after it picks up a request msg from a queue and before calling AE's process method. The msg includes service host ip, process PID, and a service temp queue for receiving FreeCas requests (if the service is a CM). This temp queue is also used by the client to send a a Stop request to the CM to abort generation of child CASes. The above exception happens while iterating over a list of outstanding CASes. The code is trying to locate a matching CAS (by id) and to associate with it  received temp reply queue in case application wants to abort the CAS. Access to the list is not synchronized in this case and causes the exception. Refactor client code to prevent concurrent access to the list.
issueID:UIMA-2415
type:Improvement
changed files:
texts:Resources loaded from a jar
Actually, resources are loaded from the filesystem.I need resources to be loaded from a jar.
issueID:UIMA-2416
type:Task
changed files:
texts:Change uima-as-parent pom to inherit from parent version 4 instead of 4-SNAPSHOT
Change parent version from 4-SNAPSHOT to 4 in uima-as-parent pom.xml to fix build failures.
issueID:UIMA-2417
type:Task
changed files:
texts:Move contents of uima-as project up one level in svn directory
Move contents of uima-as project up one level the svn directory tree to make the layout consistent with other aggregation projects in the UIMA svn directory. Modify uima-as poms to adjust to the layout changes.IMPORTANT:After the above modifications are done, everyone must re-checkout the trunk to pick up the changes.
issueID:UIMA-2418
type:Bug
changed files:uimaj-core/src/main/java/org/apache/uima/resource/metadata/impl/MetaDataObject_impl.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/asb/impl/ASB_impl.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/impl/AnalysisEngineDescription_impl.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/impl/AnalysisEngineManagementImpl.java
texts:CDE doesn&#39;t preserve order of delegates in an aggregate
When using the CDE to make a minor change to an aggregate the saved descriptor may have the declarations of the delegate AnalysisEngines reordered.  This has no effect on the processing but may affect the initialization order of the delegates, and makes a minor change look major. The fix is to replace a few HashMaps with LinkedHashMaps so the iteration order will consistently match the definition order.
issueID:UIMA-2419
type:Bug
changed files:
texts:Initial view for sofa unaware components not automatically created
When running a sofa-unaware component in an aggregate analysis engine, the initial view for the component to operate on is not automatically created if it does not exist. This causes a CASRuntimeException, here "No sofaFS with name A found.".org.apache.uima.analysis_engine.AnalysisEngineProcessException: Annotator processing failed.     at org.apache.uima.analysis_engine.impl.PrimitiveAnalysisEngine_impl.callAnalysisComponentProcess(PrimitiveAnalysisEngine_impl.java:394) at org.apache.uima.analysis_engine.impl.PrimitiveAnalysisEngine_impl.processAndOutputNewCASes(PrimitiveAnalysisEngine_impl.java:298) at org.apache.uima.analysis_engine.asb.impl.ASB_impl$AggregateCasIterator.processUntilNextOutputCas(ASB_impl.java:568) at org.apache.uima.analysis_engine.asb.impl.ASB_impl$AggregateCasIterator.<init>(ASB_impl.java:410) at org.apache.uima.analysis_engine.asb.impl.ASB_impl.process(ASB_impl.java:343) at org.apache.uima.analysis_engine.impl.AggregateAnalysisEngine_impl.processAndOutputNewCASes(AggregateAnalysisEngine_impl.java:265) at org.apache.uima.analysis_engine.impl.AnalysisEngineImplBase.processAndOutputNewCASes(AnalysisEngineImplBase.java:340)         ...Caused by: org.apache.uima.cas.CASRuntimeException: No sofaFS with name A found. at org.apache.uima.cas.impl.CASImpl.getSofa(CASImpl.java:661) at org.apache.uima.cas.impl.CASImpl.getView(CASImpl.java:2658) at org.apache.uima.impl.Util.getStartingView(Util.java:46) at org.apache.uima.analysis_engine.impl.PrimitiveAnalysisEngine_impl.callAnalysisComponentProcess(PrimitiveAnalysisEngine_impl.java:349) ... 31 moreI'd consider this a bug, because a sofa-unaware component cannot be expected to create a view itself. If the sofa-unaware component is the first one in an aggregate, e.g. acting as a reader, then there is also no other component to create the view before.If the initial view of a component it is mapped to does not exist, it should be the task of the UIMA framework to create this view. See also CPE ArtifactProducer:481 (UIMA 2.4.0).
issueID:UIMA-242
type:Improvement
changed files:
texts:Migration Tool creating unnecessary casts of CAS to CAS
Old code had things like:    TCAS tcas = (TCAS) jcasType.jcas.getCas();are converted to     CAS tcas = (CAS) jcasType.jcas.getCas();which cause a warning saying there's an unnecessary cast from CAS to CAS.Another case: ((TCAS)jcas.getCas()).getAnnotationIndex(...
issueID:UIMA-2420
type:Improvement
changed files:
texts:Update Solr version to latest release in Solrcas
We should update Solrcas to use Solr 3.6 (probably the last 3x before 4 comes out)
issueID:UIMA-2422
type:Bug
changed files:
texts:Need to change uimaj-parent&#39;s pom to inherit from parent version 4 instead of 4-SNAPSHOT

issueID:UIMA-2423
type:Bug
changed files:
texts:UIMA AS Client doesnt work correctly when running with user specified Collection Reader
Uima-as client process() method is broken. When user's CR returns false from hasNext(), the code immediately calls collectionProcessComplete() even though there might be CASes still in-flight being processed. The code must wait until there are no outstanding (pending reply) CASes and only then call collectionProcessComplete().
issueID:UIMA-2424
type:Improvement
changed files:
texts:Improve maven build of TextMarker projects
1. Switch to eclipse:to-maven (is currently eclipse:make-artifacts) for the latest naming conventions2. Generate java code for ANTLR grammars during generate-sources instead of storing the generated classes in SVN
issueID:UIMA-2425
type:Bug
changed files:
texts:UIMACPP Xerces exception messages not being properly converted to native code-page.
Call XmlString::transcode to convert the message string to native code-page
issueID:UIMA-2426
type:Improvement
changed files:
texts:add archive folder in svn for build to hold no-longer-used projects
SVN's .../uima/build folder has several old artifacts that haven't been used in some time for our build process.  To reduce confusion when checking out "trunk", create a directory parallel to trunk, called "archive" and move these folders to there
issueID:UIMA-2427
type:Bug
changed files:
texts:TextMarker: PARTOF not working with parent types
The PARTOF condition does not work, when the argument refers to a parent type of the actual existing annotation. Thanks to Guillaume for pointing this out.
issueID:UIMA-2428
type:Bug
changed files:
texts:Ruta: Context-sensitive auto-completion not working correctly.
The context-sensitive auto-completion is not working correctly. This was observed for the action M.. (should have proposed an action) and its arguments (should have proposed an type defined in the script).
issueID:UIMA-2429
type:Bug
changed files:
texts:Condition CURRENTCOUNT does not work correctly
The conditions CURRENTCOUNT and TOTALCOUNT have exactly the same source code, except class and constructor names. The code is correct for condition TOTALCOUNT, but not for condition CURRENTCOUNT. TOTALCOUNT counts the number of annotations within the whole document, whereas CURRENTCOUNT should only count the number of annotations until the position of the matched annotation. This has to be fixed or perhaps condition CURRENTCOUNT is not needed at all.
issueID:UIMA-243
type:Improvement
changed files:
texts:Update EMF installation instructions

issueID:UIMA-2430
type:Bug
changed files:
texts:Remove "incubator" from DictionaryAnnotator packages
the XMLBeans generated type system types wrongly contain the 'incubator' string inside package definitions, this has to be removed since UIMA is not inside the Incubator anymore making it consistent with other packages/classes.
issueID:UIMA-2432
type:Bug
changed files:
texts:TextRuler plugin not known to osgi
The TextRuler plugin is neither recognized in the workspace as a plugin nor can it be included in an update site. The plugin view lists it multiple times (sometimes out of sync), but the plugin is not listed in the launch config for included plugins. When included in an update site, the feature cannot be installed.
issueID:UIMA-2433
type:Bug
changed files:
texts:UIMACPP Pythonnator fails to build with Python 2.6
As reported by Jens Grivolla In order to compile with Python 2.6 we need to touch uima_wrap.cxx once it is generated. Otherwise we get the following error:    uima_wrap.cxx: In function ‘bool PyStringConvert(PyObject*, icu_3_6::UnicodeString&)’:    uima_wrap.cxx:2844: error: cannot convert ‘int*’ to ‘Py_ssize_t*’ for argument ‘3’ to ‘int PyString_AsStringAndSize(PyObject*, char*, Py_ssize_t)’We needed to change "int len" to "Py_ssize_t len" in that function (it would probably work without the change on 32bit systems).  Since uima_wrap.cxx gets generated automatically, we'd need to actually track down the original source of this error.
issueID:UIMA-2434
type:Improvement
changed files:uimaj-core/src/main/java/org/apache/uima/jcas/impl/JCasImpl.java
uimaj-core/src/main/java/org/apache/uima/cas/FSIterator.java
uimaj-core/src/main/java/org/apache/uima/internal/util/rb_trees/IntArrayRBT.java
uimaj-core/src/main/java/org/apache/uima/cas/FSIndexRepository.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FSIndexRepositoryImpl.java
uimaj-core/src/main/java/org/apache/uima/jcas/JCas.java
uimaj-core/src/main/java/org/apache/uima/internal/util/IntVector.java
texts:Feature structure removal from sorted index is very slow
Removal of feature structures from sorted indexes (e.g. default index) is very slow. FSIntArrayIndex.remove() method performs two operations: linear search in the array until the given FS is found, followed by the shift of elements to the end of this array by one position to the left.If many annotations (millions and more) are being deleted at once, this operation gets very very slow - much slower than adding these annotations in the first place. It seems to require O(N^2) time to remove N annotations.One item is the linear search, which can be replaced by the binary search method, which is already implemented in the same class.Second, array copy can be done with Java built-in method instead of a custom loop.Ideally, a method for bulk removal of a collection of annotations would have been the most efficient, for example a method to remove all annotations of a given type.
issueID:UIMA-2435
type:Bug
changed files:uimaj-core/src/main/java/org/apache/uima/util/impl/Settings_impl.java
uimaj-core/src/main/java/org/apache/uima/util/impl/Settings_impl.java
texts:External Settings files are not closed
After settings files are loaded they should be closed ... callers often forget ... should be safe to do it in the load method.
issueID:UIMA-2436
type:Task
changed files:
texts:Modify UIMA AS scripts, readme, notices, etc for upcoming 2.4.0 release

issueID:UIMA-2437
type:Task
changed files:
texts:UIMA AS not checking state of a Connection when stopping resulting in  ConnectionClosedException
Jenkins reports an exception when running a new testcase testGenerateAndDeployPrimitiveDD():org.apache.activemq.ConnectionClosedException: The connection is already closed        at org.apache.activemq.ActiveMQConnection.checkClosed(ActiveMQConnection.java:1363)        at org.apache.activemq.ActiveMQConnection.checkClosedOrFailed(ActiveMQConnection.java:1350)        at org.apache.activemq.ActiveMQConnection.deleteTempDestination(ActiveMQConnection.java:1933)        at org.apache.uima.adapter.jms.client.BaseUIMAAsynchronousEngine_impl.stopConnection(BaseUIMAAsynchronousEngine_impl.java:236)        at org.apache.uima.adapter.jms.client.BaseUIMAAsynchronousEngine_impl.stop(BaseUIMAAsynchronousEngine_impl.java:281)        at org.apache.uima.adapter.jms.client.BaseUIMAAsynchronousEngineCommon_impl$UimaASShutdownHook.run(BaseUIMAAsynchronousEngineCommon_impl.java:3040)        at java.lang.Thread.run(Thread.java:595)Check the state of a connection while doing cleanup.
issueID:UIMA-2438
type:New Feature
changed files:
texts:Add functionality to evaluate string variables with regular expressions in TextMarker
TextMarker rules are only able to test on the exact values of features. Especially for string features, a more flexible way to compare or test string values (e.g., with regular expressions) is desirable. This functionality can easily be added if the REGEXP condition also works on string variables instead of only for the matched text. The value of a string feature can therefore be stored in a variable, which is then evaluated with a condition in another rule.
issueID:UIMA-2439
type:Bug
changed files:
texts:Assignment of string features using type expressions in TextMarker
Assignment of string features with type expression results in storing the name of the type instead of the covered text.
issueID:UIMA-244
type:Bug
changed files:
texts:CPE GUI Intermittent Failure on Startup
Sometimes when launching the CPE I get errors like:java.lang.ArrayIndexOutOfBoundsException: 2 >= 0        at java.util.Vector.elementAt(Vector.java:432)        at com.sun.java.swing.plaf.windows.WindowsFileChooserUI$DirectoryComboBoxModel.getElementAt(WindowsFileChooserUI.java:1079)        at javax.swing.plaf.basic.BasicListUI.updateLayoutState(BasicListUI.java:1154)I know from the past experience that the WindowsFileChooserUI can be kind of flaky when you try to update it during initialization of the GUI.
issueID:UIMA-2440
type:Bug
changed files:uimaj-cpe/src/main/java/org/apache/uima/collection/impl/cpm/engine/ArtifactProducer.java
texts:CPM doesnt log Exceptions in ArtifactProducer
The run() method in CPM's ArtifactProducer catches Exceptions but only logs them if log level is at FINER. This seems wrong as it requires users to increase log level which is too verbose. Any exception caught should be logged at WARNING level instead.
issueID:UIMA-2442
type:Bug
changed files:
texts:TextMarker rule explanation omits failed rule matches with greedy elements
TextMarker rule explanation omits failed rule matches with greedy elements which leads the user to think that an anchoring annotation is missing. This problem was observed when an atomic greedy rule element was involved in a match that had no further alternatives.
issueID:UIMA-2443
type:Task
changed files:
texts:Reduce log level on UIMA-AS service suicide due to error handling action=TERMINATE
When UIMA-AS service exceeds configured error threshold with action=TERMINATE it proceeds to kill itself via System.exit(). Currently it logs the event at SEVERE with excessive decoration. Tone this done plus reduce log level as this is expected/configured behavior.
issueID:UIMA-2444
type:Bug
changed files:
texts:TextMarker causes NPE when matching out of window
TextMarker provides the functionality to restrict the current view on the document, e.g., by windowing with BLOCK. Within such an environment, matching on annotations that overlap the window causes NPE.
issueID:UIMA-2445
type:Bug
changed files:
texts:Disjunctive matching in TextMarker creates too many alternatives
Disjunctive matching in TextMarker creates to many matching alternatives. Example:Input: Cat and DogRule: (CW | SW)+{-> MARK(T)};This creates seven matches, but should only apply three times.
issueID:UIMA-2446
type:Bug
changed files:
texts:Evaluation of optional composed rule elements not working correctly
The evaluation of optional composed rule elements is not working correctly. Example:Input:some data : 20,20some more data : 20and again : 20,20Rule:ANY+? NUM (COMMA NUM)?;This rule is not matching on the second line. The evaluation of the composed rule elements terminates too early since no comma was found. However, the complete expression should be optional.
issueID:UIMA-2447
type:Bug
changed files:
texts:MARKFAST on StringList
Hi Jens,is there a particular reason why MARKFAST ist not allowed on STRINGLISTs?eg. the following code doesn't work:STRINGLIST myList = {"Peter", "Philipp", "Kai"}; DECLARE Name;Document{->MARKFAST(Name, myList)};Best regardsPhilipp
issueID:UIMA-2448
type:Bug
changed files:
texts:POSITION context-sensitive?
Hi Peter,shouldn't POSITION BE context sensitive? In the following example I'd expect that it only considers Keywords when looking for the second position in paragraph, but it seems like all annotations within the paragraph are considered.Keyword{POSITION(Paragraph,2)->MARK(SecondKeyword)};Best regardsPhilipp
issueID:UIMA-2449
type:Bug
changed files:
texts:Initialization of Strings
Hi Peter,I coudln't find out how to initialize StringVariables. In the following code, the variable brandStr should be reset to "" for each loop iteration, but that's not the case.BLOCK(forEach) Car{}{    STRING brandStr;    Brand{->MATCHEDTEXT(brandStr)};}How to fix that?All the bestPhilipp
issueID:UIMA-245
type:Bug
changed files:uimaj-tools/src/main/java/org/apache/uima/tools/util/gui/FileSelector.java
texts:CPE GUI on exit says settings have been changed even when they haven&#39;t
Open the CPE GUI.  Click in one of the text fields to move the focus.  Then close the GUI.  It will tell you that the parameter settings have changed and ask if you want to save the CPE descriptor.  It seems that even moving the focus is enough to cause the GUI to be marked dirty.
issueID:UIMA-2450
type:Bug
changed files:
texts:MARK using Question Greedy quantifier
Hi Peter,guess you have the following file:1-0-01 0 0the following rule works fine for both:NUM ""? NUM ""? NUM{->MARK(Freq, 1, 5)};the following rule also seems to work fine according to the Explain function, but only the first number ("1") is annotated in both lines.NUM ""? NUM ""? NUM ""?{>MARK(MedicationFreq, 1, 6)};It seems that the expression doesn't like the last question mark before the "{->MARK"RegardsPhilipp
issueID:UIMA-2451
type:Bug
changed files:
texts:Mapping of Numbers in Wordlists
Hi Peter,it seems that the entry "1 0 0" in a wordlist matches the string "100" in a text. Is that a bug or a feature? How to avoid it?All the bestPhilipp
issueID:UIMA-2452
type:New Feature
changed files:
texts:Complex Types
Hi Peter,I think, some more complex types would really be a useful add-on. Currently I have in mind:SENTENCELINEDATETIMEBest regardsPhilipp
issueID:UIMA-2453
type:Bug
changed files:uimaj-core/src/main/java/org/apache/uima/UIMA_IllegalStateException.java
uimaj-core/src/main/java/org/apache/uima/util/impl/SaxDeserializer_impl.java
texts:Some JUnit tests fail with Java 7
Problem reported by Alan Sergeant
issueID:UIMA-2454
type:Bug
changed files:
texts:TextMarker IDE formatter problem with block rule element
The formatter of the IDE does not process the rule elements in the head of a block correctly resulting in a corrupted script.
issueID:UIMA-2455
type:New Feature
changed files:
texts:Make ordering of getNextAnnotations result configurable
Example rule:A B C{NOT(PARTOF(D))->MARK(D,3)};Example text:aText bText cText cMoreTextwhere following correspondence between annotations and tokens are held:A = aTextB = bTextC = cTextC = cText cMoreTextRule results in the following:D = cTextHowever I expect that:D = cText cMoreTextThe reason of actual behaviour is org.apache.uima.textmarker.rule.AnnotationComparator#compare implementation. It returns a shorter annotation before longer. That is why the sequence 'aText bText cText' will be matched and sequence 'aText bText cText cMoreText' will not because it will be considered later and will not pass NOT PARTOF condition.I've revealed this after migration to the latest TextMarker sources (from ASF repo). Before we used the one from Sourceforge.net. In the old (sourceforge) version this problem did not arise because TextMarkerBasic could keep only one annotation per Type as 'begin anchor'. Returning to the example this means that 'cText' TextMarkerBasic held only one C annotation as begin anchor.In current (rev. 1371274) version TextMarkerBasic keeps a set of begin and end anchors per Type. This is actually a good improvement.But I suggest to make ordering of anchored annotations returned by TextMarkerRuleElement#getNextAnnotations(boolean, AnnotationFS, TextMarkerStream) method more controllable.E.g., by adding some parameter for TextMarkerEngine or script which will define AnnotationComparator#compare implementation.Also returning longer annotations before shorter ones seems to be more compliant to the UIMA default indexing. See http://uima.apache.org/d/uimaj-2.4.0/references.html#ugr.ref.cas.index.built_in_indexes
issueID:UIMA-2456
type:Bug
changed files:
texts:Field Mapping overwrites Features of the same type
The field mapping is not right. The HashMap (mapping = new HashMap<String, String>(); ) with the fields within the code gets overwritten by a new HashMap for the type name instead of adding another feature mapping to the exiting mapping of the Type if more than 1 Feature of one type is addressed in the mapping file.
issueID:UIMA-2457
type:Bug
changed files:uimaj-core/src/main/java/org/apache/uima/util/CasCopier.java
texts:Bad error message in CasCopier when feature is not defined
If CasCopier encounters a feature that is undefined in the target CAS type system, it produces an incorrect error message that says that a "type" is not defined.
issueID:UIMA-2458
type:Bug
changed files:
texts:UIMA-AS Client Doesnt Resolve a Placeholder for Service Endpoint
UIMA-AS client service endpoint placeholder resolving is currently not supported. Change the client to resolve provided endpoint placeholder.
issueID:UIMA-2459
type:Improvement
changed files:
texts:Upgrade Concept Mapper to work with UIMA 2.4.0
Concept Mapper 2.3.1 relies on some UIMA classes which are deprecated in the 2.4.0 release of UIMA. This patch removes dependencies of Concept Mapper on deprecated UIMA classes and makes it compatible with UIMA 2.4.0.
issueID:UIMA-246
type:Improvement
changed files:
texts:Add documentation summarizing timeouts and how to set them
Add a new section, probably to the Applications chapter in the tutorials/user's guides, which talks about what are the various timeouts that need to be set, and how to properly set them up, and what happens when timeouts occur.
issueID:UIMA-2460
type:Improvement
changed files:uimaj-core/src/main/java/org/apache/uima/cas/impl/StringHeap.java
texts:Binary deserialization inefficient
The CAS binary deserialization code can be made (much) more space efficient.  Currently, the char data that is used in the strings is read into a char array; each string is represented as an offset into this char array + a length; and new Java strings are created using new String(chararray, offset, length).  This works, but it allocates a new char array for each string being created, and copies from the original char array.  This results in new char array objects for each string object.The alternative is to reuse the original char array object, and not allocate any other char array objects.  This can be done by: making a temporary string from the entire char array object, and then making the new strings using tempString.substring(offset, offset + length)For 1000 strings, this will save 999 char array object overheads (probably about 16 bytes per).An additional space savings is possible by reusing the same string object for equal strings.
issueID:UIMA-2461
type:Bug
changed files:
texts:UIMA AS doesnt support deployment of colocated uima aggregate CM
When deploying a co-located uima aggregate CM (async=false), the UIMA-AS throws an exception caused by:org.apache.uima.aae.error.AsynchAEException: org.apache.uima.UIMARuntimeException: AnalysisComponent "/<aggregate component>/" requested more CASes (1) than defined in its getCasInstancesRequired() method (0).  It is possible that the AnalysisComponent is not properly releasing CASes when it encounters an error.
issueID:UIMA-2462
type:Bug
changed files:
texts:Identical annotations are ignored by TextMarker rules
Annotations of the same type and offsets are not handled correctly. When there are two identical annotations, only one is considered for matching. See AnnotationComparator and TextMarkerTypeMatcher.
issueID:UIMA-2463
type:Bug
changed files:uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/core/model/DefaultColors.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/AnnotationStyle.java
texts:Improve default annotation style assignment of CAS Editor
DefaultColors.assignColors() assigns style background with somewhat random but different bright colors to all types. This method is called when is type system is not known yet.AnnotationStyle.getAnnotationStyleFromStore() tries to read to stored style. If there is no information, then the style is set underlined red.The situation in my use case is the following: I create a script with some type definitions resulting in a type system. I write some rules and test the result by taking a look at the xmi with the CAS Editor. Here, the first method is applied, because the type system is new. Then I write additional rules and add some other types. If I now review the result, the new types in the known types system are all set to red/underlined, because if the second method. Thus, it's harder to distinguish them.A solution is the assignment of a random bright background color as default in AnnotationStyle.getAnnotationStyleFromStore(). However, the colors shouldnot change randomly if the type system changes. So after a style is assigned, this style should be stored inside the configuration, instead of repeating the process the next time the CAS is loaded. If the process is repeated and a change occurs to the type system, then the style assigning code might choose a different color.
issueID:UIMA-2464
type:Improvement
changed files:
texts:TextMarker Query: automatic selection of searched annotation when opening found document
When searching for an specific annotation with "TextMarker Query" and the opening of a found document the desired annotation should be automatically selected to find it faster.
issueID:UIMA-2465
type:Bug
changed files:
texts:Modifiy UIMA-AS client to identify UIMA and UIMA-AS version
UIMA-AS client currently identifies only the UIMA version. Change to show both UIMA and UIMA-AS version.
issueID:UIMA-2466
type:Bug
changed files:
texts:APR-iconv missing from UIMA C++ Windows binary build
On Windows APR-util depends on APR-iconv so must be included to use the ActiveMQ C++ wrapper.
issueID:UIMA-2467
type:Bug
changed files:
texts:Add a new test to the UIMA-AS extended test suite to test many CMs deployed in inner aggregates
Added new test to deploy two inner aggregates: first with one CM and the second with 4 CMs and parentProcessLast setting. Similar setup was reported to  hang.
issueID:UIMA-2468
type:Improvement
changed files:
texts:Key binding conflict: LowerLeftAnnotationSide vs. ConvertToTWL
The command for modifying the left side of an annotation with the CAS Editor and the command for generating a tree-based dictionary with TextMarker use both the same key binding. Solution: change TextMarker's key binding.
issueID:UIMA-2469
type:Bug
changed files:
texts:Add Apache Module Header to UimaParserExtender.java in Deployment Editor Project
The Apache module header is missing from UimaParserExtender.java in uimaj-ep-runtime-deployeditor project causing RAT to fail the build.
issueID:UIMA-247
type:Bug
changed files:uimaj-tools/src/main/java/org/apache/uima/tools/AnnotationViewerMain.java
uimaj-tools/src/main/java/org/apache/uima/tools/docanalyzer/AnnotationViewerDialog.java
uimaj-tools/src/main/java/org/apache/uima/tools/docanalyzer/DocumentAnalyzer.java
texts:Drop "XCAS" from name of Annotation Viewer GUI
This was done in the docs, but not in the code.  The "XCAS" part doesn't make much sense as it also supports the XMI format, which is preferred.
issueID:UIMA-2470
type:Task
changed files:
texts:Donation of uimaFIT
Donation of uimaFIT.uimaFIT provides Java annotations for describing UIMA components which can be used to directly describe the UIMA components in Java code without the need for traditional UIMA XML descriptors. This greatly simplifies refactoring a component definition (e.g., changing a configuration parameter name). uimaFIT also makes it easy to instantiate UIMA components without using XML descriptor files by providing convenient factory methods. This makes uimaFIT an ideal library for testing UIMA components because the component can be easily instantiated and invoked without requiring a descriptor file to be created first. uimaFIT is very useful in research environments in which programmatic/dynamic instantiation of UIMA pipelines can simplify experimentation. For example, when performing 10-fold cross-validation across a number of experimental conditions, it can be quite laborious to create a different set of descriptor files for each run, or even a script which generates such descriptor files. uimaFIT is type system agnostic and does not depend on (or provide) a specific type system.
issueID:UIMA-2471
type:New Feature
changed files:jcasgen-maven-plugin/src/main/java/org/apache/uima/tools/jcasgen/maven/JCasGenMojo.java
jcasgen-maven-plugin/src/main/java/org/apache/uima/tools/jcasgen/maven/JCasGenMojo.java
jcasgen-maven-plugin/src/it/classpath/src/main/java/UseTypeSystem.java
jcasgen-maven-plugin/src/it/multimodule/crossref1/src/main/java/UseTypeSystem.java
jcasgen-maven-plugin/src/it/multimodule/crossref2/src/main/java/UseTypeSystem.java
jcasgen-maven-plugin/src/it/simple/src/main/java/UseTypeSystem.java
jcasgen-maven-plugin/src/main/java/org/apache/uima/tools/jcasgen/maven/JCasGenMojo.java
jcasgen-maven-plugin/src/it/classpath/src/main/java/UseTypeSystem.java
jcasgen-maven-plugin/src/it/multimodule/crossref1/src/main/java/UseTypeSystem.java
jcasgen-maven-plugin/src/it/multimodule/crossref2/src/main/java/UseTypeSystem.java
jcasgen-maven-plugin/src/it/simple/src/main/java/UseTypeSystem.java
jcasgen-maven-plugin/src/main/java/org/apache/uima/tools/jcasgen/maven/JCasGenMojo.java
jcasgen-maven-plugin/src/main/java/org/apache/uima/tools/jcasgen/maven/JCasGenMojo.java
jcasgen-maven-plugin/src/it/classpath/src/main/java/UseTypeSystem.java
jcasgen-maven-plugin/src/it/multimodule/crossref1/src/main/java/UseTypeSystem.java
jcasgen-maven-plugin/src/it/multimodule/crossref2/src/main/java/UseTypeSystem.java
jcasgen-maven-plugin/src/it/simple/src/main/java/UseTypeSystem.java
jcasgen-maven-plugin/src/main/java/org/apache/uima/tools/jcasgen/maven/JCasGenMojo.java
texts:add a jcasgen-maven-plugin (and m2e connector)
To properly use JCasGen in a Maven build, it would be nice to have a real Maven plugin dedicated to JCasGen. The current workaround is a bit complex: you have to use a uimaFIT wrapper of JCasGen plus the exec-maven-plugin and the build-helper-maven-plugin:http://mail-archives.apache.org/mod_mbox/uima-user/201010.mbox/%3C4CC06F1D.3010206@ogren.info%3EThis workaround also interacts poorly with Eclipse. There's no m2e connector for the exec-maven-plugin, which means you have to add some configuration to your pom:http://wiki.eclipse.org/M2E_plugin_execution_not_coveredAnd then the plugin will be executed on every build - even if you haven't modified they type system descriptor - which can be quite painful for large type systems.Instead, I'd like to see a jcasgen-maven-plugin that allows you to write something like:<plugin>  <groupId>org.apache.uima</groupId>  <artifactId>jcasgen-maven-plugin</artifactId>  <configuration>    <typeSystem>src/main/resources/TypeSystem.xml</typeSystem>  </configuration>  <executions>    <execution>      <goals>        <goal>generate</goal>      </goals>    </execution>  </executions></plugin>This plugin would also have a corresponding m2e connector that only runs JCasGen when the type system file changed.I spent some time trying to put a first draft of these two things together. Here's a jcasgen-maven-plugin:http://cleartk.googlecode.com/git/jcasgen-maven-plugin/And here's an m2e connector for that plugin:http://cleartk.googlecode.com/git/jcasgen-m2e-connector/If you'd like to try them out, I've deployed the jcasgen-maven-plugin to Maven Central:http://search.maven.org/#search%7Cga%7C1%7Ca%3A%22jcasgen-maven-plugin%22And I've created an Eclipse update site for the m2e connector:http://cleartk.googlecode.com/git/jcasgen-m2e-connector/org.cleartk.plugin.jcasgen.m2e.repo/target/repository/The pom XML snippet I gave above should work, except that the group is "org.cleartk" instead of "org.apache.uima".Is there any interest in this? I'd be happy to help transition the code over to Apache if others would like to see this as part of the UIMA distribution.
issueID:UIMA-2472
type:Bug
changed files:
texts:TikaAnnotator can&#39;t find XML parser when used in a PEAR file with Java 1.5 or later
When TikaAnnotator is part of a PEAR file, then when you call UIMAFramework.produceAnalysisEngine() and Tika asks the system for an XML parser, it fails with the exception:javax.xml.parsers.FactoryConfigurationError: Provider for javax.xml.parsers.DocumentBuilderFactory cannot be found This is because the XML parser is now built into Java, but the UIMA classloader (used with PEAR files) finds the parser implementation in xml-apis.jar first, which is older and incompatible with the current XML interfaces.  xml-apis.jar is included because it's one of the eventual maven dependencies for Tika 0.7.  See this issue for more information:https://issues.apache.org/jira/browse/TIKA-412This was fixed in Tika 0.8.A work-around for those UIMA users who want to use TikaAnnotator in PEAR files with Java 1.6 is to exclude xml-apis from their PEAR file:<dependency>   <groupId>org.apache.uima</groupId>   <artifactId>TikaAnnotator</artifactId>   <exclusions>     <exclusion>       <groupId>xml-apis</groupId>       <artifactId>xml-apis</artifactId>     </exclusion>   </exclusions> </dependency>However, a better fix would be to update the version of Tika used in TikaAnnotator.
issueID:UIMA-2473
type:Improvement
changed files:
texts:upgrade saxon from saxon8.jar to saxon9he.jar
code :                System.setProperty("defaultBrokerURL", url);                Map<String,Object> appCtx = new HashMap<String,Object>();                appCtx.put(UimaAsynchronousEngine.DD2SpringXsltFilePath, "resources/uima/dd2spring.xsl");                appCtx.put(UimaAsynchronousEngine.SaxonClasspath, "file:../com.ibm.deepqa.runtime.lib/lib/saxon/saxon8.jar");                appCtx.put(UimaAsynchronousEngine.ServerUri, url);                UimaAsynchronousEngine engine = new BaseUIMAAsynchronousEngine_impl();                engine.deploy("resources/uima/Deploy_TLA.xml", appCtx);Has following error:INFO: UIMA-AS version 2.3.1Error   net.sf.saxon.event.MessageEmitter is not a ReceiverTransformation failed: Run-time errors were reportedBecause saxon8 has no source code in sf.net know . have no way to figure out .So suggest to upgrade to saxon9he.jar.
issueID:UIMA-2474
type:Bug
changed files:
texts:Environment variables mishandled when deploying a C++ service as a separate process
UimacppServiceController doesn't handle the Windows PATH or the Mac DYLD_LIBRARY_PATH correctly and may fail to find the annotator.
issueID:UIMA-2475
type:Bug
changed files:
texts:eclipse p2 update site instead of old-style update site
The UIMA Eclipse update site (www.apache.org/dist/uima/eclipse-update-site) is an Eclipse 3.3 (or older) update site. Since Eclipse 3.4, the recommended update site layout is p2:http://wiki.eclipse.org/Equinox_p2_Getting_Started_for_Releng#Why_should_I_make_changes_to_adopt_p2.3FI've been bitten by this update site issue because old-style update sites make it impossible to resolve build-time dependencies when building Eclipse plugins:https://bugs.eclipse.org/bugs/show_bug.cgi?id=380438#c3Could the UIMA update site be modernized to the p2 layout?
issueID:UIMA-2476
type:Bug
changed files:
texts:Fix problems in example code in UIMACPP RC 8
Use uppercase PATH in deployment descriptor to match UIMA-AS changes in UIMA-2474.  Handle paths with parentheses when building from source.  Remove binary for example MeetingAnnotator from binary build and explain how to build.  Update READMEs.
issueID:UIMA-2477
type:Bug
changed files:
texts:UIMA-AS Not Handling Late Replies Correctly
When UIMA-AS aggregate receives late (previously timed out) reply from a remote delegate it tries to drop related Flow object from a FC and subsequently removes a CAS from its cache. This is wrong. Its up to the FC to decide what to do with a timed out CAS. In a scenario when the FC continues with a timed out CAS, current code may cause NPEs in the AE and an unexpected shutdown of the service if action=terminate on Process error. The code should be changed to ignore out-of-band CASes.
issueID:UIMA-2478
type:New Feature
changed files:uimaj-core/src/main/java/org/apache/uima/cas/CAS.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/CASImpl.java
uimaj-core/src/main/java/org/apache/uima/cas/CAS.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/CASImpl.java
texts:Add CAS interface method that allows user to obtain a list of Markers associated with a given CAS
Add a convenience function that removes the need for applications that create Markers for many CASes to separately manage them (e.g., map CAS to its related Marker), and thereby simplify application code.Today's current level of support allows a user to create a Marker for a given CAS (through the createMarker() method which is part of the CAS interface).This proposed support will allow the user to subsequently query a given CAS and obtain a complete list of Markers created against this CAS. This function is a natural extension to the given level of support (i.e., if one can create Marker for a given CAS, one should be able to query the CAS to find said Marker.)Having this support significant simplifies application code, offering advantages from a memory overhead, performance, and maintainability standpoint.  For example, the application won't need to build and maintain a map of CASes to Markers, given the Marker is hanging off the CAS to begin with.
issueID:UIMA-2479
type:Improvement
changed files:
texts:Modify UIMA-AS JMS Listener to Allow Incoming CAS While The Listener is Stopping
When in quiesce mode, the UIMA-AS service stops its jms listeners to prevent more CASes from coming in. In a rare event when the listener is told to stop, it may actually may be reading a message from its queue. In such case, the jms listener rejects the message. This effectively results in a message loss. The listener should allow the message to be processed instead. There is an API which allows for programmatic override of the default behavior acceptMessagesWhileStopping(true/false). The UIMA-AS code should change the setting to true to allow the message while the listener is stopping.
issueID:UIMA-248
type:Improvement
changed files:
texts:Add Eclipse-friendly source zip packaging to assembly
Eclipse is a more friendly and productive environment when the source code can be easily attached.  To do this, it would be nice to have Maven assembly build a source zip containing just the Java sources, in a directory structure that started with the classpath names. So instead of zipping up:  uimaj-core/src/main/java/org.apache...... etc., this would zip up:  org.apache....I think having all the sources for all projects in one zip would work (but haven't confirmed this ....)
issueID:UIMA-2480
type:Bug
changed files:
texts:Revert UIMA-AS POMs to 2.4.0-SNAPSHOT for RC2
Revert UIMA-AS POMS to fix RC1 bugs
issueID:UIMA-2481
type:Bug
changed files:uimaj-tools/src/main/java/org/apache/uima/tools/cpm/CpmPanel.java
texts:Remove dubious use of generics in uima-as-camel classes
Not sure what the intent was behind declaration like this public class UimaAsComponent extends DefaultComponent<Exchange>. This seems to be restricting UimaAsComponent class to operate on Exchange type only. But this does not seem to be enforced. Javadoc generates warnings when seeing this complaining of missing constructor that takes Exchange as an arg. I intend to remove generics from classes in the camel project.
issueID:UIMA-2482
type:Improvement
changed files:
texts:Make AEProcessingBSPJob read from HDFS rather than FS
Make the UIMA BSP AE processing job class use Hama's IO capabilities to enable reading from HDFS (and avoiding explicit file split during the job execution).
issueID:UIMA-2483
type:Bug
changed files:
texts:Log stack trace when handling java.lang.Error in ProcessCasErrorHandler
The error handler is not logging a complete stack trace when processing java.lang.Error in ProcessCasErrorHandler.handleError(). It just logs the class name but a stack trace is necessary to identify the source of the problem
issueID:UIMA-2484
type:Bug
changed files:
texts:Cyclic type systems not displayable in TextMarker views
The additional views of the CAS Editor (Annotation Browser and Selection) provided by the TextMarker IDE allow the user to expand the features of an annotation. The complete tree is already calculated when the user expands a node and therefore cyclic type systems cause a stackoverflow.
issueID:UIMA-2485
type:Bug
changed files:uimaj-core/src/main/java/org/apache/uima/internal/util/UIMALogFormatter.java
texts:UIMALogFormatter timestamp format should include milliseconds
Current timestamp is at a resolution of  seconds.
issueID:UIMA-2486
type:Bug
changed files:uimaj-core/src/main/java/org/apache/uima/cas/impl/XmiCasSerializer.java
texts:XMI Delta CAS serialization does not write out FSes indexed in the Initial View which does not have a sofa
I found a bug in the XMI CAS serializer where delta CAS serialization does not properly handle FSes that were modified in the _InitialView, where the _InitialView does not contain a sofa.  This improper handling results in feature structures being recorded in the XMI, but are never indexed in the _InitialView.  Since the FSes aren't indexed, XMI deserialization does not add these FSes to the _InitialView of the CAS.
issueID:UIMA-2487
type:Bug
changed files:
texts:Optimize UIMA-AS code that collects pipeline stats
When collecting stats from AE Management objects the UIMA-AS needs to create a snapshot of stats before calling AE process method. It actually does a deep copy (by serialization) of Management objects. This snapshot is used to calculate component analysis time when the process method completes. The problem is that the serialization is adding too much overhead and actually is not necessary. Refactor code to avoid serialization overhead.
issueID:UIMA-2488
type:Bug
changed files:
texts:Revert UIMA-AS poms to 2.4.0-SNAPSHOT for RC3

issueID:UIMA-2489
type:Task
changed files:
texts:Update DKPro Core section on "external resources" page
Update DKPro Core section on "external resources" page after last release went out via Maven Central.
issueID:UIMA-249
type:Improvement
changed files:
texts:PDF, html and javadocs documentation should be in separate subdirectories

issueID:UIMA-2491
type:Task
changed files:
texts:Submit DUCC source code to Apache
Submit DUCC code base to ASF. The contribution proposal vote passed receiving eight +1 votes. Until the software grant is accepted by ASF, the DUCC code base will be accessible through this jira only. Once accepted, the code base will be added to the UIMA sandbox in the SVN.
issueID:UIMA-2492
type:Bug
changed files:
texts:AnalysisTime in UIMA AS Perfomance MBean incremented incorrectly
The AnalysisTime attribute continues to increment though the service has not received and processed any CASes.
issueID:UIMA-2493
type:Improvement
changed files:uimaj-core/src/main/java/org/apache/uima/cas/impl/BinaryCasSerDes4.java
uimaj-core/src/main/java/org/apache/uima/cas/CASRuntimeException.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/BinaryCasSerDes4.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/CASImpl.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/CASSerializer.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/MarkerImpl.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/StringHeap.java
uimaj-core/src/main/java/org/apache/uima/util/CasCopier.java
uimaj-core/src/main/java/org/apache/uima/util/impl/SerializationMeasures.java
uimaj-core/src/main/java/org/apache/uima/util/impl/DataIO.java
uimaj-core/src/main/java/org/apache/uima/util/impl/OptimizeStrings.java
texts:add compression to binary CAS serialization
Add a mode to binary CAS serialization which compresses the serialized size, to reduce the size, and potentially make deserialization faster (because of the smaller size).  Support delta CAS modes.
issueID:UIMA-2494
type:Task
changed files:
texts:Revert eclipse update site (and plugins) to version 2.4.0
Reverting poms in order to build new eclipse update site consistent with uima-as 2.4.0 release level.
issueID:UIMA-2495
type:Bug
changed files:
texts:TextMarker testing views broken
The views for the true positive, false negatives and false positives do not work correctly after the changes of UIMA-2484. Additionally, the search strategy is not able to find the correct type system when the user used drag and drop to add test cases (and the evaluated files are stored in the test/temp folder). Extend the documentation for this scenario.
issueID:UIMA-2496
type:Improvement
changed files:
texts:Increase functionality of TextMarker UNMARK action
Several use cases came up where the functionality of the UNMARK action is not sufficient. The interface should look like:UNMARK(Type)UNMARK(Type, NumExpr...NumExpr)UNMARK(Type, BoolExpr)The second action definition corresponds to the MARK definition, where the span is specified by pointing to the rule elements. The third definition should just remove all annotations that start at the matched position (of the rule element of the action).
issueID:UIMA-2497
type:Task
changed files:
texts:Temporarily remove uimaj-eclipse-feature-* from uimaj aggregate build
Because the uimaj-eclipse-feature* projects were tweaked for the uima-as-2.4.0 release candidate, they have a version number no longer compatible with the rest of the uimaj projects, which is causing Jenkins builds to fail.Move these two projects (the uimaj-eclipse-update-site project is already not part of the main uimaj aggregate) out of the aggregate, while we figure out a better solution for building eclipse update sites or p2 repositories.
issueID:UIMA-2498
type:Improvement
changed files:uimaj-core/src/main/java/org/apache/uima/collection/base_cpm/BaseCollectionReader.java
uimaj-core/src/main/java/org/apache/uima/collection/metadata/CpeDescription.java
uimaj-core/src/main/java/org/apache/uima/collection/metadata/CasProcessorDeploymentParam.java
uimaj-core/src/main/java/org/apache/uima/resource/ResourceInitializationException.java
uimaj-core/src/main/java/org/apache/uima/resource/metadata/FsIndexKeyDescription.java
uimaj-core/src/main/java/org/apache/uima/internal/util/rb_trees/Int2IntRBT.java
uimaj-core/src/main/java/org/apache/uima/resource/ResourceManager.java
uimaj-core/src/main/java/org/apache/uima/resource/metadata/ResourceManagerConfiguration.java
uimaj-core/src/main/java/org/apache/uima/UIMARuntimeException.java
uimaj-core/src/main/java/org/apache/uima/UIMA_IllegalStateException.java
uimaj-core/src/main/java/org/apache/uima/internal/util/IntArrayUtils.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/XmiCasDeserializer.java
uimaj-core/src/main/java/org/apache/uima/cas_data/FeatureStructure.java
uimaj-core/src/main/java/org/apache/uima/search/Filter.java
uimaj-core/src/main/java/org/apache/uima/collection/CollectionProcessingEngine.java
uimaj-core/src/main/java/org/apache/uima/resource/ResourceConfigurationException.java
uimaj-core/src/main/java/org/apache/uima/collection/CollectionReader.java
uimaj-core/src/main/java/org/apache/uima/flow/FlowControllerContext.java
uimaj-core/src/main/java/org/apache/uima/resource/ConfigurationManager.java
uimaj-core/src/main/java/org/apache/uima/resource/DataResource.java
uimaj-core/src/main/java/org/apache/uima/resource/metadata/FeatureDescription.java
uimaj-core/src/main/java/org/apache/uima/resource/metadata/ProcessingResourceMetaData.java
uimaj-core/src/main/java/org/apache/uima/util/CasToInlineXml.java
uimaj-core/src/main/java/org/apache/uima/cas/CAS.java
uimaj-core/src/main/java/org/apache/uima/pear/tools/InstallationProcessor.java
uimaj-core/src/main/java/org/apache/uima/resource/metadata/impl/PropertyXmlInfo.java
uimaj-core/src/main/java/org/apache/uima/util/TCasToInlineXml.java
uimaj-core/src/main/java/org/apache/uima/ResourceFactory.java
uimaj-core/src/main/java/org/apache/uima/analysis_component/CasMultiplier_ImplBase.java
uimaj-core/src/main/java/org/apache/uima/cas/text/AnnotationIndex.java
uimaj-core/src/main/java/org/apache/uima/resource/ResourceServiceStub.java
uimaj-core/src/main/java/org/apache/uima/resource/metadata/ResourceMetaData.java
uimaj-core/src/main/java/org/apache/uima/resource/impl/ResourceState_impl.java
uimaj-core/src/main/java/org/apache/uima/internal/util/rb_trees/IntRBTNode.java
uimaj-core/src/main/java/org/apache/uima/resource/metadata/ConfigurationParameterDeclarations.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/TypeSystemImpl.java
uimaj-core/src/main/java/org/apache/uima/internal/util/rb_trees/IntRedBlackTree.java
uimaj-core/src/main/java/org/apache/uima/internal/util/IntKeyValueIterator.java
uimaj-core/src/main/java/org/apache/uima/collection/base_cpm/SynchPoint.java
uimaj-core/src/main/java/org/apache/uima/util/AnalysisEngineUtils.java
uimaj-core/src/main/java/org/apache/uima/pear/tools/PackageCreator.java
uimaj-core/src/main/java/org/apache/uima/pear/util/StringUtil.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/SlotKinds.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/BinaryCasSerDes4.java
uimaj-core/src/main/java/org/apache/uima/util/impl/SerializationMeasures.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/CasTypeSystemMapper.java
uimaj-core/src/main/java/org/apache/uima/search/Style.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/XmiCasSerializer.java
uimaj-core/src/main/java/org/apache/uima/util/Logger.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/BinaryCasSerDes6.java
uimaj-core/src/main/java/org/apache/uima/cas_data/CasData.java
uimaj-core/src/main/java/org/apache/uima/UIMA_UnsupportedOperationException.java
uimaj-core/src/main/java/org/apache/uima/pear/tools/InstallationController.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/AnalysisEngine.java
uimaj-core/src/main/java/org/apache/uima/resource/metadata/ConfigurationParameter.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/CASImpl.java
uimaj-core/src/main/java/org/apache/uima/internal/util/ReplaceStringInFiles.java
uimaj-core/src/main/java/org/apache/uima/util/AnalysisEnginePerformanceReports.java
uimaj-core/src/main/java/org/apache/uima/pear/util/FileUtil.java
uimaj-core/src/main/java/org/apache/uima/util/JCasPool.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/metadata/AnalysisEngineMetaData.java
uimaj-core/src/main/java/org/apache/uima/collection/metadata/CasProcessorExecutable.java
uimaj-core/src/main/java/org/apache/uima/resource/metadata/Capability.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/OutOfTypeSystemData.java
uimaj-core/src/main/java/org/apache/uima/resource/metadata/SimplePrecondition.java
uimaj-core/src/main/java/org/apache/uima/pear/util/UIMAUtil.java
uimaj-core/src/main/java/org/apache/uima/util/CasCreationUtils.java
uimaj-core/src/main/java/org/apache/uima/internal/util/rb_trees/IntArrayRBT.java
uimaj-core/src/main/java/org/apache/uima/util/XMLParser.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/CasSeqAddrMaps.java
uimaj-core/src/main/java/org/apache/uima/collection/base_cpm/BaseCPM.java
uimaj-core/src/main/java/org/apache/uima/resource/ConfigurableResource.java
uimaj-core/src/main/java/org/apache/uima/collection/CollectionProcessingManager.java
uimaj-core/src/main/java/org/apache/uima/util/Level.java
uimaj-core/src/main/java/org/apache/uima/util/Progress.java
uimaj-core/src/main/java/org/apache/uima/UIMAFramework.java
uimaj-core/src/main/java/org/apache/uima/resource/Resource.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/CASSerializer.java
uimaj-core/src/main/java/org/apache/uima/flow/FlowController.java
texts:add lenient version for binary compressed serialization/deserialization
Extend the binary compressed serialization to support cases where the type systems are not exactly the same.There are 2 use cases.First: the source is a previously saved file. The goal is to deserialize it into e.g. a tool, where the type system in the tool may be somewhat different than the type system used to create the file. (For instance, it may be at a different version level).Second: the source is a client for a UIMA-AS service.  In this case, the client has read the service's type system, and has merged it with its own.Difference in the type systems could be:Type exists in one, not in the other; Type exists in both, but with different features (including those from super types).  Features could be added/subtracted.  Features could have different ranges (incompatible ranges should cause error messages).A suggested impl approach: create a mapper that maps typecodes and feature codes; set it up by comparing two type systems.  For the first use case, implement a version of deserialization that takes an extra input of the source type system, and creates the converter, and then does deserialization with the conversions.  For the 2nd use case, during initialization time, after the service's type system has been read (for merging into the client's type system definition), use this to create the same mappper between type codes / feature codes; when sending a CAS via binary serialization, send it via the mapping converter for type codes and feature codes. Try to arrange things so that the creation of the mapper can be done once per "set" of CASes, rather than once per CAS.Note that managing out-of-type-system data is superseded by support for delta-CAS formats.
issueID:UIMA-2499
type:Task
changed files:
texts:Update uima website with new uima-as release 2.4.0
Update uima website with new info about new uima-as release. Update downloads as well as documentation pages
issueID:UIMA-25
type:Improvement
changed files:uimaj-core/src/main/java/org/apache/uima/cas/impl/TypeSystemImpl.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/TypeSystemImpl.java
texts:Implement better support for arrays of Feature Structures
The code for subsumes treats FSArray special:       // Yes, the code below is intentional. Until we actually support real        // arrays of some        // particular fs,        // we have FSArray is the supertype of xxxx[] AND        // xxx[] is the supertype of FSArray        // (this second relation because all we can generate are instances of        // FSArray        // and we must be able to assign them to xxx[] )This is illogical, and should be fixed somehow.
issueID:UIMA-250
type:Bug
changed files:
texts:ClassNotFoundException for org.apache.uima.adapter.ServiceDataCargo when SOAP service should be deployed
ClassNotFoundException for org.apache.uima.adapter.ServiceDataCargo when SOAP service should be deployed
issueID:UIMA-2500
type:Task
changed files:
texts:Updates for UIMA C++ release 2.4.0
Update UIMA website and svn tag
issueID:UIMA-2501
type:Improvement
changed files:
texts:Rename TextMarker EXPAND action to SHIFT
The EXPAND action is also able to reduce/move the span of an annotation and therefore SHIFT would be a better name for this action.
issueID:UIMA-2502
type:Task
changed files:
texts:Keep UIMA BSP aligned with latest Hama version
Switch to the latest released Apache Hama version
issueID:UIMA-2503
type:Task
changed files:
texts:Update Solrcas to latest 3.x release
Update Solrcas to use latest Solr 3.x released version
issueID:UIMA-2504
type:Bug
changed files:
texts:TextMarker: reindexing of subatomic annotations fails
If an external analysis engine is called within a TextMarker script and this analysis engine adds new annotations that are smaller than the current inference annotations, then the splitting and reindexing of the anchors fails.
issueID:UIMA-2505
type:Bug
changed files:
texts:TextMarker condition CONTEXTCOUNT broken
The condition CONTEXTCOUNT does not work at all.
issueID:UIMA-2506
type:Bug
changed files:
texts:TextMarker LAST condition is broken
The condition LAST does not work correctly.
issueID:UIMA-2507
type:Improvement
changed files:
texts:Improve test coverage of Ruta language
Improve test coverage of Ruta language, especially for actions, conditions and control structures.
issueID:UIMA-2508
type:Improvement
changed files:
texts:Improve lexer in default TextMarker seeding for html fragments
The default seeding creates erroneously markup annotations because the applied regexp in the lexer is just too simple. The identifier should be based on something like: \<\/?\w+(([ \t\f]\w([ \t\f]=[ \t\f](\".?\"|\'.?\'|&#91;^\&#39;\"> \t\f&#93;))?)[ \t\f]|[ \t\f])\/?\>
issueID:UIMA-2509
type:Bug
changed files:
texts:UIMA-AS JMS Listener Not Recovering After Broker Restart
When a broker is bounced, uima-as service is not fully recovering if it uses multiple listener threads per destination. Only some of the listeners recover which reduces throughput. When a connection is lost all listener threads call Spring API which blocks and auto retries a connection to the broker until success. It looks like, this API is not re-entrant and if multiple listener threads try to recover the connection bad things happen. This is more of the uima-as bug than Spring in my opinion. All listener threads share the same connection so it is fine if only one of the threads is involved in the recovery. Fix uima-as listener to allow a single listener thread to call Spring API to recover broker connection
issueID:UIMA-251
type:Improvement
changed files:uimaj-tools/src/main/java/org/apache/uima/tools/cvd/MainFrame.java
texts:CVD should not use a banner
The new banner simply looks horrible and is just a waste of screen space.
issueID:UIMA-2510
type:Task
changed files:
texts:Provide exemplary TextMarker projects
Some exemplary TextMarker projects can support the documentation and would be very useful for unexperienced TextMarker users.
issueID:UIMA-2511
type:Bug
changed files:uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/ui/AbstractSection.java
texts:JCasGen fails to update descriptions in JavaDoc
When I update the description field of features in the Eclipse Component Descriptor editor and run JCasGen, most of the time the descriptions for the types are not updated in the generated JCas files. The "Updated by JCasGen" timestamp is updated, but the JavaDoc on the getters and setters is not updated most of the time. I even thought that generating JavaDoc on setters/getters wasn't supported until I actually looked at the JCasGen source code.Deleting the generated types and re-running JCasGen seems to help some times, but most of the time it just seems that it doesn't make a difference.E.g., I added "lala" as a description on a type feature and successfully generate the JCas with "lala" ending up in the getter/setter JavaDoc. Now I remove "lala" from the description (it's empty now), delete the JCas files from disk and rerun JCasGen. In the freshly generated files, "lala" is still there.
issueID:UIMA-2512
type:Bug
changed files:
texts:Type system editor always dirty
Since some time (some 2.4.0-SNAPSHOT, still present with 2.4.1-SNAPSHOT), whenever I open a type descriptor in the CDE in Eclipse, the editor is immediately marked as dirty. If I save, the dirty mark dissapears very briefly, then is back. Whenever I close the editor, it asks me if I want to save first.
issueID:UIMA-2513
type:Task
changed files:
texts:Prepare TextMarker projects for release
Prepare TextMarker projects for release, e.g., check license headers.
issueID:UIMA-2514
type:Bug
changed files:
texts:TextMarker: reluctant min/max quantifier is too greedy
The reluctant min/max quantifier does not stop to match, even if the next rule element is able to match. Example:Input:    123 456 small Big Big Big small Big Rule:     SW W&#91;2,100&#93;? SW
issueID:UIMA-2515
type:Bug
changed files:uimaj-core/src/main/java/org/apache/uima/util/impl/OptimizeStrings.java
uimaj-core/src/main/java/org/apache/uima/util/impl/OptimizeStrings.java
texts:Need better workaround for intermittent out-of-stack in Arrays.sort for compressed binary serialization
On IBM Java 6, there is an occasional failure in Arrays.sort used to sort the strings in the heap.  The failure is an out-of-stack-space error.  It is very intermittent.  I had earlier seen this, and had wrapped the call to Arrays.sort in a try/catch loop which caught the out-of-stack-space.  The code would retry this once, after reversing the array (thinking this would change things to avoid the out-of-memory).  In further extensive use, this error has popped up again, even with this retry.  Need a better workaround.
issueID:UIMA-2516
type:Task
changed files:
texts:change the /d/ documentation part of our website to use our svn
Infrastructure requires we put all parts of our website into SVN.  So we need to "undo" the earlier work where we took generated html/pdfs out of our site svn and put them into  p.a.o, in directory www/uima.apache.org/d/.  Besides copying this stuff into SVN, the website links need to be updated.  This likely involves changing the project macro.
issueID:UIMA-2517
type:Improvement
changed files:uimaj-core/src/main/java/org/apache/uima/cas/impl/BinaryCasSerDes4.java
texts:remove left-in print statement in binary deserialization code
remove left-over print statement that prints a line at the end of every deserialization
issueID:UIMA-2519
type:New Feature
changed files:
texts:TextMarker: call Java Annotators from Java UIMA projects in the same workspace
I would like to hava a better integration between TextMarker projects and Java projects with the UIMA nature. When I am working on an annotator written in Java, I want a simple way to "exec" this annotator from TextMarker scripts in the same workspace. It would be nice to just add a dependency of that TextMarker project to the Java project.
issueID:UIMA-252
type:Bug
changed files:
texts:bold italics highlighting does not work in code sections of the html documentation
The bold italics highlighting in code sections does not work in HTML document. The same section in the pdf documentation looks fine. E.g. search for "CATALINA" in the tutorials_and_users_guides and see the next xml fragment code section. Within this section there should be somehighlights but they are not displayed correctly in the HTML document.
issueID:UIMA-2520
type:Bug
changed files:
texts:Fix ConcurrentModificationException in UIMA-AS
When running uima-as with a logger configured at FINE or FINEST, ConcurrentModificationException is thrown from one of the methods which is only called when log level > INFO. The dumpPendingReplyList() method iterates over a list which is concurrently being updated by another thread. Synchronize access to the list to prevent the exception.
issueID:UIMA-2521
type:Task
changed files:
texts:Create Jira component for uimaFIT
Can you please set up a Jira component for uimaFIT?
issueID:UIMA-2522
type:Task
changed files:
texts:Rename packages
Rename packages to org.apache.uima.fit.* and make sure everything compiles and all tests run.
issueID:UIMA-2523
type:Bug
changed files:
texts:Rename module folders
The module folders in uimaFIT do not match the artifactIds. The module folders use the capitalization "uimaFIT" while the artifactIds use "uimafit".The folders should be renamed to use the lower-case variant and the module section of the aggregator POM should be adjusted accordingly.The currently different capitalization might cause problems in Eclipse when patches are applied, as Eclipse uses the artifactId as the project name and consequently workspace locations have different names than their respective directories on the file system (cf. UIMA-2522).
issueID:UIMA-2524
type:Bug
changed files:
texts:TextMarker html conversion to plain text is not working correctly
The HTMLAnnoator shipped with TextMarker is able to strip the html tag and to create an additional view with the plain text. During this step the tag information is converted to annotations, whose offsets are adapted according to the removed tags. This functionality is not working correctly: the tags of the body of the html document are not removed.
issueID:UIMA-2525
type:Improvement
changed files:
texts:Add initTypeSystem Support to SimplePipeline
I found out that the SimplePipeline does not support initialisation of a typeSystem by a given TypeSystemDescription. This would be a nice feature. If you guide me to the code or to the place where i can improve that i will add this on my own. Can it be done simply?
issueID:UIMA-2526
type:Improvement
changed files:
texts:Add a reactor pom to easily build TextMarker
It would be good if we had a pom.xml under sandbox/trunk/TextMarker to avoid having to build each TextMarker project separately but build all of them by launching 'mvn install' from inside TextMarker directory.
issueID:UIMA-2527
type:New Feature
changed files:
texts:Add a new TextMarker action for annotation-based trimming
Trimming of annotations based on a set of specific types is quite cumbersome right now. Add a new action, which does that automatically. An example: Annotation: " some text<br/>"Action: TRIM(SPACE), TRIM(MARKUP) or TRIM({SPACE, MARKUP})Resulting annotation: "some text"
issueID:UIMA-2528
type:Bug
changed files:
texts:Open CAS Editor blocks eclipse start
I often observe that my Eclipse does not start, if the workspace was left with an open CAS Editor. This happens when I run an Eclipse application from a workspace with the CAS Editor and Ruta bundles. In order to get a working Eclipse, I have to deactivate the CAS Editor bundles, open the Eclipse, close the editors, close the Eclipse, and then activate the CAS Editor bundles again.
issueID:UIMA-2529
type:Task
changed files:
texts:Move the CEV plugin to the common sandbox location
The CEV plugin (uimaj-ep-cev) is a plugin for visualizing and editing of xmiCAS files and therefore it is an alternative for the CAS Editor. However, the TextMarker projects are now only using the CAS editor and the CEV plugin is abandoned. Move this plugin to the other sandbox projects (e.g., CasViewerEclipsePlugin) in order to archive it.
issueID:UIMA-253
type:Bug
changed files:uimaj-tools/src/main/java/org/apache/uima/tools/AnnotationViewerMain.java
uimaj-tools/src/main/java/org/apache/uima/tools/AnnotationViewerMain.java
uimaj-tools/src/main/java/org/apache/uima/tools/AnnotationViewerMain.java
uimaj-tools/src/main/java/org/apache/uima/tools/AnnotationViewerMain.java
texts:default path for CAS annotation viewer does not exist
The default path that is used when the CAS annotation viewer is started does not exist:Input directory: <UIMA_HOME>/docs/examples/data/processedTypesystem file: <UIMA_HOME>/docs/examples/descriptors/analysis_engine/PersonTitleAnnotator.xmlThe used directory layout has changed.
issueID:UIMA-2530
type:Task
changed files:
texts:Jenkins build for TextMarker
It would be nice if there was a Jenkins build for TextMarker on https://builds.apache.org and if snapshot versions would automatically be deployed to some snapshot repository.
issueID:UIMA-2531
type:Bug
changed files:
texts:TextMarker does not build
It seems that not all dependencies can be resolved when trying to build TextMarker with a vanilla Maven:&#91;ERROR&#93; Failed to execute goal on project uimaj-ep-textmarker-ide: Could not resolve dependencies for project org.apache.uima:uimaj-ep-textmarker-ide:jar:2.0.0-SNAPSHOT: Failed to collect dependencies for [org.eclipse.dltk:core:jar:[3.0.1,4.0.0) (provided), org.eclipse.dltk:ui:jar:[3.0.1,4.0.0) (provided), org.eclipse.dltk:launching:jar:[3.0.0,4.0.0) (provided), org.eclipse.dltk.validators:core:jar:[3.0.0,4.0.0) (provided), org.eclipse.dltk.validators:ui:jar:[3.0.0,4.0.0) (provided), org.eclipse.dltk:console:jar:[3.0.0,4.0.0) (provided), org.eclipse.dltk.console:ui:jar:[3.0.0,4.0.0) (provided), org.eclipse.dltk:debug:jar:[3.0.1,4.0.0) (provided), org.eclipse.dltk.debug:ui:jar:[3.0.0,4.0.0) (provided), org.eclipse.dltk:formatter:jar:[3.0.0,4.0.0) (provided), org.eclipse.dltk:testing:jar:[3.0.0,4.0.0) (provided), org.eclipse.core:runtime:jar:[3.3.0,4.0.0) (provided), org.eclipse.core:jobs:jar:[3.3.0,4.0.0) (provided), org.eclipse.core:resources:jar:[3.3.0,4.0.0) (provided), org.eclipse:search:jar:[3.2.0,4.0.0) (provided), org.eclipse:ui:jar:[3.3.0,4.0.0) (provided), org.eclipse.swt:org.eclipse.swt.win32.win32.x86:jar:[3.2.0,4.0.0) (provided), org.eclipse.ui:ide:jar:[3.3.0,4.0.0) (provided), org.eclipse.ui:views:jar:[3.3.0,4.0.0) (provided), org.eclipse.ui:console:jar:[3.2.0,4.0.0) (provided), org.eclipse.ui.workbench:texteditor:jar:[3.3.0,4.0.0) (provided), org.eclipse.jface:text:jar:[3.3.0,4.0.0) (provided), org.eclipse.core:variables:jar:[3.2.0,4.0.0) (provided), org.eclipse.jdt:launching:jar:[3.3.0,4.0.0) (provided), org.eclipse.jdt:core:jar:[3.3.0,4.0.0) (provided), org.eclipse.jdt.debug:ui:jar:[3.2.0,4.0.0) (provided), org.eclipse.core:contenttype:jar:[3.4.0,4.0.0) (provided), org.eclipse.equinox:preferences:jar:[3.3.0,4.0.0) (provided), org.eclipse.equinox:app:jar:[1.3.0,2.0.0) (provided), org.eclipse.emf.ecore:xmi:jar:&#91;2.7.0,3.0.0) (provided), org.apache.uima:uimaj-textmarker:jar:2.0.0-SNAPSHOT (compile)&#93;: No versions available for org.eclipse.dltk:core:jar:[3.0.1,4.0.0) within specified range -> &#91;Help 1&#93;
issueID:UIMA-2532
type:Task
changed files:
texts:Move the TextMarker modules to their own folder structure in the sandbox
The TextMarker modules will proably be released more often then the other projects in the common sandbox/trunk folder. Therefore, move the TextMarker folder to the root of the sandbox and add its own branches, tags and trunk folder.
issueID:UIMA-2533
type:Improvement
changed files:
texts:Automatic type priority detection
uimaFIT supports automatically detecting types and index definitions in the classpath, but doesn't support such a mechanism for type priorities.This causes some inconvenience when running TextMarker in an uimaFIT pipeline (cf. &#91;1&#93;) because the simple create*(Class component, Object... params) factory methods cannot be used.&#91;1&#93; http://code.google.com/p/dkpro-core-asl/issues/detail?id=104
issueID:UIMA-2534
type:Task
changed files:
texts:Do IP Clearance process for DUCC
Follow the process described here: http://incubator.apache.org/ip-clearance/index.html
issueID:UIMA-2535
type:Task
changed files:
texts:Do IP Clearance process for uimaFIT
Follow the process here: http://incubator.apache.org/ip-clearance/index.html
issueID:UIMA-2536
type:New Feature
changed files:
texts:TextMarker annotator for html to plain text conversion
The broken conversion functionality was removed in UIMA-2524. Add an additional analysis engine that is able to strip html tags but retains all annotations with begin<end after the offsets were adapted.
issueID:UIMA-2537
type:Task
changed files:
texts:Create Jira version "2.0.0uimaFIT"
Create a version for the next uimaFIT release in the Apache Jira.
issueID:UIMA-2538
type:Sub-task
changed files:
texts:Replace license header with header used elsewhere in UIMA
Historically, uimaFIT names copyright-holders in the license headers. The rest of the UIMA project uses a generic license header deferring copyright information to the License file.
issueID:UIMA-2539
type:Sub-task
changed files:
texts:Strip @author tags
UIMA doesn't maintain explicit @author tags in source files as it is a community project (cf. UIMA-2202, mailing list discussion).
issueID:UIMA-254
type:Task
changed files:
texts:Create Release Notes
We should have release notes in our distribution and on the download site.JIRA can generate HTML and plain text release notes, at least to use as a starting point.
issueID:UIMA-2540
type:New Feature
changed files:
texts:Support legacy uimaFIT annotations in factory methods
To mix legacy uimaFIT (pre-Apache) and current uimaFIT components in a project, it would be convenient if the Apache uimaFIT factory methods would also recognize the legacy uimaFIT annotations.Legacy components and components using Apache uimaFIT should still be mixable in a project, even if this feature is not implemented. But then, the legacy factory methods need to be used for the legacy components and the new factory methods for the new components respectively. Once the descriptors have been created, they should be runnable anywhere.
issueID:UIMA-2541
type:Task
changed files:
texts:Switch from Sonatype parent POM to Apache UIMA parent POM
uimaFIT was so far published to Maven Central via Sonatype and inherits from their OSS master POM. It should instead inherit from the Apache UIMA master POM.
issueID:UIMA-2542
type:Task
changed files:
texts:Migrate uimaFIT build process
When released via Apache, the build process needs to be adapted. E.g. how JavaDoc is generated, where it is placed, how artifacts are signed, etc. The UIMA master POM may provide some convenience. The uimaFIT parent POM currently has some convenience for the old build process that might need to be updated/removed.
issueID:UIMA-2543
type:Task
changed files:
texts:Jenkins build for uimaFIT
It would be nice if there was a Jenkins build for uimaFIT on https://builds.apache.org and if snapshot versions would automatically be deployed to some snapshot repository.
issueID:UIMA-2544
type:Task
changed files:
texts:Apply UIMA code style
Apply the UIMA code style: http://uima.apache.org/codeConventions.html
issueID:UIMA-2545
type:Improvement
changed files:
texts:Add relation extraction service
Add the 'relation extraction' service (see http://www.alchemyapi.com/api/relation/) to AlchemyAPI Annotator
issueID:UIMA-2547
type:Improvement
changed files:
texts:Migrate TikaAnnotator to Tika 0.8
Migrate TikaAnnotator to use Tika 0.8 (currently using 0.7).The migrations to newer versions will be done in explicit steps to track any possible issue.
issueID:UIMA-2548
type:Improvement
changed files:
texts:Perform code review / analysis fine tuning
Perform code analysis and review in order to improve performance and usage of correct Java constructs.
issueID:UIMA-2549
type:Task
changed files:
texts:Remove API keys from AlchemyAPI Annotator
Some tests use existing non public API keys which should be removed / mocked.
issueID:UIMA-255
type:Task
changed files:
texts:Incorporate UIMA C++ framework code into project, under software Grant
Under guidance from Ken Coar, we followed this process:1) sent in the software grant2) waited for it to be acknowledged3) checked in the codeThe IP clearance for this code won't be done with our 2.1 release, so it won't go out with that release.
issueID:UIMA-2550
type:Bug
changed files:
texts:build-ip-clearances script gets run against normal web files, incorrectly.
The build-ip-clearances script is set up to run against all files in the uima website, that have been modified since last running.  This exposes the possibility that an update might occur to a regular web page, and then build-ip-clearances would run against that page incorrectly.  Fix: modify the script to run only against the ip-clearances pages.
issueID:UIMA-2553
type:New Feature
changed files:
texts:Maven plugin to generate component descriptors from uimaFIT annotations at build time
Some users would like to use the uimaFIT annotations but still need XML descriptors. A Maven plugin which can be used to generate XML descriptors for annotated components at build time would be very convenient.
issueID:UIMA-2554
type:Task
changed files:
texts:Change artifact coordinates
After contributing uimaFIT to UIMA, the artifact coordinates need to be changed.
issueID:UIMA-2555
type:Bug
changed files:
texts:Logging messaged from ExtendedLogger always carry wrong source info
The new uimaFIT logger API makes code writing simpler, but currently all the logging messages claim to be logged from ExtendedLogger - instead the method/class that calls ExtendedLogger should be logged.Fixing this issue depends on UIMA-2375 being released since uimaFIT shouldn't depend on snapshot versions of the core.See also patch attached here: https://code.google.com/p/uimafit/issues/detail?id=114
issueID:UIMA-2556
type:Task
changed files:
texts:Do ip-clearance for TextMarker
TextMarker is a large contribution that came in under a software grant, and is now nearing a release; we need to do the ASF official IP clearance process for this.
issueID:UIMA-2557
type:Task
changed files:
texts:Remove open source code from DUCC src/main/webserver
As part of initial DUCC check-in we included a handful of open-source code in the subject directory that should instead be installed by Maven.  This issue tracks correction of that situation.
issueID:UIMA-2558
type:Bug
changed files:
texts:builds broken - the auto generation of issues fixed is broken
Running build with the parent-pom switches set to include generating the list of issues changed, etc., is broken.  This is possibly due to the upgrades to JIRA.  Errors are produced whereby the data sent from the Jira query cannot be parsed by the plugin.It may be that only the plugin needs to be upgraded?
issueID:UIMA-2559
type:Task
changed files:
texts:Bring DUCC scripting up to date.
This tracks update of the DUCC user and admin scripts from the original DUCC donation to current level.
issueID:UIMA-256
type:Bug
changed files:uimaj-tools/src/main/java/org/apache/uima/tools/cvd/CVD.java
uimaj-tools/src/main/java/org/apache/uima/tools/cvd/MainFrame.java
texts:CVD manual not displayed in distribution
The manual needs to be on the class path to be able to be displayed.  Modify scripts and Eclipse launch configuration accordingly.
issueID:UIMA-2560
type:Bug
changed files:
texts:Eclipse m2e complains about unmapped maven plugins
Recent versions of Eclipse m2e complain about Maven plugins in the UIMA master pom not being covered by m2e lifecycle plugins: uima-build-helper-maven-plugin maven-dependency-pluginAdd m2e metadata to the master POM to handle these.
issueID:UIMA-2561
type:Improvement
changed files:
texts:make javadocs look nicer
See http://wiki.apache.org/lucene-java/HowToGenerateNiceJavadocs
issueID:UIMA-2562
type:Improvement
changed files:
texts:Downgrade uimaFIT to Java 5
As UIMA core is still on Java 5, it would be desirable that uimaFIT is also compatible with Java 5.Investigate if uimaFIT still runs with Java 5 or can be downgraded to Java 5 without significant effort and without loss of functionality.
issueID:UIMA-2563
type:Improvement
changed files:
texts:Downgrade TextMarker to Java 5
Some of the TextMarker projects do not compile with Java SDK 1.5. Investigate the compile errors and replace the Java 1.6 code.
issueID:UIMA-2564
type:Bug
changed files:
texts:Modify uima-as pom to depend on uima 2.4.1-SNAPSHOT
The trunk version of uima-as should depend on uima 2.4.1-SNAPSHOT not 2.4.0
issueID:UIMA-2565
type:Bug
changed files:uimaj-tools/src/main/java/org/apache/uima/tools/cvd/AnnotationDisplayCustomizationFrame.java
uimaj-tools/src/main/java/org/apache/uima/tools/cvd/MainFrame.java
uimaj-tools/src/main/java/org/apache/uima/tools/cvd/tsview/MainFrame.java
uimaj-tools/src/main/java/org/apache/uima/tools/docanalyzer/DocumentAnalyzer.java
uimaj-tools/src/main/java/org/apache/uima/tools/cvd/AnnotationDisplayCustomizationFrame.java
uimaj-tools/src/main/java/org/apache/uima/tools/cvd/MainFrame.java
uimaj-tools/src/main/java/org/apache/uima/tools/cvd/tsview/MainFrame.java
uimaj-tools/src/main/java/org/apache/uima/tools/docanalyzer/DocumentAnalyzer.java
uimaj-tools/src/main/java/org/apache/uima/tools/cvd/AnnotationDisplayCustomizationFrame.java
uimaj-tools/src/main/java/org/apache/uima/tools/cvd/MainFrame.java
uimaj-tools/src/main/java/org/apache/uima/tools/cvd/tsview/MainFrame.java
uimaj-tools/src/main/java/org/apache/uima/tools/docanalyzer/DocumentAnalyzer.java
uimaj-tools/src/main/java/org/apache/uima/tools/cvd/AnnotationDisplayCustomizationFrame.java
uimaj-tools/src/main/java/org/apache/uima/tools/cvd/MainFrame.java
uimaj-tools/src/main/java/org/apache/uima/tools/cvd/tsview/MainFrame.java
uimaj-tools/src/main/java/org/apache/uima/tools/docanalyzer/DocumentAnalyzer.java
texts:uimaj-core doesn&#39;t build on JDK 7
uimaj-core doesn't build on JDK 7. It looks like inner classes are preferred over imported classes in JDK 7, hence there are errors when the type Type is used in subclasses of AWT Window which contains Window.Type.Aparrently, Tomasso has set up a UIMA build with JDK 7 on Jenkins which reproduces this problem. I couldn't find any issue about it though.Is there any particular reason why this has not been fixed yet?
issueID:UIMA-2566
type:Task
changed files:
texts:Upgrade Solrcas to use Solr 3.6.2
Upgrade Solrcas to use Apache Solr 3.6.2
issueID:UIMA-2568
type:Improvement
changed files:
texts:Redesign Eclipse Update Site for P2 and Maintainability
We have several projects that use Eclipse features and their associated plugins: uimaj-sdk: the set of basic plugins, like the Component Descriptor Editor, the Pear packager, the Eclipse Debug support, base runtime, etc. uima-as: adds support for the deployment descriptor to the Component Descriptor Editor cas-editor (currently packaged as part of the uimaj-sdk) textmarker----------The Update site manages various versions of these, and also supplies a top level "categorization" of these.  The categorization is supplied (currently) in the top level "site.xml" file.  In the P2 layout, this is provided by thecategory.xml file (there's an editor in Eclipse to create / maintain this).We currently are using the categories: uima-tooling-and-runtimes uima-as-toolingConvert to an approach which has multiple update sites, bound togetherby one top-level aggregate update site.  This site lists thesub-sites; the Eclipse (P2) install support reads this, finds the sub-sites,reads them, and aggregates all of this into a seamless set of menus, as if all of these sub-sites had been put together.  This design choice is taken to improve future maintenance.  For example, to update the textmarker, only that sub-site would need updating.Make the subsites just be subdirectories of the published composite update site.The "categories" can be cross-cutting, across sub-update-sites.  For instance, if we continue to have the category uima-tooling-and-runtimes then a sub-update-site might categorize some of its features here.Given that Eclipse has had support for P2 install formats since 2008, drop the no-longer used site.xml and digest.zip files.Convert the uimaj-eclipse-update-site to build a "subsite" for the compositesite, in the P2 style. Change the build steps to use the p2 style Ant tasks, as pioneered by Peter.  Change the build to fetch the entire set of versions, so the P2 builders can do their work with the complete set.Delete non-packed artifacts that have corresponding packed ones to reduce the size requirements. Add a new project, builds/trunk/eclipse-composite-update-site, based on the eclipse-packagings project. Updates to this would only be needed when the composite structure is changed.  Make this reference (initially)two sub-update-sites - the uimaj-eclipse-update-site, and a new update sitefor the uima-as project.  TextMarker would be a third update site that will be added once it's released.Change the uima-as project to add a new update site for it, which will "add"the deployment editor feature, in the P2 form.Update the build/parent-pom to change the update site build to use the new P2 tooling, to share consistent build and configuration setups across multiple update sites.
issueID:UIMA-2569
type:Bug
changed files:
texts:JSR47Logger_implTest fails with JDK 7 on builds.apache.org
There is a test failure when building uimaj on the Apache Jenkins using JDK 7:junit.framework.AssertionFailedError at junit.framework.Assert.fail(Assert.java:47) at junit.framework.Assert.assertTrue(Assert.java:20) at junit.framework.Assert.assertTrue(Assert.java:27) at org.apache.uima.util.impl.JSR47Logger_implTest.testLogWrapperCreation(JSR47Logger_implTest.java:60)---60:     Assert.assertTrue(uimaLogger.isLoggable(Level.INFO));Cannot reproduce that failure locally in Eclipse nor on the command line under OS X with:Java version "1.7.0_10"Java(TM) SE Runtime Environment (build 1.7.0_10-b18)Java HotSpot(TM) 64-Bit Server VM (build 23.6-b04, mixed mode)
issueID:UIMA-257
type:Bug
changed files:uimaj-tools/src/main/java/org/apache/uima/tools/docanalyzer/PrefsMediator.java
uimaj-tools/src/main/java/org/apache/uima/tools/docanalyzer/PrefsMediator.java
texts:Document Analyzer sometimes names style map file incorrectly
Open Document Analyzer.  Type in the location of an AE descriptor file (don't use the file selector).  Click Run.  On results dialog click Edit Style Map.  Change a color.  Click Save.  This writes a file into the working directory called "StyleMap.xml", which is not right.  The style map file name is supposed to be formed from the AE descriptor name.
issueID:UIMA-2571
type:Task
changed files:
texts:Update DUCC common and transport
Update the DUCC common and transport projects to current level.
issueID:UIMA-2572
type:Task
changed files:
texts:update ducc Job Driver
Update to current level.
issueID:UIMA-2573
type:Task
changed files:
texts:update ducc Orchestrator
Update Orchestrator to current level.
issueID:UIMA-2574
type:Task
changed files:
texts:update ducc Web Server
Update Web Server to current level.
issueID:UIMA-2575
type:Task
changed files:
texts:Update DUCC CLI to current level
Update DUCC CLI project to most current level.
issueID:UIMA-2576
type:Task
changed files:
texts:Update DUCC Resource Manager component to current level.
Bring the RM component to the most current level.
issueID:UIMA-2577
type:Task
changed files:
texts:Update DUCC Service Manager component to current level.
Bring the DUCC Service manager up to the most current level.
issueID:UIMA-2578
type:Task
changed files:
texts:Update ducc_ling to current level.
Update the setuid-root helper ducc_ling to the current level.
issueID:UIMA-2579
type:Task
changed files:
texts:Update DUCC agent

issueID:UIMA-258
type:Improvement
changed files:
texts:improve names of the UIMA documentation PDF files
Maybe we can improve the names of our pdf files. They should at least contain UIMA in the file name. If someone copies the files from theUIMA install directory to another place, the names are not related to UIMA.
issueID:UIMA-2580
type:Task
changed files:
texts:Update DUCC process manager to the latest level

issueID:UIMA-2581
type:Improvement
changed files:
texts:Redesign TextMarker Eclipse Update Site for P2 and Maintainability
Adapt the build process of the TextMarker update site to the new approach of UIMA-2568
issueID:UIMA-2582
type:Improvement
changed files:
texts:TextMarker Workbench for Eclipse 4
There are some reports that the TextMarker Workbench does not work in Eclipse 4. The plugins of the TextMarker Workbench depend on DLTK 3.0 and will therefore probably only work correctly in Eclipse 3.7 or compatible versions. Investigate which changes need to be applied for DLTK 4.0 and decide if both versions of Eclipse can be supported.
issueID:UIMA-2583
type:Task
changed files:
texts:Remove webserver open source jars from uima-ducc project
Remove opensource jars from Duccs SVN projects. This specifically applies to Jetty. We will still maintain javascript artifacts like cluetip, DataTables, jgrowl, jquery, navigation, and sorttable. Ducc has been tested with particular versions of the above. We need to keep them in the svn in case these versions are no longer available for download. Also, some of these scripts are maintained by websites which may disappear at some point.
issueID:UIMA-2584
type:Task
changed files:
texts:Build post-install scripting.
Create post-installation scripting.   &#8211; build ducc_ling in installation environment   &#8211; build webserver keystore   &#8211; verify activeMQ      Also, in support of UIMA-2585 this scripting sets up DUCC "auto-management"      of the ActiveMQ broker.   &#8211; verify installation environment as necessary pre-requisites
issueID:UIMA-2585
type:Task
changed files:
texts:Modify DUCC build scripts to include AMQ 5.6 in a distribution
Add AMQ 5.6 to the DUCC tar ball. Add it to ducc_runtime/activemq dir
issueID:UIMA-2586
type:Improvement
changed files:
texts:@ExternalResource - key should default to name of annotated field instead of the field type name
While analyzing some comments on uimaFIT recently on the UIMA users mailing list, it occurred to me that the default value for "key" should probably be the name of the annotated field, not the name of the type of the annotated field. That means  public static final String FOO_KEY = "foo";  @ExternalResource(key = FOO_KEY)  private Foo foo;could be written as simply  @ExternalResource  private Foo foo;However, this would mean that   bindResource(desc, DummyResource.class);wouldn't work anymore, because this kind of binding relies on the fact that the key defaults to the field type name. I think though, that this is a rather rare case.Btw. the UIMA mailing list post is: http://mail-archives.apache.org/mod_mbox/uima-user/201103.mbox/%3cloom.20110321T183824-248@post.gmane.org%3eGoogle Code Issue: https://code.google.com/p/uimafit/issues/detail?id=71
issueID:UIMA-2587
type:Improvement
changed files:
texts:@ConfigurationParameter - name should default to name of annotated field without class name
Currently the name of an annotated field defaults to classname + "." + field. It should only default to "field".My code is littered with lines like:public static final String PARAM_SOME_PARAMETER = "someParameter";@ConfigurationParameter(name = PARAM_SOME_PARAMETER)private String someParameter;It would be nice to be able write something like:@ConfigurationParameterprivate String someParameter;AnalysisEngine ae = createPrimitive(MyAE.class, "someParameter", "someValue");More discussion on Google Code: https://code.google.com/p/uimafit/issues/detail?id=70
issueID:UIMA-2588
type:Improvement
changed files:
texts:Move internal API into a separate package
uimaFIT contains several classes meant only for internal use, e.g. the legacy support API and places where it hooks into. These classes should be marked accordingly and be moved into a separate package.
issueID:UIMA-2589
type:Bug
changed files:
texts:TextMarker Bug: cancel script execution
I am not able to cancel running a script on a collection of documents; my cancel request is ignored.
issueID:UIMA-259
type:Improvement
changed files:
texts:add an overview HTML document with links to the different HTML book
add an index.html document to the html doc root directory that links all available html documentation books.
issueID:UIMA-2590
type:Improvement
changed files:
texts:Placing the rat plugin into the normal build procedure
Currently, the rat Maven plugin is run only in the apache-release plugin. How about placing this into the regular build or at least in a separate profile so that Jenkins builds can be made to fail on license problems without running the rest of the release-specific actions?
issueID:UIMA-2591
type:New Feature
changed files:
texts:Provide ability to cancel an individual DUCC Job Process
Presently, a DUCC Job may be unable to make forward progress (including termination) due to a Job Process &#91;JP&#93; that was dispatched to an Agent that is no longer communicating.  The only way to rescue this Job (without recylcing DUCC itself) is to have the Agent start reporting again, which may not be feasible (for example a HW problem has caused the system to crash and precludes system boot and therefore Agent from running).Provided here is the ability to cancel a particular JP, thus making any and all incomplete Work Items previously dispatched to that JP re-deployable elsewhere.The DUCC CLI is enhanced to provide the --dpid flag to the job cancel command.Note well:  if there is any possibility that the target JP is active but the Agent is not, then this flag should not be used, so as to avoid the possibility of the same Work Item being processed by two JPs simultaneously.
issueID:UIMA-2592
type:Task
changed files:
texts:Re-do uima-as release to remove any compiled things from source distribution
Per discussion here: http://s.apache.org/MUZ need to repackage things so that the source distribution doesn't contain non-source artifacts (e.g. Active MQ Jars).
issueID:UIMA-2593
type:Bug
changed files:
texts:RM: Resource Manager mishandling dead node with Work Items in Limbo
If a node dies with a work-item that is starting but not confirmed so it goes into Limbo, RM continuously allocates a new node until the pool is exhausted.Correct behavior is for RM to allocate only sufficient nodes to make up for the dead one, based on remaining work.To reproduce, start a small cluster and fire off a job with a couple hundred short (5-10 second) work items.  Once all nodes are full issue SIGSTOP to one agent and JP.  This should cause at least one WI to go into limbo.  When the heartbeat counter says the node is dead we expect to see the errant behavior start.
issueID:UIMA-2594
type:Task
changed files:
texts:SM: Publish service state for the web server.
State is currently available via query to SM.  SM should start publishing so the WebServer and other interested parties can show correct information without polling.
issueID:UIMA-2595
type:Task
changed files:
texts:TEST: Add system test analytic.
The system test CR, AE, and sample job specification need to be added to DUCC.
issueID:UIMA-2596
type:Bug
changed files:
texts:Add some DUCC project resources to svn:ignore
Add .project .classpath /target /settings to svn:ignore
issueID:UIMA-2597
type:Improvement
changed files:
texts:Job Driver (JD) jd.error.log should include Exception stack trace for each work item that fails, if available.
Presently, Job Driver (JD) does not record Exception stack trace associated with failing work item.
issueID:UIMA-2598
type:Technical task
changed files:
texts:uimaFIT meta data file pointing to the location of XML descriptors
A mechanism similar to the META-INF/org.uimafit/types.txt file should be used to point to XML descriptors of components. A well-known location of such a pointer file is beneficial for the discovery of components as otherwise all XML files in a JAR would need to be scanned and tested if they are UIMA XML descriptors.
issueID:UIMA-2599
type:Technical task
changed files:
texts:Fill description of component and parameters from JavaDoc
Since the maven plugin runs at at build time and has access to the sources, this is a unique opportunity to extract descriptions of components and parameters from JavaDoc. The @ConfigurationParameter annotation provides for a description, but I always found it inconvenient to maintain the description twice, once in JavaDoc and once in the annotation. uimaFIT currently has no support for component descriptions.Often, the JavaDoc in uimaFIT components is not added do the parameter variable, but rather to the parameter name constant. So auto-completion in the IDE is use on PARAM_<ctrl-space>, it lists all the parameters along with their explanation. /** * A user-definable value. */public static final String PARAM_VALUE = "value";@ConfigurationParameter(name=PARAM_VALUE)private String value;For this reason, the maven plugin should support looking for parameter documentation not on a field, but rather look for a constant field in the component that starts with PARAM and has as value the name of the field - if such a constant is found, its JavaDoc should be used.
issueID:UIMA-26
type:Bug
changed files:uimaj-tools/src/main/java/org/apache/uima/tools/AnnotationViewerMain.java
uimaj-tools/src/main/java/org/apache/uima/tools/AnnotationViewerMain.java
uimaj-tools/src/main/java/org/apache/uima/tools/AnnotationViewerMain.java
uimaj-examples/src/main/java/org/apache/uima/examples/cpe/PersonTitleDBWriterCasConsumer.java
uimaj-examples/src/main/java/org/apache/uima/tutorial/DateAnnot.java
uimaj-examples/src/main/java/org/apache/uima/tutorial/DateTimeAnnot.java
uimaj-examples/src/main/java/org/apache/uima/tutorial/Meeting.java
uimaj-examples/src/main/java/org/apache/uima/tutorial/RoomNumber.java
uimaj-examples/src/main/java/org/apache/uima/tutorial/SentenceAnnot.java
uimaj-examples/src/main/java/org/apache/uima/tutorial/TimeAnnot.java
uimaj-examples/src/main/java/org/apache/uima/tutorial/UimaAcronym.java
uimaj-examples/src/main/java/org/apache/uima/tutorial/UimaMeeting.java
uimaj-examples/src/main/java/org/apache/uima/tutorial/WordAnnot.java
texts:Incorrect paths in example descriptors and the adjustExamplePaths scripts
Fix these to account for the fact that examples are no longer under the "docs" directory.Also "IBM" should be removed from paths (i.e. c:\Program Files\IBM\uima).
issueID:UIMA-260
type:Task
changed files:
texts:Set env vars in setUimaClasspath and the Eclipser run configs
To support runnin C++ annotators out-of-the-box, need to set environment vars in setUimaClasspath and our Eclipse run configs.To account for Windows, *nix, and Mac we actually need to set threevariables: PATH, LD_LIBRARY_PATH, and DYLD_LIBRARY_PATH.To PATH we'd append%UIMA_HOME%/uimacpp/bin:%UIMA_HOME%/uimacpp/examples/tutorial/srcTo the latter two we'd append$UIMA_HOME/uimacpp/lib:$UIMA_HOME/uimacpp/examples/tutorial/src
issueID:UIMA-2600
type:Technical task
changed files:
texts:Fill vendor, version, etc. from Maven project
The maven plugin has access to the version and vendor information in the POM. If the values in the descriptor generated by uimaFIT are default values such as "generated by uimafit" or "unknown", the Maven plugin should replace this information with the data in the POM (if set).
issueID:UIMA-2601
type:New Feature
changed files:
texts:TextMarker: Option to clear the output folder
I would like to have an option to clear the output folder before script execution.
issueID:UIMA-2602
type:Bug
changed files:
texts:TextMarker: Complete definition of typelist expression missing in documentation
Typelists can be defined by, e.g., "{TYPE1, TYPE2}", which is not part of  the documentation.
issueID:UIMA-2603
type:Bug
changed files:uimaj-ep-cas-editor-ide/src/main/java/org/apache/uima/caseditor/ide/DefaultCasDocumentProvider.java
texts:CAS Editor: Inlined option for typesystem selection broken
The inline option to select the typesystem in the CasEditor is not working correctly.This problem occurred when the preference "Load CAS leniently" is activated and the preference "Use the previously selected type system to open a CAS" is deactivated.
issueID:UIMA-2604
type:Bug
changed files:
texts:TextMarker: Copy/paste in editor duplicates clipboard content
The problem occurs when the content is pasted at the end of a rule.
issueID:UIMA-2606
type:Bug
changed files:
texts:ducc_cancel works on other user&#39;s jobs
I accidentally cancelled Ben's 22649
issueID:UIMA-2607
type:New Feature
changed files:
texts:New annotation for component metadata
uimaFIT has no annotation equivalent of ResourceMetaData. Meta data for vender, version, description, etc. on a component level cannot be added to classes.This is a prerequisite for UIMA-2599 and UIMA-2600.
issueID:UIMA-261
type:Bug
changed files:
texts:In Glossary section of docs, linked glossary terms are not rendered.
This causes several glossary definitions to be unreadable.
issueID:UIMA-2610
type:Technical task
changed files:
texts:Report and fail build if meta data is missing
Add an option to fail the build in the "generate" goal if meta data is missing.First process all classes, generate a report on what is missing and then fail. Using the report it should be possible to locate and fix all missing meta data.The meta data to be checked are parameter descriptions and ResourceMetaData information, possibly with the exception of "copyright" because there is no good source for that (yet) and it's still generally empty.
issueID:UIMA-2611
type:Bug
changed files:
texts:"truncated class" error sometimes during incremental builds
Sometimes during incremental builds, a "truncated class" error is generated in Eclipse. Possibly a multi-threading issue.Execution default of goal org.apache.uima:uimafit-maven-plugin:2.0.0-SNAPSHOT:enhance failed: An API incompatibility was encountered while executing org.apache.uima:uimafit-maven-plugin:2.0.0-SNAPSHOT:enhance: java.lang.ClassFormatError: Truncated class file-----------------------------------------------------realm =    plugin>org.apache.uima:uimafit-maven-plugin:2.0.0-SNAPSHOTstrategy = org.codehaus.plexus.classworlds.strategy.SelfFirstStrategyurls[0] = ...Maven/repository/org/apache/uima/uimafit-maven-plugin/2.0.0-SNAPSHOT/uimafit-maven-plugin-2.0.0-SNAPSHOT.jarurls[1] = ...Maven/repository/org/apache/uima/uimafit-legacy-support/2.0.0-SNAPSHOT/uimafit-legacy-support-2.0.0-SNAPSHOT.jarurls[2] = ...Maven/repository/org/apache/uima/uimaj-core/2.4.0/uimaj-core-2.4.0.jarurls[3] = ...Maven/repository/org/uimafit/uimafit/1.4.0/uimafit-1.4.0.jarurls[4] = ...Maven/repository/commons-lang/commons-lang/2.6/commons-lang-2.6.jarurls[5] = ...Maven/repository/org/apache/uima/uimaj-tools/2.4.0/uimaj-tools-2.4.0.jarurls[6] = ...Maven/repository/org/apache/uima/uimaj-cpe/2.4.0/uimaj-cpe-2.4.0.jarurls[7] = ...Maven/repository/org/apache/uima/uimaj-adapter-vinci/2.4.0/uimaj-adapter-vinci-2.4.0.jarurls[8] = ...Maven/repository/org/apache/uima/jVinci/2.4.0/jVinci-2.4.0.jarurls[9] = ...Maven/repository/org/apache/uima/uimaj-document-annotation/2.4.0/uimaj-document-annotation-2.4.0.jarurls[10] = ...Maven/repository/org/springframework/spring-core/3.1.2.RELEASE/spring-core-3.1.2.RELEASE.jarurls[11] = ...Maven/repository/org/springframework/spring-asm/3.1.2.RELEASE/spring-asm-3.1.2.RELEASE.jarurls[12] = ...Maven/repository/commons-logging/commons-logging/1.1.1/commons-logging-1.1.1.jarurls[13] = ...Maven/repository/org/springframework/spring-context/3.1.2.RELEASE/spring-context-3.1.2.RELEASE.jarurls[14] = ...Maven/repository/org/springframework/spring-aop/3.1.2.RELEASE/spring-aop-3.1.2.RELEASE.jarurls[15] = ...Maven/repository/aopalliance/aopalliance/1.0/aopalliance-1.0.jarurls[16] = ...Maven/repository/org/springframework/spring-beans/3.1.2.RELEASE/spring-beans-3.1.2.RELEASE.jarurls[17] = ...Maven/repository/org/springframework/spring-expression/3.1.2.RELEASE/spring-expression-3.1.2.RELEASE.jarurls[18] = ...Maven/repository/commons-io/commons-io/2.2/commons-io-2.2.jarurls[19] = ...Maven/repository/org/apache/uima/uimafit/2.0.0-SNAPSHOT/uimafit-2.0.0-SNAPSHOT.jarurls[20] = ...Maven/repository/org/javassist/javassist/3.16.1-GA/javassist-3.16.1-GA.jarurls[21] = ...Maven/repository/org/codehaus/plexus/plexus-component-annotations/1.5.5/plexus-component-annotations-1.5.5.jarurls[22] = ...Maven/repository/org/sonatype/sisu/sisu-inject-bean/2.3.0/sisu-inject-bean-2.3.0.jarurls[23] = ...Maven/repository/org/sonatype/sisu/sisu-guice/3.1.0/sisu-guice-3.1.0-no_aop.jarurls[24] = ...Maven/repository/org/sonatype/sisu/sisu-guava/0.9.9/sisu-guava-0.9.9.jarurls[25] = ...Maven/repository/org/sonatype/sisu/inject/guice-bean-containers/2.3.0/guice-bean-containers-2.3.0.jarurls[26] = ...Maven/repository/org/sonatype/sisu/inject/guice-bean-inject/2.3.0/guice-bean-inject-2.3.0.jarurls[27] = ...Maven/repository/org/sonatype/sisu/inject/guice-plexus-shim/2.3.0/guice-plexus-shim-2.3.0.jarurls[28] = ...Maven/repository/javax/inject/javax.inject/1/javax.inject-1.jarurls[29] = ...Maven/repository/org/sonatype/sisu/sisu-guice/3.1.0/sisu-guice-3.1.0.jarurls[30] = ...Maven/repository/org/sonatype/sisu/inject/guice-bean-reflect/2.3.0/guice-bean-reflect-2.3.0.jarurls[31] = ...Maven/repository/org/sonatype/sisu/inject/guice-bean-locators/2.3.0/guice-bean-locators-2.3.0.jarurls[32] = ...Maven/repository/org/sonatype/sisu/inject/guice-bean-binders/2.3.0/guice-bean-binders-2.3.0.jarurls[33] = ...Maven/repository/javax/enterprise/cdi-api/1.0/cdi-api-1.0.jarurls[34] = ...Maven/repository/javax/annotation/jsr250-api/1.0/jsr250-api-1.0.jarurls[35] = ...Maven/repository/org/sonatype/sisu/inject/guice-bean-scanners/2.3.0/guice-bean-scanners-2.3.0.jarurls[36] = ...Maven/repository/org/sonatype/sisu/inject/guice-bean-converters/2.3.0/guice-bean-converters-2.3.0.jarurls[37] = ...Maven/repository/org/sonatype/sisu/inject/guice-plexus-metadata/2.3.0/guice-plexus-metadata-2.3.0.jarurls[38] = ...Maven/repository/org/sonatype/sisu/inject/guice-plexus-converters/2.3.0/guice-plexus-converters-2.3.0.jarurls[39] = ...Maven/repository/org/sonatype/sisu/inject/guice-plexus-locators/2.3.0/guice-plexus-locators-2.3.0.jarurls[40] = ...Maven/repository/org/sonatype/sisu/inject/guice-plexus-binders/2.3.0/guice-plexus-binders-2.3.0.jarurls[41] = ...Maven/repository/org/sonatype/sisu/inject/guice-plexus-scanners/2.3.0/guice-plexus-scanners-2.3.0.jarurls[42] = ...Maven/repository/org/sonatype/sisu/inject/guice-plexus-lifecycles/2.3.0/guice-plexus-lifecycles-2.3.0.jarurls[43] = ...Maven/repository/backport-util-concurrent/backport-util-concurrent/3.1/backport-util-concurrent-3.1.jarurls[44] = ...Maven/repository/org/codehaus/plexus/plexus-interpolation/1.11/plexus-interpolation-1.11.jarurls[45] = ...Maven/repository/org/codehaus/plexus/plexus-utils/1.5.15/plexus-utils-1.5.15.jarurls[46] = ...Maven/repository/junit/junit/4.10/junit-4.10.jarurls[47] = ...Maven/repository/org/hamcrest/hamcrest-core/1.1/hamcrest-core-1.1.jarurls[48] = ...Maven/repository/org/eclipse/jdt/core/3.3.0-v_771/core-3.3.0-v_771.jarurls[49] = ...Maven/repository/org/eclipse/core/runtime/3.7.0/runtime-3.7.0.jarurls[50] = ...Maven/repository/org/eclipse/osgi/3.7.2/osgi-3.7.2.jarurls[51] = ...Maven/repository/org/eclipse/equinox/preferences/3.4.2/preferences-3.4.2.jarurls[52] = ...Maven/repository/org/eclipse/core/contenttype/3.4.100/contenttype-3.4.100.jarurls[53] = ...Maven/repository/org/eclipse/core/filesystem/1.3.100/filesystem-1.3.100.jarurls[54] = ...Maven/repository/org/eclipse/text/3.5.101/text-3.5.101.jarurls[55] = ...Maven/repository/org/eclipse/core/commands/3.6.0/commands-3.6.0.jarurls[56] = ...Maven/repository/org/eclipse/core/jobs/3.3.0-v20070423/jobs-3.3.0-v20070423.jarurls[57] = ...Maven/repository/org/eclipse/equinox/common/3.6.0/common-3.6.0.jarurls[58] = ...Maven/repository/org/eclipse/equinox/app/1.0.0-v20070606/app-1.0.0-v20070606.jarurls[59] = ...Maven/repository/org/eclipse/equinox/registry/3.5.101/registry-3.5.101.jarurls[60] = ...Maven/repository/org/eclipse/core/resources/3.3.0-v20070604/resources-3.3.0-v20070604.jarurls[61] = ...Maven/repository/org/eclipse/core/expressions/3.4.300/expressions-3.4.300.jarNumber of foreign imports: 4import: Entry[import org.sonatype.plexus.build.incremental from realm ClassRealm[plexus.core, parent: null]]import: Entry[import org.codehaus.plexus.util.Scanner from realm ClassRealm[plexus.core, parent: null]]import: Entry[import org.codehaus.plexus.util.AbstractScanner from realm ClassRealm[plexus.core, parent: null]]import: Entry[import  from realm ClassRealm[project>de.tudarmstadt.ukp.dkpro.core:de.tudarmstadt.ukp.dkpro.core-asl:1.5.0-SNAPSHOT, parent: ClassRealm[maven.api, parent: null]]]----------------------------------------------------- (org.apache.uima:uimafit-maven-plugin:2.0.0-SNAPSHOT:enhance:default:process-resources)
issueID:UIMA-2612
type:Improvement
changed files:
texts:Mark enhanced files to avoid processing them multiple times
Add a marker annotation (e.g. @Enhanced) to classes that have been processed using the "enhance" goal of the Maven plugin. When the plugin runs again, e.g. during an incremental build, this marker could be detected and the reprocessing could be skipped immediately. This should improve the build times in Eclipse.Since the annotation has to be in the class file, it has to be added to the uimafit module. If it was only in the uimafit-maven-plugin, the enhanced classes could not be loaded unless that module was on the classpath.... well, actually I think they could be loaded, but we've had issues with findbugs annotations that Eclipse couldn't resolve when analyzing the class file, so probably better avoid such situations (cf. https://code.google.com/p/uimafit/issues/detail?id=78).
issueID:UIMA-2613
type:Technical task
changed files:
texts:Switch from Eclipse JDT to qdox
Switch from Eclipse JDT to qdox. The latter is used in the Maven plugin tooling and is ASL licensed.http://qdox.codehaus.org/index.html
issueID:UIMA-2614
type:Improvement
changed files:
texts:DUCC webserver (WS) should display result of Terminate Job/Reservation/Service
Presently, the result of a Terminate button (aka cancel) pressed by the user is a message that the request has been made; the user must wait for an Orchestrator publication cycle (plus a web page refresh interval, if in automatic mode) to see effective results, if any.In fact the effectiveness result of the cancel is readily available to the webserver and can be fairly easily and immediately returned and displayed.
issueID:UIMA-2615
type:Task
changed files:
texts:Ducc Service Manger: Do exponential backoff of service pingers.
Frequent pinging of UIMA-AS services buy the DUCC service manager is tickling a leak in ActiveMQ resulting in ActiveMQ crashing with OutOfMemory Exceptions.  Until the underlying cause of the problem is determined and resolved, the SM will do exponential back-off of the ping rate.  New jobs dependent on services reset the affected pingers to a high-rate of ping to insure responsiveness.  The rate is then doubled up to a max of 32 minutes (the threshold for bypassing the OOM is 30 minutes).
issueID:UIMA-2616
type:Bug
changed files:
texts:Preferences reset should include Role
Preferences reset leaves role as Administrator, which is not the default.
issueID:UIMA-2617
type:Bug
changed files:
texts:DUCC webserver (WS) should use common copyright for submit reservation page

issueID:UIMA-2618
type:Bug
changed files:
texts:TextMarker: Autoformat and quantifiers
Autoformat action removes question marks and brackets from quantifiers, e.g., for "'"&#91;2,2&#93;? and &#91;2&#93;.
issueID:UIMA-2619
type:Bug
changed files:
texts:TextMarker: action "retaintype" documentation
mention that action RETAINTYPE/FILTERTYPE overwrites previous settings in the action descriptions
issueID:UIMA-262
type:Bug
changed files:
texts:CAS Visual Debugger command line parameters does not work
The CAS Visual Debugger command line parameters e.g. -exec or -text does not work for the command line scripts
issueID:UIMA-2620
type:New Feature
changed files:
texts:TextMarker: FilterType and RetainType should have atomic modification macros
At the moment the Filtertype and Retatintype lists can only be modified as a whole. It would be very beneficial if there would be the possibility to add a single tpye to the current list of filtered types, and respectively for the retained types.
issueID:UIMA-2621
type:Task
changed files:
texts:TextMarker: Improve SVN structure, project names and artifact ids
The project names and the artifact ids should be aligned to other uima projects. Do not forget to update the README file. Here is a first proposal:sandbox- uima-textmarker-- trunk (artifact id: uima-textmarker)--- uima-docbook-textmarker--- uimaj-ep-textmarker-addons--- ...--- uimaj-textmarker-core (was uimaj-textmarker with binary "uima-textmarker.jar")--- ...--- uima-textmarker-parent (if necessary)
issueID:UIMA-2622
type:Bug
changed files:
texts:DUCC Agent swap detector not working
When killing a process due to a low swap space, the agent is not checking the state the process to make sure it is still running. Due to this lack of checking, the agent is not killing processes on a machine with multiple processes and low swap space condition.
issueID:UIMA-2623
type:Bug
changed files:
texts:Ducc CLI: NPE in submit if console redirection is requested
If --process_attach_console is requested an environment variable DUCC_CONSOLE_PORT is forwarded to the remote process so it knows where to do redirection.  If there is no other env var at the time this is set up a 'null' was being inadvertently appended to the env string causing an Orchestrator crash and subsequent job failure.
issueID:UIMA-2624
type:Bug
changed files:
texts:DUCC Service Manger cli is ignoring the --autostart flag during service registration.
The SM CLI / API needs to include the --autostart state during registration.
issueID:UIMA-2625
type:Improvement
changed files:
texts:DUCC webserver (WS) should support "wait for result" in Request Reservation dialog
Presently, request is made and user is told "Pending allocation...".  Some may wish to wait (perhaps quite some time, depending on circumstances) for ultimate confirmation or rejection of reservation request.
issueID:UIMA-2626
type:Improvement
changed files:
texts:DUCC webserver (WS) Job Performance Tab shows meaningless Total for Min/Max
Instead, the row Total should be renamed WorkItem Statistics, where Min/Max indicate the shortest and longest WorkItem rather than the sum of Min/Max columns.
issueID:UIMA-2627
type:Bug
changed files:
texts:ERROR OR.OrchestratorComponent - startJob At: org.apache.uima.ducc.orchestrator.JobFactory.addEnvironment(JobFactory.java:88)
Specification sent to Orchestrator from CLI is not vetted for missing values.
issueID:UIMA-2628
type:Bug
changed files:
texts:DUCC webserver (WS) serves some pages having 2 errors: undefined function and missing file
1. only include reload plugin when DataTables is employed2. use correct path to "loading" gif file
issueID:UIMA-2629
type:Bug
changed files:
texts:DUCC orchestrator (OR) takes NPE when cancel is attempted to non-existant reservation
Orchestrator mistakenly checks for authorization against the reservation before it validates that the reservation even exists.  This order should be reversed.
issueID:UIMA-263
type:Bug
changed files:uimaj-tools/src/main/java/org/apache/uima/tools/cvd/LogFileViewer.java
uimaj-tools/src/main/java/org/apache/uima/tools/cvd/LogFileViewer.java
texts:CAS Visual Debugger shows an error message when a user tries to open the log file but not log file was written.
CAS Visual Debugger shows an error message when a user tries to open the log file but not log file was written. After clicking OK on the displayed error mesage an empty log file is displayed. So I think the error message is not necessary, just displaying an empty log file OK.
issueID:UIMA-2630
type:Improvement
changed files:
texts:DUCC webserver (WS) to employ UIMA favicon

issueID:UIMA-2631
type:Bug
changed files:
texts:Clean up code to eliminate warnings in Eclipse.
Remove unused vars, imports, dead code blocks etc.
issueID:UIMA-2632
type:Bug
changed files:
texts:DUCC webserver (WS) Jobs Page, hover over Reason = Error gives wrong rationale
Correct Reason to be: at least one error occurred.
issueID:UIMA-2633
type:Bug
changed files:
texts:missing icon license in uimaj-eclipse-feature-tools
The license shown when installing the feature should include the icon license.
issueID:UIMA-2634
type:Bug
changed files:
texts:fix license for cas editor plugins that contain svg-icon-project licensed icons to include that extra license
The plugins which contain svg-icons need to have the license for that included in the plugin JAR.  This will be fixed in the 2.4.1 release
issueID:UIMA-2635
type:Bug
changed files:
texts:Ducc&#39;s JP service wrapper loggs debug messages at INFO level
Ducc's JP service wrapper (ManagedUimaService) is logging debug messages at INFO level. This is done at regular intervals polluting the log. Change the code to log these messages at DEBUG level.
issueID:UIMA-2636
type:Improvement
changed files:
texts:Align Eclipse plugin and feature licensing with how Eclipse does it
Create the equivalent of the Eclipse user agreement for use when setting up licensing for features.
issueID:UIMA-2638
type:Bug
changed files:
texts:UIMA-AS extended tests hang when run by Jenkins
Jenkins seem to hang when running UIMA-AS extended tests. The test in question is testMultipleSyncClientsRecoveryFromBrokerStopAndRestart().
issueID:UIMA-2639
type:Bug
changed files:
texts:Validate produce undefine feature errors for every feature
All features under 'CREATE' action are marked as undefined (and generating an error) even when correct (and defined in the same file).I traced that error to:textmarker-ep-ide/src/main/java/org/apache/uima/textmarker/ide/validator/TextMarkerVarRefChecker.java:309306    private boolean findFeature(String structure, String feat) {307      boolean featureFound = false;308      if (description == null || structure == null) {309        return featureFound;310      }if the structure is null, it makes no sense to return false. I changed to 'return true') and now it works (but it doesn't detect actual undefined features, though).I'll be glad to help fix this issue for good if you have any guidance.(this error is for trunk at rev. 1442700)
issueID:UIMA-264
type:Bug
changed files:uimaj-tools/src/main/java/org/apache/uima/tools/cvd/MainFrame.java
texts:CAS Visual Debugger does not support CAS Multiplier components
CAS Visual Debugger does not support CAS Multiplier components. If such a component is loaded no results are displayed after the processing. Fixed suggestion for release 2.1: Check to operationalProperties of the loaded ae and displays an error message that such a component cannot be processed in CVD.
issueID:UIMA-2640
type:Bug
changed files:
texts:SHIFT action does not copy annotation features
The SHIFT action is really useful, but as currently implemented it creates a new annotation rather than extending the boundaries of the matched one (and re-indexing).I have a patch that copies the old features over (which I'll attach shortly), adapted from CasCopier.If the patch is not enough, at least the documentation for SHIFT needs to changed to warn about the current behavior.
issueID:UIMA-2642
type:Improvement
changed files:
texts:DUCC should provide job cancel by proxy capability
Presently, DUCC job submit provides the ability to wait for job completion before exiting via the --wait_for_completion flag, and to automatically cancel the job when ctrl-C is invoked via the --cancel_job_on_interrupt flag.  In the case where the submit+monitor CLI combination is terminated by, say, kill -9 the job is (unfortunately) not automatically canceled.To remedy this deficiency, the DUCC webserver (WS) will act as proxy to receive periodic "I am alive" requests from the submit+monitor CLI, and if these requests cease to arrive for some ducc.properties configured interval, then the job is auto-canceled.
issueID:UIMA-2643
type:Improvement
changed files:
texts:DUCC command line interface (CLI)  should eliminate use of Camel
Presently, a plethora of jars to support Camel messaging transport are required on the client side for communicating with DUCC, in particular for the job monitor to listen for orchestrator (OR) messages for extracting job state information. It would be beneficial to minimize the number of jars required on the client side while providing equivalent functionality.The job monitor is the only CLI module employing Camel presently, and the needed information can be obtained from either the webserver (WS) or orchestrator (OR) via HTTP.
issueID:UIMA-2644
type:Bug
changed files:
texts:Console redirection should tee both log file and console.
Console redirection bypasses the declared log.  We should write both log and console.  Two parts to this: ducc_ling must return the full name of the log it would have written to the CLI.  The CLI needs to capture this and tee to both console and log.
issueID:UIMA-2645
type:Bug
changed files:
texts:DUCC command line interface (CLI)  should reject job/service submission when specified logs directory is not writable
Jennifer reported seeing the following subsequent to her job submission: java.io.FileNotFoundException: /<file-path>/logs/<job-no>/job-specification.properties
issueID:UIMA-2646
type:Improvement
changed files:
texts:DUCC command line interface (CLI) removal of obsolete flags
remove: --service_broker --service_endpoint --job_broker --job_endpoint
issueID:UIMA-2647
type:Improvement
changed files:
texts:Loading TextMarker dictionaries from the classpath
While TextMarker can cope with loading its main script relative to the classpath, it can't load dictionaries from it. That feature is very useful in production enviroments.Attached is a patch that enables that. It also tries to "bubble" up the exceptions in the low level classes a little bit more (currently TextMarker "eats" a lot of exceptions, that's something most probably to be addressed in UIMA #2567).Of note: both MultiTreeWordList and TreeWordList will silently ignore their parameters (and load nothing) if it doesn't end in a "magic" extension (e.g., "txt" or "twl"). Shouldn't they throw an exception or at least log a warning? If so, that could be worth another bug report.
issueID:UIMA-2648
type:Improvement
changed files:
texts:DUCC webserver (WS) to display test mode on page banners when ducc.properties comprises ducc.runmode=Test

issueID:UIMA-265
type:Improvement
changed files:
texts:impove CAS Multiplier documentation that CAS Multipliers does not work in CVD and CPE
impove CAS Multiplier documentation that CAS Multipliers does not work in CVD and CPE. CPE is already mentioned in the documentation, but I think we should at that as NOTE (bold).CVD should also be mentioned in the documentation.What do others think?
issueID:UIMA-2650
type:Improvement
changed files:
texts:DUCC webserver (WS) should not normally record "java.io.IOException: Broken pipe" exceptions to its log file

issueID:UIMA-2651
type:Bug
changed files:
texts:UIMA-AS logs InvalidDestinationException if client terminates prematurely
When a client terminates while it has an outstanding request with UIMA-AS service, the service logs InvalidDestinationException message trying to deliver a message to a queue that no longer exists. Since clients can terminate at any time, the service should not dump a stack trace if reply queue does not exist. It should just log a single message identifying the reply queue.
issueID:UIMA-2652
type:Bug
changed files:
texts:DUCC Service manager CLI does not recognize service_linger.
This is a copy/paste bug, accidentally did not get the service_linger option into the right place to verify.  Service_linger is also inconsistent in its internal use of seconds vs milliseconds.  This Jira also covers fixing the consistency of the linger time units.
issueID:UIMA-2653
type:Bug
changed files:
texts:DUCC Scripting CLI can cause complex strings to be mis-parsed.
A complex multi-token argument such as process_jvm_args '-X100M -Dfoo' is being mis-handled and turned into three instead of two tokens when used through the DUCC python CLI.  The CLI needs to correctly (re)quote these strings before passing to the java API.
issueID:UIMA-2654
type:Bug
changed files:
texts:DUCC Services - query of invalid service causes NPE in service manager.
The query code in the SM assumed (incorrectly) that if control got that far, the service had been vetted.  It needs to check for a valid service and return an error to the CLI if one can't be found with the indicated ID.
issueID:UIMA-2655
type:Bug
changed files:
texts:DUCC webserver (WS) should not should not display unsightly "null" within Log file name or as PID on Processes tab

issueID:UIMA-2656
type:Bug
changed files:
texts:DUCC should make job process (JP) initialization progress information available on webserver

issueID:UIMA-2657
type:Bug
changed files:
texts:Uninformative hover message when DUCC job fails in CR
When an exception occurs in the CR it is reported in the JD logs but the ducc-mon hover says "job driver exception occurred: null"
issueID:UIMA-2658
type:Bug
changed files:
texts:DUCC Service Manager - Various errors receiving packets from the CLI
Must check all operations initiated from CLI for a valid service and return message if not Must distinguish between zero instances, and instances not specified, for modify subcommand.
issueID:UIMA-2659
type:Bug
changed files:
texts:TextMarker: Sequential matching is broken for incomplete partitions
When there is no seeder used for a TextMarker engine and the processed document's annotations do not form a partition (there are passages where there are no annotations in the document) rules which should match do not match any more.e.g.:"This is a test" with annotations WORD on "This", "is", "a", "test", but not on the spaces inbetween, the rule "WORD&#91;2&#93; { -> MARK(CombinedWord)};" does not fire, because there are not WORD&#91;2&#93; combinations in the document.
issueID:UIMA-266
type:Bug
changed files:uimaj-tools/src/main/java/org/apache/uima/tools/docanalyzer/PrefsMediator.java
uimaj-tools/src/main/java/org/apache/uima/tools/docanalyzer/PrefsMediator.java
texts:DocumentAnalyzer also use wrong default directory docs/examples/data
DocumentAnalyzer also use wrong default directory docs/examples/data. The correct data directory is examples/data.
issueID:UIMA-2660
type:Bug
changed files:
texts:TextMarker: duplicate token in minmax strategy
The actual match of rule elements with a min/max quantifier sometimes duplicates the last matched token. See attached screenshot for an example.
issueID:UIMA-2661
type:Bug
changed files:
texts:DUCC Orchestrator should connect to ducc.broker.hostname, not ducc.broker.name

issueID:UIMA-2662
type:Bug
changed files:
texts:DUCC Service Manager doesn&#39;t honor --service_request_endpoint
The --service_request_endpoint parameter to the CLI is ignored.  As well, if this parameter is given, it must be compared to the service endpoint extracted from the specified UIMA DD xml and the CLI must fail.
issueID:UIMA-2663
type:Bug
changed files:
texts:DUCC command line interface (CLI)  needs to mkdirs before testing for writable log directory

issueID:UIMA-2664
type:Bug
changed files:
texts:Reason for job submission failure should be logged as well as shown on ducc-mon
Job failed and ducc-mon indicated "services unavailable" but log files did not show the cause
issueID:UIMA-2665
type:Bug
changed files:
texts:DUCC Service Manager - Job referencing non-existent service allowed to run.
If a job references a non-existent service the pinger presents errors but the job is allowed to run.  SM should wait a bit to see if the problem clears up and if not, fail the job.
issueID:UIMA-2666
type:Bug
changed files:
texts:ducc-mon reports as "Run fails" processes that fail in init
I would expect a Run failure to trigger some retries ... see job 66
issueID:UIMA-2667
type:Bug
changed files:
texts:DUCC Resource Manager defragmentation problem
During defrag a collection of candidate "rich" users and "rich" jobs is made, which forms a collection of candidate shares to evict to make space for NEEDY jobs.  There is a case where a "rich" job may be very rich and yet allocated entirely on machines unsuitable for any NEEDY job.  The bug to fix, is to properly identify this situation and remove the unsuitable shares from consideration.
issueID:UIMA-2668
type:Bug
changed files:
texts:Fix NullPointerException in UIMA-AS aggregate
When running a complex uima-as aggregate with inner async aggregates with CMs the uima-as throws NPE. This is due to a bug in an internal CAS accounting which determines when a CAS can be returned back to a client.
issueID:UIMA-2669
type:Bug
changed files:
texts:UIMA-AS service doesnt seem the exit the JVM on <stop> request
The UIMA-AS used to exit the jvm when a user typed 's' or 'q' in the shell connected to service's input stream. This was a convenient mechanism to stop a service launched on a remote machine.
issueID:UIMA-2671
type:New Feature
changed files:uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/AnnotationEditor.java
uimaj-ep-cas-editor-ide/src/main/java/org/apache/uima/caseditor/ide/DefaultCasDocumentProvider.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/AbstractDocument.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/AnnotationDocument.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/AnnotationEditor.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/DocumentUimaImpl.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/ICasDocument.java
texts:Display applied type system in CAS Editor
It would be really useful if the user can somehow check, which type system was used to open the CAS. What about adding the name of the applied type system to the tooltip of the editor title?
issueID:UIMA-2672
type:New Feature
changed files:
texts:Ruta: Enable direct import of uimaFIT analysis engines
Currently, only analysis engines imported by referencing the descriptor file are available. It would be useful, if uimaFIT analysis engines can directly imported into a Ruta script by referencing the actual implementation.
issueID:UIMA-2673
type:Improvement
changed files:
texts:Should be able to deploy a CPE as a UIMA-AS service
Currently UimaUtils casts each descriptor's ResourceSpecifier to a AnalysisEngineDescription but uses it as a ResourceCreationSpecifier ... if the cast were changed we could use a CR in place of the CM and with a single-cas CR for the JD have a simple replacement for the CPE.
issueID:UIMA-2674
type:New Feature
changed files:
texts:DUCCs JP Service Wrapper Should Notify Agent Before Exiting  the JVM
The uima-as (JP) is currently setup to exit the jvm when it detects an Exception thrown by the AE. To the agent, such exit looks like a process has Croaked. The agent has no idea if the process croaked due to the service exiting due to an exception or due to someone (including the OS) killing the process. Modify the service wrapper to notify the agent before exiting the jvm. This feature requires changes in the uima-as.
issueID:UIMA-2675
type:New Feature
changed files:
texts:UIMA-AS controller should notify the service wrapper before exiting the jvm
The uima-as error handler may terminate the service wrapper if the error threshold is exceeded. Modify the uima-as controller code to notify the service wrapper before terminating the jvm due to excessive errors.
issueID:UIMA-2676
type:Improvement
changed files:
texts:DUCC webserver (WS) Services presentation improvements
1. Main menu one button direct access to services registry page2. Click Id on registry page for navigation to corresponding deployments and specification page
issueID:UIMA-2677
type:Bug
changed files:uimaj-core/src/main/java/org/apache/uima/internal/util/rb_trees/IntArrayRBT.java
texts:IntArrayRBT iterator() broken
The internal class, IntArrayRBT, includes an iterator() method.  This is not currently used (until now, when I started using it in some new stuff).  It is broken in that it positions the iterator at node 0, and then the next method fails to move this to the first node on the first call.
issueID:UIMA-2678
type:Improvement
changed files:
texts:Small documentation errata for TextMarker documentation
Here are some small typos and other issues I noted while going through the TextMarker documentation:(page 7, Section 1.4)BLOCK(English) Document{FEATURE("language", "en")} {// rules for english documents}BLOCK(English) Document{FEATURE("language", "de")} {// rules for german documents}--> shouldn't it be?BLOCK(English) Document{FEATURE("language", "en")} {// rules for english documents}BLOCK(German) Document{FEATURE("language", "de")} {// rules for german documents}(page 8)"The next exmaple" -> "The next example"(page 9)”The first rule deletes all text covered by annotations of the type “DEL”." -> type "Date"?"The last rule finally performs all of these changes in an additonal view called“modified”." -> this look unclear from the example, it looks to be missing some parameters. It is all clear after reading Sect. 1.5.4, you might want to add a link to that section.(page 10)neccessary -> necessary  (2 times)(page 11)neccessary -> necessary(page 12)extact -> exact(page 21)the ampersant expression example is wrongly rendered(page 23, Section 2.3.4)shouldn't W+? CW on "123 456 small small Big" match no only "small small Big" (as mentioned in the text) but also "small Big"?(page 54)A block declaration always starts with the keyword “BLOCK” , followed by the identifier of the block within brackets. --> within parenthesis? RCULRY -> RCURLY (page 58) the example file is separated by semi-colons, but the text refer to it as a comma-separated file. (page 77) Add the diagram at http://tmwiki.informatik.uni-wuerzburg.de/attach/TextRulerIntroduction/TextRulerProcessModel.PNG ? (page 78) Table 3.4, the publication column is off by 1.
issueID:UIMA-2679
type:New Feature
changed files:
texts:Support legacy uimaFIT META-INF location
For the Apache version, the META-INF location should be changed to META-INF/org.apache.uima.fit, but the old META-INF/org.uimafit should still be supported via the legacy plugin.
issueID:UIMA-268
type:Task
changed files:
texts:Update the UIMA Status page prior to 1st release to current level

issueID:UIMA-2680
type:Bug
changed files:
texts:WS javascript interaction for scroll pages not efficient
When user preference is "scroll", the javascript calls for refresh of data twice (in quick succession) each update interval, when of course once should be sufficient.
issueID:UIMA-2681
type:Bug
changed files:
texts:DUCC orchestrator (OR) fails to include environment for ducclets (sometimes known as arbirtary processes)
Without a fix here, you're out of luck if you need the specified ENV for a ducclet.
issueID:UIMA-2682
type:Task
changed files:
texts:Clean up and complete DUCC documentation

issueID:UIMA-2683
type:Bug
changed files:
texts:Remove remaining references to "org.uimafit"
Remove remaining references to "org.uimafit"
issueID:UIMA-2684
type:Bug
changed files:
texts:DUCC webserver (WS) should not present start/stop buttons for non-Registered Services on Services page

issueID:UIMA-2686
type:Task
changed files:
texts:Derive DUCC_HOME  from the location of executable jars in CLI.
The scripting currently derives the location of DUCC_HOME based on where it is invoked from.  When using the API the invoked code should do the same thing, based on where it is invoked from.A search-order is established:  1) search environment for DUCC_HOME  2) look in system properties (-DDUCC_HOME)  3) infer DUCC_HOME from the location of the jar file the API is invoked fromIf DUCC_HOME is not found in any of these places, throw and fail.
issueID:UIMA-2687
type:Task
changed files:
texts:Proper API and CLI for submitting arbitrary process.

issueID:UIMA-2688
type:Improvement
changed files:
texts:DUCC orchestrator (OR) should use a common incremental numbering system for Jobs, Reservations and Services
This eliminates potential conflicts when combining different elements for identification and display.
issueID:UIMA-2689
type:Bug
changed files:
texts:DUCC webserver (WS) auto-cancel feature should not be enabled for "shadows"
The auto-cancel feature is enabled when --cancel_on_interrupt flag is specified at submit time.  When this flag is specified, the WS expects to receive regular pings from the submitter, which are automatically supplied by the associated monitor.  If pings are absent for too long (config'd in ducc.properties via ducc.ws.job.automatic.cancel.minutes) the WS proceeds to cancel the job.It is possible to run multiple WS instances (aka "shadows").  Since only one is ping'd, the other(s) will detect a ping timeout and incorrectly cancel the job.The solution is to have only the "primary" WS as the monitor+canceler.  This is determined by matching the specification in ducc.properties for WS host:port with that of the actual host:port of the WS.  Only if these match will the auto-cancel code be enabled in the WS.To bypass this problem until fix is delivered, run only a single WS.
issueID:UIMA-269
type:Bug
changed files:
texts:Test PEAR Files don&#39;t run
This doesn't seem to impact the test case, but the example pear files in uimaj-tools/src/test/resources/pearTests/pearMergerTests can't be run.  They aren't compatible with the latest Apache UIMA code, for example they still refer to org.apache.uima.jcas.impl.JCas, even though that has since been refactored and JCas moved to org.apache.uima.jcas.JCas.  These should be fixed using the migration tool, so that they can be used for other testing purposes.
issueID:UIMA-2690
type:Task
changed files:
texts:Updates to insure stand-alone DUCC execution on OSX platform
The OSX environment is a bit different from Linux.  Scripting updates to deal with issues such as /proc, paths to certain system utilities, and regex handling are needed.
issueID:UIMA-2691
type:Improvement
changed files:
texts:DUCC webserver (WS) support for "managed reservations"
A "managed reservation" is implemented as a DUCC service that comprises any executable.  It is a one-step replacement for 1. making a reservation then 2. launching an arbitrary executable into the assigned share.Initial support comprises displaying managed reservations on the DUCC Reservation page, and allowing authorized cancel thereof via an associated Terminate button.
issueID:UIMA-2692
type:Task
changed files:
texts:Include memory size for reservations in Resource Manager&#39;s logged scheduling map.

issueID:UIMA-2693
type:Bug
changed files:uimaj-core/src/main/java/org/apache/uima/analysis_engine/metadata/impl/AnalysisEngineMetaData_impl.java
uimaj-core/src/main/java/org/apache/uima/resource/ExternalResourceDescription.java
uimaj-core/src/main/java/org/apache/uima/resource/metadata/impl/MetaDataObject_impl.java
uimaj-core/src/main/java/org/apache/uima/resource/metadata/Capability.java
uimaj-core/src/main/java/org/apache/uima/resource/metadata/ExternalResourceBinding.java
uimaj-core/src/main/java/org/apache/uima/resource/metadata/FsIndexDescription.java
uimaj-core/src/main/java/org/apache/uima/resource/metadata/Import.java
uimaj-core/src/main/java/org/apache/uima/resource/metadata/TypeDescription.java
uimaj-core/src/main/java/org/apache/uima/resource/metadata/TypePriorityList.java
uimaj-core/src/main/java/org/apache/uima/resource/metadata/TypeSystemDescription.java
uimaj-core/src/main/java/org/apache/uima/resource/metadata/impl/Capability_impl.java
uimaj-core/src/main/java/org/apache/uima/resource/impl/CustomResourceSpecifier_impl.java
uimaj-core/src/main/java/org/apache/uima/internal/util/CommandLineParser.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/impl/AnalysisEngineDescription_impl.java
texts:Set up uimaFIT web-presence at Apache
With the project being hosted at the Apache Foundation, there should be some form to host the web-presence as well. In particular a landing page for uimaFIT and something needs to be done about the documentation.When this is done, the "Availability" section of the README file in the uimaFIT root needs to be updated.
issueID:UIMA-2694
type:Bug
changed files:uimaj-adapter-vinci/src/main/java/org/apache/uima/adapter/vinci/util/UimaSaxVinciFrameBuilder.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/cpm/container/NetworkCasProcessorImpl.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/ui/FlowSection.java
uimaj-examples/src/main/java/org/apache/uima/examples/casMultiplier/SimpleTextSegmenter.java
uimaj-examples/src/main/java/org/apache/uima/examples/cpe/InlineXmlCasConsumer.java
uimaj-examples/src/main/java/org/apache/uima/examples/cpe/XCasWriterCasConsumer.java
uimaj-examples/src/main/java/org/apache/uima/examples/xmi/XmiEcoreCasConsumer.java
uimaj-examples/src/main/java/org/apache/uima/examples/xmi/XmiWriterCasConsumer.java
uimaj-tools/src/main/java/org/apache/uima/tools/components/InlineXmlCasConsumer.java
uimaj-tools/src/main/java/org/apache/uima/tools/components/XCasWriterCasConsumer.java
uimaj-tools/src/main/java/org/apache/uima/tools/components/XmiWriterCasConsumer.java
uimaj-core/src/main/java/org/apache/uima/ResourceFactory.java
uimaj-core/src/main/java/org/apache/uima/UIMAFramework.java
uimaj-core/src/main/java/org/apache/uima/UIMA_IllegalStateException.java
uimaj-core/src/main/java/org/apache/uima/UIMA_UnsupportedOperationException.java
uimaj-core/src/main/java/org/apache/uima/analysis_component/CasMultiplier_ImplBase.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/AnalysisEngine.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/metadata/AnalysisEngineMetaData.java
uimaj-core/src/main/java/org/apache/uima/cas/CAS.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/OutOfTypeSystemData.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/XmiCasDeserializer.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/XmiCasSerializer.java
uimaj-core/src/main/java/org/apache/uima/cas/text/AnnotationIndex.java
uimaj-core/src/main/java/org/apache/uima/cas_data/CasData.java
uimaj-core/src/main/java/org/apache/uima/cas_data/FeatureStructure.java
uimaj-core/src/main/java/org/apache/uima/collection/CollectionProcessingEngine.java
uimaj-core/src/main/java/org/apache/uima/collection/CollectionProcessingManager.java
uimaj-core/src/main/java/org/apache/uima/collection/CollectionReader.java
uimaj-core/src/main/java/org/apache/uima/collection/base_cpm/BaseCPM.java
uimaj-core/src/main/java/org/apache/uima/collection/base_cpm/BaseCollectionReader.java
uimaj-core/src/main/java/org/apache/uima/collection/base_cpm/SynchPoint.java
uimaj-core/src/main/java/org/apache/uima/collection/metadata/CasProcessorDeploymentParam.java
uimaj-core/src/main/java/org/apache/uima/collection/metadata/CasProcessorExecutable.java
uimaj-core/src/main/java/org/apache/uima/collection/metadata/CpeDescription.java
uimaj-core/src/main/java/org/apache/uima/flow/FlowController.java
uimaj-core/src/main/java/org/apache/uima/flow/FlowControllerContext.java
uimaj-core/src/main/java/org/apache/uima/internal/util/ReplaceStringInFiles.java
uimaj-core/src/main/java/org/apache/uima/pear/tools/InstallationController.java
uimaj-core/src/main/java/org/apache/uima/pear/tools/InstallationProcessor.java
uimaj-core/src/main/java/org/apache/uima/pear/tools/PackageCreator.java
uimaj-core/src/main/java/org/apache/uima/pear/util/FileUtil.java
uimaj-core/src/main/java/org/apache/uima/pear/util/StringUtil.java
uimaj-core/src/main/java/org/apache/uima/pear/util/UIMAUtil.java
uimaj-core/src/main/java/org/apache/uima/resource/ConfigurableResource.java
uimaj-core/src/main/java/org/apache/uima/resource/ConfigurationManager.java
uimaj-core/src/main/java/org/apache/uima/resource/DataResource.java
uimaj-core/src/main/java/org/apache/uima/resource/Resource.java
uimaj-core/src/main/java/org/apache/uima/resource/ResourceConfigurationException.java
uimaj-core/src/main/java/org/apache/uima/resource/ResourceInitializationException.java
uimaj-core/src/main/java/org/apache/uima/resource/ResourceManager.java
uimaj-core/src/main/java/org/apache/uima/resource/ResourceServiceStub.java
uimaj-core/src/main/java/org/apache/uima/resource/impl/ResourceState_impl.java
uimaj-core/src/main/java/org/apache/uima/resource/metadata/Capability.java
uimaj-core/src/main/java/org/apache/uima/resource/metadata/ConfigurationParameter.java
uimaj-core/src/main/java/org/apache/uima/resource/metadata/ConfigurationParameterDeclarations.java
uimaj-core/src/main/java/org/apache/uima/resource/metadata/FeatureDescription.java
uimaj-core/src/main/java/org/apache/uima/resource/metadata/FsIndexKeyDescription.java
uimaj-core/src/main/java/org/apache/uima/resource/metadata/ProcessingResourceMetaData.java
uimaj-core/src/main/java/org/apache/uima/resource/metadata/ResourceManagerConfiguration.java
uimaj-core/src/main/java/org/apache/uima/resource/metadata/ResourceMetaData.java
uimaj-core/src/main/java/org/apache/uima/resource/metadata/SimplePrecondition.java
uimaj-core/src/main/java/org/apache/uima/resource/metadata/impl/PropertyXmlInfo.java
uimaj-core/src/main/java/org/apache/uima/search/Filter.java
uimaj-core/src/main/java/org/apache/uima/search/Style.java
uimaj-core/src/main/java/org/apache/uima/util/AnalysisEnginePerformanceReports.java
uimaj-core/src/main/java/org/apache/uima/util/AnalysisEngineUtils.java
uimaj-core/src/main/java/org/apache/uima/util/CasCreationUtils.java
uimaj-core/src/main/java/org/apache/uima/util/CasToInlineXml.java
uimaj-core/src/main/java/org/apache/uima/util/JCasPool.java
uimaj-core/src/main/java/org/apache/uima/util/Level.java
uimaj-core/src/main/java/org/apache/uima/util/Logger.java
uimaj-core/src/main/java/org/apache/uima/util/Progress.java
uimaj-core/src/main/java/org/apache/uima/util/TCasToInlineXml.java
uimaj-core/src/main/java/org/apache/uima/util/XMLParser.java
texts:Typos in API documentation
1.http://uima.apache.org/d/uimaj-2.4.0/apidocs/org/apache/uima/UIMAFramework.htmlrerturned->returned2.http://uima.apache.org/d/uimaj-2.4.0/apidocs/org/apache/uima/ResourceFactory.htmlsimulatenously->simultaneously3.http://uima.apache.org/d/uimaj-2.4.0/apidocs/org/apache/uima/UIMA_UnsupportedOperationException.htmlhttp://uima.apache.org/d/uimaj-2.4.0/apidocs/org/apache/uima/UIMA_IllegalStateException.htmldelcared->declared4.http://uima.apache.org/d/uimaj-2.4.0/apidocs/org/apache/uima/analysis_component/CasMultiplier_ImplBase.htmlmultiplie->multiple5.http://uima.apache.org/d/uimaj-2.4.0/apidocs/org/apache/uima/analysis_engine/AnalysisEngine.htmldocuemnt->document6.http://uima.apache.org/d/uimaj-2.4.0/apidocs/org/apache/uima/resource/Resource.htmloverridding->overriding7. http://uima.apache.org/d/uimaj-2.4.0/apidocs/index.html?org/apache/uima/analysis_engine/AnalysisEngine.htmlapplictaions->applications8.http://uima.apache.org/d/uimaj-2.4.0/apidocs/index.html?org/apache/uima/analysis_engine/AnalysisEngine.htmlinitialiation->initialization8.http://uima.apache.org/d/uimaj-2.4.0/apidocs/org/apache/uima/analysis_engine/metadata/AnalysisEngineMetaData.htmldelgate->delegate9.http://uima.apache.org/d/uimaj-2.4.0/apidocs/org/apache/uima/analysis_engine/metadata/AnalysisEngineMetaData.htmlfurture->future10.http://uima.apache.org/d/uimaj-2.4.0/apidocs/org/apache/uima/analysis_engine/metadata/AnalysisEngineMetaData.htmlimpleneted->implemented11.http://uima.apache.org/d/uimaj-2.4.0/apidocs/index.html?org/apache/uima/cas/CAS.htmlprocesing->processing12. http://uima.apache.org/d/uimaj-2.4.0/apidocs/index.html?org/apache/uima/cas/impl/XmiCasDeserializer.htmlmodifiy->modify13.http://uima.apache.org/d/uimaj-2.4.0/apidocs/index.html?org/apache/uima/cas/impl/XmiCasDeserializer.htmlupadated->updated14.http://uima.apache.org/d/uimaj-2.4.0/apidocs/index.html?org/apache/uima/cas/impl/XmiCasSerializer.htmlguranteed->guaranteed15. http://uima.apache.org/d/uimaj-2.4.0/apidocs/index.html?org/apache/uima/cas/impl/XmiCasSerializer.htmlbetwen->between16. http://uima.apache.org/d/uimaj-2.4.0/apidocs/org/apache/uima/cas/text/AnnotationIndex.htmlintutition->intuition17.http://uima.apache.org/d/uimaj-2.4.0/apidocs/org/apache/uima/collection/CollectionProcessingEngine.htmllistsner->listener18. http://uima.apache.org/d/uimaj-2.4.0/apidocs/org/apache/uima/collection/CollectionProcessingManager.htmloccuring->occurring19.http://uima.apache.org/d/uimaj-2.4.0/apidocs/org/apache/uima/collection/CollectionProcessingManager.htmlretreivies->retrievesOthers: perfoming, objet, availble, stucture, infromation, bulding, deploymnet, idenitied, prvided, Aggegrate, copmonents, infomration, decitions, borwser, reqular, entiies, signatute, occurences, idetified, effet, recommnded, finshed, thar, retreive, paramter, contraint, copmonent, capabilitty, configuraiton, seqauence, meaninful, ommitted, comaprator, direclty, configruation, containig, thie, evaluted, speicified, deafult, instnaces, sytles, attibutes, sturctures, anlaysis, sypstems, paramter, incompatibiliy, desription, sytsem, ture, staistics, proprery, flexibilty, and scheam.Please globally search these typos and fix them.
issueID:UIMA-2695
type:Bug
changed files:uimaj-core/src/main/java/org/apache/uima/UIMARuntimeException.java
uimaj-document-annotation/src/main/java/org/apache/uima/jcas/tcas/DocumentAnnotation.java
texts:Bad code reference in API doc
1. http://uima.apache.org/d/uimaj-2.4.0/apidocs/org/apache/uima/UIMARuntimeException.html"CasManager.release(CAS) was called with a CAS that does not belong to this CasManager."According to http://uima.apache.org/d/uimaj-2.4.0/apidocs/org/apache/uima/resource/CasManager.html, CasManager has not a release method, but a releaseCas method.2. http://uima.apache.org/d/uimaj-2.4.0/apidocs/org/apache/uima/jcas/cas/TOP.htmlhttp://uima.apache.org/d/uimaj-2.4.0/apidocs/org/apache/uima/jcas/cas/NonEmptyFSList.htmlhttp://uima.apache.org/d/uimaj-2.4.0/apidocs/index.html?org/apache/uima/jcas/cas/ByteArray.htmlThese classes extend the org.apache.uima.cas.impl.FeatureStructureImpl class. However, according to http://uima.apache.org/d/uimaj-2.4.0/apidocs/org/apache/uima/cas/impl/package-summary.html, the org.apache.uima.cas.impl package does not have a class whose name is FeatureStructureImpl. Uimaj 2.3 has such a class. Perhaps, it is deleted in the latest version.3. http://uima.apache.org/d/uimaj-2.4.0/apidocs/org/apache/uima/jcas/tcas/DocumentAnnotation.html"When text CASs are created, one instance of this type is created and made accessable via a call to the JCasImpl.getDocumentAnnotationFs() method."Uimaj 2.4 does not have a JCasImpl class, whereas Uimaj 2.3 has. Please revise the documents to reflect the latest code.
issueID:UIMA-2696
type:Bug
changed files:
texts:Initialization errors falsely reported as Run errors
Job 1215 was killed because it had 20 Init errors that were falsely reported as Run errors.
issueID:UIMA-2697
type:Bug
changed files:
texts:Create explicit dependencySet on slf4j in DUCC&#39;s assembly
Currently, the DUCC runtime uses slf4j jars from runtime/lib/springframework  folder. Modify the assembly script to create an explicit slf4j folder and place in it required jars.
issueID:UIMA-2698
type:Bug
changed files:
texts:Align TextMarker build of artifacts and assemblies to common process
Right now, the top-level pom activates the maven-deploy-plugin for the build distribution profile and sets assembly.attach to false. This solution was chosen, because the source assembly was uploaded to the staging repository and no binary distribution was intended. Now the bin.xml is added, which activates the profile. The project should now use the common approach specified in the parent poms.
issueID:UIMA-2699
type:Bug
changed files:
texts:Provide web-presence for Ruta
There should be some place on the uima webpage with a description of the textmarker projects and (after the release of textmarker-2.0.0) links to, e.g., the documentation.
issueID:UIMA-27
type:Bug
changed files:
texts:org.apache.uima.cas.test.SofaTest creates file that is not deleted afterwards; moreover, this file has been checked into SVN.
SofaTest creates file uimaj-core/Sofa.xcas without deleting afterwards.  This file is also checked into SVN and should be removed.
issueID:UIMA-270
type:Bug
changed files:uimaj-tools/src/main/java/org/apache/uima/tools/cvd/MainFrame.java
uimaj-tools/src/main/java/org/apache/uima/tools/cvd/control/AnnotatorOpenEventHandler.java
texts:When CVD run with -desc option, status bar still says "(No AE Loaded)"
This happens when running the PEAR Installer.  The CVD is launched with the -desc option.  An AE is loaded, but the status bar text  at the bottom of the screen is not updated and still says (No AE Loaded).  The CVD can run the AE correctly, so this is just a UI nit.
issueID:UIMA-2700
type:Bug
changed files:
texts:Remove dependency on Camel from DUCC&#39;s XStreamUtils
The XStreamUtils code depends on the Camel DefaultClassResolver and XStreamDataFormat. Remove the above dependency. The motivation is to reduce dependencies for DUCC's cli jars.
issueID:UIMA-2701
type:Bug
changed files:
texts:TextMarker: autocompletion of types with full namespace broken
There is an autocompletion proposal for types, which are referenced with their complete namespace, but the completion string is not inserted when the proposal is selected.Example:de.uniwue.tm.citie.Book_CARET+COMPLETE_{-> MARK(Booktitle)};The type "de.uniwue.tm.citie.Booktitle" is shown to the user, but not inserted when selected.
issueID:UIMA-2702
type:Bug
changed files:
texts:Add explicit dependency on xstream in DUCC&#39;s assembly script
Currently, DUCC runtime uses xstream from spring framework. Modify assembly script to create dependencySet for xstream and copy it to a dedicated folder under runtime/lib
issueID:UIMA-2704
type:Task
changed files:
texts:Provide exemplary Ruta project for TextRuler algorithms
There should be some exemplary Ruta project with feature engineering and labelled datasets for the TextRuler algorithms. This can lower the effort for users to actually apply the rule learners.
issueID:UIMA-2706
type:Bug
changed files:
texts:TextMarker: Rule learning algorithms override learnt rules
The LP2 algorithm was observed to learn correct rules, but the result was overridden by the next slot (information type). Also check whether this occurs when applying the other algorithms.
issueID:UIMA-2707
type:Bug
changed files:
texts:DUCC Orchestrator (OR) should advance past the Initializing state for Managed Reservations

issueID:UIMA-2708
type:Bug
changed files:
texts:DUCC Service Manager - intermittent crash on startup loading service registrations.
During SM init, as well as during registration, SM does a topological sort to detect and reject circular references.  The code needs to account for independent services which might be implicit, or submitted in the future (i.e. references to currently unregistered services) and ignore them in the topo sort.  This is ok because if they're not registered, they're not in a cycle.  If they are registered later, the topo sort will occur as part of registration and they'll then be included, so all is well.
issueID:UIMA-2709
type:Bug
changed files:
texts:TextRuler default parameters not correct when preference page not visited
TextRuler default parameters of the rule learning algorithms are not correctly set if the preference pages are not visited before.
issueID:UIMA-271
type:Bug
changed files:uimaj-tools/src/main/java/org/apache/uima/tools/pear/install/InstallPear.java
texts:PEAR Installer doesn&#39;t enable "Install" button if PEAR file name is input by keyboard
The PEAR Installer doesn't properly support typing in the name of the PEAR file to install.  It  lets you type into the "PEAR File" text field, but it will never enable the "Install" button unless you use the file browser.
issueID:UIMA-2710
type:New Feature
changed files:
texts:Ruta: Include import and call of preprocess script
The result of the TextRuler algorithms includes a header, which points to a dummy type system. Exchange it by an import of the preprocess script and an additional call.
issueID:UIMA-2711
type:Improvement
changed files:
texts:DUCC webserver (WS) should format classpath display for Jobs/ManagedReservations/Services

issueID:UIMA-2712
type:Bug
changed files:uimaj-core/src/main/java/org/apache/uima/cas/impl/TypeSystemImpl.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/TypeSystemImpl.java
texts:TypsSystemImpl:getNumberOfTypes() causes deadlocks in multithreaded applications
typeNameST.size() uses Vector as an underlying implementation. Vector is synchronized and we observe deadlocks associated with this code. Caching the value when the Type system is committed fixes the problem.
issueID:UIMA-2713
type:Bug
changed files:
texts:Modify DUCC&#39;s assembly script to filter out slf4j from spring and amq
Both AMQ and Spring ship with their own version of slf4j jars. At runtime, the following message is dumped:SLF4J: Class path contains multiple SLF4J bindings. SLF4J: Found binding in &#91;jar:file:/home/challngr/ducc_runtime/lib/slf4j/slf4j-log4j12.jar!/org/slf4j/impl/StaticLoggerBinder.class&#93; SLF4J: Found binding in &#91;jar:file:/home/challngr/ducc_runtime/lib/springframework/slf4j-log4j12-1.5.11.jar!/org/slf4j/impl/StaticLoggerBinder.class&#93; SLF4J: Found binding in &#91;jar:file:/home/challngr/ducc_runtime/lib/apache-activemq/activemq-all-5.6.0.jar!/org/slf4j/impl/StaticLoggerBinder.class&#93; SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation. Seems benign, but annoying. One possible fix for this is to remove slf4j jars from spring and amq. The Ducc's assembly script should exclude them from the DUCC tarball. The slf4j jars will be picked up from ducc_runtime/lib/slf4j dir.
issueID:UIMA-2714
type:Improvement
changed files:
texts:Modify DUCC&#39;s assembly script to expand runtime into target
Ducc's assembly script currently bundles runtime in zip and tar format. Add new format, dir to expand the runtime into target directory. This may be useful for post-build processing required by Jim Ch.
issueID:UIMA-2715
type:Improvement
changed files:uimaj-core/src/main/java/org/apache/uima/cas/impl/CASImpl.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FSIndexComparatorImpl.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FSIndexRepositoryImpl.java
uimaj-core/src/main/java/org/apache/uima/internal/util/IntVector.java
uimaj-core/src/main/java/org/apache/uima/internal/util/SortedIntSet.java
texts:Add bulk-add method variant to IntVector
There are several places where an array of ints gets added to an int vector, by iterating over the array, and calling the add(int) method.  This can be improved by having a bulk add operation that does various growing/bounds check just once, and then does the copy using System.arraycopy.  This has a measurable effect (not too much, but observable) on things such as CAS serialization.
issueID:UIMA-2716
type:Bug
changed files:uimaj-core/src/main/java/org/apache/uima/cas/impl/CASImpl.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FSIndexComparatorImpl.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FSIndexRepositoryImpl.java
uimaj-core/src/main/java/org/apache/uima/internal/util/IntVector.java
uimaj-core/src/main/java/org/apache/uima/internal/util/SortedIntSet.java
texts:updating a double array fails to get logged when tracking updates due to a "mark" being set to support delta cas serialization
When a mark is set in anticipation of a future delta serialization (of just the things changed since the mark - typically used in uima-as services), updates to the CAS are tracked.  In particular, updates to things below the mark are logged so that they may be sent along with the new FSs above the mark.  The logging was missing for the setting of elements of Double arrays.
issueID:UIMA-2717
type:Improvement
changed files:uimaj-core/src/main/java/org/apache/uima/internal/util/rb_trees/CompIntArrayRBT.java
uimaj-core/src/main/java/org/apache/uima/internal/util/rb_trees/IntArrayRBT.java
texts:Add alternate impl of IntArrayRBT that may have better cache locality
Experiment with alternate layout of int array storage that might have better cache locality; keep the old layout too, have a compile-time constant pick the impl.
issueID:UIMA-2718
type:Improvement
changed files:
texts:Extend signing scripts for update sites in order to cover new pack.gz files
Extend the signing scripts for our update sites in order to cover the new pack.gz files. These scripts are located in each update site and in the composite repository and cover only jar files right now.
issueID:UIMA-2719
type:Improvement
changed files:
texts:Create separate jira versions for addons
As discussed for individual releases of modules it'd be nice to use a separate jira version for each of the addons in order to collect fixed issues from Jira correctly.
issueID:UIMA-272
type:Bug
changed files:
texts:CVD manual  & help missing?
I did an update, mvn install, and mvn assemble:assemble.  unpacked the result, and tried to run the CVD.  After fixing a small (missing space) problem in the bat file, it would launch.  But clicking on the manual gives "no manual found" error.  I don't see the html for the manual or help anywhere in my version of the svn?
issueID:UIMA-2720
type:Bug
changed files:
texts:TextMarker NEAR condition not working correctly
When searching forward, the NEAR conditions matches differently than when searching backwards.For example:Institution DateHere the rule Date{NEAR(Institution, 1, 1, false, true)};matches but the rule Institution{NEAR(Date, 1, 1, true, true)};doesn't.
issueID:UIMA-2721
type:Improvement
changed files:
texts:DUCC webserver (WS) should prevent browser cache from filling with unused data
Visit http://www.datatables.net/forums/discussion/14471/cache-control#Item_13 to see discussion with the developer of DataTables.In short, we hack the DataTables 1.9 code to prevent multiplicity of "unique" entries in browser cache. It seems there will be a fix on version 1.10, which is not yet officially released.
issueID:UIMA-2722
type:Improvement
changed files:
texts:DUCC webserver (WS) should give hints when Login/Preferences apply

issueID:UIMA-2723
type:Improvement
changed files:
texts:DUCC webserver (WS) should handle large data display (e.g. logs) better, perhaps with Top/Bottom/Next/Previous
Presently, when user clicks on very large log file it may take a really long time for entire data set to be displayed.
issueID:UIMA-2724
type:Improvement
changed files:
texts:DUCC webserver (WS) specification displays should make clear difference between user specified and system default values
This is especially important for classpath, whenever DUCC's CP is pre- or post-pended.
issueID:UIMA-2725
type:Task
changed files:
texts:ducc_ling support for full set of limits
ducc_ling currently supports only RLIMIT_CORE. This task adds the full set of limit available to get/setrlimit() calls.Usage: set env var DUCC_&#91;limitname&#93;=val in job.  Example: DUCC_RLIMIT_CPU=500 to set the soft CPU limit for a job.
issueID:UIMA-2726
type:Wish
changed files:
texts:DUCC webserver (WS) should provide tab for Log Directory
...and, I suppose, provide navigation and contents display of directories/files therein.  Added to wish list.
issueID:UIMA-2727
type:Improvement
changed files:
texts:DUCC webserver (WS) Reason CanceledByDriver should be more specific.
Reason CanceledByDriver should give on hover (or be perhaps be replaced entirely by) more precise reason obtained from Error Handler plugin, such as: error threshold of 15 exceeded.
issueID:UIMA-2728
type:Bug
changed files:
texts:DUCC Service Manager various race conditions
Two situations: during startup of a service, if the start takes longer than one Orchestrator period, the counters get confused and extra instances get started If a CLI/API command is being issued right as an Orchestrator update comes in, it is possible for state to be mishandled.
issueID:UIMA-2731
type:Bug
changed files:
texts:DUCC webserver (WS) should not report pingers as "aliens"
Note: Agent needs to report parent of alien and WS needs to check node and PID of SM -> such are not considered aliens.
issueID:UIMA-2732
type:Improvement
changed files:
texts:DUCC Managed Reservations need monitoring support, similar to Jobs

issueID:UIMA-2734
type:Bug
changed files:
texts:DUCC webserver (WS) when in Manual mode, Refresh button not always effective

issueID:UIMA-2736
type:Bug
changed files:
texts:UIMA-AS client may hang when sending CASes to remote CM service
Using UIMA-AS client sendAndReceive() API to send CASes to remote Cas Multiplier can cause the client to hang. With the synchronous API, the client is receiving child CASes from the CM and deserializes them using its internal Cas Pool. The child CASes are never delivered to an application since the callbacks are not supported for sync API. The code never releases the CASes causing a hang in the client due to exhausted Cas Pool.Modify the client code to ignore child CASes produced from an input CAS sent via synchronous sendAndReceive(). While ignoring such CASes, the code should still send FreeCasRequest to the remote CM to prevent the CM from starving its Cas Pool. The new code should not attempt to deserialize child CASes and just throw away the message containing serialized CAS.
issueID:UIMA-2737
type:Task
changed files:
texts:DUCC Service Manager - add user authentication and validation
The SM API must work with SM to verify user identity.  Once identified, user ownership of services for various actions ( start, stop, modify, unregister ) must be verified.
issueID:UIMA-2738
type:Bug
changed files:
texts:DUCC command line interface (CLI) JobMonitor prematurely cancel Jobs
JobMonitor needs to consider latency between time of job submission by CLI to OR and receipt of OR publication by WS.
issueID:UIMA-2739
type:Task
changed files:
texts:DUCC Service Manager job restart policy
Service manager must implement a restart policy to halt starts for services that fail to start.
issueID:UIMA-274
type:Improvement
changed files:uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/ui/dialogs/AbstractDialog.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/ui/dialogs/AddFeatureDialog.java
texts:CDE add new feature - not making visible the additional input fields for element types when range type changed
When changing the Range of a feature, the extra fields for element type etc. need to be visible / invisible based on the range type as that type is being edited.
issueID:UIMA-2741
type:Bug
changed files:
texts:Jobs that have no work to do at startup should not start service dependencies
Job 1509 was canceled when the JD found no work to process but service instance 1510 was started before that13 Mar 2013 13:54:56,332 DEBUG OR.JobFactory - create    1510 ....13 Mar 2013 13:55:20,475  INFO OR.StateJobAccounting - complete    1509 CanceledByDriver no work items to process
issueID:UIMA-2742
type:Task
changed files:
texts:DUCC console redirection
ducc_ling console redirection should redirect process stdin from the remote socket as well.The API's console handler will need to capture stdin and write it to the socket when the console is redirected.Only Arbitrary Process (ducclet)-type jobs will use stdin redirection.  Normal UIMA jobs will not.
issueID:UIMA-2743
type:Bug
changed files:
texts:Client should be notified when a job fails because of unavailable services
Currently only ducc-mon shows ServicesUnavailable ... no such information is in any of the logs.  Perhaps the job monitor could be sent a state of "ServicesUnavailable" before the Completing state.
issueID:UIMA-2744
type:Bug
changed files:
texts:When a DUCC job depends on an unregistered UIMA service fail the job if the service is unresponsive
If the service has been unregistered the queue will still exist but with no consumers.  Letting the job continue means that the initialization will hang and eventually fail when the getmeta times-out perhaps an hour later.
issueID:UIMA-2745
type:New Feature
changed files:
texts:TextMarker: Easy way to integrate short TextMarker Scripts directly in Java
It would be great if it was possible to write a short bit of TextMarker-Script inside Java like:TextMarkerShort.process(cas, "CW CW { -> MARK(MyAnnot) };");Sometimes it is a bit oversized to create a whole TextMarker-Project only to accomplish a small annotation task. For that purpose a quick java-integration would be great.
issueID:UIMA-2746
type:Improvement
changed files:
texts:DUCC webserver (WS) should give cluster utilization summary in page headings
Suggested by David Mcclosky.
issueID:UIMA-2747
type:Improvement
changed files:
texts:DUCC webserver (WS) should make available all job driver log information
The <JOB-ID>JD<HOST>-<PID>.log file is not visible from Processes tab for Job.
issueID:UIMA-2748
type:Sub-task
changed files:
texts:Fill description of external resources in component from JavaDoc
Also fill in the description of external resources from the JavaDoc.
issueID:UIMA-2749
type:Bug
changed files:
texts:DUCC webserver (WS) ArrayIndexOutOfBoundsException
15 Mar 2013 16:34:29,414  INFO WS.DuccHandlerLegacy - handle     N/A  15 java.lang.ArrayIndexOutOfBoundsE-xception: 15At:        sun.util.calendar.BaseCalendar.getCalendarDateFromFixedDate(BaseCalendar.java:436)        java.util.GregorianCalendar.computeFields(GregorianCalendar.java:2081)        java.util.GregorianCalendar.computeFields(GregorianCalendar.java:1996)        java.util.Calendar.setTimeInMillis(Calendar.java:1109)        java.util.Calendar.setTime(Calendar.java:1075)        java.text.SimpleDateFormat.format(SimpleDateFormat.java:876)        java.text.SimpleDateFormat.format(SimpleDateFormat.java:869)        java.text.DateFormat.format(DateFormat.java:316)        org.apache.uima.ducc.common.utils.TimeStamp.simpleFormat(TimeStamp.java:35)        org.apache.uima.ducc.ws.server.DuccHandlerLegacy.handleServletLegacySystemDaemons(DuccHandlerLegacy.java:1279)        org.apache.uima.ducc.ws.server.DuccHandlerLegacy.handleDuccRequest(DuccHandlerLegacy.java:1606)        org.apache.uima.ducc.ws.server.DuccHandlerLegacy.handle(DuccHandlerLegacy.java:1629)        org.eclipse.jetty.server.handler.HandlerList.handle(HandlerList.java:47)        org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:110)        org.eclipse.jetty.server.Server.handle(Server.java:346)        org.eclipse.jetty.server.HttpConnection.handleRequest(HttpConnection.java:589)
issueID:UIMA-275
type:Bug
changed files:
texts:C++: Rework documentation for first release
Eliminate Quickstart and rework for SDK documentation. Expand material on building and testing.
issueID:UIMA-2751
type:Bug
changed files:
texts:UIMA-AS not handling initialization exception
The UIMA-AS service error handling is not working correctly while handling initialization exception occurring in complex deployments. Errors happening during initialization should result in termination of the service. Instead, the service logs initialization error begins to shutdown but never cleans up and hangs.
issueID:UIMA-2752
type:Bug
changed files:
texts:DuccJobSubmit option --process_failures_limit is ignored

issueID:UIMA-2753
type:Bug
changed files:
texts:The dd2spring generated Spring files accumulate in the temp dir
On UIMA-AS process startup, the provided deployment descriptors are passed through the dd2spring which generates a Spring context file used to initialize the UIMA-AS service. Once the initialization is done the context files can be removed. The dd2spring actually creates the context files as temp files and configures the files with removeOnExit(). In most cases this works, however when the UIMA-AS service is killed with -9, the temp files remain in the default temp dir accumulating over time. The DUCC runtime frequently kills the services to make room for another process so these files temp files do in fact accumulate in the temp dir. It seems like the agent should spin a thread, check temp dir for old temp files and clean them up. The cleanup would have to be done via ducc_ling as the files are owned by users.
issueID:UIMA-2754
type:Bug
changed files:
texts:DUCC resource manager - correct job cap if max processes < init max
If a job specifies a process max and gets evicted to 0 (or all processes die but error max isn't yet hit), its new job cap must be the lesser of its process max and the resource class's init cap (not simply the rc's init cap).
issueID:UIMA-2755
type:Improvement
changed files:
texts:Placeholders in JMS service descriptors shouldn&#39;t replace all of the value
Placeholders of the form ${system-property} may be used in the value fields for both the broker and endpoint parameters in a JMS service descriptor.  But they completely replace the value.  A better solution is to allow substitution anywhere in the value field so that, e.g., decorations that are essentially client arguments can be left in the descriptor. e.g.<parameter name="brokerURL" value="${brokerUrl}?wireFormat.maxInactivityDuration=0"/>
issueID:UIMA-2756
type:Sub-task
changed files:
texts:TextMarker: Extend language with special rules for direct regexp matching
For seeding some initial annotations, which are then used by the actual rules in order to create the targeted annotations, some simple regexp expressions are probably very useful. Right, now there are only wordlists and regexp conditions. Both work on inference annotations.The new rule syntax could look like:"...regexp epression..." -> "named capturing group" = TypeExpression, NumberExpression = TypeExpression, TypeExpression;No curly brackets and no explicit actions/conditions, and no influence of the filtering settings.Capturing groups are supported by names and index, and the normal TypExpression create an annotation for each found occurrence.Other opinions/comments are welcome.
issueID:UIMA-2757
type:New Feature
changed files:
texts:TextMarker: Add wildcard rule element
Right now, something like a wildcard or an I-don't-care rule element can be implemented with ANY*?. However, those rule elements actually investigate each token until the next rule element is successfully matched, meaning they are slow if there is some space in between.A real wildcard, which just skips everything, would really be useful (and faster). This can be implemented by not iterating over the visible inference annotations, but actually finding a matchable position in the index and then check whether it is visible. Since the next rule element can possibly quite complex, it is maybe better to just match to the next annotation, and if that one is invisible, then return a failed match. This behavior needs actually some careful testing in different use cases.First suggestion for the syntax (** for wild card):CW **{-> MARK(Type)} PERIOD; The "**" is maybe not the best solution since it looks quite like a quantifier *?. Introducting an actual keyword can also be problematic since they might be a type with the same name. Maybe something likeCW #{-> MARK(Type)} PERIOD; is better.This rule would create an annotation from the end of each capitalized word to the begin of the next period, including the white spaces. However, those can be removed with the TRIM action.
issueID:UIMA-2758
type:New Feature
changed files:
texts:Ruta: Provide support for tree structures and parse trees in rule language
Manipulation of features which refer to annotations and matching on simple features is currently supported, but matching on the complex values of some feature is not. A first step can be something like (Type Person with feature "title" of type Annotation):Person.title;This rule matches on all annotations, which are values of features of annotations of the type Person.This new language element can also be used for syntactic sugar when checking primitive feature values:Person.begin=0 (A Person annotation, which starts a offset 0)This can only be a first step towards supporting tree structures. Maybe there is no way around something for explicitly and directly referring to certain annotations (which is not possible right now, but is done by using the type).
issueID:UIMA-2759
type:Bug
changed files:
texts:TextMarker: direct assignment of type variables broken
Type variables can be used for different things, e.g., for using different names for a type. This can be useful when different type systems are imported with some equal short names and long namespaces, e.g., textmarker and dkpro: NUM.But the direct assignment is broken (the bug is in the grammar):TYPE TuDa_NUM = de.tudarmstadt.ukp.dkpro.core.api.syntax.type.dependency.NUM;TYPE TM_NUM = org.apache.uima.textmarker.type.NUM;
issueID:UIMA-276
type:Bug
changed files:
texts:Add C++ tutorial sample for integration with Java tutorial
Add C++ MeetingAnnotator files. Test with new Java environmental setting. Enable as eclipse CDT project.
issueID:UIMA-2760
type:Bug
changed files:
texts:TextMarker&#39;s plain text annotator misses last paragraph
The last paragraph is not annotated if the document ends without a line break.
issueID:UIMA-2762
type:Bug
changed files:
texts:DUCC webserver (WS) incorrectly calculates display list for Managed + Umanaged Reservations with respect to Preferences (ie Active+Include)

issueID:UIMA-2763
type:Improvement
changed files:
texts:Add notimestamp to javadoc generation
This page describes best practices for managing javadoc publications, now that pubs go through SVN, designed to minimize SVN consumption for documentation that doesn't change (except for recording a new time stamp).  Add the -notimestamp option so that that is not the only change.  See http://www.apache.org/dev/project-site.html#generated
issueID:UIMA-2765
type:Improvement
changed files:
texts:DUCC command line interface (CLI) should announce jd.err.log upon Completed state, as appropriate

issueID:UIMA-2766
type:Improvement
changed files:
texts:DUCC&#39;s Agent should catch Process exit return code
The Agent currently ignores process exit code. Modify the code to catch the exit code and associate it with a relevant Process object. The exit code may be used by the Web Server to show status of the process.
issueID:UIMA-2767
type:Bug
changed files:
texts:DUCC resource manager (RM) and orchestrator (OR) not handling Job Process (JP) capping correctly
Job #30692 initialized correctly and began processing work items.  During the course of the Job's run JPs that initialized correctly were terminated, and newly allocated JPs all failed to initialize.  RM was endlessly stuck allocating new JPs, above and beyond the init failure cap.Two things needs to be done.  First, RM should NEVER allocate more JPs to a Job that has been capped.  Second, OR should terminate any Job that has no JPs and never will have any more JPs due to capping.
issueID:UIMA-2768
type:New Feature
changed files:
texts:Ruta: Add option for greedy anchoring
Ignore the anchor for the start of a rule match if a previous match of this same rule already covered that position.CW{-> MARK(Type,1,2)} ANY+;can be used instead ofCW{-PARTOF(Type) -> MARK(Type,1,2)} ANY+;in order to get only one annotation. The user should be able to modify the matching behavior similar to dynamic anchoring, e.g., activating the option by an action.
issueID:UIMA-2769
type:Improvement
changed files:
texts:DUCC webserver (WS) and Orchestrator (OR) should give Reason as ProgramExit with hover to display code for Managed Reservations that are Completed

issueID:UIMA-277
type:Task
changed files:
texts:C++: Confirm proper use of Apache license in files and SDK
Some files need license added. SDK build script needs to include license.
issueID:UIMA-2770
type:Bug
changed files:
texts:DataTables warning (table id = &#39;services-table&#39;): Requested unknown parameter &#39;14&#39; from the data source for row 0
WS "forgets" to return 3 recently added columns for Jobs, Services, and Reservations when returning JSON data for scroll table of empty Services page.This only happens when there are no services defined.  Work-arounds are:1. Use classic mode, or2. Define a service
issueID:UIMA-2772
type:Bug
changed files:
texts:DUCC resource manager - Restart and fast-start
Currently RM waits a "reasonable time" (init-stabiity) on startup to allow nodes to check in, before accepting scheduling requests.  It is not possible to know exactly how long to wait, making init-stability a heuristic.  For normal startup this is not a problem.  If RM is restarting 'hot', or if the orchestrator publishes non-preemptable jobs on restart, and the necessary nodes have not arrived by the completion of init-stability wait, this can cause many problems: over-commitment, under-commitment, and in some cases  inconsistent state (and crashes).To remedy this, RM will include the full Node object in its publications to the OR, which will echo them back for work that it believes to be active. On startup RM can fully reconstruct state as of its last publication from this, eliminating the problem. A side-effect of this is that RM need not wait for nodes to check in, significantly decreasing its startup time.  If nodes added to the resource pool in this way never check in, the normal "dead node" mechanism will kick in, maintaining consistency.
issueID:UIMA-2773
type:Bug
changed files:
texts:DUCC Update to 0.8.0-beta
Update DUCC version to 0.8.0-beta.  There are significant API and some minor CLI changes as well as many functional updates.
issueID:UIMA-2774
type:Test
changed files:
texts:Improve test of version 0 of binary Compressed Serialization / Deserialization
Store some "gold standard" compressed serialized things as test resources, and add tests that use that information in place of the serialized data normally used, to verify that version 0 compressed serialized things can continue to be deserialized correctly in the future.
issueID:UIMA-2775
type:Bug
changed files:
texts:DUCC webserver (WS) incorrectly uses ducc.rm.default.memory as share size
It should use ducc.rm.share.quantum
issueID:UIMA-2776
type:Bug
changed files:
texts:UIMA-AS not managing broker sessions
UIMA-AS service doesn't manage broker sessions which leads to broker OOM in some use cases. Current code keeps sessions open even if clients terminate. If a client terminates before the broker delivers outstanding messages to it, such messages are never purged from brokers memory. This is because the service has a jms session open. Broker only cleans such messages if either a session is closed or a connection is closed.
issueID:UIMA-2777
type:Improvement
changed files:
texts:Ruta: rule learning algorithms need to be adapted to recent changes
Most of the rule learning algorithms are partially broken due to the reimplementation of the inference and other changes. Get the algorithms up and working again, at least for the example project that will be provided in UIMA-2704. Additionally, the new language constructs like the wild card can replace the default filler-element ANY*? and make the testing phase a bit faster.
issueID:UIMA-2778
type:Improvement
changed files:uimaj-core/src/main/java/org/apache/uima/cas/impl/BinaryCasSerDes6.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/CASImpl.java
texts:Enhance binary compressed CAS I/O to support parallel step
The binary compressed CAS serialization/deserialization should support uima-as parallel step; verify and add needed test cases for this.
issueID:UIMA-2779
type:Improvement
changed files:
texts:External resources and parameters should be mandatory by default
REC: In my experience, in almost all cases, the parameters for components are mandatory, although the default in uimaFIT is that they are not mandatory. That means that most @ConfigurationParameter and @ExternalResource annotations are littered with "mandatory=true". It would be nice if we could change this in a future version of uimaFIT, e.g. in 2.0, since this is a non-compatible change.Steven: I'd say I'm much more like 50/50 mandatory/defaulting in my own code when using @ConfigurationParameter. But I'd be okay with changing it.See also: https://code.google.com/p/uimafit/issues/detail?id=72
issueID:UIMA-278
type:Task
changed files:
texts:Add scripts for building source tarball

issueID:UIMA-2780
type:Improvement
changed files:
texts:Initialize multi-value parameters with a single value
It should be possible to set a multi-value parameter to a single value without having to wrap the value in a collection or array.Current:AnalysisEngine engine = AnalysisEngineFactory.createPrimitive(ParameterizedAE.class,  ParameterizedAE.PARAM_STRING_9, new String[] { "singleelementarray" });Desired:AnalysisEngine engine = AnalysisEngineFactory.createPrimitive(ParameterizedAE.class,  ParameterizedAE.PARAM_STRING_9, "singleelementarray");
issueID:UIMA-2781
type:Improvement
changed files:
texts:DUCC webserver (WS) relocate logged-in and -out status information so as to consume less banner real estate

issueID:UIMA-2782
type:Improvement
changed files:
texts:afterResourcesInitialized() should declare an exception
A ResourceInitializationException would make sense.https://groups.google.com/forum/?fromgroups#!topic/uimafit-users/fyvShXmhHugSee also: https://code.google.com/p/uimafit/issues/detail?id=131
issueID:UIMA-2783
type:Improvement
changed files:
texts:Variables that are final and static should be in all caps
PMD complains that the final static ConfigurationParameterFactory.javaUimaTypeMap should be renamed. However, this is public field, which means that it would be an incompatible change.If uimaFIT switches to using per  issue 79 , this field would go away anyway.See also: https://code.google.com/p/uimafit/issues/detail?id=117
issueID:UIMA-2784
type:Improvement
changed files:
texts:Inner classes in FSCollectionFactory should not inherit from that class
I cannot remember what brought me to think that AnnotationIndexAdapter and FSIteratorAdapter should inherit from FSCollectionFactory. The class FSCollectionFactory should not be generic.The inner classes should not inherit from FSCollectionFactory.The inner classes should be public or potentially be moved to top-level classes.I believe these changes break binary compatibility, so I'll schedule them for 2.0.0. See also: https://code.google.com/p/uimafit/issues/detail?id=97
issueID:UIMA-2785
type:Improvement
changed files:
texts:Make constructor of ContainmentIndex protected
Make the constructor of the ContainmentIndex protected. The proper way to create an instance of this class is to use the create() methods.See also: https://code.google.com/p/uimafit/issues/detail?id=94
issueID:UIMA-2786
type:Improvement
changed files:
texts:Remove deprecated API
Remove deprecated API for next major release.See also: https://code.google.com/p/uimafit/issues/detail?id=67
issueID:UIMA-2787
type:Task
changed files:
texts:Migrate documentation to docbook
Migrate the documentation from the Google Code wiki format to the DocBook format used be UIMA.
issueID:UIMA-2788
type:Bug
changed files:
texts:DUCC command line interface (CLI) JobMonitor --id and --reason incorrectly specified
Expected parameters should be --id (not JobId) and --reason (not Reason), both broken due to missing .pname()
issueID:UIMA-2789
type:Task
changed files:
texts:DUCC resource manager - should persist and restore "friendly" ducc IDs for shares
With the pending arrival of CGroup support, the RM "friendly" share IDs must now be unique as they are also to be used as the containers for each CGroup, and eventually, for injected Managed Reservations.Previously this wasn't necessary as internally, Share Ids use Java UUIDs and hence are globally unique over time; the "friendly" id was a convenience for human beings to refer to shares.RM will start persisting the monotonically increasing "friendly" ids of shares as they are assigned.
issueID:UIMA-279
type:Bug
changed files:jVinci/src/main/java/org/apache/vinci/transport/vns/service/ServiceAlias.java
texts:toXML method of ServiceAlias has an apparent infinite loop
Found by Findbugs>  This code:  public String toXML(int offset) {    String indent = "";    while (offset > 0)      indent += " ";etc.
issueID:UIMA-2792
type:Bug
changed files:
texts:DUCC CLI/API SImplify and unify message and console callback
Use a single callback object with two methods in the API:   duccout(...) - all DUCC generated messages come here   consout(...) - all redirected console messages come here
issueID:UIMA-2793
type:Improvement
changed files:
texts:DUCC support for --all_in_one <local|remote>
By specifying --all_in_one, user can submit job that runs CAS provider and corresponding UIMA pipeline in same process either locally or remotely as a ManagedReservation.By removing --all_in_one and resubmitting, job will scale-out normally as JD + JP(s).
issueID:UIMA-2794
type:Bug
changed files:
texts:DUCC command line interface (CLI) ManagedReservationMonitor gives incorrect RC

issueID:UIMA-2795
type:Bug
changed files:
texts:Broken link to tools.textmarker.book.pdf
The http://uima.apache.org/textmarker.html page contains a broken link to http://uima.apache.org/d/textmarker-current/tools.textmarker.book.pdf
issueID:UIMA-2796
type:Bug
changed files:
texts:Broken link to docbook-shared/entities.ent
The http://uima.apache.org/dev-docbook.html page contains a broken link to http://svn.apache.org/repos/asf/uima/build/trunk/uima-docbook-resource-bundle/src/main/resources/docbook-shared/entities.ent. I think the correct link should be http://svn.apache.org/repos/asf/uima/build/trunk/uima-build-resources/src/main/resources/docbook-shared/entities.ent
issueID:UIMA-2797
type:Bug
changed files:
texts:Import of DUCC projects to eclipse force java1.5. compat, breaking eclipse build.
The UIMA java 1.5 restriction is propagated to DUCC so importing the DUCC projects into Eclipse causes Eclipse to enforce Java 1.5 compatibility.  This breaks the build under Eclipse because there are some 1.6 features used by DUCC.  It is possible, but tedious and time consuming to manually fix the Eclipse projects after import, but this should not be necessary.
issueID:UIMA-2798
type:Bug
changed files:
texts:NPE when primitive AE is added to CpeBuilder
If the a single primitive AE is added to the CpeBuilder, a NPE is triggered:org.apache.uima.resource.ResourceInitializationException at org.apache.uima.collection.impl.CollectionProcessingEngine_impl.initialize(CollectionProcessingEngine_impl.java:83) at org.apache.uima.impl.UIMAFramework_impl._produceCollectionProcessingEngine(UIMAFramework_impl.java:420) at org.apache.uima.UIMAFramework.produceCollectionProcessingEngine(UIMAFramework.java:922) at org.apache.uima.fit.factory.CpeBuilder.createCpe(CpeBuilder.java:127) at org.apache.uima.fit.factory.CpeBuilderTest.testSinglePrimitiveAE(CpeBuilderTest.java:45) ...Caused by: org.apache.uima.resource.ResourceConfigurationException at org.apache.uima.collection.impl.cpm.container.CPEFactory.getCasProcessors(CPEFactory.java:601) at org.apache.uima.collection.impl.cpm.BaseCPMImpl.init(BaseCPMImpl.java:253) at org.apache.uima.collection.impl.cpm.BaseCPMImpl.<init>(BaseCPMImpl.java:127) at org.apache.uima.collection.impl.CollectionProcessingEngine_impl.initialize(CollectionProcessingEngine_impl.java:75) ... 27 moreCaused by: java.lang.NullPointerException at java.util.Hashtable.hash(Hashtable.java:262) at java.util.Hashtable.containsKey(Hashtable.java:432) at org.apache.uima.collection.impl.cpm.container.CPEFactory.getCasProcessors(CPEFactory.java:507) ... 30 more
issueID:UIMA-2799
type:Task
changed files:
texts:Testing and Diagnostic tools
This jira will track addition of the system test and diagnostic tools we use when developing DUCC.  Included are state dumping tools, cluster simulation, and large-scale job simulation tools.
issueID:UIMA-28
type:Improvement
changed files:uimaj-examples/src/main/java/org/apache/uima/examples/cpe/FileSystemCollectionReader.java
uimaj-tools/src/main/java/org/apache/uima/tools/docanalyzer/DocumentAnalyzer.java
uimaj-examples/src/main/java/org/apache/uima/examples/RunAE.java
uimaj-tools/src/main/java/org/apache/uima/tools/RunAE.java
uimaj-examples/src/main/java/org/apache/uima/examples/XmlDetagger.java
uimaj-examples/src/main/java/org/apache/uima/examples/cpe/SimpleRunCPM.java
uimaj-tools/src/main/java/org/apache/uima/tools/docanalyzer/AnnotationViewerDialog.java
texts:2.0 examples use deprecated methods
(Issue reported on SourceForge by Greg Holmberg)For example, indocs\examples\src\com\ibm\uima\examples\RunAE.java,CollectionReader.setCasInitializer() is called, whichis deprecated.The examples should show the right way to do things.In this case, it should show how to use a multi-SOFAannotator instead of a CAS Initializer. For example,it might use XmlDetagger annotator.I'm sure there are other places the examples usedeprecated methods, so a review of that code might beappropriate to bring it up to the 2.0 APIs.
issueID:UIMA-280
type:New Feature
changed files:
texts:add uimaj-internal-tools project and add tooling to detect jira issues for an UIMA level.
add uimaj-internal-tools component. This component will host UIMA internal programs that will not be shipped with UIMA. E.g. tools that helps during the build.The JiraIssueDetector can detect the Jira issues that were fixed since the last level/tag that was build. So it is possible to generate a list of Jira issues that will befixed with the current level/tag.
issueID:UIMA-2800
type:Improvement
changed files:
texts:DUCC webserver (WS) should report process RSS usage directly, not as a percentage of requested memory size
As suggested by the Complainer-In-Chief!
issueID:UIMA-2801
type:Improvement
changed files:
texts:Allow multi-valued external resources
Currently, there can only be one external resource per key, e.g.:  final static String MODEL_KEY = "Model";  @ExternalResource(key = MODEL_KEY)  private SharedModel model;---AnalysisEngineDescription aed1 = createPrimitiveDescription(Annotator.class,  Annotator.MODEL_KEY, extDesc);There are cases where we want to pass a multiple external resources at a time, e.g. multiple models when can be used jointly by a component. It is inconvenient to have the component declare one key per model, because we do not know their number in advance. Adding support for adding multi-valued external resources in uimaj-core looks like a major change, as the XML descriptors would need to be extended. At the level of uimaFIT, it should be rather easy to implement something like this:  final static String MODEL_KEY = "Model";  @ExternalResource(key = MODEL_KEY)  private List<SharedModel> model;---AnalysisEngineDescription aed1 = createPrimitiveDescription(Annotator.class,  Annotator.MODEL_KEY, asList(extDesc1, extDesc2, extDesc3));uimaFIT may implicitly bind the three values to "Model#1", "Model#2", and "Model#3". When configuring a component, it can check that the external resource parameter field is multi-valued and look for the keys with the "#X" postfixes.
issueID:UIMA-2802
type:Bug
changed files:
texts:Change selectCovered(class, annotation) signature
Change the signature fromselectCovered(Class<T> type, AnnotationFS coveringAnnotation)to selectCovered(AnnotationFS coveringAnnotation, Class<T> type)Per convention, the thing to select from should be the first argument(s) and the following arguments should specify what to select.Probably also changeselectCovered(JCas jCas, final Class<T> type, AnnotationFS coveringAnnotation)to selectCovered(JCas jCas, AnnotationFS coveringAnnotation, final Class<T> type)and so on. Probably best to even deprecate/remove the signature with both, JCas and coveringAnnotation, because seeking only works when the coveringAnnotation is part of the CAS.
issueID:UIMA-2803
type:Bug
changed files:
texts:createFSArray should return FSArray instead of ArrayFS
The methodArrayFS createFSArray(JCas aJCas, FeatureStructure[] aArray)should return a FSArray, because that is what is created internally.
issueID:UIMA-2804
type:New Feature
changed files:
texts:Add CGroup support
Modify ducc to use Linux cgroups. Currently, only cgroup memory subsystem will be used to limit amount of memory a process is allowed to use. Cgroups provide a light weight virtual machine for processes.An agent will launch processes in a cgroup container. The agent on start up should check a global flag in ducc.properties to enable/disable use of cgroups. Also, the agent should check if cgroups are properly installed on a node by checking for existence of /cgroup/ducc folder. The final check is against an exclusion file which may facilitate disabling cgroups on per machine basis. If cgroups are enabled, the agent will launch processes in a cgroup container. For JPs and APs, the first process assigned to the container will be the primary/owner of the container. The agent should support injecting other/secondary processes into an existing container. If the JP primary process terminates, the agent will proceed to kill secondary processes and finally remove the container. If the AP primary process terminates, the agent will kill secondary processes but will not remove the container. Same will be true for JDs. In both of these cases, the container is associated with a reservation and thus the container should remain for as long the reservation is open.  The agent will also monitor use of swap space by each container. The container threshold will be computed by ducc based on assigned number of shares to the container. For example, if the container is assigned 1 15GB share on a machine with 45GB total memory, ducc will constrain the container to 1/3 of total (minus 1GB) swap space.
issueID:UIMA-2805
type:Task
changed files:
texts:Resurrect "submitted" services
DUCC services currently must be registered, then started.  This tracks the ability to directly submit a service without first registering it.  The Service Manager tracks the lifetimes of the submitted instances, runs the pinger, and manages the submitted services as dependencies for other services and jobs, but does not attempt to *manage* the lifetime of this type of service.If multiple services instances are submitted with the same Queue:broker endpoint the SM combines them and manages them as multiple instances of the same service.
issueID:UIMA-2806
type:Task
changed files:
texts:Echo limits to both agent and user console.
Before starting a process the user's limits should be echoed to both the DUCC agent and the job instance's console/logfile, regardless of whether the job spec specified limits.This is motivated by chasing several elusive problems caused by unexpected core file limits and open-file limits which were set differently on different operataing system levels in the cluster.
issueID:UIMA-2807
type:Task
changed files:
texts:Service Manager: default UIMA-AS pinger should run as internal thread, not as external process.
Since the default pinger is just a bit of well-known java code supplied with DUCC, there is no need to run it under user authority in an external process.  This simplifies the code paths and significantly reduces resource requirements.
issueID:UIMA-2808
type:Bug
changed files:uimaj-core/src/main/java/org/apache/uima/cas/impl/Subiterator.java
texts:JCasUtil Subiterator returns annotations which are not within borders of the container (parent) annotation if parameter "strict" is set to "false"
JCasUtil Subiterator returns annotations which are not within the border of the container (parent) annotation if parameter "strict" is set to "false" See attached maven project for test setup, java classes, a SIMPLIFIED typesystem and the test CAS xml-file. We have two annotations, "SentenceAnnotation" and "ValueAnnotation". A "SentenceAnnotation" covers a sentence and the "ValueAnnotation" covers a numerical value. We have the following example plank text:   "This is sentence A with no value. This is sentence B with value 377."  Creates two sentence annotations ("This is sentence A with no value." and "This is sentence B with value 377.") and one value annotation ("377").  Now, if i want to get all "ValueAnnotation" within a "SentenceAnnotation", i iterate over each "SentenceAnnotation" and use JCasUtil.iterator(...) to get the ValueAnnotations with the following parameters: JCasUtil.iterator(currentSentence, ValueAnnotation.class, false, false);  As a result, i get for the first sentence also the value of the second sentence and this might be wrong because even if "strict" is set to "false", the  begin of the "ValueAnnotation" should be smaller than the end of the "SentenceAnnnotation". But in the example given the begin of the "ValueAnnotation" is after the end of the FIRST "SentenceAnnotation"
issueID:UIMA-2809
type:Bug
changed files:
texts:Users field for the Job page it is remembered but is only displayed after a refresh
I've noticed that after setting the Users field for the Job page it is remembered but is only displayed after a refresh (I use Manual mode) ... i.e. if I switch to a different page & then back to Jobs page the Users field displays default (and so does Max records) ... but the job list is filtered correctly.  After a refresh both fields display the correct value.  So the problem seems to be just that the fields show the default values when a page is first displayed ... after a  refresh they're correct,Burn
issueID:UIMA-281
type:Bug
changed files:uimaj-core/src/main/java/org/apache/uima/pear/util/UIMAUtil.java
uimaj-core/src/main/java/org/apache/uima/pear/util/UIMAUtil.java
texts:org.apache.uima.pear.util.UIMAUtil.identifyUimaComponentCategory method may throw NullPointerException
org.apache.uima.pear.util.UIMAUtil.identifyUimaComponentCategory method may throw NullPointerException if the input XML descriptor specified as URL.
issueID:UIMA-2810
type:Bug
changed files:
texts:Service Manager CLI - don&#39;t create redundant "service" directory
The service manager cli is creating a redundant 'services' entry in the log path. Aside from this being a bug, it is no longer necessary to differentiate service logs from other logs because the Orchestrator now assigns unique ids across all types of work, rather than using a different ID pool for each type of work (job, service, reservation, etc.).
issueID:UIMA-2811
type:Suitable Name Search
changed files:
texts:New name for UIMA TextMarker
This issue provides a platform for discussions about a possible new name of the UIMA TextMarker system. All comments and ideas are welcome.
issueID:UIMA-2813
type:Improvement
changed files:
texts:Document in which order annotations are returned by the "select*" methods
Several people have asked already in which order annotations are returned by the select methods. This should be documented in CasUtil/JCasUtil.
issueID:UIMA-2814
type:Bug
changed files:
texts:DUCC Service manager doesn&#39;t stop &#39;ping-only&#39; services correctly.
Various updates to SM left out some of the paths needed to handle 'ping-only' services correctly.  The start/stop paths need to be better unified so that all cases are handled and special cases are minimized.
issueID:UIMA-2815
type:Improvement
changed files:
texts:Throw IllegalArgumentException when component and componentName list is not of equal size
Throw IllegalArgumentException when component and componentName list is not of equal size in AEF.createAggregateEngine(...). Currently throws an IndexOutOfBoundsException.
issueID:UIMA-2816
type:Bug
changed files:
texts:DUCC Orchestrator (OR) must reject submissions for which Crypto exception occurs

issueID:UIMA-2817
type:Improvement
changed files:
texts:DUCC webserver (WS) should display duration for jobs/reservations, and end time on hover

issueID:UIMA-2818
type:Bug
changed files:
texts:DUCC Service Manger - race modifying autostart with "reference" start
If a service registration and a job that references that service arrive simultaneously, the service gets reference-started before autostart can kick in.  When the referenced job exits, SM remembers the service was reference started and schedules a lingering stop.If autostart is set, the reference-start should not cause the service to linger-stop.To reproduce,  1 register a service with autostart false 2 submit a job that starts the job by reference 3 set autostart true after the job startsIf the bug is present the service will be linger-stopped when the job exits.  If the bug is fixed, the service will stay active.
issueID:UIMA-2819
type:Bug
changed files:
texts:DUCC Orchestrator (OR) uses wrong ducc property to identify broker name
1. Reaper does not clean-up JD queues because wrong broker.name is used (as opposed to broker.hostname)2. Refactor reaper code to make it (mostly) re-usable
issueID:UIMA-282
type:Wish
changed files:uimaj-core/src/main/java/org/apache/uima/impl/UIMAFramework_impl.java
uimaj-core/src/main/java/org/apache/uima/util/impl/Log4jLogger_impl.java
texts:Work well with Apache logging (Log4J)
UIMA uses the standard java.util.logging (JUL).  Most of my company's code used Apache Log4J, so we have a problem merging the messages from the two logging packages.  Given that UIMA is now an Apache project, I think it makes sense that it work with Apache logging.Two options occur to me:1. Change all the logging calls in the code (perhaps Eclipse refactoring tools can help with that).  Here's some discussion on migrating: http://www.oreillynet.com/onjava/blog/2005/12/migrating_from_jdk_logging_to.html You could convert either to Log4J ( http://logging.apache.org/log4j/docs ) or to Apache Jakarta Commons Logging ( http://jakarta.apache.org/commons/logging ), which would allow UIMA to be configured to use either JUL or Log4J.2. Write/find a JUL Handler that re-directs to Log4J.  Here's an example: http://home.gwu.edu/~amrinder/chainsawHandler/UsingChainsawWithJDKLogging.html
issueID:UIMA-2820
type:Improvement
changed files:
texts:DUCC Job Driver (JD) should record UIMA-AS callbacks for queue and dequeue of work items in jd.out.log (as Info, not Debug)

issueID:UIMA-2821
type:Improvement
changed files:
texts:DUCC webserver (WS) Services page improvements
1. Change heading from Pinging to Pinger2. Change Pinger status reported from Yes/No to Up/Down3. Change Health status reported from Good/Poor to Up/Downas recommended by Complainer-In-Chief
issueID:UIMA-2822
type:Bug
changed files:uimaj-core/src/main/java/org/apache/uima/internal/util/rb_trees/IntArrayRBT.java
texts:regression bug introduced into IntArrayRBT
Fix bug introduced during refactoring of IntArrayRBT - showed up in failing test for set indexes.
issueID:UIMA-2823
type:New Feature
changed files:
texts:TextMarker: Easy way to create a TextMarker-based AnalysisEngineDescription
Hello,I would think it useful to have the possibility to create an AnalysisEngineDescription (like in a UIMAFit way) from a TextMarker-Skript-String. Example in Java:AnalysisEngineDescription tmAED = TextMarkerEngineCreator.parse("TOKEN TOKEN* PERIOD { -> MARK(Sentence,1,2) }");The user has to ensure that the types used in the script do exist and that no types are created. It would be a quick and easy way to use TextMarker in pipelines.
issueID:UIMA-2824
type:Bug
changed files:
texts:DUCC job driver (JD) not publishing proper completion information to orchestrator (OR)
Symptom is that Job has 4 work items total, 3 completed and 1 error.  Job remains active.  It should move to the Completed state, but never does.  Seen in or.log is:22 Apr 2013 13:41:59,802  INFO OR.OrchestratorComponent - reconcileJdState   39335 state:Idle threads:4 total:4 fetched:4 started:4 completed:3 error:1 queued:0 in-progress:0 pending:true unassigned:0 retry:3In fact, pending should be false.(Reported by Complainer-In-Chief on behalf of Bhavani)
issueID:UIMA-2825
type:Improvement
changed files:
texts:DUCC webserver (WS) Job Details Processes tab revisions & .json data file
1. Remove GC Count2. Remove %GC3. Add Major Faults info4. Add Swap Usage info5. Create .json file in user's log directory comprising Processes tab data(as recited by Complainer-In-Chief)
issueID:UIMA-2827
type:Improvement
changed files:
texts:Fetch the OS Page Size During Initialization of the Ducc Agent
Currently Ducc uses static definition of the Page Size from ducc.properties. This doesnt work when running Ducc on a mix cluster. Add code to the agent to fetch the Page Size from the OS by running "getconf PAGESIZE" command.
issueID:UIMA-2828
type:Improvement
changed files:
texts:Ducc Agent ProcessStreamConsumer should use DuccId of the Job when logging msgs
Currently the ProcessStreamConsumer does not log WorkDuccId when logging messages which hides an important detail.
issueID:UIMA-2829
type:Bug
changed files:
texts:[PATCH] Broken link in docs to alphaworks
The link to http://www.alphaworks.ibm.com/tech/uima is broken, and is pointing to http://uima.apache.org/d/uimaj-2.4.0/www.alphaworks.ibm.com/tech/uima instead.
issueID:UIMA-283
type:Bug
changed files:uimaj-examples/src/main/java/org/apache/uima/examples/casMultiplier/SimpleTextMerger.java
uimaj-examples/src/main/java/org/apache/uima/examples/casMultiplier/SimpleTextMerger.java
texts:CAS Merger example component does not work with CVD/old API call
CAS Merger example component does not work with CVD or with an old API call. The merger component throws a RuntimeException.Is this the expected behavior, or should the framework should throw an exception that this is not supported with this API? We should at least document that.
issueID:UIMA-2830
type:Improvement
changed files:
texts:Expose FSIterator via (J)CasUtil.select*() methods where applicable
Some of the uimaFIT (J)CasUtil "select" methods work directly on an FSIndex or FSIterator. In those cases, it would be nice if the methods didn't just return a Collection, but some FSCollection<T> in which the iterator() method returns an FSIterator<T>.At least in those cases were an AnnotationIndex is used, it would be possible to actually return something that implements Collection<T> and FSIndex<T>, so it can be used in constructors like new ArrayList(...), in modern-style for loops, and for type-save access to the index. In those cases were an FSIterator is used because the type searched for is not an annotation, the FSIndex<T> interface is not a good choice, because it contains several methods that cannot be implemented based only on FSIterator.So maybe two interfaces: FSCollection<T> based on FSIterator and AnnotationCollection<T> based on FSIndex/AnnotationIndex.This mainly exposes more details of UIMA AnnotationIndex via CasUtil. JCasUtil's select method doesn't make a different between FSes that inherit from AnnotationFS or not. Here, the only benefit is getting access to an FSIterator.
issueID:UIMA-2831
type:New Feature
changed files:
texts:Provide command/popup to update projects in TextMarker Workbench
The basic descriptors will probably change again. It would be really convenient for users if they can update TextMarker projects without manually copying the files. A command/popup could simply replace the basic descriptors. This command should also be able to update other aspects of a textmarker project, e.g., the project nature.
issueID:UIMA-2832
type:New Feature
changed files:uimaj-core/src/main/java/org/apache/uima/util/CasCopier.java
texts:Add "lenient" option to CasCopier function
Add capability in CasCopier to ignore (not copy over) any FSs and features not defined in the type system of the target CAS. The default behavior of CasCopier will not change (and will throw exceptions in such cases).
issueID:UIMA-2833
type:Bug
changed files:
texts:DUCC service manager - save history
DUCC service manger needs to save service registrations in history area.  It also needs to save the links between registrations and defunct instances.
issueID:UIMA-2834
type:Improvement
changed files:
texts:Add test and documentation for language extensions
The language extensions are not yet covered by unit tests and there no documentation how to actually extend the language with new actions and conditions.
issueID:UIMA-2835
type:Bug
changed files:
texts:DUCC Orchestrator (OR) state machine should bypass WaitingForServices when there are no such dependencies
As reported by complainer #2:By the way, I was surprised to see on the client side:  uW AllInOneLauncher.ignored ignoring service_dependencyas it does have a WaitingForServices state
issueID:UIMA-2836
type:Bug
changed files:
texts:Add LICENSE and NOTICE files to Ducc project
Need Legal stuff for Ducc
issueID:UIMA-2837
type:Bug
changed files:
texts:Ducc startup scripting must create the webserver jsp compilation directory if it doesn&#39;t exist.
If the webserver's jsp compilation directory does not exist at boot, the webserver will fail to serve JSPs.  It appears that Jetty does in fact create the directory, but a bit after-the-fact, so activation of a JSP causes an HTTP 500 error on fetch of the JSP.  Restart of the webserver "fixes" the problem because now the directory exists.  Seems like bad behavior!  A trivial bypass is to insure the directory exists at boot.
issueID:UIMA-2838
type:Improvement
changed files:
texts:DUCC webserver (WS) should employ new Agent provided Page-In data to show Paging (replacing Swapping) on Jobs page
WS comprises an Observer to record and report on Page-Ins over 60 second intervals, as disbursed by Orchestrator (OR) publications.
issueID:UIMA-2839
type:New Feature
changed files:
texts:Provide option to avoid own vm for LaunchDelegate in TextMarker Workbench
The new LaunchDelegate starts a vm in order to expand the classpath. However, this functionality prevents debugging the rule implementation directly in the workbench, if the workbench is started in developement mode. Add an option to avoid a new vm. The LaunchDelegate should then simply call the main method of the launcher.
issueID:UIMA-284
type:Bug
changed files:uimaj-cpe/src/main/java/org/apache/uima/collection/impl/cpm/utils/ExpirationTimer.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/cpm/engine/SequencedQueue.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/cpm/engine/ProcessingUnit.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/cpm/engine/DebugControlThread.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/cpm/engine/CPMEngine.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/cpm/engine/CPECasPool.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/cpm/engine/BoundedWorkQueue.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/cpm/engine/ArtifactProducer.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/cpm/container/deployer/vinci/VinciCasProcessorDeployer.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/cpm/container/deployer/socket/SocketCasProcessorDeployer.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/cpm/container/deployer/VinciTAP.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/cpm/Checkpoint.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/cpm/container/ServiceProxyPool.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/cpm/container/ProcessingContainer_Impl.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/cpm/engine/CPMEngine.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/cpm/engine/ArtifactProducer.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/cpm/container/ProcessingContainer_Impl.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/cpm/container/deployer/VinciTAP.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/cpm/container/deployer/vinci/VinciCasProcessorDeployer.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/cpm/engine/CPMEngine.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/cpm/engine/DebugControlThread.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/cpm/utils/ExpirationTimer.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/cpm/Checkpoint.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/cpm/container/ProcessingContainer_Impl.java
texts:Synchronization issues
Based on some feedback from a user reporting difficulties running large-scale CPM / Vinci deployments, a code inspection has uncovered some potential issues in jVinci, the Core, and Collection Processing code around multi-threading, synchronization, waiting/notifying, and accomodating the Java Memory Model.
issueID:UIMA-2840
type:Bug
changed files:
texts:Add process details to the performance stat reporting tool.
The performance statistics report tool does not show individual process statistics but it should.
issueID:UIMA-2841
type:Bug
changed files:
texts:CpeGui: NullPointerException when choosing a Descriptor of Collection Reader
(as reported by Eric Riebling on the mailing list, but this has been bothering us for a long time also, and I just confirmed it with the exact same exception)When running CPE GUI and a Collection Reader is already part of theconfiguration, if you click "Browse.." to select a different CollectionReader (or even the same Collection Reader), a null pointer exception isthrown. This has been happening to me for years, and happens on bothWindows and Linux. The only work-around is to edit the CPE descriptor's rawXML and paste in the proper XML for the Collection Reader you wish toreplace with.Here is the stack trace:java.lang.NullPointerExceptionat org.apache.uima.tools.cpm.CpmPanel.fileSelected(CpmPanel.java:1509)atorg.apache.uima.tools.util.gui.FileSelector$1.actionPerformed(FileSelector.java:141)at javax.swing.AbstractButton.fireActionPerformed(AbstractButton.java:1995)at javax.swing.AbstractButton$Handler.actionPerformed(AbstractButton.java:2318)atjavax.swing.DefaultButtonModel.fireActionPerformed(DefaultButtonModel.java:387)at javax.swing.DefaultButtonModel.setPressed(DefaultButtonModel.java:242)atjavax.swing.plaf.basic.BasicButtonListener.mouseReleased(BasicButtonListener.java:236)at java.awt.Component.processMouseEvent(Component.java:6288)at javax.swing.JComponent.processMouseEvent(JComponent.java:3267)at java.awt.Component.processEvent(Component.java:6053)at java.awt.Container.processEvent(Container.java:2041)at java.awt.Component.dispatchEventImpl(Component.java:4651)at java.awt.Container.dispatchEventImpl(Container.java:2099)at java.awt.Component.dispatchEvent(Component.java:4481)at java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4577)at java.awt.LightweightDispatcher.processMouseEvent(Container.java:4238)at java.awt.LightweightDispatcher.dispatchEvent(Container.java:4168)at java.awt.Container.dispatchEventImpl(Container.java:2085)at java.awt.Window.dispatchEventImpl(Window.java:2478)at java.awt.Component.dispatchEvent(Component.java:4481)at java.awt.EventQueue.dispatchEventImpl(EventQueue.java:643)at java.awt.EventQueue.access$000(EventQueue.java:84)at java.awt.EventQueue$1.run(EventQueue.java:602)at java.awt.EventQueue$1.run(EventQueue.java:600)at java.security.AccessController.doPrivileged(Native Method)atjava.security.AccessControlContext$1.doIntersectionPrivilege(AccessControlContext.java:87)atjava.security.AccessControlContext$1.doIntersectionPrivilege(AccessControlContext.java:98)at java.awt.EventQueue$2.run(EventQueue.java:616)at java.awt.EventQueue$2.run(EventQueue.java:614)at java.security.AccessController.doPrivileged(Native Method)atjava.security.AccessControlContext$1.doIntersectionPrivilege(AccessControlContext.java:87)at java.awt.EventQueue.dispatchEvent(EventQueue.java:613)atjava.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:269)atjava.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:184)atjava.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:174)at java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:169)at java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:161)at java.awt.EventDispatchThread.run(EventDispatchThread.java:122)
issueID:UIMA-2842
type:Bug
changed files:
texts:Some reasons for job failures are not displayed in WS or recorded in jd.err.log
A job (P7-2828) failed with hovers of "not runnable" & "no more work for process"... no other clues in WS or logs.  But I found in the OR log it was because of "services unavailable".  "Not runnable" is not a very informative reason!
issueID:UIMA-2843
type:Bug
changed files:
texts:select(ArrayFS array, Type type) returns all FSes from the CAS, not just from the array
select(ArrayFS array, Type type) returns all FSes from the CAS, not just from the array
issueID:UIMA-2844
type:Improvement
changed files:jVinci/src/main/java/org/apache/vinci/transport/document/XMLToXTalk.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/impl/RsLang.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/impl/RsLangs.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/wizards/AbstractNewWizard.java
uimaj-ep-jcasgen/src/main/java/org/apache/uima/jcas/jcasgenp/JgPlugin.java
uimaj-ep-jcasgen/src/main/java/org/apache/uima/jcas/jcasgenp/JgPluginRunner.java
texts:remove some findbugs reported issues
Remove some findbugs reported issues.
issueID:UIMA-2845
type:Bug
changed files:
texts:createAggregateDescription takes type system as argument but never uses it.
createAggregateDescription takes type system as argument but never uses it:  /**   * A factory method for creating an aggregate description.   *    * @param analysisEngineDescriptions list of analysis engine descriptions.   * @param componentNames list of component names - must be one name per description!   * @param typeSystem the type system to be used.   */  public static AnalysisEngineDescription createAggregateDescription(          List<AnalysisEngineDescription> analysisEngineDescriptions, List<String> componentNames,          TypeSystemDescription typeSystem, TypePriorities typePriorities,          SofaMapping[] sofaMappings, FlowControllerDescription flowControllerDescription)          throws ResourceInitializationExceptionIn this method, the parameter "typeSystem" is never actually used.
issueID:UIMA-2846
type:Improvement
changed files:
texts:Add more select* methods that do not take a CAS argument
There is potential to add more select methods that do not need a CAS argument, because they are relative to some other annotation(s). Add CAS-less signatures for these.
issueID:UIMA-2847
type:Improvement
changed files:
texts:Address some PMD issues
Address some PMD issues
issueID:UIMA-2848
type:Bug
changed files:
texts:APs do&#39;t set the exit code
Managed Reservations need to set the exit code so the invoking process (the driver) can recognize failure
issueID:UIMA-285
type:Bug
changed files:
texts:shell scripts test if JAVA_HOME is not set, and if so, set it to an invalid value
shell scripts test if JAVA_HOME is not set, and if so, set it to an invalid value: UIMA_HOME/java/jre  This should be changed so that if JAVA_HOME is not set, to use the Java on the normal "Path".
issueID:UIMA-2850
type:Task
changed files:
texts:Rename UIMA TextMarker to UIMA Ruta
UIMA Ruta (UIMA-RUTA) was voted the new name for the UIMA TextMarker projects. Now "everything" needs to be renamed: svn: projects, packages, ... implementation: classes, artifacts, plugins, extension points, labels, ... content of additional files, e.g., NOTICE jira elements: component and version website documentation jenkins build job ...I will try to rename as many files as possible with svn operations in order to retain their svn history.
issueID:UIMA-2851
type:Bug
changed files:
texts:Remove @Override annotation from DUCC&#39;s code
Some of Ducc's classes contain @Override annotation which is flagged as Compile Error while running eclipse in 1.5 compatibility mode. This mode is turned on by default by UIMA parent pom to enforce 1.5 compliance.
issueID:UIMA-2852
type:Bug
changed files:
texts:JConsole URL links not working
1. (ld) Create ANT script to properly establish signed java webstart jar file2. (ld) Update WS to employ signed jar file within generated .jnlp3. (jc) Installation script must invoke ANT script to create signed jar file and deploy to expected WS location
issueID:UIMA-2853
type:Bug
changed files:
texts:When process_debug specified the job should not be restarted on failure

issueID:UIMA-2854
type:Improvement
changed files:
texts:DUCC command line interface (CLI) should choose an appropriate "fixed" class for submission when all-in-one or debug flag is specified
There should be an "automatic" mapping from a preempt-type class to a corresponding fixed-type class so that all-in-one and debug jobs are not interrupted by the scheduler.
issueID:UIMA-2855
type:Bug
changed files:
texts:DUCC webserver (WS) is not honoring "unified" --cancel_on_interrupt flag
As reported by our resident adjunct-complainer.
issueID:UIMA-2856
type:Bug
changed files:
texts:DUCC Service Manger should clean up Queues when services exit
Because DUCC manages both Submitted and Registered services it can determine when the service instances are dead and nobody is using the queues.  When that occurs, SM should remove the UIMA-AS queues from the broker so it doesn't get cluttered.
issueID:UIMA-2857
type:Improvement
changed files:
texts:DUCC Orchestrator (OR) should indicate Job Driver node assignment status in its publication

issueID:UIMA-2858
type:Task
changed files:
texts:Contribute transformation-based rule learning to UIMA Ruta
A new rule learning algorithm for the TextRuler framework of the UIMA Ruta Workbench, which is able to induce transformation-based error-driven rules. The basic idea is similar to the Brill-Tagger, but it is completely generic (no rule templates) and can also handle arbitrary annotations instead of tags of tokens. This algorithms was built in order to learn how to correct the annotations of arbitrary models or human annotators.
issueID:UIMA-2859
type:Task
changed files:
texts:Contribute constraint-driven evaluation to UIMA Ruta
This project is essentially about evaluating information extractionmodels (e.g., ruta rules) without labeled data. It is a new frameworksimilar to the testing views of the UIMA Ruta Workbench, which are usedfor back-testing and test-driven development. In contrast to the testingviews, the new framework is able to evaluate documents without a golddataset. Here, the user can specify background knowledge (constraints),which are applied to estimate the accuracy.
issueID:UIMA-286
type:Bug
changed files:jVinci/src/main/java/org/apache/vinci/transport/vns/service/NameClient.java
texts:Math.abs returns a negative number very occasionally, causing NameClient in jVinci to fail
NameClient class in jVinci has faulty use of Math.abs(an-integer) - it presumes this returns a positive or 0 integer.  However, the Java impl of this when given the integer Integer.MIN_VALUE, returns the negative number MIN_VALUE.Found by Findbugs.
issueID:UIMA-2860
type:Task
changed files:
texts:Contribute rule learning based on engineering patterns to UIMA Ruta
A new rule learning algorithm with the idea, that humans use differentengineering patterns to create rule files. The implementation containssimple learning algorithms for a few patterns and tries to combine thedifferent rules in order to gain advantage of their synergy.Essentially, the resulting rules should resemble more the rules a humanwould write.
issueID:UIMA-2861
type:Bug
changed files:
texts:Fix building-uima.html web page to correct uima-as building  instructions
Instructions for building uima-as have a small bug. On the building-uima.html page, section Building UIMA - using the command line there is :cd to c:\myWorkingDirectoryForUima-as\uima-aswhich should becd to c:\myWorkingDirectoryForUima-as\
issueID:UIMA-2863
type:Bug
changed files:
texts:DUCC --all_in_one API should handle Callback
1. Provide CliBase helper functions mkArgs(Properties props) and IDuccCallback getCallback()2. Update DuccJobSubmit to   a) detect --all_in_one flag   b) create AllInOneLauncher instance with corresponding signature, including callBack if specified   c) invoke execute() on AllInOneLauncher instance3. Update AllInOneLauncher and MessageHandler to   a) support creation of instance with callback specified   b) employ callback for message, if present
issueID:UIMA-2864
type:Improvement
changed files:
texts:DUCC webserver (WS) root/doc
Make doc available from webserver (WS) directory
issueID:UIMA-2865
type:New Feature
changed files:
texts:ruta: display of annotation super types in annotation browser view
In the Annotation Browser View only annotation types are displayed for which annotations exist and not the parents of the types of those annotations. It would be useful in some cases if (by parametrisation) also all parents of those annotation types could be browsed.
issueID:UIMA-2866
type:Improvement
changed files:
texts:Parameter ordering could be improved in ConfigurationParameterInitializer & ExternalResourceInitializer
In the both initializer the order of parameters is reversed.ConfigurationParameterInitializer.initialize(featExt, context);ExternalResourceInitializer.initialize(context, featExt);
issueID:UIMA-2867
type:Bug
changed files:
texts:Composed Ruta rule with min/max quantifier broken
The rule ((W PERIOD)[4,5] W);does not match on the stringorg.apache.uima.ruta.type.CW
issueID:UIMA-2868
type:Improvement
changed files:
texts:ducc.signature.required=off does not work?
Lou, strange, for some reason I had signature checking OFF and ducc_services_submit was failing:challngr@agent86:~/ducc_runtime/examples/simple> ducc_service_submit --specification 4.svc Job errors:ERROR:  type=authentication error, text=signature not valid.Could not submit ServiceI turned it back on and now all is working!Jim off,  // CLI submit and cancel signature enforcement disabled on,   // CLI submit and cancel signature enforcement enabled (default)ducc.signature.required=on
issueID:UIMA-2869
type:New Feature
changed files:
texts:DUCC Orchestrator (OR) must reject [or queue] job submissions when JD allocation is full so as to not overcommit CGroup

issueID:UIMA-287
type:Bug
changed files:
texts:Eliminate required use of UIMACPP_HOME during SDK build steps
UIMACPP_HOME should be optionally used during build & test of uima library, and not used at all for an SDK build.
issueID:UIMA-2870
type:Bug
changed files:
texts:Move CPE-related code to separate module
StevenCpeBuilder - Do we really want to encourage people to build CPEs? Myimpression in general is that UIMA is moving away from CPEs. Andanyway, for actually running code, we have SimplePipeline, etc.As an added benefit, if we remove both of the above, I believe we canremove the entire uimaFIT dependency on uimaj-tools, and the resultingtransitive dependencies on uimaj-cpe, uimaj-adapter-vinci, jVinci, anduimaj-document-annotation.RichardI'd like to keep the CpeBuilder in uimaFIT, because I actually use it.It could be  moved to a separate module, to remove the dependencies fromthe core uimafit.StevenYeah, that would be great if you don't mind too much.
issueID:UIMA-2871
type:Improvement
changed files:
texts:Remove JCasGenPomFriendly in favor of jcasgen-maven-plugin
Remove JCasGenPomFriendly in favor of jcasgen-maven-plugin (UIMA-2471)
issueID:UIMA-2872
type:Bug
changed files:uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/AnnotationEditor.java
texts:Annotation Editor fails to handle invalid annotation mode setting
The Annotation Editor fails to handle the case that an non-existing (or invalid) annotation mode type is stored in the settings. The type can become non-existing after a user modified or changed a type system.In case the annotation mode type is not available the default uima.tcas.Annotation type should be used instead. The user can change the type to another type in the type system after the editor is open.
issueID:UIMA-2873
type:New Feature
changed files:
texts:ruta: display feature name for referenced annotation in annotation browser view
currently the annotation browser view for features referencing other annotations only displays "Type: CoveredText"It would be beneficial if it would display"FeatureName: Type: CoveredText"
issueID:UIMA-2874
type:Improvement
changed files:uimaj-core/src/main/java/org/apache/uima/cas/impl/Serialization.java
uimaj-core/src/main/java/org/apache/uima/cas/CAS.java
uimaj-core/src/main/java/org/apache/uima/cas/CASRuntimeException.java
uimaj-core/src/main/java/org/apache/uima/cas/SerialFormat.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/BinaryCasSerDes6.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/CASCompleteSerializer.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/CASImpl.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/CASSerializer.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/Serialization.java
uimaj-core/src/main/java/org/apache/uima/internal/util/SerializationUtils.java
uimaj-core/src/main/java/org/apache/uima/cas/CAS.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/BinaryCasSerDes6.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/CASImpl.java
texts:binary compression APIs in CAS
Rationalize the CASImpl binary compression APIs; add to the CAS Apis.
issueID:UIMA-2875
type:Bug
changed files:
texts:UIMA Ruta launch not working for folders
A user reported:IN 2.0.1-SNAPSHOT the RutaLauncher complains about the CVS directory in the input folder:Exception in thread "main" java.io.FileNotFoundException: <projectLocation>/input/CVS (Is a directory) at java.io.FileInputStream.open(Native Method) at java.io.FileInputStream.<init>(FileInputStream.java:138) at org.apache.uima.util.FileUtils.file2String(FileUtils.java:155) at org.apache.uima.ruta.ide.launching.RutaLauncher.processFile(RutaLauncher.java:149) at org.apache.uima.ruta.ide.launching.RutaLauncher.main(RutaLauncher.java:119)
issueID:UIMA-2876
type:Bug
changed files:
texts:DUCC Orchestrator (OR) don&#39;t use negative logic to determine signature validity, and honor ducc.signature.required = off

issueID:UIMA-2877
type:New Feature
changed files:
texts:Add support to quiesce DUCC&#39;s Agent
To support taking nodes off line in an orderly manner, the agent should stop publishing its metrics when requested. The RM detects that the node is down and will not schedule any new work. The existing work will be preempted and moved elsewhere. The request will arrive via DUCC's admin channel. The agent will check if it is a target node for the message and immediately stop the Camel route which drives the collection and publishing of metrics.
issueID:UIMA-2878
type:Improvement
changed files:
texts:DUCC&#39;s Agent should normalize Jiffies to Seconds
Currently, the agent is collecting process cpu utilization from /proc/<pid>/stat file. The cpu collected is expressed in terms of jiffies which represent number of OS interrupts since the process started. Normalize this by dividing jiffies by the clock rate as reported by getconf CLK_TCK.
issueID:UIMA-2879
type:Bug
changed files:
texts:When --all_in_one option set client should not call exit

issueID:UIMA-288
type:Bug
changed files:uimaj-core/src/main/java/org/apache/uima/pear/util/XMLUtil.java
uimaj-core/src/main/java/org/apache/uima/pear/util/XMLUtil.java
texts:NPE possible in PEAR Util XMLUtil printError method
If null is passed as the SAXParseException, there is incomplete code handling this case.  Add necessary additional handling for this case.
issueID:UIMA-2880
type:New Feature
changed files:
texts:Extend simple ruta regexp rules with feature support
It would be nice if the simple regexp rule also supports the assignment of feature values. The proposed syntax is something like:"(regexp) (string)" -> Type1, 1 = Type2 ("feat" = 2);The additional parentheses contain the feature assignments whereas numermic expressions refer to the matching group. All other expressions are interpreted as before. If someone wants to assign numbers to primitive features, then he/she has to write another (normal) rule.
issueID:UIMA-2881
type:Task
changed files:
texts:Update DUCC&#39;s poms, LICENSE, Notice and scripts for the release
Check the poms to make sure all maven plugins are in place for the release. Still need to add JavaDoc, RAT, and JIRA maven plugins.
issueID:UIMA-2882
type:Task
changed files:
texts:Modify DUCC&#39;s Agent to call external script to cleanup rogue processes
Currenty, the agent supports killing rogue processes using kill -9 when this feature is enabled in ducc.properties. Need a different mechanism which would be external to the agent. Instead of invoking a kill command, the agent calls a script configured in the ducc.properties which will do the cleanup. The agent will pass a PID of the process to the script. Ducc will include a sample script which will do nothing. It would be up to the administrator to setup appropriate steps needed to stop the rogue process.
issueID:UIMA-2883
type:Bug
changed files:uimaj-core/src/main/java/org/apache/uima/cas/impl/FSIndexRepositoryImpl.java
texts:getting a named index from the index repo sometimes returns the wrong index
Test case IteratorTest succeeded on my workstation but failed in Jenkins.  This test was recently modified to be more thorough, and in particular, checks to see that a set index doesn't have multiples of the same key.The failure was reproducable on my workstation by running with Sun Java version 1.5.  Analysis of this showed that the code in the index repository implementation to find an index by name, for a particular type, was only checking if the index on a type had the same "comparator" - that is, the set of keys and compare order, as the "named" index.  This failed to distinguish the case where there were 2 defined indexes, one being a "set", the other "sorted", with exactly the same comparator definitions, as is the case in this test.  The result was the findIndex method picked the first one it found - and it found in the failing case, the sorted index.Fix this by adding a test to findIndex that checks the indexType (e.g. Set, Sorted, Bag).
issueID:UIMA-2884
type:Improvement
changed files:
texts:WS needs to look for and display history/services-registry for services history

issueID:UIMA-2885
type:New Feature
changed files:
texts:Add createAnalysisEngineDescriptionFromPath method
Several people have problems using uimaFIT with traditional XML descriptors because we have a createAnalysisEngineFromPath method, but not a createAnalysisEngineDescriptionFromPath. It is best practice in uimaFIT to work with descriptors instead of completely instantiated AEs. So such a method should be added to the AnalysisEngineFactory.
issueID:UIMA-2886
type:Improvement
changed files:
texts:DUCC Sched. Classes should be decorated with time-to-live for fixed

issueID:UIMA-2887
type:Improvement
changed files:
texts:DUCC job driver (JD) should reap unprocessed (no callback received) work items
Detect lost work items when:a) CR is exhausted, andb) JPs have excess capacity, andc) at least one minute has elapsed since work item has be given to UIMA-AS client w/o corresponding callback
issueID:UIMA-2888
type:Bug
changed files:
texts:Ruta IDE parser covers "Identifier" insufficiently
There is a problem in distinguishing the correct type of a variable/identifier in the ast parser:warning(203): org\apache\uima\ruta\ide\core\parser\RutaParser.g:585:2: Input such as "Identifier" is insufficiently covered with predicates at locations: alt 2: line 2050:7 at Identifierwarning(200): org\apache\uima\ruta\ide\core\parser\RutaParser.g:585:2: Decision can match input such as "Identifier" using multiple alternatives: 1, 2As a result, alternative(s) 2 were disabled for that inputwarning(203): org\apache\uima\ruta\ide\core\parser\RutaParser.g:597:2: Input such as "Identifier" is insufficiently covered with predicates at locations: alt 2: line 2050:7 at Identifierwarning(200): org\apache\uima\ruta\ide\core\parser\RutaParser.g:597:2: Decision can match input such as "Identifier" using multiple alternatives: 1, 2As a result, alternative(s) 2 were disabled for that inputwarning(203): org\apache\uima\ruta\ide\core\parser\RutaParser.g:1307:5: Input such as "Identifier" is insufficiently covered with predicates at locations: alt 1: line 2050:7 at Identifier, alt 2: line 2103:7 at Identifierwarning(200): org\apache\uima\ruta\ide\core\parser\RutaParser.g:1307:5: Decision can match input such as "Identifier" using multiple alternatives: 1, 2As a result, alternative(s) 2 were disabled for that inputwarning(203): org\apache\uima\ruta\ide\core\parser\RutaParser.g:1329:5: Input such as "Identifier" is insufficiently covered with predicates at locations: alt 1: line 2166:7 at Identifier, line 1909:7 at Identifier, line 881:7 at Identifier, alt 2: line 2103:7 at Identifierwarning(200): org\apache\uima\ruta\ide\core\parser\RutaParser.g:1329:5: Decision can match input such as "Identifier" using multiple alternatives: 1, 2As a result, alternative(s) 2 were disabled for that inputwarning(203): org\apache\uima\ruta\ide\core\parser\RutaParser.g:1359:5: Input such as "Identifier" is insufficiently covered with predicates at locations: alt 1: line 2050:7 at Identifier, alt 2: line 2103:7 at Identifierwarning(200): org\apache\uima\ruta\ide\core\parser\RutaParser.g:1359:5: Decision can match input such as "Identifier" using multiple alternatives: 1, 2As a result, alternative(s) 2 were disabled for that input
issueID:UIMA-2889
type:Bug
changed files:
texts:Trim Duccs&#39; open source distros that are packaged in Duccs&#39;s tarball
Some of the open source distros that Ducc tarball includes are way too big. Activemq in particular is the biggest offender. Trim these to include an essential set of jars/files to allow the Ducc system to work.
issueID:UIMA-289
type:Bug
changed files:uimaj-cpe/src/main/java/org/apache/uima/collection/impl/metadata/cpe/CasProcessorDeploymentParamsImpl.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/metadata/cpe/CasProcessorDeploymentParamsImpl.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/metadata/cpe/CasProcessorDeploymentParamsImpl.java
uimaj-core/src/main/java/org/apache/uima/collection/metadata/CasProcessorDeploymentParams.java
uimaj-core/src/main/java/org/apache/uima/collection/metadata/CasProcessorDeploymentParams.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/metadata/cpe/CasProcessorDeploymentParamsImpl.java
texts:CasProcessorDeploymentParamsImpl has incorrect equals test argument
the remove method compared something of type "CasProcessorDeploymentParam" with something of type "String".
issueID:UIMA-2890
type:Improvement
changed files:
texts:process() methods should not be in AnalysisEngineFactory
There are process() methods that should not be in AnalysisEngineFactory. They should be moved somewhere into the pipeline package.
issueID:UIMA-2891
type:Task
changed files:
texts:Check if type priorities may be configured on an aggregate
Check if type priorities may be configured on an aggregate. A type system cannot be set on the level of an aggregate. If this is not possible, the parameter can be removed from all corresponding factory methods.
issueID:UIMA-2892
type:Task
changed files:
texts:Improve/clean up JavaDoc (and Exceptions)
Improve/clean up JavaDoc (and Exceptions). May parameters are not documented. Several exceptions are declared but never thrown.
issueID:UIMA-2893
type:Bug
changed files:
texts:Indexes can be automatically detected but this is not done in AnalysisEngineFactory
Indexes can be automatically detected but this is not done in AnalysisEngineFactory. The simplest createPrimitive() call already auto-detects the type system and the type priorities (UIMA-2533), but the indexes are ignored so far.See also: https://code.google.com/p/uimafit/issues/detail?id=54
issueID:UIMA-2894
type:Technical task
changed files:
texts:TypeCapability should include LanguagesSupported
The TypeCapability enum currently only supports inputs and outputs, while the UIMA XML files include inputs, outputs and languagesSupported. See also: https://code.google.com/p/uimafit/issues/detail?id=102
issueID:UIMA-2897
type:Bug
changed files:
texts:Build may fail until uimafit-missing-meta-data-report.txt is removed manually
There appears to be a problem when a component is removed from the source code. It appears not to be removed from the report file during the next build in all cases, so that the build may continually fail until uimafit-missing-meta-data-report.txt is removed manually.Pushing this bug to 2.1.0uimaFIT, since it doesn't appear to happen a lot and is reasonably easy to work around. Needs more work to track down and fix (if it's really a bug in the plugin and not just an m2e glitch).
issueID:UIMA-2898
type:Bug
changed files:
texts:Assigment of boolean expressions broken in SETFEATURE action
Assigment of boolean expressions is broken in SETFEATURE action because they will be interpreted as string expression.
issueID:UIMA-2899
type:Bug
changed files:
texts:DUCC UI complaint: "I believe this is a baby chicken, not a ducc."
Image shown for making reservation via WS seems to be a baby chicken, not a duck!
issueID:UIMA-29
type:Bug
changed files:
texts:Can&#39;t call process twice on CPE
(Issue reported on SourceForge)My problem occurs when I call process() twice on aCollectionProcessingEngine. The call bombs out with anext to useless thread exception.6/09/2006 11:28:39com.ibm.uima.reference_impl.collection.cpm.BaseCPMImplrun(515)SEVERE: java.lang.IllegalThreadStateExceptionThe docs appear to suggest its fine to call processmore than once just not at the same time.Follow up:Sender: cwiklikThis is a known limitiation and perhaps not well documented. Can you explain the use case for calling process on the same CPE more than once? Workaround for this limitation is to create a new instance of the CollectionProcessingEngine. Is this for now acceptable?
issueID:UIMA-290
type:Bug
changed files:uimaj-cpe/src/main/java/org/apache/uima/collection/impl/cpm/engine/CPMEngine.java
texts:Wrong logical connector || when && was intended, CPMEngine
The setupConsumerPipeline has a wrong logical connector - would cause NPE
issueID:UIMA-2900
type:Improvement
changed files:
texts:Refactor Ruta IDE validators
The validators that check syntax and semantics using the ast contain duplicate code and are very inefficient. Some refactoring and clean up is necessary.
issueID:UIMA-2901
type:Improvement
changed files:
texts:DUCC webserver (WS) should display Reserve(GB):size column on Machines page
Add column "Reserve(GB):size" = Shares:total * (configured quantum size)
issueID:UIMA-2903
type:Improvement
changed files:uimaj-core/src/main/java/org/apache/uima/resource/impl/ResourceManager_impl.java
uimaj-core/src/main/java/org/apache/uima/resource/ResourceManager.java
uimaj-core/src/main/java/org/apache/uima/resource/impl/ResourceManager_impl.java
texts:List resources in a ResourceManager / remove hack in uimaFIT
uimaFIT currently gets a list of resources that are registered with a ResourceManager. This is handled via accessing the "mResourceMap" field of the ResourceManager_impl class via reflection. Obviously, this is not a good solution.uimaFIT iterates over the resources in the context while initializing resources that are referenced from other external resources.There may be two options: add a listResources() method to the ResourceManager interface get the resources that need to be initialized in some other way. I don't know if there is one, because if there was, I'd probably have used it. Looking at the @ExternalResource annotations doesn't help, because they do not give informations about the resource bindings. The bindings are only available in the ResourceManager, which takes us back to 1).Would it be possible to add a method allowing to list the resource bindings registered in a ResourceManager to the ResourceManager interface?
issueID:UIMA-2904
type:New Feature
changed files:
texts:Add implicit ruta actions
In UIMA-2758, implicit condition have already been added. Add also implicit actions and documentation for both:CW{-> A};A{A.begin=1};
issueID:UIMA-2905
type:Bug
changed files:
texts:Ruta Workbench template completion broken
Somehow after the recent changes (renaming), the template completion in the UIMA Ruta Workbench does not work correctly anymore.
issueID:UIMA-2906
type:Improvement
changed files:
texts:UIMA-AS AE Performance Stats Should Provide Simpler Unique Name
Current performance stats for AE use a name which is provided by core uima management object. This name is meant for jmx and not easy to parse. Modify uima-as primitive controller to generate a simpler unique name that would be "/" separated path to show hierarchy of AEs.
issueID:UIMA-2907
type:Bug
changed files:
texts:DUCC RM, clarify messages when reservations are refused.

issueID:UIMA-2908
type:Bug
changed files:
texts:Ducc&#39;s AbstractDuccComponent dumps messages to stdout
AbstractDuccComponent class keeps dumping messages to stdout instead of component's log. The stdout is not being redirected to the log and thus useful info is lost.
issueID:UIMA-2909
type:Improvement
changed files:
texts:DUCC Web server - follow normal GUI conventions where feasible
The web interface probably should be designed for the non-expert user.  As such, a good message in place of "MonitorActive" is "Running Normally".  If you want to indicate some extra-ordinary kind of status, you might have the hover text indicate that the job was submitted with an option that permits it to be cancelled by -insert user action here- (don't say "interrupt" - as a non-expert user won't know what that means in terms of a user action.  If it means that the "terminate" button on the left works, they you might say that).When a job enters the state "ending" (but not fully ended), this field could read "Job is Ending".  When the job is ended, this field could read Job Ended normally, or some indication that it didn't end normally, and why.The hover in general should be consistent with the message, and supply more details of interest to the non-expert user.  For instance, if the message is Running Normally, the hover might say "Running Normally. To manually cancel, use the terminate button on the left."In any case, I would not use the hover to inform the user about some auto-cancellation feature that is like a cleanup if the client dies.
issueID:UIMA-291
type:Bug
changed files:
texts:"bad interpreter" when using pearMerger.sh script on linux
"bad interpreter" when using pearMerger.sh script on linux. Script file contains windows end of line characters.
issueID:UIMA-2910
type:Bug
changed files:
texts:debug_jvm_args must not have leading space
Without --process_jvm_args defined the leading space breaks the launch of AllInOne
issueID:UIMA-2911
type:Bug
changed files:
texts:5/14/13 9:59:22 PM - 10 - INFO: [1.1.1] id:44721 state:NotFound
Job monitor incorrectly flags job as having failed.5/14/13 9:51:23 PM - 10 - INFO: &#91;1.1.1&#93; id:44721 state:Running total:1039 done:1033 error:0 retry:0 procs:135/14/13 9:51:43 PM - 10 - INFO: &#91;1.1.1&#93; id:44721 state:Running total:1039 done:1033 error:0 retry:0 procs:125/14/13 9:52:03 PM - 10 - INFO: &#91;1.1.1&#93; id:44721 state:Running total:1039 done:1034 error:0 retry:0 procs:115/14/13 9:52:23 PM - 10 - INFO: &#91;1.1.1&#93; id:44721 state:Running total:1039 done:1035 error:0 retry:0 procs:95/14/13 9:52:43 PM - 10 - INFO: &#91;1.1.1&#93; id:44721 state:Running total:1039 done:1037 error:0 retry:0 procs:85/14/13 9:53:03 PM - 10 - INFO: &#91;1.1.1&#93; id:44721 state:Running total:1039 done:1037 error:0 retry:0 procs:75/14/13 9:53:43 PM - 10 - INFO: &#91;1.1.1&#93; id:44721 state:Running total:1039 done:1038 error:0 retry:0 procs:55/14/13 9:54:03 PM - 10 - INFO: &#91;1.1.1&#93; id:44721 state:Running total:1039 done:1038 error:0 retry:0 procs:35/14/13 9:55:03 PM - 10 - INFO: &#91;1.1.1&#93; id:44721 state:Completing total:1039 done:1039 error:0 retry:0 procs:25/14/13 9:56:23 PM - 10 - INFO: &#91;1.1.1&#93; id:44721 state:Completing total:1039 done:1039 error:0 retry:0 procs:15/14/13 9:57:03 PM - 10 - INFO: &#91;1.1.1&#93; id:44721 state:Completed total:1039 done:1039 error:0 retry:0 procs:15/14/13 9:59:22 PM - 10 - INFO: &#91;1.1.1&#93; id:44721 state:NotFound5/14/13 9:59:22 PM - 10 - INFO: &#91;1.1.1&#93; id:44721 rc:15/14/13 9:59:22 PM - 10 - INFO: &#91;1.1.1&#93; train-threshold-run - FAILED 1 (active=2)5/14/13 9:59:22 PM - 10 - INFO: &#91;1.1&#93; train-threshold - FAILED 1 (active=1)5/14/13 9:59:22 PM - 10 - INFO: &#91;1&#93; do-complete-run-parallel - FAILED 1 (active=0)5/14/13 9:59:22 PM - 10 - INFO: First task to fail was: train-threshold-run5/14/13 9:59:22 PM - 10 - INFO:   -----------------------------    END    -----------------------------Without looking at the code, here's what I'll guess happened.1. Job reached Completed state, but not all job processes were reported as stopped as is evidenced by:5/14/13 9:57:03 PM - 10 - INFO: &#91;1.1.1&#93; id:44721 state:Completed total:1039 done:1039 error:0 retry:0 procs:12. Job monitor continues waiting for procs:0 before exiting3. Orchestrator's next publication does not include job 44721 at all.  This would be completely normal, since job as been Completed more than (I think) 5 minutes and (probably) by now procs==0.4. Job monitor is "surprised" that Orchestrator publication no longer contains this job.I can imagine several ways to fix this:a) Once Job monitor see Completed, then exit normally (regardless of procs count)b) OR should make sure at least one publication goes out with Completed and procs==0c) Job Monitor should interpret Job not included in OR publication as successful completion (given that prior publication had total==done and state was Completed)At present I vote for c) and will open a Jira against myself.Lou.
issueID:UIMA-2912
type:Bug
changed files:
texts:uima-as extended test intermittent failure
Some tests in the extended test suite do things like stopping / re-starting brokers.  These actions are followed by code which waits for 3 seconds.  When run as single tests, these run OK on my machine.  When run as the whole suite, it looks like it takes longer than 3 seconds for a broker to restart and the service to get re-connected.  I changed this to 9 seconds (6 didn't work) in the test "testSyncClientRecoveryFromBrokerStopAndRestart", for example.Suggest changing this to not be dependent on timing, if possible.
issueID:UIMA-2914
type:Improvement
changed files:
texts:Webserver (WS) revise hover text for Time Init and Time Run
Complainer-in-chief says:  the hover text for the column header seems over-complicated, confusing and wrong.
issueID:UIMA-2915
type:Bug
changed files:
texts:Ruta filtering settings work only on mentioned types, but not on their subtypes
Ruta filtering settings work only on the given types, but not on their subtypes. Document{-> RETAINTYPES(ALL)};... won't activate SPACE annoationsIt should not be a problem to extend this for subtypes.
issueID:UIMA-2916
type:Bug
changed files:
texts:OR should not overlay process PID with null (should a null PID follow in a later Node Inventory report)
This situation seems to have occurred when shutting down DUCC.  Consequence is that WS shows blank for corresponding JP log files and ? for PIDs.If null follows good PID in subsequent Node Inventory report, OR should log a Warning.
issueID:UIMA-2917
type:Bug
changed files:uimaj-core/src/main/java/org/apache/uima/resource/ResourceInitializationException.java
uimaj-core/src/main/java/org/apache/uima/util/CasCreationUtils.java
texts:Type System Merging for string subtypes with allowed values
UIMA uses type system merging to combine separately developed annotators and their type systems.  When the same type is define in multiple type systems, perhaps with different features, these are "merged" where possible, and if not possible, exceptions are thrown.  The current implementation is missing any support for merging subtypes of Strings - which UIMA uses for associating Allowed-Values for.  If two type systems define the same-named subtype of String, no merging of allowed values is done, no exception is thrown if the allowed value sets are different, and the merge uses the first definition as the merge result, ignoring the others. The behavior could be changed to be "strict" - throwing an exception if the allowed values are not identical, or more lenient - for example, having the merged definition be the union of the the sets of allowed value.  The drawback to the union approach is that any annotator which was assuming a "closed universe" of possible values, could now be seeing values not in the set it expected.
issueID:UIMA-2918
type:Improvement
changed files:
texts:Webserver support for ping-only services
1. Service health for all services should be good/poor (again!) not up/down2. ping-only services should have blanks for instance, deployments, size 3. ping-only services should have &#91;ping-only&#93; for class4. ping-only start/stop buttons enabling controlled by (new!) meta.ping-only and meta.is-starteddeprecated:  /**      * A service is startable if it's UIMA-AS, or if it's CUSTOM and has a process_executable      * associated with it.  A non-startable CUSTOM service may have only a pinger.      */     boolean isStartable()     {         switch ( service_type ) {             case UimaAs:                 return true;             case Custom:                  return job_props.containsKey("process_executable");         }         return false;  // redundant but needed for compilation     }  if that returns false it's ping-only
issueID:UIMA-2919
type:Bug
changed files:
texts:DUCC Service Manager incorrect handling of autostart for ping-only services
Ping-only services don't have service instances.  The autostart logic works by comparing declared instances to started instances and starting new instances to match the declared number.Since ping-only services have no instances, autostart never starts anything!  Must take into account ping-only in the autostart logic.Related, and found in the same debugging session, the (old, temporary, to cope with AMQ OOM issues) timer to kick off CUSTOM pings needs to be switched to the proper timer as used by the internal UIMA-AS pinger.Further - it is hard for the web server to know what is going on with a ping-only service because there are not active instances.  The Service Manger will start placing state into its meta properties file to indicate whether the pinger is active or not : meta.ping-active and whether the service is in fact a ping-only service: meta.ping-only = true
issueID:UIMA-292
type:Bug
changed files:
texts:UIMA incompatible with Java Version 6
I get JAXP_COMPILE_ERR when opening an analyzer from eclipse and errors con running the analyzer with the Document Analyzer.
issueID:UIMA-2920
type:New Feature
changed files:
texts:Use feature expressions also for primitive values
Use feature expressions also for primitive values. This could result in something like:MoneyAmount{MoneyAmount.amount = (MoneyAmount.amount/2)};
issueID:UIMA-2921
type:New Feature
changed files:
texts:Ruta composed rule elements have problems with quantifier
Reported by Armin Wegner:Let A, B, C, D and F denote type names. Then, A B? C D{->MARK(F, 1, 4)} works.A (B)? C D{->MARK(F, 1, 4)} causes a NullPointerException.(A B)? C D{->MARK(F, 1, 4)} causes an ArrayIndexOutOfBoundException: -1.
issueID:UIMA-2922
type:Bug
changed files:
texts:Time Init and (more importantly) Time Run need to be ddd:hh:mm:ss
From complainer-in-chief:Can't remember if this problem got reported to you. The time reported is limited to hh:mm:ss, which isn't very useful as services normally stay up for more than 24 hours and the reported times are then garbage. This time should be reported in dd:hh:mm format, assuming that dd continues indefinitely. If not, need another plan Affected: 1. Job Details, Processes tab2. Service Details, Deployments tab
issueID:UIMA-2923
type:Improvement
changed files:
texts:If webserver (WS) should detect OR not running & lock file then it should report this anomaly on System Daemons page
Consider also:1. WS could provide one button removal of the lock file2. WS could provide start/stop buttons for each daemon
issueID:UIMA-2924
type:Bug
changed files:
texts:Orchestrator (and CLI) needs to handle embeded blanks for JvmArgs, Environment Args, Command line args
Job factory regex is wrong!
issueID:UIMA-2925
type:Bug
changed files:
texts:DUCC webserver (WS) shows incorrect data for Job-in-progress during DUCC shutdown
2286 on apache_ducc
issueID:UIMA-2926
type:Bug
changed files:
texts:Rename Bluej from UIMA-AS extended tests use files with name BlueJ

issueID:UIMA-2927
type:Bug
changed files:
texts:Rename files in UIMA-AS extended test that contain bluej in their name
There is a test case in UIMA-AS extended test that contains bluej in the name. Rename this as well as any resources this may use which contain word bluej in the name.
issueID:UIMA-2928
type:Bug
changed files:
texts:The manifests of the executable jars must be changed when any of its jars change
The uimaj-core... jar was renamed to its usual form uima-core...
issueID:UIMA-2929
type:Bug
changed files:
texts:Move some of the local site checking in to the global uima-ducc scripting.
all nodes' ducc_ling must match DUCC head's ducc_ling version a node must have a working java.  If the DUCC head does not nothing is started in ducc_start. give a warning if the Orchestrator lock is found during startup check for clock skew from the DUCC head and don't start a node that is not within acceptable bounds on stop_ducc, if the broker is automanaged, stop_ducc needs to hang longer before returning to make sure things are shutdown
issueID:UIMA-293
type:Bug
changed files:uimaj-core/src/main/java/org/apache/uima/util/CasCopier.java
uimaj-core/src/main/java/org/apache/uima/util/CasCopier.java
texts:If CasCopier&#39;s destination CAS is set to a base CAS, annotations cannot be copied.
This is because the destination CAS is used to call createFS() for everything that's copied, and this fails for annotation types because the Sofa feature can't be automatically set.  In the case of the CasCopier I don't want the sofa feature to be set since I plan on setting it manualy anyway.  So instead the low level CAS API could be used to create the FS.
issueID:UIMA-2930
type:Improvement
changed files:
texts:DUCC webserver (WS) should make available button(s) for Job Process (JP) cancellation
When machines goes down, jobs with work items located on them become stuck (in limbo).  This situation is handled by the JobCancel command using the --dpid flag for each stuck Job Process (JP).The webserver (WS) can provide assistance in the form of helpful buttons to make this task easier.
issueID:UIMA-2931
type:Bug
changed files:
texts:Annotation mode in CAS Editor set to non-existing type
If the annotation mode in the CAS Editor is set to a type that is currently not present in the type system that was aused to open the CAS, then a NPE is thrown in AnnotationEditor.setEditorSessionPreferences() in line sessionStore.setValue("LastUsedModeType", getAnnotationMode().getName());.. I know, I switch type system too often...
issueID:UIMA-2932
type:Bug
changed files:
texts:CLI needs to specify how to start a custom service
Currently CLI can create only ping-only custom services
issueID:UIMA-2933
type:Bug
changed files:
texts:Rute type matcher selects wrong annoation with length 0
Rute type matcher selects wrong annoation with length 0. It is acutally the correct "next" annotations in the index, but not for the rule element matching.Armin Wegner reported:DECLARE Date;Document{->RETAINTYPE(BREAK, SPACE)};NUM{REGEXP("\\d\\d")->MARK(Date, 1, 2)} PERIOD;on the input text12. Mai 1803I didn't use SourceDocumentInformation in the rule. I was just in the way. The first token with RutaBasic was NUM(0, 2), that is "12", and the second token was SourceDocumentInformation(0, 0). So the rule failed which is correct.
issueID:UIMA-2934
type:Bug
changed files:
texts:remove from sorted index broken if FS not in index
The "improvement" to make remove-from-index work faster on sorted indexes by doing a binary search, is broken - when the element isn't found, it throws an index-array-out-of-bounds exception.
issueID:UIMA-2935
type:Bug
changed files:
texts:DUCC command line interface (CLI) should allow specification of --process_initialization_time_max
1. CLI to support new flag --process_initialization_time_max <integer>   a) value to be passed to agent via IDuccStandardInfo   b) similar to --process_per_item_time_max <integer>  2. CLI to remove support for --process_get_meta_time_max   a) get_meta time to be system configruable via ducc.properties
issueID:UIMA-2936
type:Bug
changed files:
texts:DUCC webserver (WS) doesn&#39;t handle Custom Service log file correctly
From adjunct complainer:I've just registered an autostart custom service (121) on the test ducc and it started two POP's 2344 2345 ... but it looks as if the WS assumes all service jobs are UIMA so the WS reports the wrong log filename, e.g. 2345-UIMA-... instead of 2345-POP-...
issueID:UIMA-2937
type:Bug
changed files:
texts:Leading optional matching conditions in Ruta
Armin Wegner reported:In Ruta 2.0.2-SNAPSHOT, rules with an optional first element do not work. The optional part seems to be mandatory. UsingDECLARE Test;"a"? "b" "c"{->MARK(Test, 1, 3)};ona b c x b cmarks "a b c" (0, 5) but not "b c" (8, 11).
issueID:UIMA-2938
type:Bug
changed files:
texts:Adapt formatter in Ruta Workbench to recent changes
The formatter in the UIMA Ruta Workbench needs to be adapted to the recent changes in the language definition, e.g., simple regexp rules, feature matches, feature expressions, implicit actions and conditions, ...
issueID:UIMA-2939
type:Bug
changed files:
texts:Dynamic anchoring of Ruta rules suffers from integer overflow
Dynamic anchoring of Ruta rules suffers from integer overflow: penalty value for optional elements should not be initialized with Integer.MAX_VALUE especially if there are sibling elements.
issueID:UIMA-294
type:Bug
changed files:uimaj-core/src/main/java/org/apache/uima/analysis_engine/impl/PrimitiveAnalysisEngine_impl.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/impl/PrimitiveAnalysisEngine_impl.java
texts:Sofa mapping failure in mixed CPE pipeline
A "Sofa not found" exception is thrown by a CPE where the CollectionReader reads a multi-Sofa XCAS and there are two CAS Processors:  An integrated PersonTitleAnnotator with Sofa mapping, and a remote annotator.The reason is that the call to the PersonTitleAnnotator leaves the CAS in a bad state (the "currentComponentInfo" field is still set, indicating that the CAS is still being processed by the annotator, and that the PersonTitleAnnotator's sofa mappings are still in effect).  This confuses the XCAS serialization/deserialization that is attempted later while calling the remote annotator, resulting in an exception.
issueID:UIMA-2940
type:Improvement
changed files:
texts:Remove dependency on JDom
Remove dependency on JDom. Just a test dependency, barely used and not really needed. Tests can be rewritten.
issueID:UIMA-2941
type:Improvement
changed files:
texts:Update to modern Maven plugin dependencies
Update to modern Maven plugin dependencies.
issueID:UIMA-2943
type:Bug
changed files:
texts:UIMAJ build fails if configured with IntelliJ
When configuring UIMAJ under IntelliJ IDEA the mvn build fails as files under .idea directory neither have header nor are excluded; simply they should be excluded by the apache-rat-plugin.
issueID:UIMA-2944
type:Improvement
changed files:
texts:DUCC Job Driver (JD) reports state Limbo status
All the work items with status retry are counted as limbo.  Maybe this:Id: 47069 Workitems: 622 Done: 206 Error: 13 Dispatch: 75 Unassigned: 1 Limbo: 40  Should become this:Id: 47069 Workitems: 622 Done: 206 Error: 13 Dispatch: 75 RetryQueue: 40 Unassigned: 1 Limbo: 0
issueID:UIMA-2945
type:Bug
changed files:
texts:Ruta wildcard match not robust enough for failed next rule element
Arule with a wildcard and a following rule element with additional conditions may miss rule matches if the additional condition do not match. Fix it and extend the tests.
issueID:UIMA-2946
type:Improvement
changed files:
texts:Auto trim for Ruta wildcard matches
Using the normal filtering settings the annotation created based on a wildcard match are often invisible since they start or end with an invisible annotation, e.g., a whitespace character. Invistigate if it is reasonable to trim the resulting annotation using the current filtering settings.
issueID:UIMA-2948
type:Task
changed files:
texts:Remove version 2.3.1 from UIMA project
Per discussion on the mailing list, the version 2.3.1 is removed and issues reassigned to 2.3.1SDK or 2.3.1Addons as required.See: http://markmail.org/thread/ydc4yrspnsc5to62Affected issues are:UIMA-2177UIMA-2049UIMA-1982UIMA-1967UIMA-1909UIMA-1861UIMA-1847UIMA-1846UIMA-1844UIMA-1826UIMA-1795UIMA-1788UIMA-1756UIMA-1682
issueID:UIMA-2949
type:Improvement
changed files:
texts:ducc.js performance improvements
Various ducc.js performance improvements.
issueID:UIMA-295
type:Task
changed files:uimaj-tools/src/main/java/org/apache/uima/tools/AnnotationViewerMain.java
uimaj-tools/src/main/java/org/apache/uima/tools/cvd/CVD.java
uimaj-tools/src/main/java/org/apache/uima/tools/cpm/CpmFrame.java
uimaj-tools/src/main/java/org/apache/uima/tools/docanalyzer/DocumentAnalyzer.java
uimaj-tools/src/main/java/org/apache/uima/tools/images/Images.java
uimaj-tools/src/main/java/org/apache/uima/tools/jcasgen/GUI.java
uimaj-tools/src/main/java/org/apache/uima/tools/pear/install/InstallPear.java
uimaj-tools/src/main/java/org/apache/uima/tools/viewer/CasTreeViewer.java
uimaj-tools/src/main/java/org/apache/uima/tools/AnnotationViewerMain.java
uimaj-tools/src/main/java/org/apache/uima/tools/cvd/CVD.java
uimaj-tools/src/main/java/org/apache/uima/tools/cpm/CpmFrame.java
uimaj-tools/src/main/java/org/apache/uima/tools/docanalyzer/DocumentAnalyzer.java
uimaj-tools/src/main/java/org/apache/uima/tools/images/Images.java
uimaj-tools/src/main/java/org/apache/uima/tools/jcasgen/GUI.java
uimaj-tools/src/main/java/org/apache/uima/tools/pear/install/InstallPear.java
uimaj-tools/src/main/java/org/apache/uima/tools/viewer/CasTreeViewer.java
texts:Restore microscope icon as the window icon for our tools
We think the microscope icon is OK to use (and it's still used in the pear packager component in varoius forms).  Given that the UIMA logo doesn't work so well as a window icon (the four individual letters aren't very clear), let's bring back the microscope.
issueID:UIMA-2950
type:Bug
changed files:
texts:Move DUCC&#39;s xml files from java folders to corresponding resource folders
DUCC's examples project does not follow maven conventions with respect to resource files (xml). Currently the xml files (descriptors) exist in the same folder (package) where the java source is. Maven based projects should use resource folder to store xml and other resource files used by java. This allows for cleaner builds that work in eclipse as well as the command line.
issueID:UIMA-2951
type:Improvement
changed files:
texts:Exclude MANIFEST.MF files from rat check
MANIFEST.MF files cannot have comments. Hence, I suggest that they be globally ignored by the rat check plugin by adding the following like to the UIMA parent POM:<exclude>**/*/MANIFEST.MF</exclude> <!-- MANIFEST.MF files cannot have comments -->Source: http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=4782054Source: http://litrik.blogspot.de/2007/08/comments-in-manifestmf.html
issueID:UIMA-2952
type:Improvement
changed files:
texts:Merge user-facing UIMA plugins for Maven
We now have two user-facing Maven plugins in UIMA. I think it would be useful to merge the PearPackagingMavenPlugin and the jcasgen-maven-plugin into a single uima-maven-plugin to provide a single point of contact.
issueID:UIMA-2953
type:Improvement
changed files:jcasgen-maven-plugin/src/main/java/org/apache/uima/tools/jcasgen/maven/JCasGenMojo.java
texts:jcasgen-maven-plugin needs to support patterns
With the old JCasGenPomFriendly class in uimaFIT, it was possible to select the descriptors for which JCas wrappers should be generated using a wildcard pattern:<configuration>  <mainClass>org.apache.uima.fit.util.JCasGenPomFriendly</mainClass>  <arguments>    <argument>file:${project.basedir}/src/test/resources/org/apache/uima/fit/type/**/*.xml</argument>    <argument>${project.build.directory}/generated-sources/jcasgen</argument>  </arguments>  <classpathScope>test</classpathScope></configuration>With the current jcasgen-maven-plugin, only a single descriptor file is possible. This is quite inconvenient for users. At least there should be the same possibility of specifying a wildcard pattern as in the JCasGenPomFriendly. Even better would be, to combine that with the commonly used include/exclude pattern used in many Maven plugins, e.g.<plugin>  <groupId>org.apache.uima</groupId>  <artifactId>jcasgen-maven-plugin</artifactId>  <executions>    <execution>      <goals> <goal>generate</goal>      </goals>      <configuration>        <typeSystemIncludes>          <typeSystemInclude>src/main/resources/types/**/*.xml</typeSystemInclude>        </typeSystemIncludes>        <typeSystemExcludes>          <typeSystemExclude>src/main/resources/types/**/nojcas/*.xml</typeSystemExclude>        </typeSystemExcludes>      </configuration>    </execution>  </executions></plugin>
issueID:UIMA-2954
type:Bug
changed files:
texts:Ruta anchor selection after wildcard wrong
The anchor selection after wildcard is not correct if there is a leading, larger annotation. The iterator should not be moved to the last annotation, but to the anchor in matching direction.
issueID:UIMA-2955
type:New Feature
changed files:
texts:Allow arbitrary string expressions instead of only string variables in REGEXP condition
Allow arbitrary string expressions instead of only string variables in REGEXP condition. Something like the following should be possible:Token{REGEXP(Token.posTag, "VB.")};Also check the other language elements, if there restrictions on variables instead of expressions.
issueID:UIMA-2956
type:Bug
changed files:
texts:DUCC Orchestrator (OR) incorrectly replaces Reason "ServicesUnavailable" with "DriverInitializationFailure"
This seems to be either a race condition or perhaps the result of a recent change.
issueID:UIMA-2957
type:Bug
changed files:
texts:DUCC webserver (WS) Reason=DriverInitializationFailure hover shows "job driver exception occurred: null"
e.getMessage() is NOT guaranteed to return text.
issueID:UIMA-2958
type:Improvement
changed files:jcasgen-maven-plugin/src/main/java/org/apache/uima/tools/jcasgen/maven/JCasGenMojo.java
texts:jcasgen Maven plugin: add option to exclude generating for imported types
Add an option, perhaps something like <skipGenerationForImportedTypes>, which if true (not the default) would only generate those types which were defined directly (that is, not via an import) in the set of type system descriptors specified as input for this plugin.Rationale from UIMA-1176Our project reuses a common type system that we got from a different source. The common type system descriptor is imported into our main type system descriptor. The common type system has its own JCas types, in a jar file.When we generate JCas types for our main type system descriptor, it currently generates all of the classes for all of the imported type systems as well. We don't want this behavior, so we have to manually go through and delete those classes.I think JCasGen should only generate types for the type system descriptor that you run it on, not on imported type system descriptors.One way to solve it as described in UIMA-2471Jg.main0 takes an array of string arguments. To make JCasGen limit the cover classes it generates to just those whose type definitions are contained in some directory (at any sub directory level), you pass 2 additional arguments in this array:1) "-limitToDirectory" and then following that2) the path to some directory. Currently this is typically set to a containing Eclipse project directory, for example, when JCasGen is called from the Component Descriptor Editor
issueID:UIMA-2959
type:Bug
changed files:
texts:DUCC webserver (WS) list jd.err.log more than once!
WS should only list jd.err.log when building row for JD, not JPs.
issueID:UIMA-296
type:Task
changed files:
texts:Remove DocBook build files from source distribution
After some deliberation (http://www.mail-archive.com/uima-dev@incubator.apache.org/msg01260.html) we decided to not distribute the software necessary for building the DocBook documentation with our source distribution.
issueID:UIMA-2960
type:Bug
changed files:
texts:DUCC job driver (JD) NPE when timeout occurs for queued work item (CAS) for which no JP has been assigned
re: bsiyer 48591The timeout:org.apache.uima.resource.ResourceProcessException: Request To Process Cas Has Timed-out.  Service Queue:ducc.jd.queue.48591. Broker: tcp://host123:61616?wireFormat.maxInactivityDuration=0&jms.useCompression=true Cas Timed-out on host: null        at org.apache.uima.adapter.jms.client.BaseUIMAAsynchronousEngineCommon_impl.sendAndReceiveCAS(BaseUIMAAsynchronousEngineCommon_impl.java:2123)        at org.apache.uima.adapter.jms.client.BaseUIMAAsynchronousEngineCommon_impl.sendAndReceiveCAS(BaseUIMAAsynchronousEngineCommon_impl.java:1958)        at org.apache.uima.ducc.jd.client.WorkItem.run(WorkItem.java:125)        at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:482)        at java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:345)        at java.util.concurrent.FutureTask.run(FutureTask.java:177)        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1156)        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:626)        at java.lang.Thread.run(Thread.java:780)Caused by:org.apache.uima.aae.error.UimaASProcessCasTimeout: UIMA AS Client Timed Out Waiting for Reply From Service:ducc.jd.queue.48591 Broker:tcp://host123:61616?wireFormat.maxInactivityDuration=0&jms.useCompression=trueThe resulting NPE:31 May 2013 10:52:20,827 107 ERROR jd.JobDriver accountingWorkItemIsError   48591 accounting error? java.lang.NullPointerExceptionAt:        java.util.concurrent.ConcurrentHashMap.hash(ConcurrentHashMap.java:259)        java.util.concurrent.ConcurrentHashMap.get(ConcurrentHashMap.java:872)        org.apache.uima.ducc.transport.event.jd.DuccProcessWorkItemsMap.get(DuccProcessWorkItemsMap.java:39)        org.apache.uima.ducc.transport.event.jd.DuccProcessWorkItemsMap.error(DuccProcessWorkItemsMap.java:58)        org.apache.uima.ducc.jd.JobDriver.accountingWorkItemIsError(JobDriver.java:1031)        org.apache.uima.ducc.jd.JobDriver.employPluginExceptionHandler(JobDriver.java:1216)        org.apache.uima.ducc.jd.JobDriver.exception(JobDriver.java:1270)        org.apache.uima.ducc.jd.client.WorkItem.exception(WorkItem.java:154)        org.apache.uima.ducc.jd.client.WorkItem.run(WorkItem.java:128)        java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:482)        java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:345)        java.util.concurrent.FutureTask.run(FutureTask.java:177)        java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1156)        java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:626)        java.lang.Thread.run(Thread.java:780)
issueID:UIMA-2961
type:Bug
changed files:
texts:DUCC Remove obsolete CLI bits.
Get rid of early forms of the CLI.
issueID:UIMA-2962
type:Bug
changed files:
texts:UIMA-AS service not handling ResourceInitializationException from nested AEs
If a nested delegate throws ResourceInitializationException, the UIMA-AS service just hangs never processing the exception. The problem is that the nested uima-as controller doesnt have an instance of a callback listener to receive exceptions. Only the top level controller has the listener registered. To fix this, during initialization of the uima-as aggregate controller register the listener (via addControllerCallbackListener()) with every controller.
issueID:UIMA-2963
type:Improvement
changed files:
texts:upgrade maven-dependency-plugin to >= 2.6
Currently the UIMA-wide parent pom specifies maven-dependency-plugin version 2.3.  The currently released version is 2.8.  As of version 2.6, a new configuration parameter, useBaseName, is available which prevents resolution of versions 2.4.1-SNAPSHOT from being converted to 2.4.1-20130303.12345678 where the last 2 numbers are the snapshot being used.  This feature is needed to get SNAPSHOT builds working for the new design of Eclipse Runtime packaging - where the design embeds Jars inside Jars.  Here are the details:We build OSGi bundles / Eclipse plugins, which sometimes are collections of other Jars.  The current best practice is to embed those Jars without unpacking them, thus preserving any License/Notice files they may have, etc.Felix's maven-bundle-plugin supports this using the packaging "Jar", and the instructions _exportcontents, and Embed-Dependency.  In this design, the dependency section of the POM contains references to all the Jars that have packages that are needed.  The bundle plugin uses these instructions and the Maven dependency information to create a Manifest Bundle-ClassPath entry which has the names of the needed dependent Jars.Another build step, outside of the Felix bundle step, uses Maven dependency plugin's copy-dependencies, to copy the Jars to the target/classes spot, where the maven jar plugin looks for building the final Jar; this creates the Jars-inside-Jar structure.  Unfortunately, when uploading Snapshots to Snapshot repositories, Maven renames the x.y.z-SNAPSHOT Jar to some name like x.y.z-20130303.12345678 where the last 2 numbers are the timestamp of the Jar.The default for older versions of the maven dependency plugin, when copying the Jar from a snapshot repository, is to keep the -20130303.12345678 style suffix, instead of using the base name -SNAPSHOT.  This convention breaks the Felix bundle build, which put into the manifest in multiple spots the name using the -SNAPSHOT convention.More recent versions of the maven-dependency-plugin (after 2.6) have a new configuration parameter, useBaseName, that has Maven use the -SNAPSHOT name locally, when fetching from a remote repository.  This is the default, in version 2.6 and later.
issueID:UIMA-2964
type:Bug
changed files:
texts:Rule matching without seeding causes problems
There seem to occur several problems for the use case with large artifacts when the seeding is deactivated. Investigate what went wrong.
issueID:UIMA-2965
type:Improvement
changed files:
texts:upgrade uima-wide parent pom to more current levels
Upgrade to current level of Apache-wide parent pom.  Update to latest working level of the jar plugin, and the Pear Packaging maven plugin.
issueID:UIMA-2966
type:Improvement
changed files:
texts:m2e builds potential conflict when doing Jars with maven
The m2e integration in Eclipse for Maven does incremental builds as needed.  One side effect of these is to create in target/classes/META-INF/maven/&#91;groupId&#93;/&#91;artifactId&#93; the two files: pom.xml and pom.properties.When the normal Maven Jar plugin runs, it uses an archiver configuration which (by default) has the addMavenDescriptor set to true.  This causes the archiver 1) archive everything in target/classes (including the META-INF/... that m2e may have built), and then it adds its own pom.xml and pom.properties, in the same place as the m2e did.The result is the zip file has a directory that actually has 2 copies of these two files.(Note, this won't happen if you build from the command line using "mvn clean install" - the "clean" step will delete the target/ before building).Normally, having multiple files in a directory inside a Jar doesn't matter to anyone.  However, the build for Eclipse Update Sites runs the packager which includes (re)packing the Jar files to compress better, and this, in turn, runs some Zip thing which throws an exception if it finds 2 files with the same name in a directory.The easy workaround is to always use mvn clean before install.It should be easy to fix this, though - by having a step run ahead of the Jar plugin which deletes these two files (if they exist).  I think that would be "safer" in that things would always work...  Right now, if by chance you forget to do clean, and are using m2e, the Jars get built in this funny way, and nothing notices, until much later, if you try and include these Jars as part of "runtime" Jar in an Eclipse Update site.It's not just the eclipse plugin jars; any jars included in the runtime (e.g. uimaj-core, uimaj-cpe, uimaj-tools, etc.) also must have this cleanup because the pack200 is run on those too.
issueID:UIMA-2967
type:Improvement
changed files:
texts:during Eclipse plugin builds, eliminate extra manifest entries
Running build on eclipse plugins, on the 2nd or subsequent time after checkout, generates messages from the maven-bundle-plugin "Duplicate name in Manifest".Eliminate these by deleting the top level MANIFEST.MF just before the maven-bundle-plugin runs (which is regenerating it).
issueID:UIMA-2968
type:Bug
changed files:
texts:DUCC resource manager - must reset node stats on node bounce
If one takes a node offline, then brings it back, RM must reset it's memory stats for the node, in case the node changed or if we took the node down to tryto reset it.
issueID:UIMA-2969
type:Bug
changed files:
texts:MARKONCE action in ruta should not create annotations if partof is fulfilled
The MARKONCE action does currently not create an annotation, if there is one in the index with the same offset and type. It's better if an annotation is only created if the anchors are not part of the targeted type.
issueID:UIMA-297
type:Bug
changed files:uimaj-core/src/main/java/org/apache/uima/cas/impl/FSIndexRepositoryImpl.java
uimaj-core/src/main/java/org/apache/uima/cas/FSIndex.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/CASMgrSerializer.java
texts:Automatic bag index creates duplicate copies of FSs under some circumstances
There are some issues with the current implementation of the automatic index creation for FSs for which addFsToIndex() is called, yet for whose type no index is defined.  For a discussion of the issues and solution see http://www.mail-archive.com/uima-dev@incubator.apache.org/msg01944.html
issueID:UIMA-2970
type:Improvement
changed files:
texts:Improve release of Eclipse Update sub-sites
Take advantage of the existence of the Apache dist.apache.org SVN site used for releases to reduce the release work for new versions of existing update subsites.A subsite is typically a collection of features and plugins, at various "versions", plus metadata that catalogs these items in two files: contents.jar and artifacts.jar.  The subsite also has pack.gz versions of the plugin Jars, and checksums and signatures for the Jars and pack.gz things.With each new version, the old versions of the features and plugins do not change; just new versions are added and the metadata files are updated; all new and changed files get new checksums/signatures.Change the build process to:  a) checkout the existing subsite  b) build just the new versions  c) compute the new metadata and use the "append" facility to add to the existing metadata  d) allow "committing" just the new/changed files to the dist repo after the vote passes.Since the update site build process no longer has any need of information about previous versions, change the update-site organization and POM to have less special updates needed (previously, it needed lists of previous versions, etc), and make it align with the conventional way other projects are built, where possible.Make the category.xml a filtered file - substituting the "version" from the POM instead of hard-coding it.Incorporate checksums and signings into the normal mvn build process, under the apache-release profile (so other builders don't need to do this part).Add the common part of all update subsite building to the uima-wide parent pom; activate by having a file named "marker-file-identifying-eclipse-update-site"
issueID:UIMA-2972
type:Task
changed files:
texts:Deactivate wien and rapier in Ruta Workbench
The two rule induction algorithms hardly work if one does not know their implementation very well. They will not be maintained anymore since the necessary time to fix improve them is in no relation to the benefit both algorithms provide (if there is hardly any). I will keep their implementation in the scm, maybe sometime a volunteer will improve them to a state where they are actually useful.
issueID:UIMA-2973
type:Improvement
changed files:
texts:References to example projects in Ruta documentation should point to the release
References to example projects in the Ruta documentation should point to the source release, but not to the source in the svn.
issueID:UIMA-2974
type:Bug
changed files:
texts:DUCC Mbean to set log level cleanup
A brace is missing after the 'if' in the code that sets the log level.  The code actually works anyway, but spews lots of incorrect messages when control falls-out of the intended 'if' block.
issueID:UIMA-2975
type:New Feature
changed files:
texts:Include manual selection of anchoring rule element in Ruta language
It is sometime not very clever to activate dynamic anchoring in order to change the matching behavior, because the selection of the anchoring rule elements depends on the elements in the annoation index, and is therefore not predictable when the rules are written. I think it is not achievable to ensure the same matching behavior independently from the current matching direction, because of the greedyelements. If the user wants to take advantage of other matching directions, then a manual selection of the anchoring rule elements would be a good solution. We need to find a nice syntax for this extension. It could look like:// match everthing from the last period to the last token...PERIOD # 'LastToken; // ' indicates the anchoring elementHere, the rule would start with the LastToken and then will search for the next PERIOD.
issueID:UIMA-2976
type:Bug
changed files:
texts:uima-wide parent pom needs to have m2e ignore for antrun
When an ant-run step got added to remove extra meta data from projects which use maven-bundle-plugin to generate the MANIFEST.MF file, this step caused errors in the m2e build - it needs to be ignored for that build I think.
issueID:UIMA-2977
type:Bug
changed files:uimaj-core/src/main/java/org/apache/uima/resource/impl/ResourceManager_impl.java
uimaj-core/src/main/java/org/apache/uima/resource/ResourceManager.java
uimaj-core/src/main/java/org/apache/uima/resource/impl/ResourceManager_impl.java
uimaj-core/src/main/java/org/apache/uima/resource/ResourceManager.java
uimaj-core/src/main/java/org/apache/uima/resource/impl/ResourceManager_impl.java
uimaj-core/src/main/java/org/apache/uima/resource/ResourceManager.java
uimaj-core/src/main/java/org/apache/uima/resource/impl/ResourceManager_impl.java
uimaj-core/src/main/java/org/apache/uima/resource/ResourceManager.java
uimaj-core/src/main/java/org/apache/uima/resource/impl/ResourceManager_impl.java
texts:destroy method of shared resources never called
Apparently the ResourceManager and the resources created by the manager do not participate in the usual component life cycle. On other components, such as analysis engines or readers, the destroy() method is called when the component is disposed of. External resources never get notified when they are no longer needed. At least any resources derived from Resource (e.g. DataResource and ParametrizedDataResource) should be notified. The SharedResourceObject interface does not define any such life cycle callback.As a side-note: An alternative to the rather heavy-weight Resource interface of UIMA maybe be small life cycle interfaces such as the Spring InitializingBean and DisposableBean interfaces, or Java annotations marking initialization and destruction methods (e.g. @PostConstruct and @PreDestroy).
issueID:UIMA-298
type:Bug
changed files:uimaj-core/src/main/java/org/apache/uima/cas/impl/XmiCasSerializer.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/XmiCasSerializer.java
texts:XMI CAS Serializer can map two namespaces to the same XML NS prefix
If two different type namespaces have the same last component (e.g. org.bar.foo and org.baz.foo), the XMI serializer uses the prefix "foo" for both of them, which produces incorrect XMI output, where the two types are not distinguishable.
issueID:UIMA-2980
type:Improvement
changed files:
texts:Add concept of optional annotations in Ruta for empty wildcard matches
Add concept of optional annotations in Ruta: wildcards sometimes need to match on invisible parts of the document, e.g., FirstToken # SecondToken;There should not be an annotation for the wildcard match, but it needed for possible conditions on the element. If there is a matched annotation, then possible mark actions use the wrong offsets for new annotations. Use a new optional annotation that will be filtered in the rule match.
issueID:UIMA-2981
type:Bug
changed files:
texts:Ruta wildcard match problems for next uncle
Ruta wildcard does not match (or matches too much) if next element is its uncle:(Author{-> UNMARK(Author)} #){-> MARK(Author)} Date;
issueID:UIMA-2983
type:Bug
changed files:jcasgen-maven-plugin/src/main/java/org/apache/uima/tools/jcasgen/maven/JCasGenMojo.java
jcasgen-maven-plugin/src/main/java/org/apache/uima/tools/jcasgen/maven/JCasGenMojo.java
texts:Tests for jcasgen-maven-plugin failing (on Windows) due to malformed URL
On Windows (and maybe other platform) the plugin is generating UIMA descriptors having import statements that are importing by location. These are being generated using  Import imp = new Import_impl(); imp.setLocation(new File(ds.getBasedir(),descriptorLocation).getAbsolutePath()));But the document for UIMA for location parameters says they have to be URLs, see http://uima.apache.org/d/uimaj-2.4.0/references.html#ugr.ref.xml.component_descriptor.importsThe example there for "absolute" paths says to prefix the path with "file:///" to make it a valid URL.  Change the code which sets import location that generates absolute paths to prefix the path with this.
issueID:UIMA-2984
type:Bug
changed files:
texts:DUCC webserver (WS) employs wrong class for Authentication
DuccHandlerUserAuthentication was not loading authentication code specified in ducc.properties as ducc.authentication.implementer
issueID:UIMA-2985
type:Improvement
changed files:
texts:Excluded annotation types should not be deleted during test runs
Currently, all available annotation types are removed from test files at the beginning of a test run, so that the tested ruta script starts with no prior annotations within the input document. If a ruta script is meant to assume some annotation types to be already available in an input document, the scipt will not work in test runs. Therefore, it would be very useful to have an option that excludes annotations from being removed during test runs, so that the tested script can work on them.
issueID:UIMA-2986
type:Improvement
changed files:
texts:Add button "Select included types" in Annotation Test view
So far, the Ruta Annotation Test view only supports selecting which types to exclude from testing (= negative list). If all, but a few types should be excluded it needs a lot of time to select all types to exclude one by one. So, a positve list, where you can only select all types you wish to include, would be very useful.
issueID:UIMA-2987
type:Task
changed files:
texts:Alter integration tests for jcasgen-maven-plugin to skip m2e tests
The m2e test runs a build using Tycho, with a "temporary" new maven repository, that starts out essentially empty.  This build requires a large amount of network traffic against various hosts, including the eclipse p2 sites, for downloading the artifacts needed to populate the maven temporary repo.  Because of this, the m2e build takes almost 10 minutes (on my laptop with large network connectivity bandwith - not sure how it would on Jenkins machines).  It is good to run this test once when jcasgen-maven-plugin is updated.  But it is better to disable it normally.  Disable it in a manner where it can be easily re-enabled - by adding a configuration to the invoker plugin.
issueID:UIMA-2988
type:Improvement
changed files:
texts:update the build for the composite eclipse update site to work with dist svn and do signing
Update the build's uima-eclipse-composite-update-site pom to make use of of the dist svn in the same manner as the regular update site, to make it easy to switch / commit back to the release spot.  Also, do the checksums and signings if -Papache-release is specified.
issueID:UIMA-2989
type:Improvement
changed files:
texts:Improve error messages of RutaEngine
This should have been done a long time ago, but I always referred to the IDE for error messages. It is simply useful to get some reasonable explanation what went wrong in the parsing process when initializing the analysis engine.
issueID:UIMA-299
type:Task
changed files:
texts:Remove SNAPSHOT from version numbers prior to release
Note this affects eclipse plugin version numbers as well.I suppose we do this by creating an SVN branch and changing the version numbers to 2.1.0 there, while in trunk we change them to 2.1.1-SNAPSHOT or 2.2.0-SNAPSHOT (not sure which).
issueID:UIMA-2991
type:Task
changed files:
texts:Adapt ruta update site to new mechanism
Adapt ruat update site to new mechanism concerning the release process.
issueID:UIMA-2992
type:Task
changed files:
texts:Adapt ruta engine plugin to new build mechanism
Adapt ruta engine plugin to new build mechanism. See uimaj-ep-runtime.
issueID:UIMA-2993
type:Task
changed files:
texts:Add view visualizing html artifact in Ruta Workbench
Even with the html converter, it is still cumbersome to process html documents. Add an additional view that visualizes the html file in a browser with an additional option for a set of documents that contains the html content if the document to be processed with converted.
issueID:UIMA-2994
type:New Feature
changed files:
texts:UIMA Ruta: Call collectionProcessComplete on Java AEs
It would be nice if Java AEs called by an "EXEC" action would be notified that "collectionProcessComplete"d.
issueID:UIMA-2995
type:Bug
changed files:
texts:SourceDocumentInformation in Ruta launcher
Add option to add SourceDocumentInformation when launching Ruta scripts. This functionality was removed with the new launcher, but is need by some components.
issueID:UIMA-2996
type:Bug
changed files:
texts:DUCC Setup. Adjust defaults to support 8GB test rigs.
The current default setup uses a 4GB scheduling quantum.  On 8GB machines, this will likely result in only 1 share being available because the hardware reports slightly less than true memory.  As well, the setup should account for a single node, and thus not set a jobdriver nodepool.The default quantum should probably be 2GB in order to accommodate 8GB test and initial setups.This affects ducc.properties, ducc.classes, the test jobs, and documentation.
issueID:UIMA-2997
type:New Feature
changed files:
texts:Ruta: provide functionality to cut a CAS
Provide functionality to cut a CAS: retain only text covered by annotations of a specified type and adapt the offsets of the other annotations.
issueID:UIMA-2998
type:Bug
changed files:
texts:DUCC Scripting: Incorrectly searching for "java" command
The indention level got off in ducc_util.py:which() which is looking for the java command during installation, resulting in "java" not being found even if it is in your path.
issueID:UIMA-2999
type:Bug
changed files:
texts:DUCC ducc_ling don&#39;t create directories before switching IDs!
Ducc_ling must not do anything at all before switching IDs.  Somehow the code that creates the log dir hierarchy slid up before the ID switch.  Both the OR and the CLI try to write to the logdir but the OR has to use ducc_ling.  On fast systems (with local disk vs NFS), the OR can easily win the race and the logdir is written with incorrect ownership.  CLI then tries to write the properties file and gets an invalid permissions error.
issueID:UIMA-3
type:Task
changed files:
texts:Split big book into 4, rewrite to be appropriate for Apache UIMA, redo in DocBook, get it generate high-quality PDF
4 books:  Intro & setup, tutorial and users' guides, tools, and reference
issueID:UIMA-30
type:Bug
changed files:
texts:Binary CAS Serialization is not documented
(Issue reported on SourceForge by Greg Holmberg)Class com.ibm.uima.cas.impl.Serialization is notdocumented in the JavaDoc.Since class CAS doesn't implement Serializable,Serialization is the only way to (efficiently)transport a CAS Java process to Java process (via RMIor Jini).Also, Serialization seems to be missing a method.There is a "CASSerializer serializeCAS(CAS)" methodbut no way to deserialize it. There is a pair thatworks on Streams, but there is no "voiddeserializeCAS(CAS, CASSerializer)" method.Secondly, the method serializeCASComplete() takes aCASMgr, which is also undocumented. Perhaps thisshould be modified to take a CAS instead of a CASMgr?
issueID:UIMA-300
type:Bug
changed files:uimaj-tools/src/main/java/org/apache/uima/tools/docanalyzer/AnnotationViewerDialog.java
uimaj-tools/src/main/java/org/apache/uima/tools/util/htmlview/AnnotationViewGenerator.java
uimaj-tools/src/main/java/org/apache/uima/tools/docanalyzer/AnnotationViewerDialog.java
uimaj-tools/src/main/java/org/apache/uima/tools/util/htmlview/AnnotationViewGenerator.java
texts:DocumentAnalyzer cant be run by multiple users on the same machine
DocumentAnalyzer writes some files (e.g., annotationViewer.js) to temporary directory.  If it does not have permissions to write those files, then it throws an exception and does not start.  It gives these files the same name each time.  If there are multiple users with the same temporary directory (e.g., /tmp), one of those users runs DocumentAnalyzer and writes these files to /tmp.  By default, other users are not given write permissions to that file (even though they have write permissions to the directory).  Thus they cannot override the file and when they try to run DocumentAnalyzer, it does not start.
issueID:UIMA-3000
type:Improvement
changed files:
texts:DUCC webserver (WS) employment of ^ as indicator for initialization capping is lacking...
^ is non-obvious and difficult to hover with mouse
issueID:UIMA-3001
type:Bug
changed files:
texts:Fix UIMA-AS CAS accounting to prevent loosing CASes
In complex scenarios involving many CMs and nested aggregates the uima-as fails to account for CASes correctly. In scenarios where the parent and child flow together, the uima-as can double decrement child count of the ancestor CAS causing it to leave an aggregate while its children are still in play. Such scenario may lead to NullPointerException and a hang.
issueID:UIMA-3002
type:Bug
changed files:
texts:Cascading wildcards cause massive match in Ruta
If there is a second wildcard in a composed rule element construct, then that one creates an alternative match and the first one cannot verify whether the match later on was successful. The result is a match on all possible future alternatives.This happens with a rule like:CAP{STARTSWITH(Title) -> UNMARK(Title, true)} # (CW #){-> MARK(Title)} CW;
issueID:UIMA-3003
type:Bug
changed files:
texts:TestOptimizedStrings fails on some Javas
The tests for Optimized strings check on how multiple strings can be packed into one shared char[].  To do some of the tests, it needs to check the offset of the String chars in the shared array, which is not available, normally.  To do this it uses reflection of the "offset" field of the String implementation.  IF the String implementation for a particular Java doesn't have this field, the test fails.  Change this to make the test continue with a warning message to the error output stream that part of the test is being skipped.
issueID:UIMA-3006
type:Documentation
changed files:
texts:DUCC webserver (WS) - how to configure authentication
Need a small section describing how to configure Web Server Authentication, including something about the API.  This should be a subsection in part 4 , chapter 13, Administration, including something about the class you have to implement and the ducc.property you have to set.
issueID:UIMA-3007
type:Bug
changed files:
texts:DUCC command line interface (CLI) does not correctly handle --cancel_on_interrupt flag
The cancel_job_on_interrupt flag works correctly.  Job completes when monitor is interrupted and Reason is CanceledByUser.The generic cancel_on_interrupt flag does not!  Job completes when monitor is interrupted and Reason is CanceledByAdministrator.  Job is canceled by WS due to missing monitor heartbeats.  This is not wrong per se, but correct behavior is for cancel command to be invoked with resulting Reason of CanceledByUser.
issueID:UIMA-3008
type:Improvement
changed files:
texts:fix some build issues with jcasgen-maven-plugin unit tests
There are 2 issues - the artifact names of all the tests are the same "simple" - a cut/paste thing.  Change to match the test.The other issue: there is no parent pom specified, so on different system, different versions of the maven plugins are being defaulted.  On one linux machine we have, a very old level of the maven-compiler-plugin is being set to 2.0.2 - this level is so old that it ends up defaulting a Java source level to 1.3  - which causes the compile to blow up because Java annotations weren't supported back then.  The fix: give these test poms a parent that sets the plugins used for building to more-or-less current levels.
issueID:UIMA-301
type:Wish
changed files:uimaj-core/src/main/java/org/apache/uima/jcas/cas/ArrayFSImpl.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/FSArray.java
uimaj-core/src/main/java/org/apache/uima/cas/CommonArrayFS.java
uimaj-core/src/main/java/org/apache/uima/cas/ArrayFS.java
uimaj-core/src/main/java/org/apache/uima/cas/StringArrayFS.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/ArrayFSImpl.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/CommonArrayFSImpl.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/StringArrayFSImpl.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/FSArray.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/StringArray.java
texts:CAS APIs should make it easier to deal with arrays of unknown element type
There are several places in tools where we need to display the contents of an FS, which could be an array.  Currently we have to iterate over all possible primivie-typed arrays in order to access and display their elements.What would have been nice is a common superinterface of all theprimitive array types, which defines a toStringArray() method. ThetoStringArray() methods are already there on the impls, but there's nosuperinterface that I can use to get at them.See UIMA-40 and UIMA-77.
issueID:UIMA-3010
type:Improvement
changed files:
texts:Eclipse Plugin/Osgi packaging - change embed of jars to not unpack them
improve build of osgi components including plugins that embed jars to not unpack the jars.  This preserves any license / notices in those files
issueID:UIMA-3011
type:Improvement
changed files:
texts:DUCC Service Manager - parameterize pingers
Currently SM sets state of a service to "healthy" if any response is received from the ActiveMq MBean for a queue (as well as if get-meta to the service works), and "unhealthy" otherwise.  Better would be if some reasoning is done on the queue statistics from ActiveMQ.  This is somewhat subtle as many things need to be taken into consideration to determine if a service is "healthy".For the moment, we will use the single heuristic, "is the queue depth too big" to better draw attention to potential (but maybe not actual) problems and defer more complete analysis to a later time.
issueID:UIMA-3012
type:Improvement
changed files:
texts:DUCC Setup difficulties running ducc_ling in single-user mode.
Current start-up scripting attempts to insure ducc_ling has ownership "root.ducc", the setuid bit on, and permissions 750.When running in single-user mode this checking creates unnecessary complications as, by definition (DUCC's definition), single-user mode means everything is run under the same credentials as the (non-root) user that starts DUCC.A new flag to 'start_ducc' should be added that means "permit single user mode".  This should bypass the ducc_ling checks and eliminate the need for special ducc_ling setup in single-user mode.
issueID:UIMA-3013
type:Bug
changed files:
texts:Prereq Java 6 for Ducc
Ducc has many internal dependencies on Java 6 library methods and classes.  Seems better investment to pre-req Java 6 than to spend effort making it work on Java 5.
issueID:UIMA-3014
type:Improvement
changed files:
texts:improve jira report for releases sort order
Our current practice sometimes "closes" issues, othertimes "resolves" them.  This distinction is not significant in how we operate.  But it's sorted ahead of the issue number, making it harder to locate a particular issue.  Drop this sort key.  Then we'll have a sort order of issue type (e.g. bug, improvement...) and within each of those a list sorted by issue number.  The next column will indicate the closed or resolved status.
issueID:UIMA-3015
type:Bug
changed files:
texts:DUCC ducc_ling should use mode 777 creating directories.
By using mode 777 the umask controls the permissions.
issueID:UIMA-3016
type:Bug
changed files:
texts:DUCC: Broker management - not all parameters are set up correctly from scripting.
1. Oversight - the connector port and decorations are set from the startup scripting but the jmx port isn't.2. It looks like the Xmx setting passed in from scripting is being ignored.
issueID:UIMA-3017
type:Improvement
changed files:
texts:Getting feature value from feature structure longer than expected
Should getting a value of a feature in a feature structure be fast? Intuitively, I would expect performance to be about the same as getting an entry from a Java HashMap or faster but in my experiments it seems to be 8 times slower. To solve my problem, I wrap my feature structures with caching Java code but it seems that there might be an opportunity to speed up UIMA generally.My test creates a CAS with a single feature structure in it. It sets a string feature in that feature structure and then simply gets the value of that feature in a tight loop. I compare that to an instance of a Java class that has an internal HashMap of strings to strings. In that case, a method is called on that instance to get an entry from the map in a very tight loop. I do 5 rounds of each of the loops. The total times for the rounds involving the CAS were:round 0 total time 1: 7.520104509sround 1 total time 1: 6.812214938sround 2 total time 1: 6.882752307sround 3 total time 1: 6.728515004sround 4 total time 1: 6.813674956sThe total times for the rounds just using the Java class were:round 0 total time 2: 0.847296054sround 1 total time 2: 0.814570347sround 2 total time 2: 0.814399859sround 3 total time 2: 0.814189383sround 4 total time 2: 0.814979357sHere is my Java code:MyTest.javapackage test;import java.io.InputStream;import java.util.HashMap;import java.util.Map;import org.apache.uima.UIMAFramework;import org.apache.uima.cas.CAS;import org.apache.uima.cas.Feature;import org.apache.uima.cas.FeatureStructure;import org.apache.uima.cas.Type;import org.apache.uima.resource.metadata.TypeSystemDescription;import org.apache.uima.util.CasCreationUtils;import org.apache.uima.util.XMLInputSource;public class MyTest {    static class MyClass {    Map<String, String> myFeatures = new HashMap<String, String>();        void setStringValue(String feature, String value) {      myFeatures.put(feature, value);    }        String getStringValue(String feature) {      return myFeatures.get(feature);    }  }    static public void main(String[] argv) throws Exception {    InputStream stream = TestSupport.class.getClassLoader().getResourceAsStream("MyTypes.xml");    TypeSystemDescription typeSystemDescription = UIMAFramework.getXMLParser().parseTypeSystemDescription(new XMLInputSource(stream, null));    CAS cas = CasCreationUtils.createCas(typeSystemDescription, null, null);    Type myType = cas.getTypeSystem().getType("MyType");    FeatureStructure fs = cas.createFS(myType);    Feature myFeature = myType.getFeatureByBaseName("myFeature");    fs.setStringValue(myFeature, "myString");    cas.addFsToIndexes(fs);        MyClass myInstance = new MyClass();    myInstance.setStringValue("myFeature2", "myString2");        long iterations = 100000000;    double nanoSecsPerSec = 1000000000.0d;        for (int round = 0; round < 5; round++) {      long start = System.nanoTime();      for (long i = 0; i < iterations; i++) {        fs.getStringValue(myFeature);      }      long end = System.nanoTime();      System.out.println("round " + round + " total time 1: " + ((end - start) / nanoSecsPerSec) + "s");    }          for (int round = 0; round < 5; round++) {      long start = System.nanoTime();      for (long i = 0; i < iterations; i++) {        myInstance.getStringValue("myFeature2");      }      long end = System.nanoTime();      System.out.println("round " + round + " total time 2: " + ((end - start) / nanoSecsPerSec) + "s");    }  }}Here is my type descriptor:<?xml version="1.0" encoding="UTF-8"?><typeSystemDescription xmlns="http://uima.apache.org/resourceSpecifier">  <name>MyTypes</name>  <description/>  <version>1.0</version>  <vendor/>  <types>    <typeDescription>      <name>MyType</name>      <description/>      <supertypeName>uima.cas.TOP</supertypeName>      <features>        <featureDescription>          <name>myFeature</name>          <description></description>          <rangeTypeName>uima.cas.String</rangeTypeName>        </featureDescription>      </features>    </typeDescription>  </types></typeSystemDescription>
issueID:UIMA-3018
type:Bug
changed files:
texts:AllInOne doesn&#39;t use requested JVM
With all-in-one flag DUCC jobs are run as APs with the default JVM - should be the one in the job properties
issueID:UIMA-3019
type:Bug
changed files:
texts:Make REGEXP condition sensible to unicode case
Make REGEXP condition sensible to unicode case: Add the flag or make it configurable.
issueID:UIMA-302
type:Bug
changed files:
texts:adjustExamplePaths scripts replace "C:/Temp" with "temp"
This seems wrong, but it apparently has been this way for a while.  Wasn't the intention to replace this with /tmp on Linux, and leave it alone on Windows?By changing it to the non-absolute "temp" this leads to files being created relative to the directory where the user runs.  (Our example CAS Consumers' default output directory is set to C:/Temp in their descriptors.)However maybe this is related to UIMA-300, in that writing named files to the /tmp directory on Linux doesn't work well with multiple users, since they cannot overwrite each others' files?What's the right behavior here?  Maybe the output of the CAS Consumers should be relative to the working dir, but then probably not under a directory named "temp".
issueID:UIMA-3020
type:Improvement
changed files:
texts:Ducc Agent should send kill -TERM to Service and AP process
The agent currently kills APs and Services with kill -9 which prevents the process from doing cleanup. Modify to first send kill -15 (TERM) and wait for 1 minute for the process to terminate. If still alive after 1 min, kill the process with -9
issueID:UIMA-3021
type:Task
changed files:
texts:fix javadocs on our website
Run the recommended fixup on all our javadocs to repair them, per note on committers list.
issueID:UIMA-3022
type:Bug
changed files:
texts:Let uima-addons-parent inherit parent&#39;s lifecycle-mapping configuration
Let uima-addons-parent inherit uima parent-pom's lifecycle-mapping configuration
issueID:UIMA-3023
type:Bug
changed files:
texts:CDE falsely refuses to add a parameters with the same name as one in a different group
Having parameters with the same name in different groups is one of the main reasons for using groups! The CDE will edit them but won't create them, so the work-around is to create manually via the Source tab.
issueID:UIMA-3024
type:Bug
changed files:
texts:CASDumpWriter is sensitive to type system changes
When the type system changes, the order of annotations with the same offsets can change in the CASDumpWriter. This is how the UIMA iterators work "by-design" when no type priorities are defined, but it is still annoying. Maybe an option to enforce a "sort by type name"?
issueID:UIMA-3025
type:Improvement
changed files:
texts:Describe usage of annotations created by called AEs in Ruta documentation
Describe how to match on annotations created by called AEs in Ruta documentation. Extend the definition of the EXEC action in the language chapter and give some examples.
issueID:UIMA-3026
type:Bug
changed files:
texts:Processes should not inherit the agent&#39;s environment
The CLI should include only a few useful values from the user's environment and the agent should launch the process with only the CLI-supplied values.
issueID:UIMA-3027
type:New Feature
changed files:
texts:Possibility to change an Eclipse project to a RUTA project
Like it is possible with a context menu command to make a Maven project or Plugin project from an already existing project it would be nice to transform a project into a RUTA project. All necessary folders for scripts, descriptors, input, output should be automatically created.
issueID:UIMA-3028
type:Bug
changed files:
texts:Time GC is reported as zero for some JPs?

issueID:UIMA-3029
type:New Feature
changed files:
texts:Improve support for creating gold data sets in Ruta Workbench
Improve support for creating gold data sets in Ruta Workbench: Add a view that provides an overview of possible gold annotation (created by humans or some models), which may be distributed in a set of documents. The view should take care of the cas editor control (open/show) and give the user options to accept/reject each annotations. In order to allow an incremental process, accepted annotations should be stored in an additional folder, which contains only gold documents, and this folder should also remember, which documents and types have already been processed by the user.
issueID:UIMA-303
type:Bug
changed files:uimaj-cpe/src/main/java/org/apache/uima/collection/impl/cpm/engine/BoundedWorkQueue.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/cpm/engine/SequencedQueue.java
texts:Problems with BoundedQueue.dequeue(timeout)
In the CPM, the method BoundedQueue.dequeue(timeout) is supposed to wait for the specified timeout for a CAS to become available.  However from a code inspection it looks like there are problems with its synchronization.  If multiple threads are waiting, and one CAS becomes available, then all of the threads will wake up, but only one will get the CAS.  The others will return null prematurely, without having exhausted their timeout.Also there may be a problem with chunking enabled and a chunk timeout is specified, where the timeout does not actually do anything except log a message.Details here: http://www.mail-archive.com/uima-dev@incubator.apache.org/msg02033.html
issueID:UIMA-3030
type:Bug
changed files:
texts:DUCC ducc_ling: write job environment to log.
The CLI is "scrubbing" the environment as part of submission.  ducc_ling will now log the environment it receives from Agent and passes to the exec()ed process just before the exec().
issueID:UIMA-3031
type:Bug
changed files:
texts:Ducc Agent Rogue detector marks processes owned by Service or AP as rogues
Processes that are launched by a Service or AP are being marked as rogue. The Rogue process detector should detect if the process ancestor have been launched by an agent and if true, dont mark such process as rogue.
issueID:UIMA-3034
type:Improvement
changed files:
texts:DUCC job driver (JD) should reap unprocessed (no callback received) work items
UIMA-2887 reaps but does not retry lost (due to "framework" issues) work items. To the extent possible, Job Driver (JD) should attempt to retry these lost work items.This may involve some hand-shaking between DUCC daemons to get all JPs shutdown, then to bring up fresh JP(s) to finish the lost work items.
issueID:UIMA-3035
type:Improvement
changed files:uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/AnnotationEditor.java
texts:CAS Editor: change the annotation mode via API
Make it possible to change the annotation mode via API from another plugin.
issueID:UIMA-3038
type:Bug
changed files:
texts:Need to report reason for failure to start a service
If the SM cannot start a service (e.g. resources unavailable) there may only be a ducc.log in the user's directory so it should be given the reason.  Trawling through the sm.log & rm.log is painful.
issueID:UIMA-3039
type:Improvement
changed files:
texts:DUCC Agent should collect swap, rss and other runtime info for all processes it launches
Currenty, the agent only collects swap, rss and other vital process info for UIMA-AS processes. Modify to start metrics collector thread for every process the agent launches.
issueID:UIMA-304
type:Bug
changed files:uimaj-tools/src/main/java/org/apache/uima/tools/docanalyzer/AnnotationViewerDialog.java
uimaj-tools/src/main/java/org/apache/uima/tools/docanalyzer/DocumentAnalyzer.java
uimaj-tools/src/main/java/org/apache/uima/tools/docanalyzer/AnnotationViewerDialog.java
uimaj-tools/src/main/java/org/apache/uima/tools/docanalyzer/DocumentAnalyzer.java
texts:Document Analyzer HTML View Not Working
HTML View fails to open with error message about missing style map file.  It seems I was too agressive earlier in trying to get style map files not to be generated unless necessary.
issueID:UIMA-3040
type:Improvement
changed files:
texts:Ducc Agent should use a list of paths defined in ducc.properties to locate cgroups utils dir
Current code uses hardcoded path (/usr/bin) to cgroups utilities like cgexec. Modify code to use a new property in ducc.properties to define a list of possible paths where the cgroups utilities may be found on a mixed cluster. If unable to locate the path, disable cgroups.
issueID:UIMA-3041
type:Improvement
changed files:
texts:JCasIterable should have signature accepting descriptors
JCasIterable should have signature accepting descriptors. It currently only accepts pre-instantiated readers and engines.
issueID:UIMA-3042
type:Bug
changed files:
texts:DUCC Agent should not collect GC stats for POPs
The agent currently tries to collect GC stats for all managed processes. This causes a failure for POPs that are not java or java with jmx disabled. The agent should not collect GC stats for POPs.
issueID:UIMA-3043
type:Bug
changed files:
texts:DUCC Agent Major Fault Collector Not Working on RHEL
The agent collects major faults by reading proc file of a given process. The structure of this file is subject to change on different flavors of linux. Thus depending on a fixed offset to find the value is not reliable. In fact it does not work on RHEL. Use an alternate way to collect major faults. Spawn the following: ps -o maj_flt <PID> and collect the result.
issueID:UIMA-3044
type:Bug
changed files:jcasgen-maven-plugin/src/main/java/org/apache/uima/tools/jcasgen/maven/JCasGenMojo.java
uimaj-tools/src/main/java/org/apache/uima/tools/jcasgen/Jg.java
texts:Typo in argument "=jcasgenclasspath"
There appears to be a typo in this argument: "=" instead of "-". Btw. this argument is used in the jcasgen-maven-plugin.          // This next is not apparently used  5/2012 schor          if (arguments[i].equalsIgnoreCase("=jcasgenclasspath")) {            classPath = arguments[++i];            continue;          }
issueID:UIMA-3045
type:Bug
changed files:
texts:DUCC webserver (WS) Services page filters { users, max records } seem to be ignored

issueID:UIMA-3046
type:Bug
changed files:
texts:uimaFIT build unable to find jcasgen-maven-plugin snapshot
uimaFIT build unable to find jcasgen-maven-plugin snapshot during Jenkins build.
issueID:UIMA-3047
type:Improvement
changed files:
texts:get rid of noise in Maven builds due to m2e
m2e plugin configuration causes Maven builds outside of Eclipse to report 2 warnings per project, that are extraneous.  Searching the web revealed there's a way to put this configuration inside a Maven profile that is only activated within the m2e environment.  Move this configuration under that profile.
issueID:UIMA-3049
type:Bug
changed files:
texts:DUCC Agent should kill self if unable to create a cgroup
The agent should quiesce all deployed processes on a node and kill self if there is a problem creating a cgroup on the node.
issueID:UIMA-305
type:Improvement
changed files:uimaj-tools/src/main/java/org/apache/uima/tools/docanalyzer/DocumentAnalyzer.java
uimaj-examples/src/main/java/org/apache/uima/examples/cpe/FileSystemCollectionReader.java
uimaj-examples/src/main/java/org/apache/uima/examples/PrintAnnotations.java
uimaj-examples/src/main/java/org/apache/uima/examples/ExampleApplication.java
uimaj-core/src/main/java/org/apache/uima/util/FileUtils.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/cpm/engine/DebugControlThread.java
uimaj-tools/src/main/java/org/apache/uima/tools/viewer/CasTreeViewer.java
uimaj-adapter-vinci/src/main/java/org/apache/uima/adapter/vinci/util/VinciTAEClient.java
uimaj-core/src/main/java/org/apache/uima/internal/util/ReplaceStringInFiles.java
uimaj-tools/src/main/java/org/apache/uima/tools/docanalyzer/AnnotationViewerDialog.java
uimaj-examples/src/main/java/org/apache/uima/examples/casMultiplier/CasMultiplierExampleApplication.java
uimaj-tools/src/main/java/org/apache/uima/tools/cvd/MainFrame.java
uimaj-tools/src/main/java/org/apache/uima/tools/components/FileSystemCollectionReader.java
uimaj-tools/src/main/java/org/apache/uima/tools/cvd/LogFileViewer.java
texts:Move FileUtils to non-internal package
Example code uses routines in FileUtils, so it would be better if this were in a non-internal package.
issueID:UIMA-3050
type:Task
changed files:uimaj-core/src/main/java/org/apache/uima/impl/UimaContext_ImplBase.java
uimaj-core/src/main/java/org/apache/uima/UimaContext.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/SlotKinds.java
uimaj-core/src/main/java/org/apache/uima/util/Settings.java
uimaj-core/src/main/java/org/apache/uima/util/impl/DataIO.java
uimaj-core/src/main/java/org/apache/uima/util/impl/Settings_impl.java
texts:prepare uima-sdk release
This Jira is a placeholder for the miscellaneous tasks and cleanups to do toward getting the 2.4.1 release done of the UIMA-SDK
issueID:UIMA-3051
type:Bug
changed files:
texts:ruta: rule with matching condition ".*" -> doSomething causes null pointer exception
A rule with a short notation regex matching condition ".*" causes a null pointer exception
issueID:UIMA-3052
type:Improvement
changed files:
texts:DUCC webserver (WS) display of Services Definitions List is (relativley) slow
Determine cause and consider caching.complainers: eae & jrc
issueID:UIMA-3053
type:Improvement
changed files:
texts:add m2e ignore for maven enforcer plugin to eliminate warning msg
The maven-enforcer-plugin causes Eclipse / m2e to report a warning that this plugin is ignored.  To eliminate this warning, add an explicit ignore to the m2e configuration.
issueID:UIMA-3054
type:Bug
changed files:uimaj-core/src/main/java/org/apache/uima/cas/impl/BinaryCasSerDes6.java
texts:Binary CAS format 6 leaves document text "null" after deserializing
Binary CAS format 6 leaves document text "null" after deserializing.On my machine (uimaj 2.4.1-SNAPSHOT) this fails in the last line, claiming that "test" is not equal to null.import static org.junit.Assert.assertEquals;import static org.junit.Assert.assertTrue;import java.io.File;import java.io.FileInputStream;import java.io.FileOutputStream;import java.io.InputStream;import java.io.OutputStream;import org.apache.commons.io.IOUtils;import org.apache.uima.cas.CAS;import org.apache.uima.cas.impl.Serialization;import org.apache.uima.resource.metadata.TypeSystemDescription;import org.apache.uima.util.CasCreationUtils;import org.junit.Rule;import org.junit.Test;import org.junit.rules.TemporaryFolder;public class MinimalTest{    @Rule    public TemporaryFolder testFolder = new TemporaryFolder();    @Test    public void test6()        throws Exception    {        CAS cas = CasCreationUtils.createCas((TypeSystemDescription) null, null, null);        cas.setDocumentLanguage("latin");        cas.setDocumentText("test");        File file = testFolder.newFile("test.bin");                OutputStream os = new FileOutputStream(file);        Serialization.serializeWithCompression(cas, os, cas.getTypeSystem());        IOUtils.closeQuietly(os);        assertTrue(new File(testFolder.getRoot(), "test.bin").exists());                CAS cas2 = CasCreationUtils.createCas((TypeSystemDescription) null, null, null);        InputStream is = new FileInputStream(file);        Serialization.deserializeCAS(cas2, is);        IOUtils.closeQuietly(is);        assertEquals("latin", cas2.getDocumentLanguage());        assertEquals("test", cas2.getDocumentText());    }}
issueID:UIMA-3055
type:Task
changed files:
texts:DUCC scripting allow restrictive permissions on &#39;admin&#39; directory
ducc_util.py needs to be refactored into a 'general user' part and an 'administrative-user' part so permissions on the bin and admin directory can be different.  It is split into a base script ducc_base.py which is used by all ducc scripting, and ducc_util which contains the parts only available to administrators.
issueID:UIMA-3057
type:Improvement
changed files:
texts:build for Eclipse update sites - skip dist svn copying and checkout unless apacheRelease
To speed things up and reduce calls to update apache infrastructure (so non-apache people can build) skip the copy and checkout of the current update site unless -Dapache-release is specified.
issueID:UIMA-3058
type:Bug
changed files:
texts:DUCC SM: Better tracking of service instance logs
The SM will update the log directory specified in registrations to append the registration ID at the end with a distinctive "S-" string.  The result will be a second level of log hierarchy containing and organizing the instance logs relative to the registration ID.  E.g. for service 123, the instances are grouped under <logpath>/S-123/instance1, <logpath>/S-123/instance2, etc.
issueID:UIMA-3059
type:Task
changed files:
texts:Set maven-javadoc-plugin version to 2.9.1 to pickup fix for javadoc security issue
title says it all
issueID:UIMA-306
type:Task
changed files:
texts:Improve Website documentation on building docbooks
Website needs to explain that if building from a source distribution, additional files must be obtained from svn in order to build the documentation (and hence, to build the full distribution).Also currently the website says (or strongly implies at least) users have to manually run ant to build the docbooks, prior to running mvn assembly:assembly, which isn't true.  The assembly step builds the docs on its own.
issueID:UIMA-3060
type:Bug
changed files:
texts:parent-pom refers to snapshot level of uimaBuildResources property
fix to refer to last released level of uimaBuildResources (5)
issueID:UIMA-3061
type:Bug
changed files:
texts:in parent-pom, restore proper levels of uima-build-helper-maven-plugin and uima-build-resource
replace hard-coded (older) versions of these with references to property name or current version
issueID:UIMA-3062
type:Bug
changed files:
texts:fix maven plugin annotations properly, for some plugins
As part of "cleanup" in the last cycle, several of the maven plugins having "older style" annotation specs within comments were converted to the "new style" specs.  This conversion failed in several ways, the main effect being that in order to work, the new style cannot be inside comments, and the plugin dependencies need to include the anotation api.
issueID:UIMA-3063
type:Bug
changed files:PearPackagingMavenPlugin/src/main/java/org/apache/uima/pear/tools/PearPackagingMojo.java
texts:fix maven plugin annotations for PearPackager
Same fix needed as in UIMA-3062
issueID:UIMA-3066
type:Improvement
changed files:
texts:add javacc m2e config to parent pom
At least one uima project uses javacc.  Add an m2e cover for this.
issueID:UIMA-3067
type:Improvement
changed files:
texts:Document "Lost" and improve WS hover
See summary.
issueID:UIMA-3068
type:Bug
changed files:
texts:Circular script imports in Ruta
Circular script imports cause a stack overflow when the environments are relinked.
issueID:UIMA-3069
type:Improvement
changed files:
texts:Support Ruta projects without packages
Support Ruta projects without packages: problems can occur if there are scripts, which are located in the root source (script) folder without packages. At least the empty package definition causes a parse error. Maybe it is already enough to make the package definition optional.
issueID:UIMA-307
type:Improvement
changed files:
texts:Fix CVD screenshots
Screen shots out of date.  Not fixed in 2.1
issueID:UIMA-3070
type:Bug
changed files:
texts:DUCC SM: write service startup error log to user&#39;s ducc log dir
If Service Manager gets an error trying to start a service instance (via the DuccServiceSubmit API), those errors should be logged both to the SM log and into the user's log directory.A single log is created for the registered service, in the user's S-<id> log dir for the service, and appended with each failure (because by definition, if it fails, there is no instance ID to log), using ducc_ling's "-a" append capability.  Users may trim this log manually at will.  New entries are timestamped and clearly delimited.
issueID:UIMA-3071
type:New Feature
changed files:
texts:Break up sequential matching in Ruta rules
Break up sequential matching in Ruta rules: Right now a list of rule elements specify a sequential pattern. In some use cases, however, the sequence of annoations is not as important as the their existence. An example: A rule should fire, if some complex annotations patterns occur within a sentence whereas the location or order is not important. Two use cases can be distinghuished: "and" and "or". A disjunctive matcher is already implemented, but only suppport simple matching conditions, but not complex patterns (e.g., additional conditions) for the alternatives. I am still thinking about the best syntax for this. Right now, my favorite is a special character that separates the rule elements. An example:BLOCK(b) Sentence{}{  CW PERIOD & SW COLON;}... a sentence that contains a capitalized word followed by a period AND a small written word followed by a colon, regardless of where they occur in the sentence.Maybe also something like the follwoing is then possible:NUM (CW{REGEXP("A") -> MARK(NUMA,1,2)} | CW{REGEXP("B") -> MARK(NUMB,1,2)});
issueID:UIMA-3072
type:Bug
changed files:
texts:Add workaround for maven plugin-plugin bug
The maven-plugin-plugin is used in several projects to help build maven plugins.  Two of its goals, helpmojo and descriptor, extract info about the plugin from annotations.  A recent change deprecated the use of javadoc-style annotations, in favor of Java 5 annotations, and we've changed our maven plugin projects to Java 5 annotation style. Unfortunately, this style is broken for these two goals in the maven-plugin-plugin, because the goals end up in many cases (including during release:prepare, and if you use "clean install") being run before the compiler runs.  The scan for these Java annotations scans the compiled code (which is not there yet, after, for instance, a clean has been run but before the compiler has run), and doesn't find any.Two Jira issues (currently unresolved) address this: http://jira.codehaus.org/browse/MNG-5346 and http://jira.codehaus.org/browse/MPLUGIN-238The way the helpmojo works - appears not to necessarily depend on having the annotations at that time.  The generated helpmojo class is data driven, and works off of an XML file it finds in META-INF/maven/org.apache.uima/<name-of-plugin>/plugin-help.xml.  When the helpmojo is run, it does 2 things: it generates a generic helpmojo java source, and it uses the annotations it finds to generate that datafile (plugin-help.xml).  If this is run together with a later run of the "descriptor" goal, then that latter goal regenerates the plugin-help.xml.So, things work if you run the helpmojo goal before the compiler step - it generates the helpmojo java source code to be included in the compile, and a "bad" version of the plugin-help.xml resource, provided you set the flag to tell it to not stop if there are no annotations found. If the descriptor goal is then run after the compile step, it regenerates the correct plugin-help.xml resource and puts it into the compiled output in the right spot (since it's a resource, it doesn't need to be compiled).This is how the workaround proposed by MNG-5346 works.Workaround this here by setting the phase for the maven-plugin-plugin descriptor to run after compile, and setting the configuration to <skipErrorNoDescriptorsFound>true</skipErrorNoDescriptorsFound>. Note that build steps that want to invoke this have to specify the plugin in their build plugins configuration, and use the id "default-descriptor", if they have additional configuration needed.
issueID:UIMA-3074
type:Improvement
changed files:
texts:ruta: cache classpath information when compiling ruta scripts
When building a ruta project the compiler asks for the filepaths of all bundles in the classpath. This is done every time when the compiler starts. This could be a place where with some clever caching a speed improvement for the compiling process could be done.
issueID:UIMA-3075
type:Bug
changed files:
texts:Unambiguous non-strict subiterator may return annotations outside the given annotation&#39;s range
REPRO: using a tokenizer that matches on "&#91;^ &#93;" on "aaa bbb ccc ddd" I get four token annotations"aaa" 0-3"bbb" 4-7"ccc" 8-11"ddd" 12-15I then iterate over the token annotations while printing the covered text, begin and end, make an unambiguous non-strict subiterator, and iterate over the subiterations printing out their covered text, begin and end all indented.  Iterator<Annotation> iter = jcas.getAnnotationIndex(Token.type).iterator();  while (iter.hasNext()) {   Annotation a = iter.next();   System.out.println("\"" + a.getCoveredText() + "\"" + " [" + a.getBegin() + ", " + a.getEnd() + ")");   Iterator<Annotation> featIter = jcas.getAnnotationIndex().subiterator(a, false, false);   while (featIter.hasNext()) {    Annotation b = featIter.next();    System.out.println("\t\"" + b.getCoveredText() + "\"" + " [" + b.getBegin() + ", " + b.getEnd() + ")");   }  }The output is"aaa" [0, 3) "bbb" [4, 7)"bbb" [4, 7) "ccc" [8, 11)"ccc" [8, 11) "ddd" [12, 15)"ddd" [12, 15)I think this can be fixed by adding an extra check at Subiterator.java ln: 127NOW    while (it.isValid() && ((start > annot.getBegin()) || (strict && annot.getEnd() > end))) {      it.moveToNext();    }POSSIBLE FIX    while (it.isValid() && ((start > annot.getBegin() && annot.getBegin() <= end) || (strict && annot.getEnd() > end))) {      it.moveToNext();    }
issueID:UIMA-3076
type:Bug
changed files:
texts:DUCC RM: retain delta for added nodes until OR confirms
We discovered that the Orchestrator is not using map differencing on incoming RM state, so RM needs to retain the map differences in each state update.  This fix insures those differences are maintained until the OR is modified.
issueID:UIMA-3077
type:Sub-task
changed files:
texts:Separate Ruta IDE plugin
Separate Ruta IDE plugin, especially non-ui and ui related implementations.
issueID:UIMA-3078
type:Task
changed files:
texts:delete InternalTools from uimaj
There's a project, uimaj-internal-tools, that is physically located within the uimaj directory, but is not part of the release.  This project has 1 very old tool that created an approximation of the current Jira-changes-report; it is not used anymore.It should not be part of the "source" release set of files, so delete it.
issueID:UIMA-3079
type:Bug
changed files:
texts:UIMA-AS should use wireFormat.maxInactivityDuration=0 for jms connection serving replies
When establishing a connection to a client, the uima-as service should use wireFormat.maxInactivityDuration=0 as a broker URL decoration to help deal with wire formation negotiation timeout problem which may happen when the process is paging or long jvm GC.
issueID:UIMA-308
type:Bug
changed files:
texts:org.apache.uima.cas.impl.AnnotationBaseImpl.toString() bombs for base annotations without sofa.

issueID:UIMA-3080
type:Bug
changed files:
texts:ant test for apache-release not working for release for eclipse update site
The test in the Eclipse update site to see if the apache release mode is true doesn't work as coded.  Change to alternate form of testing maven property ${isApacheRelease} to be true.
issueID:UIMA-3081
type:Bug
changed files:
texts:DUCC Scripting: verify RM classes before starting
Both check_ducc and start_ducc should verify the internal consistency of the scheduling classes.  start_ducc should refuse to continue on failure.  check_ducc should include a "check only" feature to help verify class file updates.With this we also can sunset verify_ducc whose entire function is now subsumed by check_ducc.
issueID:UIMA-3082
type:Bug
changed files:
texts:Adapt other Ruta projects to new ide layout
Adapt other projects to new ide layout introduced by UIMA-3077
issueID:UIMA-3084
type:Bug
changed files:
texts:DUCC RM Fix comparators
Moving to Java 1.7 from Java 1.6.  Java 1.6 was suppressing errors r.e. incorrect comparators. Java 1.7 exposes these errors, so the comparators need to be fixed: Synopsis: Updated sort behavior for Arrays and Collections may throw an IllegalArgumentException.  The comparators need to be updated to satisfy the Comparable contract.
issueID:UIMA-3085
type:Bug
changed files:
texts:SM rejects jobs with ServicesUnavailable before it has completed its restart attempts
If a job has a dependency on a service that fails to start on the 1st attempt it is often rejected with services-unavailable before the SM has completed its attempts to restart the service, which may be successful.
issueID:UIMA-3086
type:Bug
changed files:uimaj-ep-cas-editor-ide/src/main/java/org/apache/uima/caseditor/ide/DefaultCasDocumentProvider.java
texts:Manual type system selection fallback does not work
If a CAS is opened and no default type system is available the Cas Editor has a built-in fallback logic to ask the user to provide a suitable type system file.This fallback logic does not work if the Cas Editor preference CasEditorIdePreferenceConstants.CAS_EDITOR_REMEMBER_TYPESYSTEM is enabled. In this case the type system location is overwritten with null.
issueID:UIMA-3087
type:Bug
changed files:
texts:Fix NPE in Ducc Agent
There is NPE occuring in the Agent's DuccGarbageStatsCollector. The collector is meant to collect GC information via JMX. This collector is periodically running under the control of Camel route which starts immediately after the process is launched. It seems like there is a race where the route is stating ahead of the process. Modify code to start the route only when the process reports back to the agent. For some reason the route is currently starting in CommandExecutor.postExecStep() and apparently a reference to a Process object is not yet valid causing the NPE
issueID:UIMA-3088
type:Bug
changed files:
texts:DUCC job driver (JD) fails to initialize?
18 Jul 2013 16:19:21,190 12 TRACE jd.JobDriverComponent getState     N/A enter18 Jul 2013 16:19:21,190 12 DEBUG jd.JobDriverComponent getState     N/A publishing state18 Jul 2013 16:19:21,190 12 DEBUG jd.JobDriverComponent getState     N/A thread is null18 Jul 2013 16:19:21,190 12 TRACE jd.JobDriverComponent getState     N/A exit18 Jul 2013 16:19:29,508 11 TRACE jd.JobDriverComponent evaluateDispatchedJobConstraints     N/A enter18 Jul 2013 16:19:29,508 11 DEBUG jd.JobDriverComponent evaluateDispatchedJobConstraints     N/A received:OrchestratorStateEvent18 Jul 2013 16:19:29,508 11 TRACE jd.JobDriverComponent process     N/A enter18 Jul 2013 16:19:29,508 11 TRACE jd.JobDriverComponent process     360 jd-cmd:null18 Jul 2013 16:19:29,509 11 TRACE jd.JobDriverComponent process     360 jp-cmd:null18 Jul 2013 16:19:29,509 11 DEBUG jd.JobDriverComponent process     360 WaitingForDriver18 Jul 2013 16:19:29,509 11 TRACE jd.JobDriverComponent process     360 creating driver thread
issueID:UIMA-3089
type:Bug
changed files:
texts:Ducc Agent leaks file descriptors (stat and statm)
Agent opens stat and statm files for each process it launches to collect process metrics. The collection of metrics is driven by Camel route configured to trigger collection at fixed intervals. When the process terminates, the route is closed but the files remain open. On process termination close the files.
issueID:UIMA-309
type:Task
changed files:
texts:Change version number to 2.2-SNAPSHOT (post-2.1.0 release)
According to http://incubator.apache.org/guides/releasemanagement.html:SNAPSHOT and dev are commonly used suffixes. Typically these are set to the next minor version number in sequence. For example, after cutting apache-foo-1.5.6, the version would be 1.6.So based on that the version number should become 2.2-SNPASHOT even though we don't know yet whether the next release would be called 2.1.1 or 2.2.0.
issueID:UIMA-3090
type:Bug
changed files:uimaj-core/src/main/java/org/apache/uima/UimaContext.java
uimaj-core/src/main/java/org/apache/uima/impl/UimaContext_ImplBase.java
texts:remove new method in UimaContext interface giving unneeded access to external override parameters
The user-facing API (for annotation and UIMA Application programmers) has no need to change for the new External Parameter Override feature because the effect of this should be transparent to these users.  Interfaces in UIMA should remain stable where possible, from release to release, to reduce adoption effort for new releases.  Therefore, remove the new method added to the UimaContext interface to access an override parameter by its override name.  After this removal, the UimaContext will have no changes in this release (a good thing).
issueID:UIMA-3091
type:Improvement
changed files:
texts:Add tests using external resources with the CpePipeline
Add tests using external resources with the CpePipeline
issueID:UIMA-3092
type:Bug
changed files:
texts:createExternalResourceDescription does not properly set parameters on ConfigurableDataResource_impl
createExternalResourceDescription does not properly set parameters on ConfigurableDataResource_impl. The ConfigurableDataResource_impl allows regular UIMA component parameters, while other resources only accept String-valued parameters.Make a distinction and use the most suitable way for setting the parameters.
issueID:UIMA-3093
type:Bug
changed files:
texts:Specifying other classes, such as FileResourceSpecifier_impl, as resource specifiers causes IllegalClassException when binding
I'm working with ConceptMapper, which means I need to attach a FileResourceSpecifier to the external dictionary resource (it only took me most of the day to work this out).The relevant bits of code are something like this:AnalysisEngineDescription aed = AnalysisEngineFactory.createAnalysisEngineDescription(    "analysis_engine.descriptor_name");ExternalResourceDescription dictRes =     ExternalResourceFactory.createExternalResourceDescription(    "DictionaryFileName", DictionaryResource_impl.class, "someURL");FileResourceSpecifier frSpec = new FileResourceSpecifier_impl();frSpec.setFileUrl("file:testDict.xml");dictRes.setResourceSpecifier(frSpec);ExternalResourceFactory.bindExternalResource(aed,     ConceptMapper.PARAM_DICT_FILE, dictRes)This gets an IllegalClassException:org.apache.commons.lang.IllegalClassException: Unsupported resource specifier class &#91;class org.apache.uima.resource.impl.FileResourceSpecifier_impl&#93; at org.uimafit.factory.ConfigurationParameterFactory.canParameterBeSet(ConfigurationParameterFactory.java:584) at org.uimafit.factory.ExternalResourceFactory.bindNestedResources(ExternalResourceFactory.java:839)I think this is a spurious error; I've wrapper the call to .canParameterBeSet() in a try/catch, and it seems to work fine (I've now got another unrelated downstream problem, so I can't promise yet, but will update when I do know more)See also: https://code.google.com/p/uimafit/issues/detail?id=133
issueID:UIMA-3094
type:Improvement
changed files:
texts:createEngine() and createEngineDescription() factory methods
Instead of the createAggregate(), createPrimitive(), createAggregateDescription() and createPrimitiveDescription() methods, there should be more generic methods:createEngine() - should cover all current createAggregate(), createPrimitive() methods and also allow to create an aggregate AE from a variadic list of descriptorscreateEngineDescription() - should cover all createAggregateDescription(), createPrimitiveDescription() methodsSee also: https://code.google.com/p/uimafit/issues/detail?id=105Instead of removing the existing methods, they should only be deprecated for now to ease the transition.
issueID:UIMA-3095
type:Improvement
changed files:
texts:createReader() and createReaderDescription() factory methods
Bring factory methods for collection readers in line. Cf. UIMA-3094.
issueID:UIMA-3097
type:Improvement
changed files:
texts:Split JCasIterable into iterable and iterator parts
The JCasIterable is an Iterable and an Iterator at the same time. The iterator() method returns just "this". This goes against the expectation that an Iterable should return a fresh iterator when iterator() is called.JCasIterable should therefore be split. The JCasIterable should only be creatable with descriptions.Calling iterator should create a new JCasIterator which then is based on concrete reader and AE instances.
issueID:UIMA-3098
type:Improvement
changed files:
texts:UIMA-AS client should callback application identifying IP and PID of process handling GetMeta
An application may be interested in knowing where the GetMeta request is being processed. Use existing callback API to notify an application when a service sends notification that is about to process GetMeta request.
issueID:UIMA-3099
type:Bug
changed files:
texts:Remove Jetty from Ducc&#39;s svn
We should not store Jetty in the svn. The poms have already been modified to use maven capabilities to resolve dependency on Jetty.
issueID:UIMA-31
type:Bug
changed files:uimaj-tools/src/main/java/org/apache/uima/tools/docanalyzer/DocumentAnalyzer.java
uimaj-tools/src/main/java/org/apache/uima/tools/docanalyzer/PrefsMediator.java
uimaj-tools/src/main/java/org/apache/uima/tools/docanalyzer/DocumentAnalyzer.java
uimaj-tools/src/main/java/org/apache/uima/tools/docanalyzer/PrefsMediator.java
texts:Document Analyzer doesn&#39;t save character encoding in preferences
(Issue reported in SourceForge by Bruno Martinez)Every time I run the Document Analyzer the characterencoding is set to UTF-8, but I use win-1252. Ilooked at the source ofcom.ibm.uima.reference_impl.application.docanalyzer.DocumentAnalyzerand UTF-8 es hardcoded.
issueID:UIMA-310
type:Bug
changed files:uimaj-core/src/main/java/org/apache/uima/util/CasCopier.java
uimaj-core/src/main/java/org/apache/uima/util/CasCopier.java
texts:CasCopier fails on null array elements

issueID:UIMA-3100
type:Bug
changed files:
texts:DUCC RM: Defrag chooses inappropriate job to remove.
If a job declares fewer shares than the defragmentation threshold it is not considered needy, but should also not be considered for preemption during defrag.  The code was not checking for this condition, assuming that any non-needy job is a valid candidate.
issueID:UIMA-3101
type:Bug
changed files:
texts:Ducc Agent should close input stream when done processing it
In CgroupManager.getProcessOnNode() the code spawns ls command to collect processes running on a node. It consumes the output stream but never closes the stream when its finished.
issueID:UIMA-3102
type:Bug
changed files:
texts:Ducc Agent compares unrelated types
The Agent code tries to compare unrelated types as in the following example:deployedProcess.getDuccProcess().equals(ProcessState.Stopped)when it should dodeployedProcess.getDuccProcess().getProcessState().equals(ProcessState.Stopped)Fix such comparisons throughout the Agent code.
issueID:UIMA-3103
type:Bug
changed files:
texts:Fix null pointer dereference in Ducc Agent code
Fingbugs finds numerous places in the Agent's code where dereferencing null is possible. Check the code and fix as needed.
issueID:UIMA-3104
type:Bug
changed files:
texts:Ducc Agent&#39;s ManageProcess class fields should have some of its fields marked as transient
In the ManagedProces there are some fields that should be marked as transient. like ProcessLifecycleObserver, Timer, and MetricsProcessor
issueID:UIMA-3105
type:Bug
changed files:
texts:AllInOne jobs do not need the full DUCC classpath
Currently all-in-one uses a special file to get the complete DUCC classpath to add to jobs so as to emulate the normal job environment.  Creation of this file is tricky and since all-in-one jobs are run by the AllInOne class as an AP there's no need for all the DUCC sm/rm/pm/jd/or/agent/uima-as jars in the classpath ... so add only the cli jar.
issueID:UIMA-3106
type:Bug
changed files:
texts:Fix Ducc&#39;s Agent inefficient use of keySet iterator instead of entrySet iterator
There is one instance (DuccCommandExecutor.java) where the Agent code uses keySet iterator instead of entrySet iterator which is more efficient.
issueID:UIMA-3107
type:Bug
changed files:
texts:Fix Ducc&#39;s Agent inconsistent synchronization on a variable
In AgentEventListener.java there is inconsistent locking on lifecycleController field in method onDuccJobsStateEvent(). Move the assignment into synchronized(){...} block.
issueID:UIMA-3108
type:Bug
changed files:
texts:DuccJobProcessFC needs package name for imports
The build stanza in uima-ducc-common/pom.xml to create an empty package for DuccJobProcessFC.xml breaks normal eclipse project settings for the project. Just change ducc.properties to reference the complete package name.
issueID:UIMA-3109
type:Bug
changed files:
texts:DUCC webserver (WS) only shows init fails value on Jobs page when capped
Also need to show init fails value when not capped!
issueID:UIMA-311
type:Improvement
changed files:
texts:Docbook build script usability issue
If you try to run the docbook build script (or mvn assembly:assembly) from a source distribution, you get the expected file not found error because the docbook files are missing.  However, you will be left with an empty docbook/docbooks-xsl-1.70.0 directory.If you now follow the instructions on the website and obtain the docbook/zip directory, and then re-run the build script, it will fail again, with the same error message.  I think the problem is that it sees the empty docbooks-xsl-1.70.0 directory and assumes you have already successfully unzipped the docbook files, so it does not even attempt to unzip them again.The workaround is to manually delete the empty directory before re-running the build.
issueID:UIMA-3110
type:Bug
changed files:
texts:Ducc job process flow controller pointing at specific CM name
The flow controller used for jobs assembled from submitted CM+AE+CC components should look at operational properties to know if there is a CM present in the aggregate. Also, this fix includes new option to use a "workitem" feature structure to more finally control flow of the workitem CAS.
issueID:UIMA-3111
type:Bug
changed files:
texts:UIMA-AS client makes comparison of incompatible types
In BaseUIMAAsynchronousEngineCommon_impl.handleProcessReplyFromCasMultiplier() there is a comparison of incompatible types:if(casReferenceId.equals(inputCasCacheRequest) ) The inputCasCacheRequest is of type ClientRequest so the above will always fail.The fix is:if(casReferenceId.equals(inputCasCacheRequest.getCasReferenceId()) )
issueID:UIMA-3112
type:Bug
changed files:uimaj-core/src/main/java/org/apache/uima/cas/impl/CASImpl.java
uimaj-core/src/main/java/org/apache/uima/util/CasCopier.java
texts:CasCopier should not assume that CASes passed in are castable to CASImpl
Some users report that they "wrap" the CAS for various reasons.  The Wrapped CAS might implement just the CAS interface, not the CASImpl interface.  See if the CAS Copier can be fixed up to only assume the CAS methods are available.
issueID:UIMA-3113
type:Improvement
changed files:
texts:Try to reduce the CLI jars to just one
Reduce clutter by removing most of the executable CLI jars. uima-ducc-cli.jar has all that is needed.  Change CLI scripts to use this jar with the appropriate class.  Keep the -submit & -service-submit ones as are referenced in old snapshots ... perhaps they should be merely symbolic links to -cli.jar ?
issueID:UIMA-3114
type:Bug
changed files:
texts:DUCC webserver (WS) reports incorrect value of 0 for swap on Jobs page

issueID:UIMA-3115
type:Improvement
changed files:
texts:fusion of block syntax and annotation specification syntax
It would be a nice syntax improvement if block definitions and annotation specifications with curly brackets are written with the same syntax. I.e.:Document { CW NUM { -> MARK(MyAnnot) } }=BLOCK(MyBlockName) Document { CW NUM { -> MARK(MyAnnot) } }The style without the block syntax will be an anonymous block but that would be okay.
issueID:UIMA-3116
type:Task
changed files:
texts:DUCC SM: Use UIMA-AS cb on get-meta to identify responding node:pid:tid
Implement the onBeforeProcessCAS() callback to acquire the responding node, processid, and thread for the get-meta pings.  Log the information and show it in the web server as a debugging aid when the pings fail.
issueID:UIMA-3117
type:Bug
changed files:
texts:DUCC ducc-ling array overflow parsing directory path
The array used for parsing the directory path was wrongly coded with insufficient capacity, resulting in segv for long paths.  Doh.
issueID:UIMA-3119
type:Bug
changed files:
texts:Problems when launching Ruta scripts in Workbench with UIMA 2.4.1
Problems when launching Ruta scripts in Workbench with UIMA 2.4.1.installed Ruta 2.0.1, created project, run simple script - FAILEDjava.lang.NoClassDefFoundError: org/apache/uima/util/ProcessTraceI tested the uimaj update site with current Ruta trunk in developmentmode: works but causes different problems. Here, the vm works, but ifthe usage of a new one is deactivated, then again a class is not found:java.lang.NoClassDefFoundError:org/apache/uima/jcas/tcas/DocumentAnnotation_TypeI should add a note that ruta-2.0.1 does not work with uimaj-2.4.1 andwill fix the problem for the next ruta release.
issueID:UIMA-312
type:Bug
changed files:
texts:assembly of docs/html missing the css dirs and file
RC1: the bin : docs/html/<book-name>/ directories are missing the css subdirectory and its contents.  Result is that no CSS is being used when displaying.  This should have the same layout as the docbook build creates in the target/ directories (e.g., there's a css/ directory in each book-name directory, with a css file in it).
issueID:UIMA-3120
type:Task
changed files:
texts:Relax restriction of Ruta plugin dependency to DLTK
Relax the restriction of Ruta plugin dependency to DLTK core framework. version 5.0.0 is currently excluded, but Eclipse 4.3 already ships DLTK 5.0.0.
issueID:UIMA-3121
type:Bug
changed files:uimaj-examples/src/main/java/org/apache/uima/examples/cpe/FileSystemCollectionReader.java
texts:Remove DocumentAnnotation jar from Eclipse uimaj runtime
The build for uimaj-ep-runtime Eclipse plugin was made more conventional -in that we let Maven dependencies guide what gets put in.  The DocumentAnnotation jar (which has JCas cover classes for the "default" (unaugmented by type merging) version of the DocumentAnnotation CAS Type, is pulled in via a transitive dependency from the uimaj-tools project.  Fix this project to not depend on this Jar, which will then have the effect of dropping the inclusion of the DocumentAnnotation jar from the runtime plugin.
issueID:UIMA-3122
type:Bug
changed files:
texts:Javadocs created using IBM Java 7 showing white on white navigation bar items (thus invisible)
User reports: "navList items (main top items like "Overview", "Package", "Class", ...) are in white font due to .topNav style but the background is also white.  So the text is not visible."   I confirmed this (in Chrome browser).
issueID:UIMA-3123
type:Improvement
changed files:uimaj-core/src/main/java/org/apache/uima/resource/metadata/impl/ResourceMetaData_impl.java
uimaj-core/src/main/java/org/apache/uima/resource/metadata/impl/ResourceMetaData_impl.java
uimaj-core/src/main/java/org/apache/uima/resource/metadata/impl/ResourceMetaData_impl.java
uimaj-core/src/main/java/org/apache/uima/resource/impl/ConfigurationManagerImplBase.java
uimaj-core/src/main/java/org/apache/uima/resource/impl/ConfigurationManager_impl.java
uimaj-core/src/main/java/org/apache/uima/resource/metadata/impl/ResourceMetaData_impl.java
texts:2.4.1 release reports errors and fails where 2.4.0 was silent
A user tested some "Pear"s (packaged UIMA pipelines) with 2.4.1 and found they failed to validate, whereas they were fine in 2.4.0.Traced this to some new code in ConfigurationManager_impl, which added some logging for configuration parameter settings, if you specified the log level to be CONFIG.  The process of generating the information that went into the log message was being done, even if the CONFIG level was not enabled.  This information included a printed representation of the parameter value.  Because of this, the code access the parameter settings.  The old code never did this, I think.The access, if the value was an array (multiple-values-allowed == true), attempted to convert the setting value to an array.  This failed in the PEAR example, because the PEAR configuration had an error - the setting was unused - so it had a value of <string/> whereas it should have had a value of <array/>.  While this could be fixed in the PEAR, from the users point of view, this may be more or less difficult - they may just be consumers / users of PEAR files developed by others, and not know how to fix this, or to get the original supplier of the PEAR to do so.  We should not throw an exception in this case, but do something more reasonable - since this occurs in the logging message, we should report this in the log message, instead.Furthermore, for efficiency, we should avoid doing all log message work unless the log level would allow logging at the CONFIG level, here.
issueID:UIMA-3124
type:Improvement
changed files:uimaj-core/src/main/java/org/apache/uima/cas/impl/Serialization.java
texts:Serialization javadocs missing
Although serialization was documented and Javadocs were updated, the Serialization class was omitted from the Javadoc generation, and therefore, doesn't show up in the API Javadocs.
issueID:UIMA-3125
type:Bug
changed files:
texts:DUCC job driver (JD) must gracefully handle Thowable from UIMA-AS client sendAndReceive

issueID:UIMA-3127
type:Improvement
changed files:
texts:Improve Javadoc html generation to have consistent line endings
The current Javadoc generation results in Javadoc html files which have mixed eol style on Windows platform.  Most are the windows cr lf style, but many are just the lf style.  This used to make no difference; however, now, with the new method of using SVN commits to add these to the release spot, SVN fails when the file has mixed eol styles, and the (default) for new files being added for files of type ".html" is to add the svn property eol-style:native.The way this used to work was:  (1) files were generated, having mixed eol styles (on windows).  (2) After the vote passed, they were "uploaded" to people.a.o; the upload tool converted the cr lf to just lf upon upload.Add a build step after the javadoc generation which runs the ant fixcrlf task on the .html files.
issueID:UIMA-3128
type:Bug
changed files:
texts:DUCC job driver (JD) may get NPE when logging an exception
29 Jul 2013 16:37:06,296 47 INFO jd.JobDriver uimaAsClientInitialize 1087 process_per_item_time_max:1 29 Jul 2013 16:37:06,483 56 ERROR client.WorkItemListener onBeforeProcessCAS N/A java.lang.NullPointerException at org.apache.uima.ducc.jd.client.WorkItemListener.onBeforeProcessCASHandler(WorkItemListener.java:135) at org.apache.uima.ducc.jd.client.WorkItemListener.onBeforeProcessCAS(WorkItemListener.java:93) at org.apache.uima.adapter.jms.client.BaseUIMAAsynchronousEngineCommon_impl.onBeforeProcessCAS(BaseUIMAAsynchronousEngineCommon_impl.java:330) at org.apache.uima.adapter.jms.client.BaseUIMAAsynchronousEngineCommon_impl.handleServiceInfo(BaseUIMAAsynchronousEngineCommon_impl.java:1333) at org.apache.uima.adapter.jms.client.BaseUIMAAsynchronousEngineCommon_impl$2.run(BaseUIMAAsynchronousEngineCommon_impl.java:2006) at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1156) at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:626) at java.lang.Thread.run(Thread.java:780) 29 Jul 2013 16:37:06,709 47 INFO jd.JobDriver process 1087 jd.step:process 29 Jul 2013 16:37:06,724 57 INFO jd.JobDriver start 1087 N/A seqNo:1 wiId:20000 1 2304 0.0 1087.output 29 Jul 2013 16:37:06,739 58 INFO jd.JobDriver start 1087 N/A seqNo:2 wiId:20000 2 2304 0.0 1087.output
issueID:UIMA-3129
type:Bug
changed files:
texts:DUCC RM: Reenable purge bit
We had disabled RM's 'purge' bit because of a race with the Agent.  Changes to the agent eliminate the race.The 'purge' bit is set when a machine misses some number of heartbeats. RM considers the node "down" and evict the shares, similar to preemption.  Without the 'purge' bit the OR will wait for confirmation from agents that the processes are stopped, but if the agent is not responding, the confirmation may never come and the processes will be "stuck".The 'purge' bit is used to tell OR that the shares are being evicted because of suspected agent death, so OR can clean up right away and not look for confirmation.
issueID:UIMA-313
type:Bug
changed files:
texts:Flow Controller example Analysis Engine does not work properly
The example MeetingDetectorTAE_Whiteboard, which uses a custom flow controller, fails to find any Meeting annotations.  It used to work, something seems to have changed.  This could be related to recent work on the indexes, but I'm not sure.  I will investigate.
issueID:UIMA-3130
type:Bug
changed files:
texts:DUCC orchestrator (OR) should insure that Job end time is recorded when advanced to Completing state

issueID:UIMA-3131
type:Bug
changed files:
texts:Goal "enhance" of uimaFIT Maven plugin fails on Windows
Goal "enhance" of uimaFIT Maven plugin fails on Windows:Execution default of goal org.apache.uima:uimafit-maven-plugin:2.0.0-SNAPSHOT:enhance failed: A required class was missing while executing org.apache.uima:uimafit-maven-plugin:2.0.0-SNAPSHOT:enhance: de\tudarmstadt\ukp\dkpro\core\api\anomaly\AnomalyApiConstants (wrong name: de/tudarmstadt/ukp/dkpro/core/api/anomaly/AnomalyApiConstants)Note the backslashes.
issueID:UIMA-3133
type:Bug
changed files:uimaj-ep-launcher/src/main/java/org/apache/uima/ep_launcher/AnalysisEngineLaunchConfigurationDelegate.java
uimaj-ep-launcher/src/main/java/org/apache/uima/ep_launcher/AnalysisEngineLaunchConfigurationDelegate.java
texts:Eclipse launcher plugin fails if uimaj-core not on project classpath
The Launcher launches a small Java class which needs the uimaj-core classes to run.  The Launcher includes the project's classpath, so if uimaj-core is on that classpath, all is well.  But there's no requirement that uimaj-core be on the project's classpath (for example, imagine a project for an aggregate, that just contains xml descriptors, etc.).  In that case, the failure happens.The launcher is attempting to handle this by suffixing the uimaj-ep-runtime jar to the launched classpath.  That worked in 2.4.0 and earlier, because that plugin jar had all the uimaj-core classes.  However, as of 2.4.1, we changed the packaging of this, and the uimaj-ep-runtime is now set up to have embedded jar files, with an OSGi Bundle-Classpath which identifies these Jars.  That doesn't help this Jar's usage as just a plain (non-OSGi) Jar.  Reported by Peter Klügl who also discovered the fix in project Ruta.  The fix here is slightly faster - only the uimaj-core jar is included (that's all the launcher class needs).
issueID:UIMA-3134
type:Improvement
changed files:uimaj-ep-launcher/src/main/java/org/apache/uima/ep_launcher/AnalysisEngineLaunchConfigurationDelegate.java
uimaj-ep-launcher/src/main/java/org/apache/uima/ep_launcher/RemoteLauncher.java
uimaj-ep-launcher/src/main/java/org/apache/uima/ep_launcher/RemoteLauncher.java
uimaj-ep-launcher/src/main/java/org/apache/uima/ep_launcher/ui/AnalysisEngineTabGroup.java
texts:Eclipse UIMA launcher missing arguments tab
The Eclipse Launcher plugin for UIMA annotators should have a way to add parameters to the launch, similar to normal Java launcher arguments page.  For instance, it may be needed to increase the maximum heap size.
issueID:UIMA-3136
type:Improvement
changed files:
texts:Improve classpath of Ruta launcher
Improve classpath of the Ruta launcher: include only jars that are needed.
issueID:UIMA-3137
type:Improvement
changed files:
texts:Cleanup Ruta launch configuration tabs
Cleanup Ruta launch configuration tabs: Add maybe one for vm arguments and remove those, which are not needed or supported (e.g., script arguments).
issueID:UIMA-3138
type:Bug
changed files:
texts:DUCC RM Defrag ignores nonpreemptable jobs
The defragmentation code is not considering needy unpreemptable jobs: FIXED and RESERVE.  These jobs need to be considered, and when cleaning nodes for reservations, entire nodes must be cleaned.
issueID:UIMA-314
type:Bug
changed files:
texts:MeetingFinderCPE_Managed.xml doesn&#39;t run on Linux
This is because managed-mode CPEs launch separate processes which require classpath settings appropriate to the platform on which they run.  The example descriptor uses semicolons as the path separator and so is Windows-specific.Easiest fix is to create two separate example descriptors, one for Windows and one for Linux.
issueID:UIMA-3140
type:Bug
changed files:
texts:CASDumpWriter may close stdout
CASDumpWriter may close stdout. When writing to stdout, it should be protected from being closed.
issueID:UIMA-3142
type:Improvement
changed files:
texts:CASImpl.reinit doesn&#39;t properly check magic number
Binary CASes have a magic number at the beginning of the file/stream: "UIMA". Currently, this information is only used to check the byte order (first byte is checked for being U).CASImpl should also check if the other bytes of the magic number are correct and if not, it should throw an exception.
issueID:UIMA-3143
type:Bug
changed files:uimaj-core/src/main/java/org/apache/uima/resource/Resource_ImplBase.java
texts:ResourceImpl_Base does not pass on ResourceManager to external resources
The Resource_ImplBase does not pass on the resource manager to external resources. Hence, external resources do not know about the resource manager which is responsible from them. Consequently, shared resources are unable to locate other shared resources.
issueID:UIMA-3144
type:Bug
changed files:
texts:Rename CASDumpWriter to CasDumpWriter
Rename CASDumpWriter to CasDumpWriter.
issueID:UIMA-3145
type:Task
changed files:
texts:Rename artifact "uimafit" to "uimafit-core"
Rename artifact "uimafit" to "uimafit-core" to bring uimaFIT in line with the other UIMA sub-projects. Although I wanted to keep the old name, it is probably better to change now - before the first Apache release - than later.
issueID:UIMA-3147
type:Bug
changed files:
texts:Invisible wildcard match in Ruta should not be applied
An invisible wildcard match in Ruta should not be applied. Something like the following that starts to match on the last token:PERIOD #{->T1};
issueID:UIMA-3148
type:Improvement
changed files:
texts:Confusing ducc-mon states
The summary page for DUCC job 68181 was confusing to me &#8211; it says Error but it doesn't list any init fails, run fails, or any error jobs. The tooltip for "Error" seems to imply that everything went fine. In the job details, I can see that one JP failed during init. I think I've seen this issue happen twice now (I forget the other job ID) &#8211; any ideas? (just on the UI aspect of it)=====Some options are:1. Forget about the Croaked JP, just say all was well on Jobs page.2. Don't say "Error" on jobs page, but something else, perhaps: Warning?3. Say Error/Warning on jobs page, but also say on hover: normal completion of all work items, but one or more JPs failed.4. other?=====I like option 3 the most with "Warning" and the tooltip since that conveys the most information. I was confused that JED was still running tasks but if it had said "Warning", that probably would have clarified it for me.
issueID:UIMA-3149
type:Task
changed files:
texts:Add DUCC sample app for processing text input
The text sample application shows an approach to scaling out text processing on DUCC.This application will be used to demonstrate the preferred approach to UIMA pipeline scale out as a DUCC Job. It will also be used to demonstrate a step-by-step for Job development and debug.
issueID:UIMA-315
type:Bug
changed files:uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/ui/AggregateSection.java
texts:CDE - hover in aggregate page supposed to show description - but isn&#39;t
This has been broken but unnoticed for some time - even before coming to Apache.
issueID:UIMA-3150
type:Bug
changed files:
texts:DuccMonitor uses thread-unsafe OptionBuilder
DuccMonitor is using the thread-unsafe OptionBuilder so occasionally get a false IllegalArgumentException when jobs submitted in parallel
issueID:UIMA-3151
type:Bug
changed files:
texts:Problem with transitive mixin dependencies in Ruta
There is a problem with transitive mixin dependencies in Ruta. Example:RutaProject1-> dependency to RutaProject2RutaProject2-> dependency to MavenProjectMavenProject-> dependency to AE implementationsIf a script in RutaProject1 effectively calls the external AE in the local maven repository, then an engine descriptor cannot be resolved.
issueID:UIMA-3153
type:Bug
changed files:
texts:Ducc Agent should start collecting rogue processes only after it receives initial Ducc state update
Agent starts collecting rogue processes immediately after launch and possibly before receiving Ducc state update. This may lead to a problem of falsely identifying a rogue process belonging to a user with existing reservation. On agent/system bounce, such processes are marked as rogues and subsequently killed. Modify agent to begin collecting user processes and detecting rogues only after a ducc state update is processed. When the state update arrives, the agent receives all reservations and will have necessarily information to detect true rogues on a node.
issueID:UIMA-3154
type:Bug
changed files:
texts:Ducc PM should process OR state update if the JD node has been assigned
The PM should ignore OR state update until the JD is assigned by the OR.
issueID:UIMA-3155
type:Improvement
changed files:
texts:UIMA-AS should support using timer for each outstanding CAS
Currently, UIMA-AS uses a single timer manage CAS timeouts. Extend the code to support per CAS timer. This would only be enabled on demand via UIMA-AS Client property included in a Map that is used to initialize the client. The default will remains to be a single timer for all outstanding CASes.
issueID:UIMA-3156
type:Task
changed files:
texts:update uima-as poms for 2.4.1 release
UIMA-as parent pom - depend on latest uima-wide parent; change uima sdk dependency to 2.4.1 (no snapshot). (Later, after 2.4.2 release, change to that). add fixup for javadoc line ends until v 7 of parent pom released
issueID:UIMA-3157
type:Bug
changed files:
texts:DUCC webserver (WS) missing last column for display of System Classes (scrollable only)

issueID:UIMA-3158
type:Bug
changed files:
texts:DUCC webserver (WS) new tab flickers?
Under FF, launching some DUCC pages via new tab results in flickering tab until tab is visited.See http://forums.mozillazine.org/viewtopic.php?f=25&t=2661941
issueID:UIMA-3159
type:Bug
changed files:
texts:Ducc should not attempt overriding params for delegates specified in pear file
Ducc UimaUtils.addOverrides() fails with ClassCastException when trying to do param overrides for delegates specified in a pear file. Since param overrides for delegates in pear file are not supported modified code to skip override logic if a specifier is of type PearSpecifier
issueID:UIMA-316
type:Bug
changed files:uimaj-tools/src/main/java/org/apache/uima/tools/cvd/MainFrame.java
texts:CVD does not display auto-indexes correctly
The fix is just two lines.  If we need to have another pre-vote release level for 2.1, I'll put it in.  Otherwise, it'll go into the next release.
issueID:UIMA-3160
type:Bug
changed files:
texts:UIMA-AS not allowing concurrent processing of CASes in async aggregate
For deployments consisting of async aggregate, the uima-as does not allow concurrent processing of input CASes. In this design, the thread servicing an input queue is intentionally blocked until the input CAS is fully processed. Only than, the thread is allowed to dequeue the next CAS. This design was motivated by the desire to enforce fair load balancing where each service/process takes as many CASes as it can process without blocking waiting for a free instance of a CAS (from service CasPool). The motivation is still valid, but it looks like the implementation of the idea is wrong. Suggestion is to force the service thread to fetch a CAS before trying to dequeue a CAS. This design ensures that the service only takes as many CASes from a queue as it is capable of processing.
issueID:UIMA-3161
type:Bug
changed files:
texts:DUCC orchestrator (OR) should redrive JD node request forever
For release 1 we will simply redrive forever.  For the future we may wish to do something smarter?
issueID:UIMA-3162
type:Improvement
changed files:
texts:DUCC webserver (WS) size column on Jobs and Reservations pages should be integer (no decimal part)

issueID:UIMA-3163
type:Bug
changed files:
texts:DUCC webserver (WS) Run Fails count & Lost
1. Run Fails should be a count of Croaks only2. Lost should not be counted as error, and should be retried3. What failures get counted towards killing job when error threshhold is exceededFor a running Job, there seem to be 2 problems (with respect to WS "guessing"). All seems well once job is completed.4. JP Time Run is too big?It seems that run start is incorrectly set to the same value as initialization start, when if fact it should be set to the same as initialization end!degenaro@bluej62:/home/ducc/ducc_runtime/logs$ grep copyTime or.log* | grep 5219or.log:21 Aug 2013 13:58:26,017  INFO OR.ProcessAccounting - copyTimeInit   74525    5219 initialization start:2013.08.21 13:45:24 Wedor.log:21 Aug 2013 13:58:26,017  INFO OR.ProcessAccounting - copyTimeInit   74525    5219 initialization end:2013.08.21 13:58:14 Wedor.log:21 Aug 2013 13:58:26,017  INFO OR.ProcessAccounting - copyTimeRun   74525    5219 run start:2013.08.21 13:45:24 Wedor.log:21 Aug 2013 14:11:25,930  INFO OR.ProcessAccounting - copyTimeRun   74525    5219 run start:2013.08.21 13:45:24 Wedor.log:21 Aug 2013 14:11:25,930  INFO OR.ProcessAccounting - copyTimeRun   74525    5219 run end:2013.08.21 14:11:05 Wedor.log.1:21 Aug 2013 13:45:25,934  INFO OR.ProcessAccounting - copyTimeInit   74525    5219 initialization start:2013.08.21 13:45:24 WedFor JP in progress, insure that TimeWindowRun start/end values are initialized to TimeWindowInit end value.Code delivered, part 4 resolved.5. JP %CPU is too small (0?)See Jira 3164, part 5 resloved.
issueID:UIMA-3164
type:Question
changed files:
texts:DUCC webserver (WS) JP %CPU
1. be sure %CPU does not contain initialization time2. why is %CPU not accurate...normalization?
issueID:UIMA-3165
type:Bug
changed files:
texts:DUCC webserver (WS) Zero work items
1. put message in JD log2. JP log hover over reason is wrongJob # 68202
issueID:UIMA-3166
type:Improvement
changed files:
texts:DUCC command line interface (CLI) All-In-One with Zero work items
All-in-one needs to check for 0 work items early, and if so give message and finish early -> don't bother initializing!
issueID:UIMA-3168
type:Sub-task
changed files:
texts:Don&#39;t link sources in JavaDoc
Marshall Schor says:Here's some remarks on the Javadocs; I don't see this as a release issue though.I see the conventional javadoc configuration was overridden by uimaFIT in thatit turned on the flag "linksource".The convention in other UIMA projects has been to try to separate user-facingClasses from internal implementation things, and have the Javadocs be only foruser things.  To that end, the normal convention also has the javadocs exclude"private" methods.Turning on the linksource adds the sources to the Javadocs, and inserts links tothe sources from the corresponding javadoc classes and methods.Although this is convenient, and may be desired, it has the disadvantages ofputting the source tree (at least the part that the Javadocs document) into thejavadoc html tree, as html files.  This of course adds lots of files to the apidoc tree, and is a duplication of the source available via svn.  (For instance,the source can be obtained at an html link:http://svn.apache.org/viewvc/uima/sandbox/uimafit/tags/uimafit-2.0.0-rc1/ etc.)The other potential downside (which may be of no consequence in the case ofuimaFIT) is that adding the source, of course, exposes all the private internalstuff.  I agree this is only an issue if the goal of the Javadocs is to "filter"the info into user-facing and internal details, and omit the internal details(which may change more frequently than the user-facing stuff).-Marshall
issueID:UIMA-3169
type:Sub-task
changed files:
texts:Fix JavaDoc warnings
There are plenty of warnings when JavaDoc is built.
issueID:UIMA-317
type:Bug
changed files:
texts:MeetingFinderCPE_Managed.xml is duplicate of MeetingFinderCPE_Managed_Windows.xml
I split MeetingFinderCPE_Managed.xml into separate vesions for Windows and Linux.  But I forgot to delete the original.  So it is still there, and is an exact duplicate of MeetingFinderCPE_Managed_Windows.xml.
issueID:UIMA-3170
type:Sub-task
changed files:
texts:Switch to UIMA-style project structure
Given how the UIMA parent POM sets up the build process, there is no way to resist the "UIMA-style" of having different structures for project inheritance and aggregation. Root-level POM should be aggregator and dist builds (containing dependencies on all modules).General configuration should be moved to "uimafit-parent" module from which all other modules inherit.
issueID:UIMA-3171
type:Task
changed files:
texts:Improve documentation
Document more of the uimaFIT features.
issueID:UIMA-3172
type:Sub-task
changed files:
texts:Document uimaFIT maven plugin
Document uimafit maven plugin.
issueID:UIMA-3173
type:Sub-task
changed files:
texts:Document JCasUtil/CasUtil methods
Document JCasUtil/CasUtil methods. Overview over the functions should be sufficient. Details are in the Java API Docs.
issueID:UIMA-3174
type:Sub-task
changed files:
texts:Remove unnecessary plugin configurations
Marshall Schor notes:There are spots in this pom which are overriding a parent (uima, apache, ormaven-central), but maybe don't need to, or shouldn't?One example - there's a long list of versions in the pluginDependencies, one ofwhich specifies the javadoc plugin 2.9.  The parent-pom in v 6 has updated thisto 2.9.1, in order to pick up a fix which corrects a security hole in javadocgeneration we were asked to implement in all our javadocs.The general principle in the "local" parent pom is to keep it as empty aspossible, only overriding things in the uima-wide parent pom (or its parent,etc.) for a reason.  This way, improvements/corrections done in these poms getproperly promulgated to all builds.  The intent, when we update the uima-wideparent-pom, is to collect from all the project parent-poms anything they'vediscovered needs doing, that is general (beyond just that project), and move itto the parent, and then delete it from the sub-parents.For instance, at the moment, there's a change in v 7 (not yet released) of theuima-wide parent pom, which runs an ant step when doing the apache-releaseprofile (only) that looks for generated javadocs and if it finds them (in the"conventional place", it runs the ant fixcrlf task against the .html files,because (1) javadoc produces inconsistent line endings, and (2) because we now"publish" these by commiting them to SVN, the commit fails if there areinconsistent line endings (and you have specified eol-style:native, which wehave by default for .html files).So, I would expect to see this in your (local) parent pom (since v7 isn'treleased yet), but almost none of the other stuff.
issueID:UIMA-3175
type:Bug
changed files:
texts:Inconsistent line endings
There are inconsistent line endings. E.g even within the uimafit-core CHANGES file, there is a mix of Windows and Unix styles.
issueID:UIMA-3176
type:Bug
changed files:
texts:uimaFIT depends on buggy 2.4.1 uima core release
uimaFIT depends on buggy 2.4.1 uima core release. Better upgrade to 2.4.2. Knowing that 2.4.1 is buggy is probably a sufficiently good reason to depend directly on 2.4.2 even though uimaFIT strictly speaking currently only requires 2.4.1.
issueID:UIMA-3177
type:Sub-task
changed files:
texts:Fix Maven warnings
Address warnings produced by Maven, e.g. non-optimal dependency declarations.
issueID:UIMA-3178
type:Bug
changed files:
texts:JCasIterable closes and destroys reader - causes problems
JCasIterable closes and destroys reader. The default implementation of destroy() in CollectionReader_ImplBase also calls close(). That means the reader is closed twice, which can cause problems with readers.It appears to be better to call only destroy().
issueID:UIMA-3179
type:Bug
changed files:
texts:JCasIterable destroys reader on hasNext()
JCasIterable destroys reader on hasNext().
issueID:UIMA-318
type:Improvement
changed files:
texts:Broken hyperlinks to html docbooks in Release_Notes
The RELEASE_NOTES.html contains broken links to the html versions of docbooks.  The links typically say:.../html/references/index.html  when they need to say:.../html/references/references.htmlThe non HTML versions of the RELEASE_NOTES also are missing part of the ref.  They say things like(docs/html/references) which should be:(docs/html/references/references.html or docs/html/references/references.pdf).
issueID:UIMA-3180
type:Bug
changed files:
texts:JCasIterator should return false on hasNext() after it has been (auto)destroyed
JCasIterator should return false on hasNext() after it has been (auto)destroyed. Otherwise it may call hasNext() on the underlying CollectionReader after that has been destroyed and the contract says that the reader must not be used anymore after it has been closed/destroyed.
issueID:UIMA-3181
type:Bug
changed files:
texts:Ruta ViewWriter does not work correctly when called by Ruta script
Ruta ViewWriter does nto work correctly when called by Ruta script.
issueID:UIMA-3182
type:Improvement
changed files:
texts:ruta: when a result from the queryview is selected it should throw a selectionevent
It is nice to search for desired annotations with the query view, but it is hard to find the same file which was found in the projectexplorer to delete or move the file. It would be very handy if the queryview could inform other views about a selected file or annotation.
issueID:UIMA-3184
type:New Feature
changed files:
texts:Ruta: support execution of sofa-unaware analysis engines on different views within Ruta scripts
Support execution of sofa-unaware analysis engines on different views within Ruta scripts. Add a parameter to the EXEC action that specifies the view on which the given analysis engine should be applied on.
issueID:UIMA-3185
type:Bug
changed files:
texts:AllInOne parse of DD for import descriptor file broken

issueID:UIMA-3187
type:Bug
changed files:
texts:Add all bundles with language extension to classpath of launch delegate in Ruta Workbench
Language extensions are not resolved in new vm: Add all bundles with language extension to the classpath of launch delegates in Ruta Workbench.
issueID:UIMA-3188
type:Bug
changed files:
texts:Traditional logging methods on ExtendedLogger report wrong class
Traditional logging methods on ExtendedLogger report wrong class, namely the ExtendedLogger. They should report the class calling the logger.
issueID:UIMA-3189
type:Bug
changed files:
texts:ruta Workbench does not work with recent UIMA tools plugins
Versions 2.4.2 and 2.4.1 of the UIMA tools produce the following stack trace when trying to run a ruta script:Exception in thread "main" java.lang.NoClassDefFoundError: org/apache/uima/util/ProcessTrace at java.lang.Class.getDeclaredMethods0(Native Method) at java.lang.Class.privateGetDeclaredMethods(Class.java:2521) at java.lang.Class.getMethod0(Class.java:2764) at java.lang.Class.getMethod(Class.java:1653) at sun.launcher.LauncherHelper.getMainMethod(LauncherHelper.java:494) at sun.launcher.LauncherHelper.checkAndLoadMain(LauncherHelper.java:486)Caused by: java.lang.ClassNotFoundException: org.apache.uima.util.ProcessTrace at java.net.URLClassLoader$1.run(URLClassLoader.java:366) at java.net.URLClassLoader$1.run(URLClassLoader.java:355) at java.security.AccessController.doPrivileged(Native Method) at java.net.URLClassLoader.findClass(URLClassLoader.java:354) at java.lang.ClassLoader.loadClass(ClassLoader.java:424) at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:308) at java.lang.ClassLoader.loadClass(ClassLoader.java:357) ... 6 moreInstalling version 2.4.0 of the UIMA tools for Eclipse fixes this problem (need to uninstall the existing version, then install again after unchecking "show only latest version")
issueID:UIMA-3190
type:Bug
changed files:
texts:Ruta Query view does not work with language extensions
Ruta Query view does not work with language extensions. The extensions are not set in the dummy descriptor which is used to apply the query rules.
issueID:UIMA-3191
type:Bug
changed files:
texts:Quantifier on composed rule is ignored
I wrote the following script and expected it to match strings like "A1A-1A1-A1A" :DECLARE Id;Document{->RETAINTYPE(WS)};(NUM | CW)+{-> MARK(Id, 1, 2)} (SPECIAL{REGEXP("-")} (NUM | CW)+)+;Document{->FILTERTYPE(WS)};When I ran it through the workbench (version 2.0.1), all matches contained at most one dash like if the last PLUS-GREEDY is ignored.I also tried to run a similar script with the trunk version of the workbench and had similar results.
issueID:UIMA-3192
type:Task
changed files:
texts:Move author attribution from NOTICE to README file
Per suggestion by Marshal and discussion on uimaFIT developers list &#91;1&#93;, author attribution is removed from NOTICE files to keep them minimal. Institutional copyrights remain in the NOTICE files. &#91;1&#93; https://groups.google.com/d/msg/uimafit-developers/KysN1TsgFvE/qO_aOUKL-ccJ
issueID:UIMA-3193
type:Bug
changed files:
texts:DUCC job driver (JD) java.lang.NullPointerException at org.apache.uima.ducc.jd.JobDriverComponent.process(JobDriverComponent.java:194)
JD should not try to export a JobProcessData map unless there is one!
issueID:UIMA-3194
type:Improvement
changed files:
texts:WORDTABLE cannot be loaded from the classpath
While it is possible to load WORDLIST from the classpath, WORDTABLE can only be loaded from the filesystem.Loading tables from the classpath will make it possible to distribute them in .jar via maven dependencies.
issueID:UIMA-3195
type:Bug
changed files:
texts:Fix issues with binary release packaging
Fix issues with binary release packaging
issueID:UIMA-3196
type:Bug
changed files:
texts:Fix issues with source release packaging
Fix issues with source release packaging
issueID:UIMA-3197
type:Sub-task
changed files:
texts:"wiki" folder should not be included in source release
"wiki" folder should not be included in source release. In fact, it should be removed from svn/moved to some attic location, e.g. to a tag.
issueID:UIMA-3199
type:Sub-task
changed files:
texts:No "issues fixed" Jira report in binary distribution
No "issues fixed" Jira report in binary distribution
issueID:UIMA-32
type:Bug
changed files:
texts:CPE GUI doesn&#39;t parse ${CPM_HOME} variable
(Issue reported on SourceForge)As stated in pp. 19.3 of theUIMA_SDK_Users_Guide_Reference.pdf, we can use${CPM_HOME} system variable inside <include> url of theCPE descriptor. However, this does not work inpractice. CpeGUI does not parse that variable.Follow-up:Sender: alallyThere are currently many things in the CPE Descriptor that are not supported in the CPE GUI.  The ${CPM_HOME} variable will work if you run your CPE descriptor using the SimpleRunCPE example.  For now the CPE GUI is meant to help users get started with simple examples only.It would be a good idea for us to rework the CPE GUI so that it does support the full range of features allowed in CPE descriptors.
issueID:UIMA-320
type:Bug
changed files:uimaj-tools/src/main/java/org/apache/uima/tools/cvd/MainFrame.java
texts:add LICENSE and NOTICE files to META-INF folder of a jar
change uimaj pom.xml and add LICENSE and NOTICE files to META-INF folder of a jar
issueID:UIMA-3200
type:Sub-task
changed files:
texts:Jira change report not in root folder of distribution
Jira change report not in root folder of distribution
issueID:UIMA-3201
type:Bug
changed files:
texts:Test files for different line-ending styles use svn:native
Some test files might or might not need to have the svn eol-style setdifferently than "native", if the tests depend on the line end style being acertain way.  I don't know if this is an issue, but did see one file in exampleswith file time ".pos" that looked like test data.suspicious:  There are 2 files in uimafit-core, in src/test/resources/data, onecalled unix-newlines.txt and the other called windows-newlines.txt.Both of these files have the svn flag eol-style:native set.If these are meant to be tests for different kinds of newlines, that makes thesefail.  The source-release.zip has copies of these with the same newlines(because the source release was built from an svn checkout).(assuming this needs fixing While fixing this, please see if there are anyother test data where the kind of new line is important, and fix those too.
issueID:UIMA-3202
type:Task
changed files:
texts:Fix documentation issues
minor pdf formatting issue - program listing lines too long:pg: 9, 14, 19, 20, 30, 31,Also, pdf formatting seems off for literals included in section headers - thefont is too small.The publication date is missing on pg 2 (I notice this has gone missing in theuima-sdk 2.4.2 too)minor updates for the docbook:(English grammar) change "allows to xxx" to allows xxx+ing.e.g. allows to automatically augment compiled classes: allows automaticallyaugmenting compiled classesallows to compose : allows composingallows to access : allows accessing
issueID:UIMA-3203
type:Bug
changed files:
texts:Fix branding
The first use of the word UIMA in a significant document should be written witha preceeding "Apache" and a following ™ sign (that's the trademark sign). Subsequent uses can just write UIMA.A significant doc would be things like the docbook (it's missing).In docbook for UIMA-AS, the "TM" is attached to the top of the html /pdf file, where it says "Written and maintained by the Apache UIMA (tm)Development Community".  This is at the top in the html, but comes right afterthe title in the PDF.trademarks@ thinks that Apache uimaFIT(tm) (on first use) is fine.Check README too.
issueID:UIMA-3204
type:Sub-task
changed files:
texts:Add release notes to README file
Some information normally present in a binary packaging is missing - thingsnormally present in release notes.  These include a link to the issues-fixedlist (which is also missing in the binary distribution), as well as a high levelsummary of the release (e.g., what's new, etc.).
issueID:UIMA-3205
type:Sub-task
changed files:
texts:Fix groupId in README
README has the wrong "group-id" for maven for uimaFIT
issueID:UIMA-3206
type:Sub-task
changed files:
texts:Minimize RAT exceptions
The RAT checking is excluding things that probably ought to be checked, and insome cases isn't needed (because the artifact in question has the license header).Generally, RAT exclusions are for files of test data that can't reasonably havea header, or for generated files, or for small bits of data that has no IP value.Some details:in uimafit-core: src/main/resources/*/ only has 1 file, and that file has thelicense header, so I think this can be removed.in uimafit-spring: src/main/resources/*/ but there are no files insrc/main/resourcesin uimafit-spring: src/test/resources/*/ but there are no files insrc/test/resourcesin uimafit-spring: apidocs/package-list - this directory is not present?in uimafit-maven-plugin: wiki/*/ - this directory is not present?in Legacy support: src/main/resources/*/ - directory not presentin legacy support: src/test/java/org/apache/uima/fit/type/*/  there's no suchdirectory .../fit/type/...two more:  uimafit-cpe and uimafit-docbook exclude non-existent wikiI probably didn't cover everything; in general, it's important to be prettyminimal with RAT exclusions to avoid missing checking something that should bechecked -Marshall
issueID:UIMA-3207
type:Improvement
changed files:
texts:Investigate if all streams and scanners are closed in Ruta
Investigate if all streams and scanners are closed in Ruta.
issueID:UIMA-3208
type:Bug
changed files:
texts:DUCCs Agent Incorrectly Computes Process CPU Usage
Modify agent to calculate the process usage as follows:At the transition from init->run mode:capture totalCpuUsage value and save as totalCpuInitUsagecapture current timestamp and save as clockAtStartOfRunOn each agent report for the process (or process group?) while in running state:compute lastPercentCPU = 100 * (totalCpuUsage - totalCpuInitUsage) / (currentTimestamp - clockAtStartOfRun)send lastPercentCPUOn each agent report after running state ends:send lastPercentCPU (e.g. do not recompute)
issueID:UIMA-3209
type:Improvement
changed files:uimaj-core/src/main/java/org/apache/uima/UIMAFramework.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/AnalysisEngine.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/impl/AggregateAnalysisEngine_impl.java
uimaj-core/src/main/java/org/apache/uima/resource/Resource.java
texts:cleanup "additional parameters"
Many user-facing APIs have a parameter, called additional parameters, which is a Map, for passing additional, arbitrary parameters.These APIs are often associated with user-facing interfaces, and have static final String constants that name the "keys" for these parameters.The placement of these static final String constants is not consistent.  For example, there are duplicates ( both Resource and AnalysisEngine interfaces define "PARAM_CONFIG_PARAM_SETTINGS" ).  It's probably worth checking to see if there are any missing, and if they are defined at the "right level".  My guess is that moving these may break some user code; if so, I'd say it isn't worth removing misplaced ones.  But I would add missing ones at the "right level", and make all other instances have their definition set to the the "master" (the one defined at the right level), so there's no doubt that duplicates are intended to have the same exact definition.The right level, I think, in a hierarchy of interface definitions, is the highest point for which the parameter makes sense (but not higher).A scan of uimaj-core produced these candidates, some of which have multiple definition spots:PARAM_AGGREGATE_ANALYSIS_ENGINE_NAME = "PARAM_AGGREGATE_ANALYSIS_ENGINE_NAME"; PARAM_AGGREGATE_SOFA_MAPPINGS = "AGGREGATE_SOFA_MAPPINGS"; PARAM_CONFIG_MANAGER = "CONFIG_MANAGER"; PARAM_CONFIG_PARAM_SETTINGS = "CONFIG_PARAM_SETTINGS"; PARAM_EXTERNAL_OVERRIDE_SETTINGS = "EXTERNAL_OVERRIDE_SETTINGS"; PARAM_MBEAN_NAME_PREFIX = "MBEAN_NAME_PREFIX"; PARAM_MBEAN_SERVER = "MBEAN_SERVER"; PARAM_NUM_SIMULTANEOUS_REQUESTS = "NUM_SIMULTANEOUS_REQUESTS"; PARAM_PERFORMANCE_TUNING_SETTINGS = "PERFORMANCE_TUNING_SETTINGS"; PARAM_RELATIVE_PATH_RESOLVER = "RELATIVE_PATH_RESOLVER"; PARAM_RESOURCE_MANAGER = "RESOURCE_MANAGER"; PARAM_RESULT_SPECIFICATION = "RESULT_SPECIFICATION"; PARAM_TIMEOUT_PERIOD = "TIMEOUT_PERIOD"; PARAM_UIMA_CONTEXT = "UIMA_CONTEXT"; PARAM_VERIFICATION_MODE = "VERIFICATION_MODE";
issueID:UIMA-321
type:Bug
changed files:
texts:java.lang.NoClassDefFoundError is not handled correctly in CVD
java.lang.NoClassDefFoundError is not handled correctly in CVD. CVD throws a ClassCastException in this case.
issueID:UIMA-3210
type:Improvement
changed files:
texts:Simplify handling of deprecated CLI options
For the first release it would be nice to remove or clean up as much of the deprecated code and options as possible.
issueID:UIMA-3211
type:Task
changed files:
texts:Add DUCC sample app for processing CAS input
Sample application that takes as input compressed CAS files and outputs compressed CAS files
issueID:UIMA-3212
type:Bug
changed files:
texts:NPE when using SHIFT on parent types in low memory profile
There is a NullPointerException when using the following script with low memory profile :PACKAGE org.apache.uima;W{->SHIFT(W, 1, 1)};Stacktrace :org.apache.uima.analysis_engine.AnalysisEngineProcessException: Annotator processing failed.     at org.apache.uima.ruta.engine.RutaEngine.process(RutaEngine.java:283) at org.apache.uima.analysis_component.JCasAnnotator_ImplBase.process(JCasAnnotator_ImplBase.java:48) at org.apache.uima.analysis_engine.impl.PrimitiveAnalysisEngine_impl.callAnalysisComponentProcess(PrimitiveAnalysisEngine_impl.java:378) at org.apache.uima.analysis_engine.impl.PrimitiveAnalysisEngine_impl.processAndOutputNewCASes(PrimitiveAnalysisEngine_impl.java:298) at org.apache.uima.analysis_engine.impl.AnalysisEngineImplBase.process(AnalysisEngineImplBase.java:267) at org.apache.uima.ruta.RutaTestUtils.process(RutaTestUtils.java:187) at org.apache.uima.ruta.RutaTestUtils.process(RutaTestUtils.java:81) at org.apache.uima.ruta.ShiftWithLowMemoryProfileTest.testWithLowMemory(ShiftWithLowMemoryProfileTest.java:36) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:44) at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15) at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:41) at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20) at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:28) at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:31) at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:73) at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:46) at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:180) at org.junit.runners.ParentRunner.access$000(ParentRunner.java:41) at org.junit.runners.ParentRunner$1.evaluate(ParentRunner.java:173) at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:28) at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:31) at org.junit.runners.ParentRunner.run(ParentRunner.java:220) at org.junit.runner.JUnitCore.run(JUnitCore.java:137) at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:77) at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:195) at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:63) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57) at com.intellij.rt.execution.application.AppMain.main(AppMain.java:120)Caused by: java.lang.NullPointerException at java.util.HashSet.<init>(HashSet.java:116) at org.apache.uima.ruta.type.RutaBasic.getEndAnchors(RutaBasic.java:126) at org.apache.uima.ruta.action.ShiftAction.execute(ShiftAction.java:60) at org.apache.uima.ruta.rule.AbstractRuleElement.apply(AbstractRuleElement.java:139) at org.apache.uima.ruta.rule.RuleElementCaretaker.applyRuleElements(RuleElementCaretaker.java:113) at org.apache.uima.ruta.rule.ComposedRuleElement.applyRuleElements(ComposedRuleElement.java:537) at org.apache.uima.ruta.rule.AbstractRuleElement.doneMatching(AbstractRuleElement.java:85) at org.apache.uima.ruta.rule.ComposedRuleElement.fallback(ComposedRuleElement.java:459) at org.apache.uima.ruta.rule.ComposedRuleElement.fallbackContinue(ComposedRuleElement.java:377) at org.apache.uima.ruta.rule.RutaRuleElement.startMatch(RutaRuleElement.java:95) at org.apache.uima.ruta.rule.ComposedRuleElement.startMatch(ComposedRuleElement.java:73) at org.apache.uima.ruta.rule.RutaRule.apply(RutaRule.java:47) at org.apache.uima.ruta.rule.RutaRule.apply(RutaRule.java:40) at org.apache.uima.ruta.rule.RutaRule.apply(RutaRule.java:29) at org.apache.uima.ruta.RutaScriptBlock.apply(RutaScriptBlock.java:63) at org.apache.uima.ruta.RutaModule.apply(RutaModule.java:48) at org.apache.uima.ruta.engine.RutaEngine.process(RutaEngine.java:281) ... 34 more
issueID:UIMA-3213
type:Bug
changed files:
texts:ducc_post_install needs a good JDK
installation manual must document the need to specify a compliant JVM before running ducc_post_install
issueID:UIMA-3214
type:Bug
changed files:
texts:DUCC webserver (WS) causes browesr warning when virgin system has no Jobs being viewed with table preference == scroll
DUCC WS servlet fails to provide 2 empty columns for "no jobs" row.
issueID:UIMA-3215
type:Task
changed files:
texts:DUCC RM: Log clarification and simplification
Reduce log noise, organize log to simply log-following 'bots.
issueID:UIMA-3216
type:Bug
changed files:
texts:DUCC&#39;s agent reports wrong start/end times for processes
Looks like the agent code is not setting process time in Init state and time in Running state correctly. It looks like the endInitTime > startRunningTime which makes no sense. The startRunningTime should always be greater as it denotes when the process transitioned from init state to Running state.
issueID:UIMA-3217
type:Improvement
changed files:
texts:Review the examples
The examples may still use outdated practices. Check them and update where possible.
issueID:UIMA-3218
type:Improvement
changed files:
texts:Add migration guide to docbook
Add migration guide to docbook.
issueID:UIMA-3219
type:Improvement
changed files:
texts:Simpler XMI writing than XWriter
The whole FileNamer thing in XWriter is more complexity than most users need. You have to declare a new FileNamer class every time you create an XWriter. But that FileNamer class, even though it takes a JCas just like an annotator would, isn't actually an annotator, it's a totally different API.We should instead leverage our users' existing understanding of the annotator API. If they're going to have to write a new class every time, we should let them write an annotator class like they're already used to. We should provide a simple static method that makes it easy to write such a class, something like:public class XUtil { public static void writeXMI(JCas jCas, File outputFile) throws IOException, SAXException {  FileOutputStream outputStream = new FileOutputStream(outputFile);  try {   ContentHandler handler = new XMLSerializer(outputStream).getContentHandler();   XmiCasSerializer serializer = new XmiCasSerializer(jCas.getTypeSystem());   serializer.serialize(jCas.getCas(), handler);  }  finally {   outputStream.close();  } }}(The new XUtil class could also grow methods for writing XCAS, and for reading XMI and XCAS.)More discussion here: https://code.google.com/p/uimafit/issues/detail?id=121
issueID:UIMA-322
type:Bug
changed files:
texts:UIMA 1.4 XCAS deserialization does not work with 1.4 Vinci adapter
Michael and I were trying to get UIMA 2.1 to work with a Vinci server running UIMA 1.4.  We adapted the 1.4 XCAS serializer to work with UIMA 1.4, and got the 2.1-to-1.4 transport working, we think.  The reverse direction though didn't work.  1.4 XCASes can be deserialized ok (after at least one sofa-related bug is fixed).  However, CASes from Vinci seem to be missing the document text (on purpose, probably), and the document text is what triggers the sofa compatibility code.  When that code is not triggered, an exception is thrown later.  Michael says he remembers that we've seen and fixed a similar issue for 1.4.
issueID:UIMA-3220
type:Documentation
changed files:
texts:DUCC documentation needs to describe "security" measures
user authentication on requests how it works note: there is work to be done
issueID:UIMA-3221
type:Bug
changed files:
texts:DUCC webserver (WS) shows on Job Details page under Processes tab Time Init value > 0 and Time Run  == 0 when exactly the reverse should be true

issueID:UIMA-3222
type:Question
changed files:
texts:ruta: Is creating multiple annotations on the same token with MARKFAST desired behavior ?
When I use MARKFAST on the document"Donau-dampf-schiff"with the MARKFAST-list"Donau-dampf-schiffDonauDonau-dampfdampf-schiffdampfschiff"I get three annotations, namely "Donau-dampf-schiff", "dampf-schiff" and "schiff". This is kind of a strange result. It seems the result stems from iterating over alle token anchors of the document and checking the list for possible matches and only annotating each anchor only once.I would like the operator to annotate each token only once and not each anchor.GreetingsGeorg
issueID:UIMA-3223
type:Bug
changed files:
texts:Plus reluctant quantifier on composed rule elment causes stack overflow
Plus reluctant quantifier on composed rule elment causes stack overflow. Example:DECLARE DateAnnot;DECLARE DateCandidate;CAP{REGEXP("DDD")->DateAnnot};(DateAnnot COMMA)+? (DateAnnot COLON){->MARKONCE(DateCandidate,1,2)};The rule causes no problems if the quantifier is not reluctant.
issueID:UIMA-3224
type:Bug
changed files:
texts:Dot notation of numerical features in conditions causes syntax error
Dot notation of numerical features in conditions causes syntax error:HeadlineCandidate{(HeadlineCandidate.unmW<=3)};Maybe not all comparators are supported?
issueID:UIMA-3225
type:Bug
changed files:
texts:Loading scripts within jars
Reported by Saad in UIMA-3194:I wanted to report a similar problem when a script use the "SCRIPT" declaration to import anoter script, and those 2 scripts are packaged in a JAR file. additionalScripts are loaded using the File class exclusively, not ClassLoader.getSystemResourceAsStream():org.apache.uima.ruta.engine.RutaEngine.loadScript(RutaEngine.java:677).Full stack:org.apache.uima.resource.ResourceInitializationException: Initialization of annotator class "org.apache.uima.ruta.engine.RutaEngine" failed.  (Descriptor: file:/Users/saadtazi/Documents/workspace/ruta-jar-test/target/ruta-jar-test-0.0.1-SNAPSHOT-jar-with-dependencies/testEngine.xml) at org.apache.uima.analysis_engine.impl.PrimitiveAnalysisEngine_impl.initializeAnalysisComponent(PrimitiveAnalysisEngine_impl.java:252) at org.apache.uima.analysis_engine.impl.PrimitiveAnalysisEngine_impl.initialize(PrimitiveAnalysisEngine_impl.java:156) at org.apache.uima.impl.AnalysisEngineFactory_impl.produceResource(AnalysisEngineFactory_impl.java:94) at org.apache.uima.impl.CompositeResourceFactory_impl.produceResource(CompositeResourceFactory_impl.java:62) at org.apache.uima.UIMAFramework.produceResource(UIMAFramework.java:269) at org.apache.uima.UIMAFramework.produceAnalysisEngine(UIMAFramework.java:387) at org.apache.uima.analysis_engine.asb.impl.ASB_impl.setup(ASB_impl.java:254) at org.apache.uima.analysis_engine.impl.AggregateAnalysisEngine_impl.initASB(AggregateAnalysisEngine_impl.java:431) at org.apache.uima.analysis_engine.impl.AggregateAnalysisEngine_impl.initializeAggregateAnalysisEngine(AggregateAnalysisEngine_impl.java:375) at org.apache.uima.analysis_engine.impl.AggregateAnalysisEngine_impl.initialize(AggregateAnalysisEngine_impl.java:185) at org.apache.uima.impl.AnalysisEngineFactory_impl.produceResource(AnalysisEngineFactory_impl.java:94) at org.apache.uima.impl.CompositeResourceFactory_impl.produceResource(CompositeResourceFactory_impl.java:62) at org.apache.uima.UIMAFramework.produceResource(UIMAFramework.java:269) at org.apache.uima.UIMAFramework.produceAnalysisEngine(UIMAFramework.java:354) at org.apache.uima.tools.docanalyzer.DocumentAnalyzer.runProcessingThread(DocumentAnalyzer.java:1167) at org.apache.uima.tools.docanalyzer.DocumentAnalyzer$ProcessingThread.run(DocumentAnalyzer.java:1267)Caused by: java.lang.NullPointerException at java.io.File.<init>(File.java:251) at org.apache.uima.ruta.engine.RutaEngine.loadScript(RutaEngine.java:677) at org.apache.uima.ruta.engine.RutaEngine.recursiveLoadScript(RutaEngine.java:621) at org.apache.uima.ruta.engine.RutaEngine.initializeScript(RutaEngine.java:524) at org.apache.uima.ruta.engine.RutaEngine.initialize(RutaEngine.java:254) at org.apache.uima.analysis_engine.impl.PrimitiveAnalysisEngine_impl.initializeAnalysisComponent(PrimitiveAnalysisEngine_impl.java:250) ... 15 more
issueID:UIMA-3227
type:Bug
changed files:
texts:ruta: script editor does not mark duplicate type declarations as an error
When defining the same type in a script twice this is not marked as an error. Instead the automatic creation of the type system stop at this point in the script without an exception.
issueID:UIMA-3228
type:New Feature
changed files:
texts:Add MARKFIRST action to Ruta
Add MARKFIRST action to Ruta, which creates an annotation of the given type for the first RutaBasic within the matched annotation.
issueID:UIMA-3229
type:Task
changed files:
texts:Investigate rule performance dependent of previous rules
Investigate rule performance dependent of previous rules:...ANY{POSITION(Document, 1)-> Header}; // [0.274s|93.52%]Header{->SHIFT(Header, 1, 2)} ANY[0,49];  // [0.090s|3.07%]          ToDelete{POSITION(Header, 1) -> UNMARK(ToDelete)}; // [0.030s|1.02%]...ANY{STARTSWITH(Document)-> Header};  // [0.047s|50.00%]          Header{->SHIFT(Header, 1, 2)} ANY[0,49];  // [0.029s|30.85%]          ToDelete{POSITION(Header, 1) -> UNMARK(ToDelete)}; // [0.011s|11.7%]
issueID:UIMA-323
type:Task
changed files:
texts:Delete pre-docbook versions of documentation
Delete pre-docbook versions of documentation - not maintained, not used, no need to extract.
issueID:UIMA-3230
type:Task
changed files:
texts:Improve readme file of Ruta
Improve the readme of Ruta. As an example, take a look at the readme file of uimaFIT.
issueID:UIMA-3231
type:Bug
changed files:
texts:UIMA-AS JMS Session Reaper Logs Excessively
The JMS Session reaper logs at INFO level at regular intervals. Every time the thread wakes up it logs the same thing over and over. Change the code to log once.
issueID:UIMA-3232
type:Bug
changed files:
texts:Ducc Service Wrapper Shutdown Hook Not Calling QuiesceAndStop
Check the ducc service wrapper used to deploy java processes as it appears that while handling SIGTERM, the stopService() method is not being called. The consequence is that the quiesceAndStop() is never invoked, preventing appropriate cleanup from being done by AEs.
issueID:UIMA-3233
type:Bug
changed files:
texts:last change to uima-build-helper-maven-plugin broke it in 2 ways
The last change to this plugin was 2 things:1) Change from using javadoc style annotations to Java 5 annotations2) accidentally introduce a bug that broke date formatting1) is broken - didn't follow the docs for how to do the Java 5 style, and as a result, the "phase" in which to run this was not specified - causing it to be skipped.2) If you forced this to run, it generated an exception trying to convert an object to a date.  This was because a cast to (Object) was inserted in the method call:MessageFormat.format("{0,date," + ps.getFormat() + "}", (Object) now);The "format" method has a signature of (String, Object ...).  Casting the "now" value (which is an array of 1 Object) to (Object) made Java pass an array, the first element of which was an array of one object.The correct cast is (Object[]).  The reason this was inserted is because Eclipse issued a warning, which I didn't read correctly (was speed reading ).Probably need to check all other "improvements" to use Java 5 annotations for maven annotations, to correct others also done incorrectly.
issueID:UIMA-3234
type:Wish
changed files:
texts:Differentiate no Annotation and multiple Annotation case in CasUtil.selectSingle(CAS cas, Type type)
Currently there is one exception type in CasUtil.selectSingle(CAS cas, Type type) method for the case if CAS does not contain an Annotation or CAS contains more than one Annotation. However, I sometimes need to differentiate between these two cases in exception handling. A new method like, selectSingleOrNull(...) could solve this problem: return null if no Annotation, RuntimeException if multiple Annotations.Currently to handle this problem I just use CasUtil.select(...) and check for the size of the returned collection.
issueID:UIMA-3235
type:Bug
changed files:
texts:ruta: selection dialog for types in ruta test and ruta annotation check shows unintended behavior
The ruta annotations check view and the ruta test view share a common dialog with which one can select types which have to be processed. In this dialog one can filter and select some types. But when the filter is changed the former selection is not persistent.
issueID:UIMA-3236
type:Bug
changed files:
texts:Agent falsely rejects commands with no arguments
This NodeAgent code is checking for no args instead of no executableprivate boolean invalidCommand(ICommandLine commandLine) {  return (commandLine == null || commandLine.getCommandLine() == null ||            commandLine.getCommandLine().length == 0);  }
issueID:UIMA-3237
type:Bug
changed files:
texts:When a service fails to start it because of incompatible UIMA/UIMA-AS jobs waiting on it hang
Service 441's instance 7474 failed but job 7473 is still waiting for services.  The failure limit is 2 but only one instance was tried.  But the registry reports 2 work instances, 7474 & 7474 !
issueID:UIMA-3238
type:Question
changed files:
texts:AnalysisEngine.processAndOutputNewCASes in case of JCasMultiplier returns 0 JCases
I wanted to write a test for MyJCasMultiplier, to check how many JCases are created. Here is my code:AnalysisEngineDescription segmenter =   createEngineDescription(BreakIteratorSegmenter.class);AnalysisEngineDescription multiplier = createEngineDescription(MyJCasMultiplier.class);AggregateBuilder ab = new AggregateBuilder();ab.add(segmenter);ab.add(multiplier);AnalysisEngine engine = ab.createAggregate();engine.getAnalysisEngineMetaData().getOperationalProperties().setOutputsNewCASes(true);JCas jCas = engine.newJCas();jCas.setDocumentText(testString);JCasIterator it = engine.processAndOutputNewCASes(jCas);The problem is that engine.processAndOutputNewCASes(jCas) returns always 0 JCases, but I know it should be more  Did I miss something here or it is a framework issue?
issueID:UIMA-3239
type:Bug
changed files:
texts:UNMARK in Ruta should only remove matched annotation by default
The UNMARK action in Ruta should only remove the matched annotation by default. The problem is that two annotations with the same offset and type cannot be reduced to only one. Example:T{CONTAINS(T,2,100) -> UNMARK(T)};This rule removes all T annotations with the same offset with the first apply of the rule.If the matched annotation (e.g., something greedy was applied) is not of the type given by the argument, then use the current strategy with the begin acnhors.
issueID:UIMA-324
type:Improvement
changed files:
texts:Prebuild automake/autoconf output files for the tarball
Avoid need for latest versions of automake/autoconf tools when building from tarball
issueID:UIMA-3240
type:Bug
changed files:
texts:Evaluators in annotation testing have problems with subtypes
The evaluators in the annotation testing biew have problems with subtypes. The first guess is that the getAnnotations method returns also all annotations of subtypes and therefore duplicate annotations are returned.
issueID:UIMA-3241
type:Task
changed files:
texts:Prepare ruta for 2.1.0 release
An accumulative issue for preparing ruta for the 2.1.0 release, e.g., update versions in dependencies.
issueID:UIMA-3242
type:Bug
changed files:
texts:Types are only initialized for the first usage of a script when it is not executed on the default view
When running a Ruta script on a custom view, the first execution is fine but all others throw a NPE because types are not found.
issueID:UIMA-3243
type:Bug
changed files:
texts:Remove seda package from Ducc&#39;s transport project
There is an unused package /uima-ducc-transport/src/main/java/org/apache/uima/ducc/transport/seda in the transport project.
issueID:UIMA-3244
type:Bug
changed files:
texts:DUCC SM: race - incoming instance state can override global while service is stopping
If a service is unregistered a stop is issued to all instances and global state is set to Stopping.  If, at the exact time the stop is being implemented, state from an instance that hasn't yet been terminated comes in, it can progress state back to Available.  Internal state gets frotzed so query and attempts to reregister the service fail, but retries to unregister or stop it fail.  The solution is to insure that, when stopping, the Cumulative State of the service is never allowed to progress regardless of the instance state at any moment.
issueID:UIMA-3245
type:Bug
changed files:
texts:Lists of overrides should be white-space delimted to match other lists
JVM args and environment settings are both white-space delimited, and support quoted vales ... for consistency the descriptor parameter overrides should follow the same conventions.
issueID:UIMA-3246
type:New Feature
changed files:
texts:Convert the Ruta analysis engine into a uimaFIT analysis engine
Convert the Ruta analysis engine into a uimaFIT analysis engine for improving the handling in uimaFIT based applications.
issueID:UIMA-3247
type:Improvement
changed files:
texts:build - source-release - don&#39;t attach this, to keep from going to maven central; it goes to apache mirror instead
Besides not attaching it, add configuration to gpg sign it and generate the md5 sha checksums (which no longer happen)
issueID:UIMA-3248
type:Improvement
changed files:
texts:building Eclipse Update SItes - use better method for release
The current build for an Eclipse release achieves "safety" (from accidentally promoting a release before it's ready) by doing 2 distr.apache.org..../dev/ commits:  one to delete the current copy of the update-site, the other to "copy" the current update site to the /dev/ spot.I tried an improved method having 0 commits, which uses "switch" - checkout from ...release and then a local switch to ...dev.  However that didn't work, see the question and responsehere: http://markmail.org/thread/xcpyyezj6ourgbez#query:+page:1+mid:2eqyo3xmxldy2uoi+state:resultsSo I'm changing this to remove the "safety".  This means the update site build, when done with -Papache-release (which is applied either by the mvn user or by the mvn release:... plugin), will svn checkout into the target spot for the eclipse update subsite, the existing update subsite, from ...Release.Which means, that after the new site has been built, and the release vote has passed, you can commit the changes right back to the ...release spot.If by accident you commit before you want to, you can always manually fix this by reverting that commit.  So it doesn't have too much downside - the real downside is that SVN hook on commits which launching "mirroring" of the changes the 100's of sites mirroring the Apache distribution.The update site, when done without -Papache-release, does no svn checkout from the .../release update site.   Your "test" update site will be OK, but will be missing previous releases.  If you need the previous releases, run with the -Papache-release.
issueID:UIMA-3249
type:Bug
changed files:
texts:DUCC RM: Refused FAIR_SHARE job can cause exception.
To replicate: submit a reservation in a fair-share class.  The RM refuses; then while preparing the OR publication, sends the job to be purged from Scheduler proper.  This is ok but checks must be made for a REFUSal because in this case, the job never got fully integrated into the structures.
issueID:UIMA-325
type:New Feature
changed files:uimaj-core/src/main/java/org/apache/uima/cas/impl/XmiCasSerializer.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/XmiCasDeserializer.java
uimaj-core/src/main/java/org/apache/uima/internal/util/XmlElementNameAndContents.java
uimaj-core/src/main/java/org/apache/uima/internal/util/XmlAttribute.java
uimaj-core/src/main/java/org/apache/uima/internal/util/XmlElementName.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/XmiSerializationSharedData.java
texts:Enhance XMI Serializer to support merging multiple XMI documents into a single CAS
The new feature would support the following scenario:1) A CAS is serialized to XMI.2) Copies of the XMI documents are sent to multiple remote services3) Each remote service appends to the CAS (does not delete or modifyexisting stuff) and responds with a new serialized XMI CAS)4) The multiple XMI responses are all merged back into a single CAS instanceThis would permit multiple remote services that don't depend on eachother to run in parallel, assuming they only append to the CAS (whichis common).  Of course there's other work on the runtime needed toactually do the parallel invocations, but XMI serializer support is aprerequisite.The basic XMI deserializer changes aren't too complicated.  First,when the CAS is originally serialized in step 1, we make available tothe caller the maximum xmi:id value in that CAS (this is mostlyalready done, we just need to add a public accessor for this value).Next, we allow passing this value to the deserializer as an optionalargument that essentially says "deserialize only XMI elements whosexmi:id is greater than the specified value".Discussion here: http://www.mail-archive.com/uima-dev@incubator.apache.org/msg02338.html
issueID:UIMA-3250
type:Bug
changed files:
texts:Wrong qualifier
The second example in 7.1.1 Regular UIMA components of http://uima.apache.org/d/uimafit-current/tools.uimafit.book.html#ugr.tools.uimafit.introduction readsUimaUtil.TOKEN_TYPE_PARAMETER, Token.class.getName(),UimaUtil.SENTENCE_TYPE_PARAMETER, Sentence.class.getNameShouldn't it beTokenizer.TOKEN_TYPE_PARAMETER, Token.class.getName(),Tokenizer.SENTENCE_TYPE_PARAMETER, Sentence.class.getName());());?
issueID:UIMA-3251
type:Improvement
changed files:
texts:add javadocs generation during release for all modules
The Maven conventions have javadocs available as part of the artifact.  Turn this on, but keep off during non-release builds in order to speed them up.For testing, developers can run with -Papache-release...
issueID:UIMA-3252
type:Improvement
changed files:
texts:improve javadocs for uimaj
now that full javadocs are being generated for maven central, clean up the warnings.
issueID:UIMA-3253
type:Bug
changed files:
texts:TypeSystemDescription throws ClassCastException
Hi all!We have received a strange Exception from the Type system of uimafit maybe you can help us to fix it.1. First we loaded the type system from different xml-files like this:typeSystemDescription = TypeSystemDescriptionFactory.createTypeSystemDescriptionFromPath(                    "app/models/linguistic/descriptors/LexicalUnits.xml",                    "app/models/linguistic/descriptors/Punctuation.xml",                    "app/models/linguistic/descriptors/Word.xml",                    ...);2. Then we created JCAS document JCas jCas = JCasFactory.createJCas(typeSystemDescription);      3. Then we loaded the pipeline through aggregator like this: AggregateBuilder builder = new AggregateBuilder();        // create resource manager        SimpleNamedResourceManager resourceManager = new SimpleNamedResourceManager();        resourceManager.setExtensionClassPath(Play.application().classloader(), "", true);        // build pipeline        builder.add(createPrimitiveDescription(LanguageAnnotator.class));4. And then we wanted to iterate the annotations of the daugther type which was created in one of the annotators:Collection<Word> col = JCasUtil.select(jCas, Word.class); for (Word word: col){...}=> In this place (* ) the system threw the ClassCastException, that Annotation.class cannot be casted to Word.class.Inside any annotator the same lines don't throw any exception, this happens in the main program only. What could we do wrong?The problem may lay in the resource loading, since we use ResourceManager which loads the classes for the types from the PLAY (Web framework) Class loader. Maybe we have to set the ResourceManager also for JCas? Maybe our problem is described in chapter 5.6.7 of the UIMA Tutorial but in this case we also don't understand what to do.We use IntelliJ IDEA and MacOS.Thank you for your help.
issueID:UIMA-3254
type:Bug
changed files:
texts:NPE if script cannot be found
NPE if script cannot be found. Ruta should thrown a FileNotFoundException instead.
issueID:UIMA-3255
type:Improvement
changed files:
texts:Allow autocompletion of uimaFIT components in dependencies of Ruta project
Allow autocompletion of uimaFIT components in dependencies of Ruta project. And also check if the autocompletion of import is influenced by hidden tokens.
issueID:UIMA-3256
type:Improvement
changed files:uimaj-core/src/main/java/org/apache/uima/internal/util/IntSet.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/DocumentUimaImpl.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/annotation/DrawingStyle.java
uimaj-adapter-vinci/src/main/java/org/apache/uima/adapter/vinci/VinciBinaryAnalysisEngineService_impl.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/cpm/BaseCPMImpl.java
uimaj-core/src/main/java/org/apache/uima/resource/metadata/impl/ConfigurationParameter_impl.java
uimaj-core/src/main/java/org/apache/uima/jcas/impl/JCasImpl.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/metadata/cpe/CasProcessorErrorRateThresholdImpl.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/cpm/utils/QueueEntity.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/action/LowerLeftAnnotationSideAction.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/ui/ParameterSettingsSection.java
uimaj-core/src/main/java/org/apache/uima/search/impl/Attribute_impl.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/impl/compatibility/AnnotatorAdapter.java
uimaj-adapter-soap/src/main/java/org/apache/uima/adapter/soap/AxisResourceServiceManager.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/ui/IndexSection.java
uimaj-core/src/main/java/org/apache/uima/internal/util/GraphNode.java
uimaj-core/src/main/java/org/apache/uima/resource/service/impl/ResourceService_impl.java
uimaj-core/src/main/java/org/apache/uima/resource/metadata/impl/TypeDescription_impl.java
uimaj-core/src/main/java/org/apache/uima/collection/impl/CasConsumerDescription_impl.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/FeatureValue.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/point/IUimaEditorExtension.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/ui/HeaderPageWithSash.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/cpm/container/deployer/socket/SocketTransport.java
uimaj-core/src/main/java/org/apache/uima/internal/util/ResourcePool.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/metadata/cpe/CpeConfigurationImpl.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/cpm/engine/ConsumerCasUtils.java
uimaj-core/src/main/java/org/apache/uima/impl/UIMAFramework_impl.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/metadata/cpe/CasProcessorFilterImpl.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/ui/ParameterSection.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/action/LowerRightAnnotationSideAction.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/BinaryCasSerDes4.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/service/impl/AnalysisEngineService_impl.java
uimaj-core/src/main/java/org/apache/uima/resource/impl/ConfigurableDataResourceSpecifier_impl.java
uimaj-core/src/main/java/org/apache/uima/cas_data/impl/FeatureStructureImpl.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/cpm/engine/CPMEngine.java
uimaj-ep-cas-editor-ide/src/main/java/org/apache/uima/caseditor/ide/TypeSystemLocationPropertyPage.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/action/DeleteFeatureStructureAction.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/impl/RsType.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/fsview/TypeCombo.java
uimaj-tools/src/main/java/org/apache/uima/tools/jcasgen/Jg.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/metadata/cpe/CpeResourceManagerConfigurationImpl.java
uimaj-adapter-vinci/src/main/java/org/apache/uima/adapter/vinci/VinciAnalysisEngineService_impl.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/annotation/EclipseAnnotationPeer.java
uimaj-adapter-soap/src/main/java/org/apache/uima/adapter/soap/AxisAnalysisEngineService_impl.java
uimaj-core/src/main/java/org/apache/uima/resource/impl/URISpecifier_impl.java
uimaj-core/src/main/java/org/apache/uima/resource/metadata/impl/ConfigurationParameterSettings_impl.java
uimaj-adapter-soap/src/main/java/org/apache/uima/adapter/soap/XmlDeserializer.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/cpm/container/CasObjectNetworkCasProcessorImpl.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/metadata/cpe/CpeSofaMappingImpl.java
uimaj-adapter-vinci/src/main/java/org/apache/uima/adapter/vinci/VinciBinaryAnalysisEngineServiceStub.java
uimaj-core/src/main/java/org/apache/uima/flow/impl/AnalysisSequenceCapabilityNode.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/cpm/engine/NonThreadedProcessingUnit.java
uimaj-core/src/main/java/org/apache/uima/impl/ResourceSpecifierFactory_impl.java
uimaj-tools/src/main/java/org/apache/uima/tools/stylemap/StyleMapEditor.java
uimaj-adapter-soap/src/main/java/org/apache/uima/adapter/soap/BinaryDeserializer.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/impl/TypeOrFeature_impl.java
uimaj-ep-pear-packager/src/main/java/org/apache/uima/pear/generate/PearExport.java
uimaj-core/src/main/java/org/apache/uima/resource/metadata/impl/Capability_impl.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/ui/dialogs/AbstractDialog.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/impl/AnalysisEngineDescription_impl.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/cpm/container/NetworkCasProcessorImpl.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/ui/dialogs/AddTypeToPriorityListDialog.java
uimaj-core/src/main/java/org/apache/uima/cas_data/impl/CasDataImpl.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/util/Primitives.java
uimaj-core/src/main/java/org/apache/uima/resource/impl/ResourceState_impl.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/ui/AbstractSectionParm.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/cpm/container/deployer/DeployFactory.java
uimaj-core/src/main/java/org/apache/uima/util/impl/SerializationMeasures.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/MultiPageEditor.java
uimaj-tools/src/main/java/org/apache/uima/tools/docanalyzer/PrefsMediator.java
uimaj-core/src/main/java/org/apache/uima/util/impl/XMLParser_impl.java
uimaj-core/src/main/java/org/apache/uima/resource/metadata/impl/FeatureDescription_impl.java
uimaj-adapter-soap/src/main/java/org/apache/uima/adapter/soap/AxisAnalysisEngineServiceStub.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/ui/SettingsPage.java
uimaj-core/src/main/java/org/apache/uima/resource/metadata/impl/TypeSystemDescription_impl.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/metadata/cpe/CasProcessorExecutableImpl.java
jVinci/src/main/java/org/apache/vinci/transport/VinciFrame.java
uimaj-core/src/main/java/org/apache/uima/resource/service/impl/ResourceServiceAdapter.java
uimaj-core/src/main/java/org/apache/uima/internal/util/TextAnalysisEnginePool.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/impl/RsFeats.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/metadata/cpe/CpeCheckpointImpl.java
uimaj-core/src/main/java/org/apache/uima/search/impl/Style_impl.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/cpm/utils/CPMUtils.java
uimaj-core/src/main/java/org/apache/uima/util/impl/ProcessTrace_impl.java
uimaj-ep-pear-packager/src/main/java/org/apache/uima/pear/insd/edit/INSDComponentPage.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/ui/AggregateSection.java
uimaj-tools/src/main/java/org/apache/uima/tools/docanalyzer/AnnotationViewerDialog.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/AnnotationEditor.java
uimaj-adapter-soap/src/main/java/org/apache/uima/adapter/soap/AxisResourceServiceStub.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/cpm/engine/ProcessingUnit.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/TypeImpl.java
uimaj-core/src/main/java/org/apache/uima/resource/metadata/impl/AllowedValue_impl.java
uimaj-tools/src/main/java/org/apache/uima/tools/viewer/CasAnnotationViewer.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/metadata/cpe/CasProcessorTimeoutImpl.java
uimaj-core/src/main/java/org/apache/uima/resource/metadata/impl/ConfigurationGroup_impl.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/cpm/container/deployer/socket/SocketCasProcessorDeployer.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/ui/dialogs/SelectTypeDialog.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/CasSeqAddrMaps.java
uimaj-core/src/main/java/org/apache/uima/resource/metadata/impl/TypePriorityList_impl.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/impl/PrimitiveAnalysisEngine_impl.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/cpm/container/CPEFactory.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/impl/AnalysisEngineImplBase.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/TAEConfiguratorPlugin.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/cpm/container/CasProcessorConfigurationJAXBImpl.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/cpm/engine/SequencedQueue.java
uimaj-adapter-vinci/src/main/java/org/apache/uima/adapter/vinci/util/Descriptor.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/metadata/cpe/CasProcessorRuntimeEnvParamImpl.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/ui/AbstractImportablePartSection.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/ui/AbstractSection.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/cpm/container/deployer/NonJavaApplication.java
uimaj-core/src/main/java/org/apache/uima/util/impl/OptimizeStrings.java
uimaj-adapter-vinci/src/main/java/org/apache/uima/adapter/vinci/util/UimaSaxVinciFrameBuilder.java
uimaj-core/src/main/java/org/apache/uima/collection/metadata/CpeDescription.java
uimaj-core/src/main/java/org/apache/uima/resource/metadata/impl/ConfigurationParameterDeclarations_impl.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/action/WideLeftAnnotationSideAction.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/fsview/FeatureStructureBrowserViewPage.java
uimaj-core/src/main/java/org/apache/uima/internal/util/rb_trees/Int2IntRBT.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/impl/compatibility/CollectionReaderAdapter.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/ui/Utility.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/impl/compatibility/AnalysisComponentAdapterFactory.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/service/impl/AnalysisEngineServiceAdapter.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/ui/dialogs/AddIndexDialog.java
uimaj-tools/src/main/java/org/apache/uima/tools/util/htmlview/AnnotationViewGenerator.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/AnnotationStyle.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/cpm/container/deployer/CPEDeployerDefaultImpl.java
uimaj-core/src/main/java/org/apache/uima/resource/impl/ResourceCreationSpecifier_impl.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/cpm/container/ProcessingContainer_Impl.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/action/WideRightAnnotationSideAction.java
uimaj-core/src/main/java/org/apache/uima/resource/metadata/impl/PropertyXmlInfo.java
uimaj-core/src/main/java/org/apache/uima/resource/metadata/impl/FsIndexKeyDescription_impl.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/ui/TypeSection.java
uimaj-core/src/main/java/org/apache/uima/collection/impl/CasInitializerDescription_impl.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/impl/UimacppAnalysisEngineImpl.java
uimaj-core/src/main/java/org/apache/uima/resource/impl/DataResource_impl.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/metadata/cpe/CpeCollectionReaderIteratorImpl.java
uimaj-core/src/main/java/org/apache/uima/resource/metadata/impl/MimeTypePrecondition_impl.java
uimaj-core/src/main/java/org/apache/uima/impl/UimaContext_ImplBase.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/cpm/container/deployer/RunnableApplication.java
uimaj-core/src/main/java/org/apache/uima/search/impl/Filter_impl.java
jVinci/src/main/java/org/apache/vinci/transport/XTalkTransporter.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/ui/ImportSection.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/outline/OutlineContentProviderBase.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/metadata/cpe/OutputQueue_impl.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/ui/SofaMapSection.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/cpm/container/deployer/vns/LocalVNS.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/ui/dialogs/AddParameterDialog.java
uimaj-core/src/main/java/org/apache/uima/resource/impl/ExternalResourceDependency_impl.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/cpm/container/deployer/socket/ProcessControllerAdapter.java
uimaj-core/src/main/java/org/apache/uima/resource/impl/ExternalResourceDescription_impl.java
jVinci/src/main/java/org/apache/vinci/transport/BaseClient.java
jVinci/src/main/java/org/apache/vinci/transport/util/XMLConverter.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/service/impl/ServiceDataCargo.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/contextmenu/ModeMenu.java
uimaj-tools/src/main/java/org/apache/uima/tools/AnnotationViewerMain.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/metadata/cpe/CasProcessorMaxRestartsImpl.java
uimaj-core/src/main/java/org/apache/uima/resource/impl/ConfigurableDataResource_impl.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/cpm/container/CPEContext.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/metadata/cpe/CasProcessorRunInSeperateProcessImpl.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/base_cpm/container/CasProcessorController.java
uimaj-tools/src/main/java/org/apache/uima/tools/cpm/MetaDataPanel.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/ui/dialogs/FindComponentDialog.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/ui/dialogs/PickTaeForTypesDialog.java
uimaj-ep-pear-packager/src/main/java/org/apache/uima/pear/insd/edit/vars/AbstractVarValViewerHandler.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/ui/ParameterDelegatesSection.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/metadata/cpe/CpeIncludeImpl.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/ui/FlowSection.java
uimaj-core/src/main/java/org/apache/uima/resource/metadata/impl/SimplePrecondition_impl.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/core/model/DefaultColors.java
uimaj-adapter-vinci/src/main/java/org/apache/uima/adapter/vinci/VinciAnalysisEngineServiceStub.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/impl/RsLangs.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/contextmenu/ShowAnnotationsMenu.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/impl/AggregateAnalysisEngine_impl.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/ui/GeneralSection.java
uimaj-adapter-soap/src/main/java/org/apache/uima/adapter/soap/axis11/XmlDeserializer_Axis11.java
uimaj-core/src/main/java/org/apache/uima/resource/metadata/impl/ProcessingResourceMetaData_impl.java
uimaj-core/src/main/java/org/apache/uima/resource/metadata/impl/FsIndexCollection_impl.java
uimaj-core/src/main/java/org/apache/uima/internal/util/XMLUtils.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/metadata/cpe/CpeSofaMappingsImpl.java
uimaj-core/src/main/java/org/apache/uima/resource/impl/FileResourceSpecifier_impl.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/cpm/utils/ChunkMetadata.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/ui/dialogs/AddCapabilityFeatureDialog.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/CasDocumentProvider.java
uimaj-adapter-soap/src/main/java/org/apache/uima/adapter/soap/axis11/BinaryDeserializer_Axis11.java
uimaj-core/src/main/java/org/apache/uima/resource/impl/ConfigurationManagerImplBase.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/ui/dialogs/EditSofaBindingsDialog.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/cpm/vinci/DATACasUtils.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/cpm/CPEConfig.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/asb/impl/FlowControllerContainer.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/ICasDocumentListener.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/ui/HeaderPage.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/ui/dialogs/AddAllowedValueDialog.java
uimaj-tools/src/main/java/org/apache/uima/tools/util/gui/FileSelector.java
jVinci/src/main/java/org/apache/vinci/transport/VinciClient.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/cpm/engine/CPECasPool.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/cpm/container/deployer/VinciTAP.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/BinaryCasSerDes6.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/metadata/cpe/CpeCollectionReaderCasInitializerImpl.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/metadata/impl/AnalysisEngineMetaData_impl.java
uimaj-core/src/main/java/org/apache/uima/internal/util/CharArrayString.java
uimaj-core/src/main/java/org/apache/uima/resource/metadata/impl/TypePriorities_impl.java
uimaj-core/src/main/java/org/apache/uima/resource/metadata/impl/Import_impl.java
uimaj-core/src/main/java/org/apache/uima/util/JCasPool.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/ui/dialogs/AddFeatureDialog.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/cpm/container/deployer/vinci/VinciCasProcessorDeployer.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/impl/ResultSpecification_impl.java
uimaj-core/src/main/java/org/apache/uima/resource/metadata/impl/MetaDataObject_impl.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/ui/CapabilitySection.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/ui/dialogs/AddSofaDialog.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/cpm/vinci/Vinci.java
uimaj-tools/src/main/java/org/apache/uima/tools/cpm/CpmPanel.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/cpm/container/deployer/JavaApplication.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/impl/compatibility/CasConsumerAdapter.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/metadata/cpe/CasProcessorExecArgImpl.java
uimaj-core/src/main/java/org/apache/uima/internal/util/AnalysisEnginePool.java
uimaj-core/src/main/java/org/apache/uima/resource/metadata/impl/ResourceMetaData_impl.java
uimaj-core/src/main/java/org/apache/uima/resource/metadata/impl/FsIndexDescription_impl.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/action/MergeAnnotationAction.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/metadata/cpe/CasProcessorCpeObject.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/ui/dialogs/AddCapabilityTypeDialog.java
texts:clean up some javadocs and unused classes in core-impl

issueID:UIMA-3257
type:Bug
changed files:
texts:Modify UIMA-AS poms, scripts, READMEs, etc to prepare for the 2.4.2 release

issueID:UIMA-3258
type:Bug
changed files:
texts:ruta: greedy quantifier on bracketed construct does not match
The ruleSegment { CONTAINS(Head)} (Segment { CONTAINS(Ind) } SegmentSeparator?)* { -> MARK(Context, 1, 2) }; Does not match. When using the explain-view I can see that the *-quantifier does match but does not return a match for the surrounding construct.
issueID:UIMA-326
type:Sub-task
changed files:uimaj-core/src/main/java/org/apache/uima/cas/impl/XmiCasSerializer.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/XmiCasDeserializer.java
uimaj-core/src/main/java/org/apache/uima/internal/util/XmlElementNameAndContents.java
uimaj-core/src/main/java/org/apache/uima/internal/util/XmlAttribute.java
uimaj-core/src/main/java/org/apache/uima/internal/util/XmlElementName.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/XmiSerializationSharedData.java
texts:Add Out-of-typesystem Data Support to XMI Serialization
Add the ability for the XmiCasDeserializer to record incoming elements that don't correspond to any types in the type system, and the XmiCasSerializer to subsequently echo that information.  This support is already in XCAS but wasn't implemented for XMI, and is a prerequisite for many remote service scenarios.
issueID:UIMA-3260
type:Task
changed files:
texts:DUCC RM Configuration
Change the nodepool and class configuration to use a json-like structure instead of Java properties.
issueID:UIMA-3262
type:Bug
changed files:
texts:Ruta: Numeric variables in MinMax quantifier
Numeric variables in MinMax quantifiers do not work correctly if they are accessed in the root of the script: the parent element is asked for its parent, but there is none.
issueID:UIMA-3263
type:Bug
changed files:
texts:Fix Ducc Agent thread leak
For every process the Agent launches, it instantiates a Metric Collector object which gathers process metrics like CPU, swap, and many others. The metric collection is driven by a Camel route at regular intervals. Once the process stops (or dies) the route is shutdown.Within Metric Collector object, each metric is collected in a separate thread managed by a thread pool. The main motivation is to collect metrics in parallel to improve performance. There are two separate problems in the current code:1) The code uses a wrong type of thread pool, namely newFixedThreadPool. This pool has a fixed pool of threads which never expire even if idle. A better choice is the CachedThreadPool which creates threads on demand, reuses idle ones and kills those that are idle over 1 minute.2) The thread pool is never shutdown when the process is shutdown. The code actually shuts down the Camel route which drives metric collection but its processor ( java object doing the metric collection) does not shutdown its thread pool causing the leak.
issueID:UIMA-3264
type:Bug
changed files:
texts:DUCC webserver (WS) displays truncated health hover information on services page
Must replace double quotes in title string with "
issueID:UIMA-3265
type:Bug
changed files:
texts:Test annotation types accidentally slipped into release
The AnalyzedText, Token, and Sentence types are used for tests, but accidentally slipped into the 2.0.0 release. Should be removed in the next release.
issueID:UIMA-3266
type:Task
changed files:
texts:DUCC ducc_ling needs -q option
To assist web server compartmentalization of user logs, ducc_ling needs a -q (quiet) option so it can be used to 'cat' files without the usual ducc_ling noise.
issueID:UIMA-3267
type:Bug
changed files:
texts:Ducc Agent rogue process detector not working correctly
When rogue process detector gets a process list from 'ps' command, it makes an assumption that a parent process is listed before its children. This is wrong assumption leading to marking processes as rogue even though such processes are owned by ducc.
issueID:UIMA-3268
type:Bug
changed files:
texts:ruta: type selection button in ruta annotation test view does not work
Pushing the button causes a cast exception. The desired type selection dialog does not appear, so the annotation test view is pretty useless in this current state.
issueID:UIMA-3269
type:Bug
changed files:
texts:Imported type system specified with broken url
Imported type system is specified with a broken url. This happened when a type system descriptor is imported, which is part of a referenced java project and the ruta project and the java project are located in completely different spots on the hard disc. The way how type systems are imported should be impoved. In this situation the builder should probably insert automatically an import by name and not by location.
issueID:UIMA-327
type:New Feature
changed files:uimaj-core/src/main/java/org/apache/uima/analysis_engine/asb/impl/ASB_impl.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/asb/impl/ASB_impl.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/asb/impl/ASB_impl.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/asb/impl/FlowContainer.java
uimaj-core/src/main/java/org/apache/uima/flow/CasFlow_ImplBase.java
uimaj-core/src/main/java/org/apache/uima/flow/Flow.java
uimaj-core/src/main/java/org/apache/uima/flow/JCasFlow_ImplBase.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/asb/impl/ASB_impl.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/asb/impl/FlowContainer.java
uimaj-core/src/main/java/org/apache/uima/flow/CasFlow_ImplBase.java
uimaj-core/src/main/java/org/apache/uima/flow/Flow.java
uimaj-core/src/main/java/org/apache/uima/flow/JCasFlow_ImplBase.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/AnalysisEngineProcessException.java
uimaj-core/src/main/java/org/apache/uima/flow/FlowController.java
uimaj-core/src/main/java/org/apache/uima/flow/FlowController_ImplBase.java
uimaj-core/src/main/java/org/apache/uima/flow/impl/FixedFlowController.java
uimaj-core/src/main/java/org/apache/uima/flow/impl/FlowControllerContext_impl.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/AnalysisEngineProcessException.java
uimaj-core/src/main/java/org/apache/uima/flow/FlowController.java
uimaj-core/src/main/java/org/apache/uima/flow/FlowController_ImplBase.java
uimaj-core/src/main/java/org/apache/uima/flow/impl/FixedFlowController.java
uimaj-core/src/main/java/org/apache/uima/flow/impl/FlowControllerContext_impl.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/asb/impl/ASB_impl.java
uimaj-core/src/main/java/org/apache/uima/flow/ParallelStep.java
uimaj-core/src/main/java/org/apache/uima/flow/SimpleStep.java
uimaj-core/src/main/java/org/apache/uima/flow/Step.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/asb/impl/ASB_impl.java
uimaj-core/src/main/java/org/apache/uima/flow/ParallelStep.java
uimaj-core/src/main/java/org/apache/uima/flow/SimpleStep.java
uimaj-core/src/main/java/org/apache/uima/flow/Step.java
texts:Flow Controller API extensions in support of more complex flow options
1)  ParallelStep - a new subtype of Step that the Flow Controller canreturn.  The ParallelStep constructor would take a List of keys,indicating that multiple AEs could logically be run in parallel.  Notethat the runtime may or may not actually execute them in parallel - ina collocated deployment it certainly would not.  In a remotedeployment we can (eventually) support parallel execution by makinguse of the XMI merging support I put in.2) Dynamically adding/removing AEs from the aggregate.  This would bea new set of FlowConroller APIs:removeAnalysisEngines(List)addAnalysisEngines(List)each of which takes a List of keys.  The AnalysisEngine metadata mapavailable through the FlowControllerContext would also be updated.This supports error handling such as the "disable" action in thecurrent CPM, allowing removing a misbehaving AE from the flow.Someday it could also allow adding new AEs to an aggregatedynamically.The Flow Controller could throw an exception in response toremoveAnalysisEngines, indicating that the aggregate cannot continuewithout the removed AEs (or that the flow controller simply can'thandle dynamic removal - maybe that should be the default in fact).3) Notification of errors to allow continuing after a failure.  Thiswould support an action like the current CPM's "continue" action.There would be a new API:Flow.onFailure(String failedAnalysisEngineKey, Throwable failure)If the runtime wanted to continue after a failure, it would call thismethod on the Flow Controller, and then would go back to callinghasNext/next.  Without this notification, a "continue" action wouldn'tmake much sense, because a dynamic FlowControlle may make anassumption that the last step it issued completed successfully.Note for #2 and #3 the existing framework won't call these methods, yet.  These Flow Controller extensions are a  prerequisite for doing moreadvanced flow things like parallel flows and error recovery.
issueID:UIMA-3270
type:Improvement
changed files:
texts:DUCC webserver (WS) to employ ducc_ling for access to files for logged-in user, but for anonymous user continue to use ducc userid
This requires a change to ducc_ling to support the -q (for quiet) flag in order to launch /bin/cat and obtain exactly those results.
issueID:UIMA-3271
type:Task
changed files:
texts:DUCC: viaducc
Viaducc and java_viaducc.  This is a front-end to the DUCC 'managed reservation' aka arbitrary process to fill in defaults and make execution simpler.  It automatically set 2-way console redirection.  When invoked as 'viaducc' the first non-config parameter is taken as the executable to run.  When invoked as java-viaducc the first non-config parameter is the name of a class to run, and a JVM is found to run it with.  User may specify the JVM, and it not specified, the JVM configured for DUCC is used.  If java_viaducc is installed in the same directory as the JRE binaries it recognizes this fact and may be invoked as an alternative to Java, thus allowing Eclipse users to execute their workspaces in a DUCC-managed resource.  Too cool.
issueID:UIMA-3275
type:Task
changed files:
texts:Minor discrepencies in license and notice files
reported by Marshall:ep-engine-sources jar: inconsistent.  License OK, Notice says contains antlr and htmlparserep-ide - has license / notice for icons, but I didn't see any icons (no top level icons folder).
issueID:UIMA-3276
type:Improvement
changed files:
texts:DUCC should allow disablement of Unmanaged Reservations
1. add flag to ducc.properties to disable unmanaged reservations2. add code to CLI to reject unmanaged reservation requests3. add code to WS to disable Request Reservtion button
issueID:UIMA-3277
type:Bug
changed files:
texts:DUCC orchestrator (OR) is not providing reservation refusal information to CLI?

issueID:UIMA-3278
type:Bug
changed files:
texts:Ducc Agent should log process exit code
Log child process exit code in the agent's log. May be useful for debugging.
issueID:UIMA-3279
type:Bug
changed files:
texts:DUCC Agent uses hardcoded path to cgroup utils
The agent uses hardcoded path of /usr/bin/cgexec when launching a  process into a cgroup. The code is already setup to lookup cgroup utils directory  in ducc.properties but apparently is not using it. Modify NodeAgent to log the location of cgroup utils directory, remove the hardcoded path and instead look it up when composing runnable command line.
issueID:UIMA-328
type:Improvement
changed files:
texts:CDE - handle case of searching for impl Java class, but the project is not a Java project
The CDE allows picking a Java implementation class for a primitive annotator.  The pick list is generated done using the Eclipse "Search" mechanism, which is set up to search along the classes visible in the classpath to that project.  However, if the user puts their XML descriptor into a separate project, which is not a Java project, then this strategy throws an "unexpected exception".  Change this behavior so that if the XML descriptor is in a non-Java project, have the Search search the entire workspace for candidate impl classes, to generate the pick list.
issueID:UIMA-3280
type:New Feature
changed files:
texts:Option to specify vm arguments for Ruta launch config
Add an option to specify jvm arguments for the Ruta launch configurations. A script may need additional memory if it calls external analysis engines that load huge models.
issueID:UIMA-3281
type:New Feature
changed files:
texts:Option to create UIMA descriptors in Ruta perspective
The popup in the script explorer provides commands to create new Ruta files, e.g., scripts. It would be nice if there would also be an option to create UIMA descriptors like a type system descriptor .
issueID:UIMA-3282
type:Bug
changed files:
texts:Explanation of feature match reference missing string value
Explanation of feature match reference is missing the string value.NamedEntity.value=="person"{-> Person};...is explained with:NamedEntity.value{-> Person};
issueID:UIMA-3283
type:Bug
changed files:
texts:Matching reference pointing outside of current window
Matching reference pointing outside of current window causes a NPE. This should either not be allowed or just work, but not throw an exception. Example:CoreferenceLink{IS(Person)}->{CoreferenceLink.next{-> Person};};
issueID:UIMA-3284
type:Bug
changed files:
texts:Ruta Workbench: Widget is disposed
Sometimes the Ruta Workbench throws an error and complains that a widget is disposed. This is acutally caused by style change listener and should be fixed:at org.apache.uima.ruta.caseditor.view.tree.AnnotationTreeViewPage$TreeViewAnnotationStyleChangeListener.annotationStylesChanged(AnnotationTreeViewPage.java:9)at org.apache.uima.caseditor.editor.AnnotationStyleChangeListener.propertyChange(AnnotationStyleChangeListener.java:43)
issueID:UIMA-3285
type:Bug
changed files:
texts:DUCC Catch keyboard interrupt in CLI
Python cli wrappers should catch keyboard interrupt instead of producing a lovely stack trace.
issueID:UIMA-3286
type:Bug
changed files:
texts:Start anchor after optional literal
Start anchor after optional literal. Something like the following causes problems:("in"? @MonthInd{-PARTOF(DateInd) -> Month} NUM{-> Year}){-> DateInd,     CREATE(RDate, "year" = Year, "month" = Month, "day" = Day)};
issueID:UIMA-3287
type:Bug
changed files:
texts:Strange behavior of semantic highlighting
The semantic highlighting in the rule editor of the Ruta Workbench shows some strange behavior. This has maybe something to do with implicit actions, which are selected instead of the actual type expression.
issueID:UIMA-3288
type:Bug
changed files:
texts:Modify UIMA-AS client to notify application after a CAS is delivered to a queue
The uima-as client callback to notify an application when a CAS is delivered to a queue is missplaced. This callback actually happens before dispatch to a queue. Modify to move the callback after the dispatch and only is done when the CAS is handed off to AMQ.
issueID:UIMA-3289
type:Bug
changed files:
texts:UIMA-AS dumps debug msgs to stdout
Disable code dumping debug stuff to stdout
issueID:UIMA-329
type:Bug
changed files:
texts:extractAndBuild scripts need to check for presence of JAI libraries

issueID:UIMA-3290
type:Bug
changed files:
texts:CLI should check for more errors
check for duplicate optionscheck for extra arguments (quotes missing?)validate values when possibleset defaults
issueID:UIMA-3291
type:Bug
changed files:
texts:Modify uima-as top pom.xml to exclude wrapAAE.ppt to keep RAT from complainig
The RAT complains about missing license of wrapAAE.ppt. Add it to an excluded list.
issueID:UIMA-3292
type:Bug
changed files:
texts:Conflicting types are not flagged by RUTA
Steps to reproduce Create a RUTA script containing the rule W {-> T1} Add this script to an aggregate whose type system contains conflicting.W Run the script on the text wordExpected behaviourword is annotated with T1Observed behaviourDepending on the on the order in which the types iterated on in RutaEnvironment#initializeTypes, one of the following is observed:  W is resolved to org.apache.uima.ruta.type.W and word is annotated with T1 W is resolved to conflicting.W and no T1 annotation is created.
issueID:UIMA-3293
type:Task
changed files:
texts:Add README to DUCC
Need README
issueID:UIMA-3294
type:Task
changed files:
texts:Remove client jars from DUCC distribution
Modify pom(s) to remove the following client side jars from DUCC  distribution:uima-ducc-reserve.jaruima-ducc-services.jar uima-ducc-submit.jaruima-ducc-unreserve.jar
issueID:UIMA-3295
type:Task
changed files:
texts:Fix javadoc warnings in UIMA-AS
UIMA_Service.java and Import.java have javadoc headers on some methods that mention obsolete params. This causes javadoc warnings during a build
issueID:UIMA-3296
type:Task
changed files:
texts:DUCC startup should check file and nproc limits.
During starting the scripting will check hard and soft limits and attempt to set the soft limits up to the hard limits.  If this fails, or if the resulting limits are too low, DUCC will not start.check-ducc is also updated to verify the limits on the cluster nodes.
issueID:UIMA-3297
type:Task
changed files:
texts:UIMA-AS Docs Chapter 5 Mentions AMQ 5.4.1
Modify chapter 5 of the uima-as docs to replace references to activemq 5.4.1 with 5.6.0.
issueID:UIMA-3298
type:Bug
changed files:
texts:DUCC Agent should disable Memory Guard when cgroups are enabled
Currently the agent enables/disables memory guard based on a value of ducc.agent.share.size.fudge.factor property defined in ducc.properties. If value > -1, the guard is ON and it kills a process whose RSS exceeds defined threshold. The above should be true only when cgroups are not defined(enabled) on a node. Otherwise, if cgroups are enabled, the agent should disable memory guard and let cgroups manage process memory usage.
issueID:UIMA-3299
type:Bug
changed files:
texts:Fix DUCC Agent logging when memory guard kicks in
Fix logging in LinuxProcessMetricsProcessor which incorrectly logs an address of a variable instead a value. Instead doing managedProcess.getProcessAssignment().getMaxMemoryWithFudge() the code does  managedProcess.getProcessAssignment()
issueID:UIMA-33
type:Improvement
changed files:uimaj-adapter-vinci/src/main/java/org/apache/uima/adapter/vinci/VinciAnalysisEngineServiceStub.java
uimaj-adapter-vinci/src/main/java/org/apache/uima/adapter/vinci/VinciBinaryAnalysisEngineServiceStub.java
texts:Do not use same timeout on GetMetadata as is used for Process
The Vinci client descriptor currently has one timeout setting, which is used for all operations, including the GetMetaData call and the Process call.  For services that do very expensive processing, this timeout must be set to a large value so that the Process call can complete.  However there's no reason that the timeout should be so large for the GetMetaData call.  This is an issue because if the service is hung, it would be nice if GetMetaData (the first call that the client makes) would return an error after a relatively short amount of time, rather than waiting for the full process timeout to elapse (which could be several minutes, or more).
issueID:UIMA-330
type:Bug
changed files:uimaj-core/src/main/java/org/apache/uima/analysis_engine/impl/AggregateAnalysisEngine_impl.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/impl/AggregateAnalysisEngine_impl.java
texts:Calling reconfigure() on aggregate AE doesn&#39;t call reconfigure() on FlowController.

issueID:UIMA-3300
type:Task
changed files:
texts:upgrade maven antrun plugin to current level
upgrade to 1.7.  remove dependency on ant 1.7x because this level runs with 1.8.2.  Fix dependency that's pulling in ant 1.5 by excluding that dependency.
issueID:UIMA-3301
type:Task
changed files:
texts:Multi-thread DUCC scripts
The ducc start, stop, and query scripts as well as simulation start/stop need to be multithreaded to better cope with large clusters.
issueID:UIMA-3302
type:Improvement
changed files:
texts:DUCC webserver (WS) to honor ducc.properties flag for enable/disable of login function
Specify login enabled (default is true)ducc.ws.login.enabled = true
issueID:UIMA-3303
type:New Feature
changed files:
texts:Add a way to alias types in RUTA (e.g. "IMPORT type AS alias")
It would be convenient to define type aliases in RUTA script.One scenario where it would help is when many types have the same short name:IMPORT com.example.a.T AS TAIMPORT com.example.b.T AS TBFor a discussion about it, see UIMA-3292.
issueID:UIMA-3304
type:Bug
changed files:
texts:Make included/excluded types in testing view (configurable) sensible to subtypes
Make included/excluded types in testing view (configurable) sensible to subtypes: Currently, if the parent type if included and the subtype is excluded, the subtypes are chosen anyway in the evaluator and, therefore, the evaluator returns for example false positives for the subtypes. Ignore the subtypes, but add a preference for inlcuding the subtypes anyway as it is implemented right now.
issueID:UIMA-3306
type:Improvement
changed files:
texts:Filter in type view should be case insensitive
Filter in type view should be case insensitive. When entering "rel", it should also show the type "Relation".
issueID:UIMA-3307
type:Improvement
changed files:
texts:Ruta project references closed project
If a Ruta project references a closed project, then an error will be thrown. This should also be reported to the user as a problem.
issueID:UIMA-3308
type:Bug
changed files:
texts:uima-as deployment descriptor Eclipse new wizard needs updating due to refactoring of AbstractNewWizard
The new wizard for the deployment descriptor generates bad xml (missing a closing ">".  THis is due to a refactoring done in rev 1476384 as part of UIMA-2844, of the Abstract Wizard.  Update this wizard to take advantage of the refactoring.
issueID:UIMA-3309
type:Bug
changed files:
texts:Ruta: Filter file names in Query View
Setting:There are not only xmis in the queried folder, e.g., a "data.xml" file in a gold standard files folder produced by Ruta's Check Annotations View.Exception:Java heap space.Possible solution:Introduce a file name filter. This would also allow to query certain subsets of documents in folders, e.g., "&#91;12&#93;.*\.xmi".
issueID:UIMA-331
type:New Feature
changed files:uimaj-examples/src/main/java/org/apache/uima/examples/flow/AdvancedFixedFlowController.java
uimaj-examples/src/main/java/org/apache/uima/examples/flow/AdvancedFixedFlowController.java
texts:Provide/extend a built-in flow controller that can be configured to do ParallellStep or to continue after error
Building on the infastructure implemented in UIMA-327, we should provide a built-in flow controller that can be configured to return ParallelSteps and/or to continue after errors.  There are a few options:1) extend the existing <fixedFlow>.  This could be messy to do (in the Java API) in a backwards compatible way2) add a new kind of flow object, .e.g. <complexFlow>.  Also would need a corresponding flow controller that interprets it (or possibly just modify FixedFlowController to handle both <fixedFlow> and <complexFlow>)3) do this entirely with configuration parameters in the FlowController.  This can be done with the existing framework code (and wouldn't require CDE changes as 1 and 2 would).  But it is more of a change from what the user is familiar with.  Still, flow controller configuration parameters are a very general solution and if we think this is the way of the future maybe we should go ahead and use them now.
issueID:UIMA-3310
type:Bug
changed files:
texts:Modify Top UIMA-AS pom to add uima-as-eclipse-update-site to RAT excludes
Add <exclude>uima-as-eclipse-update-site/.classpath</exclude><exclude>uima-as-eclipse-update-site/.project</exclude><exclude>uima-as-eclipse-update-site/.settings/**</exclude>to UIMA-AS top pom.xml to keep rat plugin happy
issueID:UIMA-3311
type:Bug
changed files:
texts:Report the reason for descriptor override errors
When descriptor parameter overrides are invalid the error msg is not very helpful
issueID:UIMA-3312
type:Improvement
changed files:
texts:Add new CLI option to enable or disable console logging
Currently for DUCC jobs and APs the console is always written to a file, even when also streamed back to the client.  Add a new option flag to suppress the logging in case it is excessive, and also to let viaducc emulate ssh.
issueID:UIMA-3313
type:Bug
changed files:
texts:DUCC Agent Marks AP as Failed
When AP exits before Agent kills it, the agent marks this process as Failed and Croaked. The agent should check exit code of the process and mark it as Stopped when exit code == 0. If exit code > 0, the agent should continue to mark it as Failed with reason Croaked.
issueID:UIMA-3314
type:Bug
changed files:
texts:Project dirty on checkout on Windows
Some Eclipse metadata files are checked in without svn:eol-style=native, causing Eclipse to rewrite them with platform specific line endings and making them dirty on checkout.
issueID:UIMA-3315
type:Improvement
changed files:
texts:Unit tests for enum injection
Add some (more) tests with enums as parameters.
issueID:UIMA-3316
type:Bug
changed files:
texts:DUCC RM Miscounting share deductions
The RM is miscounting the number of shares to deduct from the scheduling tables when new allocations are made.  This is hard to see usually because these tables are reset (twice) at every schedule gen, and fair-share jobs get adjusted at every gen so things work out over time.  If non-preemptable requests are made simultaneously on small systems however, all but one will be incorrectly refused.
issueID:UIMA-3317
type:Documentation
changed files:
texts:shell commands to ease the migration to uimaFIT version 2
shell commands to ease the migration to uimaFIT version 2
issueID:UIMA-3318
type:Improvement
changed files:
texts:DUCC webserver (WS) Managed Reservations revisions
1. Main: If high order bit of code is on, change from code=n to signal=n 2. Details: What are possible values for Reason Scheduler?3. Details: Jerry to provide revised values for State/Reason Agent
issueID:UIMA-3319
type:Bug
changed files:
texts:DUCC Agent Reports Wrong State For APs and JPs
When a process exits normally or terminates due to a kill not initiated by DUCC, the Agent marks the process as Failed with Reason Croaked. The agent has no way to determine if the process exited gracefully or due to an error. The return code from the process can be interrogated to see if the process was killed due to a signal. In such case, the high bit in the return code will be set. When the process exits not due to a signal is where the problem exists. No way of knowing why that happened. This is user code and as such cannot be relied upon. Modify the agent to change state of the process to Stopped instead of Failed. If the process was killed by an agent the reason should be KilledByDucc both for APs and JPs. If the process exited on its own, the reason should be Other.
issueID:UIMA-332
type:Task
changed files:
texts:Fix copyrights, notice, status page for 2.1 release
Jean Anderson wrote on general@incubator.apache.org:I reviewed the uimaj-2.1.0-incubating-src.tar.gz distribution. Thesignature verified fine. The incubator disclaimer in the DISCLAIMER andREADME files, which looks good to me.Below are four issues I spotted.(1) Source headers in generated outputinfo from original post:> We've run the RAT utility and have posted the reports, along with our> own comments, here:> http://people.apache.org/~alally/uima-2.1.0-incubating/RAT/RAT-src.txt> http://people.apache.org/~alally/uima-2.1.0-incubating/RAT/RAT-bin.txt>> The original unedited RAT reports are also posted:> http://people.apache.org/~alally/uima-2.1.0-incubating/RAT/RAT-src-full.txt> http://people.apache.org/~alally/uima-2.1.0-incubating/RAT/RAT-bin-full.txtThanks for posting your RAT output, especially since you noted "thecurrent version of RAT crashes on the UIMA source distrib". Regarding not including the ASF header in generated output, although itisn't required it's still a good idea to include it where feasible soend users aren't confused about usage &#91;1&#93;.In my opinion it isn't a show stopper for this release, but if I wereyou, I'd go ahead and include the header when in doubt and if it'sreasonable to do so.Incidently, the src-headers page &#91;2&#93; mentions a handy tool in thecommitters repo &#91;3&#93; that will actually slap those headers on for you ina comment for various file types.(2) Old headersWhen I ran insert_license.pl &#91;3&#93; in "practice" mode, it spotted thesefiles that have the old-style copyright, and they must be replaced withthe current header &#91;2&#93;:uimaj-2.1.0-incubating/uima-docbooks/CatalogManager.propertiesuimaj-2.1.0-incubating/uima-docbooks/project.propertiesuimaj-2.1.0-incubating/uima-docbooks/MANIFESTuimaj-2.1.0-incubating/uima-docbooks/xml-catalog.xmluimaj-2.1.0-incubating/uima-docbooks/src/css/stylesheet.cssuimaj-2.1.0-incubating/uima-docbooks/src/styles/html.xsluimaj-2.1.0-incubating/uima-docbooks/src/styles/pdf.xsluimaj-2.1.0-incubating/uima-docbooks/src/styles/common_custom.xsluimaj-2.1.0-incubating/uima-docbooks/src/styles/htmlsingle.xsluimaj-2.1.0-incubating/uima-docbooks/src/styles/pdf/titlepage.xmluimaj-2.1.0-incubating/uima-docbooks/src/styles/pdf/custom.xsluimaj-2.1.0-incubating/uima-docbooks/src/styles/html/titlepage.xmluimaj-2.1.0-incubating/uima-docbooks/src/styles/html/custom.xslinsert_license.pl &#91;3&#93; outputs a line like this for these files with theold header:uimaj-2.1.0-incubating/uima-docbooks/src/styles/html.xsl,extension=.xsl, fileType=xml, Found existing license (licenseType=AL-20)so skipping, WARN: old AL-20 copyright notice(3) NOTICE fileWasn't UIMA started with an initial code contribution? If so, I wouldexpect its NOTICE file to include some sort of attribution; see:http://www.apache.org/legal/src-headers.html#noticehttp://www.apache.org/licenses/example-NOTICE.txt(4) UIMA Podling status at http://incubator.apache.org/projects/uima.htmlThe "copyright" and "verify distribution rights" work items haven't beenchecked off &#8211; that suggests that the ip clearance hasn't quite yet beencompleted yet. Or maybe it has and the status just needs to be updatedto reflect reality.So, issues 2-4 must be fixed.
issueID:UIMA-3320
type:Bug
changed files:
texts:DUCC Agent swap management is not working
Agent currently kills a process if its swap usage exceeds allotted maximum. That maximum is calculated based on percentage of total memory used. For example, if a process is allotted 10% of real memory its also entitled to max 10% of swap. This may work for processes with large memory assignments but does not for those with a small memory assignments.Modify agent to prevent it from killing a process which uses more than its share of swap. Instead, change code that monitors node-wide swap usage and begin to kill processes that use the most swap.
issueID:UIMA-3321
type:Bug
changed files:
texts:DUCC orchestrator (OR) must choose appropriate default job/reservation/service class

issueID:UIMA-3322
type:Bug
changed files:
texts:Only types from the declared typesystems should be available in RUTA scripts
RUTA makes all types that are known to the CAS available by their short name. This means that a type may be available when the script runs in one aggregate but not when it runs in the other.For example, the following script will sometimes work and sometimes not work depending if the aggregate in which it is executed knows about a type with short name MyType or not:PACKAGE com.example.ruta;W{->MARK(MyType)};I would expect only types from the typesystems declared in the RUTA script to be allowed.
issueID:UIMA-3323
type:Bug
changed files:
texts:Ruta type checker misses type of feature match
Ruta type checker misses type of feature match. DECLARE Person;NamedEntity.value=="person"{-> Person};.. reports no problem for NamedEntity.
issueID:UIMA-3324
type:Bug
changed files:
texts:DUCC webserver (WS) NPE when no services are registered

issueID:UIMA-3325
type:Bug
changed files:
texts:FSCollectionFactory.createStringArray returns StringArrayFS
FSCollectionFactory provides methods to convert java arrays to feature structure arrays. In the current version it return a StringArrayFS but a StringArray is needed.
issueID:UIMA-3326
type:Task
changed files:
texts:DUCC SM: Decouple UIMA-AS Get-meta from JMX query in the default pingers.
As the summary says ... even if get-meta fails, the jmx query to the brolker to get queue stats should be allowed to proceed.
issueID:UIMA-3327
type:New Feature
changed files:
texts:Generation of Ruta descriptors should happen in ruta-core
Generation of Ruta descriptors should happen in ruta-core: The descriptors are currently created in the workbench plugins and therefore there are still some unwanted dependencies to eclipse-based stuff. The functionality should be refactored and moved to ruta-core. This should also support the generation of the type system of a script file.
issueID:UIMA-3328
type:Improvement
changed files:
texts:DUCC should use ducc_ling to access public/private keys in user home dir
Note: move WS general purpose code for employment of ducc_ling to common
issueID:UIMA-333
type:Task
changed files:
texts:Fix issues for Maven artifact packaging
Since we are doing another release candidate for 2.1, might as well address the Maven artifact packaging issues raised by Dan Kulp:1) The jars don't have the incubator disclaimer in them.  (this is thecritical one)2) The <name> for jVinci doesn't have "Apache UIMA" in it.3) The poms don't have a licenses section4) The <organization> tag doesn't have a url to apache.org
issueID:UIMA-3330
type:Bug
changed files:
texts:UIMA-AS service logs excessively
UIMA-AS service logs multiple messages for each received CAS causing a log to bloat. This must have been checked in by mistake.
issueID:UIMA-3331
type:Bug
changed files:
texts:all-in-one mishandles multiple descriptor overrides
Multiple overrides are now separated by whitespace but all-in-one still expects commas.  Also the launcher may need to quote values when building the executable args for the remote AP
issueID:UIMA-3332
type:Improvement
changed files:
texts:upgrade assembly plugin to 2.4
Assembly plugin 2.4 includes the plexus fix for doing tar-ing that eliminates extra stuff at the end of the tar.
issueID:UIMA-3333
type:Bug
changed files:
texts:DUCC working directory must be absolute
The CLI should check that the working directory is absolute.  The default is the current directory, defined in the options as "."It may not need to be writable
issueID:UIMA-3334
type:Bug
changed files:
texts:DUCC should reject a service using a fair-share class
Currently no obvious value in having service instances pre-emptable
issueID:UIMA-3335
type:Bug
changed files:
texts:DUCC RM: Incorrectly accounting for existing shares calculating caps
When assigning a fixed share the share order of the incoming request is applied to ALL existing requests while calculating caps.  If the new request is larger than the existing ones, this artificially inflates the total pending usage, causing the new job to be refused for exceeding caps. The fix is to count qshares correctly up front, then add in the qshares for the new request, instead of being fancy and trying to convert Nshares to Qshares in one fell swoop.
issueID:UIMA-3336
type:Improvement
changed files:
texts:DUCC webserver (WS) should show Health "Error" with pop-up on hover to show problem for registered services that fail to start
See Service 823.
issueID:UIMA-3337
type:Bug
changed files:
texts:DUCC orchestrator (OR) Failed Initialization for Service instance was incorrectly marked Completed with Reason EOJ??
See ~challngr/for/lou
issueID:UIMA-3338
type:Bug
changed files:
texts:Question Greedy quantifier in Ruta not working
Hi,I am using a ruta rule likeToken{REGEXP(Token.tag.value, "AtPl")} // An articleToken{REGEXP(Token.tag.value, "NoPl")} // A noun in pluralToken?{REGEXP(Token.tag.value, "PnDmPl")} // An optional demonstrative pronoun in pluralToken.tag.value=="VbSg"{REGEXP("aVerb", true)->Token.tag.value="VbPl"} ; // A verb that is ambiguous as far as number is concerned (Sg-Pl)to match and modify input like bothanArt|AtPl aNoun|NoPl aVerb|VbSgandanArt|AtPl aNoun|NoPl aPronoun|PnDmPl aVerb|VbSgHowever, the rule matches only the second case:anArt|AtPl aNoun|NoPl aVerb|VbSganArt|AtPl aNoun|NoPl aPronoun|PnDmPl aVerb|VbPl i.e. the optional quantifier seems not to be working.Thanks for looking into this.
issueID:UIMA-3339
type:New Feature
changed files:
texts:Ducc&#39;s Broker should support authentication
Currently Ducc's AMQ broker allows free access to an arbitrary process to send messages to queues and topics. This may be easily exploited to bring down Ducc with little effort. Need to implement authentication to make sure that a process connecting to the broker is a trusted one.Provide new configuration for the broker which would support authentication. Extend Ducc's code to enable Ducc daemons to authenticate themselves with the broker.
issueID:UIMA-334
type:Task
changed files:
texts:Elimnate redundant LICENSE, NOTICE, DISCLAIMER files from source distribution
Maven antrun plugin can be used to copy these files from a common location, so we don't need to have them in every project.
issueID:UIMA-3340
type:Improvement
changed files:
texts:Upgrade SolrCas to Solr 4.x
It'd be nice to upgrade SolrCas to use latest Solr version.One thing to add, apart upgrade of existing stuff, would be connecting to SolrCloud clusters via CloudSolrServer.
issueID:UIMA-3341
type:Task
changed files:
texts:Include all test in UIMA Ruta jenkins job
Include all test in UIMA Ruta jenkins job. Only 27 of 42 test of the package org.apache.uima.ruta are actually applied.
issueID:UIMA-3342
type:Bug
changed files:
texts:Stackoverflow for composed rule elements with quantifier
Stackoverflow for composed rule elements with quantifier: See unit test org.apache.uima.ruta.Quantifier4Test
issueID:UIMA-3343
type:Bug
changed files:
texts:Add Ducc sample app resources to the runtime
The ducc runtime is missing sample app resource files
issueID:UIMA-3344
type:Bug
changed files:
texts:DUCC service requests have different defaults for --instances
So the option cannot declare a single default
issueID:UIMA-3345
type:Bug
changed files:
texts:DUCC cli may crash if given an empty option
If somehow passed a property with an empty string the fixup-quotes method crashes
issueID:UIMA-3346
type:Improvement
changed files:
texts:"generate" goal should include type system imports
The "generate" goal of the uimaFIT maven plugin should include type system imports in the generated descriptors. This would make those descriptors directly usable in descriptor-based workflows such as CPE or UIMA-AS.In our case, we point to the TS descriptor files directly in types.txt, thus not relying on any "magic" TS discovery. This could translate directly to a corresponding import by name in the XML descriptor. More sophisticated setups might of course be more difficult to handle.
issueID:UIMA-3347
type:Bug
changed files:uimaj-tools/src/main/java/org/apache/uima/tools/viewer/CasAnnotationViewer.java
texts:Ruta: Missing False Positives in "Annotation Test" view
I recognized that there are no False Positive annotations in the evaluation when the type has no annotation in the gold cas, even when I specified a white list of types for evaluation.For instance,Gold standard Document:<PER>Peter</PER> develops software.Corresponding document under test:Peter develops <ORG>software</ORG>.produces a False Negative for the person annotation, but no False Positive annotation for the organization annotation.Possible Solution:Allow to specify a pattern that filters all types of the typesystem that should be used for evaluation (including creation of false positive annotations).
issueID:UIMA-3348
type:Improvement
changed files:
texts:DUCC webserver (WS) %CPU
%CPU (for Services Details) should be "instantaneous" rather than "cumulative" value.Some choices:1. Do nothing for Rel. 12. Remove the column on the Services Details page for Rel. 13. For Rel 1+ a) Have Agent report both instantaneous and average %CPU b) Have WS add new column to display both4. Same as 3 except make it a Rel. 1 requirement5. Other?
issueID:UIMA-3349
type:Bug
changed files:
texts:DUCC RM Defrag must not try to expand non-preemptable job
After a non-preemptable job has received its allocation, it can sometimes shrink, if  UIMA-AS job is residing in the allocation.  If this happens, the defragmentation code must not try to bring the allocation back up to its original size.
issueID:UIMA-335
type:Task
changed files:
texts:Remove extra license file in src distr
The build assembly step includes the LICENSE.txt file in the src distr for the docbook project.  This duplicates the LICENSE file that is included as part of the distr.  The email on general@i.a.o says only one file should be included.Fix this by excluding this file in the src build.
issueID:UIMA-3350
type:Bug
changed files:
texts:DUCC SM Incorrect formulation of pinger arguments
If arguments are passed to the pinger, the external pinger formats the starting command line with the arguments between --port and --arguments, thereby losing the port.
issueID:UIMA-3351
type:Bug
changed files:
texts:DUCC webserver (WS) shows increasing Time Run for Stopped JP ?
Submitted Job to class fixed, work items count = 20, max processes = 6, and threads per share = 10.  RM allocated 6 JPs, even though just 2 would have been sufficient.  Post JP initialization for all threads, the OR did volunteer the 4 excess JPs and they were marked as Stopped.  However, the WS continued to show increasing Time Run for the 4 never used (and now Stopped!) JPs until the Job ended, which occurred once the 2 active JPs finished processing the 20 work items.
issueID:UIMA-3352
type:Wish
changed files:
texts:absolute vs. relative paths in auto generated engine.xml
When building a ruta project the parameter settings in the generated xyzEngine.xml files are overwritten with absolute paths to "descriptor" and "script" folder. Before deploying my project to a server i always have to change the parameter settings back to "./script" by hand. Maybe relative paths in the generated files are more convenient.
issueID:UIMA-3353
type:Improvement
changed files:
texts:DUCC Fixed shared Jobs that overspecify maximum process parallelism should be limited to maximum usable shares
Example, user submits job comprising:scheduling_class fixedprocess_deployments_max 6process_thread_count 10and JD reports 20 work items total.In the past DUCC would allocate 6 shares.  With this change DUCC would allocate just 2 shares and cause less (unnecessary) disruption to any already deployed Jobs on the cluster which may have been in competition for shares.
issueID:UIMA-3355
type:Bug
changed files:
texts:DUCC webserver (WS) shows more dispatched than total work items for Job ?
Due to threading, the order of adding/removing tracking info to the Job Driver status report my be reversed; that is the notification that a work item was queued may come after the notification that the same work item was dequeued.The result is that the removal from the map will not occur and the WS will think there are more dispatched work items than is in fact the case.The fix is to use a 2nd map to hold the premature dequeue notifications.
issueID:UIMA-3356
type:Improvement
changed files:
texts:DUCC webserver (WS) should show Dispatched work items for active Jobs on Job Details page
Until this change, work items for active jobs were unaccountable on the Job Details page until Done or Error.
issueID:UIMA-3357
type:Bug
changed files:
texts:CONTAINS fails when running script as AE in a pipeline with a new CAS
When running my Ruta script as an analysis engine in a pipeline, it does not work correctly when creating a new CAS and processing the pipeline a second time with the new CAS. While reusing the old cas with "cas.reset()" is working, creating a new CAS results in failing rules including "CONTAINS" in the ruta script.The ruta script used in the example:mystic.rutaPACKAGE de.tudarmstadt.algo.vpino.ruta;DECLARE test;Document{CONTAINS(CW)->MARK(test)};The following Java class can reproduce the error. It creates four xmi files. The last xmi file is missing the annotations created with rules including "CONTAINS".MysticPipe.javapackage org.uimafit.pipeline;import java.io.File;import java.io.FileOutputStream;import java.io.IOException;import java.io.OutputStream;import java.util.ArrayList;import java.util.List;import org.apache.uima.UIMAFramework;import org.apache.uima.analysis_engine.AnalysisEngine;import org.apache.uima.analysis_engine.AnalysisEngineDescription;import org.apache.uima.analysis_engine.AnalysisEngineProcessException;import org.apache.uima.cas.CAS;import org.apache.uima.cas.impl.XmiCasSerializer;import org.apache.uima.fit.factory.AnalysisEngineFactory;import org.apache.uima.fit.pipeline.SimplePipeline;import org.apache.uima.resource.ResourceInitializationException;import org.apache.uima.resource.metadata.ResourceMetaData;import org.apache.uima.util.CasCreationUtils;import org.apache.uima.util.InvalidXMLException;import org.apache.uima.util.XMLInputSource;import org.apache.uima.util.XMLSerializer;import org.xml.sax.SAXException;public class MysticPipe { public static void main(String[] args) throws Exception {  working("This is a test.", initPipeline());  failing("This is a test.", initPipeline()); } private static AnalysisEngine initPipeline() throws ResourceInitializationException, IOException, InvalidXMLException {  File specFile = new File("./descriptor/de/tudarmstadt/algo/vpino/ruta/mysticEngine.xml");  XMLInputSource in = new XMLInputSource(specFile);  AnalysisEngineDescription ruta = (AnalysisEngineDescription) UIMAFramework.getXMLParser().parseResourceSpecifier(in);  return AnalysisEngineFactory.createEngine(ruta); } private static void working(String input, AnalysisEngine theEngine) throws ResourceInitializationException, AnalysisEngineProcessException, IOException,         SAXException {  final List<ResourceMetaData> metaData = new ArrayList<ResourceMetaData>();  metaData.add(theEngine.getMetaData());  final CAS cas = CasCreationUtils.createCas(metaData);  System.out.println("create a new cas...");  cas.setDocumentLanguage("de");  cas.setDocumentText(input);  SimplePipeline.runPipeline(cas, theEngine);  writeXmiFile(cas, "works_test1");//CHECK  //THE DIFFERENCE  cas.reset();  //END DIFFERENCE  System.out.println("create a new cas...");  cas.setDocumentLanguage("de");  cas.setDocumentText(input);  SimplePipeline.runPipeline(cas, theEngine);  writeXmiFile(cas, "works_test2");//CHECK } private static void failing(String input, AnalysisEngine theEngine) throws ResourceInitializationException, AnalysisEngineProcessException, IOException,         SAXException {  final List<ResourceMetaData> metaData = new ArrayList<ResourceMetaData>();  metaData.add(theEngine.getMetaData());  final CAS cas = CasCreationUtils.createCas(metaData);  System.out.println("create a new cas...");  cas.setDocumentLanguage("de");  cas.setDocumentText(input);  SimplePipeline.runPipeline(cas, theEngine);  writeXmiFile(cas, "works_test3"); // CHECK  //THE DIFFERENCE  final CAS cas2 = CasCreationUtils.createCas(metaData);  //END DIFFERENCE  System.out.println("create a new cas...");  cas2.setDocumentLanguage("de");  cas2.setDocumentText(input);  SimplePipeline.runPipeline(cas2, theEngine);  writeXmiFile(cas2, "fail_test4"); //FAIL  return; }  public static void writeXmiFile(CAS aCas, String Fname) throws IOException, SAXException {  File outFile = new File("output", Fname + ".xmi");  OutputStream out = null;  try {   // out = new StringOutputStream();   out = new FileOutputStream(outFile);   XmiCasSerializer ser = new XmiCasSerializer(aCas.getTypeSystem());   XMLSerializer xmlSer = new XMLSerializer(out, false);   ser.serialize(aCas, xmlSer.getContentHandler());  } finally {   if (out != null) {    out.close();   }  } }}
issueID:UIMA-3358
type:Bug
changed files:
texts:ERROR OR.StateJobAccounting - stateChange     488 current[Completing] requested[Completing] ignored java.lang.RuntimeException
OR should not flag this state change as an error...unless it really is.
issueID:UIMA-336
type:Bug
changed files:
texts:Schema validation fails for service client descriptors
If schema validation is turned on in the XMLParser, it fails to valid service client descriptors (uriSpecifiers) that contain a <parameters> element.  This element needs to be added to the resourceSpecifierSchema.xsd file.
issueID:UIMA-3360
type:Bug
changed files:
texts:DUCC orchestrator (OR) must report "investment" in workitems for each JP so RM can make intelligent pre-emption decisions

issueID:UIMA-3361
type:Improvement
changed files:
texts:DUCC webserver (WS) Machines Page improvements
1. Make used shares count red when it exceeds total2. Show shares on machines when hovering over <something>3. Show users & PIDs on hover over Aliens > 0
issueID:UIMA-3362
type:Task
changed files:
texts:Default ducc-mon to use classic view
The sorted view has problems. It should remain as an alternative for now.
issueID:UIMA-3363
type:Improvement
changed files:
texts:DUCC service query should return userid.

issueID:UIMA-3364
type:Bug
changed files:
texts:DUCC RM Restart and Defrag problems with &#39;fixed&#39; shares
During hot restart RM was forgetting to set the 'non-preemptable' bit on recovered shares During defrag RM was using the FAIR_SHARE allocater for all types of shares.  Should use the correct allocator for the share type.
issueID:UIMA-3365
type:Bug
changed files:
texts:DUCC job driver (JD) ERROR client.WorkItemListener onBeforeProcessCASHandler     N/A seqNo:null casId:1602519189 java.lang.NullPointerException
Job 93735.It seems that the first callback expected by JD for work item 659 comes.  However the second callback does not arrive within 60 seconds, so the work items is reaped.  Then, 2 seconds later the missing callback finally (and unexpectedly) arrives causing the NPE in JD.The Job seems to actually run to completion, but is flagged with lost work items.  This makes sense, since if the JP does get the work item it will process it.  However, the JD will begin queuing "extra" work items since it does not understand that such work items are not really lost.  This may increasingly aggravate the problem by having the JD put out to queue more work items than the present JP capacity can handle.
issueID:UIMA-3366
type:Improvement
changed files:
texts:Add selectAt methods
Add new methodsselectAt(jcas, type, int, int) - get all annotations of type at offsetselectSingleAt(jcas, type, int, int) - get single annotation of type at offset
issueID:UIMA-3367
type:Bug
changed files:
texts:DuccAdmin does not show real cause of error
DuccAdmin constructor dumps a wrong reason for failure if it is unable to initialize. The catch() block just says "DuccAdmin was not able to load properties from .." even though the real problem is something else.
issueID:UIMA-3368
type:Bug
changed files:
texts:Ruta and UIMA-AS
Hi,I get errors when applying Ruta rules from an Annotator deployed as a UIMA-AS service. Here's my situation.I have a SimpleAnnotator class that assigns tags to Tokens. So, when I have a test.txt in my input with this content:$ more test.txtA room . ... I get, among other things, the following output<examples:Token xmi:id="21" sofa="1" begin="1" end="2" pos="aTag"/><examples:Token xmi:id="26" sofa="1" begin="3" end="7" pos="anotherTag"/>To get the tags, I use java code as in the attached SimpleAnnotator.java and ruta rules.All's fine when I run this a standard UIMA pipeline. But, if I deploy the annotator in UIMA-AS and I send the same text to the queue created, I get NullPointerException's similar to those:Caused by: java.lang.NullPointerException        at org.apache.uima.cas.impl.FSIndexRepositoryImpl.getIndex(FSIndexRepositoryImpl.java:1334)        at org.apache.uima.cas.impl.CASImpl.getAnnotationIndex(CASImpl.java:3935)        at org.apache.uima.ruta.RutaStream.updateIterators(RutaStream.java:131)        at org.apache.uima.ruta.RutaStream.<init>(RutaStream.java:94)        at org.apache.uima.ruta.RutaStream.<init>(RutaStream.java:138)        at org.apache.uima.ruta.engine.RutaEngine.initializeStream(RutaEngine.java:580)        at org.apache.uima.ruta.engine.RutaEngine.process(RutaEngine.java:440)        at org.apache.uima.analysis_component.JCasAnnotator_ImplBase.process(JCasAnnotator_ImplBase.java:48)        at org.apache.uima.analysis_engine.impl.PrimitiveAnalysisEngine_impl.callAnalysisComponentProcess(PrimitiveAnalysisEngine_impl.java:375)}}and rules are not applied.I can provide an eclipse project including a typesystem and a deployment descriptor if needed.Many thanks for looking into this,Prokopis package org.apache.uima.examples;import java.util.HashMap;import java.util.Map;import java.util.regex.Matcher;import java.util.regex.Pattern;import org.apache.uima.analysis_component.JCasAnnotator_ImplBase;import org.apache.uima.analysis_engine.AnalysisEngineProcessException;import org.apache.uima.jcas.JCas;import org.apache.uima.ruta.engine.Ruta;import org.apache.uima.ruta.engine.RutaEngine;public class SimpleAnnotator extends JCasAnnotator_ImplBase { public void process(JCas aJCas) throws AnalysisEngineProcessException {  String text = aJCas.getDocumentText();        Matcher matcher = Pattern.compile("\\w+").matcher(text);        while(matcher.find()){            Token token = new Token(aJCas, matcher.start(), matcher.end());            token.setPos("aTag");            token.addToIndexes();        }  Map<String, Object> parameters = null;  parameters = new HashMap<String, Object>();  parameters.put(RutaEngine.PARAM_REMOVE_BASICS, true);  parameters.put(RutaEngine.PARAM_SEEDERS, new String[0]);  String rules =     "Token{REGEXP(\"room\")-> Token.pos=\"STOP\"};   \n"    + "Token{REGEXP(Token.pos, \"STOP\")-> Token.pos=\"anotherTag\"};";  try {   Ruta.apply(aJCas.getCas(), rules, parameters);  } catch (Exception e) {   e.printStackTrace();  } }}
issueID:UIMA-3369
type:Task
changed files:
texts:Update internal ducc version to 1.0 for Release
Set internal DUCC version to 1.0.0
issueID:UIMA-337
type:Improvement
changed files:
texts:Should log process begin/end for service adapters
Users requests that service adapters (i.e. stubs for remote services) log messages such as the "Analysis Engine <name> process begin/end" that are already logged for integrated AEs.
issueID:UIMA-3370
type:Bug
changed files:
texts:DUCC&#39;s log4j.xml config file is loaded from the classpath so the wrong one can be used
Need to specify an explicit file, e.g.-Dlog4j.configuration=file:${DUCC_HOME}/resources/log4j.xml
issueID:UIMA-3371
type:Improvement
changed files:
texts:Correct & Improve user-facing messages
The RM currently returns:  Job refused because insufficient resources are availble.Would be better if it included the details that are only in rm.log:  Job refused because only 8 of the 10 requested shares are available.
issueID:UIMA-3372
type:Bug
changed files:
texts:DUCC Incorrect analysis of job state cause RM to free job too soon.
The isCompleting() method of DuccWorkJob should include state "Completing" as a "schedulable" state, otherwise RM will delete the job too soon.
issueID:UIMA-3373
type:Improvement
changed files:
texts:DUCC logging - should set -Dlog4j.configuration when spawning DUCC processes
-Dlog4j.configurationFile='path_to_log4j.xml'The log4j correct config must be enforced to avoid extraneous configs in the classpath from interfering with DUCC's logging.I'll do the scripting that spawns the DUCC daemons and pass to Lou/Burn to do the Orchestrator / CLI part.
issueID:UIMA-3374
type:Improvement
changed files:uimaj-tools/src/main/java/org/apache/uima/tools/viewer/CasAnnotationViewer.java
uimaj-tools/src/main/java/org/apache/uima/tools/viewer/CasAnnotationViewer.java
uimaj-tools/src/main/java/org/apache/uima/tools/viewer/CasAnnotationViewer.java
uimaj-tools/src/main/java/org/apache/uima/tools/docanalyzer/AnnotationViewerDialog.java
uimaj-tools/src/main/java/org/apache/uima/tools/viewer/CasAnnotationViewer.java
uimaj-tools/src/main/java/org/apache/uima/tools/viewer/CasAnnotationViewer.java
texts:A new mode for annotation viewer based on feature values
I'd like to propose adding a new "view mode" in the UIMA Annotation Viewer so that user can pick a specific type of annotations, and then pick a specific feature, and pick specific feature values available so user can see a subset of those annotation objects that have the specific feature values.
issueID:UIMA-3375
type:Bug
changed files:
texts:DUCC CLI only sometimes adds extra site-specific JVM args to job requests
If the request does not supply either process or driver JVM args then the site-specific values in ducc.properties are not added.  Should always be included, but would be better in OR when it constructs the commands for the JD & JP.  Note that all-in-one does not add these site-specific ones.Currently we add -XX:+HeapDumpOnOutOfMemoryError to just the JD but shouldn't this also contain -Xmx300M ?
issueID:UIMA-3376
type:Improvement
changed files:
texts:Ruta: Add option for Greedy Quantifier
Plus Greedy quantifier matches one or more annotations of the same type. A better functionality would be to produce only one annotation with the largest number of annotations matched. So that in the example bellow, only one annotation is produced:Input:    123 456 small small small BigRule:     SW+Matched:  small small small
issueID:UIMA-3377
type:Improvement
changed files:
texts:Introduce inference exceptions in Ruta
Introduce inference/runtime exceptions in Ruta: It happens sometimes that an NPE is thrown because a type was not found or a feature was not resolved. It is hard to find to source of the problems without the workbench or debugging. There should be an exception with more information.
issueID:UIMA-3378
type:Bug
changed files:
texts:DUCC RM Race if job canceled quickly
If a job is canceled immediately after it is submitted it can arrive at RM in state WaitingForResources AND in the same scheduling epoch, a message indicated the job is canceled can arrive.  WaitingForResources usually causes a job to be entered into the RM scheduling lists, but Completed causes it to be deleted and overrides the WaitingForResources.  The bug is that Completed does not check to see if the job ever did actually get entered, and bam! NPE.  The fix is simple, in Scheduler. processCompletion, if the indicated job isn't found in the scheduling list, just ignore and return.
issueID:UIMA-3379
type:Improvement
changed files:
texts:DUCC job driver (JD) should be terminated via Agent, just like JPs
This is a simplification.  No need for JD to exit on its own.  OR already marks JD as Deallocated and Agent will send Signal -9.  This avoids a race between JD voluntary exit and Agent initiated termination.
issueID:UIMA-338
type:Improvement
changed files:uimaj-core/src/main/java/org/apache/uima/util/XMLParser.java
uimaj-core/src/main/java/org/apache/uima/util/impl/XMLParser_impl.java
uimaj-core/src/main/java/org/apache/uima/util/XMLParser.java
uimaj-core/src/main/java/org/apache/uima/util/impl/XMLParser_impl.java
texts:Add method XMLParser.parseFlowControllerDescription
This method is missing.  It's easily implemented as a wrapper for parseResourceSpecifier.
issueID:UIMA-3380
type:Bug
changed files:
texts:UIMA-AS RunRemoteAsyncAE hangs when running with -d option
The UIMA-AS README contains an example how to verify UIMA-AS installation:     runRemoteAsyncAE.sh/cmd tcp://localhost:61616 MeetingDetectorTaeQueue \         -d Deploy_MeetingDetectorTAE.xml \         -c $UIMA_HOME/examples/descriptors/collection_reader/FileSystemCollectionReader.xmlWhen the run completes it is expected that the process exits. But it doesnt. There is no way to force it down (CTRL-C has no effect) other than killing the process.
issueID:UIMA-3381
type:Bug
changed files:
texts:Trim UIMA-AS  dependencies
The uimaj-as-activemq pom declares dependency on activemq-web which in turn has transitive dependencies on many other parts including hadoop,google guiice, jackson and others. This just bloats the classpath with unnecessary dependencies and forced downloads during maven builds. Modify poms to exclude transitive dependencies.
issueID:UIMA-3382
type:Question
changed files:
texts:Ruta: REGEXP from WORDLIST
WORDLIST is defined as a list of text items. What if I have a list of regular expressions that I want to mark as the same type. Is there a command that would do it?My use case is that I want to find medication statements in text, but there is a large variation in spelling and dose description, so regular expressions are a more concise way to cover all possible cases. So I was trying to use syntax below, but the only matches were for those cases where there was a single word without special regex syntax.DECLARE Medication;WORDLIST MedicationList='Medication.regex';Paragraph{-> MARKFAST(Medication, MedicationList, true,1)};What can I change in the rules so that the items in MedicationList are treated as regular expressions.Thank you.
issueID:UIMA-3383
type:Bug
changed files:
texts:UIMA-AS Service process not exiting in response to &#39;q&#39; from cmd line
The UIMA-AS service is not exiting in response to 'q' typed in on the command line.
issueID:UIMA-3384
type:Bug
changed files:
texts:UIMA-AS javadocs are not formatted correctly
It looks like UIMA-AS javadoc is not formatting client API correctly. Marshall discovered that BaseUIMAAsynchronousEngine_impl,createSharedConnection() returns a an instance of a class (SharedConnection) which is an inner class of BaseUIMAAsynchronousEngineCommon_impl. Javadoc insist of using an inner class name with the full package name prefix which makes the column too wide.One possible fix would be to move the inner class to its own file. Defer beyond 2.4.2 release
issueID:UIMA-3385
type:Improvement
changed files:
texts:Make meta data discovery compatible with fat jars
Most fat jar approaches, e.g. Maven assembly, have problems with resources at the same location in the classpath in multiple JARs. E.g. if two JARs being bundled into a fat jar have a types.txt file, only one survives. One option to fix this would be to change the pattern that uimaFIT uses to search for these files, e.g. from classpath*:META-INF/org.apache.uima.fit/types.txt to classpath*:META-INF/org.apache.uima.fit/**/types.txt
issueID:UIMA-3387
type:New Feature
changed files:
texts:Copy list entries from Ruta Query View result
It would be nice, if you could copy list entries, including the related document, from the resulting list in the Ruta Query View directly. So far, it is possible to export the result as a textual list, but the related document is not added.
issueID:UIMA-3388
type:Improvement
changed files:
texts:Improve UIMA-AS JmxMonitor code readability
The JmxMonitor.initialize() uses 'remoteServerURI' for a variable name when really this is a local or in-process server uri, Change comments and code to make it more readable.
issueID:UIMA-3389
type:Bug
changed files:
texts:DUCC RM bypasses node stability for some nodes at recovery
During RM hot-start or even warn-start, work can arrive that has been already assigned to some node, where that node went down while RM was also down.  The design is that RM simply adds all nodes that have assigned work to it's list of live nodes and lets normal NodeStability take it out if it's really not responding.  Unfortunately, RM was notifying the Scheduler object and not the NodeStability object (which will then notify scheduler as well as set up the node for monitoring), so unresponsive nodes never get removed. in this case.
issueID:UIMA-339
type:Improvement
changed files:uimaj-core/src/main/java/org/apache/uima/analysis_engine/AnalysisEngine.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/asb/impl/ASB_impl.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/asb/impl/FlowControllerContainer.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/impl/AnalysisEngineImplBase.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/impl/AnalysisEngineManagementImpl.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/AnalysisEngine.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/asb/impl/ASB_impl.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/asb/impl/FlowControllerContainer.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/impl/AnalysisEngineImplBase.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/impl/AnalysisEngineManagementImpl.java
texts:Support MBean Name Prefix in the additional parameters map passed to produceAE
This is desired for embedding a UIMA AE in an application that uses JMX.  The application should be able to specify a name that will be prefixed to all of the MBean names that the AE generates.  That way the application can control how the UIMA MBeans are organized relative to the application's own MBeans.
issueID:UIMA-3390
type:Bug
changed files:
texts:DUCC job driver (JD) should be more cautious about queuing work items in the presence of failed ones
I think I understand this problem.  Bhavani's job 96348 happens to have excellent characteristics with 1 JP and 1 thread.It seems that one of her work items causes the JP to explode (Croaked).  The work items fails.  The JD marks the work item as Error.  So far so good.  The JD proceeds to queue the next work item for processing not realizing that the lone JP has vanished.  This is a mistake.  Correctly, a new JP is allocated by the Scheduler, and not until its initialization is completed does the longtime queued work item get picked up.The JD should probably be more cautious about queuing work items in the presence of failed ones.
issueID:UIMA-3392
type:Bug
changed files:
texts:Debugging of job driver broken ... port number wrong passed to the JP
The driver's debugging JVM args are passed to the JP instead of the JD
issueID:UIMA-3393
type:Bug
changed files:
texts:UIMA-AS client fails with NPE during recovery after loosing broker connection
UIMA-AS client fails to recover from a lost connection to a broker throwing NPE 02:47:27.332 - 35: org.apache.uima.adapter.jms.client.BaseUIMAAsynchronousEngineCommon_impl.sendAndReceiveCAS: INFO: UIMA AS sendAndReceive Received CAS:null HashCode:8601014 For Processing - Forwarding to sendCAS() on Thread:35java.lang.NullPointerException        at org.apache.uima.adapter.jms.client.ActiveMQMessageSender.getMessageProducer(ActiveMQMessageSender.java:160)        at org.apache.uima.adapter.jms.client.BaseMessageSender.run(BaseMessageSender.java:277)        at java.lang.Thread.run(Unknown Source)02:47:27.336 - 106: org.apache.uima.adapter.jms.client.ActiveMQMessageSender.getMessageProducer: WARNING: java.lang.NullPointerException        at org.apache.uima.adapter.jms.client.ActiveMQMessageSender.getMessageProducer(ActiveMQMessageSender.java:160)        at org.apache.uima.adapter.jms.client.BaseMessageSender.run(BaseMessageSender.java:277)        at java.lang.Thread.run(Unknown Source)
issueID:UIMA-3394
type:Bug
changed files:
texts:CLI option --process_failure_limit has a different default for services & jobs
Default is 20 for jobs & 5 for services.  Since semantics are different (applies only to consecutive init failures in services) we should rename to --instance_failure_limit for services. Also could remove optional site-specific default as hasn't been used and all other defaults are in the code.
issueID:UIMA-3396
type:Bug
changed files:uimaj-core/src/main/java/org/apache/uima/cas/impl/FSIndexRepositoryImpl.java
uimaj-core/src/main/java/org/apache/uima/internal/util/IntVector.java
texts:Wrong method to remove element in delta index journal processing
A user reported an array index out of bounds during XmiSerialization back from a uima-as service.  The stack trace pointed to the processIndexUpdates method; an inspection of that method shows that the remove operation to remove a FeatureStructure (represented by an int) is wrongly treating the int as the index in the particular intset,
issueID:UIMA-3397
type:Bug
changed files:
texts:--process_failures_limit has a different meaning and default in jobs & services
For jobs it is a total, for services it refers to consecutive initialization failures.  Since the semantics & defaults are different a simple fix is to rename the service parameter --instance_failures_limit
issueID:UIMA-3399
type:Improvement
changed files:uimaj-core/src/main/java/org/apache/uima/cas/impl/XCASDeserializer.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/XmiCasDeserializer.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/CASImpl.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FSIndexRepositoryImpl.java
uimaj-core/src/main/java/org/apache/uima/cas/CASRuntimeException.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/TypeSystemImpl.java
uimaj-core/src/main/java/org/apache/uima/internal/util/IntVector.java
texts:More consistent handling of multiple add-to-index behavior for same Feature Structure
UIMA has a somewhat unusual indexing architecture.  You can define indexes (sorted, bag, set), and then add / remove a feature structure (FS) to all of the defined indexes.The design intention (I think) was to support the concept of a FS being indexed, or not.  However, the current design allows some anomalies that behave inconsistently between code being run "locally", versus as remote services (due to how serialization handles this).  Serialization encodes only the concept of a FS being either in an index or not. The problem arises in the edge case where the same identical FS is added to the indexes multiple times.  For local (non-remote) cases, for bag and sorted indexes, the same exact FS would be added multiple times.  This would have the consequences: Iterating would return multiple == FSs. Remove from indexes of a multiply-added FS would reduce the number by 1; the FS would still be in the index unless the last remaining one was removed..For the same code, running remotely, serialization would have "collapsed" the multiple additions into one, so would behave differently.This Jira changes the behavior of "add-to-index" so that  subsequent add-to-indexes of a same identical FS would be a no-op. To cover users who might be exploiting the old behavior, the JVM property "uima.allow_duplicate_add_to_indices", read when the UIMA classes are loaded, would restore the previous behavior.Note that with this change, the UIMA "Set" index still has a distinct purpose , separate from the "Bag" index, because it defines Feature Structure equivalence based not on identity, but rather on specified key feature values being equal.  This change better aligns how code running locally or remotely works.
issueID:UIMA-34
type:Bug
changed files:uimaj-adapter-soap/src/main/java/org/apache/uima/adapter/soap/AxisResourceServiceManager.java
uimaj-adapter-soap/src/main/java/org/apache/uima/adapter/soap/AxisResourceServiceManager.java
uimaj-core/src/main/java/org/apache/uima/pear/tools/InstallationProcessor.java
uimaj-core/src/main/java/org/apache/uima/pear/tools/InstallationProcessor.java
texts:Vinci service deployment descriptor timeoutPeriod parameter does not work.
In the Vinci service deployment descriptor there can be an element:    <parameter name="timeoutPeriod" value="30000"/>This is supposed to be used when there are more concurrent requests on the service than there AnalysisEngine instances to handle them.  The service is supposed to wait at most the specified time (in milliseconds) for an AE instance to become free, and return an error if the timeout elapses.However this is currently unimplemented - services will wait forever in this situation.
issueID:UIMA-3400
type:Task
changed files:
texts:DUCC webserver (WS) images
Employ suitable images for DUCC webserver (WS) and identify opensource download locations, licenses and attributions.
issueID:UIMA-3401
type:Improvement
changed files:
texts:DUCC webserver (WS) tidiness
1. Legacy -> Classic
issueID:UIMA-3402
type:Task
changed files:
texts:DUCC ducc.properties file clean-up

issueID:UIMA-3403
type:Bug
changed files:
texts:selectPreceding() does not return preceding for last annotation
selectPreceding() does not return the preceding element for the last element in the CAS if one is looking for a different annotation type than the anchor.See the test below.If the anchor is a token and I want the preceding tokens, everything is fine, but when I use a token anchor to get the preceding lemmas, no lemma is returned for the last token in the CAS.Offset are exactly the same so the behaviour is unexpected.@Test    public void test()         throws Exception     {        String testDocument = "This is a test document .\nIt is quite short .\n";        AnalysisEngine engine = AnalysisEngineFactory.createEngine(NoOpAnnotator.class);        JCas jcas = engine.newJCas();        TokenBuilder<Token, Sentence> tb = TokenBuilder.create(Token.class, Sentence.class);        tb.buildTokens(jcas, testDocument);        engine.process(jcas);                for (Token token : JCasUtil.select(jcas, Token.class)) {            Lemma lemma = new Lemma(jcas, token.getBegin(), token.getEnd());            lemma.addToIndexes();                  }        for (Token token : JCasUtil.select(jcas, Token.class)) {//            try {//                List<Token> previous = JCasUtil.selectPreceding(Token.class, token, 1);//                System.out.println(previous.get(0).getCoveredText());//            }//            catch (IndexOutOfBoundsException e) {//                System.out.println(token);//            }            try {                List<Lemma> previous = JCasUtil.selectPreceding(Lemma.class, token, 1);                System.out.println(previous.get(0).getCoveredText());            }            catch (IndexOutOfBoundsException e) {                System.out.println(token);            }        }    }
issueID:UIMA-3404
type:Bug
changed files:uimaj-core/src/main/java/org/apache/uima/analysis_engine/impl/AnalysisEngineDescription_impl.java
uimaj-core/src/main/java/org/apache/uima/resource/metadata/impl/MetaDataObject_impl.java
uimaj-core/src/main/java/org/apache/uima/util/impl/SaxDeserializer_impl.java
texts:Correct faulty merge from svn branch "xmlComments"
Back in 2011, a branch, "xmlComments" was created to work on issue UIMA-239.  It appears that some of the changes made for this and for UIMA-2155 got into the branch, but were never merged into the trunk.  Investigation shows the following files and change sets are possibly in need of merging into the current trunk, from these two issues:The branch svn history shows two revisions not merged: 1187355 and 1202771.Cross checking this with the mentioned UIMA jira issues:UIMA-239:  found 2 files changed:https://fisheye6.atlassian.com/viewrep/uimaj/branches/xmlComments/uimaj-core/src/main/java/org/apache/uima/analysis_engine/impl/AnalysisEngineDescription_impl.java?r1=&r2=1187355 https://fisheye6.atlassian.com/viewrep/uimaj/branches/xmlComments/uimaj-core/src/main/java/org/apache/uima/resource/metadata/impl/MetaDataObject_impl.java?r1=&r2=1187355 UIMA-2155:Found 1 file changed:https://fisheye6.atlassian.com/viewrep/uimaj/branches/xmlComments/uimaj-core/src/main/java/org/apache/uima/util/impl/SaxDeserializer_impl.java?r1=&r2=1202771 For entire xmlComments branch, the full list of changes seems consistent with these above:.https://fisheye6.atlassian.com/changelog/~br=xmlComments/uimaj Use this information to merge these changes back into trunk.
issueID:UIMA-3405
type:Improvement
changed files:
texts:DUCC SM Rework
Rework for SM, post Release.  Eliminate code for implicit and submitted services, clean up state machine, refactor ServiceSet to separate out instance management, provide for pingers to better monitor error restart and schedule increase / decrease in services, establish controls to prevent services from overrunning system resources, etc.
issueID:UIMA-3406
type:Bug
changed files:
texts:UIMA-AS RunRemoteAsyncAE should exit when CR throws exception
When the CR throws an exception the RunRemoteAsyncAE process should exit.
issueID:UIMA-3407
type:Task
changed files:
texts:Update UIMA website for DUCC release
This issue to cover updates to download, documentation and possibly other UIMA website pages.
issueID:UIMA-3408
type:Bug
changed files:
texts:Ruta: Missing matches with dynamic anchoring
Dynamic anchoring misses matches.For instance, given the input fileA, B and C.the following script does not match the input using dynamic anchoring:PACKAGE test;DECLARE A,C,ENUM;CW {-> A};"and" -> C;A (COMMA A)* @C A {->MARK(ENUM,1,4)};
issueID:UIMA-3409
type:Improvement
changed files:
texts:Ruta: resolve uimaFIT engine dependencies from runtime eclipse classpath
The script editor does not find uimaFIT engines provided by eclipse plugins when running Ruta in development mode without starting a new VM.
issueID:UIMA-341
type:New Feature
changed files:uimaj-cpe/src/main/java/org/apache/uima/collection/impl/base_cpm/container/CasProcessorConfiguration.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/cpm/container/CPEFactory.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/cpm/container/CasProcessorConfigurationJAXBImpl.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/cpm/container/NetworkCasProcessorImpl.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/cpm/container/deployer/CPEDeployerDefaultImpl.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/cpm/container/deployer/DeployFactory.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/cpm/container/deployer/JavaApplication.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/cpm/container/deployer/NonJavaApplication.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/cpm/container/deployer/socket/SocketCasProcessorDeployer.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/cpm/container/deployer/vinci/VinciCasProcessorDeployer.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/cpm/engine/CPMEngine.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/metadata/cpe/CasProcessorCpeObject.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/metadata/cpe/CpeComponentDescriptorImpl.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/metadata/cpe/CpeLocalCasProcessorImpl.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/base_cpm/container/CasProcessorConfiguration.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/cpm/container/CPEFactory.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/cpm/container/CasProcessorConfigurationJAXBImpl.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/cpm/container/NetworkCasProcessorImpl.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/cpm/container/deployer/CPEDeployerDefaultImpl.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/cpm/container/deployer/DeployFactory.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/cpm/container/deployer/JavaApplication.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/cpm/container/deployer/NonJavaApplication.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/cpm/container/deployer/socket/SocketCasProcessorDeployer.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/cpm/container/deployer/vinci/VinciCasProcessorDeployer.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/cpm/engine/CPMEngine.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/metadata/cpe/CasProcessorCpeObject.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/metadata/cpe/CpeComponentDescriptorImpl.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/metadata/cpe/CpeLocalCasProcessorImpl.java
uimaj-tools/src/main/java/org/apache/uima/tools/cpm/CpmPanel.java
uimaj-tools/src/main/java/org/apache/uima/tools/cpm/CpmPanel.java
uimaj-adapter-vinci/src/main/java/org/apache/uima/adapter/vinci/util/Descriptor.java
uimaj-adapter-vinci/src/main/java/org/apache/uima/adapter/vinci/util/Descriptor.java
uimaj-core/src/main/java/org/apache/uima/collection/metadata/CpeCasProcessor.java
uimaj-core/src/main/java/org/apache/uima/collection/metadata/CpeComponentDescriptor.java
uimaj-core/src/main/java/org/apache/uima/collection/metadata/CpeCasProcessor.java
uimaj-core/src/main/java/org/apache/uima/collection/metadata/CpeComponentDescriptor.java
texts:Support <import> in CPE Descriptor
CPE Descriptors should support the same import mechanism as other UIMA descriptors.
issueID:UIMA-3410
type:Bug
changed files:
texts:DUCC should use "small" key so as not to require Unrestricted JCE Policy files

issueID:UIMA-3411
type:Bug
changed files:
texts:DUCC Service query API doesn&#39;t return query list
Misspelled getServiceDescriptions in query object so the parent's method was invoked, returning null. sigh.
issueID:UIMA-3412
type:Bug
changed files:
texts:DUCC post-install misconfiguring ducc_head and java
ducc_post_install originally assumed ducc.head and ducc.jvm should be null in the base ducc.properties in the tarball, and would fill them in accordingly.  Now we have default junk values for these, which need to be checked for as the flag that post_install should update them.
issueID:UIMA-3413
type:Improvement
changed files:uimaj-core/src/main/java/org/apache/uima/internal/util/IntVector.java
texts:improve remove-from-index performance
Although UIMA-2434 improved time to remove from a sorted index, removal time from bag indexes is still likely to be order(number-of-elements that are in the index), because a sequential scan is done.  The ordering of elements in bag indexes is somewhat likely to ordered in ascending fs heap index order.  This can be exploited to improve the performance of remove-from-index.
issueID:UIMA-3414
type:Improvement
changed files:
texts:DUCC orchestrator (OR) by default should not employ lock file

issueID:UIMA-3415
type:Bug
changed files:uimaj-core/src/main/java/org/apache/uima/internal/util/rb_trees/Int2IntRBT.java
uimaj-core/src/main/java/org/apache/uima/internal/util/rb_trees/IntArrayRBT.java
uimaj-core/src/main/java/org/apache/uima/internal/util/rb_trees/IntArrayRBTcommon.java
uimaj-core/src/main/java/org/apache/uima/internal/util/rb_trees/Int2IntRBT.java
uimaj-core/src/main/java/org/apache/uima/internal/util/rb_trees/IntArrayRBT.java
uimaj-core/src/main/java/org/apache/uima/internal/util/rb_trees/IntArrayRBT.java
texts:IntArrayRBT throwing ArrayIndexOutOfBounds
A new test case which added and removed thousands of items from a set index, multiple times, eventually hit an index-out-of-bounds.
issueID:UIMA-3416
type:Improvement
changed files:uimaj-core/src/main/java/org/apache/uima/internal/util/rb_trees/Int2IntRBT.java
uimaj-core/src/main/java/org/apache/uima/internal/util/rb_trees/IntArrayRBT.java
uimaj-core/src/main/java/org/apache/uima/internal/util/rb_trees/IntArrayRBT.java
texts:IntArrayRBT has no recovery for space used by deleted nodes
When entries are deleted from IntArrayRBT (used for UIMA "Set" indexes), the space used by those entries is not reclaimed. A simple fix would be to notice when the "size" went to 0, and then, if the array space used was large (say, at the multiplication-limit size), reset the storage back to the initial size. A more complex fix could be to put freed-up nodes on a free list and reuse them (this will have locality-of-reference issues, though).
issueID:UIMA-3417
type:Bug
changed files:
texts:Change uima-ducc-duccdocs pom.xml to prevent latex from running
To compile ducc docs one needs latex. Its a huge download which exceeds 1G. Modify project pom to only build the docs when maven profile is explicitly set. By default, the docs are not built when running mvn install, Toenable latex build, install latex and run:mvn install -Pbuild-duccdocs
issueID:UIMA-3418
type:Bug
changed files:
texts:Fix unused imports in Ducc
Remove unused imports from ducc projects
issueID:UIMA-3419
type:Bug
changed files:
texts:Maven RAT found DUCC files with no Apache License header
Add Apache License headers to files found by RAT
issueID:UIMA-342
type:New Feature
changed files:
texts:make jcasgen able to used other templates
Add interface to jcasgen to enable it to receive alternate implementations of the template classes.  Change the jet expander code to allow adding implements clause to header.  Change templates to include implements the interface class for the templates.  Add interface class for the templates.
issueID:UIMA-3420
type:Bug
changed files:
texts:Fix javadocs warnings in Ducc
When doing a build with release profile, the javadoc shows Warnings on number of projects related to bad method headers
issueID:UIMA-3422
type:Bug
changed files:
texts:Remove uima-ducc-duccbook project from DUCC
uima-ducc-duccbook is no longer needed as it has been replaced by uima-ducc-duccdocs.
issueID:UIMA-3423
type:Bug
changed files:
texts:Remove unused files from DUCCs&#39; web server opensources
The opensource components used by Ducc WebServer include a number of directories which are not used by ducc. Remove them from the svn
issueID:UIMA-3424
type:Improvement
changed files:
texts:DUCC webserver (WS) should have visual indication of debug jobs
Users re-submitting work after previously employing debug may forget to remove debug options, thus giving unexpected debug behavior.Webserver should give visual clue that debug was specified to help user better understand work status.
issueID:UIMA-3425
type:Bug
changed files:
texts:Ruta: MultiTreeWordList Constructor
I've had problems using the MultiTreeWordList. I think one constructor misses initialization of the root node.Possible patch:Index: MultiTreeWordList.java===================================================================&#8212; MultiTreeWordList.java (revision 1521373)+++ MultiTreeWordList.java (working copy)@@ -132,6 +132,7 @@ path of the file to create a TextWordList from    */   public MultiTreeWordList(String[] pathnames) throws IOException {+    this.root = new MultiTextNode();     for (String pathname : pathnames) {       load(new FileSystemResource(pathname));     }
issueID:UIMA-3426
type:Bug
changed files:
texts:DUCC webserver (WS) should make obvious when Jobs are in debug
Put word "debug" in class column; show "bug" in visual mode.
issueID:UIMA-3427
type:Improvement
changed files:
texts:UIMA NOTICE file - better conformance to Apache specs
The NOTICE file has the wrong form of copyright - it has an (incorrect) end date, and it should have no end date. See: http://apache.org/legal/src-headers.html#noticeThe NOTICE file should not have items not legally required; remove the NOTICE about the SVG Icons.  The license is sufficient.
issueID:UIMA-3428
type:Bug
changed files:
texts:Current default of user-before-ducc exposes DUCC daemons to back-level jars
Defaulting to ducc-before-user ensures that DUCC is safe but may break a user application if DUCC is using a back-level 3rd-party jar.  Reduce this possibility by adding the minimum set of DUCC jars to users classpaths.
issueID:UIMA-3429
type:Improvement
changed files:uimaj-core/src/main/java/org/apache/uima/cas/CASRuntimeException.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/CASImpl.java
texts:Throw exception if setting FS reference to FS not in CAS
It would be helpful if adding a feature structure reference to a CAS for a feature structure that does not exist in that CAS failed quickly and with a clear exception as to the cause. In my case I had two CASes and referred to a feature structure in one from a feature structure in another. The exception was a cryptic NPE in BinaryCasSerDes4 during CAS serialization.
issueID:UIMA-343
type:Sub-task
changed files:uimaj-cpe/src/main/java/org/apache/uima/collection/impl/metadata/cpe/CpeComponentDescriptorImpl.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/metadata/cpe/CpeComponentDescriptorImpl.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/metadata/cpe/CpeComponentDescriptorImpl.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/metadata/cpe/CpeComponentDescriptorImpl.java
texts:Framework support for import in CPE descriptor

issueID:UIMA-3430
type:Bug
changed files:
texts:Memory size units should be consistent - always a number of GB
The memory size is for 2 requests a number of GB and for a 3rd can also be followed by KB MB GD TB.  For now restrict to a number of GB in the CLI
issueID:UIMA-3431
type:New Feature
changed files:
texts:DUCC webserver (WS) should be config&#39;d to disable login out of the box for Rel 1.0
Linux Login is not well tested and will be deferred to later a later release or patch.
issueID:UIMA-3432
type:Bug
changed files:
texts:DUCC webserver (WS) canceled job should show better reason when hovering over CanceledByAministrator
The WS canceled Job 105387.  The Reason shown on the Jobs page was CancledByAdministrator.  It was canceled because the user had specified cancel_on_interrupt and the ducc.properties config'd time of 5 minutes had elapsed and no ping from the job submitter had arrived.The hover showsjob canceled by userid ducc:It should probably showjob canceled by userid ducc: submitter terminated, therefore canceled automatically
issueID:UIMA-3433
type:Bug
changed files:
texts:UIMA-AS cleanup of semaphore testing wrong thing
There is a test to clear a semaphore in uima-as as part of the stop method, which does  // release all permits   if ( semaphore != null ) {    while ( semaphore.availablePermits() > 0) {      semaphore.release();      }   }Stepping through this shows that each call to release() increases (not decreases) the number of availablePermits.Replace with drainPermits(), which appears to be the intent.
issueID:UIMA-3434
type:Bug
changed files:
texts:Remove duplicate slf4j jars to avoid "multiple bindings" message

issueID:UIMA-3435
type:Improvement
changed files:
texts:DUCC webserver (WS) should display home=/... when hovering over cluster name
See summary.
issueID:UIMA-3438
type:Bug
changed files:
texts:DuccSchedulerClasses may not find DUCC_HOME
If DuccSchedulerClasses is used by an application it will fail if DUCC_HOME is not in the System properties
issueID:UIMA-3439
type:Bug
changed files:
texts:Fix small inconsistencies in DUCC docs
Some defaults don't agree with the code
issueID:UIMA-344
type:Sub-task
changed files:uimaj-core/src/main/java/org/apache/uima/util/FileUtils.java
uimaj-core/src/main/java/org/apache/uima/util/FileUtils.java
uimaj-tools/src/main/java/org/apache/uima/tools/cpm/CpmPanel.java
uimaj-tools/src/main/java/org/apache/uima/tools/cpm/CpmPanel.java
texts:CPE GUI should create <import> elements instead of <include>
Perhaps this may be configurable.
issueID:UIMA-3440
type:Improvement
changed files:
texts:DUCC Agent should reset process exit code to 0
When DUCC kills a process (due to deallocation) it captures its exit code and passes along to the OR and eventually to the WS. The exit code indicates that the process was killed which is true but conveys a wrong message to the owner of the process. It appears as if there was something wrong with that process. Modify agent to reset exit code to 0, to indicate that it exited normally.
issueID:UIMA-3441
type:New Feature
changed files:
texts:Ruta: Extend classpath for Annotation Test run
Using the Annotation Test component of Ruta fails when some script imports Java/uimaFIT analysis engines from workspace projects because the RerunActionHandler does not extend the classpath.
issueID:UIMA-3442
type:Bug
changed files:
texts:DUCC pre-1.0 has classes that look like tests in the main?
I see some classes that look like tests in the main (non-test) source tree of atleast one project: uima-ducc-cli (see for instance,org.apache.uima.ducc.cli.ws.json, there are classes "MachineFactsTest" and"ReservationFactsTest".I think these should be moved to the normal maven spot (convention overconfiguration  ), so they get run automatically during the build (they wouldneed to be turned into junit tests too).A scan of the code shows 9 classes with the word "test" as part of the name, andnone of these are in the src/test/java conventional spot, so none of the testsare being run as part of the build, I think (I didn't check...).
issueID:UIMA-3443
type:Task
changed files:
texts:Do export clearance work for UIMA-DUCC

issueID:UIMA-3444
type:Bug
changed files:
texts:DUCC webserver (WS) Request Reservation button should employ no units (presumed GB)

issueID:UIMA-3445
type:Improvement
changed files:
texts:Ruta: Warnings in Ruta Query View
It would be nice to have (at least minimalistic) error messages / warnings in the Ruta Query View.I have attached a patch that provides a minimalistic error message, if, for example, a typename is misspelled.
issueID:UIMA-3446
type:Bug
changed files:
texts:Remove unused classes
Some code is no longer (or was never) used so no point in confusing developers ... will still be in svn
issueID:UIMA-3447
type:Improvement
changed files:
texts:DUCC webserver (WS) pare down opensources to only that which is needed

issueID:UIMA-3449
type:Bug
changed files:
texts:DUCC webserver (WS) documentation should have some screen shots
There's quite a bit of documentation on the web server.  I think this could beenhanced if there was a picture readers could look at.  I think the docbooksystem has some kind of callouts linking things on the picture to text - doesLaTeX have something similar?A few screenshots of some of the important pages would be nice!
issueID:UIMA-345
type:Sub-task
changed files:
texts:Documentation for <import> in CPE Descriptor

issueID:UIMA-3450
type:Task
changed files:
texts:Remove spurious text from system tests and insure complete comments.
Remove references to bluej and ibm leftover from the origins of the system tests.  Remove userids, email, etc.  Insure proper and complete commenting.
issueID:UIMA-3451
type:Bug
changed files:
texts:DUCC SM Common processing for instance death
SM should use common processing when OR reports instance death for both modified, and for defunct service instances.To replicate problem: create an instance that dies in resource allocation so it never advances to Initializing.  This sends it directly to handleDeletedServices in ServiceHandler which does not currently manage restart / redrive policies.The restart/redrive code in handleModifiedServices should be made common and called from both 'handle' methods.
issueID:UIMA-3452
type:Improvement
changed files:
texts:DUCCs jars should include a version number
Seems like DUCC follows a wrong example set by UIMA which is not to include version number in a jar name. Most Apache projects follow a convention which includes the version number. Modify poms to append a version number. Change CLI pom to name jars with versions.
issueID:UIMA-3453
type:Improvement
changed files:
texts:Remove jUnit from DUCC assembly script
For some reason jUnit was added as  Ducc's dependency in the assembly script. This is The jUnit jar is not necessary for Ducc's runtime.
issueID:UIMA-3454
type:Bug
changed files:
texts:DUCC install: sign_jconsole_jar should detect jdk absence (e.g. not finding lib/jconsole.jar) and give informative message
ducc_post_install sets the jvm in ducc.properties (or the administrator may have).  sign_jconsole_jar expects to find $(java_home)/bin/jconsole.jar.  Give appropriate failure message if not found.
issueID:UIMA-3455
type:Task
changed files:
texts:Move Ruta one level up in SVN
Move the Ruta sources one level up in svn.
issueID:UIMA-3456
type:Task
changed files:
texts:ask for git mirror
file ticket on INFRA to ask for git mirror &#8211; proposed text:We would like to have a git mirror of the Apache UIMA SVN. As the project has many submodules with individual trunk/branches/tags structure we would like the following mapping:uimaj   uima-uimaj.gituimacpp   uima-uimacpp.gituima-as   uima-as.gitaddons   uima-addons.gitsandbox   uima-sandbox.git (ignore sandbox/uima-ducc)ruta    uima-ruta.gitsandbox/uima-ducc uima-ducc.gituimafit   uima-uimafit.gitsite    uima-site.gitbuild    uima-build.git (ignore build/archive)ignore eclipse-packagingsAll of these follow the standard SVN layout.
issueID:UIMA-3457
type:Bug
changed files:
texts:DUCC Threaded scripting can hang
The scripting must capture keyboard interrupts and properly drain / join the queues or they will 'hang'.  Affects start_ducc, stop_ducc, check_ducc, start_sim and maybe stop_sim.
issueID:UIMA-3458
type:Test
changed files:
texts:enable test on windows for DUCC as part of build
The test of the crypto facilities breaks when the build is run on Windows, because it does an exec of the command "chmod", which doesn't work on windows.  Bypass this if running on Windows.
issueID:UIMA-3459
type:Bug
changed files:
texts:Remove .jazzignore from uima-ducc-spawn project
Somehow the .jazzignore has gotten into the svn. Delete this file as it is not needed
issueID:UIMA-3460
type:Bug
changed files:
texts:Update DUCCs assembly to remove ducc_runtime folder
Duccs assembly script copies everything into ducc_runtime folder in the tarball. Seems a bit odd to only have ducc_runtime folder in root. The script should copy files and folders into root instead.
issueID:UIMA-3461
type:Bug
changed files:
texts:DUCC uima-ducc-examples has extraneous jar files in folder lib: ducc- and site-authenticator.jar
These should be removed.
issueID:UIMA-3462
type:Bug
changed files:
texts:Please delete old releases from mirroring system
To reduce the load on the ASF mirrors, projects are required to delete old releases &#91;1&#93;Please can you remove all non-current releases?Thanks!&#91;Note that older releases are always available from the ASF archive server&#93;&#91;1&#93; http://www.apache.org/dev/release.html#when-to-archive
issueID:UIMA-3463
type:Bug
changed files:
texts:Remove DUCCs dependency on SpringFramework&#39;s AOP jars
Seems like DUCC should not depend on SpingFramework's AOP jars. Remove dependency on aopalliance.jar
issueID:UIMA-3464
type:Bug
changed files:
texts:Refactor DUCC dependencies in poms
Currently Ducc's subproject poms are minimal and only declare dependency on ducc-common and ducc-transport. The rest of dependencies are inherited from Ducc's parent pom.This approach forces all subprojects to have common dependencies even though some may not need all of them. Analyze each project to find real dependencies and refactor poms according to what is needed/necessary  for the project.
issueID:UIMA-3465
type:Bug
changed files:
texts:DUCC webserver (WS) "display" issues
a) The docs say this is accessed at port 42133.  Is this configurable? b) The docs mention two display modes: scroll mode and classic mode.  The website has "Table Style" for scroll/classic.  Is Table Style the same as "Display Modes"? c) A recent version of the ducc webserver I tried (not sure if it's the identical-to-trunk level), had some issues: In Google Chrome browser,  switching to Scroll mode made the header row have  column widths that were much wider than the rest of the data in the table, so  they didn't line up (even after trying both kinds of "reloading");  Firefox  didn't have this issue.  Is there a "recommended/required" browser people need  to use? Another issue was (in Firefox) the header columns don't re-size (in scroll mode)  when you change the browser width, even after refreshing with the "refresh"  button in the web page (but they do resize if you use firefox's own refresh button). After picking a sort index, the direction arrows become very hard to see on that  column (the color / size makes it hard to see them).  There's no apparant way to  "undo" the sort picking; you can sort on another column, of course.  (And, I  discovered that if you do a firefox-refresh (not the special in-the-page refresh  button), it seems to undo the sort - not sure this is working as designed though). Is any kind of multi-column sorting supported?  If I sort on one column, and  then pick on another column as the sort key, do items that have now have the  same sort key value, retain the ordering they had before the resort?
issueID:UIMA-3466
type:Bug
changed files:
texts:uima-addons missing from downloads page
Unless I can't see it (  - not a 0 probability...) the uima-addons download link has disappeared from the download page.
issueID:UIMA-3467
type:Bug
changed files:
texts:Env vars holding the log file name are not set for APs
The environment variables ducc.process.log.dir & ducc.process.log.basename are set only for DUCC jobs.  But an all-in-one job is submitted as an AP so is unable to produce any extra logs with name similar to the DUCC log.  Also other APs may wish to create similar logs.
issueID:UIMA-3468
type:Bug
changed files:
texts:DUCC webserver (WS) browser sorting on Job Details -> Processes tab is broken
Problem was introduced when row for jd.err.log was added.  Fix is to return entry for each column.  Each empty column is to be represented by <td></td>.
issueID:UIMA-3469
type:Improvement
changed files:
texts:Ruta: Annotation Browser View Extensions
I would like to contribute some small extensions to the Annotation Browser View.#1:Tooltip for full type name of selected type node.#2:Copy full type name of a selected type to the clipboard by "ctrl+c".#3:A button that checks all visible types in the tree, and a button that unchecks all types.Hope the extensions will be useful,Martin
issueID:UIMA-347
type:Bug
changed files:uimaj-core/src/main/java/org/apache/uima/analysis_engine/impl/AnalysisEngineImplBase.java
uimaj-core/src/main/java/org/apache/uima/uimacpp/UimacppAnalysisComponent.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/impl/AnalysisEngineImplBase.java
uimaj-core/src/main/java/org/apache/uima/uimacpp/UimacppAnalysisComponent.java
texts:Custom indexes defined in C++ annotators are ignored
Fix affects both C++ and Java releases
issueID:UIMA-3471
type:Bug
changed files:
texts:Ruta: Arrays in Annotation Browser View
The Annotation Browser View does not handle Array features (StringArray etc.) other than ArrayFS.
issueID:UIMA-3472
type:Task
changed files:
texts:DUCC Clean up latex build
Build ant script callable from the maven pom to build docs because the plugin isn't adequate Remove all bluej, ibm, and userid references Try to eliminate the warnings Fix broken cross references Add APACHE / UIMA boiler plate at beginning Set MIME type tor .tex files
issueID:UIMA-3473
type:Task
changed files:
texts:DUCC Make system tests work under reorganized ducc_runtime

issueID:UIMA-3474
type:Documentation
changed files:
texts:DUCC Install Guide should explain webserver login enablement

issueID:UIMA-3475
type:Improvement
changed files:
texts:DUCC job driver (JD) should employ logger at debug rather then warn level for "out of order"  UIMA-AS client callbacks
Users may become unnecessarily concerned seeing warnings that are of no consequence to them.
issueID:UIMA-3476
type:Improvement
changed files:
texts:Automate version mgmt in DUCCs README and RELEASE_NOTES
Currently, DUCCs README and RELEASE_NOTES contain DUCCs version as static text. This becomes a chore to maintain going forward. Find a way to automate version mgmt in both of these files.
issueID:UIMA-3477
type:Improvement
changed files:uimaj-core/src/main/java/org/apache/uima/resource/metadata/impl/MetaDataObject_impl.java
texts:Allow XMLizable.toXML(ContentHandler) to use ContentHandlers other than the internal UIMA one
A user reports failures when they try to substitute their own special version of ContentHandler in the toXML method.  This is because, internally, we only are supporting the internal CharacterValidatingContentHandler (an internal UIMA Class).  Improve this by supporting other implementations of the ContentHandler abstract class.
issueID:UIMA-3478
type:Bug
changed files:
texts:Remove JodaTime from DUCCs common Utils.java
Remove method formatDateTime() from common Utils.java. No longer used
issueID:UIMA-3479
type:Bug
changed files:
texts:DUCC assembly script should fetch saxon from maven repo instead of svn
Currently saxon jar is stored in the svn. Since saxon is now in maven repo we should remove saxon from svn and fetch it from the repo. Modify Ducc's assembly script and parent pom.
issueID:UIMA-348
type:Improvement
changed files:uimaj-core/src/main/java/org/apache/uima/analysis_engine/AnalysisEngine.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/AnalysisEngine.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/impl/AggregateAnalysisEngine_impl.java
uimaj-core/src/main/java/org/apache/uima/flow/impl/FixedFlowController.java
uimaj-core/src/main/java/org/apache/uima/resource/ResourceInitializationException.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/impl/AggregateAnalysisEngine_impl.java
uimaj-core/src/main/java/org/apache/uima/flow/impl/FixedFlowController.java
uimaj-core/src/main/java/org/apache/uima/resource/ResourceInitializationException.java
texts:CollectionProcessComplete should execute in fixedFlow order if there is a fixedFlow
Otherwise it's not possible to use an Aggregate AE in place of a CPE pipeline without changing its behavior.
issueID:UIMA-3481
type:Improvement
changed files:
texts:make build work under Java 8
Javadoc plugin fails in Java 8 due to http://stackoverflow.com/questions/15886209/maven-is-not-working-in-java-8-when-javadoc-tags-are-incompleteAdjust configuration to make incomplete javadoc annotations not fail the build, but just be warnings.
issueID:UIMA-3482
type:Bug
changed files:
texts:Ruta: Error highlighting for unknown types in inlined rules
The editor does not highlight (or check) missing types used in inlined rules.For Example:CONCEPT_ROOT (defined in a type system that is not available in the script) is not marked as a missing type for the inlined rule:SENTENCE -> {  (CONCEPT_ROOT.isAttribute == false) {->ERR};};
issueID:UIMA-3483
type:Bug
changed files:
texts:Ruta: Setting features of a created annotation according to the matched annotation
I would like to create an annotation with one attribute that takes the value of an attribute of the matched annotation.For example:DECLARE Annotation TMP_VALUE (INT resolvedByBegin);CONCEPT_ROOT {  ->CREATE(TMP_VALUE, "resolvedByBegin" = CONCEPT_ROOT.resolvedBy.begin)};where resolvedBy is an annotation feature of CONCEPT_ROOT.
issueID:UIMA-3486
type:Bug
changed files:
texts:Apache UIMA-AS Eclipse plugin (2.4.2) failed in installation
The http://www.apache.org/dist/uima/eclipse-update-site plugin failed in installation on Eclipse (Version: Kepler Service Release 1 Build id: 20130919-0819). It's relation to the UIMA-AS Deployment Descriptor Editor 2.4.2. only. The Error messages show that there are no 2.4.2 version files are available/staged on in the expected location: http://www.apache.org/dist/uima/eclipse-update-site/uima-as/ .UIMA Eclipse and UIMA Ruta are installed fine. I did not find any open bug against it.
issueID:UIMA-3487
type:Bug
changed files:
texts:Trailing blanks should be stripped from values in ducc.properties

issueID:UIMA-3489
type:Bug
changed files:
texts:DUCC Failed service instance reason should not be EOJ
The problem is this is recorded as a clean, normal end of job with no error indication internally.  The ending state and completion reported by OR is this:state[ Completed ] completion[ EndOfJob ].  The completion should instead have some sort of error indicator, otherwise SM doesn't know it's an error exit.
issueID:UIMA-349
type:New Feature
changed files:
texts:create annotator performance test utility
the annotator performance test utility should help the developers to check the performance of an annotator. The goal is to just pass the annotator descriptor and a test file set to the annotator performance test utility that runs the performance tests based on these settings.The output should be a performance result that contains all necessary information about the run.
issueID:UIMA-3490
type:Bug
changed files:
texts:Remove JConsole.java from DUCC webserver
It looks like JConsole.java class is only needed for compilation. Its sole reason for being is to be able to compile JConsoleWrapper.java which needs it. -Modify JConsoleWrapper.java to use java reflection to call java's JConsole class at runtime. -Remove JConsole.java from the webserver project
issueID:UIMA-3491
type:Dependency upgrade
changed files:
texts:DUCC webserver (WS) abandon use of images having CC-BY licenses
There's a very long discussion going on in the apache-legal discuss list about this, with the IBM Lawyer stating:AL2.0 licensed code, by itself, is easy for a commercial user to consume.  AL2.0 licensed code, with embedded CC-BY code, is not.
issueID:UIMA-3492
type:Bug
changed files:
texts:DUCC CLI (admin) pam_test broken
Reorganization of folders comprising jar files caused admin/pam_test python script to reference wrong classpath.
issueID:UIMA-3493
type:Bug
changed files:
texts:Ruta language extensions miss support of list expressions as agruments
Ruta language extensions support not list expression as agruments: The grammar refers to argument, which misses the list expression.
issueID:UIMA-3494
type:Bug
changed files:
texts:DUCC webserver (WS) should explain (in hover?) how prediction is calculated
Also, is prediction "accurate"?
issueID:UIMA-3495
type:New Feature
changed files:
texts:Report ambiguous types in Ruta Editor
Report ambiguous types in the Ruta Editor of the Ruta Workbench, see for example UIMA-3292 or UIMA-3322
issueID:UIMA-3496
type:Bug
changed files:
texts:DUCC Automanaged broker won&#39;t shutdown if jmx port is changed
If the broker jmx port is changed, the automanaged broker shutdown needs to specify the correct jmx url or the shutdown will fail with connection refused.
issueID:UIMA-3497
type:Bug
changed files:
texts:CLI should not use the environment to find DUCC_HOME
DUCC_HOME should be defined by the location of the CLI jar the application uses, or by the location of the invoking script.  If an environment variable takes precedence then a request could be sent to a ducc runtime from an incompatible CLI jar.  For the same reason if the DUCC_HOME system property is set it must match the location of the invoking program.Note that any environment variable including DUCC_HOME may be used by the CLI to resolve placeholders in the user's options.
issueID:UIMA-3499
type:Bug
changed files:
texts:DUCC Minor fixes picked up by Findbugs
1.  RM: missing break in case statement, NodepoolScheduler:9052.  RM Use Double.isNan to check for Nan, RmJob:963
issueID:UIMA-350
type:Improvement
changed files:
texts:add performance test for WhitespaceTokenizer

issueID:UIMA-3500
type:Improvement
changed files:
texts:update jcasgen templates to generate Javdoc comments that pass Java8 default lint checking
Javadocs for Java 8 have (by default) "lint" checking enabled.  The Javadocs generated by JCasGen, many of which have elements needed by JCasGen itself (the @generated annotations, for example), are missing the @param and @return elements for many of the functions; these are flagged by the lint checker.  Fix these to be valid Javadoc comments by adding these elements back in.
issueID:UIMA-3501
type:Improvement
changed files:
texts:Eclipse update site build fails without "clean" sometimes
If you run the eclipse-update-site build 2x, not in -Papache-release mode, it doesn't clear out the target eclipse-update-site/subsite (on purpose - to avoid getting the older versions of things, in case you're testing that...).The step where it runs the Eclipse FeaturesAndBundlesPublisher seems to notice that older versions of things are in the target repository, with the same version #s, and it won't update them.  But it doesn't report any issues.  So if you forget to do "mvn clean install" and just do "mvn install" it looks like it makes an updated site, but actually, it doesn't...  Fix this with a silly workaround (because I don't know how else to do it in Ant): have the FeaturesAndBundlesPublisher write to a temp directory, which is always erased just before it runs, and then have another ant step copy these over the older ones. tried this, and many other variations; couldn't get them to work.  It seems the features & bundles publisher does some kind of fancy reading of the xml in the artifacts.xml and contents.xml and uses that information rather than seeing what files are actually there.  So, do something simpler and more fail-safe.
issueID:UIMA-3502
type:Bug
changed files:
texts:DUCC webserver (WS) on Services page should not show Start button when instances < deployments

issueID:UIMA-3503
type:Bug
changed files:
texts:DUCC Incorrect call to getsockname in ducc_ling
The call to getsockname does not correctly set the length.
issueID:UIMA-3504
type:Bug
changed files:
texts:bad compare in test case - fails if run on different line-ending OS
The test "testManyDelegates" in AnalysisEngine_implTest calls manyDelegatesCommon which compares the file length of a generated-by-the-test-case file with a "standard" one.  This test fails when the standard file is created on, e.g., a Windows system, and the test is run on a Linux system, due to line-ending characters being different.
issueID:UIMA-3505
type:Bug
changed files:
texts:SM: Lingering stop sometimes stops incorrectly
If a service is set for lingering stop and a new job references it, the stop may occur regardless of the new references.
issueID:UIMA-3506
type:Bug
changed files:
texts:Disjunctive rule element tries to continue match without annotation
Disjunctive rule element tries to continue match without annotation and caused a NPE.Example: (SPECIAL ( NUM | CW )+? SPECIAL);
issueID:UIMA-3507
type:Bug
changed files:
texts:Show rule in editor by selection in explanation broken in ruta workbench
"Show rule in editor" by selection in the explanation views is broken in the ruta workbench, for example, when clicking on the rule in the "Created By" view, the wrong rule is highlighted in the editor.
issueID:UIMA-3508
type:Bug
changed files:
texts:Resources from "generate" mojo do not end up in JARs
The "generate" mojo generates resource files (e.g. XML descriptors) - nothing that would compile. But it internally adds a source path to the project. The consequence is, that the generated resources show up in Eclipse as a source folder and appear ok, but in fact the generated resources do not end up in the JAR.
issueID:UIMA-3509
type:Task
changed files:
texts:Create uimaFIT 2.1.x branch
Create uimaFIT 2.1.x branch.
issueID:UIMA-351
type:New Feature
changed files:uimaj-core/src/main/java/org/apache/uima/analysis_engine/impl/PearAnalysisEngineWrapper.java
uimaj-core/src/main/java/org/apache/uima/pear/tools/InstallationController.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/impl/PearAnalysisEngineWrapper.java
uimaj-core/src/main/java/org/apache/uima/ResourceSpecifierFactory.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/impl/PearAnalysisEngineWrapper.java
uimaj-core/src/main/java/org/apache/uima/impl/ResourceSpecifierFactory_impl.java
uimaj-core/src/main/java/org/apache/uima/pear/tools/InstallationController.java
uimaj-core/src/main/java/org/apache/uima/pear/tools/PackageBrowser.java
uimaj-core/src/main/java/org/apache/uima/resource/PearSpecifier.java
uimaj-core/src/main/java/org/apache/uima/resource/impl/PearSpecifier_impl.java
uimaj-core/src/main/java/org/apache/uima/util/XMLParser.java
uimaj-core/src/main/java/org/apache/uima/util/impl/XMLParser_impl.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/impl/PearAnalysisEngineWrapper.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/impl/PearAnalysisEngineWrapper.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/impl/PearAnalysisEngineWrapper.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/impl/PearAnalysisEngineWrapper.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/impl/PearAnalysisEngineWrapper.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/impl/PearAnalysisEngineWrapper.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/impl/PearAnalysisEngineWrapper.java
texts:UIMA pear runtime
Currently it is not possible to run an installed pear file out of the box in UIMA. I mean by just specifying the pear installation path or something similar.To run installed pear files there is a lot of user configuration and implementation necessary. So it would be nice to have a UIMA pear runtime that can run an installed pear file out of the box.With the suggestion of having custom resource specifiers <customResourceSpecifier> we can provide an easy way to integrate such a UIMA pear runtime.We just have to implement a new PearAnalysisEngineWrapper that extends the AnalysisEngineImplBase class that knows how to start an installed pear file. All the necessary information is available and can be parsed from the metadata of the installed pear. The utilities, e.g. to dynamically load the classes (UIMA extension class loader) is also in place and can be used. So an example of the <customResourceSpecifier> can look like:<customResourceSpecifier xmlns="http://uima.apache.org/resourceSpecifier">   <resourceClassName>org.apache.PearAnalyisEngineWrapper</resourceClassName>   <parameters>       <parameter name="installedPear" value="/path/to/the/root/directory/of/the/installed/pear/file"/>       <!-- and additional parameters if necessary -->   </parameters></customResourceSpecifier>This solution will also work out of the box in our tooling. The tools does not have to implement a PEAR runtime engine itself.
issueID:UIMA-3510
type:Bug
changed files:
texts:get uimaj-ep-cas-editor to build after deleting .m2 org.eclipse
After deleting the .m2 repo node org/eclipse, tried to build eclipse plugins and found the cas-editor was failing because it was trying to download a dependency on org.eclipse.equinox:app version 1.0.0.  The one in the repo is at version 1.0.0-v20070606.  I vaguely recall some slight upgrade in more recent Maven impls that slightly changed the matching rules for these kinds of things.  Anyways, it now doesn't match or work.  This wasn't noticed by me because I had never deleted the org/eclipse directory in my local maven repo before.The fix seems to be simple: I added an explicit dependency in the POM for this using a version range which got that version with the -v20070606 suffix.  Because it was there in the .m2 repo, some other part of maven dependency was successful in resolving it.
issueID:UIMA-3511
type:Bug
changed files:
texts:DUCC should not be isensitive to user JVM args
AbstractDuccComponent checks ALL JVM args as well as ducc.properties for any that end with "endpoint" as these must have a matching attribute that ends with endpoint.type.  Should only check ducc.properties.
issueID:UIMA-3512
type:Improvement
changed files:
texts:Add additional engine parameter for Ruta HtmlConverter to configure linebreak replacement.
When converting an HTML file to plain text with HtmlConverter engine in Ruta, there exists an engine parameter "replaceLinebreaks" of type boolean to decide if text linebreaks should be replaced or not. If set to true, all linebreaks are kept in the document. If set to false, all linebreaks are deleted. Therefore, the last word of a line and the first word of the next line are put together without whitespace in between. It would often be better if a linebreak is replaced by a whitespace. To configure this, another engine parameter that defines the String, the linebreak is replaced with, would be useful.
issueID:UIMA-3513
type:Bug
changed files:uimaj-core/src/main/java/org/apache/uima/util/CasCopier.java
uimaj-core/src/main/java/org/apache/uima/util/CasCopier.java
texts:CasCoper test for views belonging to same CAS broken
The logic is flawed.  Example 1: if cas1's viewname and cas2's viewname are both null (could be both base CASes, I think), then it returns the result of null == null because it's comparing the viewnames (null strings) instead of the base CASes themselves.The tests further may fail if the CAS is wrapped.  May need to use "equals" instead of == , but need to check the default impl of this.
issueID:UIMA-3514
type:Bug
changed files:
texts:DUCC source tarball LICENSE& NOTICE are missing legal stuff for DUCC images
DUCC source LICENSE & NOTICE files are missing legal stuff for images.
issueID:UIMA-3515
type:Bug
changed files:
texts:DUCCs source NOTICE and LICENSE is missing legal stuff for Saxon

issueID:UIMA-3516
type:Bug
changed files:
texts:Fix DUCCs License files
Review and fix problems with license files. Looks all products grouped under specific license (BSD, MIT) are not right. Each product seems to have a different license.
issueID:UIMA-3517
type:Bug
changed files:
texts:DUCC orchestrtor (OR) fails when using Crypto
Permissions are 700 for user home directory.org.apache.uima.ducc.common.crypto.CryptoException: Directory does not exist: /watsondata/watson/.ducc at org.apache.uima.ducc.common.crypto.Crypto.checkDir(Crypto.java:165) at org.apache.uima.ducc.common.crypto.Crypto.checkKeys(Crypto.java:177) at org.apache.uima.ducc.common.crypto.Crypto.init(Crypto.java:101) at org.apache.uima.ducc.common.crypto.Crypto.<init>(Crypto.java:78) at org.apache.uima.ducc.orchestrator.OrchestratorComponent.isSignatureValid(OrchestratorComponent.java:523) at org.apache.uima.ducc.orchestrator.OrchestratorComponent.startJob(OrchestratorComponent.java:594) at org.apache.uima.ducc.orchestrator.event.OrchestratorEventListener.onSubmitJobEvent(OrchestratorEventListener.java:63)
issueID:UIMA-3518
type:Bug
changed files:
texts:DUCC webserver (WS) row striping not right after sort in classic display mode

issueID:UIMA-3519
type:Bug
changed files:
texts:JMS service stub causes broker problems at high load
Scenario:A UIMA aggregate includes a JMS remote service, the aggregate is deployed in multiple threads and in multiple processes such that there are close to 1000 total pipeline threads, and the CAS rate going to the remote service is greater than about 100 per second.In this situation, which is common for a DUCC job, then the AMQ broker will start using an abnormally high amount of CPU while slowly delivering CASes to the remote service instances, resulting in poor throughput.Up until now the JMS service stub instantiates a new UimaAsynchronousEngine object for every thread. The problem does not occur if instead the JMS service stub instantiates a single UimaAsynchronousEngine object and uses it for all process threads pointing at the same remote service.
issueID:UIMA-352
type:New Feature
changed files:uimaj-core/src/main/java/org/apache/uima/ResourceSpecifierFactory.java
uimaj-core/src/main/java/org/apache/uima/impl/CustomResourceFactory_impl.java
uimaj-core/src/main/java/org/apache/uima/impl/ResourceSpecifierFactory_impl.java
uimaj-core/src/main/java/org/apache/uima/resource/CustomResourceSpecifier.java
uimaj-core/src/main/java/org/apache/uima/resource/impl/CustomResourceSpecifier_impl.java
uimaj-core/src/main/java/org/apache/uima/util/XMLParser.java
uimaj-core/src/main/java/org/apache/uima/util/impl/XMLParser_impl.java
uimaj-core/src/main/java/org/apache/uima/ResourceSpecifierFactory.java
uimaj-core/src/main/java/org/apache/uima/impl/CustomResourceFactory_impl.java
uimaj-core/src/main/java/org/apache/uima/impl/ResourceSpecifierFactory_impl.java
uimaj-core/src/main/java/org/apache/uima/resource/CustomResourceSpecifier.java
uimaj-core/src/main/java/org/apache/uima/resource/impl/CustomResourceSpecifier_impl.java
uimaj-core/src/main/java/org/apache/uima/util/XMLParser.java
uimaj-core/src/main/java/org/apache/uima/util/impl/XMLParser_impl.java
texts:Allow custom service adapters to be plugged in
Currently there's no easy way to plug in an additional kind of serviceadapter (to support a protocol other than SOAP or Vinci).  UIMAalready has the foundation for pluggable adapters, with its use ofdescriptors and factory methods that produce Resource objects (likeAnalysisEngines) from descriptors.  But we've never provided a way forusers to plug in their own adapter classes without editing internalframework configuration files.  Here's a simple suggestion that wouldchange that:We could add a new ResourceSpecifier (descriptor) type:<customResourceSpecifier xmlns="http://uima.apache.org/resourceSpecifier">       <resourceClassName>com.foo.MyCustomServiceAdapter</resourceClassName>       <parameters>               <parameter name="serviceEndpoint" value="hostname:port"/>               ...       </parameters></customResourceSpecifier>The <resourceClassName> specifies the exact name of some user classwhich must be located on the classpath (the UIMA extension classpathwill work, if provided).  That class must implement the UIMA Resourceinterface (for an AE service adapter it would also have to implementthe AnalysisEngine interface).  The Resource interface provides amethod initialize(ResouceSpecifier,Map) which the factory calls andpasses the resource specifier.  The user would implement theinitialize method to read the <parameters> and set itself up.All the basic support for this is already there.  It's relatively easyto add a new kind of ResourceSpecifier and the associated factory forinstantiating the Resource from the specifier.  Then there would bethe documentation about how to implement your resource class, whichwould be a little more work.
issueID:UIMA-3520
type:Task
changed files:
texts:Rollback poms to 1.0.0-SNAPSHOT
Prepare for RC2
issueID:UIMA-3521
type:Bug
changed files:
texts:need to upgrade maven changes plugin because of Jira upgrade
The maven-changes-plugin version specified in the pom no longer works with our Jira version; upgrade to version 2.9 to get it to work.
issueID:UIMA-3523
type:Task
changed files:
texts:Generate HTML for installation guide as well as PDF.
Update documentation pom to generate html as well as pdf for the installation guide.
issueID:UIMA-3524
type:Bug
changed files:
texts:updates to sampleapps to be consistent with recent build changes
uima-ducc-examples.jar file changed names; some &#91;e.g. descriptor&#93; files moved in assembly; instructions broken for test setup
issueID:UIMA-3525
type:Bug
changed files:
texts:SM fails a job if its service dependencies are only whitespace
When placeholders are used for the blank-separated service dependencies and the placeholders are empty the SM treats the empty array of dependencies as "services unavailable".  Quickest fix is to make the CLI omit the option if it is empty.
issueID:UIMA-3526
type:Bug
changed files:
texts:JCasGen merge for comments slightly broken
JCasGen has a merge capability.  For generated things, if the code has been modified by adding comments, these modifications are not preserved in all cases.
issueID:UIMA-3527
type:Bug
changed files:
texts:Add target to SVN ignore for UIMA-DUCC-SPAWN project
Target folder is not in the svn ignore
issueID:UIMA-3528
type:Bug
changed files:
texts:uimaj Eclipse runtime build has unused package
I noticed that building the uimaj-ep-runtime issues a warning for a package in the "export" that doesn't exist: org.apache.uima.internal.util.text.  This might have existed at some point, but it doesn't now.  So I'm removing this package from the list of exported packages.
issueID:UIMA-3529
type:Task
changed files:
texts:change next version of uimaj to 2.5.0
Previous discussion concluded it was best to change the next release of uima sdk to version 2.5.0.  The Jira version was long ago changed to this, but the poms never have -so update them.  While at it, conform better to maven conventions by eliminating the version number in the pom of all except the uimaj parent-pom, to make future maintenance easier.
issueID:UIMA-353
type:Improvement
changed files:uimaj-core/src/main/java/org/apache/uima/resource/impl/CasManager_impl.java
uimaj-core/src/main/java/org/apache/uima/resource/impl/CasManager_impl.java
uimaj-core/src/main/java/org/apache/uima/UIMA_IllegalStateException.java
uimaj-core/src/main/java/org/apache/uima/resource/ResourceManager.java
uimaj-core/src/main/java/org/apache/uima/resource/impl/ResourceManager_impl.java
uimaj-core/src/main/java/org/apache/uima/UIMA_IllegalStateException.java
uimaj-core/src/main/java/org/apache/uima/resource/ResourceManager.java
uimaj-core/src/main/java/org/apache/uima/resource/impl/ResourceManager_impl.java
texts:Expose ResourceManager.setCasManager
Framework currently provides no way to change the implementation of the CasManager that's used.  The CasManager is contained in the ResourceManager and is responsible for creating and managing CAS pools used by CAS Multipliers.  There's a ResourceManager.getCasManager method but no set method.  The set method should be created to give us flexibility when embedding UIMA in other middleware where we may want  a different CasManager implementation.
issueID:UIMA-3531
type:Improvement
changed files:
texts:DUCC scripting should compain and exit gracefully if post install has not been run
A somewhat cryptic exception appears if check_ducc -k is run prior to running post install.
issueID:UIMA-3533
type:New Feature
changed files:
texts:Support new import functionality in Workbench
Support new import functionality in Workbench: See UIMA-3303
issueID:UIMA-3535
type:Bug
changed files:
texts:UIMA DUCC assembly scrip tries to copy INSTALL file which doesnt exist
If the ducc build is run via mvn clean install, the assembly script fails while trying to copy a non-existent INSTALL file. This file is created only when the latex is enabled which is the case when building a release. The assembly script should use a fileset and copy contents of ducc-install folder instead of using a file copy.
issueID:UIMA-3536
type:Bug
changed files:
texts:Upgrade DUCC parent-pom to use the latest parent-pom v.8
Update to the latest parent pom to pickup the latest changes plugin
issueID:UIMA-3537
type:Bug
changed files:
texts:Fix DUCC main pom to use parent-pom maven-changes-plugin
Ducc's main pom should inherit maven-changes-plugin which fixes JIRA reporting. For the first DUCC release disable this plugin by using empty phase like so: <phase></phase>. For the future releases change the global variable jira.version to jiraVersion which is used by maven-changes-plugin in the parent-pom
issueID:UIMA-3539
type:Task
changed files:
texts:Prepare Ruta 2.2.0 release
Just an issue for smaller tasks that need to be done before the next release, e.g., update version and dependencies.
issueID:UIMA-354
type:Improvement
changed files:uimaj-core/src/main/java/org/apache/uima/pear/tools/PackageBrowser.java
uimaj-core/src/main/java/org/apache/uima/pear/tools/PackageBrowser.java
texts:UIMA datapath support for pear files
Currently when creating a pear file it is not possible to set the UIMA datapath as a defined value. You can create your own custom parameter that is calleddata_path or DATAPATH or UIMA_datapath. But it is not defined how the UIMA datapath should be named. I would recommend to define:When a pear file must set the UIMA datapath the datapath parameter is called: "uima.datapath"With this definition it is also possible to provide an API at the current PackageBrowser object that returns the UIMA datapath setting for the pear file. Currently the PackageBrowser can be used to e.g. retrieve the custom parameter settings or the classpath of a pear. When adding the datapath API, pear files that needs the UIMA datapath can be integrated to UIMA more easily without using assumptions of what might the the UIMA datapath setting of the pear.I think the changes are quite simple. We have to update the documentation so that users know how to set the UIMA datapath and we have to implement an additional API at the PackageBrowser that search in the configuration parameters of the PEAR for the "uima.datapath" parameter.
issueID:UIMA-3540
type:Bug
changed files:
texts:uimaj release_notes has bad doc links and extra parenthesis

issueID:UIMA-3541
type:Improvement
changed files:
texts:Add getLogger() to each DUCC daemon component
To enable logging in Ducc's common code (AbstractDuccComponent) each component needs to provide an instance of DuccLogger via getLogger() method
issueID:UIMA-3542
type:Bug
changed files:
texts:Refactor DUCC ResourceManagerComponent to avoid NPE
Modify ResourceManagerComponent.start() to move call to super.start() to avoid a possible race condition which may result in a NPE. The code should first instantiate JobManagerConverter and then super.start() can be called.The super.start() calls back the ResourceManagerComponent method where it expects a valid reference to JobManagerConverter which is initialized in the ResourceManagerComponent .start().
issueID:UIMA-3543
type:Bug
changed files:
texts:Change DUCCs Camel autostart to false
Change default Camel behavior to prevent Routes from starting right after declaration. The routes will be started after component successfully initializes.
issueID:UIMA-3544
type:Bug
changed files:
texts:Refactor DUCC JmxAgent to allow daemon to start on jmx failure
Modify common code in AbstractDuccComponent that enables JMX for the DUCC daemon. Currently, when there is a failure binding a port to JMX service connector, the code keeps retrying with the next available port. The bug here is that there are two distinct steps wrapped by a single try catch block. Improve this by wrapping try catch around getting a valid port, and a second try catch around code that binds the Jmx Service Connector to the port. If the first step fails (getting valid port), the code retries until a valid port is found. If the second step fails (bind), the code should log a message stating the JMX is not available and return empty string for jmx URL. The daemon should continue initializing despite the fact the JMX is not available
issueID:UIMA-3545
type:Bug
changed files:
texts:DUCC orchestrtor (OR) ignoring ducc.properties specification of ducc.jd.host.memory.size
Even through 1GB is specified in ducc.properties, the OR requests 2GB from RM of JobDriver.
issueID:UIMA-3546
type:Bug
changed files:
texts:UIMA-AS 2.4.2 distro is missing http jars
UIMA-AS assembly script is not packaging three important jars:httpclient-4.2.5.jarhttpcore-4.2.4.jarxpp3_min-1.1.4c.jarThe above enable http based messaging. The attempt to use http on the producer side results in ClassNotFound.
issueID:UIMA-3547
type:Bug
changed files:
texts:DUCC isSchedulable() should account for whether resources are assigned
In DuccWorkJob the isSchedulable() method indicates whether a job is a candidate for consideration by the scheduler.  The method necessarily includes state Completing as a job may linger for a while with resources still allocated as it winds down.  However, if a job dies before getting resources it still goes through state Completing but is in fact NOT a candidate for consideration by the scheduler.  The isSchedulable() method should check for resources still allocated to the job, and if the state is Completing but no resources, return 'false', not 'trus'.
issueID:UIMA-3548
type:Task
changed files:
texts:uima-as NOTICE file for relocated copyright
The Notice file for UIMA-AS has a cut/paste typo in the part that references the moved copyright from the IBM donation, at least in some JAR files (but needs checking everywhere).
issueID:UIMA-355
type:Improvement
changed files:
texts:Eclipse PDE nature for org.apache.uima.runtime project
Add a PDE nature to the org.apche.uima.runtime project with the maven-eclipse-plugin pde option.
issueID:UIMA-3550
type:Bug
changed files:
texts:Feature assignment for default group in simple regexp rules in Ruta
Feature assignment for default group in simple regexp rules in Ruta does not work: missing assignment to first group.
issueID:UIMA-3552
type:New Feature
changed files:
texts:Enable FILL action to consider rule element matches for feature value selection
Enable FILL action to consider rule element matches for feature value selection. Sicne the action is able to identify the annotation inthe complete match, the context for the feature values can be restricted.
issueID:UIMA-3553
type:Bug
changed files:
texts:UIMA-DUCC jars dont include correct NOTICE file under META-INF
UIMA DUCC parent pom should declare new properties which are needed by the uima custom resource plugin when packaging jars.As a result the NOTICE file in each DUCC jar is incorrect. Specifically, the Copyright date is wrong, there is a missing legal info which should identify the fact that the code was partially developed by IBM for UIMA core, UIMA AS and UIMA DUCC
issueID:UIMA-3554
type:Bug
changed files:
texts:Modify UIMA-DUCC parent pom to remove *.tex files from rat excludes
The parent pom currently excludes *.tex from the rat plugin. These are source files which should have Apache header thus should be subject to RAT check. Remove the exclude for *.tex files.
issueID:UIMA-3555
type:Improvement
changed files:
texts:DUCCBook Updates for RC5
Minor updates to ducc book for RC5.
issueID:UIMA-3556
type:Bug
changed files:
texts:UIMA DUCC common code should create uncaught exception handler
DUCC common code should declare an uncaught exception handler to handle java errors (like OOM). When java error is caught, the code should force the jvm to exit via Runtime.halt() to make sure the jvm exits. This is motivated by actual experience when a JD process hang on OOM.
issueID:UIMA-3557
type:Improvement
changed files:
texts:build tooling that runs Ant exec&#39;s should fail-on-error
A release candidate failed to include some .asc signature files.  This was traced to running the build on a machine with a flaky gpg agent.  The Ant <exec> step issued an Error, but the Ant task completed, anyway.   There's a parameter for the ant exec task to fail the build if the exec returns with a "failure" return code.  Hoping that the gpg signing task does return an error code, add the parameter to the exec task to fail the build on gpg signing failure.  Also, look at all other exec tasks to see if it is appropriate to add this to them, too.
issueID:UIMA-3558
type:Improvement
changed files:
texts:Upgrade to parent-pom version 8
Upgrade to parent-pom version 8
issueID:UIMA-3559
type:Bug
changed files:
texts:JDK 8 complains about bad JavaDoc
JDK 8 complains about bad JavaDoc. We have had that in core already. uimaFIT needs to be fixed up as well.
issueID:UIMA-356
type:Bug
changed files:
texts:fix IBM dependency in CVD log properties file
Logger.properties file contains To set the logging level for the UIMA framework itself, specify: com.ibm.uima.level = ALLbut it should be To set the logging level for the UIMA framework itself, specify: org.apache.uima.level = ALL
issueID:UIMA-3560
type:Improvement
changed files:
texts:AnnotationFactory.createAnnotation() should not throw UIMAException
The AnnotationFactory provides a shortcut alternative to creating an annotation and adding it to the indexes:JCas/UIMA:a) new Token(jcas, 1, 5).addToIndexes();b) jcas.addFsToIndexes(jCas.getCas().createAnnotation(JCasUtil.getAnnotationType(jCas, typeClass), begin, end));AnnotationFactorya) createAnnotation(jcas, 1, 5, Token.class);b) createAnnotation(jcas, 1, 5, typeClass);Internally, AnnotationFactory uses reflection on JCas classes to achieve that and if there is a problem while reflectively creating the annotation, it throws an UIMAException. It is very unlikely that a problem would occur. It could happen if security restrictions are in place on certain JCas wrapper classes. Yet, the UIMAException is not a RuntimeException, so it must be caught by client code. AnnotationFactory could use the CAS interface instead of reflection to avoid the exception. We can be sure that any annotation created through the CAS interface can safely be cast to a JCas wrapper type, because the JCas has already been initialized when this method is calls (it receives a JCas as argument).
issueID:UIMA-3561
type:Improvement
changed files:
texts:Remove AnnotationFactory
The AnnotationFactory duplicates functionality covered by JCasUtil.getType() and the CAS interface by using reflections on JCas. This is just bad and should go away asap.See also UIMA-3560 (deprecation issue).
issueID:UIMA-3562
type:Bug
changed files:
texts:Avoid throwing UIMAException
uimaFIT throws a UIMAException in several places, apparently to avoid separate throws clauses for AnalysisEngineException, ResourceInitializationException and the likes. This is not good, because the different kinds of problems that can occur are somewhat hidden from a person using methods throwing UIMAException. It would be better to declare each exception separately.Examples: CpePipeline.runPipeline SimplePipeline.runPipeline JCasFactory.createJCas
issueID:UIMA-3563
type:Bug
changed files:
texts:createTypePriorities accepts non-JCas classes
The method TypePriorities createTypePriorities(Class<?>... prioritizedTypes) should only accept classes that are actually JCas classes (extend TOP).
issueID:UIMA-3564
type:Bug
changed files:
texts:FsIndexFactory.REVERSE_STANDARD_COMPARE maps to STANDARD_COMPARE
FsIndexFactory.REVERSE_STANDARD_COMPARE maps to STANDARD_COMPARE
issueID:UIMA-3565
type:Bug
changed files:
texts:Wrong rat-check exclude
There is an exclude for<exclude>src/test/resources/data/docs/unix-newlines.txt</exclude><exclude>src/test/resources/data/docs/windows-newlines.txt</exclude>but these files have the extensions ".txt.bin" now.
issueID:UIMA-3566
type:Improvement
changed files:
texts:Update to UIMA 2.6.0
Update to UIMA 2.5.0
issueID:UIMA-3567
type:Bug
changed files:
texts:addSourceToJars.bat has numerous errors
There are three error types in addSourceToJars.bat and one error in the documentation overview_and_setup.pdf section 3.3.The doc says to go to the root directory of the source distribution to run addSourceToJars.  However, this batch file is no longer at the root directory. It is now under the following additional subdirectories: src main readme_srcAs a result, first error is that the line cd jVinci\src\main\javashould be changed tocd ..\..\..\jVinci\src\main\javaThe second problem is that a typical installation of Java is installed to Program Files, which contains spaces.  Therefore, the following line causes unexpected symbols that result in unsuccessful termination of the batch file.if "%JAVA_HOME%"=="" (set UIMA_JAR_CALL=jar) else (set UIMA_JAR_CALL=%JAVA_HOME%\bin\jar)To fix, it is necessary to surround the second occurrence of %JAVA_HOME% in quotes, like this:if "%JAVA_HOME%"=="" (set UIMA_JAR_CALL=jar) else (set UIMA_JAR_CALL="%JAVA_HOME%"\bin\jar)However, the quotes seem to carry over into the use of UIMA_JAR_CALL, so it becomes necessary to fix the 8 occurrences of "%UIMA_JAR_CALL%"to remove the surrounding quotes, like this%UIMA_JAR_CALL%
issueID:UIMA-3569
type:New Feature
changed files:
texts:Allow extensions for complete block constructs in Ruta
Allow extensions for complete block constructs in Ruta. This means essentially that the lanaguge can be extended with additional constructs that define an specific syntax and change the apporach of rule inference. This would easy the development and integration of new functionlity like FSTs or similar compiled versions of rule sets. (Students could develop FST implementations or similar stuff without changing the ruta code itself)
issueID:UIMA-357
type:Task
changed files:
texts:Write documentation for the Cas Editor

issueID:UIMA-3570
type:Bug
changed files:
texts:Fix UIMA-DUCC INSTALL doc
The INSTALL says that when building from source, the result is intrunk/site/apidocs for the API Javadocs, but it's actually intrunk/target/site/apidocs
issueID:UIMA-3571
type:Bug
changed files:
texts:Fix DUCC README
The README refers to examples/descriptors which has changed to examples/sampleapps/descriptors
issueID:UIMA-3572
type:Bug
changed files:
texts:Fix UIMA-AS race condition
Looks like there is a race condition when handling multiple CASes coming in at the same time from the same client. The first thread creates a Connection and sets up a Session then the second thread sees the Connection made and proceeds to send a reply. The Connection has not yet started though, resulting in 20 Jan 2014 14:32:18,426  WARN DUCC.ActiveMQSessionExecutor - Received a message on a connection which is not yet started. Have you forgotten to call Connection.start()? Connection: ActiveMQConnection Start the Connection as soon as it is created in a synchronized block.
issueID:UIMA-3573
type:Bug
changed files:
texts:Remove obsolete file from DUCC src
Remove src/main/doc/ducc-completion.txt
issueID:UIMA-3574
type:Bug
changed files:
texts:DUCC&#39;s javadoc api pages show wrong Copyright date
Modify maven javadoc plugin to show 2012 as copyright date
issueID:UIMA-3575
type:Bug
changed files:
texts:parent-pom don&#39;t include the license file
Not available LICENSE file in source directory structurePlease. Added license and copyright notice.the fedora pakaging guideline is very strictly precise about this problemhttps://fedoraproject.org/wiki/Packaging:LicensingGuidelines?rd=Packaging/LicensingGuidelines#License_Textthanksregards
issueID:UIMA-3576
type:Bug
changed files:
texts:Ruta: "types share same shortname" warning message exceeds limits
If there are several types that share same shortnames, the warning message exceeds its maximum allowed size.
issueID:UIMA-3577
type:Improvement
changed files:
texts:DUCC job driver (JD) should auto-retry lost work items

issueID:UIMA-3578
type:Bug
changed files:
texts:DUCC&#39;s NOTICE file packaged in a jar has wrong Copyright date
Each DUCC jar contains a NOTICE file which shows an incorrect Copyright date (2006-2012). This is fixed by adding <inceptionYear> element into DUCC's parent pom. This is used by packaging code to generate a correct copyright date.
issueID:UIMA-358
type:Improvement
changed files:uimaj-core/src/main/java/org/apache/uima/util/CasPoolManagement.java
uimaj-core/src/main/java/org/apache/uima/util/impl/CasPoolManagementImpl.java
uimaj-core/src/main/java/org/apache/uima/util/impl/CasPoolManagementImplMBean.java
uimaj-core/src/main/java/org/apache/uima/util/CasPoolManagement.java
uimaj-core/src/main/java/org/apache/uima/util/impl/CasPoolManagementImpl.java
uimaj-core/src/main/java/org/apache/uima/util/impl/CasPoolManagementImplMBean.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/AnalysisEngineManagement.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/impl/AnalysisEngineImplBase.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/impl/AnalysisEngineManagementImpl.java
uimaj-core/src/main/java/org/apache/uima/internal/util/JmxMBeanAgent.java
uimaj-core/src/main/java/org/apache/uima/resource/CasManager.java
uimaj-core/src/main/java/org/apache/uima/resource/ManagementObject.java
uimaj-core/src/main/java/org/apache/uima/resource/impl/CasManager_impl.java
uimaj-core/src/main/java/org/apache/uima/util/CasPool.java
uimaj-core/src/main/java/org/apache/uima/util/CasPoolManagement.java
uimaj-core/src/main/java/org/apache/uima/util/impl/CasPoolManagementImpl.java
uimaj-core/src/main/java/org/apache/uima/util/impl/CasPoolManagementImplMBean.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/AnalysisEngineManagement.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/impl/AnalysisEngineImplBase.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/impl/AnalysisEngineManagementImpl.java
uimaj-core/src/main/java/org/apache/uima/internal/util/JmxMBeanAgent.java
uimaj-core/src/main/java/org/apache/uima/resource/CasManager.java
uimaj-core/src/main/java/org/apache/uima/resource/ManagementObject.java
uimaj-core/src/main/java/org/apache/uima/resource/impl/CasManager_impl.java
uimaj-core/src/main/java/org/apache/uima/util/CasPool.java
uimaj-core/src/main/java/org/apache/uima/util/CasPoolManagement.java
uimaj-core/src/main/java/org/apache/uima/util/impl/CasPoolManagementImpl.java
uimaj-core/src/main/java/org/apache/uima/util/impl/CasPoolManagementImplMBean.java
texts:Add JMX MBeans for CAS Pools
To allow monitoring of CAS Pool size, number of free instances, and avg. wait time to get a CAS.
issueID:UIMA-3580
type:Bug
changed files:
texts:DUCC Agent sends STOP instead of QUIESCE to a running process
On process pre-emption (or explicit service stop), the Agent sends a Stop request to a JP or Service instead of Quiesce. The process receiving such request, stops all listeners on the input queue and also stops the output channel preventing any replies from getting back to the client (JD). The above may also explain intermittent problems with GetMeta timing out. It looks like GetMeta request comes in, the service receives Stop request and immediately proceeds to stop the output channel preventing the reply. The window is very small but its possible cause of the timeout.If a process is killed via SIGTERM, the registered ShutdownHook correctly initiates quiesce.
issueID:UIMA-3581
type:Bug
changed files:
texts:UIMA-AS client calls onBeforeMessageSend on CPC
Looks like the uima-as client calls onBeforeMessageSend() for both Process and CPC requests. Furthermore, on CPC the client uses the last Cas Reference Id as an argument to onBeforeMessageSend() which may confuse the application as it is receiving two callbacks with the same Cas Reference Id. Either dont call onBeforeMessageSend() or pass an empty string as Cas Reference Id when handling CPC.
issueID:UIMA-3582
type:Bug
changed files:
texts:DUCC&#39;s cgroup enabled should default to false
Currently DUCC is configured to use cgroup by default. If cgroups is not configured, DUCC silently fails as agents exit on error (no cgroups configured). Modify ducc.properties to disable cgroups by default. Let users who need cgroups support set it explicitly.
issueID:UIMA-3583
type:Improvement
changed files:uimaj-core/src/main/java/org/apache/uima/internal/util/Misc.java
texts:More convenient way to create (J)Cas using text and language
It would be nice to have a method to create a JCas using text and language:JCasFactory.createJCasWithText("en", "This is a test.");It could also be considered having such a method in JCasUtil (and CasUtil) to avoid an extra import of JCasFactory, maybe under a more concise name, e.g JCasUtil.createText("en", "this is a test");CasUtil.createText("en", "this is a test");
issueID:UIMA-3584
type:Task
changed files:
texts:Wrong indentation in jcasgen-maven-plugin documentation
The indentation for the jcasgen-maven-plugin POM example is wrong on this page:http://uima.apache.org/d/uimaj-2.5.0/tools.html#ugr.tools.jcasgen
issueID:UIMA-3585
type:Bug
changed files:
texts:Ruta: Multi-Tree Wordlists with Multi-Token Entries
The Multi-Tree Wordlist implementation has problems with Multi-Token Entries, e.g., the entry "R/S".
issueID:UIMA-3586
type:Bug
changed files:
texts:When ducc-mon dies clients monitoring a job should not hang
When the WS dies clients monitoring a job get a never-ending stream of:error: accessing http://bluej532:42133/ducc-servlet/proxy-job-status?id=10766
issueID:UIMA-3588
type:Bug
changed files:
texts:UIMA-AS service should use maxInactivityDurationInitalDelay property
When handling the first request message from a client, the UIMA-AS service establishes a connection to a broker, creates a session and a producer and caches it for a subsequent use. To the broker URL the service currently appends wireFormat.maxInactivityDuration=0 to disable inactivity monitor. The service should support other decorations as well. For example,  the wireFormat.maxInactivityDurationInitalDelay=M, to deal with Wire Format Negotiation Timeout errors which may occur when the broker is very busy or the network is saturated causing delays.Consider using a (optional) property file to externalize uima-as settings which are currently passed in via -D's.
issueID:UIMA-3589
type:Bug
changed files:
texts:RUTA IDE cannot cope with spaces in workspace path
When the eclipse workspace path contains a space character, the creation and execution of scripts always fails.
issueID:UIMA-359
type:Bug
changed files:uimaj-core/src/main/java/org/apache/uima/cas/impl/CASSerializer.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/CASImpl.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/CASSerializer.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/StringHeap.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/impl/PearAnalysisEngineWrapper.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/CASImpl.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/CASSerializer.java
texts:Blob serialization problems
Several bug fixes applied to UIMA 1.4.4 were not applied to UIMA 2.0 and Apache UIMA 2.1.
issueID:UIMA-3590
type:Bug
changed files:
texts:Wildcard rule element does not work properly
The wildcard rule element does not work properly when using the following rule on my documents:     Headline #{->MARK(Text)} Headline;There are several Headline annotations in each document but the rule never matches.
issueID:UIMA-3591
type:Bug
changed files:
texts:Multi-values parameter does not accept single value when @ConfigurationParameter is not present
This is not workingAnalysisEngineFactory.createEngineDescription(WhitespaceTokenizer.class,               "SofaNames", SimpleParserAE.SOFA_NAME_TEXT_ONLY);I got a ClassCastExceptionCaused by: java.lang.ClassCastException: java.lang.String cannot be cast to[Ljava.lang.String;   atorg.apache.uima.annotator.WhitespaceTokenizer.initialize(WhitespaceTokenizer.java:328)   atorg.apache.uima.analysis_engine.impl.PrimitiveAnalysisEngine_impl.initializeAnalysisComponent(PrimitiveAnalysisEngine_impl.java:252)
issueID:UIMA-3593
type:Improvement
changed files:
texts:DUCC WebServer (WS) should provide hooks for local enhancements
In order to facilitate local enhancements to webserver provide means to intercept requests on client and server.client: update ducc.js with hooks that are invoked when pages are initialized/updatedserver: provide DuccPlugins.java skeleton that gets called back1. during initialization when processing history of Jobs/Reservation/Services2. during initialization when installing request handlers (in order to add site specific handlers)3. upon receipt of Orchestrator publicationInclude section in documentation for Web Server Customization.
issueID:UIMA-3594
type:Bug
changed files:
texts:UIMA-AS not stopping Listener executor on shutdown
There appears to be a thread leak in the uima-as jms listener. When running extended tests, the number of threads seem to increase over time. It looks like Executor plugged in into Spring Listener is not being shutdown sometimes leaving its thread(s) running. The listener threads run as daemon threads so on jvm exit they are shutdown. So this leak may only effect applications that deploy/undeploy collocated (same jvm) UIMA-AS services.
issueID:UIMA-3596
type:Bug
changed files:
texts:DUCC Orchestrator (OR) specification of ormon in log4j.xml is obsolete

issueID:UIMA-3597
type:Bug
changed files:
texts:CollectionReader and Annotators not having access to the same ExternalResource instance
Creating a pipeline as follows:a. CollectionReaderb. AnnotatorAc. AnnotatorBAll the above (including the CollectionReader and the 2 annotators) have a dependency on an ExternalResource.Here's a shortened code that I used:// create the external resource desc ExternalResourceDescription myExternalResourceDesc = createExternalResourceDescription();// create the CollectionReaderDescription, with the external resource descCollectionReaderDescription myCollectionReaderDesc = createDescription(myExternalResourceDesc);// create the MyAnnotatorA desc, with the external resource desc AnalysisEngineDescription myAnnotatorADesc = createPrimitiveDescription(myExternalResourceDesc);// create the MyAnnotatorB desc, with the external resource desc AnalysisEngineDescription myAnnotatorBDesc = createPrimitiveDescription(myExternalResourceDesc);// run SimplePipeline.runPipeline(myCollectionReaderDesc, myAnnotatorADesc,    myAnnotatorBDesc);In the initialize(UimaContext context) method of collection reader and annotator, I print out the instance of the ExternalResource:MyCollectionReader:com.example.MyExternalResource <at> 26a7dd39MyAnnotatorA:com.example.MyExternalResource <at> 6ee1dac2MyAnnotatorB:com.example.MyExternalResource <at> 6ee1dac2As you can see, MyAnnotatorA and MyAnnotatorB got the same instance of the ExternalResource, but MyCollectionReader got a different instance.They should be accessing the same ExternalResource instance.
issueID:UIMA-3598
type:Bug
changed files:
texts:Ruta: matching with manual anchor
text span:"0.3-0.7"rules:DECLARE Number;DECLARE NumberExpression;NUM {-PARTOF(Number)} ((COMMA | PERIOD) NUM)? {->MARK(Number,1,2)};((Number? ("<" | ">" | "=" | "==" | "-" | "+"))? {-PARTOF(NumberExpression)} @Number) {-PARTOF(NumberExpression)->MARK(NumberExpression)};result:-0.7 annotated as number expressionexpected:0.3 as number expression&#91;or 0.3-0.7 if manual anchoring tries to match at the end of the document first... depends on rule inference&#93;the rules should not be used for parsing of number expressions, but the behaviour should be consistent with the expectations for the rule inference
issueID:UIMA-3599
type:Bug
changed files:
texts:DUCC Job Driver (JD) does not unregister re-used CAS&#39;s from the callback tracker map
When debug is turned on for jd.out.log, false incorrect ordering messages are logged.  Normally this log is at info level.
issueID:UIMA-36
type:Task
changed files:uimaj-adapter-soap/src/main/java/org/apache/uima/adapter/soap/AxisAnalysisEngineServiceStub.java
uimaj-adapter-soap/src/main/java/org/apache/uima/adapter/soap/AxisResourceServiceStub.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/ui/AbstractSection.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/ui/AggregateSection.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/wizards/AbstractNewWizard.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/wizards/FlowControllerNewWizard.java
uimaj-examples/src/main/java/org/apache/uima/examples/xmi/Ecore2UimaTypeSystem.java
uimaj-examples/src/main/java/org/apache/uima/examples/xmi/UimaTypeSystem2Ecore.java
uimaj-core/src/main/java/org/apache/uima/util/XMLParser.java
texts:Change descriptor XML namespaces from uima.watson.ibm.com to uima.apache.org

issueID:UIMA-3600
type:Bug
changed files:
texts:DUCC Job Driver (JD) does properly handle work items for down (RM Purged) node
When a work item times-out, JD should wait sufficiently long enough to determine if node is down and automatically retry it if so.
issueID:UIMA-3601
type:Improvement
changed files:
texts:DUCC Job Driver (JD) should automatically retry work items encountering "Wire format negotiation timeout" exceptions.

issueID:UIMA-3602
type:Bug
changed files:
texts:DUCC Job Driver (JD) race between volunteering JPs and work item retry
As a Job winds down, the DUCC Orchestrator (OR) may voluntarily relinquish a Job Process (JP) while in close time proximity the Job Driver (JD) may retry a work item which gets dispatched to same.See org.apache.uima.ducc.orchestrator.StateManager deallocateIdleProcesses()
issueID:UIMA-3603
type:Bug
changed files:uimaj-core/src/main/java/org/apache/uima/internal/util/IntVector.java
texts:IntArray code to sort and remove duplicates fails on edge case of empty array
As part of serialization, the code which collects the set of indexed FSs has a portion which removes duplicates; this is run on an IntVector object which is collecting indexed FSs for a single type, FSIndexRepositoryImpl line 1531). This object is cleared and reused, in FSIndexRepositoryImpl, lines 1522 to 1532..  There's an edge case bug where this dedup routine fails for empty arrays - it returns an array of length 1, where the value&#91;0&#93; is whatever might have previously been there before the last "removeAllElements" (FSIndexRepositoryImpl, line 1522).If the 0-th element in this working IntVector happened to be 0 (which is the case on first use), then this will include the FS at address 0 (which is null, and has a 0 type code, etc.), which causes XmiSerialization to fail.The only time this error would manifest itself as a NPE is if a used, but now 0-length index for some type was the first index to be iterated over.Peter Klügl found this via a NPE while serializing a CAS, and it was order dependent.  I reproduced it by making a CAS, adding / removing an instance of an annotation (which is a sorted type), and then setting the text for the CAS (normal operation, setting the text for the CAS, then doing the other, would result in the DocumentAnnotation instance being created as part of setting the text, and it would be found 1st in the index collection code, thus insuring that position 0 in the working IntVector was not 0).The fix is to handle the edge case where the input array to sortDedup is of 0 length.
issueID:UIMA-3604
type:Bug
changed files:
texts:Ruta: PARTOFNEQ condition does not consider type inheritence
rule:Lexeme {PARTOFNEQ(Lexeme) -> UNMARK(Lexeme)};document:"> 51%"annotations:"> 51%" <- L1 : Lexeme"51%" <- L2 : Lexemeresult:Does not match because the condition does not consider type inheritance.
issueID:UIMA-3605
type:Bug
changed files:
texts:UIMA-AS gets "Wire format negotiation timeout" on connection.open()
It appears that under heavy network load UIMA-AS is getting "Wire format negotiation timeout" Exception when opening a connection to a broker. The client side of AMQ is sending a frame containing its parameters to the server (broker). It reconciles clients params against its own and sends a reply  back to the client. The reply apparently never reaches the client causing the timer to pop (default=10secs) and an exception is thrown. Attempt to extend the client timeout via wireFormat.maxInactivityDurationInitalDelay=60000 doesnt fix the problem. One possible explanation is that either the client wire format frame is not reaching the server or the server's reply doesnt reach the client. This may be due to a lost TCP packet. Since the low level amq wire negotiation doesnt offer retry, the UIMA-AS may need implement a higher level retry around the connection open() logic. It should capture generic JMSException and check the associated description for "wire format ..." problem. In such case, the connection should be closed and reopened.
issueID:UIMA-3607
type:Improvement
changed files:
texts:Improve auto-completion functionality for type system import
Improve auto-completion functionality for type system import: The new functionality like IMPORT type FROM tsd AS alias is not yet completely supported.
issueID:UIMA-3609
type:Bug
changed files:
texts:One Ruta test fails with java 7 but not with java 6
One Ruta test fails with java 7 but not with java 6: OptionalDisjunctiveBeforeAnchoringTest.java
issueID:UIMA-361
type:Improvement
changed files:
texts:add UIMA project logo to website
add UIMA project logo to website
issueID:UIMA-3610
type:Improvement
changed files:
texts:DUCC Job Driver (JD) should unambiguously record to log UIMA-AS client sendAndReceive interactions
Justification:When problems arise during interactions between JD and UIMA-AS cleint it would be very useful to know with 100% certainty which events have/have not occurred for each CAS.  JD processing presently does some reasoning before actually recording to log.  With this change, JD will log at the INFO level into jd.out.log the following:1. sendAndReceive immediately before call 2. sendAndReceive immediately upon return 3. sendAndReceive immediately upon callback for onBeforeMessageSend 4. sendAndReceive immediately upon callback for onBeforeProcessCAS.
issueID:UIMA-3611
type:Bug
changed files:
texts:Missing AST elements for numerical operations on feature values in Ruta Workbench
Missing AST elements for numerical operations on feature values in Ruta Workbench:org\apache\uima\ruta\ide\core\parser\RutaParser.gwarning(200): org\apache\uima\ruta\ide\core\parser\RutaParser.g:2057:2: Decisioncan match input such as "MINUS Identifier" using multiple alternatives: 1, 2As a result, alternative(s) 2 were disabled for that inputSemantic predicates were present but were hidden by actions.
issueID:UIMA-3612
type:Bug
changed files:
texts:DUCC Agent should detect defunct processes
Agent's rogue process detector should change to detect a process that is defunct. Its been observed that a process drops core and remains running as defunct. Since it is up, the agent is happy and keeps reporting the process as Running. Trying to kill via kill -9 doesnt help. It looks like the defunct process must be be cleaned up by root. Modify code to change the state of such process from Running to Defunct .
issueID:UIMA-3613
type:Bug
changed files:
texts:Syntax check of MARKONCE broken in Ruta Workbench
The  syntax check of the MARKONCE action is broken in the Ruta Workbench
issueID:UIMA-3614
type:Improvement
changed files:
texts:DUCC RM should reap non-preemptable shares for services, jobs, and AP
Original DUCC design said that non-preemptable shares could never be deallocated by RM unless the owner canceled the work running in those shares, even if the underlying system fails.Since then, job-jobs, services, and "managed reservations" have been defined to run in non-preemptable shares.If RM detects node failure it should now include non-preemptable shares in the reaper, as long as the shares are occupied by job-jobs, services, and MRs.  "Unmanaged"-reservations continue to remain allocated forever, or until the owner releases them.
issueID:UIMA-3615
type:Improvement
changed files:
texts:DUCC RM: vary off specific nodes
RM should be able to "vary off" a node.  Specifically, allow all work to drain but not scheduler new work until it is varied back on.  Once all work is drained the node can be taken offline for whatever reason (maintenance) without disruption.
issueID:UIMA-3616
type:Bug
changed files:
texts:DUCC ducc_ling should init all groups when switching
When initializing a user ducc_ling should init all the user's groups, not just the primary one.
issueID:UIMA-3617
type:Bug
changed files:
texts:UIMA-AS not handling broker url params correctly
When handling a reply the uima-as service creates a jms connection using broker url provided by the client and caches it for reuse. The broker url is actually modified to add wireFormat.maxInactivityDuration=0 to turn off amq inactivity monitor. The problem is that the code assumes that the client's broker url doesnt contain any params and just appends its own with ?wireFormat.maxInactivityDuration=0.Assuming that client uses the following broker ur: tcp://localhost:61616?wireFormat.maxFrameSize=209715200The uima-as service code will incorrectly modify it as follows:tcp://localhost:61616?wireFormat.maxFrameSize=209715200?wireFormat.maxInactivityDuration=0.Whats strange is that the connection is made with the above with no error.The AMQ code seems to skip to the last ? and parses from there. The consequence is that client's parameters are lost.
issueID:UIMA-3618
type:Bug
changed files:
texts:UIMA-AS should optionally log when a CAS is picked up from a queue
The uima-as service should optionally log when a CAS is picked up from an input queue. This would be enabled by a message property set by the client.The service will also log when ACK is successfully enqueued. The client will enable extra logging when it sees DUimaAsCasTracking property. It will add the same property to outgoing message. The client will also log when the ACK arrives.
issueID:UIMA-3619
type:Improvement
changed files:uimaj-core/src/main/java/org/apache/uima/jcas/JCas.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/TOP.java
uimaj-core/src/main/java/org/apache/uima/jcas/impl/JCasHashMap.java
uimaj-core/src/main/java/org/apache/uima/jcas/impl/JCasImpl.java
texts:improve Cas FS to JCas cover instance map
In highly parallel environments running on multiple cores, profiling shows that the JCas map has performance issues due to volatile and atomic operations that are unneeded, but happen due to the use of the built-in Java Random function (which uses volatile and atomic operations, internally). This map doesn't need to support multi-threading operations - it is always used in a single-thread manner. Other optimizations are possible, due to the limited way this table is used.  One of the common cases is an iterator fetching an existing FS from the CAS, and needing to supply the corresponding JCas object (if it exists).  This operation first looks up in the Map using the address as the key, and if not found, then makes the JCas object, and then adds it to the map - an operation which repeats the same lookup in order to find the "empty slot" where it can store the item.  This extra lookup can be eliminated.
issueID:UIMA-362
type:Bug
changed files:uimaj-tools/src/main/java/org/apache/uima/tools/cvd/MainFrame.java
uimaj-tools/src/main/java/org/apache/uima/tools/util/gui/AboutDialog.java
texts:CVD UIMA about box is editable
CVD UIMA about box is editable and the text can be deleted.CVD about box contains only UIMA version 2.1.0 ... the -incubation is missing. Also the Copyright is only for 2006.
issueID:UIMA-3620
type:Improvement
changed files:
texts:DUCC Orchestrator (OR) should dynamically discover site jvm args for Job Driver (JD) and Job Processes (JPs)
Enable DUCC admin to dynamically affect running system for future submitted jobs with respect to site JVM args for both JDs and JPs.
issueID:UIMA-3621
type:Task
changed files:
texts:Improve license/notice files in Ruta
Reported by Marshall:I noticed that some but not all of the internal projects within the examplesfolder (example-project, extensions-project, TextRulerExample) have their ownlicense/notice - which can be a maintenance issue - for example, these have a 2013end date in the Notice part.  Normally, the License/Notice files are put at thetop level of a distribution; I'm not sure why they're here.The NOTICE file in many places has duplicate info for creative commons that'salso part of license file.  Normally any information that's already in theLicense file should not be also duplicated in the Notices file.  The Noticesfile is for things which are not part of the license terms, but need to bepresent (such as copyrights).  Seehttps://www.apache.org/dev/licensing-howto.html#simplewhere it says, in part:    However, elements such as the copyright notifications embedded within BSDand MIT licenses need not be duplicated in NOTICE &#8211; it suffices to leave thosenotices in their original locations.Looks like the build process for the individual project Javadoc jars isincluding the license /notice files appropriate for jars containing Icons fromMark James, but those Jars don't have those icons.Also the Mark James attribution in both notice and license has an extra "the" infront of Mark James:    This product contains icons developed by the Mark James  &#8212; should read:    This product contains icons developed by Mark James
issueID:UIMA-3622
type:Bug
changed files:
texts:Formatter in Ruta editor duplicates declare keywords
The formatter in the Ruta editor duplicates declare keywords.
issueID:UIMA-3623
type:New Feature
changed files:
texts:DUCC Job Driver (JD) UIMA-AS CAS RefId tracking
Enable  UIMA-AS CAS RefId tracking.  Specify in ducc.properties for ducc.driver.jvm.args -DUimaAsCasTrackingSee also UIMA-3618.
issueID:UIMA-3624
type:Bug
changed files:
texts:DUCC Orchestrator (OR) should round up when calculating shares needed
The OR may be too aggressive in voluntarily returning currently unused JPs to RM.  It must consider the number of full and partial shares needed.  That is, the OR must round up!
issueID:UIMA-3625
type:Bug
changed files:
texts:DUCC Resource Manager (RM) should not insist on at least one share for Jobs
It should be possible for JD+OR to determine that (at present) zero shares is the correct allocation, and the RM should honor that request.
issueID:UIMA-3626
type:Improvement
changed files:
texts:DUCC start_sim should init the duccling version file
When starting the ducc simulator for the first time, if one hasn't gone through proper install and install/verfication, the ducc_ling version file may not be written.  In that case, the agents won't start under start_sim.   This update insures that the version file is ALWAYS written when starting the simulator as there's really no reason not to.
issueID:UIMA-3627
type:Improvement
changed files:
texts:Replace old screenshot in Ruta documentation
Figure 3.1 provides a screenshot with the old name
issueID:UIMA-3628
type:Bug
changed files:
texts:Loading scripts/descriptors in Ruta with incorrect paths
Loading scripts/descriptors in Ruta with incorrect paths should be possible if the resources are located in the classpath. This problem was observed in the workbench. Probably only the classpath extensions for the launcher are not correctly set.
issueID:UIMA-363
type:Improvement
changed files:uimaj-tools/src/main/java/org/apache/uima/tools/cvd/MainFrame.java
texts:add log level configuration possibility for CVD
add log level configuration possibility for CVD
issueID:UIMA-3630
type:Bug
changed files:
texts:Fix UIMA-AS race condition in JmsAnalysisEngineServiceStub
There is a race condition in the JmsAnalysisEngineServiceStub related to a recent code change where there is a single instance of uima-as client per jvm. All threads share this instance now.The race happens when the process starts up. One thread is initializing uima-as client which takes some time. The code creates an instance of uima-as client, places it in Map under broker url key and begins initializing the client. Another thread checks if there is a instance of a client for a giving key, finds it and proceeds to calling sendAndReceive().Since the client is still initializing, the sendAndReceive() throws Not Ready exception.Add CountDownLatch to prevent threads from calling sendAndReceive() until the uima-as client initializes (latch down)
issueID:UIMA-3631
type:Bug
changed files:
texts:Fix UIMA-AS references to ActiveMQ 5.4.1
The following files show references to AMQ 5.4.1:src/main/assembly/src.xmlsrc/main/examples/run_configuration/UIMA Run Remote Async AE.launchsrc/main/eclipseProject/classpathuimaj-as-activemq/src/main/java/org/apache/uima/aae/jmx/monitor/JmxMonitor.java
issueID:UIMA-3632
type:Bug
changed files:
texts:Remove source assembly script from UIMA-AS
Source assembly script is no longer needed in the uima-as. The source tarball and zip are build by common scripts inherited from parent pom.Remove src/main/assembly/src.xml
issueID:UIMA-3634
type:Bug
changed files:
texts:Jenkins fails UIMA-AS due to missing dependencies
Jenkins fails UIMA-AS with:"Waiting for Jenkins to finish collecting data&#91;ERROR&#93; Failed to execute goal on project uimaj-as-activemq: Could not resolve dependencies for project org.apache.uima:uimaj-as-activemq:jar:2.5.0-SNAPSHOT: The following artifacts could not be resolved: net.sf.josql:josql:jar:1.5, net.sf.josql:gentlyweb-utils:jar:1.5: Could not find artifact net.sf.josql:josql:jar:1.5 in eclipsePlugins (http://repo1.maven.org/eclipse) -> &#91;Help 1&#93;"looks like the dependencies no longer exist in the Maven repos.
issueID:UIMA-3635
type:Improvement
changed files:
texts:DUCC Orchestrator (OR) reduce log clutter
At info level, OR logs too much minutiae
issueID:UIMA-3636
type:Improvement
changed files:
texts:DUCC WebServer (WS) reduce log clutter

issueID:UIMA-3637
type:Bug
changed files:
texts:Change debug level in UIMA-AS Session Reaper
Need to silence Jms Session Reaper in JmsOutputChannel. Creates too much noise in the uima log. Change log level from INFO to FINE
issueID:UIMA-3638
type:Improvement
changed files:uimaj-core/src/main/java/org/apache/uima/resource/metadata/impl/MetaDataObject_impl.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/impl/RsLang.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/impl/RsFullFeatNames.java
texts:Remove potential sync bottleneck in RsFullFeatNames and RsLang and MetaDataObject_impl
In large UIMA deployments with multiple threads, some synchronization contention is detected in RsFullFeatNames and RsLang, and the caching that occurs with MetaDataObject_impl.  Replace with concurrentHashMap, and for RsFullFeatNames - discard the weakpointers to keys, which is not much of a hazard - because the tables are relatively small vs other memory uses.
issueID:UIMA-3639
type:Improvement
changed files:
texts:DUCC Orchestrator (OR) should retry if MQReaper cannot connect with report to log...
19 Feb 2014 14:36:58,122 ERROR OR.MqReaper - init     N/Ajava.io.IOException: Failed to retrieve RMIServer stub: javax.naming.ServiceUnavailableException [Root exception is java.rmi.ConnectException: Connection refused to host: bluej667; nested exception is:        java.net.ConnectException: Connection refused]        at javax.management.remote.rmi.RMIConnector.connect(RMIConnector.java:368)        at javax.management.remote.JMXConnectorFactory.connect(JMXConnectorFactory.java:278)        at javax.management.remote.JMXConnectorFactory.connect(JMXConnectorFactory.java:237)        at org.apache.uima.ducc.common.mq.MqHelper.connect(MqHelper.java:128)        at org.apache.uima.ducc.common.mq.MqHelper.<init>(MqHelper.java:57)        at org.apache.uima.ducc.orchestrator.maintenance.MqReaper.init(MqReaper.java:69)        at org.apache.uima.ducc.orchestrator.maintenance.MqReaper.<init>(MqReaper.java:63)        at org.apache.uima.ducc.orchestrator.maintenance.MqReaper.getInstance(MqReaper.java:52)        at org.apache.uima.ducc.orchestrator.maintenance.MaintenanceThread.run(MaintenanceThread.java:105)Caused by: javax.naming.ServiceUnavailableException [Root exception is java.rmi.ConnectException: Connection refused to host: bluej667; nested exception is:        java.net.ConnectException: Connection refused]        at com.sun.jndi.rmi.registry.RegistryContext.lookup(RegistryContext.java:130)        at com.sun.jndi.toolkit.url.GenericURLContext.lookup(GenericURLContext.java:215)        at javax.naming.InitialContext.lookup(InitialContext.java:422)        at javax.management.remote.rmi.RMIConnector.findRMIServerJNDI(RMIConnector.java:1935)        at javax.management.remote.rmi.RMIConnector.findRMIServer(RMIConnector.java:1902)        at javax.management.remote.rmi.RMIConnector.connect(RMIConnector.java:285)        ... 8 moreCaused by: java.rmi.ConnectException: Connection refused to host: bluej667; nested exception is:        java.net.ConnectException: Connection refused        at sun.rmi.transport.tcp.TCPEndpoint.newSocket(TCPEndpoint.java:631)        at sun.rmi.transport.tcp.TCPChannel.createConnection(TCPChannel.java:228)        at sun.rmi.transport.tcp.TCPChannel.newConnection(TCPChannel.java:214)        at sun.rmi.server.UnicastRef.newCall(UnicastRef.java:352)        at sun.rmi.registry.RegistryImpl_Stub.lookup(Unknown Source)        at com.sun.jndi.rmi.registry.RegistryContext.lookup(RegistryContext.java:126)        ... 13 moreCaused by: java.net.ConnectException: Connection refused        at java.net.Socket.connect(Socket.java:590)        at java.net.Socket.connect(Socket.java:539)        at java.net.Socket.<init>(Socket.java:436)        at java.net.Socket.<init>(Socket.java:219)        at sun.rmi.transport.proxy.RMIDirectSocketFactory.createSocket(RMIDirectSocketFactory.java:52)        at sun.rmi.transport.proxy.RMIMasterSocketFactory.createSocket(RMIMasterSocketFactory.java:158)        at sun.rmi.transport.tcp.TCPEndpoint.newSocket(TCPEndpoint.java:625)        ... 18 more
issueID:UIMA-364
type:Bug
changed files:uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/ui/dialogs/AbstractDialog.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/ui/dialogs/AbstractDialogMultiColTable.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/ui/dialogs/AddIndexDialog.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/ui/dialogs/AddIndexKeyDialog.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/ui/dialogs/AddRemoteServiceDialog.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/ui/dialogs/ExportImportablePartDialog.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/ui/dialogs/PickTaeForTypesDialog.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/ui/dialogs/ResourcePickerDialog.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/ui/dialogs/SelectTypeDialog.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/files/ContextForPartDialog.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/files/PickOverrideKeysAndParmName.java
texts:CDE add type button and other actions broken
Users reporting the add new type button doesn't do anything.  Another user reported problems with Edit button.  Cause traced to a different ordering in some cases of when widgets are created and handlers are called, probably caused by the changes done when migrating to Apache.  Each dialog has 2 areas: the main contents, and the button bar at the bottom with OK and Cancel.  The order of widget construction seems to be 1st: main contents, and 2nd: button bar.  If the main contents sets some fields which causes the "handlers" to run for UI events, the button bar OK button is getting enable/disabled according to dialog logic, but it hasn't even been instantiated yet.  Fix is to check button bar OK button exists before calling enableOK methods.  In the process, refactoring the code slightly to move this logic to a common spot in super class where possible.
issueID:UIMA-3640
type:Improvement
changed files:
texts:clean up / clarify FSIntArrayIndex
One minor change: the find( afeatureStructure) if it finds an FS which is == to the argument, just returns the argument (as opposed to creating a new CAS Java cover object).  Other than that, some minor cleanups of the code.
issueID:UIMA-3641
type:Improvement
changed files:uimaj-core/src/main/java/org/apache/uima/internal/util/SymbolTable.java
texts:remove synch from SymbolTable
in large multithreaded deployments, it was observed that the use of a synchronized class "Vector" used by the UIMA SymbolTable class was causing delays due to synchronization.  Change the implementation from Vector to ArrayList to avoid this.
issueID:UIMA-3642
type:Improvement
changed files:uimaj-core/src/main/java/org/apache/uima/internal/util/UIMAClassLoader.java
uimaj-core/src/main/java/org/apache/uima/internal/util/UIMAClassLoader.java
texts:Reduce class loading synchronized contention
In large multithreaded deployment with many annotators, measurements showed large slowdown in class loading as 100's of annotator classes were loaded, perhaps in 100's of instances.  Each load operation locked 1 shared global lock.  Java 7 implements a finer grained locking for this, so that the lock is per [ classloader + class-name ], to reduce lock contention.  This code will need to be conditional for Java 7 and later.  See http://docs.oracle.com/javase/7/docs/technotes/guides/lang/cl-mt.html
issueID:UIMA-3643
type:Bug
changed files:
texts:Bogus exception when response from parallel UIMA-AS annotator is received by UIMA runtime before all requests to the annotators in the parallel step are sent
I have 3 UIMA-AS annotators in a parallel step. None of the annotators are modifying anything that already exists in the CAS. Most times things work well, but I randomly get a "preexisting FS encountered but not allowed exception". Looking at the UIMA logs (setting the log level for org.apache.uima to ALL) it becomes clear what's happening:--> request goes to annotator 1--> request goes to annotator 2<-- response received from annotator 1--> request goes to annotator 3 (CAS appears to contain information received from annotator 1)...<-- response received from annotator 3 &#8211; bogus "preexisting  FS but not allowed" exception is thrownWorkaround that seems to work (but which I can't really depend on) is to order the parallel steps from slower to faster
issueID:UIMA-3644
type:Bug
changed files:
texts:UIMA-AS parallel processing is broken
It appears that the parallel step involving fast AEs is broken. The UIMA-AS  logs "preexisting FS encountered but not allowed ".A user explains the problem as follows:"The exception happens randomly. It happens when UIMA gets a response from one of the parallel annotators before it is done sending the request to all parallel annotators. à request goes to annotator 1 à request goes to annotator 2 ß response comes from annotator 1 à request goes to annotator 3 (CAS sent to annotator 3 is messed up, it includes stuff received from annotator 1) … ß response comes from annotator3 -à bogus exception: preexisting FS encountered but not allowed "This probably needs a new junit test case before a fix is made.
issueID:UIMA-3645
type:Bug
changed files:
texts:Ducc Agent logs excessively when cleaning up on startup
When an Agent starts up it tries to cleanup the node  of running processes that are associated with cgroups on the node. It reads pids of these process from each of active cgroups and kills them via -9.All of this works fine except if there is a zombie process. This is a process that is dead but still appears in the OS process map. In this case the cgroup exist and the process is still associated with it. Killing such process with -9 has no effect as the process is already dead. The bug is that the agent goes into an infinite loop waiting for the zombie to go away and worse yet, it keeps logging at 200ms intervals.Add detection of zombies and prevent logging.
issueID:UIMA-3646
type:Bug
changed files:
texts:UIMA-AS client throws javax.jms.JMSException: A consumer is consuming from the temporary destination
Looks like some kind of a race during a shutdown of uima-as client. The client log at the end of stop shows:04:08:52.710 - 1: org.apache.uima.adapter.jms.activemq.JmsInputChannel.stopChannel: INFO: Controller: ducc.jd.queue.133864 Stopped Listener on Endpoint: queue://ducc.jd.queue.133864 Selector: Selector:Command=2000 OR Command=2002. 04:08:52.710 - 1: org.apache.uima.adapter.jms.activemq.JmsInputChannel.stopChannel: INFO: Stopping Service JMS Transport. Service: ducc.jd.queue.133864 ShutdownNow true04:08:52.710 - 1: org.apache.uima.adapter.jms.activemq.JmsInputChannel.stopChannel: INFO: Controller: ducc.jd.queue.133864 Stopped Listener on Endpoint: queue://ducc.jd.queue.133864 Selector: Selector:Command=2001. 04:08:52.710 - 1: org.apache.uima.aae.controller.PrimitiveAnalysisEngineController_impl.stop: INFO: Stopping Controller: ducc.jd.queue.13386404:08:52.711 - 1: org.apache.uima.adapter.jms.activemq.JmsOutputChannel.stop: INFO: Controller: ducc.jd.queue.133864 Output Channel Shutdown Completed04:08:52.711 - 133: org.apache.uima.adapter.jms.activemq.UimaDefaultMessageListenerContainer$3.destroy: WARNING: org.springframework.jms.listener.AbstractJmsListeningContainer$SharedConnectionNotInitializedException: This listener container's shared Connection has not been initialized yetat org.springframework.jms.listener.AbstractJmsListeningContainer.getSharedConnection(AbstractJmsListeningContainer.java:483)at org.apache.uima.adapter.jms.activemq.UimaDefaultMessageListenerContainer.access$2000(UimaDefaultMessageListenerContainer.java:69)at org.apache.uima.adapter.jms.activemq.UimaDefaultMessageListenerContainer$3.run(UimaDefaultMessageListenerContainer.java:1025)04:08:52.726 - 1: org.apache.uima.aae.controller.PrimitiveAnalysisEngineController_impl.stop: INFO: Controller: ducc.jd.queue.133864 has stopped04:08:52.727 - 106: org.apache.uima.adapter.jms.client.BaseUIMAAsynchronousEngineCommon_impl.stop: INFO: Stopping Asynchronous Client.04:08:52.727 - 106: org.apache.uima.adapter.jms.client.BaseUIMAAsynchronousEngineCommon_impl.stop: INFO: Asynchronous Client Has Stopped.javax.jms.JMSException: A consumer is consuming from the temporary destinationat org.apache.activemq.ActiveMQConnection.deleteTempDestination(ActiveMQConnection.java:2041)at org.apache.uima.adapter.jms.client.BaseUIMAAsynchronousEngine_impl.stopConnection(BaseUIMAAsynchronousEngine_impl.java:235)at org.apache.uima.adapter.jms.client.BaseUIMAAsynchronousEngine_impl.stop(BaseUIMAAsynchronousEngine_impl.java:280)at org.apache.uima.adapter.jms.client.BaseUIMAAsynchronousEngineCommon_impl$UimaASShutdownHook.run(BaseUIMAAsynchronousEngineCommon_impl.java:3195)at java.lang.Thread.run(Thread.java:780)... AbstractManagedService - Stopping Service Adapter... AbstractManagedService - Calling super.stop() ----------stop() calledStopping Camel RoutesStopping Camel ContextCamel Context StoppedComponent cleanup completed - terminating processFrom AMQ source code: http://www.docjar.com/html/api/org/apache/activemq/ActiveMQConnection.java.html it looks like there is an attempt to delete a temp queue with an active session. Check the shutdown sequence to see if the uima-as client first closes its session before deleting a temp queue.
issueID:UIMA-3647
type:Bug
changed files:
texts:DUCC Agent should detect defunct processes
Modify agent to detect a defunct (zombie) process. When one is found, change the state of the process to CROAKED and remove from inventory to mark it as rogue. The defunct processes appear to be running from the Agent's point of view as the process never exited thus the Agent continues to wait in the process.waitFor() and also consumes stdout and stderr. The only remedy for this is to bounce the agent since there is no way to kill the defunct process which is still owned by the agent.
issueID:UIMA-3648
type:Bug
changed files:
texts:UIMA-AS service keeps initializing AEs despite exception
UIMA-AS service uses a custom thread pool factory to allow pining of AEs to specific threads. Initialization of AEs is sequential. It looks like the code is not paying attention to the state of the service before attempting initialization of AE. If AE fails initialization, the code continues to initialize remaining threads instead of stopping the initialization and giving up.Review the code and make sure the threads dont attempt AE initialization if a previous attempt failed.Add a new junit test case to test this scenario.
issueID:UIMA-3649
type:Improvement
changed files:uimaj-core/src/main/java/org/apache/uima/UIMAFramework.java
texts:Remove unneeded synchronization in core UIMA
As part of the general effort to get UIMA performance better in highly multithreaded environments, find and remove unneeded synchronizations.  One such example: the UIMAFramework code has a static method, getInstance(), which returns the value of a static field.  There are no other synchronizations within this class, so I believe this can be removed.
issueID:UIMA-365
type:Bug
changed files:
texts:call tae.destroy() in AnalysisEngine_implTest to close open file handles
call tae.destroy() in AnalysisEngine_implTest to close open file handles.The used CasConsumer open a file in the initialize method and close it in the destroy() or collectionComplete() method. If the destroy() method is not called, the file cannot be deleted since it is still open. Sometimes this cause the testProcess() testcase in AnalysisEngine_implTest to fail.
issueID:UIMA-3650
type:New Feature
changed files:
texts:Maven plugin for buliding Ruta descriptors
The first users started to use Ruta in mixin projects, projects that contain Ruta scripts and Java code built with maven. It would be nice if the building of Ruta descriptors would also be supported in a maven build. This issue relies on UIMA-3327
issueID:UIMA-3651
type:Bug
changed files:
texts:Imports by name not resolved by ResourceManager in Ruta Workbench
Imports by name not resolved by ResourceManager in Ruta Workbench: the datapath uses urls, but they are not correctly resolved. Rather use plain paths.
issueID:UIMA-3652
type:Bug
changed files:uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/DocumentUimaImpl.java
texts:CAS Editor does not use resource manager with datapath to resolve imports by name
CAS Editor does not use a resource manager with datapath to resolve imports by name. If there are some imports that needs to be resolved, then DocumentUimaImpl.getVirginCAS() throws an exception since no resource manager is used for resolving the imports.
issueID:UIMA-3653
type:Bug
changed files:
texts:UIMA-AS compatibility check with UIMA-SDK should use major version
Both UIMA-AS client and a service code check for compatible version of UIMA SDK druing initialization. The code does a string compare of  UimaAsVersion.getUimajFullVersionString()andUimaVersion.getFullVersionString()If not equal, the initialization fails.Modify code to only check the major version and fail if there is no match. For example:UIMA-AS version 2.4.2 should work with UIMA SDK 2.5.0, 2.5.1 and 2.9.9.butUIMA-AS version 2.4.2 should fail with UIMA SDK 3.0.0
issueID:UIMA-3654
type:Improvement
changed files:uimaj-core/src/main/java/org/apache/uima/flow/impl/FixedFlowController.java
uimaj-core/src/main/java/org/apache/uima/resource/ResourceInitializationException.java
texts:Better error message when fixed flow constraint has error
When running with the usual fixed flow controller, it works from a list of flow targets, each name which must match a delegate analysis engine key.  Add a check and error message if one of these names doesn't match any delegate key.
issueID:UIMA-3655
type:Bug
changed files:uimaj-core/src/main/java/org/apache/uima/util/CasPool.java
texts:CasPool incorrectly stores references to the InitialView of each CAS
For cas pools, getCas returns a handle to the InitialView of an empty CAS,and stores this handle to match in releaseCas. This breaks for services that employ sofamapping. The empty CAS is filled from a serialized CAS sent to the service. It is possible that a CAS received may not contain the view, CAS.NAME_DEFAULT_SOFA, specified by sofamapping.Then, when the service tries to return the CAS to the pool, releaseCas blows up at the first line,CAS cas = aCas.getView(CAS.NAME_DEFAULT_SOFA);so the CAS is not returned to the pool ==> CAS leak.The cas pool should be storing references to the base CAS, which is independent of views.
issueID:UIMA-3656
type:Bug
changed files:
texts:Nested disjunctive composed rule elements cause NPE
Nested disjunctive composed rule elements cause NPE((("A" | "B") COLON? "C" "D") | ("E" | "F")) ANY {->MARK(T1)};applied on A: C D XB C D XE XF X
issueID:UIMA-3657
type:Improvement
changed files:
texts:DUCC Orchestrator (OR) improved synchronization tracking
The orchestrator currently records to its log some limited and incomplete information about synchronization.  This improvement:1. Instruments all WorkMap synchronizations in the OR2. Accounts for time blocked and time held3. Records all new requests for synchronization when current holder exceeds 10 seconds4. Records all pending requests when current holder releases having held synchronization for > 10 secondsThis is to address the situation, for example, where OR is running albeit slowly.  Newly added log messages will hopefully shed light on where the bottlenecks may be.One theory is that a normally fast resource, such as the filesystem, becomes very slow and bogs down OR while its trying to write its checkpoint dataset.  In this case, we'd expect to see the synchronization lock held for a long time by the OR's checkpoint module.
issueID:UIMA-3658
type:Bug
changed files:
texts:DUCC Job Driver (JD) may have problem accounting for fast (e.g. 1 second) work items
When a job of, say, 10000 work items is submitted where each is of short, say 1 second, duration and the scalability is high, say, 500 threads then the WebServer displays wacky "Dispatch" numbers - for example 1700 total Dispatched when there can only be 500 max per system configured limits.This is likely not an issue with actual Job Driver queuing too much work but more likely some kind of callback or end of Work Item accounting overload?
issueID:UIMA-3659
type:Bug
changed files:
texts:DUCC Job Driver (JD) OOMs when Total number of work items is large
A Job of 300,000+ Total work items failed with Reason Premature after processing 70,000+ of them.The Job Driver (JD) maintains a file in the user's log directory named work-item-status.json.gz comprising the information shown by the WebServer on the Work Items tab of the Job Details page.  As each work item is processed, the JD's WorkItemStateManager (WiSm) maintains an in-memory representation for Id, Node, PID,  State, Start and End times.  Periodically, the JD employs the WiSm's export method to re-write the above file.Although the amount of information is relatively small per work item, when the number of work items is large the amount of memory consumed is large since these in-memory representations are kept for the lifetime of the Job.To alleviate this "designed-in" memory leak, the WiSm should only keep  active work items in-memory.  Terminal work items should be flushed to disk.  This change will affect DUCC components that employ WiSm, specifically CLI, WS and JD.
issueID:UIMA-366
type:Improvement
changed files:
texts:Rename plugin directories from xxxxx.version to xxxx_version
We're not following the usual Eclipse naming convensions currently.  The plugin id and version should be seprated by an underscore, not a dot.
issueID:UIMA-3660
type:Bug
changed files:
texts:Improve UIMA-AS logging in UimaAsThreadFactory when handling java Error
The UimaAsThreadFactory attempts to log a java error in the catch(E) block. If the error is OOM, the cause of the error is not logged as the jvm is tight on memory and it fails to log. The code succeeds dumping a message to stdout. Given that, improve the message that goes to stdout to include  the real cause of the error
issueID:UIMA-3662
type:Improvement
changed files:uimaj-core/src/main/java/org/apache/uima/impl/UimaContext_ImplBase.java
uimaj-core/src/main/java/org/apache/uima/util/CasPool.java
texts:reduce sync contention in get/release CASes from pools
In high multi-core executions, sync contention is possible when getting and returning CASes, from CasPools.  This can happen in two places: one within the UimaContext_ImplBase, and the other in the CasPool implementation.  See what can be done to reduce contention. when shared instances are accessed on multiple threads.
issueID:UIMA-3663
type:Bug
changed files:
texts:UimaContext_ImplBase code to generate uniqueIdentifier may not be unique
Code in the construction of UimaContext_ImplBase calls UID() to get a unique id.  One use is as a way to allow (for scaled-out apps) unique identification of otherwise similar MBeans, using different mbean names. MBean names cannot have colons or dashes.  This code removes those from the string value returned by UID().  This means that 2 different UIDs that differ only in having some part have a minus sign, could be confused with another not having this.  A small test case shows this can arise if > 32768 UIMA Contexts are created within one millisecond.  While extremely unlikely, this is easily avoided, for example, by substituting _ for the characters, rather than deleting them.
issueID:UIMA-3664
type:Bug
changed files:
texts:DUCC RM - rounding error allocation shares
During share counting on a cluster with a large spread of machine sizes (30G up to 256G), and there are a lot of requests for 30G shares, but only a few for 45G shares, the current code will make a rounding assumption that tends to starve the small, 45G job.The code needs to change to round UP, not DOWN, if the math calculating qshares has a residual.
issueID:UIMA-3665
type:Bug
changed files:
texts:UIMA-AS JmsStub code not clearing static Map
The UIMA-AS JmsAnalysisEngineServiceStub contains a static Map which holds a reference to a shared UIMA-AS client instance. This shared client is used by all AE instances in the JVM.This implementation causes the extended tests to fail. There are a number junit tests that test different scenarios where JmsAnalysisEngineServiceStub  is used. The first such test succeeds but subsequent ones fail with Exception "Uima EE Client Not in Running State". This is caused by the fact that the static Map in JmsAnalysisEngineServiceStub is not being cleared when each test is done. It contains a stale reference from the previous junit test. This stale reference has been stopped and its "running" flag=false causing the above mentioned exception.There is also another problem related to the lifecycle mgmt of the shared uima-as client instance. In the current code, the shared instance is stopped   when destroy() method is called. This method is called N times, where N= number of AE instances. So on the first destroy() call, the uima-as client is stopped leaving the client in !running state. Subsequent invocations to sendAndReceive will fail again with above mentioned exception.
issueID:UIMA-3666
type:New Feature
changed files:
texts:Ruta: Allow an additional argument in INLIST condition for the check
Allow an additional argument in INLIST condition for the check. Example:WORDLIST LemmaList = 'lemmas.txt';Token{INLIST(LemmaList, Token.lemma) -> MARK(Action)};
issueID:UIMA-3667
type:Bug
changed files:
texts:UIMA-AS client should call onBeforeProcessCAS() when it receives a reply with no prior ACk from remote service
When a remote service pulls a CAS from an input queue for processing it first sends an ACK to the client identifying node IP and service PID. It's been observed that sometimes the ACK is never received by the client. Interestingly, the process reply is received.  In such a case, the UIMA-AS client should call onBeforeProcessCAS() if it handles a reply with no prior ACK. Some applications may depend on receiving onBeforeProcessCAS() and block if it never comes.
issueID:UIMA-3668
type:Bug
changed files:
texts:Ruta Workbench: Load type system descriptor from maven dependencies
I tried to load a type system descriptor from maven dependencies of the project. The type system was not resolved.
issueID:UIMA-3669
type:Question
changed files:
texts:Problem with Annotation Declaration, Error parsing XCAS or XMI-CAS from source <unknown> at line 1, column 75407: unknown type: com.uima.RutaTesting.Gather_Testing.C.
Hello there all,I am new to Ruta and trying to find my way around,I have created some scripts that do some annotating from csv files and trying to construct some more complex annotation by combining 2 Annotations to create a new one that has Annotation Type Features.My script:PACKAGE com.uima.RutaTesting;SCRIPT com.uima.RutaTesting.Disctionary_Annotators;SCRIPT com.uima.RutaTesting.SpeedDiscription;DECLARE Annotation C (SpeedDiscriptor F1, Target F2);Document{->CALL(Disctionary_Annotators)};Document{->CALL(SpeedDiscription)};SpeedDiscriptor Target {->CREATE (C, "F1"=SpeedDiscriptor, "F2"=Target),SHIFT(SpeedDiscriptor,1,2)};When I try to annotate the text i get the error : Error parsing XCAS or XMI-CAS from source <unknown> at line 1, column 75407: unknown type: com.uima.RutaTesting.Gather_Testing.EmplRelation.I cannot understand why this happens..Any ideas?
issueID:UIMA-367
type:Bug
changed files:uimaj-core/src/main/java/org/apache/uima/analysis_engine/impl/MultiprocessingAnalysisEngine_impl.java
uimaj-core/src/main/java/org/apache/uima/internal/util/AnalysisEnginePool.java
uimaj-core/src/main/java/org/apache/uima/internal/util/ResourcePool.java
texts:Deadlock can occur in MultiprocessingAnalysisEngine_impl.setResultSpecification
User reports unit test frequently hangs at the following location:----------------Thread &#91;Thread-1&#93; (Suspended)   Object.wait(long) line: not available &#91;native method&#93;   ResourcePool.getResource(long) line: 166   AnalysisEnginePool.setResultSpecification(ResultSpecification) line:155MultiprocessingAnalysisEngine_impl.setResultSpecification(ResultSpecification)line: 122MultiprocessingAnalysisEngine_impl(AnalysisEngineImplBase).process(CAS,ResultSpecification) line: 200   MultiprocessingAnalysisEngine_implTest$ProcessThread.run() line: 363-------------------I took a look at the code forAnalysisEnginePool.setResultSpecification.  It tries to set the resultspecification of all AEs in the pool.  To do this it attempts to checkout all instances from the pool, set their result spec, and thenreleases them all.  If this method is executed simultaneously from twothreads,  it can easily result in deadlock (each thread has someportion of the instances checked out and is trying to check out theremainder of them, and both will wait forever).And this method is called from the process(CAS, ResultSpecification)method, called in this test case from multiple threads.This design is broken and must be fixed.
issueID:UIMA-3670
type:Bug
changed files:
texts:Ruta action SETFEATURE does not work with feature expressions
Ruta action SETFEATURE does not work with feature expressions:DECLARE Annotation X (STRING s);DECLARE X C;DECLARE X B (C c);DECLARE X A (B b);W{-> CREATE(C, "s" = "c")};W{-> CREATE(B, "c" = C, "s" = "b")};W{-> CREATE(A, "b" = B, "s" = "a")};A{-> SETFEATURE("s", A.b.c.s)};Feature s of annotation matched by type A is not set to "c". This is cuased by the misinterpretation of the feature expression as a number expression, I think.
issueID:UIMA-3671
type:Bug
changed files:
texts:Resources cannot be shared between reader and analysis engines in SimplePipeline
SimplePipeline currently does not support sharing a resource between the reader and the components.Internally, SimplePipeline instantiates the reader and the componentsseparately, thus they end up with different resource managers.Resources can only be shared by components that use the same resourcemanager.
issueID:UIMA-3673
type:Improvement
changed files:uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/AnnotationEditor.java
texts:CAS Editor: set shown annotation types (collection of types)
I would would like to directly set a collection of shown annotation types in the AnnotationEditor rather than calling setShownAnnotationType multiple times. This would substantially speed-up this task.
issueID:UIMA-3674
type:Improvement
changed files:uimaj-core/src/main/java/org/apache/uima/cas/impl/FSIndexRepositoryImpl.java
texts:Allow multiple iterators in different threads to read the CAS
Some applications scale out on multi-core machines by using CAS Multipliers.  Sometimes, it makes sense when the new CASes have a lot of identical data, to have the common part of these in another CAS which can be set up and shared (read-only) by other threads.  Unfortunately, this design suffers from random failures in the CAS iterator code.  Figure out what's wrong and fix this, to start supporting read-only CASes being accessed simultaneously in a multi-core platform on multiple threads.  Include a JUnit test case, too, if possible.
issueID:UIMA-3675
type:Improvement
changed files:uimaj-core/src/main/java/org/apache/uima/cas/impl/FSIndexRepositoryImpl.java
uimaj-core/src/main/java/org/apache/uima/internal/util/rb_trees/IntArrayRBT.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FSIndexComparatorImpl.java
texts:Allow Eclilpse debugger to inspect more UIMA internals
While debugging something, I got frustrated by the value inspector of Eclipse saying something like ... exception.. instead of the value.  The internet suggested that hashCode throwing exceptions might be the cause.  I found several of the internal UIMA objects had hashCode set to throw unsupportedException - and changed those to some reasonable hash code, it allowed the Eclipse debugger to show the values of these objects.  Fixup some of these and improve the toString methods, for better debugging capability.
issueID:UIMA-3676
type:New Feature
changed files:
texts:DUCC DB
DUCC currently used flat files of serialized Java objects to store history comprising Jobs, Reservations and Services.  And the WebServer currently caches only the most recent 4096 of each.Proposed is to explore the possibility of employing a DB, initially with Apache Derby, to better manage and utilize these potentially large historical data sets.  The DB would be owned by a new DUCC DB daemon and others such as Orchestrater, WebServer and Services Manager would interact with it to store, update and retrieve data.
issueID:UIMA-3678
type:Bug
changed files:
texts:Ruta: Trim Action throws Nullpointer on fully trimmed Annotations
If an annotation is totally trimmed, i.e., the annotation only consists of annotations that should be removed, a nullpointer exception is thrown.Expected behavior: the annotation is removed.
issueID:UIMA-3679
type:Bug
changed files:
texts:Ruta documentation mentions wordlist with wrong quoting
Ruta documentation mentions wordlist with wrong quoting:WORDLIST Names = "Names.mtwl";
issueID:UIMA-368
type:Improvement
changed files:
texts:Allow setting logger config file and other JVM system properties in scripts/bat files
It would be nice if users didn't have to edit our script files to do things like set the logger config file or set the Java heap size.I recommend we make the scripts check for a UIMA_LOGGER_CONFIG_FILE env var and use that if specified.We can also add a catch all UIMA_JVM_OPTS env var for arbitrary other VM args (e.g. -Xmx).
issueID:UIMA-3680
type:Bug
changed files:
texts:addSourceToJars script missing
The script addSourceToJars mentioned at http://uima.apache.org/d/uimaj-2.5.0/overview_and_setup.html#ugr.ovv.eclipse_setup.adding_source is not present in the source distribution.
issueID:UIMA-3681
type:Question
changed files:
texts:Using OpenNLP
HelloI have build the OpenNLP and I have the OpenNLPTextAnalyzer.pear.I don't find documentation over how to integrate in UIMA pipeline. Can you help me?Thanks for your attention.Regards.
issueID:UIMA-3682
type:Improvement
changed files:
texts:DUCC WebServer (WS) Services Page reorganization
Rationalization: Currently the Services Page displayed by the WebServer is transparent, showing "raw" data that is not as clear in meaning as it could be.Proposed:1. Remove columns: Type, State, Pinger, Health as currently implemented2. Add Columns: State, Reason(a) Unknown, Pinger down(b) Down, Pinger reporting  (c) Poor, Pinger reporting (d) Good, Pinger reporting(e) Idle, ddd:hh:mm:ss since last useNotes:1. For (c) and (d) hover over state shows pinger provided status string, as before2. For (e) decision to display Idle over Good or Poor is based on time of last use as reported by pinger and a ducc.service.idle.time.threshold <time-in-millis> specified in ducc.properties (or registry for that service?) with default value of 24 hours.
issueID:UIMA-3683
type:New Feature
changed files:
texts:Ruta: Add block that stops after first applied statement
Add a new block construct that stops after first applied statement. Create new projects that contain such extensions.
issueID:UIMA-3684
type:Improvement
changed files:uimaj-core/src/main/java/org/apache/uima/analysis_engine/impl/AnalysisEngineDescription_impl.java
uimaj-core/src/main/java/org/apache/uima/resource/metadata/MetaDataObject.java
uimaj-core/src/main/java/org/apache/uima/resource/metadata/impl/ConfigurationParameterSettings_impl.java
uimaj-core/src/main/java/org/apache/uima/resource/metadata/impl/MetaDataObject_impl.java
uimaj-core/src/main/java/org/apache/uima/util/ConcurrentHashMapWithProducer.java
texts:improve the caching of XMLinfo for uima objects obtained via bean reflection
Speed up parsing of uima descriptors by caching information obtained from the bean framework support in a more efficient (both in space and time) way.
issueID:UIMA-3685
type:Bug
changed files:
texts:DUCC&#39;s rogue process detector not reporting JPs parented by init (1)
Its been observed that a JP launched by DUCC hung while writing out its core dump due to exceeded quota. The process was still alive blocking in write(). The core dump caused the change in process ownership. The OS changed the owner from <user> to init(1). The process still had its cgroup intact as it was still running.The rogue process detector while looking for rogue processes checks if a process belongs to a cgroup. If it does, the detector assumes that this is a valid process and not rogue.The detector should not check if the process belongs to a cgroup while determining if its rogue or not. Any process that does not have ducc as its ancestor should be treated as rogue and reported as such for subsequent cleanup. Exception to this are processes belonging to users with reservations on the node.
issueID:UIMA-3688
type:Improvement
changed files:uimaj-core/src/main/java/org/apache/uima/resource/metadata/impl/TypePriorities_impl.java
uimaj-core/src/main/java/org/apache/uima/resource/impl/ResourceManager_impl.java
texts:improve multi-core possibilites with ResourceManager_impl
Reduce locking/sync granularity by moving various maps to ConcurrentMaps..  Add double-checked locking to some lazy initialization. Do minor refactoring to avoid duplicate code.
issueID:UIMA-369
type:Task
changed files:
texts:Use same test data as Java project
The example CAS data and type systems changed in Java ... use the same ones
issueID:UIMA-3690
type:Improvement
changed files:uimaj-core/src/main/java/org/apache/uima/util/impl/XMLParser_impl.java
texts:get schema for parsing xml descriptors once, at class load time
the XMLParser_impl has multiple varieties of parse calls, all of which get the schema resource from the file system. Change this to get this once, at file load time, as a final static value.
issueID:UIMA-3691
type:Improvement
changed files:
texts:support multi-threaded shared contexts for CasPools for CAS Multipliers
The current UIMA framework design is quite flexible when it comes to producing analysis engines (AEs), to allow various scale-outs on a single JVM. When scaled out, via multiple instances of the AEs, it's possible to have the multiple instances share the UIMA Context (by passing a reference to it in additional params). The current design for CAS Multipliers creates a pool for each CAS Multiplier, and hangs it off of the UIMA Context.  The problem with this approach is that if the scaleout approach chooses to share a common UIMA Context with all scaled out instances, then the CAS pool will run out of CASes.  A better design is to hang the pool off of an object that will scale with the Annotator itself, rather than the shared context.  This can be done by changing the implementation of getEmptyCas() in the CasMultiplier_implBase class(es).  The current implementation calls the same method on the (potentially shared) UIMA Context object; this could be deprecated with a note saying that this will still work, but not with scaled out impls that share the UIMA context object.
issueID:UIMA-3692
type:Bug
changed files:uimaj-core/src/main/java/org/apache/uima/internal/util/MsgLocalizationClassLoader.java
uimaj-core/src/main/java/org/apache/uima/InternationalizedException.java
uimaj-core/src/main/java/org/apache/uima/internal/util/I18nUtil.java
uimaj-core/src/main/java/org/apache/uima/internal/util/MsgLocalizationClassLoader.java
uimaj-core/src/main/java/org/apache/uima/internal/util/MsgLocalizationClassLoader.java
uimaj-core/src/main/java/org/apache/uima/internal/util/MsgLocalizationClassLoader.java
texts:Classloading inconsistencies
The type discovery mechanism relies on Spring tech and eventually on org.springframework.util.ClassUtils.getDefaultClassLoader() which tries the following classloaders: Thread.currentThread().getContextClassLoader() ClassUtils.class.getClassLoader()This allows it to override the classloader used for type scanning by setting the thread classloader.However, when we actually instantiate components, we rely on UIMA tech which uses: getUimaContextAdmin().getResourceManager().getExtensionClassLoader() Class.forName(annotatorClassName)In particular, it does not look at the thread context. To make classloading consistent, it appears that uimaFIT should check if there is a thread classloader and configure it as the extension classloader for UIMA components created via uimaFIT. Because uimaFIT is using mainly static methods, respecting the thread classloader appears to be the most sensible thing. At least better than setting a global classloader.To give some context: I hit this problem when running a uimaFIT pipeline from a Jython script. The first problem was to allow uimaFIT to properly scan the JARs in sys.path of the script context, which I did by setting the thread classloader. After that, I tried to run a UIMA component whose class I had defined in the script. UIMA was not able to find the class for this component:Traceback (most recent call last):  File "./bad.jpy", line 39, in <module>    runPipeline( at org.apache.uima.analysis_engine.impl.PrimitiveAnalysisEngine_impl.initializeAnalysisComponent(PrimitiveAnalysisEngine_impl.java:209) at org.apache.uima.analysis_engine.impl.PrimitiveAnalysisEngine_impl.initialize(PrimitiveAnalysisEngine_impl.java:158) at org.apache.uima.impl.AnalysisEngineFactory_impl.produceResource(AnalysisEngineFactory_impl.java:94) at org.apache.uima.impl.CompositeResourceFactory_impl.produceResource(CompositeResourceFactory_impl.java:62) at org.apache.uima.UIMAFramework.produceResource(UIMAFramework.java:269) at org.apache.uima.UIMAFramework.produceAnalysisEngine(UIMAFramework.java:387) at org.apache.uima.analysis_engine.asb.impl.ASB_impl.setup(ASB_impl.java:255) at org.apache.uima.analysis_engine.impl.AggregateAnalysisEngine_impl.initASB(AggregateAnalysisEngine_impl.java:429) at org.apache.uima.analysis_engine.impl.AggregateAnalysisEngine_impl.initializeAggregateAnalysisEngine(AggregateAnalysisEngine_impl.java:373) at org.apache.uima.analysis_engine.impl.AggregateAnalysisEngine_impl.initialize(AggregateAnalysisEngine_impl.java:186) at org.apache.uima.impl.AnalysisEngineFactory_impl.produceResource(AnalysisEngineFactory_impl.java:94) at org.apache.uima.impl.CompositeResourceFactory_impl.produceResource(CompositeResourceFactory_impl.java:62) at org.apache.uima.UIMAFramework.produceResource(UIMAFramework.java:269) at org.apache.uima.UIMAFramework.produceResource(UIMAFramework.java:314) at org.apache.uima.UIMAFramework.produceAnalysisEngine(UIMAFramework.java:425) at org.apache.uima.fit.factory.AnalysisEngineFactory.createEngine(AnalysisEngineFactory.java:204) at org.apache.uima.fit.pipeline.SimplePipeline.runPipeline(SimplePipeline.java:73) at org.apache.uima.fit.pipeline.SimplePipeline.runPipeline(SimplePipeline.java:115) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:483)org.apache.uima.resource.ResourceInitializationException: org.apache.uima.resource.ResourceInitializationException: Annotator class "org.python.proxies.__main__$Writer$1" was not found. (Descriptor: <unknown>)
issueID:UIMA-3693
type:Improvement
changed files:uimaj-core/src/main/java/org/apache/uima/analysis_engine/metadata/impl/FlowControllerDeclaration_impl.java
uimaj-core/src/main/java/org/apache/uima/resource/metadata/impl/TypeSystemDescription_impl.java
uimaj-core/src/main/java/org/apache/uima/resource/impl/ResourceManager_impl.java
uimaj-core/src/main/java/org/apache/uima/resource/Resource_ImplBase.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/impl/PearAnalysisEngineWrapper.java
uimaj-core/src/main/java/org/apache/uima/resource/metadata/impl/TypePriorityList_impl.java
uimaj-core/src/main/java/org/apache/uima/resource/metadata/impl/TypePriorities_impl.java
uimaj-core/src/main/java/org/apache/uima/resource/metadata/impl/ResourceManagerConfiguration_impl.java
uimaj-core/src/main/java/org/apache/uima/resource/impl/ConfigurationManagerImplBase.java
uimaj-core/src/main/java/org/apache/uima/impl/RootUimaContext_impl.java
uimaj-core/src/main/java/org/apache/uima/impl/UimaContext_ImplBase.java
uimaj-core/src/main/java/org/apache/uima/impl/ChildUimaContext_impl.java
uimaj-core/src/main/java/org/apache/uima/resource/metadata/impl/FsIndexCollection_impl.java
texts:reduce unneeded object creation (garbage)
While going through other tasks, do some cleanups to reduce unneeded object creation, to reduce the load on the gc.  This is minor, and would not probably be worth doing, unless there were other reasons for visiting these modules.
issueID:UIMA-3694
type:Improvement
changed files:uimaj-core/src/main/java/org/apache/uima/analysis_engine/metadata/impl/FlowControllerDeclaration_impl.java
uimaj-core/src/main/java/org/apache/uima/resource/metadata/impl/TypeSystemDescription_impl.java
uimaj-core/src/main/java/org/apache/uima/resource/impl/ResourceManager_impl.java
uimaj-core/src/main/java/org/apache/uima/resource/Resource_ImplBase.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/impl/PearAnalysisEngineWrapper.java
uimaj-core/src/main/java/org/apache/uima/resource/metadata/impl/TypePriorityList_impl.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/impl/PrimitiveAnalysisEngine_impl.java
uimaj-core/src/main/java/org/apache/uima/resource/metadata/impl/ResourceManagerConfiguration_impl.java
uimaj-core/src/main/java/org/apache/uima/resource/impl/ConfigurationManagerImplBase.java
uimaj-core/src/main/java/org/apache/uima/UIMAFramework.java
uimaj-core/src/main/java/org/apache/uima/resource/metadata/impl/TypePriorities_impl.java
uimaj-core/src/main/java/org/apache/uima/impl/RootUimaContext_impl.java
uimaj-core/src/main/java/org/apache/uima/impl/UimaContext_ImplBase.java
uimaj-core/src/main/java/org/apache/uima/impl/ChildUimaContext_impl.java
uimaj-core/src/main/java/org/apache/uima/resource/metadata/impl/FsIndexCollection_impl.java
texts:allow parallel initialization of components to speed things up in multi-core sys
Some embedders, and perhaps someday, the UIMA framework itself, want to take a set of primitive analysis engines in some flow, and initialize them in parallel, on a multi-core machine, where the AEs share a resource manager, and even (for scaled -out instances) a common UIMA - Context. Add the minimal synchronization and ConcurrentMaps, etc., to permit this, in order to reduce initialization time in multi-core deployments.
issueID:UIMA-3695
type:Bug
changed files:
texts:Problems with UIMA Ruta Jenkins build
Problems with UIMA Ruta Jenkins build. The build fails when downloading equinox.app in version 1.0.0. the dependency is maybe introduced by the CAS Editor plugins. Maybe the origin of the problem lies somewhere else.
issueID:UIMA-3696
type:Bug
changed files:
texts:UIMA-AS while quiescing  should wait for AE.destroy() to finish
When quiescing, the UIMA-AS is not blocking waiting for AE.destroy() method to finish. Instead it waits for all CASes to finish and then returns. The consequence is that user code in destroy() may not run to completion if the jvm is stopping due to System.exit() call. It looks like, when shutdown hooks are registered, the jvm runs them to completion and then halts.Modify quiesce() method to block for all Process threads to finish before returning.
issueID:UIMA-3698
type:Bug
changed files:
texts:Remove ShutdownHook from UIMA-DUCC DuccService
DUCC common code includes two ShutdownHooks in two classes: DuccService and AbstractDuccComponent. The one in DuccService should be removed.
issueID:UIMA-37
type:Task
changed files:uimaj-tools/src/main/java/org/apache/uima/tools/stylemap/TableDropAdapter.java
jVinci/src/main/java/org/apache/vinci/transport/TransportConstants.java
uimaj-tools/src/main/java/org/apache/uima/tools/stylemap/ColorEditor.java
uimaj-tools/src/main/java/org/apache/uima/tools/cvd/MainFrame.java
uimaj-core/src/main/java/org/apache/uima/internal/util/BrowserUtil.java
uimaj-tools/src/main/java/org/apache/uima/tools/pear/install/InstallPear.java
uimaj-tools/src/main/java/org/apache/uima/tools/stylemap/StyleConstants.java
uimaj-tools/src/main/java/org/apache/uima/tools/jcasgen/Prefs.java
uimaj-tools/src/main/java/org/apache/uima/tools/docanalyzer/PrefsMediator.java
uimaj-core/src/main/java/org/apache/uima/util/impl/XMLParser_impl.java
uimaj-examples/src/main/java/org/apache/uima/examples/SourceDocumentInformation.java
uimaj-tools/src/main/java/org/apache/uima/tools/stylemap/StyleMapEntry.java
uimaj-tools/src/main/java/org/apache/uima/tools/stylemap/MyCellRenderer.java
uimaj-tools/src/main/java/org/apache/uima/tools/AnnotationViewerMain.java
uimaj-tools/src/main/java/org/apache/uima/tools/stylemap/ColorRenderer.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/ShortHeap.java
uimaj-tools/src/main/java/org/apache/uima/tools/cpm/CpmPanel.java
uimaj-tools/src/main/java/org/apache/uima/tools/stylemap/TableGUIMediator.java
uimaj-tools/src/main/java/org/apache/uima/tools/stylemap/ColorParser.java
uimaj-tools/src/main/java/org/apache/uima/tools/stylemap/StyleMapTableModel.java
texts:Track down and replace remaining occurrences of IBM

issueID:UIMA-370
type:Bug
changed files:
texts:Migration tool gets ProgressImpl wrong
User bug report on the migration tool:It looks like it gets ProgressImpl wrong, but this is easily corrected after the factIt generatesimport org.apache.uima.collection.impl.ProgressImpl;instead ofimport org.apache.uima.util.ProgressImpl;
issueID:UIMA-3700
type:Improvement
changed files:
texts:Move MQ Reaper helper code from Common to Orchestrator
No need for this code to be in Common.  Also, issue message into Orchestrator log comprising MQ broker info.
issueID:UIMA-3701
type:Improvement
changed files:
texts:DUCC WebServer (WS) should accept any case for ducc.runmode = "test" in ducc.prtoperties
See summary.
issueID:UIMA-3702
type:Improvement
changed files:
texts:DUCC WebServer (WS) display for trunk should be adjusted...
to show:1. copyright year has advanced to 20142. code level is beyond 1.0.0
issueID:UIMA-3703
type:Improvement
changed files:
texts:DUCC Add uuid to NodeIdentity
The NodeIdentity should generate a UUID and make it available to interested parties.  The UUID is to be used by RM and WS and maybe others to detect duplicate Agent instances on the same node, the presence of which can cause all sorts of problems including permanently "hung" jobs.The proposed use of this is for RM to 'blacklist' the duplicate Agents, purging all work from them, and refuse to allocate new work on them until they are cleaned up and whitelisted again.  WS would reveal the problem so admins could  be aware and clean up.Logic to use this will be implemented later under separate JIRAs.
issueID:UIMA-3704
type:Improvement
changed files:
texts:DUCC SM should support timestamps to identify idle services
The Service Manager's ping/monitor protocol should support a mechanism to provide identification of services that are started and using resources, but which have been idle for a "long time".  The mechanism should enable identification of idle services and a mechanism to turn off the services under site policies.The proposed mechanism is for the ping/monitors to support a "last use" timestamp which indicates the last apparent use of the service.  Display mechanisms such as the web server would use this to identify unused or lightly-used services.  The mechanism also should enable ping/monitor support to automatically stop idle services.  The Service Manager's start-by-reference mechanism is then used to start the service if some job later needs the service, with the only loss being the time needed to initialize the service.The mechanism should also enable the ping/monitor to re-enable the service's persistent running state if it determines this is needed.The proposed mechanism for this second step is to allow the ping/monitor to enable or disable the service's "autostart" flag.
issueID:UIMA-3705
type:Improvement
changed files:
texts:DUCC RM should detect duplicate nodes and stop schedulng to them.
If the Resource Manager detects duplicate node agents with different UUIDs attempting to join the DUCC cluster it should deallocate all work on the affected nodes and stop scheduling to that node until some intervention is performed to stop the duplicate(s) and communicate to RM that the node/agents have been cleaned up.
issueID:UIMA-3706
type:New Feature
changed files:
texts:uima-ducc-vm installation and work-load driver
Configuration data and work load driver scripting.See project uima-ducc-examples src/main/uima-ducc-vm/README.Also update the wiki at https://cwiki.apache.org/confluence/display/UIMA/DUCC to describe how a developer would install the demo at http://uima-ducc-vm.apache.org:42133/jobs.jsp
issueID:UIMA-3707
type:Improvement
changed files:
texts:DUCC SM should mark custom pingers so they&#39;re more easily reaped.
If the Service Manager is killed-with-prejudice it can leave CUSTOM pingers alive and orphaned (children of init).SM should clearly mark these processes so cleanup procedures can easily find them and reap them as part of system startup.  The proposed mechanism is to set a -Dmarker as a no-op system property to ServicePingMain that is easily discovered using ps.  Startup scripting (and check_ducc) will look for these processes and kill them prior to starting SM.As well SM should implement a shutdown hook that attempts to stop these pingers if it is stopped with only-a-little-prejudice.
issueID:UIMA-3708
type:Bug
changed files:
texts:Reduce DUCCs PM logging
The PM logs way too much stuff right now, Change log level to debug on messages that are not absolutely required.
issueID:UIMA-3709
type:Bug
changed files:
texts:DUCC Agent doesnt collect all JVM GC stats
Review how the agent collects jvm GC stats. Looks like it only collects part of what is available.
issueID:UIMA-371
type:New Feature
changed files:
texts:XMI serialization to UIMA C++
In order to comply to the UIMA standard for CAS data, Bhavani Iyer has been working on XMI serialization support for UIMA C++.
issueID:UIMA-3710
type:Bug
changed files:
texts:DUCC Job Driver (JD) does not check top level during analysis of Exception stack
JD automatically retries work items that are due to DUCC framework errors (e.g. not the user's fault).  JD has a small analysis engine that traipses through the Exception stack looking for these errors, including ones that have "Wire format negotiation timeout" as the cause.The JD fails to check the top level Exception for the cause.
issueID:UIMA-3711
type:Bug
changed files:
texts:uima-ducc-vm DriverInitializationFailure
=====JP log/tmp/ducc/driver/urchin/ducc/logs/81/81-UIMA-uima-ducc-vm-9-21513.log050 ducc_ling Version 1.0.1 compiled Mar 29 2014 at 16:04:514050 Limits: CORE soft&#91;0&#93; hard&#91;-1&#93;4050 Limits: CPU soft&#91;-1&#93; hard&#91;-1&#93;4050 Limits: DATA soft&#91;-1&#93; hard&#91;-1&#93;4050 Limits: FSIZE soft&#91;-1&#93; hard&#91;-1&#93;4050 Limits: MEMLOCK soft&#91;65536&#93; hard&#91;65536&#93;4050 Limits: NOFILE soft&#91;4096&#93; hard&#91;4096&#93;4050 Limits: NPROC soft&#91;39567&#93; hard&#91;39567&#93;4050 Limits: RSS soft&#91;-1&#93; hard&#91;-1&#93;4050 Limits: STACK soft&#91;8388608&#93; hard&#91;-1&#93;4050 Limits: AS soft&#91;-1&#93; hard&#91;-1&#93;4050 Limits: LOCKS soft&#91;-1&#93; hard&#91;-1&#93;4050 Limits: SIGPENDING soft&#91;39567&#93; hard&#91;39567&#93;4050 Limits: MSGQUEUE soft&#91;819200&#93; hard&#91;819200&#93;4050 Limits: NICE soft&#91;0&#93; hard&#91;0&#93;4050 Limits: STACK soft&#91;8388608&#93; hard&#91;-1&#93;4050 Limits: RTPRIO soft&#91;0&#93; hard&#91;0&#93;1120 Changed to working directory /tmp/ducc/driver/urchin/ducc/work/2Environ&#91;0&#93; = AE_INIT_TIME=90Environ&#91;1&#93; = IP=192.168.4.9Environ&#91;2&#93; = AE_INIT_RANGE=30Environ&#91;3&#93; = USER=urchinEnviron&#91;4&#93; = HOME=/home/degenaroEnviron&#91;5&#93; = LD_LIBRARY_PATH=/yet/a/nother/dumb/pathEnviron&#91;6&#93; = JobId=81Environ&#91;7&#93; = INIT_ERROR=0Environ&#91;8&#93; = LANG=en_US.UTF-8Environ&#91;9&#93; = NodeName=uima-ducc-vm-9Environ&#91;10&#93; = ProcessDuccId=be2f4d8f-e6b6-41cd-a72c-7b8403f919f51000 Command to exec: /home/degenaro/local/sun/jdk1.7.0_45/jre/bin/javaarg&#91;1&#93;: -DDUCC_HOME=/home/degenaro/ducc/versions/apache-uima-ducc-1.0.1-SNAPSHOTarg&#91;2&#93;: -Dducc.deploy.configuration=/home/degenaro/ducc/versions/apache-uima-ducc-1.0.1-SNAPSHOT/resources/ducc.propertiesarg&#91;3&#93;: -Dducc.agent.process.state.update.port=49712arg&#91;4&#93;: -Dducc.process.log.dir=/tmp/ducc/driver/urchin/ducc/logs/81/arg&#91;5&#93;: -Dducc.process.log.basename=81-UIMA-uima-ducc-vm-9arg&#91;6&#93;: -Dducc.job.id=81arg&#91;7&#93;: -Xmx100Marg&#91;8&#93;: -Dducc.deploy.components=uima-asarg&#91;9&#93;: -classpatharg&#91;10&#93;: /home/degenaro/ducc/versions/apache-uima-ducc-1.0.1-SNAPSHOT/lib/uima-ducc/:/home/degenaro/ducc/versions/apache-uima-ducc-1.0.1-SNAPSHOT/lib/uima/:/home/degenaro/ducc/versions/apache-uima-ducc-1.0.1-SNAPSHOT/lib/apache-log4j/:/home/degenaro/ducc/versions/apache-uima-ducc-1.0.1-SNAPSHOT/lib/apache-activemq/:/home/degenaro/ducc/versions/apache-uima-ducc-1.0.1-SNAPSHOT/lib/apache-camel/:/home/degenaro/ducc/versions/apache-uima-ducc-1.0.1-SNAPSHOT/lib/http-client/:/home/degenaro/ducc/versions/apache-uima-ducc-1.0.1-SNAPSHOT/lib/slf4j/:/home/degenaro/ducc/versions/apache-uima-ducc-1.0.1-SNAPSHOT/lib/springframework/:/home/degenaro/ducc/versions/apache-uima-ducc-1.0.1-SNAPSHOT/lib/xstream/:/home/degenaro/ducc/versions/apache-uima-ducc-1.0.1-SNAPSHOT/resources:/home/degenaro/ducc/versions/apache-uima-ducc-1.0.1-SNAPSHOT/lib/uima-ducc/examples/arg&#91;11&#93;: org.apache.uima.ducc.common.main.DuccServicearg&#91;12&#93;: /tmp/ducc/driver/urchin/ducc/logs/81/81-uima-as-dd-20300.xml1001 Command launching...{ducc.agent.exclusion.file=/home/degenaro/ducc/versions/apache-uima-ducc-1.0.1-SNAPSHOT/resources/exclusion.nodes, file.encoding.pkg=sun.io, ducc.orchestrator.http.node=localhost, ducc.sm.meta.ping.stability=10, ducc.agent.managed.process.state.update.endpoint.type=socket, java.home=/home/degenaro/local/sun/jdk1.7.0_45/jre, ducc.ws.jsp.compilation.directory=/tmp/ducc/jsp, ducc.sm.http.port=19989, ducc.head=localhost, ducc.rm.class.definitions=ducc.classes, ducc.agent.jvm.args=-Xmx150M, ducc.jd.queue.timeout.minutes=5, ducc.broker.memory.options=-Xmx600M, java.endorsed.dirs=/home/degenaro/local/sun/jdk1.7.0_45/jre/lib/endorsed, ducc.db.state.update.endpoint.type=topic, ducc.orchestrator.state.update.endpoint=activemq:topic:ducc.orchestrator.state, ducc.agent.launcher.process.init.timeout=7200000, ducc.agent.node.inventory.endpoint=activemq:topic:ducc.node.inventory, ducc.rm.state.publish.rate=10000, sun.os.patch.level=unknown, java.vendor.url=http://java.oracle.com/, ducc.uima-as.endpoint.type=socket, ducc.db.configuration.class=org.apache.uima.ducc.db.config.DbComponentConfiguration, ducc.ws.session.minutes=60, java.version=1.7.0_45, ducc.cli.httpclient.sotimeout=0, ducc.agent.node.metrics.endpoint.type=topic, ducc.ws.port.ssl.pw=quackquack, ducc.broker.server.url.decoration=transport.soWriteTimeout=45000, ducc.signature.required=on, ducc.process.log.dir=/tmp/ducc/driver/urchin/ducc/logs/81/, ducc.orchestrator.abbreviated.state.update.endpoint=activemq:topic:ducc.orchestrator.abbreviated.state, ducc.sm.instance.failure.limit=5, ducc.admin.endpoint=activemq:topic:ducc.admin.channel, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, ducc.jd.state.update.endpoint=activemq:topic:ducc.jd.state, ducc.rm.default.memory=4, user.name=degenaro, sun.io.unicode.encoding=UnicodeLittle, sun.jnu.encoding=UTF-8, java.runtime.name=Java(TM) SE Runtime Environment, ducc.broker.protocol=tcp, ducc.broker.credentials.file=/home/degenaro/ducc/versions/apache-uima-ducc-1.0.1-SNAPSHOT/activemq/conf/ducc-broker-credentials.properties, java.specification.name=Java Platform API Specification, ducc.cluster.name=Apache UIMA-DUCC, ducc.pm.jvm.args=-Xmx150M, user.timezone=Etc/UTC, ducc.pm.state.publish.rate=15000, ducc.orchestrator.jvm.args=-Xmx150M, path.separator=:, ducc.jvm=/home/degenaro/usr/bin/java, ducc.orchestrator.maintenance.rate=60000, ducc.orchestrator.state.update.endpoint.type=topic, file.encoding=UTF-8, sun.java.command=org.apache.uima.ducc.common.main.DuccService /tmp/ducc/driver/urchin/ducc/logs/81/81-uima-as-dd-20300.xml, ducc.jd.configuration.class=org.apache.uima.ducc.jd.config.JobDriverConfiguration, ducc.orchestrator.http.port=19988, ducc.agent.node.inventory.publish.rate.skip=30, ducc.rm.state.update.endpoint=activemq:topic:ducc.rm.state, ducc.environment.propagated=USER HOME LANG, ducc.locale.country=us, java.io.tmpdir=/tmp, user.language=en, line.separator=, ducc.deploy.configuration=/home/degenaro/ducc/versions/apache-uima-ducc-1.0.1-SNAPSHOT/resources/ducc.properties, ducc.jd.queue.prefix=ducc.jd.queue., java.vm.info=mixed mode, ducc.agent.managed.process.state.update.endpoint.params=transferExchange=true&sync=false, ducc.jd.host.user=System, ducc.job.id=81, java.vm.specification.name=Java Virtual Machine Specification, ducc.rm.initialization.cap=1, ducc.broker.url.decoration=wireFormat.maxInactivityDuration=0&jms.useCompression=true&closeAsync=false, ducc.agent.node.metrics.publish.rate=30000, ducc.rm.jvm.args=-Xmx150M, ducc.admin.endpoint.type=topic, ducc.ws.port.ssl=42155, ducc.ws.jvm.args=-Xmx300M -Djava.util.Arrays.useLegacyMergeSort=true, ducc.broker.home=/home/degenaro/ducc/versions/apache-uima-ducc-1.0.1-SNAPSHOT/activemq, ducc.sm.meta.ping.rate=60000, ducc.broker.jmx.port=9999, ducc.jd.host.class=JobDriver, ducc.agent.managed.process.state.update.endpoint=mina:tcp://localhost:, ducc.broker.configuration=conf/activemq-ducc.xml, ducc.agent.launcher.ducc_spawn_path=/home/degenaro/ducc/versions/apache-uima-ducc-1.0.1-SNAPSHOT/admin/ducc_ling, java.awt.printerjob=sun.print.PSPrinterJob, ducc.sm.default.linger=300000, ducc.locale.language=en, ducc.orchestrator.abbreviated.state.publish.rate=10000, ducc.sm.configuration.class=org.apache.uima.ducc.sm.config.ServiceManagerConfiguration, ducc.ws.max.history.entries=128, ducc.rm.fragmentation.threshold=1, ducc.agent.request.endpoint=activemq:topic:ducc.agent, ducc.node.min.swap.threshold=0, ducc.orchestrator.unmanaged.reservations.accepted=true, ducc.jd.share.quantum=400, ducc.sm.jvm.args=-Xmx150M, ducc.sm.instance.failure.window=30, ducc.sm.instance.failure.max=5, ducc.ws.login.enabled=false, ducc.threads.limit=500, ducc.agent.node.inventory.publish.rate=10000, os.name=Linux, java.specification.vendor=Oracle Corporation, ducc.jd.host.memory.size=1GB, ducc.jd.host.number.of.machines=1, ducc.flow-controller.specifier=org.apache.uima.ducc.common.uima.DuccJobProcessFC, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, ducc.rm.prediction=true, ducc.deploy.components=uima-as, ducc.sm.default.monitor.class=org.apache.uima.ducc.cli.UimaAsPing, ducc.rm.init.stability=2, ducc.broker.url=tcp://localhost:61617?wireFormat.maxInactivityDuration=0&jms.useCompression=true&closeAsync=false, java.library.path=/yet/a/nother/dumb/path:/usr/java/packages/lib/amd64:/usr/lib64:/lib64:/lib:/usr/lib, ducc.uima-as.saxon.jar.path=file:/home/degenaro/ducc/versions/apache-uima-ducc-1.0.1-SNAPSHOT/lib/saxon/saxon8.jar, java.class.version=51.0, ducc.jd.host.description=Job Driver, ducc.pm.state.update.endpoint=activemq:topic:ducc.pm.state, ducc.sm.init.failure.limit=1, ducc.agent.launcher.cgroups.enable=false, ducc.rm.configuration.class=org.apache.uima.ducc.rm.config.ResourceManagerConfiguration, ducc.agent.process.state.update.port=49712, ducc.orchestrator.state.publish.rate=10000, ducc.agent.launcher.use.ducc_spawn=true, sun.boot.library.path=/home/degenaro/local/sun/jdk1.7.0_45/jre/lib/amd64, ducc.ws.configuration.class=org.apache.uima.ducc.ws.config.WebServerConfiguration, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, ducc.sm.state.update.endpoint=activemq:topic:ducc.sm.state, ducc.orchestrator.start.type=warm, DUCC_HOME=/home/degenaro/ducc/versions/apache-uima-ducc-1.0.1-SNAPSHOT, ducc.driver.jvm.args=-Xmx150M, ducc.uima-as.endpoint=mina:tcp://localhost:, ducc.agent.request.endpoint.type=topic, NodeName=uima-ducc-vm-9, ducc.broker.port=61617, java.vm.specification.version=1.7, ducc.db.state.update.endpoint=activemq:topic:ducc.db.state, awt.toolkit=sun.awt.X11.XToolkit, ducc.uima-as.dd2spring.xsl.path=/home/degenaro/ducc/versions/apache-uima-ducc-1.0.1-SNAPSHOT/resources/dd2spring.xsl, ducc.agent.node.inventory.endpoint.type=topic, ducc.broker.automanage=true, sun.cpu.isalist=, ducc.rm.expand.by.doubling=true, java.ext.dirs=/home/degenaro/local/sun/jdk1.7.0_45/jre/lib/ext:/usr/java/packages/lib/ext, os.version=3.2.0-23-generic, ducc.rm.eviction.policy=SHRINK_BY_INVESTMENT, ducc.process.log.basename=81-UIMA-uima-ducc-vm-9, ducc.pm.request.endpoint.type=queue, user.home=/home/degenaro, ducc.ws.automatic.cancel.minutes=5, java.vm.vendor=Oracle Corporation, ducc.agent.launcher.process.stop.timeout=60000, ducc.sm.http.node=localhost, user.dir=/tmp/ducc/driver/urchin/ducc/work/2, ducc.agent.launcher.cgroups.utils.dir=/usr/bin,/bin, ducc.agent.configuration.class=org.apache.uima.ducc.agent.config.AgentConfiguration, ducc.agent.launcher.thread.pool.size=10, sun.cpu.endian=little, ducc.orchestrator.abbreviated.state.update.endpoint.type=topic, ducc.jd.state.update.endpoint.type=topic, ducc.jms.provider=activemq, java.vm.version=24.45-b08, java.class.path=/home/degenaro/ducc/versions/apache-uima-ducc-1.0.1-SNAPSHOT/lib/uima-ducc/uima-ducc-orchestrator-1.0.1-SNAPSHOT.jar:/home/degenaro/ducc/versions/apache-uima-ducc-1.0.1-SNAPSHOT/lib/uima-ducc/uima-ducc-db-1.0.1-SNAPSHOT.jar:/home/degenaro/ducc/versions/apache-uima-ducc-1.0.1-SNAPSHOT/lib/uima-ducc/uima-ducc-common-1.0.1-SNAPSHOT.jar:/home/degenaro/ducc/versions/apache-uima-ducc-1.0.1-SNAPSHOT/lib/uima-ducc/uima-ducc-sm-1.0.1-SNAPSHOT.jar:/home/degenaro/ducc/versions/apache-uima-ducc-1.0.1-SNAPSHOT/lib/uima-ducc/uima-ducc-rm-1.0.1-SNAPSHOT.jar:/home/degenaro/ducc/versions/apache-uima-ducc-1.0.1-SNAPSHOT/lib/uima-ducc/uima-ducc-web-1.0.1-SNAPSHOT.jar:/home/degenaro/ducc/versions/apache-uima-ducc-1.0.1-SNAPSHOT/lib/uima-ducc/uima-ducc-jd-1.0.1-SNAPSHOT.jar:/home/degenaro/ducc/versions/apache-uima-ducc-1.0.1-SNAPSHOT/lib/uima-ducc/uima-ducc-agent-1.0.1-SNAPSHOT.jar:/home/degenaro/ducc/versions/apache-uima-ducc-1.0.1-SNAPSHOT/lib/uima-ducc/uima-ducc-cli-1.0.1-SNAPSHOT.jar:/home/degenaro/ducc/versions/apache-uima-ducc-1.0.1-SNAPSHOT/lib/uima-ducc/uima-ducc-pm-1.0.1-SNAPSHOT.jar:/home/degenaro/ducc/versions/apache-uima-ducc-1.0.1-SNAPSHOT/lib/uima-ducc/uima-ducc-transport-1.0.1-SNAPSHOT.jar:/home/degenaro/ducc/versions/apache-uima-ducc-1.0.1-SNAPSHOT/lib/uima/uimaj-as-jms.jar:/home/degenaro/ducc/versions/apache-uima-ducc-1.0.1-SNAPSHOT/lib/uima/uimaj-as-activemq.jar:/home/degenaro/ducc/versions/apache-uima-ducc-1.0.1-SNAPSHOT/lib/uima/uima-core.jar:/home/degenaro/ducc/versions/apache-uima-ducc-1.0.1-SNAPSHOT/lib/uima/uimaj-as-core.jar:/home/degenaro/ducc/versions/apache-uima-ducc-1.0.1-SNAPSHOT/lib/apache-log4j/log4j-1.2.16.jar:/home/degenaro/ducc/versions/apache-uima-ducc-1.0.1-SNAPSHOT/lib/apache-activemq/activemq-pool-5.6.0.jar:/home/degenaro/ducc/versions/apache-uima-ducc-1.0.1-SNAPSHOT/lib/apache-activemq/activemq-core-5.6.0.jar:/home/degenaro/ducc/versions/apache-uima-ducc-1.0.1-SNAPSHOT/lib/apache-activemq/geronimo-jms_1.1_spec-1.1.1.jar:/home/degenaro/ducc/versions/apache-uima-ducc-1.0.1-SNAPSHOT/lib/apache-activemq/geronimo-j2ee-management_1.1_spec-1.0.1.jar:/home/degenaro/ducc/versions/apache-uima-ducc-1.0.1-SNAPSHOT/lib/apache-activemq/commons-pool-1.5.4.jar:/home/degenaro/ducc/versions/apache-uima-ducc-1.0.1-SNAPSHOT/lib/apache-activemq/activemq-jaas-5.6.0.jar:/home/degenaro/ducc/versions/apache-uima-ducc-1.0.1-SNAPSHOT/lib/apache-activemq/geronimo-servlet_2.5_spec-1.2.jar:/home/degenaro/ducc/versions/apache-uima-ducc-1.0.1-SNAPSHOT/lib/apache-activemq/xpp3-1.1.4c.jar:/home/degenaro/ducc/versions/apache-uima-ducc-1.0.1-SNAPSHOT/lib/apache-activemq/activemq-camel-5.6.0.jar:/home/degenaro/ducc/versions/apache-uima-ducc-1.0.1-SNAPSHOT/lib/apache-camel/camel-core-2.10.1.jar:/home/degenaro/ducc/versions/apache-uima-ducc-1.0.1-SNAPSHOT/lib/apache-camel/camel-stream-2.10.1.jar:/home/degenaro/ducc/versions/apache-uima-ducc-1.0.1-SNAPSHOT/lib/apache-camel/camel-http-2.10.1.jar:/home/degenaro/ducc/versions/apache-uima-ducc-1.0.1-SNAPSHOT/lib/apache-camel/camel-servlet-2.10.1.jar:/home/degenaro/ducc/versions/apache-uima-ducc-1.0.1-SNAPSHOT/lib/apache-camel/camel-xstream-2.10.1.jar:/home/degenaro/ducc/versions/apache-uima-ducc-1.0.1-SNAPSHOT/lib/apache-camel/camel-test-spring-2.10.1.jar:/home/degenaro/ducc/versions/apache-uima-ducc-1.0.1-SNAPSHOT/lib/apache-camel/camel-xmlbeans-2.10.1.jar:/home/degenaro/ducc/versions/apache-uima-ducc-1.0.1-SNAPSHOT/lib/apache-camel/camel-test-2.10.1.jar:/home/degenaro/ducc/versions/apache-uima-ducc-1.0.1-SNAPSHOT/lib/apache-camel/camel-mina-2.10.1.jar:/home/degenaro/ducc/versions/apache-uima-ducc-1.0.1-SNAPSHOT/lib/apache-camel/camel-spring-2.10.1.jar:/home/degenaro/ducc/versions/apache-uima-ducc-1.0.1-SNAPSHOT/lib/apache-camel/camel-context-2.10.1.jar:/home/degenaro/ducc/versions/apache-uima-ducc-1.0.1-SNAPSHOT/lib/apache-camel/camel-jetty-2.10.1.jar:/home/degenaro/ducc/versions/apache-uima-ducc-1.0.1-SNAPSHOT/lib/apache-camel/camel-jms-2.10.1.jar:/home/degenaro/ducc/versions/apache-uima-ducc-1.0.1-SNAPSHOT/lib/apache-camel/camel-http4-2.10.1.jar:/home/degenaro/ducc/versions/apache-uima-ducc-1.0.1-SNAPSHOT/lib/apache-camel/mina-core-1.1.7.jar:/home/degenaro/ducc/versions/apache-uima-ducc-1.0.1-SNAPSHOT/lib/apache-camel/xstream-1.3.1.jar:/home/degenaro/ducc/versions/apache-uima-ducc-1.0.1-SNAPSHOT/lib/http-client/commons-httpclient-3.1.jar:/home/degenaro/ducc/versions/apache-uima-ducc-1.0.1-SNAPSHOT/lib/http-client/commons-codec-1.2.jar:/home/degenaro/ducc/versions/apache-uima-ducc-1.0.1-SNAPSHOT/lib/slf4j/slf4j-log4j12-1.5.11.jar:/home/degenaro/ducc/versions/apache-uima-ducc-1.0.1-SNAPSHOT/lib/slf4j/slf4j-api-1.5.11.jar:/home/degenaro/ducc/versions/apache-uima-ducc-1.0.1-SNAPSHOT/lib/slf4j/jcl-over-slf4j-1.5.11.jar:/home/degenaro/ducc/versions/apache-uima-ducc-1.0.1-SNAPSHOT/lib/springframework/com.springsource.net.sf.cglib-2.2.0.jar:/home/degenaro/ducc/versions/apache-uima-ducc-1.0.1-SNAPSHOT/lib/springframework/spring-asm-3.0.5.RELEASE.jar:/home/degenaro/ducc/versions/apache-uima-ducc-1.0.1-SNAPSHOT/lib/springframework/spring-tx-3.0.5.RELEASE.jar:/home/degenaro/ducc/versions/apache-uima-ducc-1.0.1-SNAPSHOT/lib/springframework/spring-context-support-3.0.5.RELEASE.jar:/home/degenaro/ducc/versions/apache-uima-ducc-1.0.1-SNAPSHOT/lib/springframework/spring-expression-3.0.5.RELEASE.jar:/home/degenaro/ducc/versions/apache-uima-ducc-1.0.1-SNAPSHOT/lib/springframework/spring-beans-3.0.5.RELEASE.jar:/home/degenaro/ducc/versions/apache-uima-ducc-1.0.1-SNAPSHOT/lib/springframework/spring-context-3.0.5.RELEASE.jar:/home/degenaro/ducc/versions/apache-uima-ducc-1.0.1-SNAPSHOT/lib/springframework/spring-core-3.0.5.RELEASE.jar:/home/degenaro/ducc/versions/apache-uima-ducc-1.0.1-SNAPSHOT/lib/springframework/spring-aop-3.0.5.RELEASE.jar:/home/degenaro/ducc/versions/apache-uima-ducc-1.0.1-SNAPSHOT/lib/springframework/spring-jms-3.0.5.RELEASE.jar:/home/degenaro/ducc/versions/apache-uima-ducc-1.0.1-SNAPSHOT/lib/xstream/xstream.jar:/home/degenaro/ducc/versions/apache-uima-ducc-1.0.1-SNAPSHOT/resources:/home/degenaro/ducc/versions/apache-uima-ducc-1.0.1-SNAPSHOT/lib/uima-ducc/examples/uima-ducc-examples-1.0.1-SNAPSHOT.jar, ducc.broker.name=localhost, ducc.pm.request.endpoint=activemq:queue:ducc.pm, os.arch=amd64, ducc.rm.node.stability=5, ducc.sm.state.update.endpoint.type=topic, ducc.uima-as.configuration.class=org.apache.uima.ducc.agent.deploy.uima.UimaAsServiceConfiguration, ducc.rm.prediction.fudge=120000, sun.java.launcher=SUN_STANDARD, IP=192.168.4.9, ducc.ws.port=42133, java.vm.specification.vendor=Oracle Corporation, file.separator=/, ducc.broker.hostname=localhost, java.runtime.version=1.7.0_45-b18, sun.boot.class.path=/home/degenaro/local/sun/jdk1.7.0_45/jre/lib/resources.jar:/home/degenaro/local/sun/jdk1.7.0_45/jre/lib/rt.jar:/home/degenaro/local/sun/jdk1.7.0_45/jre/lib/sunrsasign.jar:/home/degenaro/local/sun/jdk1.7.0_45/jre/lib/jsse.jar:/home/degenaro/local/sun/jdk1.7.0_45/jre/lib/jce.jar:/home/degenaro/local/sun/jdk1.7.0_45/jre/lib/charsets.jar:/home/degenaro/local/sun/jdk1.7.0_45/jre/lib/jfr.jar:/home/degenaro/local/sun/jdk1.7.0_45/jre/classes, ducc.pm.configuration.class=org.apache.uima.ducc.pm.config.ProcessManagerConfiguration, ducc.jd.state.publish.rate=15000, ducc.agent.node.metrics.endpoint=activemq:topic:ducc.node.metrics, ducc.agent.share.size.fudge.factor=5, ducc.jmx.port=11000, ducc.agent.rogue.process.exclusion.filter=sshd:,-bash,-sh,/bin/sh,/bin/bash,grep,ps, ducc.uima-as.endpoint.params=transferExchange=true&sync=false, ducc.db.state.publish.rate=15000, user.country=US, ducc.sm.meta.ping.timeout=15000, ducc.rm.state.update.endpoint.type=topic, ducc.pm.state.update.endpoint.type=topic, ducc.rm.scheduler=org.apache.uima.ducc.rm.scheduler.NodepoolScheduler, java.vendor=Oracle Corporation, ducc.rm.share.quantum=15, ducc.orchestrator.configuration.class=org.apache.uima.ducc.orchestrator.config.OrchestratorConfiguration, ducc.agent.rogue.process.user.exclusion.filter=root,postfix,ntp,nobody,daemon,100,degenaro,messagebus,nslcd,syslog,whoopsie, ducc.runmode=Test, java.specification.version=1.7, sun.arch.data.model=64}30 Mar 2014 22:40:52,535 INFO DUCC.AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@44a901f8: startup date &#91;Sun Mar 30 22:40:52 UTC 2014&#93;; root of context hierarchy>>>>>>>>>>>>>>> Running with AMQ Credentials#######################################################    Agent Service State Update Endpoint:mina:tcp://localhost:49712?transferExchange=true&sync=false #########################################################Service Wrapper Starting Request Channel on Endpoint:mina:tcp://localhost:57533?transferExchange=true&sync=false30 Mar 2014 22:40:53,598 INFO DUCC.DuccService - boot N/A ... Starting Component: managedServiceConnect jConsole to this process using JMX URL:Deploying UIMA AS with args:/tmp/ducc/driver/urchin/ducc/logs/81/81-uima-as-dd-20300.xml  Service Args:-saxonURL file:/home/degenaro/ducc/versions/apache-uima-ducc-1.0.1-SNAPSHOT/lib/saxon/saxon8.jar -xslt /home/degenaro/ducc/versions/apache-uima-ducc-1.0.1-SNAPSHOT/resources/dd2spring.xsl -dd /tmp/ducc/driver/urchin/ducc/logs/81/81-uima-as-dd-20300.xmlManagedUimaService initializing...Mar 30, 2014 10:41:58 PM org.apache.uima.adapter.jms.service.UIMA_Service initialize(67)INFO: UIMA-AS version 2.4.2         WARN: line-number: 5 Top level Async Primitive specifies a scaleout of numberOfInstances="6", but also specifies a Cas Pool size of numberOfCASes="1". The Cas Pool size is being forced to be the same as the scaleout.ManagedUimaService initialized - ready to process. Agent State Update endpoint:mina:tcp://localhost:49712?transferExchange=true&sync=false.... Verified dd2spring generated spring context file:/tmp/UIMAdd2springOutput143445654709714089.xml30 Mar 2014 22:41:59,531 INFO DUCC.FileSystemXmlApplicationContext - Refreshing org.springframework.context.support.FileSystemXmlApplicationContext@58303c36: startup date &#91;Sun Mar 30 22:41:59 UTC 2014&#93;; root of context hierarchyMar 30, 2014 10:42:00 PM org.apache.uima.aae.controller.BaseAnalysisEngineController logPlatformInfoINFO:+------------------------------------------------------------------Starting UIMA AS Service - PID: 21513+------------------------------------------------------------------+ Service Name:ducc.jd.queue.81+ Service Queue Name:ducc.jd.queue.81+ Service Start Time:30 Mar 2014 22:40:50+ UIMA AS Version:2.4.2+ UIMA Core Version:2.4.2+ OS Name:Linux+ OS Version:3.2.0-23-generic+ OS Architecture:amd64+ OS CPU Count:1+ JVM Vendor:Oracle Corporation+ JVM Name:Java HotSpot(TM) 64-Bit Server VM+ JVM Version:24.45-b08+ JVM Input Args:&#91;-DDUCC_HOME=/home/degenaro/ducc/versions/apache-uima-ducc-1.0.1-SNAPSHOT, -Dducc.deploy.configuration=/home/degenaro/ducc/versions/apache-uima-ducc-1.0.1-SNAPSHOT/resources/ducc.properties, -Dducc.agent.process.state.update.port=49712, -Dducc.process.log.dir=/tmp/ducc/driver/urchin/ducc/logs/81/, -Dducc.process.log.basename=81-UIMA-uima-ducc-vm-9, -Dducc.job.id=81, -Xmx100M, -Dducc.deploy.components=uima-as&#93;+ JVM Classpath:/home/degenaro/ducc/versions/apache-uima-ducc-1.0.1-SNAPSHOT/lib/uima-ducc/uima-ducc-orchestrator-1.0.1-SNAPSHOT.jar:/home/degenaro/ducc/versions/apache-uima-ducc-1.0.1-SNAPSHOT/lib/uima-ducc/uima-ducc-db-1.0.1-SNAPSHOT.jar:/home/degenaro/ducc/versions/apache-uima-ducc-1.0.1-SNAPSHOT/lib/uima-ducc/uima-ducc-common-1.0.1-SNAPSHOT.jar:/home/degenaro/ducc/versions/apache-uima-ducc-1.0.1-SNAPSHOT/lib/uima-ducc/uima-ducc-sm-1.0.1-SNAPSHOT.jar:/home/degenaro/ducc/versions/apache-uima-ducc-1.0.1-SNAPSHOT/lib/uima-ducc/uima-ducc-rm-1.0.1-SNAPSHOT.jar:/home/degenaro/ducc/versions/apache-uima-ducc-1.0.1-SNAPSHOT/lib/uima-ducc/uima-ducc-web-1.0.1-SNAPSHOT.jar:/home/degenaro/ducc/versions/apache-uima-ducc-1.0.1-SNAPSHOT/lib/uima-ducc/uima-ducc-jd-1.0.1-SNAPSHOT.jar:/home/degenaro/ducc/versions/apache-uima-ducc-1.0.1-SNAPSHOT/lib/uima-ducc/uima-ducc-agent-1.0.1-SNAPSHOT.jar:/home/degenaro/ducc/versions/apache-uima-ducc-1.0.1-SNAPSHOT/lib/uima-ducc/uima-ducc-cli-1.0.1-SNAPSHOT.jar:/home/degenaro/ducc/versions/apache-uima-ducc-1.0.1-SNAPSHOT/lib/uima-ducc/uima-ducc-pm-1.0.1-SNAPSHOT.jar:/home/degenaro/ducc/versions/apache-uima-ducc-1.0.1-SNAPSHOT/lib/uima-ducc/uima-ducc-transport-1.0.1-SNAPSHOT.jar:/home/degenaro/ducc/versions/apache-uima-ducc-1.0.1-SNAPSHOT/lib/uima/uimaj-as-jms.jar:/home/degenaro/ducc/versions/apache-uima-ducc-1.0.1-SNAPSHOT/lib/uima/uimaj-as-activemq.jar:/home/degenaro/ducc/versions/apache-uima-ducc-1.0.1-SNAPSHOT/lib/uima/uima-core.jar:/home/degenaro/ducc/versions/apache-uima-ducc-1.0.1-SNAPSHOT/lib/uima/uimaj-as-core.jar:/home/degenaro/ducc/versions/apache-uima-ducc-1.0.1-SNAPSHOT/lib/apache-log4j/log4j-1.2.16.jar:/home/degenaro/ducc/versions/apache-uima-ducc-1.0.1-SNAPSHOT/lib/apache-activemq/activemq-pool-5.6.0.jar:/home/degenaro/ducc/versions/apache-uima-ducc-1.0.1-SNAPSHOT/lib/apache-activemq/activemq-core-5.6.0.jar:/home/degenaro/ducc/versions/apache-uima-ducc-1.0.1-SNAPSHOT/lib/apache-activemq/geronimo-jms_1.1_spec-1.1.1.jar:/home/degenaro/ducc/versions/apache-uima-ducc-1.0.1-SNAPSHOT/lib/apache-activemq/geronimo-j2ee-management_1.1_spec-1.0.1.jar:/home/degenaro/ducc/versions/apache-uima-ducc-1.0.1-SNAPSHOT/lib/apache-activemq/commons-pool-1.5.4.jar:/home/degenaro/ducc/versions/apache-uima-ducc-1.0.1-SNAPSHOT/lib/apache-activemq/activemq-jaas-5.6.0.jar:/home/degenaro/ducc/versions/apache-uima-ducc-1.0.1-SNAPSHOT/lib/apache-activemq/geronimo-servlet_2.5_spec-1.2.jar:/home/degenaro/ducc/versions/apache-uima-ducc-1.0.1-SNAPSHOT/lib/apache-activemq/xpp3-1.1.4c.jar:/home/degenaro/ducc/versions/apache-uima-ducc-1.0.1-SNAPSHOT/lib/apache-activemq/activemq-camel-5.6.0.jar:/home/degenaro/ducc/versions/apache-uima-ducc-1.0.1-SNAPSHOT/lib/apache-camel/camel-core-2.10.1.jar:/home/degenaro/ducc/versions/apache-uima-ducc-1.0.1-SNAPSHOT/lib/apache-camel/camel-stream-2.10.1.jar:/home/degenaro/ducc/versions/apache-uima-ducc-1.0.1-SNAPSHOT/lib/apache-camel/camel-http-2.10.1.jar:/home/degenaro/ducc/versions/apache-uima-ducc-1.0.1-SNAPSHOT/lib/apache-camel/camel-servlet-2.10.1.jar:/home/degenaro/ducc/versions/apache-uima-ducc-1.0.1-SNAPSHOT/lib/apache-camel/camel-xstream-2.10.1.jar:/home/degenaro/ducc/versions/apache-uima-ducc-1.0.1-SNAPSHOT/lib/apache-camel/camel-test-spring-2.10.1.jar:/home/degenaro/ducc/versions/apache-uima-ducc-1.0.1-SNAPSHOT/lib/apache-camel/camel-xmlbeans-2.10.1.jar:/home/degenaro/ducc/versions/apache-uima-ducc-1.0.1-SNAPSHOT/lib/apache-camel/camel-test-2.10.1.jar:/home/degenaro/ducc/versions/apache-uima-ducc-1.0.1-SNAPSHOT/lib/apache-camel/camel-mina-2.10.1.jar:/home/degenaro/ducc/versions/apache-uima-ducc-1.0.1-SNAPSHOT/lib/apache-camel/camel-spring-2.10.1.jar:/home/degenaro/ducc/versions/apache-uima-ducc-1.0.1-SNAPSHOT/lib/apache-camel/camel-context-2.10.1.jar:/home/degenaro/ducc/versions/apache-uima-ducc-1.0.1-SNAPSHOT/lib/apache-camel/camel-jetty-2.10.1.jar:/home/degenaro/ducc/versions/apache-uima-ducc-1.0.1-SNAPSHOT/lib/apache-camel/camel-jms-2.10.1.jar:/home/degenaro/ducc/versions/apache-uima-ducc-1.0.1-SNAPSHOT/lib/apache-camel/camel-http4-2.10.1.jar:/home/degenaro/ducc/versions/apache-uima-ducc-1.0.1-SNAPSHOT/lib/apache-camel/mina-core-1.1.7.jar:/home/degenaro/ducc/versions/apache-uima-ducc-1.0.1-SNAPSHOT/lib/apache-camel/xstream-1.3.1.jar:/home/degenaro/ducc/versions/apache-uima-ducc-1.0.1-SNAPSHOT/lib/http-client/commons-httpclient-3.1.jar:/home/degenaro/ducc/versions/apache-uima-ducc-1.0.1-SNAPSHOT/lib/http-client/commons-codec-1.2.jar:/home/degenaro/ducc/versions/apache-uima-ducc-1.0.1-SNAPSHOT/lib/slf4j/slf4j-log4j12-1.5.11.jar:/home/degenaro/ducc/versions/apache-uima-ducc-1.0.1-SNAPSHOT/lib/slf4j/slf4j-api-1.5.11.jar:/home/degenaro/ducc/versions/apache-uima-ducc-1.0.1-SNAPSHOT/lib/slf4j/jcl-over-slf4j-1.5.11.jar:/home/degenaro/ducc/versions/apache-uima-ducc-1.0.1-SNAPSHOT/lib/springframework/com.springsource.net.sf.cglib-2.2.0.jar:/home/degenaro/ducc/versions/apache-uima-ducc-1.0.1-SNAPSHOT/lib/springframework/spring-asm-3.0.5.RELEASE.jar:/home/degenaro/ducc/versions/apache-uima-ducc-1.0.1-SNAPSHOT/lib/springframework/spring-tx-3.0.5.RELEASE.jar:/home/degenaro/ducc/versions/apache-uima-ducc-1.0.1-SNAPSHOT/lib/springframework/spring-context-support-3.0.5.RELEASE.jar:/home/degenaro/ducc/versions/apache-uima-ducc-1.0.1-SNAPSHOT/lib/springframework/spring-expression-3.0.5.RELEASE.jar:/home/degenaro/ducc/versions/apache-uima-ducc-1.0.1-SNAPSHOT/lib/springframework/spring-beans-3.0.5.RELEASE.jar:/home/degenaro/ducc/versions/apache-uima-ducc-1.0.1-SNAPSHOT/lib/springframework/spring-context-3.0.5.RELEASE.jar:/home/degenaro/ducc/versions/apache-uima-ducc-1.0.1-SNAPSHOT/lib/springframework/spring-core-3.0.5.RELEASE.jar:/home/degenaro/ducc/versions/apache-uima-ducc-1.0.1-SNAPSHOT/lib/springframework/spring-aop-3.0.5.RELEASE.jar:/home/degenaro/ducc/versions/apache-uima-ducc-1.0.1-SNAPSHOT/lib/springframework/spring-jms-3.0.5.RELEASE.jar:/home/degenaro/ducc/versions/apache-uima-ducc-1.0.1-SNAPSHOT/lib/xstream/xstream.jar:/home/degenaro/ducc/versions/apache-uima-ducc-1.0.1-SNAPSHOT/resources:/home/degenaro/ducc/versions/apache-uima-ducc-1.0.1-SNAPSHOT/lib/uima-ducc/examples/uima-ducc-examples-1.0.1-SNAPSHOT.jar+ JVM Loaded Jars:/home/degenaro/ducc/versions/apache-uima-ducc-1.0.1-SNAPSHOT/lib/uima-ducc/uima-ducc-orchestrator-1.0.1-SNAPSHOT.jar:/home/degenaro/ducc/versions/apache-uima-ducc-1.0.1-SNAPSHOT/lib/uima-ducc/uima-ducc-db-1.0.1-SNAPSHOT.jar:/home/degenaro/ducc/versions/apache-uima-ducc-1.0.1-SNAPSHOT/lib/uima-ducc/uima-ducc-common-1.0.1-SNAPSHOT.jar:/home/degenaro/ducc/versions/apache-uima-ducc-1.0.1-SNAPSHOT/lib/uima-ducc/uima-ducc-sm-1.0.1-SNAPSHOT.jar:/home/degenaro/ducc/versions/apache-uima-ducc-1.0.1-SNAPSHOT/lib/uima-ducc/uima-ducc-rm-1.0.1-SNAPSHOT.jar:/home/degenaro/ducc/versions/apache-uima-ducc-1.0.1-SNAPSHOT/lib/uima-ducc/uima-ducc-web-1.0.1-SNAPSHOT.jar:/home/degenaro/ducc/versions/apache-uima-ducc-1.0.1-SNAPSHOT/lib/uima-ducc/uima-ducc-jd-1.0.1-SNAPSHOT.jar:/home/degenaro/ducc/versions/apache-uima-ducc-1.0.1-SNAPSHOT/lib/uima-ducc/uima-ducc-agent-1.0.1-SNAPSHOT.jar:/home/degenaro/ducc/versions/apache-uima-ducc-1.0.1-SNAPSHOT/lib/uima-ducc/uima-ducc-cli-1.0.1-SNAPSHOT.jar:/home/degenaro/ducc/versions/apache-uima-ducc-1.0.1-SNAPSHOT/lib/uima-ducc/uima-ducc-pm-1.0.1-SNAPSHOT.jar:/home/degenaro/ducc/versions/apache-uima-ducc-1.0.1-SNAPSHOT/lib/uima-ducc/uima-ducc-transport-1.0.1-SNAPSHOT.jar:/home/degenaro/ducc/versions/apache-uima-ducc-1.0.1-SNAPSHOT/lib/uima/uimaj-as-jms.jar:/home/degenaro/ducc/versions/apache-uima-ducc-1.0.1-SNAPSHOT/lib/uima/uimaj-as-activemq.jar:/home/degenaro/ducc/versions/apache-uima-ducc-1.0.1-SNAPSHOT/lib/uima/uima-core.jar:/home/degenaro/ducc/versions/apache-uima-ducc-1.0.1-SNAPSHOT/lib/uima/uimaj-as-core.jar:/home/degenaro/ducc/versions/apache-uima-ducc-1.0.1-SNAPSHOT/lib/apache-log4j/log4j-1.2.16.jar:/home/degenaro/ducc/versions/apache-uima-ducc-1.0.1-SNAPSHOT/lib/apache-activemq/activemq-pool-5.6.0.jar:/home/degenaro/ducc/versions/apache-uima-ducc-1.0.1-SNAPSHOT/lib/apache-activemq/activemq-core-5.6.0.jar:/home/degenaro/ducc/versions/apache-uima-ducc-1.0.1-SNAPSHOT/lib/apache-activemq/geronimo-jms_1.1_spec-1.1.1.jar:/home/degenaro/ducc/versions/apache-uima-ducc-1.0.1-SNAPSHOT/lib/apache-activemq/geronimo-j2ee-management_1.1_spec-1.0.1.jar:/home/degenaro/ducc/versions/apache-uima-ducc-1.0.1-SNAPSHOT/lib/apache-activemq/commons-pool-1.5.4.jar:/home/degenaro/ducc/versions/apache-uima-ducc-1.0.1-SNAPSHOT/lib/apache-activemq/activemq-jaas-5.6.0.jar:/home/degenaro/ducc/versions/apache-uima-ducc-1.0.1-SNAPSHOT/lib/apache-activemq/geronimo-servlet_2.5_spec-1.2.jar:/home/degenaro/ducc/versions/apache-uima-ducc-1.0.1-SNAPSHOT/lib/apache-activemq/xpp3-1.1.4c.jar:/home/degenaro/ducc/versions/apache-uima-ducc-1.0.1-SNAPSHOT/lib/apache-activemq/activemq-camel-5.6.0.jar:/home/degenaro/ducc/versions/apache-uima-ducc-1.0.1-SNAPSHOT/lib/apache-camel/camel-core-2.10.1.jar:/home/degenaro/ducc/versions/apache-uima-ducc-1.0.1-SNAPSHOT/lib/apache-camel/camel-stream-2.10.1.jar:/home/degenaro/ducc/versions/apache-uima-ducc-1.0.1-SNAPSHOT/lib/apache-camel/camel-http-2.10.1.jar:/home/degenaro/ducc/versions/apache-uima-ducc-1.0.1-SNAPSHOT/lib/apache-camel/camel-servlet-2.10.1.jar:/home/degenaro/ducc/versions/apache-uima-ducc-1.0.1-SNAPSHOT/lib/apache-camel/camel-xstream-2.10.1.jar:/home/degenaro/ducc/versions/apache-uima-ducc-1.0.1-SNAPSHOT/lib/apache-camel/camel-test-spring-2.10.1.jar:/home/degenaro/ducc/versions/apache-uima-ducc-1.0.1-SNAPSHOT/lib/apache-camel/camel-xmlbeans-2.10.1.jar:/home/degenaro/ducc/versions/apache-uima-ducc-1.0.1-SNAPSHOT/lib/apache-camel/camel-test-2.10.1.jar:/home/degenaro/ducc/versions/apache-uima-ducc-1.0.1-SNAPSHOT/lib/apache-camel/camel-mina-2.10.1.jar:/home/degenaro/ducc/versions/apache-uima-ducc-1.0.1-SNAPSHOT/lib/apache-camel/camel-spring-2.10.1.jar:/home/degenaro/ducc/versions/apache-uima-ducc-1.0.1-SNAPSHOT/lib/apache-camel/camel-context-2.10.1.jar:/home/degenaro/ducc/versions/apache-uima-ducc-1.0.1-SNAPSHOT/lib/apache-camel/camel-jetty-2.10.1.jar:/home/degenaro/ducc/versions/apache-uima-ducc-1.0.1-SNAPSHOT/lib/apache-camel/camel-jms-2.10.1.jar:/home/degenaro/ducc/versions/apache-uima-ducc-1.0.1-SNAPSHOT/lib/apache-camel/camel-http4-2.10.1.jar:/home/degenaro/ducc/versions/apache-uima-ducc-1.0.1-SNAPSHOT/lib/apache-camel/mina-core-1.1.7.jar:/home/degenaro/ducc/versions/apache-uima-ducc-1.0.1-SNAPSHOT/lib/apache-camel/xstream-1.3.1.jar:/home/degenaro/ducc/versions/apache-uima-ducc-1.0.1-SNAPSHOT/lib/http-client/commons-httpclient-3.1.jar:/home/degenaro/ducc/versions/apache-uima-ducc-1.0.1-SNAPSHOT/lib/http-client/commons-codec-1.2.jar:/home/degenaro/ducc/versions/apache-uima-ducc-1.0.1-SNAPSHOT/lib/slf4j/slf4j-log4j12-1.5.11.jar:/home/degenaro/ducc/versions/apache-uima-ducc-1.0.1-SNAPSHOT/lib/slf4j/slf4j-api-1.5.11.jar:/home/degenaro/ducc/versions/apache-uima-ducc-1.0.1-SNAPSHOT/lib/slf4j/jcl-over-slf4j-1.5.11.jar:/home/degenaro/ducc/versions/apache-uima-ducc-1.0.1-SNAPSHOT/lib/springframework/com.springsource.net.sf.cglib-2.2.0.jar:/home/degenaro/ducc/versions/apache-uima-ducc-1.0.1-SNAPSHOT/lib/springframework/spring-asm-3.0.5.RELEASE.jar:/home/degenaro/ducc/versions/apache-uima-ducc-1.0.1-SNAPSHOT/lib/springframework/spring-tx-3.0.5.RELEASE.jar:/home/degenaro/ducc/versions/apache-uima-ducc-1.0.1-SNAPSHOT/lib/springframework/spring-context-support-3.0.5.RELEASE.jar:/home/degenaro/ducc/versions/apache-uima-ducc-1.0.1-SNAPSHOT/lib/springframework/spring-expression-3.0.5.RELEASE.jar:/home/degenaro/ducc/versions/apache-uima-ducc-1.0.1-SNAPSHOT/lib/springframework/spring-beans-3.0.5.RELEASE.jar:/home/degenaro/ducc/versions/apache-uima-ducc-1.0.1-SNAPSHOT/lib/springframework/spring-context-3.0.5.RELEASE.jar:/home/degenaro/ducc/versions/apache-uima-ducc-1.0.1-SNAPSHOT/lib/springframework/spring-core-3.0.5.RELEASE.jar:/home/degenaro/ducc/versions/apache-uima-ducc-1.0.1-SNAPSHOT/lib/springframework/spring-aop-3.0.5.RELEASE.jar:/home/degenaro/ducc/versions/apache-uima-ducc-1.0.1-SNAPSHOT/lib/springframework/spring-jms-3.0.5.RELEASE.jar:/home/degenaro/ducc/versions/apache-uima-ducc-1.0.1-SNAPSHOT/lib/xstream/xstream.jar:/home/degenaro/ducc/versions/apache-uima-ducc-1.0.1-SNAPSHOT/resources/:/home/degenaro/ducc/versions/apache-uima-ducc-1.0.1-SNAPSHOT/lib/uima-ducc/examples/uima-ducc-examples-1.0.1-SNAPSHOT.jar:+ JVM LIB_PATH:/yet/a/nother/dumb/path:/usr/java/packages/lib/amd64:/usr/lib64:/lib64:/lib:/usr/lib+------------------------------------------------------------------30 Mar 2014 22:42:00,951 INFO DUCC.ThreadPoolTaskExecutor - Initializing ExecutorService 'pooling_ducc.jd.queue.81_1'Mar 30, 2014 10:42:01 PM org.apache.uima.adapter.jms.activemq.JmsInputChannel setEndpointNameINFO: top_level_input_queue_service_1 Service Starting - Listening for Messages30 Mar 2014 22:42:01,400 INFO DUCC.ThreadPoolTaskExecutor - Initializing ExecutorService 'pooling_ducc.jd.queue.81_1'Mar 30, 2014 10:42:01 PM org.apache.uima.adapter.jms.activemq.SpringContainerDeployer waitForServiceNotificationINFO: Uima EE Client Blocking - Awaiting Top Level Controller Initialization NotificationMar 30, 2014 10:42:01 PM org.apache.uima.aae.UimaAsThreadFactory$1 UimaAsThreadFactory.run()INFO: Controller: ducc.jd.queue.81 Initializing AE instance on Thread Id: 25Mar 30, 2014 10:42:01 PM org.apache.uima.aae.UimaAsThreadFactory$1 UimaAsThreadFactory.run()INFO: Controller: ducc.jd.queue.81 Initializing AE instance on Thread Id: 24Mar 30, 2014 10:42:01 PM org.apache.uima.aae.UimaAsThreadFactory$1 UimaAsThreadFactory.run()INFO: Controller: ducc.jd.queue.81 Initializing AE instance on Thread Id: 29Mar 30, 2014 10:42:01 PM org.apache.uima.aae.UimaAsThreadFactory$1 UimaAsThreadFactory.run()INFO: Controller: ducc.jd.queue.81 Initializing AE instance on Thread Id: 26Mar 30, 2014 10:42:01 PM org.apache.uima.aae.UimaAsThreadFactory$1 UimaAsThreadFactory.run()INFO: Controller: ducc.jd.queue.81 Initializing AE instance on Thread Id: 28Mar 30, 2014 10:42:01 PM org.apache.uima.aae.UimaAsThreadFactory$1 UimaAsThreadFactory.run()INFO: Controller: ducc.jd.queue.81 Initializing AE instance on Thread Id: 27Mar 30, 2014 10:42:01 PM org.apache.uima.ducc.test.randomsleep.FixedSleepAE initialize(82)INFO: Init procedes in PID:TIDs 21513@uima-ducc-vm:25 Environment:Mar 30, 2014 10:42:01 PM org.apache.uima.ducc.test.randomsleep.FixedSleepAE initialize(84)INFO: Environment&#91;HOME&#93; = /home/degenaroMar 30, 2014 10:42:01 PM org.apache.uima.ducc.test.randomsleep.FixedSleepAE initialize(84)INFO: Environment&#91;AE_INIT_TIME&#93; = 90Mar 30, 2014 10:42:01 PM org.apache.uima.ducc.test.randomsleep.FixedSleepAE initialize(84)INFO: Environment&#91;IP&#93; = 192.168.4.9Mar 30, 2014 10:42:01 PM org.apache.uima.ducc.test.randomsleep.FixedSleepAE initialize(84)INFO: Environment&#91;JobId&#93; = 81Mar 30, 2014 10:42:01 PM org.apache.uima.ducc.test.randomsleep.FixedSleepAE initialize(84)INFO: Environment&#91;AE_INIT_RANGE&#93; = 30Mar 30, 2014 10:42:01 PM org.apache.uima.ducc.test.randomsleep.FixedSleepAE initialize(84)INFO: Environment&#91;XFILESEARCHPATH&#93; = /usr/dt/app-defaults/%L/DtMar 30, 2014 10:42:01 PM org.apache.uima.ducc.test.randomsleep.FixedSleepAE initialize(84)INFO: Environment&#91;NLSPATH&#93; = /usr/dt/lib/nls/msg/%L/%N.catMar 30, 2014 10:42:01 PM org.apache.uima.ducc.test.randomsleep.FixedSleepAE initialize(84)INFO: Environment&#91;INIT_ERROR&#93; = 0Mar 30, 2014 10:42:01 PM org.apache.uima.ducc.test.randomsleep.FixedSleepAE initialize(84)INFO: Environment&#91;LD_LIBRARY_PATH&#93; = /yet/a/nother/dumb/pathMar 30, 2014 10:42:01 PM org.apache.uima.ducc.test.randomsleep.FixedSleepAE initialize(84)INFO: Environment&#91;LANG&#93; = en_US.UTF-8Mar 30, 2014 10:42:01 PM org.apache.uima.ducc.test.randomsleep.FixedSleepAE initialize(84)INFO: Environment&#91;USER&#93; = urchinMar 30, 2014 10:42:01 PM org.apache.uima.ducc.test.randomsleep.FixedSleepAE initialize(84)INFO: Environment&#91;NodeName&#93; = uima-ducc-vm-9Mar 30, 2014 10:42:01 PM org.apache.uima.ducc.test.randomsleep.FixedSleepAE initialize(84)INFO: Environment&#91;ProcessDuccId&#93; = be2f4d8f-e6b6-41cd-a72c-7b8403f919f5Mar 30, 2014 10:42:01 PM org.apache.uima.ducc.test.randomsleep.FixedSleepAE initialize(88)INFO: Working directory is /tmp/ducc/driver/urchin/ducc/work/2Mar 30, 2014 10:42:01 PM org.apache.uima.ducc.test.randomsleep.FixedSleepAE initialize(90)INFO: File: /tmp/ducc/driver/urchin/ducc/work/2/9.outputMar 30, 2014 10:42:01 PM org.apache.uima.ducc.test.randomsleep.FixedSleepAE initialize(90)INFO: File: /tmp/ducc/driver/urchin/ducc/work/2/42.outputMar 30, 2014 10:42:01 PM org.apache.uima.ducc.test.randomsleep.FixedSleepAE initialize(90)INFO: File: /tmp/ducc/driver/urchin/ducc/work/2/23.outputMar 30, 2014 10:42:01 PM org.apache.uima.ducc.test.randomsleep.FixedSleepAE initialize(90)INFO: File: /tmp/ducc/driver/urchin/ducc/work/2/81.outputMar 30, 2014 10:42:01 PM org.apache.uima.ducc.test.randomsleep.FixedSleepAE initialize(161)INFO: Init errors: probability&#91;0&#93; toss&#91;14&#93;Mar 30, 2014 10:42:01 PM org.apache.uima.ducc.test.randomsleep.FixedSleepAE initialize(169)INFO: ^^--------> Initialization sleep time is 105 millisecondsMar 30, 2014 10:42:01 PM org.apache.uima.ducc.test.randomsleep.FixedSleepAE initialize(178)INFO: ^^-------> AE process 21513@uima-ducc-vm TID 25 initialization starts: sleep 105MSMar 30, 2014 10:42:02 PM org.apache.uima.ducc.test.randomsleep.FixedSleepAE initialize(185)INFO: ^^-------> AE process 21513@uima-ducc-vm TID 25 initialization OKMar 30, 2014 10:42:02 PM org.apache.uima.ducc.test.randomsleep.FixedSleepAE initialize(79)INFO: Init bypassed in PID:TID 21513@uima-ducc-vm:24, already completed.Mar 30, 2014 10:42:02 PM org.apache.uima.ducc.test.randomsleep.FixedSleepAE initialize(79)INFO: Init bypassed in PID:TID 21513@uima-ducc-vm:29, already completed.Mar 30, 2014 10:42:02 PM org.apache.uima.ducc.test.randomsleep.FixedSleepAE initialize(79)INFO: Init bypassed in PID:TID 21513@uima-ducc-vm:26, already completed.Mar 30, 2014 10:42:02 PM org.apache.uima.ducc.test.randomsleep.FixedSleepAE initialize(79)INFO: Init bypassed in PID:TID 21513@uima-ducc-vm:28, already completed.Mar 30, 2014 10:42:02 PM org.apache.uima.ducc.test.randomsleep.FixedSleepAE initialize(79)INFO: Init bypassed in PID:TID 21513@uima-ducc-vm:27, already completed.Service:ducc.jd.queue.81 Initialized. Ready To Process Messages From Queue:ducc.jd.queue.81Mar 30, 2014 10:42:03 PM org.apache.uima.aae.controller.PrimitiveAnalysisEngineController_impl postInitializeINFO: ********* Initialized the Controller. ducc.jd.queue.81 Ready To Process. ********Mar 30, 2014 10:42:03 PM org.apache.uima.adapter.jms.activemq.SpringContainerDeployer doStartListenersINFO: Controller: ducc.jd.queue.81 Starting Listener on Endpoint: queue://ducc.jd.queue.81 Selector: Command=2000 OR Command=2002 Broker: tcp://localhost:61617?wireFormat.maxInactivityDuration=0&closeAsync=falseMar 30, 2014 10:42:03 PM org.apache.uima.adapter.jms.activemq.SpringContainerDeployer doStartListenersINFO: Controller: ducc.jd.queue.81 Starting Listener on Endpoint: queue://ducc.jd.queue.81 Selector: Command=2001 Broker: tcp://localhost:61617?wireFormat.maxInactivityDuration=0&closeAsync=false30 Mar 2014 22:42:04,059 INFO DUCC.DuccService - boot N/A ... Component started: managedService30 Mar 2014 22:42:04,059 INFO DUCC.DuccService - boot N/A Starting Camel. Use ctrl + c to terminate the JVM.      >>>>>>>>> Process Received a Message. Is Process target for message:true. Target PID:21513UIMA AS process received STOP event. Proceeding to STOP in quiesce modeMar 30, 2014 10:42:40 PM org.apache.uima.aae.controller.PrimitiveAnalysisEngineController_impl quiesceAndStopINFO: Stopping Controller: ducc.jd.queue.81Quiescing UIMA-AS Service. Remaining Number of CASes to Process:0Mar 30, 2014 10:42:40 PM org.apache.uima.adapter.jms.activemq.JmsInputChannel stopChannelINFO: Stopping Service JMS Transport. Service: ducc.jd.queue.81 ShutdownNow falseMar 30, 2014 10:42:40 PM org.apache.uima.adapter.jms.activemq.JmsInputChannel stopChannelINFO: Controller: ducc.jd.queue.81 Stopped Listener on Endpoint: queue://ducc.jd.queue.81 Selector: Selector:Command=2000 OR Command=2002.Mar 30, 2014 10:42:40 PM org.apache.uima.adapter.jms.activemq.JmsInputChannel stopChannelINFO: Stopping Service JMS Transport. Service: ducc.jd.queue.81 ShutdownNow falseMar 30, 2014 10:42:40 PM org.apache.uima.adapter.jms.activemq.JmsInputChannel stopChannelINFO: Controller: ducc.jd.queue.81 Stopped Listener on Endpoint: queue://ducc.jd.queue.81 Selector: Selector:Command=2001.Mar 30, 2014 10:42:42 PM org.apache.uima.adapter.jms.activemq.JmsInputChannel stopChannelINFO: Stopping Service JMS Transport. Service: ducc.jd.queue.81 ShutdownNow true30 Mar 2014 22:42:42,506 INFO DUCC.ThreadPoolTaskExecutor - Shutting down ExecutorService 'pooling_ducc.jd.queue.81_1'Mar 30, 2014 10:42:42 PM org.apache.uima.aae.UimaAsThreadFactory$1 UimaAsThreadFactory.run()INFO: Controller: ducc.jd.queue.81 --------------- Process Thread ID:24 EXITING*^^^^^^^^^ AE Destroy is called (0)Mar 30, 2014 10:42:42 PM org.apache.uima.aae.UimaAsThreadFactory$1 UimaAsThreadFactory.run()INFO: Controller: ducc.jd.queue.81 --------------- Process Thread ID:25 EXITING*^^^^^^^^^ AE Destroy is called (0)Mar 30, 2014 10:42:42 PM org.apache.uima.aae.UimaAsThreadFactory$1 UimaAsThreadFactory.run()INFO: Controller: ducc.jd.queue.81 --------------- Process Thread ID:29 EXITING*^^^^^^^^^ AE Destroy is called (0)Mar 30, 2014 10:42:42 PM org.apache.uima.aae.UimaAsThreadFactory$1 UimaAsThreadFactory.run()INFO: Controller: ducc.jd.queue.81 --------------- Process Thread ID:27 EXITING*^^^^^^^^^ AE Destroy is called (0)Mar 30, 2014 10:42:42 PM org.apache.uima.aae.UimaAsThreadFactory$1 UimaAsThreadFactory.run()INFO: Controller: ducc.jd.queue.81 --------------- Process Thread ID:26 EXITING*^^^^^^^^^ AE Destroy is called (0)Mar 30, 2014 10:42:42 PM org.apache.uima.aae.UimaAsThreadFactory$1 UimaAsThreadFactory.run()INFO: Controller: ducc.jd.queue.81 --------------- Process Thread ID:28 EXITING*^^^^^^^^^ AE Destroy is called (0)FROM PRINTLN: Destroy is called (1) !FROM PRINTLN: Destroy is called (1) !FROM PRINTLN: Destroy is called (1) !FROM PRINTLN: Destroy is called (1) !FROM PRINTLN: Destroy is called (1) !FROM PRINTLN: Destroy is called (1) !Mar 30, 2014 10:42:42 PM org.apache.uima.ducc.test.randomsleep.FixedSleepAE dolog(317)INFO: FROM LOGGER:Destroy is called (1) !Mar 30, 2014 10:42:42 PM org.apache.uima.ducc.test.randomsleep.FixedSleepAE dolog(317)INFO: FROM LOGGER:Destroy is called (1) !Mar 30, 2014 10:42:42 PM org.apache.uima.ducc.test.randomsleep.FixedSleepAE dolog(317)INFO: FROM LOGGER:Destroy is called (1) !Mar 30, 2014 10:42:42 PM org.apache.uima.ducc.test.randomsleep.FixedSleepAE dolog(317)INFO: FROM LOGGER:Destroy is called (1) !Mar 30, 2014 10:42:42 PM org.apache.uima.ducc.test.randomsleep.FixedSleepAE dolog(317)INFO: FROM LOGGER:Destroy is called (1) !Mar 30, 2014 10:42:42 PM org.apache.uima.ducc.test.randomsleep.FixedSleepAE dolog(317)INFO: FROM LOGGER:Destroy is called (1) !*^^^^^^^^^ AE Destroy exitsMar 30, 2014 10:42:45 PM org.apache.uima.aae.UimaAsThreadFactory$1 UimaAsThreadFactory.run()INFO: Controller: ducc.jd.queue.81 --------------- AE destroy() Method Call Returned ID:24*^^^^^^^^^ AE Destroy exitsMar 30, 2014 10:42:45 PM org.apache.uima.aae.UimaAsThreadFactory$1 UimaAsThreadFactory.run()INFO: Controller: ducc.jd.queue.81 --------------- AE destroy() Method Call Returned ID:28*^^^^^^^^^ AE Destroy exitsMar 30, 2014 10:42:45 PM org.apache.uima.aae.UimaAsThreadFactory$1 UimaAsThreadFactory.run()INFO: Controller: ducc.jd.queue.81 --------------- AE destroy() Method Call Returned ID:25*^^^^^^^^^ AE Destroy exitsMar 30, 2014 10:42:45 PM org.apache.uima.aae.UimaAsThreadFactory$1 UimaAsThreadFactory.run()INFO: Controller: ducc.jd.queue.81 --------------- AE destroy() Method Call Returned ID:29*^^^^^^^^^ AE Destroy exits*^^^^^^^^^ AE Destroy exitsMar 30, 2014 10:42:45 PM org.apache.uima.aae.UimaAsThreadFactory$1 UimaAsThreadFactory.run()INFO: Controller: ducc.jd.queue.81 --------------- AE destroy() Method Call Returned ID:27Mar 30, 2014 10:42:45 PM org.apache.uima.aae.UimaAsThreadFactory$1 UimaAsThreadFactory.run()INFO: Controller: ducc.jd.queue.81 --------------- AE destroy() Method Call Returned ID:26Mar 30, 2014 10:42:45 PM org.apache.uima.adapter.jms.activemq.JmsInputChannel stopChannelINFO: Controller: ducc.jd.queue.81 Stopped Listener on Endpoint: queue://ducc.jd.queue.81 Selector: Selector:Command=2000 OR Command=2002.Mar 30, 2014 10:42:45 PM org.apache.uima.adapter.jms.activemq.JmsInputChannel stopChannelINFO: Stopping Service JMS Transport. Service: ducc.jd.queue.81 ShutdownNow trueMar 30, 2014 10:42:45 PM org.apache.uima.adapter.jms.activemq.JmsInputChannel stopChannelINFO: Controller: ducc.jd.queue.81 Stopped Listener on Endpoint: queue://ducc.jd.queue.81 Selector: Selector:Command=2001.UIMA-AS Service is Stopping, All CASes Have Been ProcessedMar 30, 2014 10:42:45 PM org.apache.uima.aae.controller.PrimitiveAnalysisEngineController_impl stopINFO: Stopping Controller: ducc.jd.queue.81Mar 30, 2014 10:42:45 PM org.apache.uima.adapter.jms.activemq.JmsOutputChannel stopINFO: Controller: ducc.jd.queue.81 Output Channel Shutdown CompletedUIMA AS Service quiesceAndStop() Finished... AbstractManagedService - Stopping Service Adapter... AbstractManagedService - Calling super.stop()----------stop() calledStopping Camel RoutesStopping Camel Context... AbstractManagedService - Stopping Service Adapter... AbstractManagedService - Calling super.stop()----------stop() called=====JD log/tmp/ducc/driver/urchin/ducc/logs/81/jd.out.log30 Mar 2014 22:39:43,370 1 INFO jd.JobDriverComponent start N/A .....Starting Admin Channel on endpoint:activemq:topic:ducc.admin.channel30 Mar 2014 22:39:43,450 1 INFO jd.JobDriverComponent startAdminChannel N/A Admin Channel Activated on endpoint:activemq:topic:ducc.admin.channel30 Mar 2014 22:39:43,451 1 INFO jd.JobDriverComponent start N/A .....Starting Camel Context30 Mar 2014 22:39:46,132 1 INFO jd.JobDriverComponent start N/A ---OR Route in Camel Context-activemq://topic:ducc.orchestrator.abbreviated.state Route State:Started30 Mar 2014 22:39:46,155 1 INFO jd.JobDriverComponent start N/A ---OR Route in Camel Context-timer://jdStateDumpTimer?fixedRate=true&period=15000 Route State:Started30 Mar 2014 22:39:46,237 1 INFO jd.JobDriverComponent start N/A ---OR Route in Camel Context-activemq://topic:ducc.admin.channel Route State:Started30 Mar 2014 22:39:46,237 1 INFO jd.JobDriverComponent start N/A ..... Camel Initialized and Started30 Mar 2014 22:39:46,237 1 INFO jd.JobDriverComponent start N/A ..... Starting JMX Agent30 Mar 2014 22:39:51,002 12 INFO jd.JobDriver initialize N/A jd.step:initialize30 Mar 2014 22:39:52,916 12 INFO jd.JobDriver initialize 81 total: 10130 Mar 2014 22:39:52,916 12 INFO jd.JobDriver initialize 81 default handler = org.apache.uima.ducc.common.jd.plugin.JdProcessExceptionHandler30 Mar 2014 22:39:52,922 23 INFO jd.JobDriver waitForEligibility 81 jd.step:waitForEligibility30 Mar 2014 22:40:49,848 1 ERROR jd.JobDriverComponent startJmxAgent N/A Unable to Start JMX Connector. Running with No JMX Connectivity30 Mar 2014 22:42:41,349 23 INFO jd.JobDriver waitForEligibility 81 JobRunnable:true JobState:Running ProcessReady:true30 Mar 2014 22:42:41,355 23 INFO jd.JobDriver uimaAsClientInitialize 81 jd.step:uimaAsClientInitialize30 Mar 2014 22:42:41,355 23 INFO jd.JobDriver uimaAsClientInitialize 81 broker:tcp://localhost:61617?wireFormat.maxInactivityDuration=0&jms.useCompression=true&closeAsync=false30 Mar 2014 22:42:41,355 23 INFO jd.JobDriver uimaAsClientInitialize 81 endpoint:ducc.jd.queue.8130 Mar 2014 22:42:41,361 23 INFO jd.JobDriver uimaAsClientInitialize 81 default.process.get.meta.time.max:130 Mar 2014 22:42:41,361 23 INFO jd.JobDriver uimaAsClientInitialize 81 ducc.jd.queue.timeout.minutes:530 Mar 2014 22:42:41,365 23 INFO jd.JobDriver uimaAsClientInitialize 81 process_per_item_time_max:1230 Mar 2014 22:43:42,181 23 ERROR jd.JobDriver uimaAsClientInitialize 81org.apache.uima.resource.ResourceInitializationExceptionat org.apache.uima.adapter.jms.client.BaseUIMAAsynchronousEngine_impl.initialize(BaseUIMAAsynchronousEngine_impl.java:759)at org.apache.uima.ducc.jd.JobDriver.uimaAsClientInitialize(JobDriver.java:498)at org.apache.uima.ducc.jd.JobDriver.process(JobDriver.java:366)at org.apache.uima.ducc.jd.JobDriver.run(JobDriver.java:228)Caused by: org.apache.uima.aae.error.UimaASMetaRequestTimeout... 4 more30 Mar 2014 22:43:42,186 23 INFO jd.JobDriver terminate 81 jd.step:terminate30 Mar 2014 22:43:42,187 23 ERROR jd.JobDriver run 81org.apache.uima.ducc.jd.JobDriverTerminateException: initialize failedat org.apache.uima.ducc.jd.JobDriver.uimaAsClientInitialize(JobDriver.java:506)at org.apache.uima.ducc.jd.JobDriver.process(JobDriver.java:366)at org.apache.uima.ducc.jd.JobDriver.run(JobDriver.java:228)Caused by: org.apache.uima.resource.ResourceInitializationExceptionat org.apache.uima.adapter.jms.client.BaseUIMAAsynchronousEngine_impl.initialize(BaseUIMAAsynchronousEngine_impl.java:759)at org.apache.uima.ducc.jd.JobDriver.uimaAsClientInitialize(JobDriver.java:498)... 2 moreCaused by: org.apache.uima.aae.error.UimaASMetaRequestTimeout... 4 more=====
issueID:UIMA-3712
type:Bug
changed files:
texts:Improve DUCC&#39;s cleanup code on stop
Remove unnecessary ShutdownHook in AbstractManagedService class. Prevent executing AbstractDuccComponent.stop() multiple times.
issueID:UIMA-3713
type:Bug
changed files:
texts:Modify DUCC to deal with out of order messages
Its been observed that an Agent killed a JD immediately after starting it. This happens rarely but does occur.Looking through the Agent log I see that multiple OR state updates arrive almost instantly. In one of the states the OR requests a new process to be started while in the second state the process doesnt even exist. So the agent first launches the process and then subsequently kills it as this indicates a ghost process. A ghost process is one that exists in the agent's inventory but is not present in the OR state update.This is happening due to out of order messages. The OR generates its state updates at regular intervals (every 20 secs) and sends them to a jms topic. In this case, the PM fetches the update, trims it and sends it to agents. Not 100% sure, but it looks like there is some kind of a delay in a broker which causes messages to be held and than subsequently delivered in rapid succession. The agent should be able to cope with this. The OR should add a sequence number to each state it publishes. The PM should forward this sequence when it sends a trimmed state to the agents. The agent should compare received sequence against what it received on the previous  update.If the new sequence is larger than the previous one, processing should be allowed. If the new sequence is smaller then previous, the message should be discarded.
issueID:UIMA-3714
type:Bug
changed files:
texts:DUCC agent garbage collector doesnt accumulate time correctly
The garbage collector in the agent has a subtle bug that prevents accumulation of gc correctly. While iterating over GC JMX Beans the code tries to accumulate time as follows:time =+ bean.gcTime;This obviously doesnt do what is intended. The correct code should betime += bean.gcTime;
issueID:UIMA-3715
type:Bug
changed files:
texts:Reduce logging in the UIMA-AS service
The UIMA-AS service logs a message when it invalidates a JMS Session that has not been used in awhile. This is expected behavior.The message being logged may fool a user into thinking that there is something wrong happening in the service. Increase the log level on FINE from INFO.
issueID:UIMA-3716
type:Improvement
changed files:
texts:Have uima contexts&#39; ref to external override settings use root context
Clean up some early implementations to better reflect the design goal of having one external override settings apply to an entire UIMA context consistently from the Root.
issueID:UIMA-3717
type:Bug
changed files:
texts:DUCC Job Driver (JD) NPE when processing getState
02 Apr 2014 09:15:25,807 24 ERROR jd.JobDriverComponent getState     N/Ajava.lang.NullPointerException        at org.apache.uima.ducc.jd.JobDriver.rectifyStatus(JobDriver.java:1712)        at org.apache.uima.ducc.jd.JobDriverComponent.getState(JobDriverComponent.java:208)        at org.apache.uima.ducc.jd.config.JobDriverConfiguration$JobDriverStateProcessor.process(JobDriverConfiguration.java:114)        at org.apache.camel.util.AsyncProcessorConverterHelper$ProcessorToAsyncProcessorBridge.process(AsyncProcessorConverterHelper.java:61)        at org.apache.camel.util.AsyncProcessorHelper.process(AsyncProcessorHelper.java:73)        at org.apache.camel.processor.DelegateAsyncProcessor.processNext(DelegateAsyncProcessor.java:99)        at org.apache.camel.processor.DelegateAsyncProcessor.process(DelegateAsyncProcessor.java:90)        at org.apache.camel.util.AsyncProcessorHelper.process(AsyncProcessorHelper.java:73)        at org.apache.camel.processor.DelegateAsyncProcessor.processNext(DelegateAsyncProcessor.java:99)        at org.apache.camel.processor.DelegateAsyncProcessor.process(DelegateAsyncProcessor.java:90)        at org.apache.camel.management.InstrumentationProcessor.process(InstrumentationProcessor.java:73)        at org.apache.camel.util.AsyncProcessorHelper.process(AsyncProcessorHelper.java:73)        at org.apache.camel.processor.DelegateAsyncProcessor.processNext(DelegateAsyncProcessor.java:99)        at org.apache.camel.processor.DelegateAsyncProcessor.process(DelegateAsyncProcessor.java:90)        at org.apache.camel.processor.interceptor.TraceInterceptor.process(TraceInterceptor.java:91)        at org.apache.camel.util.AsyncProcessorHelper.process(AsyncProcessorHelper.java:73)        at org.apache.camel.processor.RedeliveryErrorHandler.processErrorHandler(RedeliveryErrorHandler.java:330)        at org.apache.camel.processor.RedeliveryErrorHandler.process(RedeliveryErrorHandler.java:220)        at org.apache.camel.processor.RouteContextProcessor.processNext(RouteContextProcessor.java:45)        at org.apache.camel.processor.DelegateAsyncProcessor.process(DelegateAsyncProcessor.java:90)        at org.apache.camel.processor.interceptor.DefaultChannel.process(DefaultChannel.java:303)        at org.apache.camel.util.AsyncProcessorHelper.process(AsyncProcessorHelper.java:73)        at org.apache.camel.processor.Pipeline.process(Pipeline.java:117)        at org.apache.camel.processor.Pipeline.process(Pipeline.java:80)        at org.apache.camel.processor.RouteContextProcessor.processNext(RouteContextProcessor.java:45)        at org.apache.camel.processor.DelegateAsyncProcessor.process(DelegateAsyncProcessor.java:90)        at org.apache.camel.processor.UnitOfWorkProcessor.processAsync(UnitOfWorkProcessor.java:150)        at org.apache.camel.processor.UnitOfWorkProcessor.process(UnitOfWorkProcessor.java:117)        at org.apache.camel.processor.RouteInflightRepositoryProcessor.processNext(RouteInflightRepositoryProcessor.java:48)        at org.apache.camel.processor.DelegateAsyncProcessor.process(DelegateAsyncProcessor.java:90)        at org.apache.camel.util.AsyncProcessorHelper.process(AsyncProcessorHelper.java:73)        at org.apache.camel.processor.DelegateAsyncProcessor.processNext(DelegateAsyncProcessor.java:99)        at org.apache.camel.processor.DelegateAsyncProcessor.process(DelegateAsyncProcessor.java:90)        at org.apache.camel.management.InstrumentationProcessor.process(InstrumentationProcessor.java:73)        at org.apache.camel.util.AsyncProcessorHelper.process(AsyncProcessorHelper.java:99)        at org.apache.camel.processor.DelegateAsyncProcessor.process(DelegateAsyncProcessor.java:86)        at org.apache.camel.component.timer.TimerConsumer.sendTimerExchange(TimerConsumer.java:134)        at org.apache.camel.component.timer.TimerConsumer$1.run(TimerConsumer.java:63)        at java.util.TimerThread.mainLoop(Timer.java:566)        at java.util.TimerThread.run(Timer.java:516)
issueID:UIMA-3718
type:Bug
changed files:
texts:DUCC Agent accumulates Camel Routes Leading to OOM
When an agent launches a new process it creates a Camel route to collect stats (memory usage, cpu, etc). The route is added to the Camel context where it remains for the lifetime of the agent. When the process is stopped, the agent only stops the route but never removes it from the Camel context. Over time these routes accumulate and eventually cause Agent OOM.When the process is stopped the agent should remove associated route from Camel context.
issueID:UIMA-3719
type:Improvement
changed files:
texts:DUCC SM should refuse CLI until OR is active.
SM should not accept CLI requests until OR starts to publish.As well, SM probably needs some sort of logic to insure that CLI requests don't get partially executed if OR dies after running for a while. First pass, SM will simply refuse the CLI until it sees the first OR publication.
issueID:UIMA-372
type:Improvement
changed files:
texts:remove deprecated methods in testcases
replace some of the deprecated methods used in the regression test cases.
issueID:UIMA-3720
type:Bug
changed files:
texts:DUCC SM: Mishandling autostart in ping/monitor
A minor thinko - the latest ping/monitor introduces the ability to enable and disable autostart for its service directly (as opposed to using the API).  Unfortunately this was bugged so that it continually sets autostart to true regardless of it's current or initial setting.
issueID:UIMA-3721
type:Task
changed files:
texts:change next version of uimaj to 2.6.0, update prereq to Java 6
The pointers to the parent pom need to be updated to 2.6.0, and the parent pom version needs updating to that.  This is per discussion on mailing list, because of change of base Java level required to Java 6 (from Java 5).
issueID:UIMA-3722
type:Bug
changed files:uimaj-core/src/main/java/org/apache/uima/jcas/JCas.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/TOP.java
uimaj-core/src/main/java/org/apache/uima/jcas/impl/JCasHashMap.java
uimaj-core/src/main/java/org/apache/uima/jcas/impl/JCasImpl.java
texts:JCasHashMap lifecycle size management broken
The code which decides whether or not the map table expansion is needed does if (size >= sizeWhichTriggersExpansion) {      increaseSize();but fails to then recalculate sizeWhichTriggersExpansion... Additionally, the technique to save the last failed probe located empty cell is unreliable, because arbitrary user code could be run which might disturb this value, in the case where a new JCas cover class instance was constructed, and the class defined a "readObject()" method - this would be called and could execute aribtrary operations.  Remove that optimization - have the put operation always do the find-empty-slot.
issueID:UIMA-3723
type:Improvement
changed files:
texts:DUCC SM CLI should support initialiazation time max
DUCC Service registration CLI needs to support process_intialization_time_max so services stuck on some resource during init() don't stay stuck forever.First step, make sure the CLI/API accept it.  Second step test, and maybe pass off to OR or Agent to insure it is honored.
issueID:UIMA-3724
type:Improvement
changed files:
texts:Adding (J)CasUtil.selectCoveredSingle()
JCasUtil (and its equivalent CASUtil) have two very useful methods: selectSingle(JCas jCas, Class<T> type), retrieving all T type annotations from the CAS, making sure only one exists, and returning it selectCovered(JCas jCas, final Class<T> type, AnnotationFS coveringAnnotation), retrieving all T type annotations from the CAS, that exist in the span defined by the covering annotation.My request is to add a selectCoveredSingle method (I already implemented and tested, written below). It would retrieve all T type annotation in the span of the covering annotation, make sure there is only one, and return it.The uses for such a method would be really common, as this assists in performing something very basic in UIMA - once you have some annotation, you want to retrieve other information on it, and if it is a small unit, then you know in advance that many types of information should only appear once for that annotation. Otherwise, it's an error.For instance, say I have linguistically annotated text, and I hold some intersting annotation of a Token. Then I want to find out what is its Part Of Speech. Then I would simply call: selectCoveredSingle(jcas, PartOfSpeech.class, token), and get exactly one PartOfSpeech annotation as I expected. If there is none or more then one, an exception is thrown.One could also use a method like selectCoveredSingleOptional (not implemented yet), that does exactly the same, but returns null when no such annotation exists, instead of throwing an exception. This makes sense when a token can have some optional attribute. In linguistics, it could be when a Token may be a NamedEntity, but not necessarily.the implementation is made out of two methods - the first should be in JCasUtil, the second should be in CASUtil.===Implementation:=== /** Get the annotation of the given annotation type constrained by a 'covering' annotation. Iterates over all annotations of the given type to find the covered annotations. Does not use subiterators.  * @param <T> the JCas type. @param jCas a JCas containing the annotation. @param type a UIMA type. @param coveringAnnotation the covering annotation. @return the single instance of the given type. @throws IllegalArgumentException if not exactly one instance if the given type is present under the covering annotation. @see Subiterator  @author Ofer Bronstein @since April 2014  */ @SuppressWarnings("unchecked") public static <T extends Annotation> T selectCoveredSingle(JCas jCas, final Class<T> type,   AnnotationFS coveringAnnotation) {  return (T) selectCoveredSingle(jCas.getCas(), JCasUtil.getType(jCas, type),    coveringAnnotation); } /** Get the annotation of the given annotation type constrained by a 'covering' annotation. Iterates over all annotations of the given type to find the covered annotations. Does not use subiterators.  * @param cas a cas containing the annotation. @param type a UIMA type. @param coveringAnnotation the covering annotation. @return the single instance of the given type. @throws IllegalArgumentException if not exactly one instance if the given type is present under the covering annotation. @see Subiterator  @author Ofer Bronstein @since April 2014  */ public static AnnotationFS selectCoveredSingle(CAS cas, Type type,   AnnotationFS coveringAnnotation) {  List<AnnotationFS> annotations = CasUtil.selectCovered(cas, type, coveringAnnotation);  if (annotations.isEmpty()) {   throw new IllegalArgumentException("CAS does not contain any [" + type.getName() + "]");  }  if (annotations.size() > 1)  {   throw new IllegalArgumentException("CAS contains more than one [" + type.getName()     + "]");  }  return annotations.get(0); }
issueID:UIMA-3725
type:Bug
changed files:
texts:DUCC Job Driver (JD) hangs if an Error occurs during initialize phase
07 Apr 2014 16:45:24,544 36 INFO jd.JobDriver initialize N/A jd.step:initialize07 Apr 2014 16:45:24,558 36 ERROR jd.JobDriverComponent process N/Ajava.lang.NoClassDefFoundError: org.apache.uima.resourceSpecifier.factory.ServiceContextat java.lang.J9VMInternals.verifyImpl(Native Method)at java.lang.J9VMInternals.verify(J9VMInternals.java:93)at java.lang.J9VMInternals.initialize(J9VMInternals.java:170)at org.apache.uima.ducc.transport.uima.dd.generator.DeploymentDescriptorGenerator.generateDeploymentDescriptor(DeploymentDescriptorGenerator.java:216)at org.apache.uima.ducc.transport.uima.dd.generator.DeploymentDescriptorGenerator.generate(DeploymentDescriptorGenerator.java:102)at org.apache.uima.ducc.jd.JobDriver.initialize(JobDriver.java:149)at org.apache.uima.ducc.jd.JobDriverComponent.process(JobDriverComponent.java:145)at org.apache.uima.ducc.jd.JobDriverComponent.evaluateJobDriverConstraints(JobDriverComponent.java:252)at org.apache.uima.ducc.jd.event.JobDriverEventListener.onOrchestratorAbbreviatedStateDuccEvent(JobDriverEventListener.java:39)at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:88)at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:55)at java.lang.reflect.Method.invoke(Method.java:613)at org.apache.camel.component.bean.MethodInfo.invoke(MethodInfo.java:341)at org.apache.camel.component.bean.MethodInfo$1.proceed(MethodInfo.java:238)at org.apache.camel.component.bean.BeanProcessor.process(BeanProcessor.java:166)at org.apache.camel.util.AsyncProcessorHelper.process(AsyncProcessorHelper.java:73)at org.apache.camel.processor.DelegateAsyncProcessor.processNext(DelegateAsyncProcessor.java:99)at org.apache.camel.processor.DelegateAsyncProcessor.process(DelegateAsyncProcessor.java:90)at org.apache.camel.management.InstrumentationProcessor.process(InstrumentationProcessor.java:73)at org.apache.camel.util.AsyncProcessorHelper.process(AsyncProcessorHelper.java:73)at org.apache.camel.processor.DelegateAsyncProcessor.processNext(DelegateAsyncProcessor.java:99)at org.apache.camel.processor.DelegateAsyncProcessor.process(DelegateAsyncProcessor.java:90)at org.apache.camel.processor.interceptor.TraceInterceptor.process(TraceInterceptor.java:91)at org.apache.camel.util.AsyncProcessorHelper.process(AsyncProcessorHelper.java:73)at org.apache.camel.processor.RedeliveryErrorHandler.processErrorHandler(RedeliveryErrorHandler.java:330)at org.apache.camel.processor.RedeliveryErrorHandler.process(RedeliveryErrorHandler.java:220)at org.apache.camel.processor.RouteContextProcessor.processNext(RouteContextProcessor.java:45)at org.apache.camel.processor.DelegateAsyncProcessor.process(DelegateAsyncProcessor.java:90)at org.apache.camel.processor.interceptor.DefaultChannel.process(DefaultChannel.java:303)at org.apache.camel.processor.RouteContextProcessor.processNext(RouteContextProcessor.java:45)at org.apache.camel.processor.DelegateAsyncProcessor.process(DelegateAsyncProcessor.java:90)at org.apache.camel.processor.UnitOfWorkProcessor.processAsync(UnitOfWorkProcessor.java:150)at org.apache.camel.processor.UnitOfWorkProcessor.process(UnitOfWorkProcessor.java:117)at org.apache.camel.processor.RouteInflightRepositoryProcessor.processNext(RouteInflightRepositoryProcessor.java:48)at org.apache.camel.processor.DelegateAsyncProcessor.process(DelegateAsyncProcessor.java:90)at org.apache.camel.util.AsyncProcessorHelper.process(AsyncProcessorHelper.java:73)at org.apache.camel.processor.DelegateAsyncProcessor.processNext(DelegateAsyncProcessor.java:99)at org.apache.camel.processor.DelegateAsyncProcessor.process(DelegateAsyncProcessor.java:90)at org.apache.camel.management.InstrumentationProcessor.process(InstrumentationProcessor.java:73)at org.apache.camel.util.AsyncProcessorHelper.process(AsyncProcessorHelper.java:99)at org.apache.camel.processor.DelegateAsyncProcessor.process(DelegateAsyncProcessor.java:86)at org.apache.camel.component.jms.EndpointMessageListener.onMessage(EndpointMessageListener.java:104)at org.springframework.jms.listener.AbstractMessageListenerContainer.doInvokeListener(AbstractMessageListenerContainer.java:560)at org.springframework.jms.listener.AbstractMessageListenerContainer.invokeListener(AbstractMessageListenerContainer.java:498)at org.springframework.jms.listener.AbstractMessageListenerContainer.doExecuteListener(AbstractMessageListenerContainer.java:467)at org.springframework.jms.listener.AbstractPollingMessageListenerContainer.doReceiveAndExecute(AbstractPollingMessageListenerContainer.java:325)at org.springframework.jms.listener.AbstractPollingMessageListenerContainer.receiveAndExecute(AbstractPollingMessageListenerContainer.java:263)at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.invokeListener(DefaultMessageListenerContainer.java:1058)at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.executeOngoingLoop(DefaultMessageListenerContainer.java:1050)at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.run(DefaultMessageListenerContainer.java:947)at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1156)at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:626)at java.lang.Thread.run(Thread.java:780)Caused by: java.lang.ClassNotFoundException: org.apache.uima.resourceSpecifier.factory.ServiceContextat java.net.URLClassLoader.findClass(URLClassLoader.java:599)at java.lang.ClassLoader.loadClassHelper(ClassLoader.java:743)at java.lang.ClassLoader.loadClass(ClassLoader.java:711)at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:325)at java.lang.ClassLoader.loadClass(ClassLoader.java:690)... 54 more
issueID:UIMA-3726
type:Improvement
changed files:
texts:DUCC SM Should support dynamic modification of all registration parameters
Because "services are forever" it should be possible to dynamically change all registration options without the need to reregister.Some such options will require service start.  In future work we will include a "rolling restart" to deploy updates with minimal disruption; for now manual stop and restart are required.Some can be dynamically applied.Some require restart of the ping/monitor only; this is done without service disruption.
issueID:UIMA-3727
type:Improvement
changed files:
texts:DUCC SM, RM, and config documentation updates
This jira will be used to cover the various documentation updates for the reworked and enhanced SM.
issueID:UIMA-3728
type:Bug
changed files:
texts:Ruta Worbench reports false problem on imported script
Ruta Worbench reports a false problem on imported script files. The resolution of the imported type system of the script file is somehow broken.
issueID:UIMA-3729
type:Task
changed files:
texts:License file of ruta engine plugin missed items
The license file of the ruta engine plugin missed some items, especially of the commons math jar.
issueID:UIMA-373
type:Improvement
changed files:
texts:UIMA&#39;s Unix command line utilities are named badly
UIMA command line utilities are available in two flavors: commandName.bat for Windows and commandName.sh for Unix. The Unix world typically does not use an extension for scripts.In addition to looking dumb, my real peeve with the .sh extension is how it complicates writing documentation, saying things like "using the cpeGui shell script (cpeGui.bat on Windows, cpeGui.sh on Unix)". Dropping .sh would allow the documentation to just say "using commandName".
issueID:UIMA-3731
type:Bug
changed files:
texts:Restore changes made in Jira 3371 that were lost in SM rework

issueID:UIMA-3732
type:Improvement
changed files:uimaj-core/src/main/java/org/apache/uima/UIMAFramework.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/asb/impl/ASB_impl.java
uimaj-core/src/main/java/org/apache/uima/resource/Resource_ImplBase.java
texts:solidify the non-modification of additionalParameters passed to core sdk apis
Many user-facing public APIs make use of a map for passing in additional parameters.  This map is also used internally.  The API contract for this is mostly that the map passed in is not altered. But occasionally, the framework augments or changes the map internally.  This causes failures if a user passes in a non-modifiable map, or depends on the map having the same contents when the method it was passed into , returns.  Most places in the UIMA Framework code already copy the map if they're going to modify it.  Find the places where this is not yet done, and make those places also copy it.
issueID:UIMA-3733
type:Bug
changed files:
texts:Refactor DUCC assembly to include uima and uima-as runtime
DUCC should include both UIMA and UIMA-AS runtimes: scripts, examples, jars, etc. Some users complained about the current requirement to download and install uima as an additional step (post Ducc install). Also refactor to remove activemq folder from DUCC root, DUCC should use activemq runtime from uima-as which should be in <ducc-root>/apache-uima/apache-activemq folder.
issueID:UIMA-3734
type:Improvement
changed files:
texts:DUCC SM Service debug support
DUCC SM should support process_debug <port>.Proposed implementation: on registration the process_debug <port> option is allowed.  The cli inserts a process_debug_host as well so the remote process knows which host to connect to.When set, SM prohibits expansion beyond a single process.  DuccServiceSubmit uses process_debug and process_debug_host to set the JVM args so the process can  call-home to a java debugger waiting on the indicated port.ducc_service modify allows dynamic set / reset of debug; changing the state requires manual stop and restart of the service.
issueID:UIMA-3735
type:Bug
changed files:
texts:DUCC Agent shouldnt submit a task to Executor related to stopped JP
Agent's process metric collector throws RejectedExecutionException while collecting metrics of a process that have just stopped. This is a race condition . Seems that the code should first stop the Executor and than the process.
issueID:UIMA-3736
type:Bug
changed files:
texts:DUCC Agent should stop consuming streams after duccling stream redirect
When a process is launched, duccling redirects its streams to a log. When this happens Agent should no longer bother consuming streams as there is nothing there to consume. Duccling will put out a marker string "1200 Redirecting" on stdout. When the Agents sees the marker it will close the stream and the dedicated thread will stop.
issueID:UIMA-3737
type:Bug
changed files:
texts:DUCC Agent should not try to remove cgroup when kill -9 fails to stop a process
When an agent starts up it tries to clean up the node. It first waits for the OR publications and then checks the node for running processes. It then reconciles what is running against what should be running (using OR state). Any processes not in the OR state should be evicted with kill -9 and its cgroup removed.If there is a defunct process on a node, it cannot be killed. Such process still has associated cgroup which cannot be removed. Its been observed that the agent's attempt to remove the cgroup of a defunct process causes the CPU utilization to spike for a couple of minutes.Agent should detect if a process is defunct and not try to remove its cgroup
issueID:UIMA-3738
type:Bug
changed files:
texts:DUCC Agent should interrupt thread waiting for defunct process to exit
When defunct process is detected, the Agent should interrupt a thread blocking on waitFor(). This process will never exit and just causes the Agent  thread leak. The Agent should store a handle to thread and interrupt it once the Rogue process detector identifies a defunct process.
issueID:UIMA-3739
type:Bug
changed files:
texts:Add more logging to Ducc Agent
Add additional logging to the Agent code to help diagnose why an Agent doesnt launch processes. This is rare but it does happen. The agent receives OR state, sees a new process and begins to launch it. The log shows that the last line logged in the launch sequence is just before the Agent tries to check if a cgroup with a given id exists. When the agent is in this state no processes are spawned.There is some evidence that the problem may be related to the OS problems. When the agent had trouble launching processes, it was observed that running a simple  command like "rm" was taking a couple of minutes.The agent tries to determine if a cgroup exists using File.exists(). My hypothesis is that this call may block if the OS is in a bad state.
issueID:UIMA-374
type:Bug
changed files:uimaj-tools/src/main/java/org/apache/uima/tools/cpm/CpmPanel.java
uimaj-tools/src/main/java/org/apache/uima/tools/cpm/CpmPanel.java
texts:CPE GUI left in bad state if you open a CPE descriptor that refers to a nonexistent component descriptor
In the CPE GUI choose "File -> Open Descriptor" and select an CPE descriptor that's invalid because one of its CAS Processor descriptor paths does not refer to a file that actually exists.  And error will be dispalyed in the GUI will show as if the invalid component is not present.  However, if you try to run the CPE now, you'll again get the error that the CAS Processor descriptor file does not exist.  The invalid path is still there, but hidden, and there's no way to actually delete it, short of hand-editing the XML.
issueID:UIMA-3740
type:Improvement
changed files:
texts:DUCC SM: Pass node residency and share id to ping/monitors
The sm should pass node residency and RM's share ID for each running instance to the ping/monitor.
issueID:UIMA-3741
type:Bug
changed files:
texts:Allow requests from one DUCC runtime to be sent to another
Add CLI version number to requests so requests from one installation of DUCC jars can be sent to another DUCC runtime (by setting the DUCC_HOME system property) provided the CLI versions are the same.  Warn when the runtimes duffer, reject if the CLI versions are incompatible.Also no longer remove DUCC jars from the classpath.
issueID:UIMA-3742
type:Improvement
changed files:
texts:DUCC SM: More robust logic to save state files
The DUCC SM needs to use rename/create/remove logic to insure its state files aren't lost due to misc glitches.  This applies to the .svc and .meta registration files.Proposed logic is:1.  Rename affected file2.  Create new file3.  If 2 is successful, remove the old file, else try to rename it back and emit an error.In no case do we want to lose a file, but we tolerate out-of-date state files.
issueID:UIMA-3743
type:Improvement
changed files:
texts:upgrade parent-pom to Apache-wide current version (14)
change parent version for the Apache-wide parent pom from 13 to 14 to pick up latest updates of build plugins, etc., used by all Apache projects
issueID:UIMA-3744
type:Improvement
changed files:
texts:Ruta: Upgrade antlr dependency for Java 8
Upgrade antlr dependency for Java 8. It's a known problem of antlr 3.5.1 with java 8 and should be fixed in antlr 3.5.2.
issueID:UIMA-3746
type:Bug
changed files:
texts:DUCC Agent not killing processes whose state=Stopping
Looks like an agent is not killing processes that show deallocated=true and state=Stopping. Its been observed that a process (JP) can hang while writing to a log due to quota problem. The agent seems to be getting a notification from the service wrapper that the process is stopping and changes its internal state. On subsequent OR publish, the process is deallocated but due to a bug it is never killed. Modify isAlive() in NodeAgent to include check if the process is in  Stopping state when deciding whether to kill the process.
issueID:UIMA-3747
type:Bug
changed files:uimaj-core/src/main/java/org/apache/uima/cas/impl/BinaryCasSerDes6.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/CasTypeSystemMapper.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/TypeSystemImpl.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/TypeSystemImpl.java
texts:Memory management problem with compressed binary deserialization
We think we stumbled across a memory management problem with the new compressed binary serialization when a CAS is reset/reused in a loop, e.g. in the uimaFIT SimplePipeline. When we use form 6, we consistently run into out-of-memory situations. Finally, we took the time to do a heap dump analysis.We found a huge TypeSystemImpl instance in the heap (~450MB). What makes it huge is the field "typeSystemMappers"that in our case contains 1000+ entries, each of them using apparently using a TypeSystemImpl as key.It looks like typeSystemMappers is never reset when a CAS is reused. My current theory is, that it should be reset when CAS.reset() is called, otherwise type systems accumulate there when the binary deserialization is used to repeatedly load data into a CAS in a loop that is resetting and reusing the CAS.
issueID:UIMA-3748
type:Bug
changed files:
texts:Ruta Workbench: implicit condition for comparison of two feature values causes problem
Implicit conditions for comparison of two feature values cause problems in the workbench only. A problem is reported for something like:Field{Field.begin == Field.end};... works however when applied.
issueID:UIMA-375
type:Improvement
changed files:
texts:Paragraph on "Eclipse has a steep learning curve..." repeated inside one section
Reported by Benjamin Sznajder:In the manualhttp://incubator.apache.org/uima/downloads/releaseDocs/2.1.0-incubating/docs/html/overview_and_setup/overview_and_setup.htmlthe sentenceEclipse has a bit of a learning curve. If you plan to make significant useof Eclipse, check out the tutorial under the help menu. It is well worththe effort.is repeated twice: in 3.1.1 and 3.1.5
issueID:UIMA-3750
type:Bug
changed files:
texts:Ruta: zero length partitioning at document start causes NPE in visibility check
Zero length partitioning at document start causes NPE in visibility check.
issueID:UIMA-3751
type:Improvement
changed files:
texts:Expanded utilities for constructing responses
See summary.
issueID:UIMA-3752
type:Bug
changed files:uimaj-tools/src/main/java/org/apache/uima/tools/jcasgen/Jg.java
texts:fix some findbugs issues prior to 2.6.0sdk release

issueID:UIMA-3753
type:Bug
changed files:
texts:Cascading Ruta modifiers in an AAE
Cascading Ruta modifiers in an AAE is currently not possible.The AEs with output views are sofa aware and thus they get passed the base CAS, which is normally the _InitialView. The modifiers, however, just try to process the passed CAS, which is not the one mapped to the modifier in the AAE. This leads to the problem that it cannot access the document modified by the previous modifier.
issueID:UIMA-3755
type:Bug
changed files:
texts:DUCC RM inccorect reconcilliation of &#39;fixed&#39; job on bounce
If a node running a process for a job of type 'fixed' crashes RM will 'purge' the node forcing the rest of ducc to clear its records of the process.If you then 'bounce' RM, it will think the 'fixed' job is missing an allocation (which it technically is, but 'fixed' is defined such that processes that go away are not replaced).RM needs logic so that while recovering non-preemptable jobs that have any allocation, it marks them 'allocation complete', the logic being that no allocation would have been given unless it was complete at some time in the past.
issueID:UIMA-3756
type:Bug
changed files:
texts:SimplePipeline.iteratePipeline doesn&#39;t call typeSystemInit on readers
Looks like typeSystemInit doesn't called when using SimplePipeline.iteratePipeline or when using JCasIterable.This was already fixed for SimplePipeline.runPipeline: http://svn.apache.org/r1446505
issueID:UIMA-3757
type:Improvement
changed files:
texts:improve MultiprocessingAnalysisEngine_implTest
Occasionally Jenkins fails this test due to a timeout.  Increase the timeout, and add some variability to increase the chance that a real hang might be triggered.
issueID:UIMA-3758
type:Task
changed files:
texts:Prepare for 2.6.0SDK release
change to pre-req Java 6, not 5, including changing the source and target levels of the compiler.  Update readmes and docs.
issueID:UIMA-3759
type:Task
changed files:
texts:Investigate possible heap memory issue
Jenkins builds on some machines with Java 7 latest, are sometimes giving out-of-memory failures.  Investigate, in case some change caused abnormally increased memory use
issueID:UIMA-376
type:Bug
changed files:
texts:README refers to outdated GUI label
In the readme file, you write: Input Directory: UIMA_HOME/examples/data Output Directory: UIMA_HOME/examples/data/processed TAE XML Descriptor:UIMA_HOME/examples/descriptors/analysis_engine/PersonTitleAnnotator.xmlThere is no TAX XML Descriptor label in the new gui.The new label is : "Location of Analyzis Engine XML Descriptor"
issueID:UIMA-3760
type:Improvement
changed files:
texts:DUCC Web Server (WS) should show list of alien PIDs when hovering over count > 0 thereof
See Summary.
issueID:UIMA-3761
type:Improvement
changed files:uimaj-core/src/main/java/org/apache/uima/internal/util/JmxMBeanAgent.java
texts:make jmx bean code use regular java, not indirect invoke
Before having Java 5 as a pre requisite, the code for using JMX mbeans and registering them had to be indirect (via reflection, invoke(..), etc.), because Java 1.4 didn't have JMX support.  Now that we require Java 6, this style of code can be replace with real methods, and save some slight performance hit, and be more maintainable going forward.
issueID:UIMA-3762
type:Bug
changed files:
texts:Ruta: import package as alias in testing view
Import package as alias and firends uses uimaFIT for loading the type system. This process uses the classpath, but int he testing view in the workbench, the type systems are normally not in the classpath.
issueID:UIMA-3764
type:Improvement
changed files:
texts:upgrade maven-changes-plugin to 2.10 - fixes jira report issue
Version 2.10 fixes the problem where the type isn't shown, and sorting that includes types doesn't work.
issueID:UIMA-3765
type:Improvement
changed files:uimaj-core/src/main/java/org/apache/uima/impl/Util.java
texts:Always deliver default View to annotator process method
Currently the CAS view delivered to an annotator's process method depends on two things: if the annotator declares sofa capabilities, the base CAS view is delivered; else the default view is delivered.Based on a recent mailing list discussion, always delivering the default view would be simpler and more intuitive.This change in behavior should not break any existing annotator code as the base CAS view delivered to view aware annotators essentially supports only the getView method, which will continue to work.
issueID:UIMA-3767
type:New Feature
changed files:
texts:Ruta: update versions of poms and plugins
Ruta: update versions of poms and plugins. Some maven plugins should be updated and use the new parent pom.
issueID:UIMA-3768
type:Task
changed files:
texts:Reorg versions
Rename the current version 2.0.1 to 2.1.0, have it depend on UIMA SDK 2.6.0, and upgrade it to Java 6.Rename the current version 2.1.0 to 2.2.0 (and do the same upgrades).
issueID:UIMA-3769
type:Bug
changed files:
texts:DUCC Agent should include JP current CPU utilization
The agent collect CPU utilization for each of JPs by sampling data from proc filesystem. The information collected is a cumulative since the process started. In addition to that the agent should expose the CPU utilization since the last time the sampling was done to show more accurate reading. Modify the collector to compute delta and modify IDuccProcess to include additional CPU stats.
issueID:UIMA-377
type:New Feature
changed files:uimaj-core/src/main/java/org/apache/uima/pear/tools/PackageCreatorException.java
uimaj-core/src/main/java/org/apache/uima/pear/tools/InstallationController.java
uimaj-tools/src/main/java/org/apache/uima/tools/pear/packager/PearPackager.java
uimaj-core/src/main/java/org/apache/uima/pear/tools/PackageCreator.java
texts:add API to build PEAR packages
Currently pear packages can only be created when having the PearPackager plugin installed. I would like to add a pear packager API to create pear files without using the pearPackager eclipse plugin.Also I plan to create an ANT task to build pear packages directly in the build. I choose ANT since I think it is more common. We can run it in our Maven build and annotator developers can run it in their build as well even when they don't use Maven.
issueID:UIMA-3770
type:Improvement
changed files:
texts:UIMA-AS binary distro does not include source for RunRemoteAsyncAE.java
hello,in UIMA-AS 2.4.2, in file binary, $UIMA_HOME/examples/src/org/apache/uima/examples/as/RunRemoteAsyncAE.javadoesn't appearsCan you help me?Thanks.
issueID:UIMA-3771
type:Question
changed files:
texts:Using common objects in several executions
Hello,My question is how to access to the external object in every execution of analysis engine. I have a object that is slow for loading and it is used in my annotator. Is it possible create this object one time and send to every ae?.Thanks for your attention.Regards
issueID:UIMA-3772
type:Question
changed files:
texts:Requirements
Hello,I find information over requirements for executing UIMA.Is there a better configuration?RAM? cores?Thanks for your attention.Regards.
issueID:UIMA-3773
type:Bug
changed files:
texts:Ruta: NPE for feature epxression on type match missing same annotation offsets
NPE for feature epxression on type match missing same annotation offsets. Occurs probably in the following exmaple because CW and Lemma annotations share not always the same offsets. The rule should not throw an NPE, but should just fail.(CW{INLIST(FirstNameList, Lemma.value)}){-> MARK(FirstName)};
issueID:UIMA-3774
type:Bug
changed files:uimaj-core/src/main/java/org/apache/uima/jcas/impl/JCasImpl.java
uimaj-core/src/main/java/org/apache/uima/jcas/impl/JCasHashMap.java
texts:make JCasHashMap update thread-safe
A recent fix to support multi-thread access in read-only mode to the CAS needs the JCasHashMap to be thread-safe for updates, because 2 or more iterators might simultaneously want to update the map
issueID:UIMA-3776
type:Bug
changed files:uimaj-core/src/main/java/org/apache/uima/resource/metadata/impl/MetaDataObject_impl.java
uimaj-core/src/main/java/org/apache/uima/resource/metadata/impl/MetaDataObject_impl.java
uimaj-core/src/main/java/org/apache/uima/resource/metadata/impl/MetaDataObject_impl.java
texts:Delegate AEs no longer serialized to XML after resolving imports on aggregate
This is a regression in the UIMA SDK 2.6.0 RC 1 and worked in UIMA SDK 2.5.0. Add a full delegate description to an AAE. Serialize to XML: delegate description is serialized. Call resolveImports() Serialize to XML: delegate description is no longer serialized.  public void testNoDelegatesToResolve() throws Exception {    ResourceSpecifierFactory f = UIMAFramework.getResourceSpecifierFactory();    AnalysisEngineDescription outer = f.createAnalysisEngineDescription();    AnalysisEngineDescription inner = f.createAnalysisEngineDescription();    outer.getDelegateAnalysisEngineSpecifiersWithImports().put("inner", inner);    StringWriter outerXml = new StringWriter();    outer.toXML(outerXml);        // Resolving the imports removes the inner AE description    outer.resolveImports(UIMAFramework.newDefaultResourceManager());        StringWriter outerXml2 = new StringWriter();    outer.toXML(outerXml2);    Assert.assertEquals(outerXml.toString(), outerXml2.toString());  }
issueID:UIMA-3777
type:Bug
changed files:
texts:DUCC Agent should not change process exit code
The agent should not change process exit code. Just report what the exit code is by saving it in the IDuccProcess object and leave interpretation of it to a component receiving this information (like DUCC WS).
issueID:UIMA-3779
type:New Feature
changed files:
texts:Ruta Workbench: hover information about configuration parameters for imported analysis engines
Ruta Workbench: add hover information about configuration parameters of imported analysis engines. Facilitates the reconfiguration of components in scripts.
issueID:UIMA-378
type:Improvement
changed files:uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/MultiPageEditor.java
texts:CDE plugin: change some private members to protected that derived classes can work with them

issueID:UIMA-3780
type:New Feature
changed files:
texts:Ruta: allow HtmlConverter to keep whitespaces
Ruta: allow HtmlConverter to keep whitespaces. This is help ful if the html converter is applied on text with inline xml tags specifying annotations. The combination HtmlAnnotator+HtmlConverter can then be applied for converting TEI to CAS.
issueID:UIMA-3781
type:Improvement
changed files:
texts:uima-ducc-vm.a.o demo: reduce job description clutter
No need to say "expected errors = none" as this is presumed.
issueID:UIMA-3784
type:Bug
changed files:uimaj-core/src/main/java/org/apache/uima/jcas/impl/JCasHashMap.java
uimaj-core/src/main/java/org/apache/uima/jcas/impl/JCasImpl.java
texts:JCasHashMap size() returns incorrect value
Size method has wrong value.  This is due to incorrect impl, where the table growing counts as new additions the items being re-added to the grown table.
issueID:UIMA-3785
type:Bug
changed files:
texts:Upgrade to UIMA 2.6.0
Upgrade to UIMA 2.6.0 and Java 6.
issueID:UIMA-3786
type:Bug
changed files:
texts:Fix UIMA-AS client race condition
Looks like there is a race condition that results in calling onBeforeProcess() callback twice. Seems like a thread handling Process reply is racing with another thread handling service ACK. Synchronize code to make sure only one of the two threads calls onBeforeProcess() callback
issueID:UIMA-3787
type:Improvement
changed files:
texts:DUCC Web Server (WS) should show 1 or more decimal places under Job Details Performace Tab
Zero is shown for fraction-only values.
issueID:UIMA-3788
type:Bug
changed files:
texts:Fix UIMA-AS java.lang.IllegalStateException: Timer already cancelled.
Looks like another race condition. The "java.lang.IllegalStateException: Timer already cancelled" usually occurs when one thread cancels a Timer, while another tries to start it. Supporting stack trace:26 Apr 2014 12:37:27,859  INFO JD.WorkItemStateKeeper - record     N/A seqNo:1120214 start26 Apr 2014 12:37:27,862  INFO JD.WorkItemStateKeeper - record     N/A seqNo:1120214 queued26 Apr 2014 12:37:27,864  INFO JD.WorkItemStateKeeper - record     N/A seqNo:1120214 operating26 Apr 2014 12:37:27,866  INFO JD.WorkItemStateKeeper - record     N/A seqNo:1120214 operating26 Apr 2014 12:37:27,900  INFO JD.WorkItemStateKeeper - record     N/A seqNo:1120212 endedApr 26, 2014 12:37:27 PM org.apache.uima.adapter.jms.client.BaseUIMAAsynchronousEngineCommon_impl$2 onMessageWARNING: java.lang.IllegalStateException: Timer already cancelled.        at java.util.Timer.sched(Timer.java:408)        at java.util.Timer.schedule(Timer.java:219)        at org.apache.uima.aae.delegate.Delegate.startDelegateTimer(Delegate.java:726)        at org.apache.uima.aae.delegate.Delegate.removeCasFromOutstandingList(Delegate.java:598)        at org.apache.uima.aae.delegate.Delegate.removeCasFromOutstandingList(Delegate.java:513)        at org.apache.uima.adapter.jms.client.BaseUIMAAsynchronousEngineCommon_impl.handleProcessReply(BaseUIMAAsynchronousEngineCommon_impl.java:1434)        at org.apache.uima.adapter.jms.client.BaseUIMAAsynchronousEngineCommon_impl$2.run(BaseUIMAAsynchronousEngineCommon_impl.java:2031)        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1156)        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:626)        at java.lang.Thread.run(Thread.java:780)
issueID:UIMA-3789
type:Bug
changed files:
texts:DUCC Web Server (WS) shows incorrect value for Summary Avg under Job Details Performace Tab

issueID:UIMA-379
type:Bug
changed files:uimaj-core/src/main/java/org/apache/uima/cas/impl/CASImpl.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/CASImpl.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/CASImpl.java
texts:CAS views should not call initFsClassRegistry
The fsclassregistry should be shared with the base CAS, as is done by setCAS(). If not shared, class cast exceptions occur when instantiating JCas on one CAS view and then trying to use JCas on another CAS view.
issueID:UIMA-3790
type:Bug
changed files:
texts:Reduce verbosity of uimafit-maven-plugin
The uimafit-maven-plugin produces quite longish and verbose logging output, detailing every field etc. that is enhanced. Such informations should be moved to the debug log level. On the info level, a short summary should be sufficient, e.g.:Enhanced 1 class file.Enhanced 7 class files.
issueID:UIMA-3791
type:Improvement
changed files:
texts:DUCC Web Server (WS) should show Job State and Reason on Job status line near top of Job Details page
Examples:1. Not yet CompletedId: 159197    State: WaitingForResources    Workitems: 1000    Done: 0    Error: 0    Dispatch: 0    Unassigned: 0    Limbo: 0   2: CompletedId: 159193    State: Completed    Reason: DriverInitializationFailure    Workitems: -1    Done: 0    Error: 0
issueID:UIMA-3792
type:Improvement
changed files:
texts:Remove redundant / conflicting resizing of JCas hash map
The caller of JCasHashMap.clear() has code to resize the map.  The impl of the map also does resizing.  Remove the now redundant and conflicting caller-based resizing.
issueID:UIMA-3793
type:Bug
changed files:
texts:DUCC Web Server (WS) fails to display a service whose endpoint contains paramaters
WS should ignore parms (? and beyond) when searching for endpoint.
issueID:UIMA-3794
type:Bug
changed files:uimaj-core/src/main/java/org/apache/uima/jcas/impl/JCasHashMap.java
uimaj-core/src/main/java/org/apache/uima/jcas/impl/JCasHashMap.java
texts:JCasHashMapTest has wrong test for machines with cores other than 8
The test case was conceived and debugged on an 8-core machine, but doesn't work on a machine with a different number of cores.
issueID:UIMA-3795
type:Improvement
changed files:uimaj-core/src/main/java/org/apache/uima/cas/impl/Heap.java
uimaj-core/src/main/java/org/apache/uima/jcas/impl/JCasHashMap.java
uimaj-core/src/main/java/org/apache/uima/jcas/impl/JCasImpl.java
texts:Use better defaults for initial size for JCasHasMap
The initial size of the JCasHashMap is hard-coded at 256.  It should be tied to the "tuning parameters" that specify the CAS size, perhaps at 1/2 the size (minimum though, based on # of cores, etc., due to interaction with defaulting mechanism for concurrency-level).
issueID:UIMA-3796
type:Bug
changed files:
texts:ducc-mon fails to cancel an abandoned job if ducc is not an administrator
When the job monitor recognizes that the submitter has exited it tries to cancel the job via duccling ... but fails if ducc is not listed in ducc.administrators.  Perhaps ducc should always have this power.
issueID:UIMA-3797
type:Improvement
changed files:
texts:Support reset action in common multi-core test utility
The MultiThreadUtils runs a test on multiple threads, multiple times.  Augment this to allow callers to specify an arbitrary method to be run before the repeat, which could be used to reset things, for a better test.
issueID:UIMA-3798
type:Improvement
changed files:uimaj-core/src/main/java/org/apache/uima/cas/impl/Heap.java
uimaj-core/src/main/java/org/apache/uima/jcas/impl/JCasHashMap.java
uimaj-core/src/main/java/org/apache/uima/jcas/impl/JCasImpl.java
uimaj-core/src/main/java/org/apache/uima/jcas/impl/JCasHashMap.java
texts:JCasHashMap race condition hang
Jerry C discovered a hang failure - I was able to reproduce on a particular large machine.  Traced to a race condition - where a "reserve" is found, and then a lock is acquired.  There's a chance that between these 2 events, another thread can change the reserve to a real value - if this happens, a hang.  Recheck the value after acquiring the lock.
issueID:UIMA-3799
type:Improvement
changed files:
texts:avoid out-of-memory due to too many threads in test cases
Some tests are written to run with 10 * the number of cores.  For machines having 32 or 64 cores, this causes out-of-memory condition for the tests.  Limit the number of threads to something like 50 to avoid this.
issueID:UIMA-380
type:Improvement
changed files:uimaj-examples/src/main/java/org/apache/uima/examples/cpe/SimpleRunCPE.java
uimaj-examples/src/main/java/org/apache/uima/examples/cpe/SimpleRunCPE.java
texts:runCPE utility should report initilazation time and processing time separately
Currently it just reports a single "elapsed time" that covers both initialiation and processing, which is not as useful as separate times would be.
issueID:UIMA-3800
type:Bug
changed files:
texts:DUCC Web Server (WS) hover over non-zero number in Services column on Services page yields incorrect info

issueID:UIMA-3801
type:Task
changed files:
texts:Update internal version to 1.1.0
Update Version.java to display 1.1.0.
issueID:UIMA-3802
type:Improvement
changed files:
texts:DUCC Web Server (WS) should show JD file under Job Details Processes tab
Some errors are not captured in the jd.err file.  The user should examine the <jobid>JD<node>-<PID>.log file for problems, and this file should be accessible from the WS Processes tab.
issueID:UIMA-3803
type:Bug
changed files:
texts:UIMA-AS services that differ only in the broker URL decorations should be treated as duplicates
UIMA-AS services with the same queue name and broker are duplicates, even if the service_request_endpoints contain different decorations.
issueID:UIMA-3804
type:Bug
changed files:
texts:DUCC Web Server (WS) should not display negative dispatch numbers
If the Job Driver has sent work items which have not yet been assigned locations, then the display value for work items dispatched can be negative...which can be confusing to the untrained eye.
issueID:UIMA-3805
type:Bug
changed files:
texts:DUCC Web Server (WS) should display NoWorkItemsFound as Reason, rather than the generic CanceledByDriver
re: job 160322
issueID:UIMA-3806
type:Documentation
changed files:
texts:Explain DUCC demo
See http://uima.apache.org/doc-uimaducc-whatitam.htmlThis new link contianed thereon to the DUCC demo should have some context information.  From M:Some small improvements:  It would be nice to have a paragraph that talks about the web interface and the motivations behind it; including, what are the problems being solved: e.g. "where is my log", what's the status of my job (in aggregate, in parts, why are things slow? etc.)
issueID:UIMA-3807
type:Bug
changed files:uimaj-core/src/main/java/org/apache/uima/jcas/impl/JCasHashMap.java
texts:JCasHashMap tests incorrect for 4 cores
Tests pass for 8 and 32 core machines, but failed for 4 core.  Change tests (and the JCasHashMap code) to allow the test case to test different assumptions on the number of cores, on a single machine.
issueID:UIMA-3808
type:Bug
changed files:
texts:Type detection mechanism not working in Groovy 2.3.0
An issue has been reported on Stackoverflow that the type detection mechanism does not work with Groovy 2.3.0. I could reproduce this problem, with Groovy 2.3.0, but not with a 2.1.x or 2.2.x version. I expect this to be a Groovy problem, but for the time being, I'll track it here. If the problem can be tracked down to a problem in the Groovy code, I'll set up an issue on their tracker too and link it here.Ref: http://stackoverflow.com/questions/23504261/dkpro-groovy-usage-and-installation-with-uima
issueID:UIMA-3809
type:Improvement
changed files:
texts:DUCC Test suite force consistent pseudo-node names
Currently start-sim generates names for the pseudo nodes by incremeting a single counter.  This makes it difficult to get consistently named nodes if the input configuration changes.  This is important if the pseudo-nodes are used in ducc.nodes e.g. to define nodepools and classes over the test configuration.This change introduces a new optional key into the simulation configuration, 'index'.  The index is associated with each real node and resets the counter used for name generation.  For examplenodes = node1 node2index.node1 = 5index.node2 = 20When generating pseudo nodes on node1 the counter is reset to 5; on node2, the counter is set to 20.
issueID:UIMA-381
type:Improvement
changed files:uimaj-tools/src/main/java/org/apache/uima/tools/pear/install/InstallPear.java
uimaj-tools/src/main/java/org/apache/uima/tools/pear/install/InstallPear.java
uimaj-tools/src/main/java/org/apache/uima/tools/cvd/CVD.java
uimaj-tools/src/main/java/org/apache/uima/tools/cvd/CVD.java
uimaj-tools/src/main/java/org/apache/uima/tools/cvd/MainFrame.java
uimaj-tools/src/main/java/org/apache/uima/tools/cvd/AnnotationDisplayCustomizationFrame.java
uimaj-tools/src/main/java/org/apache/uima/tools/cvd/AnnotationExtent.java
uimaj-tools/src/main/java/org/apache/uima/tools/cvd/ArrayNode.java
uimaj-tools/src/main/java/org/apache/uima/tools/cvd/ColorIcon.java
uimaj-tools/src/main/java/org/apache/uima/tools/cvd/FSNode.java
uimaj-tools/src/main/java/org/apache/uima/tools/cvd/FSTreeModel.java
uimaj-tools/src/main/java/org/apache/uima/tools/cvd/FSTreeNode.java
uimaj-tools/src/main/java/org/apache/uima/tools/cvd/CVD.java
uimaj-tools/src/main/java/org/apache/uima/tools/cvd/IndexTreeNode.java
uimaj-tools/src/main/java/org/apache/uima/tools/cvd/LogFileViewer.java
uimaj-tools/src/main/java/org/apache/uima/tools/cvd/MainFrame.java
uimaj-tools/src/main/java/org/apache/uima/tools/cvd/MarkupExtent.java
uimaj-tools/src/main/java/org/apache/uima/tools/cvd/MultiAnnotViewerFrame.java
uimaj-tools/src/main/java/org/apache/uima/tools/cvd/MultiMarkup.java
uimaj-tools/src/main/java/org/apache/uima/tools/cvd/StringFsPopupEventAdapter.java
uimaj-tools/src/main/java/org/apache/uima/tools/cvd/TypeTreeNode.java
uimaj-tools/src/main/java/org/apache/uima/tools/cvd/tsview/FeatureTableModel.java
uimaj-tools/src/main/java/org/apache/uima/tools/cvd/tsview/MainFrame.java
uimaj-tools/src/main/java/org/apache/uima/tools/cvd/MainFrame.java
uimaj-tools/src/main/java/org/apache/uima/tools/cvd/tsview/FeatureTableModel.java
uimaj-tools/src/main/java/org/apache/uima/tools/cvd/tsview/MainFrame.java
texts:Rename CVD packages to more intuitive name
Generally restructure the CVD code to make it easier to read and improve.  Start by renaming packages appropriately.  Also remove references to the old name of CVD, Gladis.
issueID:UIMA-3810
type:Improvement
changed files:
texts:DUCC Web Server (WS) mini code re-org for improved re-usability

issueID:UIMA-3811
type:Bug
changed files:
texts:DUCC RM not preempting agressively
The check on entering the recursion for preemption was checking for shares only in the job's nodepool but not in the subpools.  The check needs to be against the pool and its subpools.
issueID:UIMA-3812
type:New Feature
changed files:
texts:DUCC check_ducc will warn about 0 swap configured
Add code to check_ducc to warn if a node has no swap configured.
issueID:UIMA-3813
type:Task
changed files:
texts:DUCC Updates for new SM function
Update duccbook for new SM function, API, and ping/monitor API.
issueID:UIMA-3814
type:Improvement
changed files:
texts:DUCC check_ducc and start_ducc should detect and handle ssh hangs
Broken nodes can cause ssh hangs, e.g. if NFS is broken.  Check_ducc and start_ducc should handle this.Proposed design: it's nearly impossible to stop the ssh without a ctl-c -like interrupt if the remote work is stuck in NFS.  check_ducc and start_ducc will catch the ctl-c, terminate any stuck ssh's, and report on the nodes that didn't return correctly.
issueID:UIMA-3815
type:New Feature
changed files:
texts:DUCC duccling support for umask
Proposed solution:    User sets DUCC_UMASK into job's environment.  ducc_ling detects this and sets the umask accordingly prior to spawning the task.
issueID:UIMA-3817
type:Bug
changed files:
texts:Refactor Ducc Agent to collect process metrics from ps command not from /proc filesystem
Looks like the current approach for collecting process metrics (CPU, RSS, SWAP) is not portable across different flavors of Linux. The agent currently collects some of the process stats from /proc/<pid>/statm file but it looks like the syntax of this file is OS specific thus current approach is not working right. There is some evidence that on RedHat the stats for RSS and Swap are wrong. Change agent's code to collect process stats from ps command
issueID:UIMA-3819
type:Bug
changed files:
texts:DUCC SM not properly logging jmx failure in ping/monitor
If the default UIMA-AS pinger has problems accessing the service's JMX port it is not properly logged or exposed in the web server.
issueID:UIMA-3820
type:Bug
changed files:
texts:Ruta: greedy iteration of composed wildcard
Something like the following seems not to work:((# PERIOD){-> Sentence})+;
issueID:UIMA-3821
type:Bug
changed files:
texts:Eclipse installation through UIMA update site Fails
An error occurred while collecting items to be installedsession context was:(profile=epp.package.standard, phase=org.eclipse.equinox.internal.p2.engine.phases.Collect, operand=, action=).Multiple problems occurred while downloading.Artifact not found: http://www.apache.org/dist/uima/eclipse-update-site/uimaj/plugins/org.apache.uima.caseditor_2.6.0.jar.pack.gz.http://www.apache.org/dist/uima/eclipse-update-site/uimaj/plugins/org.apache.uima.caseditor_2.6.0.jar.pack.gzArtifact not found: http://www.apache.org/dist/uima/eclipse-update-site/uimaj/plugins/org.apache.uima.caseditor_2.6.0.jar.http://www.apache.org/dist/uima/eclipse-update-site/uimaj/plugins/org.apache.uima.caseditor_2.6.0.jarMultiple problems occurred while downloading.Artifact not found: http://www.apache.org/dist/uima/eclipse-update-site/uimaj/plugins/org.apache.uima.caseditor.ide_2.6.0.jar.pack.gz.http://www.apache.org/dist/uima/eclipse-update-site/uimaj/plugins/org.apache.uima.caseditor.ide_2.6.0.jar.pack.gzArtifact not found: http://www.apache.org/dist/uima/eclipse-update-site/uimaj/plugins/org.apache.uima.caseditor.ide_2.6.0.jar.http://www.apache.org/dist/uima/eclipse-update-site/uimaj/plugins/org.apache.uima.caseditor.ide_2.6.0.jarMultiple problems occurred while downloading.Artifact not found: http://www.apache.org/dist/uima/eclipse-update-site/uimaj/plugins/org.apache.uima.debug_2.6.0.jar.pack.gz.http://www.apache.org/dist/uima/eclipse-update-site/uimaj/plugins/org.apache.uima.debug_2.6.0.jar.pack.gzArtifact not found: http://www.apache.org/dist/uima/eclipse-update-site/uimaj/plugins/org.apache.uima.debug_2.6.0.jar.http://www.apache.org/dist/uima/eclipse-update-site/uimaj/plugins/org.apache.uima.debug_2.6.0.jarMultiple problems occurred while downloading.Artifact not found: http://www.apache.org/dist/uima/eclipse-update-site/uimaj/plugins/org.apache.uima.desceditor_2.6.0.jar.pack.gz.http://www.apache.org/dist/uima/eclipse-update-site/uimaj/plugins/org.apache.uima.desceditor_2.6.0.jar.pack.gzArtifact not found: http://www.apache.org/dist/uima/eclipse-update-site/uimaj/plugins/org.apache.uima.desceditor_2.6.0.jar.http://www.apache.org/dist/uima/eclipse-update-site/uimaj/plugins/org.apache.uima.desceditor_2.6.0.jarMultiple problems occurred while downloading.Artifact not found: http://www.apache.org/dist/uima/eclipse-update-site/uimaj/plugins/org.apache.uima.jcas.jcasgenp_2.6.0.jar.pack.gz.http://www.apache.org/dist/uima/eclipse-update-site/uimaj/plugins/org.apache.uima.jcas.jcasgenp_2.6.0.jar.pack.gzArtifact not found: http://www.apache.org/dist/uima/eclipse-update-site/uimaj/plugins/org.apache.uima.jcas.jcasgenp_2.6.0.jar.http://www.apache.org/dist/uima/eclipse-update-site/uimaj/plugins/org.apache.uima.jcas.jcasgenp_2.6.0.jarMultiple problems occurred while downloading.Artifact not found: http://www.apache.org/dist/uima/eclipse-update-site/uimaj/plugins/org.apache.uima.launcher_2.6.0.jar.pack.gz.http://www.apache.org/dist/uima/eclipse-update-site/uimaj/plugins/org.apache.uima.launcher_2.6.0.jar.pack.gzArtifact not found: http://www.apache.org/dist/uima/eclipse-update-site/uimaj/plugins/org.apache.uima.launcher_2.6.0.jar.http://www.apache.org/dist/uima/eclipse-update-site/uimaj/plugins/org.apache.uima.launcher_2.6.0.jarMultiple problems occurred while downloading.Artifact not found: http://www.apache.org/dist/uima/eclipse-update-site/uimaj/plugins/org.apache.uima.pear_2.6.0.jar.pack.gz.http://www.apache.org/dist/uima/eclipse-update-site/uimaj/plugins/org.apache.uima.pear_2.6.0.jar.pack.gzArtifact not found: http://www.apache.org/dist/uima/eclipse-update-site/uimaj/plugins/org.apache.uima.pear_2.6.0.jar.http://www.apache.org/dist/uima/eclipse-update-site/uimaj/plugins/org.apache.uima.pear_2.6.0.jarMultiple problems occurred while downloading.Artifact not found: http://www.apache.org/dist/uima/eclipse-update-site/uimaj/plugins/org.apache.uima.runtime_2.6.0.jar.pack.gz.http://www.apache.org/dist/uima/eclipse-update-site/uimaj/plugins/org.apache.uima.runtime_2.6.0.jar.pack.gzArtifact not found: http://www.apache.org/dist/uima/eclipse-update-site/uimaj/plugins/org.apache.uima.runtime_2.6.0.jar.http://www.apache.org/dist/uima/eclipse-update-site/uimaj/plugins/org.apache.uima.runtime_2.6.0.jarArtifact not found: http://www.apache.org/dist/uima/eclipse-update-site/uimaj/features/org.apache.uima.runtime_2.6.0.jar.http://www.apache.org/dist/uima/eclipse-update-site/uimaj/features/org.apache.uima.runtime_2.6.0.jarArtifact not found: http://www.apache.org/dist/uima/eclipse-update-site/uimaj/features/org.apache.uima.tools_2.6.0.jar.http://www.apache.org/dist/uima/eclipse-update-site/uimaj/features/org.apache.uima.tools_2.6.0.jar
issueID:UIMA-3822
type:Bug
changed files:
texts:Upgrade DUCCs slf4j to version 1.6.4
Upgrade slf4j to the same level used by activemq. Having two different versions may cause MethodNotFound at runtime.
issueID:UIMA-3823
type:Improvement
changed files:uimaj-core/src/main/java/org/apache/uima/analysis_engine/impl/ResultSpecification_impl.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/impl/RsLangs.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FSBooleanConstraintImpl.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FSFloatConstraintImpl.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FSIntConstraintImpl.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FSStringConstraintImpl.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FSTypeConstraintImpl.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FeaturePathImpl.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FeatureStructureImpl.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FeatureValuePathImpl.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/OutOfTypeSystemData.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/TypeSystemImpl.java
uimaj-core/src/main/java/org/apache/uima/cas_data/impl/PrimitiveArrayFSImpl.java
uimaj-core/src/main/java/org/apache/uima/cas_data/impl/ReferenceArrayFSImpl.java
uimaj-core/src/main/java/org/apache/uima/internal/util/IntVector.java
uimaj-core/src/main/java/org/apache/uima/internal/util/StringUtils.java
uimaj-core/src/main/java/org/apache/uima/internal/util/TimeSpan.java
uimaj-core/src/main/java/org/apache/uima/internal/util/UIMALogFormatter.java
uimaj-core/src/main/java/org/apache/uima/internal/util/rb_trees/IntArrayRBTcommon.java
uimaj-core/src/main/java/org/apache/uima/internal/util/rb_trees/IntRBTNode.java
uimaj-core/src/main/java/org/apache/uima/internal/util/rb_trees/RBTNode.java
uimaj-core/src/main/java/org/apache/uima/internal/util/rb_trees/RedBlackTree.java
uimaj-core/src/main/java/org/apache/uima/jcas/impl/JCasImpl.java
uimaj-core/src/main/java/org/apache/uima/pear/util/StringUtil.java
uimaj-core/src/main/java/org/apache/uima/pear/util/XMLUtil.java
uimaj-core/src/main/java/org/apache/uima/resource/metadata/impl/ConfigurationParameterDeclarations_impl.java
uimaj-core/src/main/java/org/apache/uima/resource/metadata/impl/MetaDataObject_impl.java
uimaj-core/src/main/java/org/apache/uima/util/CasPool.java
uimaj-core/src/main/java/org/apache/uima/util/Level.java
uimaj-core/src/main/java/org/apache/uima/util/ProgressImpl.java
uimaj-core/src/main/java/org/apache/uima/util/impl/JSR47Logger_impl.java
uimaj-core/src/main/java/org/apache/uima/util/impl/Log4jLogger_impl.java
uimaj-core/src/main/java/org/apache/uima/util/impl/ProcessTraceEvent_impl.java
texts:uimaj cleanups found with google codepro tooling
run the google codepro tool, fix what it may find if it makes good sense.
issueID:UIMA-3824
type:Improvement
changed files:
texts:DUCC RM Add Query API/CLI
Add query to the RM API/CLI.  Perhaps two queries initially:'query load' to return RM's impression of how busy life is total nodes online total nodes free total shares available total shares free total pending evictions total pending expansions total shares demanded - this is the number of shares that would be used within infinite resources anything else fun'query occupancy' returns node occupancy: for each online node, what are the job processes on that node.  Possibly include 'investment' for each process. (Investment is DUCC's measure of how much work might be lost if that process is preempted.)
issueID:UIMA-3825
type:Bug
changed files:
texts:DUCC Web Server (WS) needs to account for unusable memory
The WS must account for ducc.rm.reserved.dram = <GB> if specified in ducc.propertiesOn Machines page:1. Reserve(GB) column should be renamed to Memory(GB):usable2. Value for 1. above should be total reported by agent - <GB> specified for ducc.rm.reserved.dram in ducc.properties3. Shares:total must be calculated using the value calculated in 2. above
issueID:UIMA-3826
type:Improvement
changed files:
texts:DUCC Web Server (WS) should display Swap(GB):free on Machines page
Agent is already providing this information.
issueID:UIMA-3827
type:Bug
changed files:
texts:Missing activemq jars cause a http service to falsely claim to be up
If the apache-activemq/lib/optional jars are missing an http service fails to connect to its broker but reports successful initialization.  Since the pinger cannot reach the service any dependent jobs are stuck forever WaitingForServices.
issueID:UIMA-3828
type:Improvement
changed files:
texts:DUCC job driver (JD) should auto-retry lost work items - improvement
Once that all JPs have stopped, perhaps JD should insure queue is purged.// The ActiveMQ JMX domain> String amqDomain = "org.apache.activemq";>> // The parameters for an ObjectName> Hashtable<String, String> params = new Hashtable<String, String>();> params.put("Type", "Queue");> params.put("BrokerName", brokerName);> params.put("Destination", queueName);>> // Create an ObjectName> ObjectName queueObjectName = ObjectName.getInstance(amqDomain, params);>> // Create a proxy to the QueueViewMBean> QueueViewMBean queueProxy = (QueueViewMBean)> broker.getManagementContext().newProxyInstance(queueObjectName,> QueueViewMBean.class, true);>> // Purge the queue> queueProxy.purge();>See Jira 3577.
issueID:UIMA-3829
type:Bug
changed files:
texts:DUCC Agent should skip over processes owned by UID < 500 when detecting rogues
Modify rogue process detector to skip over processes owned by UID < 500. By convention these are system processes and thus not rogue. This simplifies configuration of DUCC. Currently DUCC admin must maintain a list of users to skip in the exclusion list defined in ducc.properties.Wikipedia says: "Convention reserves UIDs from 1 to 100 for system use; some manuals recommend reserving UIDs from 101 up to 499 (Red Hat Enterprise Linux) or even up to 999 (Debian) as well. "Recent SLES systems show in /etc/login.defs:SYSTEM_GID_MAX            499
issueID:UIMA-383
type:Bug
changed files:
texts:Duplicate operationalProperties element in example descriptor ex2/RoomNumberAnnotator.xml

issueID:UIMA-3830
type:Bug
changed files:
texts:DUCC Agent should get process current CPU usage from top cmd
Get more accurate CPU utilization from top command for each agent managed process. Run top in batch mode and scrape the CPU usage.
issueID:UIMA-3831
type:Bug
changed files:
texts:SM keeps trying to start a service if its initialization fails in a special way
SM seems to know it failed but will attempt to restart forever if left alone!service log:  /users/burn/2014-exp13/watsonmd/try3/logs/S-1405/12844java.lang.ClassNotFoundException: org.apache.http.message.AbstractHttpMessageducc.log:rationale: process initialization failure(s) occurred SM.log:16 May 2014 22:11:59,788  WARN SM.ServiceSet - signalUpdate    1405 Instance 12844 Excessive initialization failures. Total failures&#91;1&#93; allowed &#91;1&#93;, not restarting.....16 May 2014 22:11:59,792  INFO SM.ServiceSet - start    1405 Starting instance 0...16 May 2014 22:12:01,617  INFO SM.ServiceInstance - start    1405 START INSTANCE COMPLETE16 May 2014 22:12:01,617  INFO SM.ServiceSet - start    1405 Instance[ 0 ] id  12845
issueID:UIMA-3832
type:Bug
changed files:
texts:Ducc Agent should subtract memory owned by the OS (typically UID<500) from total available memory
When running on GPFS there may be significant memory used for memory buffer pool. This memory should be subtracted from the total memory available to the node. Actually, sum up all memory used up by processes owned by UID < max gid and subtract it from the total memory. The max gid is typically 500 but can be changed in ducc.properties.
issueID:UIMA-3833
type:New Feature
changed files:
texts:Ruta: Add control structure for single matches
Ruta: Add control structure for single matches.While ONLYFIRST stops after the first applied rule, rules in this block should stop after the apply. In the former, the other rules are not investigates and in the latter other anchors are not investigated.
issueID:UIMA-3834
type:Improvement
changed files:
texts:uima-ducc-vm.a.o demo: try adding a 60GB machine to the mix
Having only two 45GB sim nodes sometimes strains resources for demo script.  See if adding one 60GB sim node improves matters.
issueID:UIMA-3836
type:Bug
changed files:
texts:ducc-mon reports initializing services as state Unknown
While a service is initializing ducc-mon does not report its state correctly..  Also the Service Details page has no information in the Deployments and Files tabs (but the History tab shows all files,)  Would be nice if it reported what can be found in ducc.log, e,g, WaitngForServices, WaitingForResources, Initializing.
issueID:UIMA-3837
type:Improvement
changed files:
texts:DUCC SM put registration date into meta file
Service registrations need a date stamp so we can tell when they entered the system.
issueID:UIMA-3838
type:Bug
changed files:
texts:uima-ducc-vm.a.o demo: adjustments for 1.1.0

issueID:UIMA-3839
type:Bug
changed files:
texts:UIMA-AS logs excessively when unable to connect to broker
When a jms listener is unable to connect to a broker it should log once and silently retry until the connection is made. This used to work fine. Check what may have regressed in the code. Currently the listener just logs failure after each retry.
issueID:UIMA-384
type:New Feature
changed files:
texts:create a pear packaging ant task
create a new project in the Sandbox to create a pear packaging ANT task
issueID:UIMA-3840
type:Task
changed files:
texts:Prevent stop_ducc and check_ducc -k from working on non-head nodes
Protection for stop_ducc force stop_ducc and check_ducc -k to be on head nodeBy popular request although the wisdom of this isn't totally clear.
issueID:UIMA-3841
type:Bug
changed files:
texts:Ruta: greedy composed rule element ignores -contains condition
I've recently had problems with Ruta's rule inference. The sentence was like "X y, y, X, y, X" and the rule was similar to :S {CONTAINS(x) -> UNMARK(S)} (COMMA? S)+ {CONTAINS(y), -CONTAINS(CW) -> UNMARKALL(S), MARK(S,1,2)};where S annotations are segments, initially:&#91;X y&#93;, &#91;y&#93;, &#91;X&#93;, &#91;y&#93;, &#91;X&#93;It ignores the condition -CONTAINS(CW) sometimes and annotates:&#91;X y, y, X, y, X&#93;The problem seems to be related to the composed rule element (COMMA? S)+ and the condition action part of it.
issueID:UIMA-3842
type:Bug
changed files:
texts:UIMA-AS listeners not shutting down cleanly
While running extended tests I've noticed there were quite a few Exceptions coming from AMQ while uima-as service was shutting down. Traced this to code in UimaDefaultMessageListenerContainer.java that was doing this:__listenerRef.getSharedConnection().close();Since there are multiple instances of listeners, the connection was being closed while other listeners were still running causing the underlying AMQ code to complain as the connection was being yanked while in running state.Modified code to stop calling close on shared connection and instead call listener shutdown code that eventually closes the connection after the last listener stops.
issueID:UIMA-3843
type:Bug
changed files:
texts:UIMA-AS should close connection on exception in JmsEndpointConnection_impl.openChannel()
The code should close a jms connection on exception in JmsEndpointConnection_impl.openChannel(). The ActivemMQConnection creates a "regular" (non-daemon) thread in its constructor which must be shutdown via a call to close(). If not done a thread leak can occur.
issueID:UIMA-3844
type:Bug
changed files:
texts:While in stopping state the UIMA-AS client should throw away all incoming replies
Modify onMessage() to ignore all messages arriving while the UIMA-AS client is in stopping state.
issueID:UIMA-3845
type:Task
changed files:
texts:Prepare for release version 2.1.0
Prepare for release version 2.1.0
issueID:UIMA-3846
type:Bug
changed files:
texts:The cli jar should reference a complete consistent set of UIMA jars
When the cli jar's manifest adds only 2 of the UIMA jars, others added to the classpath may cause a UIMA version mismatch error.  Simplest fix is to add a consistent set.
issueID:UIMA-3848
type:Improvement
changed files:
texts:DUCC Web Server (WS) seems slow to respond for Machines page of large cluster
Perhaps smart caching can help!?
issueID:UIMA-3849
type:Bug
changed files:
texts:Prepare UIMA-AS for 2.6.0 release
Review and update poms and other release related files (README, RELEASE_NOTES, LICENSE and NOTICE).
issueID:UIMA-385
type:Bug
changed files:
texts:setUimaClasspath script has extra space at end of set PATH command, making last path entry invalid

issueID:UIMA-3850
type:Bug
changed files:
texts:Simplify UIMA-AS code in Delegate.java and BaseUIMAAsynchronousEngineCommon_impl
The changes are purely cosmetic. Simplification of code in Delegate.java and BaseUIMAAsynchronousEngineCommon_impl.java.
issueID:UIMA-3851
type:Bug
changed files:
texts:UIMA-DUCC parent pom uses <uimaASNoticeText> variable
Modify ducc parent pom to remove references to UIMA-AS. The variable uimaASNoticeText as well as text itself contains references to UIMA-AS<uimaASNoticeText>Portions of UIMA-AS were originally developed byInternational Business Machines Corporation and arelicensed to the Apache Software Foundation under the"Software Grant License Agreement", informally known as the "IBM UIMA-EE License Agreement".Copyright (c) 2007, 2008 IBM Corporation       </uimaASNoticeText>
issueID:UIMA-3852
type:Bug
changed files:
texts:UIMA-AS aggregate fails to merge type system when running with 2.6.0 uima-sdk
Recent optimization and error reporting changes in CasManager_impl in the 2.6.0 uima-sdk uncovered a uima-as aggregate bug in code which tries to merge type systems from delegates where one of them is a remote CM. See UIMA SDK JIRA: https://issues.apache.org/jira/browse/UIMA-1249The new uima sdk code complains if addMetaData method is called after CasPool is created. It turns out that the UIMA-As aggregate creates a Shadow CasPool for its remote delegate CasMultiplier before the type system is merged. Fix is to move the code that creates Shadow CasPool beyond where the merge occurs. After successful merge create the Pool.
issueID:UIMA-3853
type:Bug
changed files:
texts:Compilation failure on IBM Java 8 beta 3
found that using IBM Java 8 beta 3, the build from source failed (not in thejavadocs). using Oracle Java 8 or IBM Java 7 - build from source is ok.IBM Java 8 reports this error&#91;ERROR&#93; Failed to execute goalorg.apache.maven.plugins:maven-compiler-plugin:3.1:compile (default-compile) onproject uimafit-core: Compilation failure&#91;ERROR&#93;/C:/au/t/uimafit-2.1.0/uimafit-2.1.0-bfs/uimafit-core/src/main/java/org/apache/uima/fit/internal/ReflectionUtil.java:&#91;145,16&#93;cannot find symbol&#91;ERROR&#93; symbol:   method isAnnotationPresent(java.lang.Class<capture#1 of ?extends java.lang.annotation.Annotation>)&#91;ERROR&#93; location: variable aObject of type java.lang.reflect.AccessibleObjectThis may be related to https://issues.apache.org/jira/browse/LUCENE-4808  Probably not a blocker, but investigation may show some easy work-around.
issueID:UIMA-3854
type:Bug
changed files:
texts:Update migration section in documentation
Some sections mention uimaFIT 2.0.0 and there is no section on migrating from uimaFIT 2.0.0 to 2.1.0. I think this is viable since 2.1.0 is a bugfix release, but will fix this if there are should be another release candidate.
issueID:UIMA-3855
type:Bug
changed files:
texts:degenaro@uima-ducc-vm:~/ducc/install/admin$ ./ducc_statedump fails...
degenaro@uima-ducc-vm:~/ducc/install/admin$ ./ducc_statedumpTraceback (most recent call last):  File "./ducc_statedump", line 158, in <module>    CLASSPATH = os.environ&#91;&#39;CLASSPATH&#39;&#93; + ':' + os.environ&#91;&#39;DUCC_HOME&#39;&#93; + '/examples/lib/uima-ducc-examples.jar'  File "/usr/lib/python2.7/UserDict.py", line 23, in _getitem_    raise KeyError(key)KeyError: 'DUCC_HOME'
issueID:UIMA-3856
type:Improvement
changed files:
texts:DUCC RM: Change handling of purge bit
The purge bit always has to be handled on quiesce it turns out.  Instead I'm removing any code that acts on the purge bit.  RM will only set it, but will never clear the process until the OR has acknowledged the purge message and deallocated the processes.
issueID:UIMA-3857
type:Bug
changed files:
texts:DUCC Orchestrator (OR) should should checkpoint and restore publication sequence number.
If only OR reboots while Agents and perhaps other daemons remain running, the OR publication sequence number is reset to zero.  As a result, the receivers of these OR publications may reject them as being out-of-sequence.
issueID:UIMA-3858
type:Bug
changed files:
texts:DUCC Agent should publish final node inventory before terminating
Before terminating, the agent forces its managed processes to quiesce and also kills any if still alive after 60 sec delay. In addition, the agent should publish its final state (node inventory) to the OR so that the OR sees processes as Stopped. Modify agent to wait in its stop() method for a period slightly longer than configured node inventory publish rate defined in ducc.properties. This will ensure that the last publish occurs before the Agent terminates
issueID:UIMA-3859
type:Improvement
changed files:
texts:Better maven-plugin-plugin configuration
Better workaround to fix missing descriptors failure:http://jira.codehaus.org/browse/MPLUGIN-267
issueID:UIMA-386
type:Improvement
changed files:uimaj-core/src/main/java/org/apache/uima/jcas/impl/JCasImpl.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/cpm/engine/CPMEngine.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/CASImpl.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FSClassRegistry.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/TypeSystemImpl.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FSClassRegistry.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/cpm/engine/ArtifactProducer.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/cpm/engine/CPMEngine.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/cpm/engine/NonThreadedProcessingUnit.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/cpm/engine/ProcessingUnit.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/cpm/engine/SequencedQueue.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/asb/impl/FlowContainer.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/asb/impl/FlowControllerContainer.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/impl/PrimitiveAnalysisEngine_impl.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/CASImpl.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FSClassRegistry.java
uimaj-core/src/main/java/org/apache/uima/jcas/impl/JCasImpl.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/asb/impl/FlowContainer.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/asb/impl/FlowControllerContainer.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/impl/AnalysisEngineImplBase.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/impl/PearAnalysisEngineWrapper.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/impl/PrimitiveAnalysisEngine_impl.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/CASImpl.java
uimaj-core/src/main/java/org/apache/uima/impl/UimaContext_ImplBase.java
uimaj-core/src/main/java/org/apache/uima/jcas/impl/JCasImpl.java
uimaj-core/src/main/java/org/apache/uima/util/CasPool.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FSClassRegistry.java
texts:Switching to use correct class loader
The current design presumes one classloader is used for all components in an application.  This shows up in the implementation when using JCas - the class loader used to load the JCas cover classes is set up in the CAS, and there is only one there.  This works, unless the analysis engine component is loaded by a different class loader.  This causes strange class-cast exceptions, where the source and target classes look to be identical (what's happening is that the classes are named the same, including having the same package names, but are loaded with different class loaders).  A fix is needed that insures the class loader used for JCas can be switched when an analysis engine component is run.  This should be time-efficient because the flow controller could be under a different class loader than the delegates it's controlling, so the class loader could be switching back and forth twice per delegate dispatch.A proposed approach is to add an internal method to the CAS, useClassLoader(xxx), which will be called by the framework just before the processCas call, passing in the class loader that was used to load the analysis engine class.  The framework will check to see if this is the current in-use class loader, and if it is, do nothing.  If it isn't, if the JCas is instantiated, it will call a new JCas method, switchClassLoader(xxx). This method will (a) reset the cache JCas uses to reduce object creation for JCas objects, and do what's needed to load or switch to the right set of iterator generators.  Where possible, re-loading will be avoided, to make the switch fast.
issueID:UIMA-3860
type:Bug
changed files:
texts:uima-ducc-vm.a.o demo: timed file system clean-up is too aggressive
Files of active and recently ended jobs should not be cleaned-up.
issueID:UIMA-3863
type:Improvement
changed files:
texts:Ruta: add documentation for common use cases
Ruta: add documentation for common use cases. Create a new chapter in the documentation and move the integration/java/ruta part to this chapter.
issueID:UIMA-3865
type:Bug
changed files:
texts:DUCC Web Server (WS) shows unchanging projected job completion time towards EOJ
Projection seems stuck at max completed work item time.  Initial debugging seems to indicate that the leastOperatingMillis reported for the Job by the Orchestrator is zero???
issueID:UIMA-3866
type:Improvement
changed files:
texts:Ruta: convert additional analysis engine to uimaFIT components
Ruta: convert additional analysis engine to uimaFIT components, e.g, HtmlAnnotator...
issueID:UIMA-3867
type:Improvement
changed files:
texts:Upgrade to Maven Plugin-Plugin for JDK-8 compatible generated JavaDoc
Upgrade to Maven Plugin-Plugin for JDK-8 compatible generated JavaDoc.See also: http://jira.codehaus.org/browse/MPLUGIN-244
issueID:UIMA-3868
type:Task
changed files:
texts:Remove maven-plugin-plugin override after upgrading to UIMA parent pom 10
Remove maven-plugin-plugin override after upgrading to UIMA parent pom 10.
issueID:UIMA-3869
type:Improvement
changed files:
texts:Better maven-plugin-plugin configuration
Better workaround to fix missing descriptors failure:http://jira.codehaus.org/browse/MPLUGIN-267        <groupId>org.apache.maven.plugins</groupId>        <artifactId>maven-plugin-plugin</artifactId>        <version>3.3</version>        <executions>          <execution>            <id>default-descriptor</id>            <phase>process-classes</phase>          </execution>
issueID:UIMA-387
type:Bug
changed files:uimaj-core/src/main/java/org/apache/uima/cas/impl/XmiCasSerializer.java
uimaj-core/src/main/java/org/apache/uima/internal/util/XMLUtils.java
uimaj-core/src/main/java/org/apache/uima/util/XMLSerializer.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/XmiCasSerializer.java
uimaj-core/src/main/java/org/apache/uima/internal/util/XMLUtils.java
uimaj-core/src/main/java/org/apache/uima/util/XMLSerializer.java
uimaj-core/src/main/java/org/apache/uima/internal/util/XMLUtils.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/XmiCasSerializer.java
uimaj-core/src/main/java/org/apache/uima/internal/util/XMLUtils.java
texts:XMI Serializer can write invalid control characters
On 5/1/07, Leo Ferres <lferres@ccs.carleton.ca> wrote:> Hello,>> While trying to open an xmi file after processing in xml view, an> error pops up telling me that there is an invalid &#26 xml character.> the error comes from the sax parser. Below is the stack trace. Thanks> very much for your help,>Most control characters are not allowed in XML 1.0, even if they areescaped with &#xxx.  If your input document contains such characters,the XMI CAS serializer is writing them to the output XMI document,making it unreadable.I checked that if you edit the XMI document and change the first line to:<?xml version="1.1" encoding="UTF-8"?>The problem goes away, because XML version 1.1 does allow escapedcontrol characters.So one possibility for us to fix this in UIMA is to have the XMI CASSerializer generate XML version 1.1 tag by default.  (I think weconsidered that before and decided not to for some reason, maybe wewere worried that other applications might not be able to consume XML1.1?  I can't remember. Another possibility would be to have the XMI serializer automaticallyreplace these characters with spaces.  The XCAS (not XMI) serializerdoes that, but only for the document text, not for feature values.  Wecould also serialize the XMI using XML version 1.1, which allowsescaped control characters (but still not the 0x00 character).
issueID:UIMA-3870
type:Improvement
changed files:
texts:Update to parent-pom 10
Update to parent-pom 10
issueID:UIMA-3871
type:Improvement
changed files:
texts:DUCC Job Driver (JD) should log Orchestrator publication processing failures

issueID:UIMA-3872
type:Bug
changed files:
texts:DUCC should correct requests with invalid service dependencies that include broker URL decorations
DUCC should check the syntax of a UIMA-AS service dependency ...the broker URL should not have decorations
issueID:UIMA-3873
type:Improvement
changed files:
texts:DUCC Web Server (WS) should not show sub-seconds for job duration and projection

issueID:UIMA-3874
type:Bug
changed files:
texts:DUCCs broker credentials file should be moved to admin folder
To simplify installation move broker credentials file to admin folder. This file needs to be protected and read only. Since the admin folder is protected it seem like a good place for this script.Modify assembly and ducc.properties.
issueID:UIMA-3875
type:Improvement
changed files:
texts:Upgrade parent-pom to Java 6
The parent-pom still sets Java 5 as the language level. Since we moved to Java 6 in UIMAJ 2.6.0, I think we should also move the parent-pom to Java 6 and remove the language-level overrides from the individual modules.
issueID:UIMA-3876
type:Improvement
changed files:
texts:Remove javadoc security issue fix
There is a section saying          <!-- remove version after moving to apache parent pom 14 or later -->         <!--  <version>2.9.1</version> pick up fix for javadoc security issue, June 2013 from superpom -->parent-pom 10-SNAPSHOT has already been upgraded to the Apache parent-pom 14, so I guess this can be removed.
issueID:UIMA-3877
type:Improvement
changed files:
texts:Clean up dependencies
Check for unused / wrongly scoped dependencies.Leaving this issue open until the 2.6.1 release in case we find more unused dependencies. Just resolve it before the release.
issueID:UIMA-3878
type:Bug
changed files:
texts:UIMA-AS parent pom uses wrong version of SPRING with AMQ 5.7
The parent pom sets dependency on spring 3.0.6 which is not correct. The AMQ 5.7.0 that will ship with uima-as 2.6.0 needs spring 3.0.7. There seems to be no issues at runtime though. The AMQ 5.7.0 runs ok with 3.0.6 but for consistency sake upgrade spring for the release
issueID:UIMA-3879
type:Bug
changed files:
texts:UIMA-AS extended test should use non-default port for JMX
The extended tests use port 1099 for jmx when running. This port may be taken if there is another broker on the machine where the tests are running. Modify to use 1098
issueID:UIMA-388
type:Improvement
changed files:uimaj-core/src/main/java/org/apache/uima/analysis_engine/impl/compatibility/CollectionReaderAdapter.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/impl/compatibility/CollectionReaderAdapter.java
texts:When CollectionReader wrapped as CAS Multiplier, if a second process call comes in, call reconfigure
This is to support deploying a CollectionReader as a CAS Multiplier service and then hitting it multiple times, without having to restart the service.
issueID:UIMA-3880
type:Bug
changed files:
texts:UIMA-AS activemq-nojournal.xml should include http connector
Add http connector to the broker configuration
issueID:UIMA-3881
type:Bug
changed files:
texts:TRANSFER Action Problem
Dear Peter,I am having the following problem when trying to use the TRANSFER function that UIMA RUTA provides.When having an annotation of type "cardType" with a list of features:cardName:americanExpresscardType:creditCardand an other DECLARED annotation of the type "bigAnnotation" :DECLARE Annotation bigAnnotation( STRING laonName, STRING loanType, STRING cardName, STRING cardType);Now when I create the following rule:cardType{->TRANSFER(bigAnnotation)};the compatible features of the "cardType" annotation  are not transferred correctly to the "bigAnnotation" annotation.Is there a bug here or am I getting something wrong?If you need something else please let me know!
issueID:UIMA-3883
type:Bug
changed files:
texts:Remove classpath if specified for a custom service
Avoid confusion by not including an unused classpath when registering a custom service
issueID:UIMA-3884
type:Task
changed files:
texts:Prepare release of parent-pom 10
Prepare release of parent-pom 10
issueID:UIMA-3885
type:Sub-task
changed files:
texts:Remove redundant configuration items
Remove redundant configuration items
issueID:UIMA-3886
type:Task
changed files:
texts:Remove snapshot repository declaration required for SNAPSHOT dependencies
Remove snapshot repository declaration required for parent pom 10-SNAPSHOT / UIMA 2.7.0-SNAPSHOT.
issueID:UIMA-3887
type:Improvement
changed files:
texts:Remove Java language level override
Remove Java language level override to 1.6 because that is now the default in parent-pom 10.
issueID:UIMA-3888
type:Task
changed files:
texts:Remove stale pluginManagement section from UIMAJ SDK parent pom
We have a pretty stale pluginManagement section in the parent-pom of the UIMAJ SDK now. Just useless settings and commented out settings. Can we just remove this?  <build>    <pluginManagement>      <plugins>        <plugin>          <artifactId>maven-changes-plugin</artifactId>        </plugin>        <plugin>         <groupId>org.apache.maven.plugins</groupId>         <artifactId>maven-compiler-plugin</artifactId>         <configuration>      <!--      <compilerId>javac-with-errorprone</compilerId>           <forceJavacCompilerUse>true</forceJavacCompilerUse> -->         </configuration>   <!--  <dependencies>           <dependency>             <groupId>org.codehaus.plexus</groupId>             <artifactId>plexus-compiler-javac</artifactId>             <version>2.3</version>           </dependency>           <dependency>             <groupId>org.codehaus.plexus</groupId>             <artifactId>plexus-compiler-javac-errorprone</artifactId>             <version>2.3</version>           </dependency>         </dependencies> -->       </plugin>      </plugins>    </pluginManagement>    <plugins>            </plugins>  </build>
issueID:UIMA-3889
type:Bug
changed files:
texts:DUCC agent should support 0 for a skip rate when publishing inventory
Change agent code to support 0 as a value for skip.rate defined in ducc.properties. This is used when determining if node inventory should be published. Current code does not allow 0, meaning that the publish will skip at least once if skip.rate=1. The agent should support immediate publish with no skip if skip=0.
issueID:UIMA-389
type:Bug
changed files:uimaj-core/src/main/java/org/apache/uima/jcas/cas/AnnotationBase.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/AnnotationBase.java
texts:AnnotationBase.getSofa() throws ClassCastException
In the JCAS cover class for AnnotationBase:  public SofaFS getSofa() {    if (AnnotationBase_Type.featOkTst && ((AnnotationBase_Type) jcasType).casFeat_sofa == null)      this.jcasType.jcas.throwFeatMissing("sofa", "uima.tcas.Annotation");    return (SofaFS) jcasType.ll_cas.ll_getFSForRef(addr);  }That last line isn't right... it should be calling getFSForRef on the value of the "sofa" feature, but instead it is calling it on the addr field, which would be the address of the annotation.
issueID:UIMA-3890
type:Bug
changed files:
texts:DUCC agent rogue process detector doesnt call cleanup script at consistent intervals
It was reported that the Ducc agent rogue process detector does not call configured clean up script at regular intervals. For some PIDs it is consistent while for other it is not. Review the code to see why there are delays and find the cause of inconsistency.
issueID:UIMA-3891
type:Bug
changed files:
texts:Service doesn&#39;t reference-start if manually stopped earlier
Register a non-autostart serviceRun a job that references it  service auto-starts & shuts down soon after job finishesStart the serviceRun a job that references it  service stays Available after job finishesStop the serviceRun a job that references it  service does NOT auto-start & job fails
issueID:UIMA-3892
type:Improvement
changed files:
texts:DUCC needs a file for private configuration data
Create file admin/ducc.private.properties to contain private DUCC data, initially ducc.ws.port.ssl.pw=<value>.Employ DuccPropertiesResolver to merge ducc.properties and admin/ducc.private.properties, the latter taking precedence.
issueID:UIMA-3893
type:Improvement
changed files:
texts:DUCC Web Server (WS) swap and pagin columns on the services page
Would be nice to put swap and pagin columns on the services page so that these things are more obvious. Like jobs, the services page would be sums of all service instances.As for column space, deployments and instances could be much tighter, and Burn says that service dependencies are not supported for managed reservations.
issueID:UIMA-3894
type:Bug
changed files:
texts:Revert UIMA-AS poms to 2.6.0-SNAPSHOT
Prepare for RC2.
issueID:UIMA-3895
type:Bug
changed files:
texts:UIMA-AS license is missing xpp3 specific license
Missing a license for xpp3. The binary jar for xpp does not include license but the source does. Also, activemq that ships with xpp3 also does not mention it in its license.
issueID:UIMA-3896
type:Bug
changed files:
texts:DUCC jms listener not recovering after network glitch
Due to a network glitch a subset of Ducc agents (P7's) stopped receiving messages. The outgoing messages seem not to be effected by the glitch. Both the inventory and metrics were being dispatched ok.Seems like either Camel, Spring or AMQ were not recovering after such an event. Try to replicate the scenario and see if there is a general solution to the problem of losing broker temporarily.
issueID:UIMA-3897
type:Bug
changed files:
texts:Remove UIMA-AS 40 sec shutdown delay
There is a delay of 40 seconds in the code that executes when UIMA-AS error handler determines that the JVM should exit due to reaching max AE errors. This delay seems wrong and should be taken out. The decision has already been made to terminate, so why wait. Remove the delay. Code in question is in BaseAnalysisEngine.handleAction()
issueID:UIMA-3898
type:Improvement
changed files:
texts:Update of the Apache UIMA™ Ruta Guide and Reference
In the actual Guidelines available at https://uima.apache.org/d/ruta-current/tools.ruta.book.pdf in section 1.5.1.1 example code of how to run a Ruta script is shown. This code needs some updates as it seems outdated. Below i copied the actual content of the guidelines and marked everything which needs a change in redURL aedesc = RutaEngine.class.getResource("BasicEngine.xml");XMLInputSource inae = new XMLInputSource(aedesc);ResourceSpecifier specifier = UIMAFramework.getXMLParser().parseResourceSpecifier(inae);ResourceManager resMgr = UIMAFramework.newDefaultResourceManager();AnalysisEngineDescription aed = (AnalysisEngineDescription) specifier;TypeSystemDescription basicTypeSystem = aed.getAnalysisEngineMetaData().getTypeSystem();Collection<TypeSystemDescription> tsds =new ArrayList<TypeSystemDescription>();tsds.add(basicTypeSystem);// add some other type system descriptors// that are needed by your script fileTypeSystemDescription mergeTypeSystems = CasCreationUtils.mergeTypeSystems(tsds);aed.getAnalysisEngineMetaData().setTypeSystem(mergeTypeSystems);aed.resolveImports(resMgr);AnalysisEngine ae = UIMAFramework.produceAnalysisEngine(aed,resMgr, null);File scriptFile = new File("path/to/file/MyScript.ruta");ae.setConfigParameterValue(RutaEngine.SCRIPT_PATHS,new String[] ( scriptFile.getParentFile().getAbsolutePath() ));String name = scriptFile.getName().substring(0,scriptFile.getName().length() - 3);ae.setConfigParameterValue(RutaEngine.MAIN_SCRIPT, name);ae.reconfigure();CAS cas = ae.newCAS();cas.setDocumentText("This is my document.");ae.process(cas);The first change needs to be a -5 instead of a -3 since Ruta files now end with .ruta and no longer with .tmThe second and third change refer to the names of the variables, now they start with PARAM_ except for that the code is still working as expectedI thought it might help if this would be fixed
issueID:UIMA-3899
type:Improvement
changed files:
texts:DUCC CLI Long pauses for all CLI operations
The DUCC CLI currently constructs a new NodeIdentity object as part of initialization.  The NodeIdentity iterates all network interfaces trying to find all the ways "me" is identified.  The CLI then uses only the "getIp()" method which returns exactly the results from InetAddress.getLocalHost().getHostAddress();.The problem is that iterating all those interfaces can take a long time and if there is a mis-configured or otherwas errant NIC the pause can be significant, on the order of minutes.This JIRA is to track changing the CLI to use InetAddress.getLocalHost().getHostAddress(); directly instead of NodeIdentity for this purpose.  Initial testing indicates a significant improvement in interactive response.
issueID:UIMA-390
type:New Feature
changed files:uimaj-core/src/main/java/org/apache/uima/uimacpp/UimacppEngine.java
texts:C++ framework has different target name for debug builds
To run a C++ component from Java, the JNI loads the UIMA C++ framework as a shared library named "uima". On Windows, annotators built debug use the "uimaD" version of the C++ framework. In order to tell UIMA to use the debug framework, support for a new property will be added, DEBUG_UIMACPP, which will cause the loading of "uimaD" on Windows platforms.
issueID:UIMA-3900
type:Task
changed files:
texts:DUCC Put node viz into web server

issueID:UIMA-3901
type:Bug
changed files:
texts:UIMA-AS missing LICENSE and NOTICE
httpclient, httpcore, and geronimo jars in amq/optional have special licenses and notices which need to be documented in binary NOTICE and LICENSE
issueID:UIMA-3902
type:Improvement
changed files:
texts:DUCC Web Server (WS) Swap delta on Machines page
On Machines page, show swap delta (of swap inuse) between metric reports which arrive each heartbeat interval.
issueID:UIMA-3903
type:Task
changed files:
texts:Update web site with uima-ducc-demo replacing uima-ducc-vm
Using uima-ducc-vm is non-standard.  See Jira Infra 7919.
issueID:UIMA-3904
type:Improvement
changed files:
texts:DUCC Admin commands not protected
None of the priveleged Java-based admin commands verify that the issuer is a DUCC admin, or that the user is who he/she/it claims to be !!!!!shutdownvary-onvary-off
issueID:UIMA-3906
type:Bug
changed files:
texts:Update DUCC license and notice files
Add info about http-core, http-client and geronimo. Review all jars to make sure all legal stuff is in place for the release
issueID:UIMA-3907
type:Bug
changed files:
texts:Reorganize DUCC jar dependencies
Ducc jars should be consolidated/reorganized. All commons jars should be in a single folder. The following folders should be removed from lib as all these dependencies are in activemq distribution that comes with ducc: http-client springframework xmlbeans saxon slf4j xstream
issueID:UIMA-3908
type:Bug
changed files:
texts:Review UIMA-AS support for running with embedded AMQ broker
UIMA-AS needs to support embedded AMQ broker. At some point this used to work but changes were made to replace AMQ with java queues. Review the changes and fix code to re-enable support embedded broker which uses vm://localhost for URI.
issueID:UIMA-3909
type:Bug
changed files:
texts:uima-ducc-demo.apache.org SM vanished
The demo's SM vanished.  Checked with Infra (Jan) and no OOM killer.  Raise the -Xmx for SM from 150M to 200M for next deployment.
issueID:UIMA-391
type:New Feature
changed files:
texts:On Windows, create debug annotator libraries with "D" appended to name
On Windows, UIMACPP annotators link to different versions of the framework for debug vs release builds. In order to avoid accidental mismatches at run time, all UIMACPP DLL file names will have a "D" appended by the build projects, and the debug framework will add a "D" to the component name from UIMA descriptors before loading these components. This also applies to URI scheme handlers.
issueID:UIMA-3910
type:Bug
changed files:
texts:Compile time error in INT variable
Hi,I am using following code and getting a compile error.INT count1;Document{COUNT(Type,count1)};Document{->LOG(count1)};Type{IF(count1 == 1)->MARK(Type2)};In last two lines having compile time error on variable count1 . it says Multiple markers:-Syntax error: count1-Variable "" not defined in this script or block!-Mismatched Input: Expecting "RPAREN" but found "count1".Please look into it.Thanks
issueID:UIMA-3912
type:Improvement
changed files:
texts:DUCC Web Server (WS) sort on Job Details page
Default sort on Job Details page:1. running processes at the top2. error/croaked processes next3. normal completions next4. preemptions at the bottom
issueID:UIMA-3913
type:Improvement
changed files:
texts:JCasUtil methods could be more generic
As an example, the method indexCovering of JCasUtil has signature:public static <T extends Annotation,S extends Annotation> Map<T, Collection<S>> indexCovering(  JCas jCas,  Class<T> type,  Class<S> coveringType)With this signature, the following code is invalid (RevisedSentence is a subclass of Sentence):Map<RevisedWords, Collection<Sentence>> indexRevised                = JCasUtil.indexCovering(                        revised,                        RevisedWords.class,                        RevisedSentence.class);This somewhat prevents users of JCasUtil from benefiting of all the OOP pluses of the UIMA TS.Here would be a signature that would maybe better fit the problem:public static <T extends Annotation, S extends Annotation> Map<T, Collection<S>> indexCovering(  JCas jCas,  Class<? extends T> type,  Class<? extends S> coveringType)
issueID:UIMA-3914
type:Bug
changed files:
texts:Fix DUCC Agent java.lang.NumberFormatException: For input string: "0.0"
Agent throws the exception while parsing output from top to get "current" CPU utilization.
issueID:UIMA-3915
type:Improvement
changed files:
texts:DUCC Orchestrator (OR) should have a Job state between WaitingFor... and Initializing
Presently, the state of a Job is advanced from WaitingForResources to Initializing by the Orchestrator.  However, even though the Resource has been assigned by the Resource Manager the Job Process(es) employing same may not actually yet be Initializing.The Orchestrator should employ an intermediate state (named Assigned) once Resource has been allocated, and then should advance to Initializing once the Job Driver reports accordingly.
issueID:UIMA-3916
type:Bug
changed files:
texts:UIMA-AS parent pom declares dependencies on multiple versions of httpclient
There are 2 declared dependencies on httpclient in the uima-as parent pom. One is for version 4.2.5 and the other 4.2.1. The assembly ends up packaging version 4.2.1 and this is what has been tested. Remove extra dependency on v.4.2.5
issueID:UIMA-3917
type:Bug
changed files:
texts:Update UIMA-AS LICENSE and NOTICE
NOTICE file contains repetitions of This product includes software developed by The Apache SoftwareFoundation as part of the <xxxx> project.Consolidate all of these into one.LICENSE does not mention javax.servlet which is under CDDL v.1 license
issueID:UIMA-3918
type:Improvement
changed files:
texts:DUCC Command Line Interface (CLI) should provide driver_exception_handler_arguments
This would allow for customization of driver_exception_handler w/o the need for user supplied replacement class (e.g. parameterization of the default exception handler supplied by DUCC).
issueID:UIMA-3919
type:Bug
changed files:
texts:UIMA-AS should support deployment with a colocated AMQ broker
Re-enable support for running UIMA-AS service with a co-located (same jvm) AMQ broker. This used to be supported but was disabled when we switched to using java queues for communicating between AEs deployed in the same jvm. There are other scenarios are considered where the use of a co-located broker would be necessary:1) Support for sharing common services in the same JVM2) Integrating UIMA-AS with systems that dont support/use JMS.Modify java sources and dd2spring related scripts/xsl to allow vm://localhost protocol and deployment of colocated broker.
issueID:UIMA-392
type:Bug
changed files:
texts:Eclipse Plugin packaging not working correctly
For some reason our build is now producing an extra level of directories for the Eclipse plugins.  For example the CDE plugin now has a top-level directory named "uimaj-ep-configurator-2.2-incubating-SNAPSHOT.zip" in the final build, which should not be there.I don't know what caused this.  It was working fine for the 2.1.0 build.
issueID:UIMA-3920
type:Bug
changed files:
texts:Ruta: problem with feature expressions of ambiguous types
Ruta: problem with feature expressions of ambiguous types including complete namespaces, alias and variables:TYPESYSTEM TS1;// defines ts1.TokenTYPESYSTEM TS2;// defined ts2.TokenIMPORT ts1.Token FROM TS1 AS T1;DECLARE Target;TYPE T = ts1.Token;// these rules do not work:(ts1.Token{REGEXP(ts1.Token.pos.value, "X.*")}){-> MARK(Target)}; (T{REGEXP(T.pos.value, "X.*")}){-> MARK(Target)}; (T1{REGEXP(T1.pos.value, "X.*")}){-> MARK(Target)};
issueID:UIMA-3921
type:Bug
changed files:
texts:When a JD fails to start (e.g.classpath error) it marks the job as complete
The agent reports that it has an exit code of 1 ... perhaps it could determine that the process never started and give a more serious error.
issueID:UIMA-3922
type:Bug
changed files:
texts:Ruta: MARKFAST with string list
A user reported:Document{->MARKFAST(MyType, { "a", "b", "a b" });ona byields"a b" and "b" but not "a".
issueID:UIMA-3923
type:Bug
changed files:
texts:DUCC Orchestrator (OR) does not immediately advance Job state from Completing to Completed even though process count == 0
Test: 1. submitted job with 101 work items2. eventually, all work itmes completed and Job state -> Completing3. eventaully, process count shows zero and Job state remains Completing4. later, Job state goes to CompletedJob state should immediately go from Completing to Completed when processes count goes to zero
issueID:UIMA-3925
type:Bug
changed files:
texts:Ruta: Comments before package declaration
Comments before the package declaration cause problems.
issueID:UIMA-3926
type:Task
changed files:
texts:Contribution to Ruta: video and german tutorial
A video for installing and getting started with UIMA Ruta and a short tutorial in German.
issueID:UIMA-3927
type:Bug
changed files:
texts:Problem with optional quantifiers and starting rule element annotation
Hi,As the Ruta documentation mentions, "writing rules that contain a first rule element with an optional quantifier is discouraged and will result in ignoring the optional attribute of the quantifier." A solution for overcoming this is to declare a rule element as a starting rule element by adding “@” directly in front of it. Thus, I am using ruta rules likeToken??{REGEXP(Token.posTag.value, "At")} // ArticleToken??{REGEXP(Token.posTag.value, "Aj")} // Adjective@Token{REGEXP(Token.posTag.value, "No")->MARK(Chunk, 1,3)}; // Nounto mark nouns and optional pre-modifiers before them as chunksHowever, the rule seems to match only Adj Noun sequences and not to match input like:anArt|At anAdj|Aj aNoun|NoThanks for looking into this.
issueID:UIMA-3928
type:Bug
changed files:
texts:createExternalResourceDescription() signatures shadowing each other
The method ExternalResourceDescription createExternalResourceDescription(  Class<? extends SharedResourceObject> aInterface,   String aUrl,   Object... aParams)can be invoked if the user actually wanted to call the methodExternalResourceDescription createExternalResourceDescription(  Class<? extends Resource> aInterface,   Object... aParams)E.g.createExternalResourceDescription(        MyResource,        MyResource.PARAM_VALUE,         "myvalue"))Java seems to be smart enough to invoke the correct method, but when calling this from Groovy, it fails:Caught: java.lang.IllegalArgumentException: Parameter arguments have to come in key/value pairs, but found odd number of arguments [3]java.lang.IllegalArgumentException: Parameter arguments have to come in key/value pairs, but found odd number of arguments [3] at org.apache.uima.fit.factory.ConfigurationParameterFactory.ensureParametersComeInPairs(ConfigurationParameterFactory.java:531) at org.apache.uima.fit.factory.ConfigurationParameterFactory.createConfigurationData(ConfigurationParameterFactory.java:374) at org.apache.uima.fit.factory.ExternalResourceFactory.createExternalResourceDescription(ExternalResourceFactory.java:277) at org.apache.uima.fit.factory.ExternalResourceFactory.createExternalResourceDescription(ExternalResourceFactory.java:213)A workaround is currently to cast the first parameter name to Object:createExternalResourceDescription(        MyResource,        (Object) MyResource.PARAM_VALUE,         "myvalue"))
issueID:UIMA-3929
type:Bug
changed files:
texts:DUCC JD process opens admin channel

issueID:UIMA-393
type:Bug
changed files:
texts:ibmUimaToApacheUIMA.sh migration script doesn&#39;t work
The script does not work because it contains a %1 instead of a $1.
issueID:UIMA-3931
type:Improvement
changed files:
texts:Ruta: support direct usage of covered text
Support direct usage of covered text feature. This is maybe already possible out of thebox, but at least some unit test should be added.Person{-> ADD(stringList, Person.coveredText)};
issueID:UIMA-3932
type:Bug
changed files:
texts:Ruta documentation about inlined rules
Ruta documentation about inlined rules is terrible and contains a massive typo:  "If the curly brackets start with the symbol “->”, then the inlined rules are interpreted as some sort of conditions." That's just not correct...
issueID:UIMA-3933
type:Bug
changed files:
texts:DUCC should pass the base logfile name to APs as well as jobs
DUCC sets 2 system properties that let jobs create additional log files next to the DUCC-created console log ... APs should have the same privilege.Since APs may not be Java DUCC could instead set a single environment variable, perhaps DUCC_LOG_BASENAME. Programs would still have to add the PID and suffix.
issueID:UIMA-3934
type:Improvement
changed files:uimaj-tools/src/main/java/org/apache/uima/tools/docanalyzer/AnnotationViewerDialog.java
texts:excess white-space in html version of cas viewer
I recently made use of the html viewer code in the AnnotationViewerDialog class, using the html viewer alternative.  It uses as input a version of the CAS produced by CasToInlineXml (line 445).  If the annotations involved are nested, the result has extra line feeds and lots of extra white space (corresponding to the indenting of the nested xml elements produced by the CasToInlineXml).  The fix is (now) easy since we've recently added a flag to control the indenting.  Change this (and other uses as appropriate) to set the (new) formattedOutput flag of CasToInlineXml to false.
issueID:UIMA-3935
type:Bug
changed files:
texts:stop_sim doesn&#39;t stop the broker
The no-args invocation of stop_sim should stop the DUCC broker after stopping all the daemons
issueID:UIMA-3936
type:Improvement
changed files:
texts:HTML Cas Viewer floods the history list unnecessarily
The html version of the CAS Viewer (as used by the Document Analyzer, if you select html as the format) uses Javascript to display annotations in the right-side pane on mouse-over, and resets this when the mouse moves out of the item on the main pane.The reset is done using the frame's document, via doc.close() and doc.open().   This clears the annotation pane OK, but the open() causes a History record to be created.   This is compounded by the fact that a word may be covered by many annotations, and there's one of these clear actions for each covered annotation.  So if you have 6, moving out causes 6 resets, and 6 additions to the History.  This rapidly make it appear that the "back" button is broken...Use a different reset method to avoid overloading the history list.
issueID:UIMA-3937
type:Bug
changed files:
texts:Fix DUCC Agent division by zero exception
There is a division by zero exception in LinuxProcessMetricsProcessor when calculating CPU time. This only happens right after agent spawns a process and clears while the process is running. Add a safe guard to prevent the division by zero.
issueID:UIMA-3938
type:New Feature
changed files:
texts:Patch with new features for UIMA Ruta&#39;s Check Annotations View
Patch with new features for UIMA Ruta's Check Annotations ViewNew features contained in the patch: The possibility to display feature values directly in the view's tree viewer. The Select Types Dialog offers the possibility to select features for each type. The selected features are shown as subnodes of the related annotation. The possibility to change feature values directly in the view. This can be done through a dialog. A right-click on the feature node opens the dialog. The possibility to change the type of an annotation directly in the view. Also done throught a dialog opened by a right-click on the node. Features are transferred to the gold standard documents. The possibility to transfer annotations of specified types unchecked to the gold standard documents. The selection of these types is done through another dialog which can be opened through the menu.
issueID:UIMA-3939
type:Bug
changed files:
texts:DUCC RM: share count goes negative
When a node leaves because of ping timeout and then returns, the total share count isn't being adjusted correctly on return.  This causes more subtractions than additions and the share count falls negative, rendering the cluster unschedulable.Fix is in NodePool.nodearrive(), be sure to alwasys increment shares in all cases of a node returning.
issueID:UIMA-394
type:Bug
changed files:uimaj-core/src/main/java/org/apache/uima/cas/impl/CASImpl.java
texts:sofa2jcasMap not be consistenly set
While researching the fix for UIMA 386, found that the mechanism for adding entries to sofa2jcasMap was not happening for the case of aCas.getView(somenewsofa).getJCas().  This would cause a duplicate JCas to be added, when there already was one.  As part of the research for fixing this, see if the map can be eliminated (in favor of using the sofa2tcasMap followed by getJCas on that).
issueID:UIMA-3940
type:Improvement
changed files:
texts:DUCC APs should be allowed to have service dependencies
First must make the CLI accept this option.
issueID:UIMA-3941
type:Task
changed files:
texts:DUCC SM Add role_administrator
By popular demand, add redundancy-check "do you really mean what you said" parm for SM CLI/API manipulation of work you do not own: --role_administrator.
issueID:UIMA-3943
type:Bug
changed files:
texts:DUCC fails to run a process if there is a system property ending in "endpoint"
DUCC assumes that system properties ending in "endpoint" are entries in ducc.properties that describe internal communication protocols.  If the user sets such a property than an exception is thrown:org.apache.uima.ducc.common.exception.DuccComponentInitializationException: Endpoint type not specified in component properties. Specify vm, queue, or topic type value for endpoint: gateway
issueID:UIMA-3945
type:Bug
changed files:
texts:DUCC Web Server (WS) takes NPE in DuccHandler
java.lang.NullPointerException at org.apache.uima.ducc.ws.server.DuccHandler.handleDuccServletJobWorkitemsCountData(DuccHandler.java:1030) at org.apache.uima.ducc.ws.server.DuccHandler.handleDuccRequest(DuccHandler.java:4060) at org.apache.uima.ducc.ws.server.DuccHandler.handle(DuccHandler.java:4272) at org.eclipse.jetty.server.handler.HandlerList.handle(HandlerList.java:47) at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:110) at org.eclipse.jetty.server.Server.handle(Server.java:346) at org.eclipse.jetty.server.HttpConnection.handleRequest(HttpConnection.java:589) at org.eclipse.jetty.server.HttpConnection$RequestHandler.headerComplete(HttpConnection.java:1048) at org.eclipse.jetty.http.HttpParser.parseNext(HttpParser.java:601) at org.eclipse.jetty.http.HttpParser.parseAvailable(HttpParser.java:214) at org.eclipse.jetty.server.HttpConnection.handle(HttpConnection.java:411) at org.eclipse.jetty.io.nio.SelectChannelEndPoint.handle(SelectChannelEndPoint.java:535) at org.eclipse.jetty.io.nio.SelectChannelEndPoint$1.run(SelectChannelEndPoint.java:40) at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:529) at java.lang.Thread.run(Thread.java:780)
issueID:UIMA-3947
type:Bug
changed files:
texts:DUCC duccling incorrectly setting gid
ducc_ling is running initgroups but forgot to also setgid to establish the user's primary group.
issueID:UIMA-3948
type:Bug
changed files:
texts:DUCC should enforce AMQ failover on tcp based endpoints
Recent change to enable jms connection recovery on switch failure broke support for http protocol. The code was changed to always wrap user broker URL with failover:(URL). The appears to be only supporting tcp based broker URLs. Modify code to enforce failover for tcp based URL.
issueID:UIMA-3949
type:Improvement
changed files:
texts:DUCC Logging non-ducc components need to append to ducc loggers
Open source things that use log4j are not appending to the ducc component loggers.  During init of the DUCC logging system we need to find these non-ducc loggers and add the correct DUCC component appender, based on which component is booting, so we don't miss messages (e.g. from spring, camel, activemq).
issueID:UIMA-3950
type:Bug
changed files:
texts:UIMA-AS allows multiple calls on defineCasPool() which results in an exception
The UIMA-AS uses a custom thread pool to enable pinning of threads to specific AE instances. This is needed to enforce a design where a thread used to initialize AE instance is also used for calling process() on that instance.The thread pool is plugged in to the jms listener (for the input queue). The pool is configured with a fixed number of threads (=scaleout factor). Due to a bug in the uima-as failover code, a thread (from the pool) was exiting (due to connectivity problem). The problem was replicated by using a bad broker URL on the top level service.Since the thread pool was told to maintain a fixed number of threads, the exit of a thread caused a new thread creation and subsequent attempt to initialize another AE instance which then led to a call to defineCasPool() again. The uima core doesnt allow multiple calls to define cas pool and throws an exception.
issueID:UIMA-3951
type:Bug
changed files:
texts:UIMA-AS parent pom should override default maven-compiler-plugin to enforce use of java 1.6
Add maven-compiler-plugin to uima-as parent pom to override default which does not use java 1.6.
issueID:UIMA-3952
type:Bug
changed files:
texts:Update DUCC to use the latest (2.6.0) versions of UIMA SDK and UIMA-AS
upgrade ducc to use the latest release level (2.6.0) code of UIMA SDK and UIMA-AS
issueID:UIMA-3953
type:Bug
changed files:
texts:getMetaData.cmd has typo in class name

issueID:UIMA-3955
type:Improvement
changed files:
texts:DUCC SM use broker_jmx_port=none to suppress fetch of queue stats from jmx
broker_jmx_port=nnnn is used to tell Service pingers where to find JMX to gather queue statistics.  Sometimes JMX isn't enabled, so we use nnnn='none' to suppress fetch so we don't accidentally interpret jmx failure as ping failure.
issueID:UIMA-3956
type:New Feature
changed files:
texts:Added new Functions-Extension for UIMA RUTA
The attached patch contains an Extension to the UIMA-Ruta Framework.In this Extension i added the following Stringfunctions (in RUTA terminology those that return a String): replaceAll firstCharToUpperCase replaceFirst substring toLowerCase toUpperCaseAdditionally i coded some further useful Functions of the java String library that return booleans: contains endsWith startsWith equals equalsIgnoreCase isEmptyAll of the mentioned Functions were tested and got their own jUnit-test included.I hope it will be accepted and the functionality added in the next release
issueID:UIMA-3957
type:Improvement
changed files:
texts:DUCC Web Server (WS) upgrade to newer versions of opensource code
jquery 1.4.2 -> 2.0.3, license continues as MIT, see http://jquery.com/jquery-ui 1.8.4 -> 1.11.0, license continues as MIT, see http://jqueryui.com/Datatables 1.9.1 -> 1.10.1, license changes from BSD to MIT, see http://www.datatables.net/jgrowl 1.2.6 -> 1.3.0, license continues as MIT, see http://plugins.jquery.com/jgrowl/
issueID:UIMA-3958
type:Bug
changed files:
texts:DUCC Web Server (WS) a logged-in user cannot see a file (job specification) but a logged-out user can!
Seemingly depending on the group permissions of a file, for exmaple the job specification, a logged-out user can see the file in the Job Specification tab because user ducc has access.  Yet when the user logs in to the WS (as other than ducc) the same file contents are not visible.
issueID:UIMA-3959
type:Bug
changed files:
texts:DUCC Web Server (WS) takes NPE in DuccHandlerJsonFormat
22 Jul 2014 21:01:55,161 55855  INFO WS.DuccHandlerJsonFormat - handle     N/A  <null> java.lang.NullPointerExceptionAt:        org.apache.uima.ducc.ws.server.DuccWebUtil.isListable(DuccWebUtil.java:142)        org.apache.uima.ducc.ws.server.DuccWebUtil.isListable(DuccWebUtil.java:135)        org.apache.uima.ducc.ws.server.DuccHandlerJsonFormat.handleServletJsonFormatServicesAaData(DuccHandlerJsonFormat.java:994)        org.apache.uima.ducc.ws.server.DuccHandlerJsonFormat.handleDuccRequest(DuccHandlerJsonFormat.java:2016)        org.apache.uima.ducc.ws.server.DuccHandlerJsonFormat.handle(DuccHandlerJsonFormat.java:2051)        org.eclipse.jetty.server.handler.HandlerList.handle(HandlerList.java:47)        org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:110)        org.eclipse.jetty.server.Server.handle(Server.java:346)        org.eclipse.jetty.server.HttpConnection.handleRequest(HttpConnection.java:589)        org.eclipse.jetty.server.HttpConnection$RequestHandler.headerComplete(HttpConnection.java:1048)        org.eclipse.jetty.http.HttpParser.parseNext(HttpParser.java:601)        org.eclipse.jetty.http.HttpParser.parseAvailable(HttpParser.java:214)        org.eclipse.jetty.server.HttpConnection.handle(HttpConnection.java:411)        org.eclipse.jetty.io.nio.SelectChannelEndPoint.handle(SelectChannelEndPoint.java:535)        org.eclipse.jetty.io.nio.SelectChannelEndPoint$1.run(SelectChannelEndPoint.java:40)        org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:529)        java.lang.Thread.run(Thread.java:780)
issueID:UIMA-396
type:Bug
changed files:uimaj-core/src/main/java/org/apache/uima/cas/Feature.java
uimaj-core/src/main/java/org/apache/uima/cas/Feature.java
texts:Javadoc for Feature.isMultipleReferencesAllowed is incorrect
It says: @return <code>true</code> iff the value type of this feature is primitive, or if it's an array valued feature and has been declared not to allow multiple references.This is backwards.  If the feature is declared not to allow multiple references, then the return value of Feature.isMultipleReferencesAllowed is false.
issueID:UIMA-3961
type:Bug
changed files:
texts:DUCC Web Server (WS) sort on Machines page should be numeric (for most columns)
Fix is to .jsp only by adding class="sorttable_numeric" to classic mode table.
issueID:UIMA-3962
type:Bug
changed files:
texts:DUCC includes a zip file in webserver project
Remove download.zip from webserver/root/opensources/navigation project
issueID:UIMA-3963
type:Bug
changed files:
texts:DUCC Web Server (WS) may show a small but negative estimated init or run time
Estimated time should never result is less than zero!
issueID:UIMA-3964
type:Bug
changed files:
texts:DUCCs UIMA-AS based processes dont terminate gracefully
It looks like DUCC's UIMA-AS based processes dont terminate gracefully when an agent requests a shutdown due to deallocate flag=true. These processes hang while in quiesce mode until the agent kills them hard.Check which thread is blocking the jvm from exiting.
issueID:UIMA-3965
type:Bug
changed files:
texts:DUCC SM race starting independent service
Given 2 or more services, say, A and B, where service A depends on service B, then service B is an independent service.If service A is started, service B is then started by reference if needed.  If then service B is stopped, the reference (incorrectly) attempts to start B confusing state, and leaving service be "stuck" in Stopping state (which is then persisted and B is permanently broken until a manual update of the service meta data is performed).The fix is to bypass reference-starting a service which is marked as "stopped".  Note that this leaves the dependent service A potentially unusable; in this case service B must be manually restarted to get the dependency chain working again.
issueID:UIMA-3967
type:Improvement
changed files:
texts:DUCC SM cannot "undo" manual modification to default ping parameters.
Although it is possible to modify any service registration parameter, it can be difficult to undo an update to one of the pinger-related parameters - i.e. revert to the default.  The ideal operation is simply to delete the modification, not to re-modify the pinger with another value.  The answer is to allow the value of an option under --modify to be 'delete', in which case the SM simply removes it from the service registration.This is implemented only for pinger-related operations.
issueID:UIMA-3968
type:Improvement
changed files:
texts:DUCC SM Put &#39;i was once autostarted&#39; marker into service meta data
When a service dies due to errors and cannot be restarted (because each restart results in error) the SM disables its "autostart" by deleting the autostart flag.We need a mechanism to remember what was once autostarted so that it is easy to find and repair these "once autostared" services after time has passed.
issueID:UIMA-3969
type:New Feature
changed files:uimaj-core/src/main/java/org/apache/uima/cas/impl/CasSerializerSupport.java
uimaj-core/src/main/java/org/apache/uima/resource/metadata/MetaDataObject.java
uimaj-core/src/main/java/org/apache/uima/resource/metadata/impl/MetaDataObject_impl.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/XmiCasSerializer.java
uimaj-core/src/main/java/org/apache/uima/util/XMLizable.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/XmiCasDeserializer.java
uimaj-core/src/main/java/org/apache/uima/internal/util/XmlElementName.java
uimaj-json/src/main/java/org/apache/uima/json/JsonCasSerializer.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/XmiSerializationSharedData.java
texts:Add JSON Serialization for CASs and UIMA Descriptors
Recent trends toward moving things into the cloud motivated me to consider what a JSON serialization of the CAS and descriptor metadata (more particularly, type systems) might look like.I've put up a Wiki page with some of the thoughts so far in this exploration, here:  https://cwiki.apache.org/confluence/display/UIMA/JSON+serialization+for+UIMAI'm also fooling around with a proof-of-concept implementation, based on our current XMI serialization for the CAS, as well as our MetaDataObject_impl serialization for UIMA descriptors, in order to work out the details.  There are additional nits (like how to configure things) not yet worked out.Comments and discussion appreciated; I've put this up as a Jira to record them together - but feel free to use email also for any comments you feel might be better being more ephemeral.
issueID:UIMA-397
type:Bug
changed files:
texts:JSR47Logger_implTest failing with Sun Java 6
If you run the maven install using these java versions, then the default logger created has this property, as evidenced from this print statement you can insert in the code:    System.out.println("defaultLogLevel: " + defaultLogLevel);    System.out.println("rootLogger is set to log messages: " +            ( rootLogger.isLoggable(Level.ALL) ? "ALL, " : "NotALL, ") +             ( rootLogger.isLoggable(Level.FINEST) ? "FINEST, " : "NotFINEST, ") +             ( rootLogger.isLoggable(Level.FINER) ? "FINER, " : "NotFINER, ") +             ( rootLogger.isLoggable(Level.FINE) ? "FINE, " : "NotFINE, ") +             ( rootLogger.isLoggable(Level.CONFIG) ? "CONFIG, " : "NotCONFIG, ") +             ( rootLogger.isLoggable(Level.INFO) ? "INFO, " : "NotINFO, ") +             ( rootLogger.isLoggable(Level.WARNING) ? "WARNING, " : "NotWARNING, ") +             ( rootLogger.isLoggable(Level.SEVERE) ? "SEVERE, " : "NotSEVERE, ") +             ( rootLogger.isLoggable(Level.OFF) ? "OFF, " : "NotOFF, ")); Message produced is:rootLogger is set to log messages: NotALL, NotFINEST, NotFINER, FINE, CONFIG, INFO, WARNING, SEVERE, OFF,For IBM Java 5 message produced is:rootLogger is set to log messages: NotALL, NotFINEST, NotFINER, NotFINE, NotCONFIG, INFO, WARNING, SEVERE, OFF,WARNING It is somewhat hard to run maven with a particular level.  The mvn.bat file (on windows) says to set %JAVA_HOME% to control this but that doesn't work.  You can tell by setting a very siimple PATH pointing only to the mvn bin dir.  The testcases will then fail with a message saying it couldn't find java (because it's not using %JAVA_HOME%).  I worked around this by putting in the maven bin dir a java.bat file which had just the line: %JAVA_HOME%\bin\java.exe %1 %2 %3 %4 %5 %6 %7 %8 %9
issueID:UIMA-3970
type:Improvement
changed files:
texts:DUCC SM Multiple admins for services
Add --administrators registration parameter to allow multiple users to modify services.   --administrators &#91;list of ids&#93;here any id in the list may start, stop, modify, or unregister the service.
issueID:UIMA-3971
type:Improvement
changed files:
texts:UnmarkAll action in Ruta also unmarks DocumentAnnotation
When using the UnmarkAll action in Ruta to unmark all annotations except a few, I unintentionally also deleted the DocumentAnnotation. This leaded to some unexpected behaviour during the execution of some further engines since the DocumentAnnotation wasn't restored correctly. I propose that it should not be allowed to delete the DocumentAnnotation with the UnmarkAll action to prevent the user from this kind of failure.
issueID:UIMA-3972
type:Bug
changed files:
texts:Specifying an invalid scheduling_class causes a NPE
When registering a service or submitting a debug job an invalid scheduling class will produce a NPE with no stacktrace if using the cli scripts.Adding --debug to a service registration produces:Service call failed: java.lang.NullPointerExceptionjava.lang.NullPointerException at org.apache.uima.ducc.common.utils.DuccSchedulerClasses.isPreemptable(DuccSchedulerClasses.java:109) at org.apache.uima.ducc.cli.DuccServiceApi.register(DuccServiceApi.java:414) at org.apache.uima.ducc.cli.DuccServiceApi.Register(DuccServiceApi.java:729) at org.apache.uima.ducc.cli.DuccServiceApi.main(DuccServiceApi.java:856)For a debug job the exception is from the same place.
issueID:UIMA-3973
type:Improvement
changed files:
texts:DUCC Web Server (WS) Services page simplification
The display for Service page column State will be one of the following, accordingly:1. <state>2. <state> with hover = statistics3. <state>+Alert with hover = all that apply of { <statistics> , <error> , "PingerInactive" , "HealthPoor" }where <state> = { Starting, Initializing, Waiting, Available, Stopping, Stopped, Error };and <statistics> = value of SM meta "service-statistics"and <error> = value of SM meta "submit-error""+Alert" will be added whenever:1. SM meta "submit-error" is non-empty2. SM meta "ping-active" is false3. SM meta "ping-active" is true and service_healthy is false
issueID:UIMA-3974
type:Improvement
changed files:
texts:DUCC Web Server (WS) Sorting
Sort numeric fields numerically!
issueID:UIMA-3975
type:Improvement
changed files:
texts:DUCC Web Server (WS) should have System.Broker page(s)
The DUCC WS should monitor the DUCC broker via its JMX port for pertinent current information and make this readily available on one or more web pages.
issueID:UIMA-3977
type:Improvement
changed files:
texts:DUCC Web Server (WS) Service page sort order
Proposed order (by State): <State>+AlertErrorInitializingStartingWaitingAvailableStoppingStopped
issueID:UIMA-3978
type:Bug
changed files:
texts:DUCC Scripting needs some Java System properties
A couple java system properties need to be resolved inside the scripting, in particular so the ducc_ling (C code) executable can be run from platform-specific locations.For now these two java system properties are included during properties resolution within the scripting:   os.name    os.arch
issueID:UIMA-3979
type:Bug
changed files:
texts:Unable to set custom RelativePathResolver in aAdditionalParams when produceAnalysisEngine
When calling function produceAnalysisEngine, as additional parameter HashMap is set where custom RelativePathResolver is inside that HashMap identified by key DataResource.PARAM_RELATIVE_PATH_RESOLVERThat custom RelativePathResolver is never used after that, as in ResourceManager_impl class, on registerResource function, this parameter is discarded here:Map<String, Object> initParams = (aResourceInitParams == null) ? new HashMap<String, Object>() : new HashMap<String, Object>(aResourceInitParams);initParams.put(DataResource.PARAM_RELATIVE_PATH_RESOLVER, getRelativePathResolver());
issueID:UIMA-398
type:Bug
changed files:
texts:test case intermittently fails running Java 6 - with a hang: uimaj-core, org.apache.uima.analysis_engine.impl.MultiprocessingAnalysisEngine_implTest
The failure is intermittent.  It fails the first time running (for me) from a reboot, but runs after that.  The failure occurs in the test where it does a threads&#91;i&#93;.join(); and happens when i = 0.  I found this out by changing the join() to join(10000), and then inserting:        if (threads&#91;i&#93;.isAlive()) {          System.err.println("timeout waiting for thread to complete " + i);          fail("timeout waiting for thread to complete " + i);        }
issueID:UIMA-3980
type:Bug
changed files:
texts:WS displays the unused (but started) DbManager
Should not start DB daemon or show it on ducc-mon
issueID:UIMA-3983
type:Bug
changed files:
texts:DUCC RM Prediction code mishandled
RM Prediction is being ignored.  Apparently because of a bug introduced with svn commit 1509430.The bug includes code that sets the job cap at largest value if prediction returns "no more processes needed".  The fix does minor cleanup and reverts to using the currently assigned resources when prediction returns 0.
issueID:UIMA-3984
type:Improvement
changed files:
texts:selectCovered documentation does not mention that covering annotation is never part of the result

issueID:UIMA-3985
type:Bug
changed files:
texts:Incorrect use of @Override
There are 2 instance in AnalysisEngineDescription_implTest which have code which declares an @Override on a method signature inherited from a superinterface (not a superclass). The Java Language Spec ( http://docs.oracle.com/javase/specs/jls/se5.0/html/interfaces.html#9.6.1.4 ) says this will cause a compile-time error to do this.  For some reason, this hasn't been observed as an error, until today, when Eclipse started flagging it as one.  The fix is simple - remove the @Override.
issueID:UIMA-3986
type:Bug
changed files:
texts:DUCC Web Server (WS) Service Details summary line not updated after auto- or button-refresh

issueID:UIMA-3987
type:Improvement
changed files:
texts:DUCC Web Server (WS) Services to display Start Mode
Start Mode: Immediate when autostart = trueReference when autostart = false and reference != falseManual when autostart = false and reference = falsedefault is Reference (when neither flag is present)Also show disabled, but only when set.
issueID:UIMA-3988
type:Improvement
changed files:
texts:DUCC SM: better stop / stop control and error handling.
Stopping a service manually or because of error should not lose the "autostart" flag, and should not require a new "start" to remove the "stopped" state.  Manual stop/start of SM should not lose reference-started state.CLI is slightly reworked to introduce "enable" and "disable" to handle errors without changing "autostart".  Also exposes to the CLI functions to permit seamless owner or administrator change of service from manually managed, reference-start/stop, or autostart.
issueID:UIMA-3989
type:Improvement
changed files:
texts:DUCC Web Server (WS) Services page Max Records filter not very useful...
Provide better filtering for Services page.  For example, filter by State +/- Alerts.
issueID:UIMA-399
type:New Feature
changed files:
texts:Add to website / wiki / ? community supporting info for components that plug into UIMA
Augment website and/or wiki to include new sections holding links to uima-compilant annotator parts.  Allow for both "certified" (by the community) and "raw" references.  Allow user comments, sorting, faceted search, etc.  Would be good to support:  community ratings (numeric scale) , any performance specs, frequency of downloads / downloads by time), review / feedback from users.Some other kinds of links:  Links to other consolidators of NLP tooling:  (e.g. http://www.alias-i.com/lingpipe/web/competition.html), other component repositories, etc.If it makes sense, try and use infrastructure for this kind of thing developed by others, rather than roll your own - for instance, see http://www.eclipseplugincentral.com
issueID:UIMA-3991
type:Improvement
changed files:
texts:add top level license/notice to SVN for build/tags
SVN is supposed to have a license/notice file at an appropriate place.  For the uima/build/trunk, these are located in that directory.  For the uima/build/tags, these are missing.  Copy the license/notice from uima/build/trunk to uima/build/tags.
issueID:UIMA-3992
type:Improvement
changed files:
texts:test case for JCasHashMap multi-threaded not reliable
There is a test in the JCasHashMapTest which runs multiple threads, and depends on sub threads running ahead of the main thread, but it uses sleep delays to attempt to achieve that. This is not reliable, in case the whole Java process is pre-empted for longer than the longer sleep.  Change this to use, in addition, thread priorities - making the main thread have a lower priority than the sub-threads, so if the wait times are both expired, still the sub-thread runs before the main test thread.
issueID:UIMA-3993
type:Improvement
changed files:
texts:DUCC Web Server (WS) temporary column selection for select pages in scroll mode
Enable temporary column selection when preference is scroll mode for jobs, reservations and services pages.
issueID:UIMA-3994
type:Bug
changed files:
texts:Apache Demo 1.1.0
uima-ducc-demo for 1.1.0, various fix-ups
issueID:UIMA-3995
type:Bug
changed files:
texts:Fix compiler warnings in 1.1.0
Make elipse happy with java compiler - get rid of yellow triangles!
issueID:UIMA-3996
type:New Feature
changed files:
texts:Ruta: Add option to create classpath-compatible jars of Ruta projects
Ruta: Add option to create classpath-compatible jars of Ruta projects.The problem is right now that the resources are not in the root of the jar, but in the folders script/descriptor/resources. Thus, loading them from classpath from within the jar will fail. The procedure essentially has to put the files/packages in the root of the jar.
issueID:UIMA-3997
type:Task
changed files:
texts:Ruta: update dependencies/versions
Ruta: update dependencies/versions, e.g., parent of update site
issueID:UIMA-3998
type:Bug
changed files:
texts:DUCC Web Server (WS) login attempts yield message: $ is undefined
Add to login.jsp<%@ include file="$imports.jsp" %>
issueID:UIMA-3999
type:Bug
changed files:
texts:DUCC Web Server (WS) Services page State hover when meta.ping-active == false ...
On the Services page, for the case (State==Available || State == Waiting) && (meta.ping-active==false) the State hover should be: The pinger is not active
issueID:UIMA-4
type:Task
changed files:
texts:Set svn:eol-style and other flags on appropriate files
Construct an appropriate shell script, and run it to check the eol-style and keyword and mime-type for files in SVN.  For test files, check that eol-style is LF.  For normal sources, check eol-style is "native".Suggest we have an apache-tools project (under top level, no need for branches / tags?) to hold these kinds of support tools -  or is there a better place for these?
issueID:UIMA-40
type:Bug
changed files:uimaj-tools/src/main/java/org/apache/uima/tools/viewer/CasAnnotationViewer.java
texts:CasAnnotationViewer doesn&#39;t support new primitive types
If an annotation has a feature of type byte, boolean, short, long, or double; clicking on this annotation in the text view causes an exception to be printed to the console and nothing to be displayed in the annotation details tree.
issueID:UIMA-400
type:Bug
changed files:
texts:Fix Eclipse plugin
Manifest for org.apache.uima.runtime plugin in UIMA 2.1 release is not correct: lib/uima-jcas-builtin-types.jar is listed in manifest, but not present in plugin. uima-document-annotation.jar is in distribution, but not in plugin. Exported packages are listed twice, with Export-Package and with Provide-Package. But Provide-Package has been deprecated since Eclipse 3.1. Exported package org.apache.uima.tttypesystem does not exist in plugin, was removed in UIMA-64. "Eclipse-BuddyPolicy: registered" is written twice.
issueID:UIMA-4000
type:Bug
changed files:
texts:DUCC Web Server (WS) log pager not 100% reliable
Pager is not working.For example: http://myhost:42133/service.details.jsp?name=CUSTOM:structuredterm -> History tab-> click on namehttp://myhost:42133/file.pager.jsp?fname=/home/eae/ducc/logs/S-247/services/ping/bin/dd: reading `/home/eae/ducc/logs/S-247/services/ping': Is a directory 0+0 records in 0+0 records out 0 bytes (0 B) copied, 9.2063e-05 s, 0.0 kB/s /bin/dd
issueID:UIMA-4001
type:Task
changed files:
texts:Ruta: jira report for fix version instead of component
The generated jira report should maybe depend on "fix version" alone. Investigate if there might occur problems if an issue of another component uses an additional ruta "fix version" in order to point out fixed functionality of the ruta dependencies.
issueID:UIMA-4002
type:Bug
changed files:uimaj-core/src/main/java/org/apache/uima/internal/util/rb_trees/Int2IntRBT.java
texts:flush method of Int2IntRBT not clearing cache of lastNodeGotten
The Int2IntRBT (a map from int to int) has a variable which remembers the last node gotten, and attempts to optimize lookups for common cases.  When a flush() happens, this needs to be reset.
issueID:UIMA-4003
type:Improvement
changed files:uimaj-core/src/main/java/org/apache/uima/internal/util/IntBitSet.java
unused-saved/src/org/apache/uima/internal/util/Int2IntHashMap.java
uimaj-core/src/main/java/org/apache/uima/internal/util/IntHashSet.java
uimaj-core/src/main/java/org/apache/uima/internal/util/PositiveIntSet.java
texts:add alternative int - int maps, and int sets for better space/time performance
int - int maps and int sets are implemented in UIMA as either red-black trees (size = 5 words (4 words for sets) + 1 bit per item, search time = log 2 size (binary search), insert /removal can cause rebalancing tree), or as intVectors (like ArrayList<Integers> but doesn't wrap ints as Integers).For int - int maps, add a hash version (loses key "ordering"), which takes 3 - 6 words per item (avg 4.5 words - slightly smaller), and has O(1) performance (based on existing JCasHashMap impl, but without concurrency support).For int sets, add 2 styles: one based on the same hash map (space = 1.5 to 3 words per item vs 4 words), the other based on BitSets.  The BitSet one would be faster, would have a conventional key ordering, and would be smaller, if the max int stored < 128 * number of items stored.  (This is often the case in uses where it is used to track Feature Structure addresses).Finally, add one adaptable int set that is usually is implemented as a BitSet, but if the items being stored are such that the size would be significantly larger than the IntHashSet implementation, switch to that alternative representation.
issueID:UIMA-4004
type:Improvement
changed files:uimaj-core/src/main/java/org/apache/uima/cas/impl/XmiSerializationSharedData.java
texts:Switch to using int2int maps in XmiSerializationSharedData
The XmiSerializationSharedData structure is used to record information when deserializing so that subsequent serialization can be done with identical xmiIds, as well as recording which non-shared arrays/lists are encoded as embedded values. Change the data structures used for this to use Int2IntHashMap, and change the way values are store to be ints, not Strings.  This should improve space and time for Xmi and Json serialization.
issueID:UIMA-4005
type:New Feature
changed files:
texts:Ruta: prototypical implementation of FST
An initial implementation of an FST block for UIMA Ruta similar to the default JAPE implementation.
issueID:UIMA-4006
type:Bug
changed files:
texts:DUCC Web Server (WS) NPE in DuccHandlerClassic
05 Sep 2014 15:10:47,433 29193 ERROR WS.DuccHandlerClassic - handle     N/Ajava.lang.NullPointerException        at org.apache.uima.ducc.ws.server.DuccWebUtil.isListable(DuccWebUtil.java:148)        at org.apache.uima.ducc.ws.server.DuccWebUtil.isListable(DuccWebUtil.java:131)        at org.apache.uima.ducc.ws.server.DuccHandlerClassic.handleServletClassicServices(DuccHandlerClassic.java:855)        at org.apache.uima.ducc.ws.server.DuccHandlerClassic.handleDuccRequest(DuccHandlerClassic.java:1949)        at org.apache.uima.ducc.ws.server.DuccHandlerClassic.handle(DuccHandlerClassic.java:1981)        at org.eclipse.jetty.server.handler.HandlerList.handle(HandlerList.java:47)        at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:110)        at org.eclipse.jetty.server.Server.handle(Server.java:346)        at org.eclipse.jetty.server.HttpConnection.handleRequest(HttpConnection.java:589)        at org.eclipse.jetty.server.HttpConnection$RequestHandler.headerComplete(HttpConnection.java:1048)
issueID:UIMA-4007
type:Improvement
changed files:
texts:DUCC Web Server (WS) display of Services State and Start State w/hovers
1. How is State value calculated? case 1) no alert:  value = meta.service-state case 2) alert:  value = meta.service-state+"Alert" alert in effect when:   case 1) meta.submit-error is non-empty  case 2) (meta.service-healthy is false or meta.service-alive is false) and meta.ping-active is true and state is { Available, Starting, Waiting, Initializing, Stopped }                                        There should be no alert for Initializing, Starting, and Stopped as a function of service-healthy because it is a function of the pinger, which can only be running, or trying to run, in Available and Waiting.Discussion): The cases Starting, Initializing, and Stopped are covered by cases 1 and/or the StartMode.disabled flag.  Because the pinger is not running service-healthy is undefined.   case 3) meta.ping_active is false and state is { Available, Waiting }2. How is State hover calculated? hover = "" if meta.service-state == "Waiting"  && meta.ping-active is true hover += "Pinger is starting"          if meta.service-state == "Waiting"  && meta.ping-active is false hover += "Pinger is unable to start" (or your preferred language)          Discussion: Waiting+false can happen if the service is ok but the pinger is broken.  We don't want to stop the service processes for lots of reason but we want it clear that the pinger is not coming back without manual intervention. if meta.service-state == "Available"  && meta.ping-active is false  hover += "Pinger is not active" if(meta.submit-error is non-empty) hover += meta.submit-error if(meta.service-statistics is non-empty) hover += meta.service-statistics          if meta.service-state in (Available, Waiting) && meta.service-healthy is false && meta.ping-active is true hover += "Pinger reports poor health" (or your preferred language)         if meta.service-state in (Available, Waiting) && meta.service-alive is false && meta.ping-active is true hover += "Service not responding to pinger" (or your preferred language)3. How is Start value calculated? Answer: according to the table given by Jim/eae.  public StartState getStartState() {   StartState retVal = StartState.Unknown;   if(isAutostart()) {    retVal = StartState.Autostart;   }   else {    int ordinality = getStateOrdinality();    if(ordinality > 3) {     if(isReference()) {      retVal = StartState.Reference;     }     else {      retVal = StartState.Manual;     }    }    else if(ordinality < 4) {     retVal = StartState.Stopped;    }   }   return retVal;  } A second line comprising "Disabled" is added whenever meta.enabled is false4. How is Start hover calculated? A hover is added over "Disabled" whenever: if(meta.disable-reason is non-empty)  hover  =  meta.disable-reason
issueID:UIMA-4008
type:Bug
changed files:
texts:DUCC Web Server (WS) Machines page sort is unreliable
Web Server does a "pre-calculated" sort of Machines which is sometimes incorrect and does not get corrected for long intervals.Change logic to created a new sorted collection of Machines no more than once per minute, dirven by receipt of Node Metrics publication.
issueID:UIMA-4009
type:Improvement
changed files:
texts:DUCC Web Server (WS) transform Services page "Start" buttons into "Enable" buttons
Justification:Employing --start may have the undesirable effect of unintentionally putting the target Service into Manual start mode when in fact the user intended it to be Reference started.
issueID:UIMA-401
type:Improvement
changed files:
texts:Make DocBook build work out of the box in Eclipse
At some point, the DocBook build lost the ability to run out of the box in Eclipse: you need to read in a properties file.  Add the properties as defaults to the build file itself, so it again works directly.  Defaults can be overridden from properties file if desired.
issueID:UIMA-4010
type:Improvement
changed files:
texts:DUCC Web Server (WS) universal pw login access when runmode == Test
To facilitate WS testing, we already allow for specification in ducc.properties of ducc.runmode = TestThis allows for submission of work via the CLI as another user by setting environment variable USER=<some-user>.=====This Jira will now allow for specification in ducc.properties ofducc.runmode.pw = <some-pw>If both (ducc.runmode = Test) and (ducc.runmode.pw = <some-pw>) are specified in ducc.properties then providing that non-blank <some-pw> will allow successful login to the Web Server for any userid.Note that the default is "Production" when ducc.runmode has not been specified in ducc.properties.
issueID:UIMA-4011
type:Bug
changed files:
texts:DUCC Common - DuccPropertiesResolver should not issue info message for loading private properties
DuccPropertiesResolver is shared by CLI and WS.  It should not issue info messages when they should in fact be debug messages.In particular, the loading of the ducc.private.properties file is best classified as a debugging type message.  And an error message is issued if something goes wrong.
issueID:UIMA-4012
type:Improvement
changed files:uimaj-core/src/main/java/org/apache/uima/resource/impl/ResourceManager_impl.java
texts:reduce sync contention (observed)
one user reported seeing some sync lock contention in highly parallel environments, e.g. 64 or more concurrent threads, in ResourceManager_impl that went away if the lock wasn't acquired if not needed.  Implement that to reduce lock contention
issueID:UIMA-4013
type:Improvement
changed files:uimaj-core/src/main/java/org/apache/uima/flow/impl/FixedFlowController.java
texts:Reduce unneeded fixed flow controller sync contention
The Fixed Flow Controller is designed to allow one instance to be used by multiple copies of a UIMA pipeline, initialized from the same context.   In this case, only one initialize call is done; the others are no-ops.  The instance contains one update-able ArrayList - the list of delegates.  This array is normally only "read", but there are two defined interfaces to allow dynamically altering it (addAnalysisEngines, and removeAnalysisEngines). The current impl of this is a synchronized list.  For the 99.99% of cases (reading), this sync is not necessary, and causes some observable sync contention.  Change this to a non-sync'ed "CopyOnWrite" implementation, to avoid this contention.  The downside is that current Flow objects in use while after this call occurs will not see the update, but new ones will. This is probably a good thing, because it seems that incorrect flows might occur if this was changed while flows were in-progress.  The documentation currently says these methods are not currently called because UIMA doesn't support dynamically adding or removing analysis engines to/from an aggregate.
issueID:UIMA-4014
type:Bug
changed files:
texts:DUCC Web Server (WS) log pager page size of 4096 bytes is too small
1. make default page size larger than 4096 bytes, perhaps 16*4096 bytes2. make page size site configurable via ducc.properties
issueID:UIMA-4015
type:Bug
changed files:uimaj-core/src/main/java/org/apache/uima/resource/metadata/impl/MetaDataObject_impl.java
texts:logic hole in obscure case in MetaDataObject_impl
While reviewing the changes in MetaDataObject_impl, I noticed a path in writePrimitiveValue, which wraps the primitive value with an "element-kind", like <element-kind>value</element-kind>.  For JSON serialization, this is { "element-kind" : value }.  But for JSON this wrapping is not done if the value is a string.  There's a logic bug in this case (which may not occur in practice?) - the skipping of the writing of the closing } is not done, needs fixing.
issueID:UIMA-4016
type:Test
changed files:
texts:add tests for toJSON methods of JSONizable
Add test cases for JSON serialization of Descriptors, especially Type System Descriptions, i.e. the toJSON methods of JSONizable
issueID:UIMA-4017
type:Bug
changed files:uimaj-core/src/main/java/org/apache/uima/cas/impl/CASImpl.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/TypeSystemImpl.java
texts:plug maybe theoretical hole in setting up type systems
in some settings, we've seen strange occasional errors that might be caused by concurrent initialization of the built-in types.   Improve the bit of code that prevents this by making it work across multiple threads..
issueID:UIMA-4018
type:Improvement
changed files:
texts:DUCC Web Server (WS) javascript
Move recusive call in timed-loop to end.
issueID:UIMA-4019
type:Question
changed files:
texts:It takes a long time for the sendCAS(cas) method to send a cas to the cas processor, when the cas processor is fast, then the sendCAS method is bottleneck.
I have a CollectionReader, a Cas Processor and a Cas Consumer, it takes 1ms for CollectionReader to initialize a cas, 5ms for Cas Processor to analyze, and 1ms for Cas Consumer to consume the cas.it seems that I can deploy 5 instances of cas processor to obtain 5 times speed.but when i did this, it didn't work like that.And I found that it took a long time for the sendCAS(cas) method to send a cas from CollectionReader to Cas Processor.how can I solve this problem?many thanks.
issueID:UIMA-402
type:Bug
changed files:uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/MultiPageEditor.java
uimaj-core/src/main/java/org/apache/uima/util/CasCreationUtils.java
uimaj-core/src/main/java/org/apache/uima/util/CasCreationUtils.java
texts:Adding Remote SOAP AE to Aggregate in CDE causes validation error
User bug report:I came cross a problem with org.apache.uima.desceditor.2.1.0.incubating-hotfix-1 when porting my UIMA programs from the ibm 2.0.0 to apache uima.To make an aggregate AE, I added a remote Soap AE service using the "Add Remote" function of the CDE, then I got error message:"The Resource Factory foes not know how to create a resource of class org.apache.uima.resource.Resource from the given ResourceSpecifier. (Descriptor: file_path...)"The descriptor passed is a very simple Soap service descriptor. And when I tried it with UIMA Document Analyzer tool, it worked well. Just the CDE keeps throwing this error message. It didn't happen either with the old CDE.
issueID:UIMA-4020
type:Task
changed files:uimaj-core/src/main/java/org/apache/uima/cas/impl/CasSerializerSupport.java
uimaj-core/src/main/java/org/apache/uima/resource/metadata/impl/MetaDataObjectSerializer_indent.java
uimaj-core/src/main/java/org/apache/uima/resource/metadata/MetaDataObject.java
uimaj-core/src/main/java/org/apache/uima/resource/metadata/impl/FsIndexKeyDescription_impl.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/XmiCasSerializer.java
uimaj-core/src/main/java/org/apache/uima/resource/metadata/impl/MetaDataObject_impl.java
uimaj-core/src/main/java/org/apache/uima/resource/metadata/impl/MetaDataObjectSerializer_plain.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/impl/TypeOrFeature_impl.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/metadata/impl/AnalysisEngineMetaData_impl.java
uimaj-core/src/main/java/org/apache/uima/resource/metadata/impl/TypePriorities_impl.java
uimaj-core/src/main/java/org/apache/uima/resource/metadata/impl/ConfigurationParameterSettings_impl.java
uimaj-core/src/main/java/org/apache/uima/resource/metadata/impl/ResourceManagerConfiguration_impl.java
uimaj-core/src/main/java/org/apache/uima/resource/metadata/impl/Import_impl.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/XmiSerializationSharedData.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/impl/AnalysisEngineDescription_impl.java
texts:extract JSON support from core sdk into addon, to avoid dependence on Jackson Jar
The current embedded JSON support makes the core UIMA SDK have a dependency in the Jackson core jar.  Move the JSON support to a separate project, and restructure things so there's no dependency in the core on JSON things.
issueID:UIMA-4021
type:Bug
changed files:
texts:Ruta: problem with conjunctive rule elements with feature matches
A user reported that there is a problem with conjunctive rule elements with features matches that follow some rule element. An example:DECLARE Annotation Token (STRING posTag, STRING mood, STRING tense);"Peter"{-> CREATE(Token, "posTag" = "noun")} "did"{-> CREATE(Token, "posTag" = "verb", "mood" = "p", "tense" = "p")}  "something";Token.posTag == "noun" ( Token.posTag == "verb" & Token.mood=="p" & Token.tense=="p" );
issueID:UIMA-4022
type:Bug
changed files:
texts:Ruta: Inside/out and right-to-left matching of conjunctive rule elements
Ruta: Inside/out and right-to-left matching of conjunctive rule elements does not work correctly. A simple test was already added to ConjunctiveRuleElementTest. Probably, the sidestep is not considered.
issueID:UIMA-4023
type:Task
changed files:
texts:New CLI / API tests
Create more comprehensive CLI / API tests.
issueID:UIMA-4024
type:Improvement
changed files:uimaj-json/src/main/java/org/apache/uima/json/JsonCasSerializer.java
uimaj-json/src/main/java/org/apache/uima/json/JsonMetaDataSerializer.java
uimaj-json/src/main/java/org/apache/uima/json/impl/JsonContentHandlerJacksonWrapper.java
uimaj-json/src/main/java/org/apache/uima/json/impl/MetaDataObjectSerializer_json.java
texts:improve packaging of JSON support in uimaj
Based on good suggestions from Richard, change the packaging for the JSON support as follows:1) Move its package / code to the main uimaj node in svn.2) delete the uimaj-json project in addons3) make a profile that is enabled by default to include the uimaj-json artifact in the uimaj build, both to build and to include in the binary assembly (with the jackson-core jar).  4) document updates, including how to exclude uimaj-json from the build and the binaries, if wanted.
issueID:UIMA-4025
type:Bug
changed files:
texts:Ruta&#39;s HtmlConverter does not unescape all special HTML characters
Ruta's HtmlConverter does not unescape all special HTML characters. For example, "&sup2;" or "&middot;" are not unescaped.A patch is submitted!
issueID:UIMA-4026
type:Bug
changed files:
texts:DUCC Web Server (WS) Init Fails list of links should be absolute (e.g. prefixed with "/") rather than relative to the servlet
When clicking on the underlined number in the Init Fails column on the Jobs page, a list of clickable file names is displayed to enable viewing of individual log files.  The underlying links are incorrectly generated by the Web Server yielding a blank page when clicked.
issueID:UIMA-4028
type:Improvement
changed files:
texts:UIMAJ Json - improve type hierarchy serialization
One of the main uses of supertype information is to allow iterating over types and their subtypes.  This requires some restructuring of the information serialized because the direction is reverse (subtype -> supertype) from the expected use pattern.  Investigate reversing the serialized type info.  Also, consider having these names be the name-space style names, instead of the fully-qualified names, for consistency.
issueID:UIMA-4029
type:Improvement
changed files:
texts:DUCC Web Server (WS) Services page should call out "ping-only" services
Display of class is not useful for ping-only services, so display "ping-only" instead.
issueID:UIMA-403
type:Bug
changed files:
texts:XCASWriter and XmiWriter are not handling  XML special characters
Both XCAS and XMI serialization are not dealing with XML special characters when writing out string arrays and lists.
issueID:UIMA-4030
type:Bug
changed files:
texts:DUCC ping-only services incorrectly cleaning up on stop
When stopping ping-only service must remove its instance from the records and signal the state machine.  This logic got accidentally removed while cleaning up the start state gorp a few weeks ago.
issueID:UIMA-4031
type:Bug
changed files:uimaj-core/src/main/java/org/apache/uima/cas/impl/CASImpl.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/TypeSystemImpl.java
texts:type system initialization of built-in arrays has wrong supertype
While working Json serialization, I noticed an unexpected listing of subtype information which was eventually traced to the built-in array types having a wrong supertype.  This is due to a bad initialization ordering - the part which sets up the supertype for the built-in array types was depending on some initialization which hadn't happened yet.Fix by moving the initialization done later into the main type system setup code.  I verified that via adding a test case to TypeSystemTest that this is a very old error - it existed in the code back in 2008 while still in the incubator - in 2.2.1-incubating release.
issueID:UIMA-4035
type:Bug
changed files:
texts:DUCC Web Server (WS) remove extraneous <> from Performance tab display
See summary.
issueID:UIMA-4036
type:Bug
changed files:
texts:Ruta: report error for ambiguous type alias
Ruta: report error for ambiguous type aliasThe user should be informed if the chosen alias will cause problems, e.g., if an imported type is aliased with T1 in a unit test that includes T1,2,3 types.
issueID:UIMA-4037
type:Bug
changed files:
texts:Update Ducc pom to the latest uima parent pom v10
Upgrade ducc poms to the latest uima parent pom v 10
issueID:UIMA-4038
type:Bug
changed files:
texts:Change DUCC release version from 1.0.1-SNAPSHOT to 1.1.0-SNAPSHOT
Fix version for the upcoming 1.1.0 release. All current poms use 1.0.1 instead of 1.1.0
issueID:UIMA-4039
type:Bug
changed files:
texts:Add new section to DUCC release notes to describe what is new in the release
Modify release notes to describe what is new in the DUCC 1.1.0 release.
issueID:UIMA-404
type:Bug
changed files:uimaj-tools/src/main/java/org/apache/uima/tools/cvd/MainFrame.java
texts:try to cast NoClassDefFoundError to Exception
Exception in thread "AWT-EventQueue-0" java.lang.ClassCastException: java.lang.NoClassDefFoundError incompatible with java.lang.Exception at org.apache.uima.tools.cvd.MainFrame.handleException(MainFrame.java:1759) at org.apache.uima.tools.cvd.MainFrame.handleException(MainFrame.java:1749)
issueID:UIMA-4040
type:Bug
changed files:
texts:Change jira version in DUCC parent pom for release 1.1.0
Change jira version to create report for release 1.1.0
issueID:UIMA-4041
type:Bug
changed files:
texts:A few files recently added to DUCC transport project are missing Apache headers
Two class files are missing apache headers: IDbComponentProperties and DbComponentProperties. Maven RAT plugin fails during release builds
issueID:UIMA-4042
type:Bug
changed files:
texts:Remove UIMA LICENSE and NOTICE from DUCC&#39;s apache-uima folder
DUCC includes UIMA NOTICE and LICENSE info under apache-uima folder. All legal info is in DUCCs NOTICE and LICENSE file. No need to duplicate.
issueID:UIMA-4043
type:Bug
changed files:
texts:Restore the unused but useful submitter_pid_at_host property for jobs

issueID:UIMA-4045
type:Bug
changed files:
texts:Ruta: problem with reinitializing type variables in additional scripts
Ruta: problem with reinitializing type variables in additional scripts.The dummy object as value is replaced by the name of the type, thus the "casting" in the environment is skipped.
issueID:UIMA-4046
type:Bug
changed files:
texts:Ruta: strict import problem with declared type in additional scripts
Ruta: strict import problem with declared type in additional scripts. The types are not initialized in additional script modules thus the missing mapping in the namespaces
issueID:UIMA-4047
type:Bug
changed files:
texts:Ruta: generated typesystems contain duplicate entries
Ruta: generated typesystems contain duplicate entries
issueID:UIMA-4048
type:Task
changed files:
texts:Clean up docs for release.

issueID:UIMA-4049
type:Bug
changed files:
texts:The curious case of the zombie annotation
When annotations are removed from indexes, sometimes they come back... the following test case shows how an annotation is removed but still present when iterating over the index later.    @Test    public void testForZombies() throws Exception    {        // No zombie here        int[] offsets1 = { 0, 4, 5, 11, 12, 21, 22, 25, 26, 29, 30, 35, 36, 40, 41, 50, 51, 60, 61,                64, 64, 65 };        testForZombies("Dies flößte Friedrich II. für seine neue Eroberung Besorgnis ein.", offsets1);                // Zombie hiding in here        int[] offsets2 = { 0, 3, 4, 7, 8, 13, 14, 18, 19, 22, 23, 33, 34, 35 };        testForZombies("Ich bin Franz III. von Hammerfels !", offsets2);    }    public void testForZombies(String aText, int[] aOffsets) throws Exception    {        // Init some dictionaries we ues        Set<String> names = new HashSet<String>();        names.add("Friedrich");        names.add("Franz");        Set<String> suffix = new HashSet<String>();        suffix.add("II.");        suffix.add("III.");        // Set up type system        TypeSystemDescription tsd = new TypeSystemDescription_impl();        tsd.addType("Token", "", CAS.TYPE_NAME_ANNOTATION);                // Create CAS        CAS jcas = CasCreationUtils.createCas(tsd, null, null);        jcas.setDocumentText(aText);                Type tokenType = jcas.getTypeSystem().getType("Token");        Feature beginFeature = tokenType.getFeatureByBaseName("begin");                // Create tokens in CAS        for (int i = 0; i < aOffsets.length; i += 2) {            jcas.addFsToIndexes(jcas.createAnnotation(tokenType, aOffsets[i], aOffsets[i+1]));        }                // List the tokens in the CAS        for (AnnotationFS token : jcas.getAnnotationIndex(tokenType)) {            System.out.printf("Starting with %s%n", token.getCoveredText());        }        // Merge some tokens, in particular "Franz" "III." -> "Franz III." and "Friedrich" "II."        // into "Friedrich II."        AnnotationFS previous = null;        List<AnnotationFS> toDelete = new ArrayList<>();        for (AnnotationFS token : jcas.getAnnotationIndex(tokenType)) {            if (previous != null && names.contains(previous.getCoveredText())                    && suffix.contains(token.getCoveredText())) {                token.setIntValue(beginFeature, previous.getBegin());                toDelete.add(previous);            }            previous = token;        }        // Remove the no longer necessary tokens ("Friedrich" and "Franz"), since we expanded the        // following tokens "III." and "II." to include their text        Set<String> removedWords = new HashSet<String>();        for (AnnotationFS token : toDelete) {            System.out.printf("Removing %s%n", token.getCoveredText());            removedWords.add(token.getCoveredText());            jcas.removeFsFromIndexes(token);        }        // Check if the tokens that we wanted to remove are really gone        for (AnnotationFS token : jcas.getAnnotationIndex(tokenType)) {            System.out.printf("Remaining %s%n", token.getCoveredText());            if (removedWords.contains(token.getCoveredText())) {               org.junit.Assert.fail("I saw a zombie!!!");            }        }    }
issueID:UIMA-405
type:Improvement
changed files:
texts:Migrate Windows build to msvc 8

issueID:UIMA-4050
type:Bug
changed files:
texts:Update DUCC README and RELEASE_NOTES for 1.1.0 Release
In README add a note that DUCC should be built with either java 1.6 or 1.7. In RELEASE_NOTES mention in limitations that the memory bloat has been observed on Firefox only
issueID:UIMA-4051
type:Bug
changed files:
texts:Revert DUCC poms to 1.1.0-SNAPSHOT
Prepare for the next RC
issueID:UIMA-4052
type:Bug
changed files:
texts:Fix DUCC LICENSE and NOTICE files
More cleanup needed. Source LICENSE repeats the same MIT license for multiple products. Combine all into one. Also in source LICENSE remove reference to slf4j. Not part of source release.Binary LICENSE missing mentions of Public Domain images. These were removed some time ago, but now I reconsidered and adding these in. In Binary, fixed truncated CC-BY-SA-2.0 license. Also, reformatted licenses with long lines.
issueID:UIMA-4053
type:New Feature
changed files:uimaj-core/src/main/java/org/apache/uima/internal/util/IntBitSet.java
uimaj-core/src/main/java/org/apache/uima/internal/util/IntHashSet.java
uimaj-core/src/main/java/org/apache/uima/internal/util/PositiveIntSet.java
texts:add remove method to PositiveIntSet
for next iteration of JSON serialization, I find this useful.
issueID:UIMA-4054
type:Bug
changed files:
texts:UIMA DUCC top pom does not run maven changes plugin
DUCC top pom changes plugin responsible for creating jira report is partially commented our resulting in a missing folder issuesFixed. Also, it looks like this plugin is wrapped in a profile and only running with -Papache-release. Ditch the profile and uncomment changes plugin to create jira report
issueID:UIMA-4055
type:New Feature
changed files:
texts:Ruta: MultiTreeWordList with Feature-based Output
Sometimes I need a feature-based output of multi-tree wordlists instead of a type-based output.For instance, at present it is possible to specify different types for matches against different dictionaries likeDocument {->TRIE(  "dict.L0" = L0,  "dict.L10" = L10,wl, true, 0, false, 0, " .-/")};which creates annotations of type L0, L10 for matches according to dictionaries dict.L0, dict.L10. Additionally, it should be possible to specify (types and their) features for the output like, e.g.,Document {->TRIE(  "dict.L0" = {Terminology_A, id, "0"},  "dict.L10" = {Terminology_B, code, "10"},wl, true, 0, false, 0, " .-/")};which should create annotations of type Terminology_A/B and set their feature id/code to the value "0"/"10" for matches according to dictionary "dict.L0"/"dict.L10", respectively.
issueID:UIMA-4056
type:Improvement
changed files:
texts:fix JSON tests which do XML compares to use XMLUnit
The JSON tests have a mode where they generate xmi/xml serializations as well, just for extra coverage.  THe compare of these against expected can't be a string "equals" because different XML parsers, transformers, etc. do ordering of name-spaces and formatting of empty elements differently.  Use instead the XMLUnit package (available from Maven Central - license OK) (thanks to suggestion from Richard Eckart de Castilho), to check for "equality" instead that allows for these differences.
issueID:UIMA-4057
type:Bug
changed files:
texts:Ducc&#39;s JIRA report should be manually generated due to JIRA bug
It looks like Apache JIRA has a bug returning a max of 100 jiras when creating a jira report. Ducc 1.1.0 has a total of 188 jiras, so 88 are not in the report. Even when running a query directly in JIRA, one gets only the first 100.A workaround is to run the query manually in JIRA, let it return the first 100 than change query parameter value of tempMax to 200. Temporarily disable changes plugin in ducc's top pom to stop generating partial report. Add manually generated report to svn so that the build can pick this up and include it in the tar and zip files.
issueID:UIMA-4058
type:Bug
changed files:
texts:Fix docs for job descriptor overrides
Overrides are blank not comma separated
issueID:UIMA-4059
type:Improvement
changed files:uimaj-core/src/main/java/org/apache/uima/cas/impl/XCASDeserializer.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/XmiCasDeserializer.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/CASImpl.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FSIndexRepositoryImpl.java
uimaj-core/src/main/java/org/apache/uima/cas/CASRuntimeException.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/TypeSystemImpl.java
uimaj-core/src/main/java/org/apache/uima/internal/util/IntVector.java
texts:Checking for incorrect key modifications
Address the issue raised in Jira UIMA-4049, as follows: (Note: this implementation has been superceded by UIMA-4135) Add an optional check that checks, for every set of a Feature value, whether or not that Feature is used as a key in any Sort or Set index, and if so, if the Feature Structure is currently in any index in any View; if so, an exception is thrown.  This additional check is normally disabled, but can be enabled by specifying the JVM property -Duima.check_fs_update_corrupts_index.
issueID:UIMA-406
type:Improvement
changed files:uimaj-tools/src/main/java/org/apache/uima/tools/cvd/control/FSTreeSelectionListener.java
uimaj-tools/src/main/java/org/apache/uima/tools/cvd/FSNode.java
uimaj-tools/src/main/java/org/apache/uima/tools/cvd/control/RemoveLanguageHandler.java
uimaj-tools/src/main/java/org/apache/uima/tools/cvd/control/XCASFileOpenEventHandler.java
uimaj-tools/src/main/java/org/apache/uima/tools/cvd/control/TypeSystemFileOpenEventHandler.java
uimaj-tools/src/main/java/org/apache/uima/tools/cvd/control/LoadRecentDescFileEventHandler.java
uimaj-tools/src/main/java/org/apache/uima/tools/cvd/control/AnnotatorOpenEventHandler.java
uimaj-tools/src/main/java/org/apache/uima/tools/cvd/control/FocusFSAction.java
uimaj-tools/src/main/java/org/apache/uima/tools/cvd/control/CloseLogViewHandler.java
uimaj-tools/src/main/java/org/apache/uima/tools/cvd/control/FileSaveEventHandler.java
uimaj-tools/src/main/java/org/apache/uima/tools/cvd/control/AboutHandler.java
uimaj-tools/src/main/java/org/apache/uima/tools/cvd/MainFrame.java
uimaj-tools/src/main/java/org/apache/uima/tools/cvd/control/PopupHandler.java
uimaj-tools/src/main/java/org/apache/uima/tools/cvd/control/ColorPrefsOpenHandler.java
uimaj-tools/src/main/java/org/apache/uima/tools/cvd/control/TreeFocusHandler.java
uimaj-tools/src/main/java/org/apache/uima/tools/cvd/control/ShowAnnotationCustomizerHandler.java
uimaj-tools/src/main/java/org/apache/uima/tools/cvd/control/SetLanguageHandler.java
uimaj-tools/src/main/java/org/apache/uima/tools/cvd/control/IndexTreeSelectionListener.java
uimaj-tools/src/main/java/org/apache/uima/tools/cvd/control/TextContextMenuAction.java
uimaj-tools/src/main/java/org/apache/uima/tools/cvd/control/TextChangedListener.java
uimaj-tools/src/main/java/org/apache/uima/tools/cvd/control/ManualHandler.java
uimaj-tools/src/main/java/org/apache/uima/tools/cvd/control/CloseTypeSystemHandler.java
uimaj-tools/src/main/java/org/apache/uima/tools/cvd/control/FileOpenEventHandler.java
uimaj-tools/src/main/java/org/apache/uima/tools/cvd/control/CaretChangeHandler.java
uimaj-tools/src/main/java/org/apache/uima/tools/cvd/control/NewTextEventHandler.java
uimaj-tools/src/main/java/org/apache/uima/tools/cvd/control/SystemExitHandler.java
uimaj-tools/src/main/java/org/apache/uima/tools/cvd/control/MainFrameClosing.java
uimaj-tools/src/main/java/org/apache/uima/tools/cvd/control/XCASSaveHandler.java
uimaj-tools/src/main/java/org/apache/uima/tools/cvd/control/UndoMgr.java
uimaj-tools/src/main/java/org/apache/uima/tools/cvd/control/SetDataPathHandler.java
uimaj-tools/src/main/java/org/apache/uima/tools/cvd/control/LoadRecentTextFileEventHandler.java
uimaj-tools/src/main/java/org/apache/uima/tools/cvd/control/TextFocusHandler.java
uimaj-tools/src/main/java/org/apache/uima/tools/cvd/control/SetCodePageHandler.java
uimaj-tools/src/main/java/org/apache/uima/tools/cvd/control/SetLogConfigHandler.java
uimaj-tools/src/main/java/org/apache/uima/tools/cvd/control/AddLanguageHandler.java
uimaj-tools/src/main/java/org/apache/uima/tools/cvd/control/AnnotatorRerunEventHandler.java
uimaj-tools/src/main/java/org/apache/uima/tools/cvd/control/HelpHandler.java
uimaj-tools/src/main/java/org/apache/uima/tools/cvd/control/AnnotatorRunOnCasEventHandler.java
uimaj-tools/src/main/java/org/apache/uima/tools/cvd/control/ColorPrefsSaveHandler.java
uimaj-tools/src/main/java/org/apache/uima/tools/cvd/control/FocusTextAction.java
uimaj-tools/src/main/java/org/apache/uima/tools/cvd/control/SofaSelectionListener.java
uimaj-tools/src/main/java/org/apache/uima/tools/cvd/control/XCASSaveTSHandler.java
uimaj-tools/src/main/java/org/apache/uima/tools/cvd/control/AboutUimaHandler.java
uimaj-tools/src/main/java/org/apache/uima/tools/cvd/control/CloseAnnotationViewHandler.java
uimaj-tools/src/main/java/org/apache/uima/tools/cvd/control/FocusIRAction.java
uimaj-tools/src/main/java/org/apache/uima/tools/cvd/control/PopupListener.java
uimaj-tools/src/main/java/org/apache/uima/tools/cvd/control/IndexPopupListener.java
uimaj-tools/src/main/java/org/apache/uima/tools/cvd/control/FileSaveAsEventHandler.java
uimaj-tools/src/main/java/org/apache/uima/tools/cvd/control/ShowTypesystemHandler.java
uimaj-tools/src/main/java/org/apache/uima/tools/cvd/control/RestoreLangDefaultsHandler.java
uimaj-tools/src/main/java/org/apache/uima/tools/cvd/control/ShowAnnotatedTextHandler.java
texts:Continue restructuring of CVD code
Refactor CVD code to make it more maintainable.  Extract numerous inner class definitions to top-level classes.  Make code more MVC-style.
issueID:UIMA-4060
type:Bug
changed files:uimaj-core/src/main/java/org/apache/uima/cas/impl/CasSerializerSupport.java
uimaj-core/src/main/java/org/apache/uima/internal/util/IntBitSet.java
uimaj-core/src/main/java/org/apache/uima/internal/util/IntHashSet.java
uimaj-core/src/main/java/org/apache/uima/internal/util/PositiveIntSet.java
texts:improve int set utility impls
The PositiveIntSet impl has a bug in the ordered set iterator (not incrementing an index in a loop).  In addition, Improve this also by eliminating expensive operations on bit Sets (such as computing the number of elements in the set), and augmenting the IntBitSet to allow a potentially much smaller footprint, by supporting an "offset" for the use case where there's a lot of fairly "dense" members, clustered at an offset from 0.  Increase the hysteresis for switching among alternative impls in PositiveIntSet. Add (approximate) tracking for IntHashSet of mostNegative as well as most positive. Do some other minor cleanup - making things appropriately private / final.  Add / update test cases.
issueID:UIMA-4061
type:Improvement
changed files:uimaj-core/src/main/java/org/apache/uima/internal/util/IntSet.java
uimaj-core/src/main/java/org/apache/uima/internal/util/IntBitSet.java
uimaj-core/src/main/java/org/apache/uima/internal/util/PositiveIntSet_impl.java
uimaj-core/src/main/java/org/apache/uima/internal/util/IntHashSet.java
uimaj-core/src/main/java/org/apache/uima/internal/util/PositiveIntSet.java
uimaj-core/src/main/java/org/apache/uima/internal/util/IntVector.java
texts:Misc improvements to PositiveIntSet
In support of UIMA-3399 and UIMA-4059, improve the PositiveIntSet switching between underlying formats: have the changed-to format have some extra room so that it doesn't immediately need to expand.  Recognize that the underlying formats typically do "doubling" of the space used, and add a fast-path if an add operation won't trigger this. Enhance the interface so it can be used for the FSBagIndex underlying impl, replacing IntVector, in order to support UIMA-3399.
issueID:UIMA-4062
type:Improvement
changed files:
texts:Plugable external resources on UIMA RUTA
Currently UIMA ruta has WORDLIST and WORDTABLE, it is a list or table of text items that can used to detect occurrences. This is nice feature and very powerfull, however there is no way to plug my own WORDLIST/WORDTABLE implementation, for example WORDLIST that find matches in database table or in  lucene index etc...I think that the WORDLIST/WORTABLE implementation can be defined as UIMA external resource, in resources section, and then pass a reference to WORDLIST/WORDTABLE in ruta script. The other option is to specify the class that implements WORDLIST/WORDTABLE to RutaEnvionment and instantiate it in ruta environment using Reflection.
issueID:UIMA-4063
type:Task
changed files:
texts:DUCC RM: run its schedule on the OR clock instead of its own
This has gone back and forth over time.  At one point the OR would get 'stuck' and blast its clock many times a second so we moved RM to its own clock.  This seems to be remedied now so the RM should go back to the OR clock to increase responsiveness.  This revival includes a "blasti-guard" so RM does not schedule more often than 1 OR clock even if things go awry.The code for both modes is kept in the RM so its straightforward move back and forth between the modes.
issueID:UIMA-4064
type:Task
changed files:
texts:DUCC CLI: use a class loader to keep user&#39;s classpath and DUCC&#39;s use of 3rd party software segregated.
The most common use of the CLI is by calling its main() from within Eclipse, with the user's application classpath.  If the classpath contains pointers to 3rd party packages used by the CLI, and comes before uima-ducc-cli.jar, the CLI can malfunction.Similarly, uima-ducc-cli.jar is often left in the classpath for other than DUCC CLI usage, and it's own use of 3rd party packages can interfere with applications.To remedy this we remove as much 3rd party usage as possible, and use a classloader for the rest to provide 2-way protection.
issueID:UIMA-4065
type:Task
changed files:
texts:DUCC RM: allow arbitrarily nested nodepools
The DUCC resource manager currently allows only a single level of nodepool nesting.  Much of the code for arbitrary nesting already exists but was never completed due to lack of use-cases.  Use cases have arisen so this function will be completed.
issueID:UIMA-4066
type:Improvement
changed files:
texts:Ducc needs new projects for the new JD and JP
Need new projects for the refactored JD and JP. The existing project uima-ducc-jd will remain in the svn going forward but no new development should be done. It should be retired at some point. The new jd needs to go to a different project. Also, the JP deserves its own project separate from uima-ducc-agent where it currently lives. As with the existing JD, the current JP will not be further developed and will be retired at some point..
issueID:UIMA-4067
type:Improvement
changed files:
texts:DUCC Orchestrator (OR) reduce publication size relative to Services via compress outbound and uncompress inbound
Each service is comprised of one or more service instances, and each service instance is a Job of size 1 JP comprising its own command line.  The OR can reduce its publication size by sharing a common lanuch command line for each service that is then shared amongst its instances.
issueID:UIMA-4068
type:Improvement
changed files:
texts:DUCC Job Driver (JD) user classpath
Redesign of JD for 2.0 toward the main goal of classpath separation for user code.
issueID:UIMA-4069
type:Improvement
changed files:
texts:DUCC Job Driver (JD) system classpath
Redesign of JD for 2.0 toward the main goal of classpath separation for system code.
issueID:UIMA-407
type:Bug
changed files:uimaj-core/src/main/java/org/apache/uima/cas/impl/FSIndexComparatorImpl.java
texts:Cannot use uima.cas.Double key for index
Cannot use a uima.cas.Double feature as a key for index. Float works correctly.After investigating the problem, I found the issue in function FSIndexComparatorImpl.checkType(), line 61.Basically, it allows only Int, Float or String as keys for index. However, class FSLeafIndexImpl seems to have support for other types, like Double and Long.
issueID:UIMA-4070
type:New Feature
changed files:
texts:Ruta: variable value injection by configuration parameters
Ruta: variable value injection by configuration parameters.Initiate the values of variables without changing the ruta script. This can be done using the configuration parameters of the analysis engine. One string array for variable names (consider namespaces of blocks) and one string array for values, which are automatically casted.
issueID:UIMA-4071
type:Bug
changed files:
texts:Ruta: feature assignment on table dictionaries fails on skipped chars
Ruta: feature assignment on table dictionaries fails on skipped chars.
issueID:UIMA-4073
type:Bug
changed files:
texts:JCasGen generated code causes findbugs to complain
There is an issue with UIMA's JCasGen & FindBugs 2.0.3Whenever a Type is defined and JCasGen generates the Java bindings for it, findbugs will report a high importance issue with the generated code, pertaining to the lines: /** @generated  @return the generator for this type   */  @Override  protected FSGenerator getFSGenerator() {return fsGenerator;}The error is the one below.In short, getFSGenerator() is called in the constructor of the superclass of the generated *_Type.java class, and getFSGenerator() is overridden in the subclass. This is a findbugs trigger in the above version.Superclass is Annotation_Type.java, see here: http://grepcode.com/file/repo1.maven.org/maven2/org.apache.uima/uimaj-core/2.6.0/org/apache/uima/jcas/cas/AnnotationBase_Type.java#AnnotationBase_Type.getFSGenerator%28%29Line 76 is the place where the call is made that triggers the findbug.However, getFSGenerator() in superclass is :    protected FSGenerator getFSGenerator() {     return fsGenerator;   }and this is overridden to protected FSGenerator getFSGenerator() {return fsGenerator;} in *_Type.javaSince this is the exact same code, I see no problems in removing this (the lines commented out in the diff), which fixes findbugs:http://grepcode.com/file/repo1.maven.org/maven2/org.apache.uima/uimaj-tools/2.6.0/org/apache/uima/tools/jcasgen/JCas_TypeTemplate.java?av=f#68remove from the String literal this part:"/** @generated \n   * @return the generator for this type\n   */\n  @Override\n  protected FSGenerator getFSGenerator() {return fsGenerator;}\n"
issueID:UIMA-4074
type:New Feature
changed files:
texts:Load Wordtable and Wordlist from external resources
This issue is related with UIMA-4062. The goal is to provide an implementation that is able to use WordTable or Wordlist implementation defined as external resource.To implement the functionality the aeContex has to be passed to RutaEnvironment, RutaEnvironment will take the WordList/WordTable implementation from external resources.
issueID:UIMA-4075
type:Improvement
changed files:
texts:External Resources extension
UIMA offer a solution in order to access to external resources. Now a resource is initialized at startup time by reading external data from a file or via a URL. An external resource could be also example a database connection, database connection is composed by several parameters. It would be nice if the external resource could hold a list of pairs <key-value> in order to offer more flexibility configuring external resources. The configuration parameters should be specified in descriptor file.
issueID:UIMA-4076
type:Improvement
changed files:
texts:Create Configuration and EvenListener classes for the new Ducc JD and JP
Need new Configuration and EventListener classes for the new JD and JP. The new code will be added to the transport project. Update mappings  in ducc.properties  to point to the new Configuration classes for jp and jd.
issueID:UIMA-4077
type:Bug
changed files:
texts:Ducc Agent calls a script using hardcoded path
Agent collects per process swap usage using a script which is launched via duccling and running as user. The name of the script and its location relevant to DUCC_HOME is hardcoded. Name the script in ducc.properties and access it via property name.
issueID:UIMA-4078
type:Improvement
changed files:
texts:DUCC Job Driver (JD) report users should employ interface, rather than class directly
This will (ulitmately) facilitate migration to a new JD/JP interaction model with respect to the transport and orchestrator components.
issueID:UIMA-4079
type:Bug
changed files:
texts:MarkTable action not able to recognize entities with two or more words
I think this error was introduced solving UIMA-4071. The problem is that  RutaStream.getVisibleCoveredText method removes whitespaces in covered text. For example Bill Clinton covered text returns BillClinton.
issueID:UIMA-408
type:Improvement
changed files:uimaj-core/src/main/java/org/apache/uima/jcas/cas/IntegerArray.java
uimaj-tools/src/main/java/org/apache/uima/tools/cvd/FSNode.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FeatureStructureImpl.java
uimaj-core/src/main/java/org/apache/uima/jcas/impl/JCasImpl.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/XmiCasDeserializer.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/CommonArrayFSImpl.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FSIndexRepositoryImpl.java
uimaj-tools/src/main/java/org/apache/uima/tools/cvd/FSTreeModel.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/XCASSerializer.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/ByteArray.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/FloatArray.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/StringArray.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FeatureValuePathImpl.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/TypeSystemImpl.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/ArrayFSImpl.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/XmiCasSerializer.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/LongArray.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/XCASDeserializer.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/DoubleArray.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/CASImpl.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/BooleanArray.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/TypeImpl.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/CASMgrSerializer.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/StringArrayFSImpl.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/ShortArray.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/FSArray.java
uimaj-core/src/main/java/org/apache/uima/uimacpp/CppUimajEngine.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FSTypeConstraintImpl.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/LongArrayFSImpl.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/CommonPrimitiveArray.java
texts:Make more CASImpl methods private, have clients use ll APIs.

issueID:UIMA-4080
type:Bug
changed files:uimaj-tools/src/main/java/org/apache/uima/tools/jcasgen/Jg.java
texts:NPE when limiting to project and importing descriptor from dependency
When a project has limitToProject enabled and a type system descriptor imports another descriptor from a JAR file that is a dependency of the project, then an NPE is triggered:Caused by: java.lang.NullPointerException at org.apache.uima.tools.jcasgen.Jg.isOutOfScope(Jg.java:723) at org.apache.uima.tools.jcasgen.Jg.generateAllTypesFromTemplates(Jg.java:630) at org.apache.uima.tools.jcasgen.Jg.main1(Jg.java:565) at org.apache.uima.tools.jcasgen.Jg.main0(Jg.java:418) at org.apache.uima.tools.jcasgen.maven.JCasGenMojo.execute(JCasGenMojo.java:198) at org.apache.maven.plugin.DefaultBuildPluginManager.executeMojo(DefaultBuildPluginManager.java:133) ... 20 moreThe reason is that the imported type system has a URI like "jar:file:.../third-party.jar!/desc/type/ImportedTypeSystem.xml" which translates to a path value of "null" because it does not reside on the file system.In such a case, the TSD should simply be considered to be out-of-project.
issueID:UIMA-4081
type:Bug
changed files:jcasgen-maven-plugin/src/main/java/org/apache/uima/tools/jcasgen/maven/JCasGenMojo.java
texts:Failure to import another type system from the same project
If there are two type system files A and B within the same project and A imports B by name, then the import fails. Apparently, the directory containing the type systems is not added to the classpath of Jg.
issueID:UIMA-4082
type:Improvement
changed files:uimaj-json/src/main/java/org/apache/uima/json/JsonCasSerializer.java
texts:JSON serialization views: use view name
A user pointed out that Users desiring to iterate over a view would refer to it by view name, not by a sofa id.  Change just the key used in @views to use the view names.
issueID:UIMA-4083
type:Bug
changed files:uimaj-json/src/main/java/org/apache/uima/json/JsonCasSerializer.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/CasSerializerSupport.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/TypeSystemImpl.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/XmiCasSerializer.java
uimaj-json/src/main/java/org/apache/uima/json/JsonCasSerializer.java
texts:JSON Cas Serialization broken for case where FS is both ref&#39;d and indexed
The docs in the reference described this case, but it was not implemented in the code.  Add the missing capabilities to properly handle cases where referenced FS were also indexed.  Add a test case too.
issueID:UIMA-4084
type:Improvement
changed files:
texts:Ruta: Improvements to AnnotationBrowserView / AnnotationTreeViewPage
It would be nice if the annotation browser view would support some basic operations to modify annotations, for instance:i1: set annotation mode by double cklick on type tree nodei1*: show type tree nodes without annotationsi2: lower/wide annotation begin/end
issueID:UIMA-4085
type:Improvement
changed files:
texts:Ruta: plain text annotator should create annotations for empty lines
Ruta: plain text annotator should create annoations for empty lines, not only for lines with whitespaces. Maybe define a new type EmptyLine.
issueID:UIMA-4086
type:Improvement
changed files:
texts:Ruta: NBSP is not a WS
Ruta: NBSP is not a WSI think that should be changed.However, this requires changing the inheritance of the seeding types. Is that a problem for someone?
issueID:UIMA-4087
type:Improvement
changed files:
texts:Update DUCC pom in the uima-ducc-component to copy jars
JUnit tests in uima-ducc-component need to load uima, uima-as, uima-ducc-user, and xstream jars by a custom classloader to isolate uima from the rest of Ducc. The tests need to find the jars in a predictable folder for the classloader. Modify pom to copy the jars at appropriate maven build phases before the tests are run.
issueID:UIMA-4088
type:Improvement
changed files:
texts:DUCC should ensure APs are not preempted
DUCC should ensure that APs submitted with a preemptable class are not preempted.  i.e. change the class as it does for DUCC jobs if debug or all-in-one.
issueID:UIMA-409
type:Improvement
changed files:uimaj-core/src/main/java/org/apache/uima/cas/admin/CASMgr.java
uimaj-tools/src/main/java/org/apache/uima/tools/cvd/FSNode.java
uimaj-core/src/main/java/org/apache/uima/jcas/impl/JCasImpl.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/XmiCasDeserializer.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/Sofa.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/TOP.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FloatArrayFSImpl.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/ByteArrayFSImpl.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/TypeSystemImpl.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/ArrayFSImpl.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/XmiCasSerializer.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/SofaFSImpl.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/XCASDeserializer.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/ShortArrayFSImpl.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/CASImpl.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/IntArrayFSImpl.java
uimaj-core/src/main/java/org/apache/uima/cas/admin/CASFactory.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/CASMgrSerializer.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/StringArrayFSImpl.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/TypeSystemUtils.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FSClassRegistry.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/CASSerializer.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/LongArrayFSImpl.java
texts:Reorganization of TypeSystemImpl, CASImpl, FSClassRegistry, adding new CASMetadata class
Prepatory to work on supporing multiple classloaders, this change reorganizes several classes as follows:1) following a suggestion by Thilo, added the CASMetadata class: holds "final" refs to a TypeSystemImpl instance, and a FSClassRegistry instance; also holds structures derived from these used by the CASImpl in doing its work.  There is now just one instance of FSClassRegistry per instance of CASMetadata, and one instance of CASMetadata per instance of TypeSystemImpl.2) TypeSystemImpl had a set of package-private variables holding instances of some built-in Types and TypeCodes.  So did CASImpl.  These are now consolidated into one spot - the TypeSystemImpl.  3) Creation of a new TypeSystemImpl object loads it with the UIMA Built-in types.4) The CASImpl class has a new inner class called SharedViewData; all CASImpl fields which are shared by all views are stored here.  The only things not in this inner class are things related to the index repository, the mySofaRef, and the JCasImpl ref corresponding to this Cas View.  The shared view data replaces a previous strategy of copying things for each view.5) The JCas now shares all generated JCas cover objects among all views.  The cover object has a particular view instance, which is updated, as follows:  "new": the view used to create it;  De-reference: the view associated with the referring object; Iteration: the view containing the index being iterated over. 6) Following a suggestion by Adam, changed the generators to ignore what's in the JCas _Type objects, and instead use a standard generator.7) Several issues around Sofas and Views were cleared up - these were potential bugs that could happen if users used old APIs in unusual ways.8) JCas class loading is changed to load once per "class loader", and share these across all "views".  However, there are still individual _Type objects per view, per the discussion in the uima-dev list.
issueID:UIMA-4090
type:Test
changed files:
texts:Jenkins XML 1.1 test fails sometimes (Java dependent?)
There was a failure reported on a Jenkins run, where the XML Serialization for XML 1.1 produced 1.0 output.  Looks like a recent post here: http://stackoverflow.com/questions/25728885/java-produce-version-1-1-in-xml-header-with-transformer says some Javas don't support 1.1, but this can be overcome by using Saxon implementations.  Try this.
issueID:UIMA-4091
type:Task
changed files:
texts:upgrade Java version for UIMAJ-SDK to 7
Some code now requires methods only available in Java 7, and Java 6 ended its public support period last year.  Upgrade to 7.
issueID:UIMA-4092
type:Bug
changed files:
texts:Mention which static imports to make
The examples in the docu say that static imports need to be made, but not which ones. This confused at least one user.http://uima.apache.org/d/uimafit-2.1.0/tools.uimafit.book.html#d5e65
issueID:UIMA-4093
type:Bug
changed files:
texts:DUCC Job Driver (JD) verbosity reduction
Messages from JD.ActiveMap should be debug not info level.
issueID:UIMA-4094
type:Bug
changed files:uimaj-core/src/main/java/org/apache/uima/cas/FSIterator.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FSIndexRepositoryImpl.java
texts:moveTo(fs) where fs > all items in index is broken
Using moveTo(fs) where the fs is beyond the last element in the index incorrectly sets the iterator position to the 1st element.  It should set the iterator to (from the Javadocs) ""insertion point" for fs, i.e., to a point where the feature structure at that position is greater than fs and the fs at the previous position (if it exists) is less than fsWhen the fs is > all the elements in the index should conceptually set the iterator to 1 past the end of the index, which isValid() will return "false" for. Although this change may break user code (in case users have worked around this), it's important to have this operate correctly.  If this turns out to be an issue, we can later issue a patch that removes this fix under a JVM property flag, something like uima.jira_4094.keep_old_behavior.UIMA-1601 introduced this behavior (8/19/2011).UIMA-1601 was about moving to the left-most of equal FS hits in the index.  It did this in the PointerIterator, but that impl is not used if the index being iterated over has no subtypes.  Move this fixup code to the impls that LeafPointerIterator uses.  It uses one of 3 - one for bag, set, and sorted indexes.  The bag is a don't care - there are no "keys" and no notion of left-most.  The set uses the CompIntArrayRBT which has a comment saying it does already the right thing (I didn't test).  The sorted uses IntVectorIterator which has the problem.  Move the (fixed) code UIMA-1601 added from the PointerIterator to the IntVectorIterator, to insure it always returns the left-most one (among equals).
issueID:UIMA-4095
type:Bug
changed files:uimaj-core/src/main/java/org/apache/uima/cas/FSIterator.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FSIndexRepositoryImpl.java
texts:moveTo for bag index incorrectly setting position to 0 if not found
The bag index implementation for moveTo(fs) sets an invalid iterator position when the new PositiveIntSet impl is being used.  moveTo(fs) doesn't really have a good meaning for bag indexes, since there's no "key" to use in comparing.  But the current impl does a "reasonable" thing of a) moving to the == identical FS if it exists in the index, or (it tries to ) move to the first one.  Change the impl to actually moveToFirst() if not found, so it works also with the PositiveIntSet impl.
issueID:UIMA-4096
type:Task
changed files:
texts:update enforcer plugin to enforce Java 7 for uimaj sdk

issueID:UIMA-4097
type:Task
changed files:
texts:change version of uimaj-sdk 2.6.1 to 2.7.0
Because the next version will have a new Java level prerequisite, changing the 2nd version digit.
issueID:UIMA-4098
type:Bug
changed files:
texts:Remove warning msg when cli is not in a jar
No need to warn when user has specified DUCC_HOME in a system property
issueID:UIMA-4099
type:Bug
changed files:uimaj-core/src/main/java/org/apache/uima/cas/impl/XCASDeserializer.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/XmiCasDeserializer.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/CASImpl.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FSIndexRepositoryImpl.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/TypeSystemImpl.java
uimaj-core/src/main/java/org/apache/uima/internal/util/IntVector.java
texts:check for addFS with wrong Sofa misses many paths
The docs say that subtypes of AnnotationBase can only be added to indices in the CAS View associated with the Sofa for that Feature Structure (see http://uima.apache.org/d/uimaj-2.6.0/tutorials_and_users_guides.html#ugr.tug.aas.annotations_associated_sofa )A check was put in to enforce this, in the casImpl code, when calling aCasView.addFsToIndexes.  Unfortunately, this check misses checking the many other paths that are used to add a FS to an index.  For instance, the path when using JCas: instance.addToIndexes(), and many others.Fix this by moving the test downwards to the place where all code paths flow together.  Allow restoring the old behavior in case needed, via a JVM -D parameter: uima.disable_enhanced_check_wrong_add_to_index
issueID:UIMA-41
type:Bug
changed files:uimaj-core/src/main/java/org/apache/uima/cas/impl/LowLevelCAS.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/XmiCasDeserializer.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/XmiCasSerializer.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/LowLevelCAS.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/XmiCasDeserializer.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/XmiCasSerializer.java
texts:LowLevelCAS.ll_getTypeClass() needs to be updated for the new 2.0 types

issueID:UIMA-410
type:Bug
changed files:
texts:Type priority test case failing with IBM JDK 1.5.0_5ea
TypePriorityTest.testN1() fails for said JVM.  Seems to me the test case is not valid.
issueID:UIMA-4100
type:Bug
changed files:uimaj-core/src/main/java/org/apache/uima/cas/impl/DeferredIndexUpdates.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/BinaryCasSerDes6.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/XmiCasDeserializer.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/CASImpl.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FSIndexRepositoryImpl.java
unused-saved/src/org/apache/uima/cas/impl/FSRBTIndex.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/BinaryCasSerDes4.java
texts:deserialization of delta CASes broken in some cases
Delta CAS serialization includes attempting to handle changes made by a remote "below the line" - changing existing FSs.   If the remote removes the FSs and re-adds them back to the indices, this fact is sent back with the delta CAS as a list of FSs that are "re-indexed".  The deserialization takes this list, and removes them, and re-adds them back to the indices in an attempt to get them properly indexed.  However, this doesn't reliably work, if any of the keys used in the indexing were updated. Furthermore, there is nothing that insures a remote remove/add FSs it is modifying.  Perhaps the remote is unaware that FSs of that type are even being indexed (the information about what indices are defined at the client is not sent to the remote). So, it is possible that the remote could modify some feature, which is used as a key by the client.   The Deserialization would update that feature, without removing the FS from the indices first.One conclusion - the list of "re-indexed" FSs returned by the remote during a delta serialization is not a reliable indication of which FSs would need reindexing, since the index definitions between the client and the remote could be different.One fix: for mods to existing FSs, remove the FS from the indices in each view, do the mods, and then add them back (if they were previously found in the indices for that view).  Some optimizations: for subtypes of AnnotationBase - only one view need be checked.  The remove could be skipped if none of the slots being updated are in use as keys in some index; this might be an expensive check, though. This is a problem for all implementations that support Delta CAS:  Xmi, Binary, BinaryCompressed types 4 and 6.
issueID:UIMA-4101
type:Bug
changed files:uimaj-core/src/main/java/org/apache/uima/internal/util/IntHashSet.java
texts:IntHashSet has reversed true/false parm
The recent improvement to allow 2 as well as 4 byte entries in the IntHashSet has a reversed true/false param which causes NPE when expanding the table in some circumstances.
issueID:UIMA-4102
type:Bug
changed files:
texts:SerDesTest6 test case occasionally fails
While working on other issues, I noticed a failure in the SerDesTest6 tests.  This test constructs type systems with randomly omitted features for some types, and also sometimes sets up test array values with 0 lengths.  Two tests failed to account for this, so they would sometimes fail. Fix the tests to retry with different random seeds, if they encounter either missing feature or an array length of 0.
issueID:UIMA-4103
type:Bug
changed files:
texts:Ruta: PlainTextAnnotator paragraphs comprise nbsp lines
Related to recent changes (UIMA 4085 and 4086), paragraph detection seems to have problems with nbsp lines; test file attached..
issueID:UIMA-4104
type:Bug
changed files:
texts:DUCC Web Server (WS) incorrect share calculation
Web Server incorrectly rounds-up when calculating number of shares on a machine with respect to the free memory size reported by Agent.
issueID:UIMA-4105
type:Bug
changed files:uimaj-core/src/main/java/org/apache/uima/cas/FSIterator.java
texts:Creating an iterator to start at a specified FS doesn&#39;t start at the left-most
Related to UIMA-4094.  Creating an iterator to start at a specific spot in the index specified by a FS fails to start at the left-most one; instead it can start at an arbitrary one, and thus miss some "equal" values
issueID:UIMA-4106
type:Improvement
changed files:
texts:DUCC RM Use getMemFree instead of getMemTotal for share calculations
getMemFree() turns out not to be the FreeMemory from /proc but instead is TotalMemory - sum(processes owned by (uid<500)).  This switch allows RM to calculate available memory without overcommitting into mostly-stable system-owned processes.
issueID:UIMA-4107
type:Improvement
changed files:
texts:DUCC RM No longer refuse jobs for lack of resources
Currently the RM rejects non-preemptable work if it cannot get all the resources requested for that work.The proposed change is to leave the unschedulable work queued against the possibility (probability, in most situations we have observed in practice) that resources will become available and the job can be scheduled.If the user does not want to leave the work queued it can be canceled manually via API, CLI, or web server.
issueID:UIMA-4108
type:Improvement
changed files:uimaj-core/src/main/java/org/apache/uima/internal/util/IntSet.java
uimaj-core/src/main/java/org/apache/uima/internal/util/IntVector.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/TypeSystemImpl.java
texts:have more things use improved indexOf for IntVector
In UIMA-3143, the performance of bag remove operations was improved.  This same improvement could be used by other uses of IntVector - go thru and fix those that could make use of this to use it.  Don't change those that depend on finding the "leftmost" instance of equal items (so that moveTo(fs) and iterator(fs) work properly).
issueID:UIMA-4109
type:Task
changed files:
texts:DUCC Update documentation for V2.
Include a section in the duccbook that assists interpretation of the system logs.  This section will also be produced as a stand-alone document for easier distribution before the next release of DUCC is generally available.
issueID:UIMA-411
type:Bug
changed files:uimaj-tools/src/main/java/org/apache/uima/tools/pear/install/InstallPear.java
uimaj-core/src/main/java/org/apache/uima/pear/tools/InstallationController.java
uimaj-core/src/main/java/org/apache/uima/pear/tools/InstallationController.java
uimaj-core/src/main/java/org/apache/uima/pear/tools/LocalInstallationAgent.java
texts:PearInstallerTest fails when running from mvn install target - caused by class loading issues in the PEAR verification code
The PearInstallerTest fails when running from maven install target. The cause of the failure is a class loading issue in the PEAR verification code.The PEAR verification code starts a new process for the verification with the classpath either build from UIMA_HOME or build from java.class.path. When running the tests with mvn install target, Maven has it's own class loading framework (classworlds) so the classpath that is used for the pear verification does only containg the jar files for the classworld class loading framework but not the UIMA test and runtime classes. To fix this issue the PEAR verification code must be modified/changed so that the UIMA extension class loading is used to verify the installed components. The same fix should be applied when testing the installed pear with the CVD GUI that can be started from the PearInstaller GUI.
issueID:UIMA-4110
type:Task
changed files:
texts:Create a  private class loader for isolating user code from DUCC&#39;s CP
Create a URLClassLoader from a user-provided classpath string, or array of classpath elements, that is isolated from the daemon's classpath
issueID:UIMA-4111
type:Improvement
changed files:uimaj-core/src/main/java/org/apache/uima/cas/FSIndexRepository.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FSIndexRepositoryImpl.java
texts:Change how default bag indices are created
UIMA-173 added the concept of a universal default bag index for types that would be created if no other index was defined for that type.  That Jira has a link to the motivation, where it is clear that this was intended to simplify how UIMA works and allow all feature structures that were addedToIndexes() to be retrieved. UIMA-297 corrected some anomalies in the original implementation.This Jira is to correct the edge cases that happen when there are only Set indices defined for a type.  Because of the behavior of Set indices whichdo not add to their index the 2nd or subsequent FSs whose key values match the comparator definition for the Set, the original motivation of the default bag index is thwarted in this case.  This has caused several edge case issues; a special note about this surprising behavior had to be included in the UIMA documentation, etc. More recently, another edge case has been discovered, when an annotator contained in an aggregate having sufficient index definitions to insure a non-set index for type T is remoted, and that remote service has only a Set index for type T.  Assume that the client has added-to-indices 100 instances of type T, the CAS is serialized to the remote, the remote deserializes the CAS and does 100 add-to-indices, of which perhaps 50 succeed, and the other 50 are no-ops (due to the Set equivalance).  Now when the remote CAS is returned, only 50 will appear in the index back at the client.  This goes against the principle in UIMA where we try and have remoting of components not affect the semantics, where possible.  This is also quite a surprising effect, which won't be expected by most users.  This is also an "unstable" effect, in that, if a pipeline "assembler" (knowing little about the "internals" of the components) were to add a component to the remote which included a non-set index for type T, it would start behaving differently, not losing any indexed items. The converse would also be true: If the remote had no indices defined for type T, then add-to-indices for type T would be recorded in lazily created default bag indices, and those events would be sent back to the client. If an assembler were to now add a component which contained only a set definition for type T, this behavior would suddenly start dropping FSs that were excluded due to the Set comparator. For all these reasons (discovered in discussions with Edward Epstein and Adam Lally), and because of the original intent of this default bag index (discovered by reading the mail archives pointed to by the above two Jiras which describe in some detail the motivations for this), this Jira changes the logic of when the default bag index is created to create it whenever the situation is that some add-to-indices event would not record an addition (e.g., if there were no indices, or only Set indices, and the FS matched elements already in the Sets.).This change will affect documentation, so update that too.  In particular, the NOTE in this section http://uima.apache.org/d/uimaj-2.6.0/tutorials_and_users_guides.html#ugr.tug.aae.reading_results_previous_annotators will no longer apply.The behavior of getAllIndexedFS(type) will change - it will no longer have an exception for the special case where only Set indices were defined for the type.Because it seems that it is extremely unlikely that the previous behavior was being depended upon, there is no global flag to restore the previous behavior.
issueID:UIMA-4112
type:Bug
changed files:
texts:Ruta: Odd Rule Matching
When I applyDECLARE N;(NUM ((COMMA|PERIOD) NUM)?) {-> MARK(N)};onA0.0, a. A.Ruta creates an odd annotation "0," besides the correct annotation "0.0"; it misses the two "0" annotations.
issueID:UIMA-4113
type:Improvement
changed files:
texts:DUCC Build Make execution of tests optional.
The automatic execution of tests should be under control of a Maven profile so developers aren't forced to execute them on every build.
issueID:UIMA-4114
type:Bug
changed files:
texts:DUCC Agent Set correct freeMemory for non-Linux hosts
This actually fixes the "fake" memory as passed in from the DUCC simulator.  The amount of memory to set in simulation/test mode is passed in a -D java property and must be set in both total and free.  For OSX the agent uses the DefaultNodeMemoryCollector class which needs to be updated to set the correct free as well as total memory from the -D.
issueID:UIMA-4116
type:Improvement
changed files:uimaj-json/src/main/java/org/apache/uima/json/JsonCasSerializer.java
texts:change format of JSON map names so they can be JavaScript identifiers
In Javascript, if you have an hash (map) object  in a variable, e.g. "cas", you reference the value of a key using {{ cas&#91;"keyname"&#93; }} or, better: {{ cas.keyname }}.  For the 2nd form to work, keyname must be a valid Javascript name.  Names like @views are not valid.  So change these to forms e.g. _views which are valid.
issueID:UIMA-4117
type:Improvement
changed files:uimaj-json/src/main/java/org/apache/uima/json/JsonCasSerializer.java
texts:Change JSON format defaulting to include 0 values
When serializing out CASes, begin features with value 0 are omitted by default.  This has confused users, who expected to see these.  Change the default for UIMA numeric feature types to be to not omit them.  Update the method name controlling this to setOmit0Values, since it's only controlling serialization for numeric 0 values.
issueID:UIMA-4118
type:Bug
changed files:
texts:viaducc: add ability to supress cancel_on_interrupt
By default, viaducc launches remote processes with --cancel_on_interrupt. Allow users to be able to disconnect from remote launches without terminating them.
issueID:UIMA-4119
type:Bug
changed files:uimaj-tools/src/main/java/org/apache/uima/tools/jcasgen/Jg.java
uimaj-tools/src/main/java/org/apache/uima/tools/jcasgen/Jg.java
texts:jcasgen-maven-plugin generates no files on Windows
jcasgen-maven-plugin generates a temporary type system file importing all type system files for which JCas classes should be generated. On Windows, this file contains invalid imports, e.g.:<?xml version="1.0" encoding="UTF-8"?><typeSystemDescription xmlns="http://uima.apache.org/resourceSpecifier">    <imports>        <import location="file:/C:/de.tudarmstadt.ukp.dkpro.core-asl/de.tudarmstadt.ukp.dkpro.core.api.lexmorph-asl/src/main/resources/desc/type/Morpheme.xml"/>        <import location="file:/C:/de.tudarmstadt.ukp.dkpro.core-asl/de.tudarmstadt.ukp.dkpro.core.api.lexmorph-asl/src/main/resources/desc/type/POS.xml"/>    </imports></typeSystemDescription>The paths in this file appear to be absolute paths starting with C:\, but actually they are relative to the Eclipse workspace root.
issueID:UIMA-412
type:Task
changed files:
texts:Create test case for memory overhead
Kirk True reported the results of a memory-overhead measurement on uima-user.  We would like to get his test case and investigate whether overhead might be reduced.http://www.mail-archive.com/uima-user@incubator.apache.org/msg00199.html
issueID:UIMA-4120
type:Bug
changed files:
texts:UIMA-AS runtime configuration scripts in examples broken
Eclipse runtime configuration scripts are broken as they point to versioned AMQ jars which dont exist since we've upgraded AMQ to a new version. Check if we can point to AMQ/lib and AQM/lib/optional folders instead of pointing to each jar.
issueID:UIMA-4121
type:Bug
changed files:
texts:Add newer version of http client and core to ducc
The new JP needs newer version of http core and client from that we ship with uima-as. Add new jars to the DUCC_HOME/lib/http-client
issueID:UIMA-4122
type:Bug
changed files:
texts:Ducc new JP should take Object as arg to process method
JP calls process() method with a String as an arg. Change the IUimaProcessor interface and its implementation to pass Object instead of String
issueID:UIMA-4123
type:Bug
changed files:
texts:Modify Ducc&#39;s JP to enable clean shutdown
The JP must shutdown its internal thread pools when Worker threads exit due to fatal errors
issueID:UIMA-4124
type:Bug
changed files:
texts:Ruta: QueryView does not show rules and results on Linux
Ruta QueryView does not show the text field for rules and the results table on Linux.
issueID:UIMA-4125
type:Bug
changed files:
texts:Modify Ducc&#39;s JP classpath
Change jobclasspath.properties:1) remove duplicate lib/http-client2) remove not needed resources folder from the CP. Presence of this folder in the CP causes log4j to access Ducc's log4j.properties which uses custom appender which is not available in the User classpath.
issueID:UIMA-4126
type:Bug
changed files:uimaj-core/src/main/java/org/apache/uima/cas/CAS.java
unused-saved/src/org/apache/uima/cas/impl/AnnotationIndexImpl.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/BinaryCasSerDes4.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/BinaryCasSerDes6.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/CASImpl.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FSIndexRepositoryImpl.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FSsTobeAddedback.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/XmiCasDeserializer.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/XmiCasSerializer.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/XmiSerializationSharedData.java
uimaj-core/src/main/java/org/apache/uima/jcas/JCas.java
uimaj-core/src/main/java/org/apache/uima/jcas/impl/JCasImpl.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/XmiCasDeserializer.java
texts:if allow_duplicate_add_to_indices, delta CAS needs to remove all
UIMA-4100 fixes an issue around Delta deserialization - when updating an existing, indexed FS, by removing the FS from the index before updating the feature values, and then adding it back.  If the JVM property uima.allow_duplicate_add_to_indices is defined, then it's possible the FS may be added to the indices multiple times.  To prevent index corruption, in this case, loop the remove-from-index operation until it fails to find the item in the index, so it removes all instances.  And when re-adding it back, add it back the same number of times it was removed.
issueID:UIMA-4127
type:Bug
changed files:
texts:Add process timeout to the DUCC JP
Add support for configuring JP with a process timeout. The embedded UIMA-AS client can timeout while waiting for a reply from the service and return an exception back to the JD.
issueID:UIMA-4128
type:Bug
changed files:
texts:Fix wrong message in DUCC JP when -DUserClasspath not defined
Fix log message when -D not provided
issueID:UIMA-4129
type:Bug
changed files:
texts:Modify Ducc JP to use FlagsHelper for -D param names
Use common class for -D params
issueID:UIMA-413
type:New Feature
changed files:uimaj-tools/src/main/java/org/apache/uima/tools/components/FileSystemCollectionReader.java
uimaj-tools/src/main/java/org/apache/uima/tools/components/FileSystemCollectionReader.java
uimaj-tools/src/main/java/org/apache/uima/tools/RunAE.java
uimaj-tools/src/main/java/org/apache/uima/tools/components/FileSystemCollectionReader.java
uimaj-tools/src/main/java/org/apache/uima/tools/components/InlineXmlCasConsumer.java
texts:Allow RunAE to use XMI format XML CAS for input and output
RunAE is a key test/development tool for annotators. It accepts input as raw text or XCAS format files. It should support XMI format files as well.
issueID:UIMA-4130
type:Bug
changed files:
texts:Ducc JP should check if DD is specified when starting up
If DD is not provided the JP throws NPE. Instead check for required arg and log meaningful msg.
issueID:UIMA-4131
type:Bug
changed files:uimaj-tools/src/main/java/org/apache/uima/tools/jcasgen/Jg.java
texts:Limiting JCasGen scope fails in some cases
Consider the case where you have two projects: /my/project /my/project1The first project contains a type descriptor which imports another type descriptor from the second project. When JCasGen is invoked with the option to limit generation to the first project, then JCas classes for the types imported from the second project are still generated. Why? Because "/my/project" is a prefix of "/my/project1". JCasGen thinks that "/my/project1" is within the scope of "/my/project".This could be fixed by ensuring that paths terminate in a "/".
issueID:UIMA-4133
type:Bug
changed files:uimaj-core/src/main/java/org/apache/uima/analysis_engine/impl/PrimitiveAnalysisEngine_impl.java
texts:Wrong method name on log message
When a primitive AE is shutting down the destroy method claims it is "innitialize"
issueID:UIMA-4134
type:Bug
changed files:
texts:Fix an example descriptor name in the Developer&#39;s Guide 3.5.2
Spans 2 lines in source
issueID:UIMA-4135
type:Improvement
changed files:uimaj-core/src/main/java/org/apache/uima/cas/CAS.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FeatureStructureImpl.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/XmiCasSerializer.java
uimaj-core/src/main/java/org/apache/uima/jcas/impl/JCasImpl.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/BinaryCasSerDes6.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/XCASDeserializer.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/XmiCasDeserializer.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FSsTobeAddedback.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/CASImpl.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FSIndexRepositoryImpl.java
uimaj-core/src/main/java/org/apache/uima/util/CasCopier.java
unused-saved/src/org/apache/uima/cas/impl/AnnotationIndexImpl.java
uimaj-core/src/main/java/org/apache/uima/jcas/JCas.java
unused-saved/src/org/apache/uima/cas/impl/FSRBTIndex.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/XmiSerializationSharedData.java
uimaj-core/src/main/java/org/apache/uima/internal/util/IntVector.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/BinaryCasSerDes4.java
texts:support for modifying indexed FSs
Both users and the UIMA framework (during deserialization of CASes in XCAS, XMI, or various Binary formats) may want to modify a feature in a FS which is used as a key in some index specification.  If this FS is in the index, then indices which use this feature as a key may become corrupted, unless the FS is first removed from the indices.  After that, the feature may be updated, and the FS re-added to the indices.If allow_multiple_add_to_indices is enabled, a particular FS may be added to indices multiple times; the above remove operation would need to remove all of these, and the above add operation would need to add-to-indices the same number as was removed.The count of the number of times a FS was in the indices needs to be kept by View.There are several optimizations possible for this operation.  Bag indices do not need to be disturbed as they have no keys.  Set indices only have at most one instance of a particular FS.  FSs which are subtypes of AnnotationBase are only indexed in at most 1 view (the view of their sofa).  The remove-all kind of operation for Sorted indices can be made efficient in that all the identical elements are stored adjacently, and the remove can be done in bulk.The update operations for one FS may involve multiple key values.Design a way to encapsulate the update operation that is efficient, for both users and the UIMA framework, supporting both a try-finally approach and an encapsulation via a Runnable.For example, for try - finally:AutoCloseable ac = cas.protectIndices();try {     ... user code ...} finally {   ac.close();}or, with a Runnable (written in Java 8 lambda style):cas.withProtectIndices( () -> {    ... user code ...});
issueID:UIMA-4136
type:Bug
changed files:
texts:Modify DUCC new JP to handle Performance Metrics
Modify new JP to fetch PerformanceMetrics list from the uima-as and pass it on to the JD
issueID:UIMA-4137
type:Bug
changed files:
texts:Modify Ducc&#39;s new JP to use NodeIdentity
Use NodeIdentity from common to determine ip and host name
issueID:UIMA-4138
type:Bug
changed files:
texts:Modify Ducc&#39;s new JP to use enumeration for message type
Replace hard coded string with enumeration for message types
issueID:UIMA-4139
type:Bug
changed files:
texts:The new Ducc JP should fail if process args are note valid
Add more checking to validate process args. The JP expects a single arg which is a deployment descriptor
issueID:UIMA-414
type:Bug
changed files:uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/ui/ParameterSection.java
texts:Component Descriptor Editor not marking editor as "changed" if an override is added to an existing parameter having overrides.
If you click the add override, and it adds to an existing parameter, the file-changed flag is not being set - so if you "save", the change is not saved.
issueID:UIMA-4140
type:Bug
changed files:
texts:Ducc&#39;s new JP should quiesce when Agents sends stop request
Add code to support quiescing when Agents sends stop request. The code should allow worker threads to finish processing of the in flight CASes and when done exit run()
issueID:UIMA-4141
type:Bug
changed files:
texts:Ruta: find resources, resolve relative paths within jars
I've had problems with scripts that call scripts/analysis engines contained in jars within an extended classpath (specified in Ruta's launch configuration). It appears to be a problem of locating resources, e.g., finding the type system of an analysis engine specified by a relative location, e.g., calling utils.PlainTextAnnotator which does not find PlainTextTypeSystem.
issueID:UIMA-4142
type:Improvement
changed files:
texts:DUCC RM Dynamic nodepool updates
We need the ability to dynanically change nodepool definitions without restarting RM (or DUCC).  Currently we can dynamically add and subtract hosts without restarting but on add, if the host is not defined to a nodepool at the time of last start, it goes into the "global" pool, which is often wrong.Tasks: API/CLI to add / delete / rearrange a host in RM's current memory nodepool structures sanity-checking and hot-repair so hot RM restart works correctly if nodepools are statically changed, RM is restarted, and the new configuration conflicts with the older one API/CLI to insure the nodepool files are kept consistent with the memory updates.
issueID:UIMA-4143
type:Bug
changed files:
texts:Ducc&#39;s new JP terminates prematurely
It looks like the new JP terminates when all its worker threads exit. Modify code to keep process alive and let the Agent initiate shutdown
issueID:UIMA-4144
type:Bug
changed files:
texts:Ruta: do not override AE template config parameters when creating descriptors
Ruta: do not override AE template config parameters when creating descriptors. Merge the given values with the new ones of the workbench
issueID:UIMA-4145
type:Bug
changed files:
texts:bin cas deserialization form 6 delta cas has some errors in obscure cases
While putting in support for deserialization of delta CASes which update existing FS which may be indexed (thus needing special handling to avoid potentially corrupting the index), I noticed what appeared to be a kind of copy-paste error - where a wrong FS feature offset variable was being used.This would only ever show up if form 6 was being used and the source and target type systems differed in a manner that led to different offsets in the FS for the affected kinds of features.  The affected kinds are: byte, boolean, float, and string, and arrays of float and string.  The typo was that the heap update was using the cas-being-deserialized'd feature offset, instead of the cas-being-deserialized-into's offset.  Other kinds were correct.
issueID:UIMA-4146
type:New Feature
changed files:uimaj-core/src/main/java/org/apache/uima/cas/impl/CASImpl.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FSIndexRepositoryImpl.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FSIndexRepositoryImpl.java
uimaj-core/src/main/java/org/apache/uima/cas/CAS.java
unused-saved/src/org/apache/uima/cas/impl/AnnotationIndexImpl.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/BinaryCasSerDes4.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/BinaryCasSerDes6.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/CASImpl.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FSIndexRepositoryImpl.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FSsTobeAddedback.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/XmiCasDeserializer.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/XmiCasSerializer.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/XmiSerializationSharedData.java
uimaj-core/src/main/java/org/apache/uima/jcas/JCas.java
uimaj-core/src/main/java/org/apache/uima/jcas/impl/JCasImpl.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FSIndexRepositoryImpl.java
uimaj-core/src/main/java/org/apache/uima/cas/FSIndex.java
texts:Support Snapshot iterators for FSIndexes
Implementing "protectIndices" could have a consequence that some updated FSs could be removed from the indices by the framework, and addedback later.  If the user code were iterating they might get unexpected ConcurrentModificationExceptions because of this.Extend the iterators to include "snapshot" iterators, that take a snapshot of the index contents at iterator creation time, and then use that to iterate over; this allows the iterator to avoid ConcurrentModificationExceptions.Do this in a manner to continue to support the "extended for" style of iterating, where you can writefor (MyAnnotation : fsIndexProducingSnapshotIterators) { ... }
issueID:UIMA-4147
type:Bug
changed files:
texts:Deserializing XMI delta FsIntList gets wrong value
When deserializing a list of ints, into a CAS where the list already exists, the code to update the existing list mistakenly converts the value from the serialized form, which is read as an "int", into a float, and then converts it back to an int. For large ints, this causes a loss of precision.   The conversion appears to be entirely due to a cut/paste error.
issueID:UIMA-4148
type:Bug
changed files:
texts:Xmi Deserializing delta cas FsFloatList gets wrong value
The code for deserializing the float values in ListUtils in the updateFloatList has 4 spots where it sets the float value into the heap.  In 3 of the 4, it forgot to use the CASImpl.float2int method before storing in the heap.  The result of this would be to have wrong values (the result of casting a float to an int) stored instead.
issueID:UIMA-4149
type:Bug
changed files:
texts:Files with wrong permissions in binary tarball
Two files in the binary tarball are created without a+r permission: cglib-2.2.0.jar and Messages.properties. Bug in assembly script.
issueID:UIMA-415
type:Bug
changed files:uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/ui/ParameterSection.java
texts:Component Descriptor Editor fails when removing parameter override
One case that fails is when there are multiple parameters being overridden by the same param, and you remove one of the overrides, then try and save.  Causes null pointer exception while converting model to xml.
issueID:UIMA-4150
type:Improvement
changed files:uimaj-core/src/main/java/org/apache/uima/UIMARuntimeException.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/CASImpl.java
texts:Add JVM param to throw exception on index corrupting update not protected
UIMA-4135 adds automatic protection (at some performance expense) in case users are accidentally modifying indexed FS keys.  Because users using automated build systems may want a strong signal if a change starts doing this, add a JVM property uima.exception_when_fs_update_corrupts_index to throw an exception if this is detected outside of a protectIndices scope.
issueID:UIMA-4151
type:Improvement
changed files:uimaj-core/src/main/java/org/apache/uima/analysis_engine/impl/AnalysisEngineImplBase.java
uimaj-core/src/main/java/org/apache/uima/util/impl/ProcessTrace_impl.java
texts:ProcessTracing disabled should avoid call to build processTrace
As an optimization, because it is called so often, the methods in AnalysisEngineImplBase which construct process trace elements, should not be called if process trace is disabled.
issueID:UIMA-4152
type:Question
changed files:
texts:Misleading doc / impl for contains and find for FSIndex
FSIndex objects are returned to the user when they get an index from the index repository.  FSIndex objects support methods like size(), iterator(), contains() and find().size() and iterator() methods consider the index to contain instances of a particular type and all of its included subtypes. However, the implementation of the contains and find is such that it only searches the defined type of the index, excluding any elements which may be in the index, but are a subtype of the type of the index. I'll check in a test case which shows this behavior. The question is: should the docs be updated to describe the impl, or should the impl (for find and contains) be updated to run over the subtypes that might be in the index?
issueID:UIMA-4153
type:Improvement
changed files:uimaj-core/src/main/java/org/apache/uima/cas/impl/CASImpl.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FSIndexRepositoryImpl.java
texts:maybe slight performance improvements in core
Some slight performance improvements for "hot spots" by (a) making more things final, and (b) moving frequently accessed things together (to increase locality of reference).
issueID:UIMA-4155
type:Improvement
changed files:uimaj-core/src/main/java/org/apache/uima/internal/util/IntSet.java
uimaj-core/src/main/java/org/apache/uima/internal/util/IntBitSet.java
uimaj-core/src/main/java/org/apache/uima/internal/util/PositiveIntSet_impl.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FSIndexRepositoryImpl.java
uimaj-core/src/main/java/org/apache/uima/internal/util/IntHashSet.java
unused-saved/src/org/apache/uima/cas/impl/FSRBTIndex.java
uimaj-core/src/main/java/org/apache/uima/internal/util/PositiveIntSet.java
uimaj-core/src/main/java/org/apache/uima/internal/util/IntVector.java
texts:use bulk operations, avoid sort/dedup in serialization of indexed FS
The various serialization methods which start from the indexed types call the getIndexedFSs to get the indexes for 1 view. This method does extra array creation and sorting / deduping, not needed if there's a guarantee of no duplicates.  This is now possible due to the change to add default bag indices (no need to merge "set" indices), and if allow_duplicate_add_to_indices is not specified.  Eliminate this extra overhead in that case, and also use "bulk" methods where possible that avoid iterating and use things like System.arraycopy to accumulate the results.
issueID:UIMA-4157
type:Bug
changed files:
texts:Out of date DUCC version 1.0.0 documention on webpage

issueID:UIMA-4158
type:Bug
changed files:uimaj-core/src/main/java/org/apache/uima/cas/CAS.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FeatureStructureImpl.java
uimaj-core/src/main/java/org/apache/uima/jcas/impl/JCasImpl.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/XCASDeserializer.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/XmiCasDeserializer.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FSsTobeAddedback.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/CASImpl.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FSIndexRepositoryImpl.java
uimaj-core/src/main/java/org/apache/uima/jcas/JCas.java
texts:Make THROW_EXCEPTION_FS_UPDATES_CORRUPTS and friends public
We have constants defined in CasImpl, but they are not public THROW_EXCEPTION_FS_UPDATES_CORRUPTS. I would like to set such properties programmatically from unit tests and having these constants public would be very convenient for this. E.g. I would immediately notice when such functionality is changed/removed, e.g. as has happened in recent changes related to UIMA-4135. Mind that CASImpl.CHK_FS_UPDATES_CORRUPTS had been public while it still had existed.
issueID:UIMA-4159
type:Bug
changed files:uimaj-core/src/main/java/org/apache/uima/internal/util/IntBitSet.java
uimaj-core/src/main/java/org/apache/uima/internal/util/IntHashSet.java
uimaj-core/src/main/java/org/apache/uima/internal/util/PositiveIntSet_impl.java
texts:PositiveIntSet - forgot about offset in maybeSwitchRepresentation in one case
While running, an error was thrown from IntBitSet "key must be positive, but was 1784316" - which indicates the error message forgot about offsets, and the maybeSwitchRepresentation method of PositiveIntSet also did for this case.  Check other cases too.
issueID:UIMA-416
type:New Feature
changed files:uimaj-tools/src/main/java/org/apache/uima/tools/cvd/MainFrame.java
uimaj-tools/src/main/java/org/apache/uima/tools/cvd/control/AnnotatorOpenEventHandler.java
uimaj-tools/src/main/java/org/apache/uima/tools/cvd/control/CaretChangeHandler.java
uimaj-tools/src/main/java/org/apache/uima/tools/cvd/control/FileOpenEventHandler.java
uimaj-tools/src/main/java/org/apache/uima/tools/cvd/control/FileSaveAsEventHandler.java
uimaj-tools/src/main/java/org/apache/uima/tools/cvd/control/IndexTreeSelectionListener.java
uimaj-tools/src/main/java/org/apache/uima/tools/cvd/control/NewTextEventHandler.java
uimaj-tools/src/main/java/org/apache/uima/tools/cvd/control/SofaSelectionListener.java
uimaj-tools/src/main/java/org/apache/uima/tools/cvd/control/TypeSystemFileOpenEventHandler.java
uimaj-tools/src/main/java/org/apache/uima/tools/cvd/control/UndoMgr.java
uimaj-tools/src/main/java/org/apache/uima/tools/cvd/control/XCASFileOpenEventHandler.java
uimaj-tools/src/main/java/org/apache/uima/tools/cvd/control/XCASSaveHandler.java
uimaj-tools/src/main/java/org/apache/uima/tools/cvd/control/XmiCasFileOpenHandler.java
uimaj-tools/src/main/java/org/apache/uima/tools/cvd/control/XmiCasSaveHandler.java
texts:CVD should be able to read and write XMI documents

issueID:UIMA-4160
type:Improvement
changed files:uimaj-core/src/main/java/org/apache/uima/cas/impl/CasSerializerSupport.java
uimaj-core/src/main/java/org/apache/uima/cas/CAS.java
uimaj-core/src/main/java/org/apache/uima/jcas/impl/JCasImpl.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/XCASDeserializer.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/XmiCasDeserializer.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FSsTobeAddedback.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/CASImpl.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FSIndexRepositoryImpl.java
uimaj-core/src/main/java/org/apache/uima/jcas/JCas.java
uimaj-core/src/main/java/org/apache/uima/util/MessageReport.java
texts:improve serialization warning for multiple-refs
The 2.7.0 common serialization code has new checking to see if something being serialized in the xmi special format for arrays and lists is declared not-multiply-referenced (and therefore can be serialized as an XMI special list), but actually has multiple references (and therefore should not be serialized as an XMI special list). The message says what the system will do - it will serialize them as if they were multiple separate items.  Unfortunately, for large CASes, this message could occur very frequently, for essentially the same error, thus overflowing disk allocations, etc.  Figure out a way to give the message without "flooding" the output.
issueID:UIMA-4162
type:Improvement
changed files:uimaj-core/src/main/java/org/apache/uima/cas/admin/FSIndexComparator.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/DeferredIndexUpdates.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/TOP.java
uimaj-core/src/main/java/org/apache/uima/cas/CAS.java
uimaj-core/src/main/java/org/apache/uima/cas/FSIndex.java
uimaj-core/src/main/java/org/apache/uima/jcas/impl/JCasImpl.java
uimaj-core/src/main/java/org/apache/uima/UIMARuntimeException.java
uimaj-core/src/main/java/org/apache/uima/cas/FSIterator.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/XCASDeserializer.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/XmiCasDeserializer.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FSsTobeAddedback.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/CASImpl.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FSIndexRepositoryImpl.java
uimaj-core/src/main/java/org/apache/uima/cas/CASRuntimeException.java
uimaj-core/src/main/java/org/apache/uima/collection/CasConsumer.java
uimaj-core/src/main/java/org/apache/uima/jcas/JCas.java
uimaj-core/src/main/java/org/apache/uima/collection/base_cpm/CasDataConsumer.java
texts:improve 2.7.0 docs
In reviewing RC2 of 2.7.0, Burn suggests the following doc changes:2.4.1.5 in References - typo "equlivance"5.6.4 in References says you must addToIndexes after setting the keys, butthen goes on to show how to use protectIndices without clearly stating thatthis is one of three approaches.The block about  -Duima.allow_duplicate_add_to_indices should be moved asit is in the middle of the corrupted index section.Also we should be consistent in spelling indexes/indices ... I think we'restuck with the American spelling now ... I don't see any 'indices' in the2.6 docs.4.5 in References shows how to use protectIndices but perhaps shouldinstead link to the larger discussion in 5.6.410.2 in References describes -Duima.report_fs_update_corrupts_index butdoesn't give an example of the report message, or what to search for in thelogs.When describing uima.protect_indices_from_key_updates perhaps say that whenfalse it acts like pre-2.7.0 and corruption is not detected  (is thiscorrect?)  Presumably avoiding the check saves some CPU ... significant?In the README Index Corruption section it might help to add a little morecomparing the three ways to deal with it ... let UIMA fix it, or explicitremove/add, or protect block.  Also would help to say what to look for inthe logs. Or simply refer to the References section.
issueID:UIMA-4163
type:Bug
changed files:
texts:Missing message resource for "UIMAJMS_received_service_info_FINEST"
The log message for  "UIMAJMS_received_service_info_FINEST" is undefined which produces MESSAGE LOCALIZATION FAILED when logging FINEST messages in org.apache.uima.adapter.jms.client.BaseUIMAAsynchronousEngineCommon_impl
issueID:UIMA-4164
type:Bug
changed files:
texts:Ruta: "greedy anchoring" and "only once" cause NPE for composed rule elements
"greedy anchoring" and "only once" cause NPE for composed rule elements due to the null ruleApply for the lookahead.
issueID:UIMA-4165
type:New Feature
changed files:
texts:UIMA Ruta new condition check null values in features
Create a new condition that will be able to check in ruta script if a feature of given annotation is null. Something like thisMyAnnotation.feature== NULL{-> ...}
issueID:UIMA-4166
type:Improvement
changed files:uimaj-core/src/main/java/org/apache/uima/cas/CAS.java
uimaj-core/src/main/java/org/apache/uima/jcas/impl/JCasImpl.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/XCASDeserializer.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/XmiCasDeserializer.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FSsTobeAddedback.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/CASImpl.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FSIndexRepositoryImpl.java
uimaj-core/src/main/java/org/apache/uima/jcas/JCas.java
texts:simplify iterators to avoid type merging juggling when order is not needed
Users who use getAllIndexedFSs(type) to iterate over all FeatureStructures of a particular type, in no particular order, for types which have subtypes, use the PointerIterator implementation which juggles the collection of iterators for each subtype and "merges" them in the proper order.  This is done even when the index type is a BAG.  Add an alternative implementation which does the much simpler thing for these cases (where order isn't needed) that avoids the juggling operations and just goes through each index sequentially.
issueID:UIMA-4167
type:Bug
changed files:uimaj-core/src/main/java/org/apache/uima/cas/impl/CASImpl.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FeatureStructureImpl.java
texts:Index protection check missing some kinds of types
The Documentation (Reference) states that keys used in indexes must be integer, float, string, or the special type-priorities.  The implementation was extended a long time ago to support other primitives.  Update the docs to include these (boolean, byte, short, long, double).  Update the setting checking for these kinds of features to include checking for possible index corruption.
issueID:UIMA-4168
type:Bug
changed files:
texts:DUCC scripting uncaught exceptions
If ducc scripts that use ducc_util.spawn() participate in a unix pipeline, and that pipeline is broken, either accidentally or deliberately, the underlying subsystem.popen() might throw an exception when components elsewhere in the pipeline close().  Couldn't find any way to catch this exception in a reliable manner.  Solution is to set the sys.excepthook method to a custom method that deals with the problem.  In this case, it's ok to simply ignore the exception so it doesn't spew to the console, disconcerting the user.  The test for this is to pipe the output of ducc_process_submit into 'head', which reads a few lines and then closes its pipe even if ducc_process_submit isn't completed.
issueID:UIMA-417
type:New Feature
changed files:
texts:Create community/external UIMA resources page
Create external resources page and link to known UIMA component repositories.
issueID:UIMA-4170
type:Task
changed files:
texts:Ruta: move to Java 7
Since uimaj will move to java 7 in its next release there is no reason that ruta stays with java 6. adapt maven stuff and poms adapt eclipse bundles adapt jenkins job add mention to release notes and/or readme
issueID:UIMA-4171
type:Bug
changed files:uimaj-core/src/main/java/org/apache/uima/internal/util/rb_trees/IntArrayRBT.java
texts:IntArrayRBT findInsertionPoint wrong value in one case
The findInsertionPosition(k) method returns the node such that the node key value is >= k and the previous node (if it exists) is < k.For edge case: where k is bigger than all the node key values, this should return NIL, but instead it incorrectly returns the node having the biggest key value (which is still < k).
issueID:UIMA-4172
type:Improvement
changed files:
texts:simplify map from sofa number to view
While profiling, I saw some cases where getting the view from a sofa number had an observable time.  Seeing that the sofa numbers are "dense", change this map from a hashMap over Integers to just an ArrayList where the key is the sofaNumber.
issueID:UIMA-4173
type:Improvement
changed files:uimaj-core/src/main/java/org/apache/uima/jcas/impl/JCasHashMap.java
uimaj-core/src/main/java/org/apache/uima/jcas/impl/JCasImpl.java
texts:tweaks to JCasHash map for speed
Speed up lookups for common cases; avoid creating java objects.
issueID:UIMA-4175
type:Improvement
changed files:uimaj-core/src/main/java/org/apache/uima/jcas/impl/JCasImpl.java
uimaj-core/src/main/java/org/apache/uima/jcas/impl/JCasHashMap.java
uimaj-core/src/main/java/org/apache/uima/jcas/impl/JCasHashMapSubMap.java
uimaj-core/src/main/java/org/apache/uima/jcas/impl/JCasImpl.java
texts:speed up lookup of JCas cover object from cache
One of the most frequent operations in UIMA user code is to iterate over all FSs of particular type (including subtypes) and do some operation.  When using the JCas, the iteration's get() or next() (if JCas Caching is enabled, which is the default) will get the cached JCas cover object corresponding to that Feature Structure and return it.  Look at speeding up this operation, since it's frequent.
issueID:UIMA-4176
type:Task
changed files:
texts:Ruta: prepare release candidate
prepare release candidate, e.g., adapt and update versions
issueID:UIMA-4177
type:Improvement
changed files:
texts:DUCC Web Server (WS) Services State hover displays inconsistent information
See summary.
issueID:UIMA-4178
type:Improvement
changed files:uimaj-core/src/main/java/org/apache/uima/cas/impl/LowLevelCAS.java
uimaj-core/src/main/java/org/apache/uima/cas/FSIndexRepository.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/XCASDeserializer.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/CASImpl.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FSIndexRepositoryImpl.java
uimaj-core/src/main/java/org/apache/uima/util/CasCopier.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/TypeSystemImpl.java
texts:Improve CasCopier by using low level API
The CasCopier is quite inefficient in several ways.  Switch iterator over all FS in a view to use the getAllIndexedFSs which has recently been improved.  Make the copier not produce Java cover objects, but instead just work in low level CAS APIs.
issueID:UIMA-4179
type:Improvement
changed files:uimaj-core/src/main/java/org/apache/uima/cas/impl/CasSerializerSupport.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FeatureStructureImplC.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/XCASDeserializer.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/CASImpl.java
uimaj-core/src/main/java/org/apache/uima/util/CasCopier.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/TypeSystemImpl.java
texts:reduce java object creation around Sofa info
In many places, the sofa is obtained, and then some value of that is obtained.  Each time this is done, unless low level APIs are used, a Java cover object (either the JCas Sofa, or the non-JCas Java cover object) is created (or looked up and fetched from a cache if the JCas cache is in use).  This is unneeded; switch these to using the low level APIs unless there's a good reason to create the Java cover object.
issueID:UIMA-418
type:New Feature
changed files:
texts:add new UIMA analysis example descriptor
add a new aggregate analysis descriptor that use some of the provided UIMA example anaysis engines. The UIMA analysis example can be used to run out of the box the provided UIMA examples and show various kinds of annotations.
issueID:UIMA-4181
type:Bug
changed files:uimaj-core/src/main/java/org/apache/uima/util/CasCopier.java
uimaj-core/src/main/java/org/apache/uima/util/CasCopier.java
texts:CasCopier errors in copyFeatures
Some copy / paste and plain old falling asleep while programming errors in the copyFeatures method need fixing for case where source and target type systems are different.
issueID:UIMA-4182
type:Bug
changed files:
texts:Make Eclipse plugins work with Kepler level Eclipse
The 2.7.0 version of the plugins works with Luna (4.4.1) but not with Kepler (4.3.2).
issueID:UIMA-4183
type:Bug
changed files:uimaj-core/src/main/java/org/apache/uima/util/impl/JSR47Logger_impl.java
texts:indetermenancy in logger test
With some Java impl, the JSF47Logger_implTest fails if a high-level logger is set with "INFO" level, and a lower level logger (which inherits from the higher one) is created without setting the level.  The javadocs say that in this case the lower level setting is set according to a global LogManager configuration setting.  In many cases, it's null, which causes the level to be inherited from the parent.  But it might not be.  On some Jenkins test platforms, it appears that it is not null, and not INFO, thus making the test fail.  (This is a conjecture - This Jira will "fix" that, and we'll see if the intermittent Jenkins failures in this test go away).
issueID:UIMA-4184
type:Bug
changed files:uimaj-core/src/main/java/org/apache/uima/internal/util/IntHashSet.java
texts:IntHashSet bug in representation switch
The IntHashSet impl switches representation between one which can store adjusted ints (adjusted by constant offset) in 2 bytes and one which needs 4 bytes.The switch is incorrectly happening during the adjustKey phase - no switch is needed except for the "add" case.The switch is counted on not to occur for the contains case, and when it does, a NPE is thrown.Check other adjusting impls for this same kind of thing.
issueID:UIMA-4185
type:Improvement
changed files:
texts:PositiveIntSet should not have get(int) method
The PositiveIntSet interface has no need for a "get" method - remove that.  Figure out an alternative for FSBagIndex impl which for iterators is accessing the get method.
issueID:UIMA-4186
type:Improvement
changed files:
texts:DUCC Logger: use log4j API for configuration, not classpath element
Use the log4j API to configure the ducc logger and remove ducc_runtime/resources from the classpath.This is because 3rd party stuff is trying to load from our log4j.xml and sometimes crashes due to non-presence of a custom appender.
issueID:UIMA-4187
type:Bug
changed files:uimaj-core/src/main/java/org/apache/uima/internal/util/IntHashSet.java
texts:IntHashSet returns wrong values
When the new 2.7.0 IntHashSet is operating with offsets in 2 byte mode, and a negative number is stored, when it is retrieved, it is -1 off.  Add a test to catch this.
issueID:UIMA-4188
type:Improvement
changed files:uimaj-core/src/main/java/org/apache/uima/cas/impl/FSIndexRepositoryImpl.java
uimaj-core/src/main/java/org/apache/uima/internal/util/IntSet.java
uimaj-core/src/main/java/org/apache/uima/internal/util/IntVector.java
uimaj-core/src/main/java/org/apache/uima/internal/util/PositiveIntSet.java
uimaj-core/src/main/java/org/apache/uima/internal/util/PositiveIntSet_impl.java
texts:add toIntArray method to PositiveIntSet to permit use in Delta Cas journaling
When a CAS is delta-serialized, the journal is processed to convert it to a set of adds, removes, and reindexes.  This process needs add, remove and find operations on sets of ints.  It is using the IntSet implementation, which underneath uses the IntVector data structure - which is very fast for add, but order (size) for contains / removes, etc.  Change this to the PositiveIntSet (requires adding toIntArray method to PositiveIntSet), which has order 1 contains/remove operations.
issueID:UIMA-4189
type:Improvement
changed files:uimaj-core/src/main/java/org/apache/uima/internal/util/IntBitSet.java
texts:IntBitSet lookup methods sometimes fail
Methods like contains can get arguments which are not in the bit set but instead of returning false, throw an exception, when offsets are being used.
issueID:UIMA-419
type:Improvement
changed files:uimaj-core/src/main/java/org/apache/uima/jcas/impl/JCasHashMap.java
uimaj-core/src/main/java/org/apache/uima/jcas/impl/JCasImpl.java
texts:Reduce space used for casAddr to JCas object map by a factor of 4 or more
Space measurements show the map from casAddr to JCas objects was using between 46 and 74 bytes per JCas object; the larger number was observed with the IBM Java 5 implementation.  Reimplement this map to use less space - should be able to get it down to around 10 bytes for both Java versions.
issueID:UIMA-4190
type:Bug
changed files:uimaj-core/src/main/java/org/apache/uima/UIMARuntimeException.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/CASImpl.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/TypeSystemImpl.java
uimaj-core/src/main/java/org/apache/uima/util/CasCopier.java
texts:CasCopier fails to copy subtypes of string properly
I broke the cas copier part of feature copies by not coding the test for string copying to include subtypes of strings.  Fix this, and also, add check that throws a runtime exception if you attempt to copy a feature between two different CASs having different type systems, where the range name of the feature in the first Type System != the name in the 2nd.  Without this check, it could copy a String feature to an integer feature, resulting or visa versa.
issueID:UIMA-4191
type:Bug
changed files:uimaj-core/src/main/java/org/apache/uima/cas/impl/CASImpl.java
uimaj-core/src/main/java/org/apache/uima/UIMARuntimeException.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/CASImpl.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/TypeSystemImpl.java
uimaj-core/src/main/java/org/apache/uima/util/CasCopier.java
texts:fix creators of FSs with uninit&#39;ed sofaRefs to bypass index corruptn chkng
Both for efficiency and to avoid NPE, things that are copying FSs (copy Cas and deserialization) need to insure for subtypes of AnnotationBase that the sofa ref is set or that index corruption checking is bypassed.
issueID:UIMA-4192
type:Bug
changed files:uimaj-core/src/main/java/org/apache/uima/internal/util/IntBitSet.java
texts:IntBitSet has wrong impl around offset
The meaning and use of which values are offset is inconsistent.  Fix to make consistent.
issueID:UIMA-4193
type:Improvement
changed files:uimaj-core/src/main/java/org/apache/uima/internal/util/IntHashSet.java
uimaj-core/src/main/java/org/apache/uima/internal/util/IntSet.java
uimaj-core/src/main/java/org/apache/uima/internal/util/PositiveIntSet_impl.java
uimaj-core/src/main/java/org/apache/uima/internal/util/IntBitSet.java
texts:add toString methods to PositiveIntSet and impls
add toString to aid future debugging
issueID:UIMA-4194
type:Bug
changed files:
texts:Ducc Agent not killing JP whose state=Stopping
The Ducc Agent is not issuing a hard kill for the JP  process that is hung and whose state=Stopping.
issueID:UIMA-4195
type:Task
changed files:
texts:DUCC Testing: updates for new JD / JP
Must insure the test jobs now specify UIMA explicitly as DUCC 2.0 does not add it to the CP any more.
issueID:UIMA-4196
type:Improvement
changed files:
texts:DUCC Scripting: automatic properties merging
Add script to merge site properties updates with default properties.  Update start_ducc and ducc_post_install to use this facility.  Insure default properties is installed as default.ducc.properties and insert warning not to hand-edit.
issueID:UIMA-4198
type:Improvement
changed files:uimaj-core/src/main/java/org/apache/uima/cas/impl/CASImpl.java
uimaj-core/src/main/java/org/apache/uima/util/CasCopier.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/CASImpl.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/TypeSystemImpl.java
uimaj-core/src/main/java/org/apache/uima/util/CasCopier.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/TypeSystemImpl.java
uimaj-core/src/main/java/org/apache/uima/util/CasCopier.java
texts:cleanup CasCopier - move test out of inner loop, improve tst
Make runtime range checking conditional on their being same features with different range types - this will skip the range check in most cases.  Improve test case to have an instance of this
issueID:UIMA-4199
type:Bug
changed files:
texts:AnalysisEngineFactory doesn&#39;t pass AnalysisEngine.PARAM_NUM_SIMULTANEOUS_REQUESTS parameter correctly to UIMAFactory when creating a new engine
When org.apache.uima.fit.factory.AnalysisEngineFactory.createEngine(Class<? extends AnalysisComponent>, Object...) is called for creating a multi-threaded engine instance by passing in AnalysisEngine.PARAM_NUM_SIMULTANEOUS_REQUESTS and some integer value in configurationData. It creates AnalysisEngineDescription object from the data and calls org.apache.uima.fit.factory.AnalysisEngineFactory.createEngine(AnalysisEngineDescription, Object...) method which passes in null in aAdditionalParameters when calling UIMAFramework.produceAnalysisEngine. The respective method looks for AnalysisEngine.PARAM_NUM_SIMULTANEOUS_REQUESTS as per the following code:boolean multiprocessing = (aAdditionalParams != null)            && aAdditionalParams.containsKey(AnalysisEngine.PARAM_NUM_SIMULTANEOUS_REQUESTS);which is never found and the required MultiprocessingAnalysisEngine_impl is never created.
issueID:UIMA-42
type:Improvement
changed files:
texts:Need to reduce CAS size overhead per defined type
For applications with many CASes, each with relatively little data, it is important to keep initial CAS size low. uimaj CAS size has a fairly strong dependency on the number of types defined, adding approximately 1-3KB per defined type.
issueID:UIMA-420
type:Improvement
changed files:uimaj-tools/src/main/java/org/apache/uima/tools/cvd/MainFrame.java
uimaj-tools/src/main/java/org/apache/uima/tools/cvd/AutoFoldingMenu.java
texts:CVD should use encoding list provided by JVM
The CVD should use the character sets provided by the JVM, not force the user to know about supported encodings.  The current implementation is there because Java versions prior to 1.4 couldn't be queried for supported character sets.
issueID:UIMA-4200
type:Bug
changed files:uimaj-core/src/main/java/org/apache/uima/internal/util/IntHashSet.java
texts:IntHashSet bug in converting from 2 byte to 4 byte table
To convert between the 2 byte and 4 byte format, doing the offset correction is needed but was omitted in one case. Also, there is an off-by-1 problem when computing if a rawkey is out of range for being representable as a 2 byte value in the table.
issueID:UIMA-4201
type:Bug
changed files:uimaj-core/src/main/java/org/apache/uima/internal/util/IntHashSet.java
uimaj-core/src/main/java/org/apache/uima/internal/util/IntBitSet.java
texts:IntBitSet - treat offset consistently
Treat the position vs value consistently for IntBitSet.  The position is what find(value) returns; the value is what get(position) returns.  These are the same if the offset is 0, otherwise, they're different - the position is the value - offset.
issueID:UIMA-4202
type:Improvement
changed files:
texts:DUCC Command Line Interface (CLI) should employ DispatcherFactory to create dispatchable (sent to ORchestrator)
The DispatcherFactory class will create an IDuccEventDispatcher that nominally routes the request to the ORchestrator.This provides a chokepoint for ORchestrator submissions.
issueID:UIMA-4203
type:New Feature
changed files:
texts:DUCC Web Server (WS) copyright 2015

issueID:UIMA-4204
type:Bug
changed files:uimaj-core/src/main/java/org/apache/uima/internal/util/IntBitSet.java
uimaj-core/src/main/java/org/apache/uima/internal/util/IntHashSet.java
uimaj-core/src/main/java/org/apache/uima/internal/util/PositiveIntSet_impl.java
texts:IntHashMap impl of "remove" broken
Originally, the int hash maps had an implicit constraint - items would never be removed.  The naive implementation of remove breaks the map (things which were there become not found).
issueID:UIMA-4205
type:Improvement
changed files:uimaj-core/src/main/java/org/apache/uima/internal/util/PositiveIntSet_impl.java
texts:PositiveIntSet_impl fails to pass along offset when converting to IntHashSet
When converting to IntHashSet, the offset is useful in increasing the likelyhood that the hash set can be represented using short integers.  But the impl failed to pass along the offset when doing the conversion.
issueID:UIMA-4206
type:Improvement
changed files:uimaj-core/src/main/java/org/apache/uima/internal/util/IntHashSet.java
texts:IntHashSet table expansion should account for removed items better
When items are removed from the IntHashSet, special "placeholders" take their place (and take up a slot in the table). When the table needs expanding due to the load factor, the copying into the new table will drop these placeholders, thus "reclaiming" the space.  Resizing is triggered by the size + nbrRemoved exceeding the load factor.  If the nbrRemoved is >= size, then keeping the same size table (instead of doubling it's size) will bring the load factor down to what it would have been in the absence of removes, when the table size was doubled.  Change the reallocate to keep the size in this case (but still do the copying - which cleans up the removal placeholders).
issueID:UIMA-4207
type:Bug
changed files:
texts:Ducc Agent should report if CGroups are enabled on the node
Ducc' agent should report status of cgroups on a node. One possibility is to extend current node metrics the agent is already reporting. Seems like a logical place for this information. It is published at regular intervals to a JMS topic and available to the Ducc Web Server.
issueID:UIMA-4208
type:Bug
changed files:uimaj-core/src/main/java/org/apache/uima/cas/impl/CasSerializerSupport.java
texts:JSON: ordering of subtypes of Annotation base not correct
The sort comparator has a cut/paste typo - it doesn't compare the feature passed in.
issueID:UIMA-4209
type:Improvement
changed files:
texts:DUCC viz: use service id instead of service instance ID in display.
Use the registered service id and conflate instances on the same node, analogous to the treatment for jobs, in the visualization.
issueID:UIMA-421
type:Bug
changed files:uimaj-tools/src/main/java/org/apache/uima/tools/cvd/MainFrame.java
uimaj-tools/src/main/java/org/apache/uima/tools/cvd/control/TypeSystemFileOpenEventHandler.java
uimaj-tools/src/main/java/org/apache/uima/tools/cvd/control/XCASFileOpenEventHandler.java
uimaj-tools/src/main/java/org/apache/uima/tools/cvd/control/XmiCasFileOpenHandler.java
uimaj-tools/src/main/java/org/apache/uima/tools/cvd/MainFrame.java
uimaj-tools/src/main/java/org/apache/uima/tools/cvd/MainFrame.java
uimaj-tools/src/main/java/org/apache/uima/tools/cvd/MainFrame.java
uimaj-tools/src/main/java/org/apache/uima/tools/cvd/control/CaretChangeHandler.java
texts:CVD broken after restructuring
The recent CVD work broke things. Text "Cut" and "Copy" no longer works After loading a AE, the text is gone
issueID:UIMA-4210
type:Bug
changed files:
texts:Client hangs with more than 1 time-out
The client hangs if the execution has two time-outs. After debugging into the issue, we figure out that the resending mechanism has some bugs in it. Here are the detailed description.Please review the necessity for the invocation of sendCAS(). In our system, we don't have to resend the CAS to process again. Please provide a configuration so that we don't have to resend the CAS every time there is a time out.Whenever there is the first time-out, BaseUIMAAsynchronousEngine_impl#notifyOnTimout() is invoked and it hangs when it tries to invoke sendCas() at line 2385. I believe the reason is that the sendCAS() is a synchronized method and a potential threading issue causes this thread hang over there. Please be noted that this block is also synchronized.Then when there is a second time-out, it will be hanging in the very beginning of the method notifyOnTimeout() and cannot clear the time-out CAS from the CAS list, which hangs the entire client.
issueID:UIMA-4211
type:Improvement
changed files:
texts:DUCC Web Server (WS) enable request logging
Enable WS request logging.In ducc.properties, use ducc.ws.requestLog.RetainDays = <value> to control number of days to retain.  The value 0 disables recording altogether.Changing the value requires WS restart to become effective.Logs are written to DUCC_HOME/logs/webserver.
issueID:UIMA-4212
type:Improvement
changed files:
texts:Add methods to CasUtil to select and index intersecting annotations
CasUtil includes methods to select and index covered and covering annotations of a given type (ie, supersets and subsets of an annotation's interval).The attached patch adds methods to select and index intersecting annotations,  either including covering annotations or not.
issueID:UIMA-4213
type:Bug
changed files:
texts:Errors in UIMA-AS&#39;s dd2spring are ignored
When dd2spring produces an error such as "Cannot load delegate descriptor .." the process carries on and deploys the DD with a defective configuration.  Should fail ... and indicate what descriptor failed.(This error occurred when the descriptor had an unreachable DTD)
issueID:UIMA-4214
type:Bug
changed files:
texts:Ducc Agent incorrectly marks JP as CROAKED
When the JP terminates due to a work item error, the agent incorrectly marks this process as CROAKED. Modify agent to check exit code of the terminated JP and not assign reason for failure in case when an exit code=0
issueID:UIMA-4215
type:Bug
changed files:
texts:DUCC service should support classpath isolation similar to JP
For Ducc 2.0 services should be launched with classpath isolation just like JPs. The user code should be loaded from the system classpath, while DUCC's jars should load from a -D property into a fenced class loader separate from user code.
issueID:UIMA-4216
type:Bug
changed files:
texts:Remove duplicate deployment descriptor from DUCC&#39;s JP cmd line
For some reason the PM adds a duplicate DD to the cmd line arguments. Don't recall what the reason for this was. Its clearly redundant in 2.0. as the OR adds this arg. The JP code ignores the duplicated DD but the PM should be changed to avoid adding it.
issueID:UIMA-4217
type:Bug
changed files:
texts:DUCC Web Server (WS) should suppress "unspecified" as a pop-up rationale
Showing "unspecified" adds no useful information.
issueID:UIMA-4218
type:Bug
changed files:
texts:DUCC Web Server (WS) hover over Reason gives incorrect error count
Remove this redundant (and wrong) display count when hovering over Reason.
issueID:UIMA-4219
type:Improvement
changed files:
texts:DUCC jobs need options to overrride some builtin defaults
Add options to allow a custom flow controller:  --process_descriptor_FC   --process_descriptor_FC_overridesAdd option to allow customizing the exception handler:  --driver_exception_handler_argumentsFor consistency change --process_DD to --process_descriptor_DDCorrection: Don't add FC options &#8211; user may provide a FC with the same name as the built-in one
issueID:UIMA-422
type:Bug
changed files:
texts:update UIMA DocBook version and Date
udpate UIMA DocBook release version from 2.1 to 2.2.udpate publication date
issueID:UIMA-4220
type:Bug
changed files:
texts:UIMA-AS needs to allow dd2spring to use a custom XML parser
If an application uses -Duima.framework_impl to insert a custom XML parser that modifies descriptors by, for example, substituting values for some entity references, then the Saxon parser used by dd2spring may fail when reading the unmodified descriptors.  So we must also provide a hook to allow dd2spring to use a custom SAX parser when it constructs the spring context files.Some of our descriptors have a DOCTYPE referencing an external DTD which fail in dd2spring when on a node with no access to the public network.  (The DOCTYPE is filtered out by the UIMA parser provided via -Duima.framework_impl)
issueID:UIMA-4221
type:Bug
changed files:
texts:DUCC new JP should modify user provided DD to add broker URL and queue
The JP should modify user provided DD by adding broker URL and queue name. in ver.2.0 the JP uses an internal broker and the port is not known to the user. Use code from ver.1.0 that was making these changes.
issueID:UIMA-4222
type:Bug
changed files:
texts:Remove empty resources/private folder from build
Also simplify assembly by dropping the extract of UIMA SDK since UIMA_AS includes it.
issueID:UIMA-4223
type:Improvement
changed files:
texts:DUCC SM: Adjust logic for WaitingForServices state
If some work (job, service, etc) has a service dependency, and that service is registered, SM should never return Service Unavailable.  This will either allow the work to continue if the service is in fact available, or WaitingForServices if the service is registered but not currently functional (e..g. disabled).Previous behaviour is to return Service Unavailable if the service is not started and cannot be started by reference.
issueID:UIMA-4224
type:Improvement
changed files:
texts:DUCC Orchestrator (OR) should dynamically reconnect to broker for JD queue clean-up
If the DUCC broker is recycled without a corresponding DUCC recyle, then the Orchestrator's MQ-Reaper is unable to clean-up unused JD queues.It is straight forward to simply issue a reconnect() whenever use of the existing connection results in an exception.
issueID:UIMA-4225
type:Bug
changed files:
texts:DUCC Job Driver (JD) Null Pointer Exception
java.lang.NullPointerExceptionAt: java.util.TreeMap.getEntry(TreeMap.java:353) java.util.TreeMap.get(TreeMap.java:284) org.apache.uima.ducc.jd.JobDriver.getProcess(JobDriver.java:1081) org.apache.uima.ducc.jd.JobDriver.isNodeFailure(JobDriver.java:1092) org.apache.uima.ducc.jd.JobDriver.exception(JobDriver.java:1586) org.apache.uima.ducc.jd.client.WorkItem.exception(WorkItem.java:196) org.apache.uima.ducc.jd.client.WorkItem.run(WorkItem.java:160) java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:482) java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:345) java.util.concurrent.FutureTask.run(FutureTask.java:177) java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1156) java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:626) java.lang.Thread.run(Thread.java:780)
issueID:UIMA-4226
type:Improvement
changed files:
texts:CAS Reset fails to shrink some allocations
Cas Reset is designed to prepare a CAS for reuse.  The CAS has many aspects which grow dynamically as needed, such as the heap.  If a particular use of a CAS has a large growth in various aspects, after the reset, some automatic shrinking of these things should happen, but not too fast (since it takes time to expand these).  Investigate these and devise space reclamation strategies that balance reclamation vs need-to-expand in a subsequent reuse of a CAS.
issueID:UIMA-4227
type:Bug
changed files:
texts:DUCCs Agent should call cgcreate when testing CGroups on startup
The agent currently tests for existence of cgroups folder on startup. If the folder doesnt exist, the agent just logs that fact and continues with cgroups disabled. This does not seem like a sufficient test. An older version of cgroups may be installed and the folder may exist but cgcreate can fail.When checking for cgroups, call cgcreate to test if cgroups actually function correctly on a node. If this fail, the agent will continue on with cgroups disabled.
issueID:UIMA-4228
type:Bug
changed files:
texts:DUCCs UncaughtExceptionHandler should exit process on java Error
Ducc common code instantiates UncaughtExceptionHandler to catch any uncaught errors and exceptions but only dumps the stack trace. Change code to always call Runtime.getRuntime().halt(1) on java errors like OOM.
issueID:UIMA-423
type:Bug
changed files:
texts:Detect and fix memory leaks
Fournd memory leaks in XMI  serialization, exception handling, CAS.  Memory leak detection in debug mode is currently disabled in the base code because of issues with malloc.h in Visual Studio 7.  This appears to  be fixed in VS 8.
issueID:UIMA-4231
type:Bug
changed files:
texts:Ruta: NPE when PARTOF is used at wildcard
An NPE occurred when a PARTOF condition is used at a wildcard rule element. The begin anchor was null. An reproducible example is needed.
issueID:UIMA-4232
type:Bug
changed files:
texts:Ruta: missing match for right to left matching with composed rule element
A match was missed for right to left matching with compopsed rule element. An reproducible exmaple is needed.
issueID:UIMA-4233
type:Bug
changed files:
texts:Ruta: NPE for Gather on optional rule element
A user reported on the mailing list:The following RUTA grammar:DECLARE Annotation A;DECLARE Annotation B;DECLARE Annotation C(Annotation a, Annotation b);W{REGEXP("A")->MARK(A)};W{REGEXP("B")->MARK(B)};A B?{-> GATHER(C, 1, 2, "a" = 1, "b" = 2)};Run s as expected on the input "A B C", but gets a NullPointerException on"A X C", presumably because the 2 index is not mapped to anything.
issueID:UIMA-4234
type:Improvement
changed files:
texts:DUCC RM Add offline and nonresponsive status to rm_qoccupancy
Include offline and nonresponsive status in the RM query.
issueID:UIMA-4235
type:New Feature
changed files:
texts:Ruta: AE parameter for script content
Add a new configuration parameter "script" for the content of the script meaning for the content of the "mainScript" parameter. If set, it replaces normal functionality and thus eases usage of Ruta with minimal script files in combination with descriptors.
issueID:UIMA-4236
type:Improvement
changed files:
texts:DUCC Job Driver (JD) should support configurable startup initialization error limit
Create new ducc.properties key ducc.jd.startup.initialization.error.limit and employ same in Job Driver.  Default value is 1, which is commensurate with the current behavior.
issueID:UIMA-4237
type:Bug
changed files:
texts:Ruta: Document not matched if exended and invisible
Ruta: Document not matched if DocumentAnnotation is exended and the document starts with something invisible
issueID:UIMA-4239
type:Bug
changed files:
texts:Ruta: incremental partitioning breaks internal indexing
Incremental partitioning breaks internal indexing and leads to failing PARTOF and STARTSWITH conditions.
issueID:UIMA-424
type:Bug
changed files:uimaj-core/src/main/java/org/apache/uima/impl/UIMAFramework_impl.java
texts:update UIMA Framework version to 2.2
update UIMA version number to 2.2 in UIMAFramework_impl.java
issueID:UIMA-4240
type:Bug
changed files:
texts:Ruta: verbalization of null feature matches
verbalization of null feature matches can cause an NPE since parent is not given
issueID:UIMA-4241
type:Bug
changed files:
texts:Ruta: skipped basic for right to left wildcard match
skipped basic for right to left wildcard match
issueID:UIMA-4242
type:Bug
changed files:
texts:Ruta: non-existing wildcard match with additional condition
A non-existing wildcard match with additional condition causes an NPE
issueID:UIMA-4243
type:Bug
changed files:
texts:Ruta: null assignment in implicit action
There is a problem with null assignments in implicit actions. A reproducible example is needed.
issueID:UIMA-4244
type:Bug
changed files:
texts:Ruta: string assignment of feature expressions in structure actions
There is a problem with string assignment of feature expressions in structure actions. The check on Type prevents the string assignment.
issueID:UIMA-4245
type:Bug
changed files:
texts:Ruta: out of window shift in inlined rules
out of window shift in inlined rules should not be allowed
issueID:UIMA-4248
type:Bug
changed files:uimaj-core/src/main/java/org/apache/uima/cas/impl/FSIndexRepositoryImpl.java
texts:snapshot iterators over empty indexes return 1 "null"
The snapshot iterator impl over empty index says incorrectly that the iterator is valid, and it returns a null. Should say it is invalid.
issueID:UIMA-4249
type:Bug
changed files:
texts:Ruta: do not restrict type matching in windows with same type
Do not restrict type matching in windows with same type. Currently, the window type is returned when inlined rules match on the same type (used for the window).
issueID:UIMA-425
type:Improvement
changed files:uimaj-tools/src/main/java/org/apache/uima/tools/cvd/MainFrame.java
uimaj-tools/src/main/java/org/apache/uima/tools/cvd/MainFrame.java
uimaj-tools/src/main/java/org/apache/uima/tools/cvd/control/SystemExitHandler.java
uimaj-tools/src/main/java/org/apache/uima/tools/cvd/MainFrame.java
uimaj-tools/src/main/java/org/apache/uima/tools/cvd/control/MainFrameClosing.java
uimaj-tools/src/main/java/org/apache/uima/tools/cvd/control/SystemExitHandler.java
uimaj-tools/src/main/java/org/apache/uima/tools/pear/install/InstallPear.java
texts:CVD should have close method that doesn&#39;t shut down JVM
When CVD is called from another application (like the pear installer), it should not shut down the JVM on exit.
issueID:UIMA-4250
type:Bug
changed files:
texts:find method returns wrong fs in edge case
the index "find" method (not used very much I think) returns the wrong item very occasionally, because the test of whether or not to use the passed -in fs as the item to return is comparing that fs's address with the position of the found item in the index - it should be comparing the address of the passed in item with the value of the index at that position.
issueID:UIMA-4251
type:Bug
changed files:
texts:DUCC Agent should publish physical count of CPUs and current load on a node
Agent should discover and publish number of physical cores available on a node along with a current CPU load.
issueID:UIMA-4252
type:Bug
changed files:
texts:DUCC: SM Calculates negative number of service instances to add!
If a service is stopped and then started IMMEDIATELY, there will be instances still alive that are marked to stop because stopping (and starting) is somewhat time consuming.  If this happens, the PingDriver is doing Bad Math and mis-computing the number of actual instances alive, resulting in a negative number.  This has the ultimate effect of spawing double (or maybe more) instances.Fix is to take Math.max(0, instances) in the PingDriver.
issueID:UIMA-4253
type:Bug
changed files:
texts:DUCC&#39;s JP should manage user provided log4j configuration
User log4j configuration provided via -Dlog4j.configuration should not be available to Ducc container which is running in a dedicated Classloader separate from a user container. If the -D is provided, the code should save the configuration file and remove the property from System.properties before executing Ducc code. The code should restore log4j.configuration property before crossing ducc/user boundary while deploying and initializing analytics.
issueID:UIMA-4254
type:Bug
changed files:
texts:DUCC JPs log a msg when unable to access Broker credentials
Ducc's JPs, JDs, and services log the following message "Cannot access broker credentials file so will have restricted access". These processes run as users thus the above will always will be logged hinting that there is a serious problem when in fact there isnt.The message should only be logged by Ducc daemons like OR, WS, Agent, etc as this indicates mis-configuration.
issueID:UIMA-4255
type:Improvement
changed files:
texts:DUCC Web Server (WS) Service Details should include State of its instances and its Services dependencies
Under the Deployments tab for Service Details should be two new columns for State of instances and Services upon which there is dependency.
issueID:UIMA-4256
type:Improvement
changed files:
texts:DUCC: RM allow "hostile" jobs that don&#39;t share resources with others
Certain types of jobs will consume every processor on a host regardless of the memory assignment.  This update allows the declaration of a "hostile" flag in a FAIR_SHARE class definition that instructs the RM not to schedule other work on any processor with a job submitted to a hostile class.  If this is done, the full share count of each host is accounted under the user's fair-share allocation regardless of the memory declaration.
issueID:UIMA-4257
type:Bug
changed files:
texts:Ducc Agent is not handling OR purge request
When the RM purges a  JP, the OR marks such process as Stopped and sets Deallocated flag to true. The Agent receives the publication and uses OR supplied information to determine if it should stop the process. Since the OR marked the process as Stopped, the Agent does not bother to stop it since its state is already Stopped. Don't use OR provided state to make decisions in the Agent. The Agent maintains its own inventory of processes and this should be used to make lifecycle related decisions.
issueID:UIMA-4258
type:Improvement
changed files:
texts:DUCC: SM maintain constant instance ids
SM Should maintain constant instance IDs for service instances, and pass these IDs to the instances on startup.  This allows services with multiple instances to know "which" instance it is and adjust it's behaviour (such as which dataset to initialize from) accordingly.
issueID:UIMA-4259
type:Bug
changed files:
texts:Ducc&#39;s Agent should add cpu control group for processes it spawns
Ducc's agent currently assigns only memory control for a process launched into a CGroup container to enforce fair share use of memory. Extend this by adding a cpu control to make sure a single process (and its children) doesn't take more cpu than its fair share. Cgroups will allow a single process to use 100% of its CPU, but when another is started the cpu control group will reduce the allotment to 50%.
issueID:UIMA-426
type:Bug
changed files:uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/MultiPageEditor.java
texts:Component Descriptor Editor feature to edit parts which require other parts for context is broken - CDE wont start up
If you edit a type priorities file, it needs a type system for "context".  WHen you give it one, the editor throws an exception (Class Cast) and won't start.
issueID:UIMA-4260
type:Improvement
changed files:
texts:DUCC: RM Leave unpreemptable requests pending if can&#39;t be filled
RM should no longer refuse requests for un-fillable un-preemptable requests and instead leave them pending.  Use cases:1.  Multi-step experiments that include a number of short unpreemptable steps issued in parallel.  In this case it is known that all requests will be fulfilled within a reasonable time so they should not be refused.2.  Multiple cooperative schedulers.  In some scenarios DUCC may be able to request additional resources based on load; for example, in some cloud configurations.  In this case, we know the request may be fulfilled within a reasonable time.There are cases with no assurance that sufficient resources will be made available but in practice these are rare compared to the cases above.  In these cases human intervention will be necessary.
issueID:UIMA-4261
type:Bug
changed files:
texts:Partofneq does not match all annotations if created by exec action.
PARTOFNEQ is not able to match all annotations if the Annotations are created by external analysis engine. Here is an exampleENGINE TestAE;Document{-> EXEC(TestAE,{TestType})};(TestType{-> UNMARKALL(TestType)}){PARTOFNEQ(TestType)};The TestAE is generating 4 annotations for input test rebecca minkoff mini macrebecca minkoff mini mac -> TestTypeminkoff -> TestTypemini mac -> TestTypemac -> TestTypePARTOFNEQ is able to match only "minkoff" and "mini mac".It seems that  ExecAction is removing the Type form RutaBasic.partOf array at some point of the execution. After that in PartOfNeqCondition when  method check is executed  partOf variable is always false (see below source code). It is because the Type was removed previously from ruta basic.    boolean partOf = beginAnchor.isPartOf(t) || endAnchor.isPartOf(t);    if (!partOf) {      return false;    }
issueID:UIMA-4262
type:Improvement
changed files:
texts:DUCC CLI should make it easier to inherit environment variables
Currently env vars can only be inherited explicitly, e.g. by specifying FOO=${FOO}.  Add support for implicit inheritance by specifying a name without a value, or a wild-card name,  e.g. specifying FOO BAR* would indicate that the current settings for FOO and for all that start with BAR are to be inherited.
issueID:UIMA-4263
type:Bug
changed files:uimaj-core/src/main/java/org/apache/uima/analysis_engine/impl/AnalysisEngineManagementImpl.java
texts:thread safety problem in uimaj-core code causing occasional hang
The class AnalysisEngineManagementImpl (which implements JMX instrumentation) uses a static set to remember what names have been used for "root" MBeans.  Access to this set is not synchronized, so it's possible for two threads to try and simultaneously update this set.   Check for other static sets/maps with this problem, too.  Either convert this to a synchronized access, or use one of the concurrent maps/sets.
issueID:UIMA-4264
type:Bug
changed files:
texts:Ducc&#39;s JP should initialize AEs with a shared UIMA Resource Manager
Currently the JP container for pieces-n-parts jobs creates a new instance of UIMA ResourceManager in each thread which initializes AE. Change code to share a single instance of RM by all threads.
issueID:UIMA-4265
type:New Feature
changed files:
texts:Add warmup option to a UIMA-AS service instance
A UIMA-AS service capacity can be dynamically expanded by starting new instances to share the load. However, some analytics require a warm-up period to achieve desired latency; in this case adding a cold service instance to a collection of warm instances can temporarily degrade service performance.The request here is to add a warm-up option to UIMA-AS service startup. Warm-up CASes should be specified as a zipfile containing multiple CASes in either compressed XmiCas or binary compressed CAS formats, or a directory containing these zipfiles. The CASes would be run after the service annotator has initialized but before it registers as listener on the service input queue.
issueID:UIMA-4266
type:Bug
changed files:
texts:DUCC Orchestrator (OR) should treat ExceededErrorThreshold as User error
If a user has a JP that throws an error, such as NPE in the FlowController, it will be treated as ExceededErrorThreshold for the terminated JP.  Currently, the OR's Job reaper will not cancel the Job when the limit exceeds the process error limit.Fix is to include ExceededErrorThreshold as a user error, not a framework error, as it should be.
issueID:UIMA-4267
type:Bug
changed files:uimaj-core/src/main/java/org/apache/uima/internal/util/rb_trees/IntArrayRBTcommon.java
uimaj-core/src/main/java/org/apache/uima/internal/util/rb_trees/Int2IntRBT.java
uimaj-core/src/main/java/org/apache/uima/internal/util/rb_trees/IntArrayRBTcommon.java
texts:Int2IntRBT fails with ArrayIndexOutOfBounds exception
Int2IntRBT space allocation using the klrp mode has bad logic for expanding the values[] int array - it doesn't get called at the right times.  A user observed getting an array index out of bounds.  I put in a test case which added 6-7 million entries, and it failed after about 6.3 million.
issueID:UIMA-4268
type:Bug
changed files:
texts:DUCC should reject jobs with no descriptors or mutually exclusive ones
Jobs should have a DD or one or more of CM, AE, CC.  Restore code that checks if a DD specified as well as one of the others.
issueID:UIMA-4269
type:Improvement
changed files:uimaj-core/src/main/java/org/apache/uima/internal/util/UIMAClassLoader.java
uimaj-core/src/main/java/org/apache/uima/internal/util/UIMAClassLoader.java
texts:use clean way to set parallelCapable on UIMA Class Loader
The UIMAClassLoader has a complicated method of registering as parallel capable, because it previously had to "work" in pre-java 7.  Now that Java 7 is the prerequisite level, this code can be simplified.
issueID:UIMA-427
type:Bug
changed files:uimaj-tools/src/main/java/org/apache/uima/tools/cvd/MainFrame.java
uimaj-tools/src/main/java/org/apache/uima/tools/cvd/control/AnnotatorOpenEventHandler.java
texts:CVD throws NPE when descriptor file should be loaded
java.lang.NullPointerException at org.apache.uima.tools.cvd.MainFrame.loadAEDescriptor(MainFrame.java:511) at org.apache.uima.tools.cvd.control.AnnotatorOpenEventHandler.actionPerformed(AnnotatorOpenEventHandler.java:52) at javax.swing.AbstractButton.fireActionPerformed(AbstractButton.java:1815) at javax.swing.AbstractButton$ForwardActionEvents.actionPerformed(AbstractButton.java:1868)
issueID:UIMA-4271
type:Improvement
changed files:
texts:Deprecate unnecessary DUCC option classpath_order
Since DUCC 2.0 adds only one jar to the end of the user's classpath, no longer need the classpath_order option.
issueID:UIMA-4272
type:Bug
changed files:
texts:DUCC Web Server (WS) does not always give hover info for non-EndOfJob Reason on Jobs page
The getQuotedText() method should not return double quoted text.  That is, if the Rationale text is already quoted then no need to add them!
issueID:UIMA-4273
type:Improvement
changed files:
texts:Upgrade to UIMA-SDK 2.7.0
Upgrade to UIMA-SDK 2.7.0
issueID:UIMA-4274
type:Bug
changed files:
texts:Remove duplicate jars from build
No need for 2 user jars ... 2nd cli one could be manifest-only
issueID:UIMA-4275
type:Improvement
changed files:
texts:DUCC RM: Rework constraints on class usage
The current class constraints are per-allocation and not sufficiently constraining in that a user can dominate a cluster with many requests for non-preemptable shares.There are proposals for user-based limits (max allocations per user), group-based limits (group membership determines limits), and project-based limits (submission to authorized projects determines limits).The final decision is still open.  This JIRA will track progress and eventually, the implementation.2015-03-06Consulting with actual users, the preference is for user-based as it is simplest to understand and administer.  The current plan is to implement a "max GB per user by class" scheme where, if the class so designates, the maximum allocation per user for a class is configured. GB is to be the unit of allotment, as the unit "share" is variable by installation choice/need, and "process" is variable by hardware in a heterogeneous environment.  A user registry will allow overrides for designated users.  As well an class-inclusion mechanism is to be implemented which, if configured, will restrict use of classes to specific users.  If no limits or inclusion is configured for a class, all users will be permitted unrestricted access to the resources governed by the class.
issueID:UIMA-4276
type:Documentation
changed files:
texts:improvements to Ruta documentation
please find attached a diff for some improvements to the Ruta documentation.
issueID:UIMA-4277
type:Improvement
changed files:
texts:compress (ZIP) Ruta&#39;s MTWL
Ruta MTWL files are plaintext xml. They take a significant amount of space, and could be compressed quite drastically with zip
issueID:UIMA-4278
type:Bug
changed files:
texts:DUCC Job flow controller mishandles normal behavior with Workitem FS
One common use of the workitem CAS is to modify flow of the workitem CAS. Instead of returning it after the CM, sending it to the last component or to all remaining components. bug: if the Workitem FS is created but neither sendToAll or sendToLast features are set to true, the workitem CAS is sent back to the CM.
issueID:UIMA-4279
type:Improvement
changed files:uimaj-core/src/main/java/org/apache/uima/cas/impl/CommonAuxHeap.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/Heap.java
uimaj-core/src/main/java/org/apache/uima/internal/util/IntArrayUtils.java
uimaj-core/src/main/java/org/apache/uima/internal/util/IntVector.java
uimaj-core/src/main/java/org/apache/uima/internal/util/rb_trees/IntArrayRBTcommon.java
texts:tune space-time tradeoffs for internal array structures in core uima
Several internal array structures in UIMA expand like array lists by doubling, up to some size, usually 2 million entries, and then expand by adding that size (e.g., 2 million) instead of doubling.  The switch-over point for most of these is 2 million entries.   Increasing this makes (for large allocations > 2 million) for more wasted space, since, on average, about 1/2 of the last reallocation may be unused  On the other hand, having a large allocation size increment means that fewer reallocations are needed (each one requires copying the entries from the old into the new, usually with System.arraycopy).Given the drop in memory cost, increase the reallocation switch-over limit for the 2 million entries to 16 million, to rebalance a bit more in favor of speed vs memory.  Note this has no effect except when the size of these internal tables grows beyond 2 million entries.
issueID:UIMA-428
type:Bug
changed files:
texts:swig_type_info problem in Pythonnator
I get the following error when I try to make pythonnator:g++ -Wall -x c++ -DDEBUG -g -fno-inline -fno-default-inline -fPIC -I/home/andrew/uima/uimacpp/include -I/home/andrew/uima/uimacpp/include/apr-1 -I/home/andrew/uima/uimacpp/include/apr-0 -g -I/usr/include/python2.4 -DSWIG_GLOBAL -DSWIG1_3_31 -DPYTHONLIBRARYNAME=\"libpython2.4.so\" -DPYTHON2_4 -Wno-deprecated -c pythonnator.cpppythonnator.cpp:73: error: ISO C++ forbids declaration of `swig_type_info' with no typepythonnator.cpp:73: error: expected `;' before '*' tokenpythonnator.cpp: In member function `virtual uima::TyErrorId Pythonnator::initialize(uima::AnnotatorContext&)':pythonnator.cpp:88: error: `swig_type_info' was not declared in this scopepythonnator.cpp:88: error: `ac_type' was not declared in this scopepythonnator.cpp:192: error: `swig_module_info' was not declared in this scopepythonnator.cpp:192: error: `module' was not declared in this scopepythonnator.cpp:192: error: `SWIG_Python_GetModule' was not declared in this scopepythonnator.cpp:199: error: `ts_type' was not declared in this scopepythonnator.cpp:199: error: `SWIG_TypeQueryModule' was not declared in this scopepythonnator.cpp:211: error: `cas_type' was not declared in this scopepythonnator.cpp:223: error: `rs_type' was not declared in this scopepythonnator.cpp:235: error: `SWIG_Python_NewPointerObj' was not declared in this scopepythonnator.cpp:235: warning: unused variable 'SWIG_Python_NewPointerObj'pythonnator.cpp:88: warning: unused variable 'swig_type_info'pythonnator.cpp:192: warning: unused variable 'swig_module_info'pythonnator.cpp:192: warning: unused variable 'SWIG_Python_GetModule'pythonnator.cpp: In member function `virtual uima::TyErrorId Pythonnator::typeSystemInit(const uima::TypeSystem&)':pythonnator.cpp:289: error: `ts_type' was not declared in this scopepythonnator.cpp:289: error: `SWIG_Python_NewPointerObj' was not declared in this scopepythonnator.cpp:289: warning: unused variable 'ts_type'pythonnator.cpp:289: warning: unused variable 'SWIG_Python_NewPointerObj'pythonnator.cpp: In member function `virtual uima::TyErrorId Pythonnator::process(uima::CAS&, const uima::ResultSpecification&)':pythonnator.cpp:362: error: `cas_type' was not declared in this scopepythonnator.cpp:362: error: `SWIG_Python_NewPointerObj' was not declared in this scopepythonnator.cpp:372: error: `rs_type' was not declared in this scopepythonnator.cpp:362: warning: unused variable 'cas_type'pythonnator.cpp:372: warning: unused variable 'rs_type'make: *** &#91;pythonnator.o&#93; Error 1
issueID:UIMA-4280
type:Improvement
changed files:
texts:testing utility MultiTrheadUtils not getting intended parallelism
The MultiThreadUtils routine in the core UIMA testing code is intended to run multiple threads of tests in parallel.  It was doing this by creating some number of threads, and starting them.  The intent was that these threads run together, and experience some contention.When measured on a 2 GHz Intel i7 Windows machine, the time to start the thread seemed to be about 1 millisecond.  Which meant that unless the test took longer than a millisecond, no contention would happen.  Change this to have the threads all "started", but then wait for a "go" notification, given after all threads have completed their startup.
issueID:UIMA-4281
type:Improvement
changed files:uimaj-core/src/main/java/org/apache/uima/cas/impl/CommonAuxHeap.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/Heap.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/ByteHeap.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/CASImpl.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/CommonAuxHeap.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/Heap.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/LongHeap.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/ShortHeap.java
texts:Gradually shrink internal core arrays on reset actions
Many internal core data structures composed of arrays (typically of ints) expand as needed while running.  When a reset event occurs (e.g., cas.reset()), many of these are cleared, but not "shrunk".  So the effect of running, say, one Document which is very large might cause many internal data structures to expand, and from then on consume potentially large but unused space.  This isn't too bad an issue with modern OSs; except for movement in the heap, it would be expected that the pages containing the unused space would gradually be paged out.Nevertheless, it would be good to gradually shrink these spaces back down after some peak.  The shrinkage should be gradual, to avoid needing to expand the arrays too often.  I think a good rule of thumb would be to remember one previous size, and to shrink only if both previous sizes were small enough to be contained in 1 size shrinkage.This should reduce oscillating back and forth around a particular size, while recovering space over many "resets" from an early abnormal expansion.I'm thinking that the 1 size shrinkage algorithm should run the expansion algorithm backwards - that is, in many of our data structures, expand by doubling up to some switch point, and then expand linearly by adding.
issueID:UIMA-4282
type:Improvement
changed files:uimaj-core/src/main/java/org/apache/uima/cas/impl/FSIndexRepositoryImpl.java
unused-saved/src/org/apache/uima/jcas/impl/CASMetadata.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/TypeSystemImpl.java
texts:Speeding up set iterators
It is now trivially possible to speed up UIMA Set iterators which are iterating over a Type have subtypes, by changing the interator from one which is constantly computing the "next" element by looking at the sort order the current iterator and other iterators over other (sub)Types, to one which simply returns all the elements of 1 (sub)type, and then goes on to the next (sub)type.This would be a behavior change, in that elements returned would no longer be in a sort order.  However Set Indexes are documented to not have an "order" (see section 2.4.1.5 in the UIMA Reference, where it says:  "Set indexes do not enforce ordering, but use defined keys to specify equivalnce classes; addToIndexes will not add a Feature Structure to a set index if its keys match those of an entry already in the index."If users accidentally rely on sorted ordering among a Type and its subtypes for sets, then this change will violate that constraint.  If many people use this current property of UIMA Sets, it may not be a good thing to do this change.
issueID:UIMA-4283
type:Improvement
changed files:uimaj-core/src/main/java/org/apache/uima/cas/impl/FSIndexRepositoryImpl.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/BinaryCasSerDes6.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/BinaryCasSerDes4.java
texts:tuning Binary Compressed Cas
Measurements are showing some tuning is needed in buffer sizes for the binary compressed serialization/deserialization code.  Reducing one buffer from a max of 32k to 1k showed a speed up in deserialization of more than 2.5 x using an IBM JVM on an Intil i7 with 128K L1; using a Oracle JVM - there was a minor speedup.  This effect appears to be due to L1 cache flushing/dumping. Check and tune both form 4 and 6.
issueID:UIMA-4284
type:Bug
changed files:
texts:DUCC Web Server (WS) displays 2 entries on the Machines page for the same machine?
Both have identical names, but one is "defined" with a blank IP address.The WS should list both machines if the name for each is the same but the IP is different, unless the IP is blank - as is the case for a defined but not yet reporting machine.
issueID:UIMA-4286
type:Improvement
changed files:
texts:Ruta: HTMLConverter: Option to convert tags outside body tags
The HTML converter only converts tags that are found inside the body tag. Therefore some information carrying tags like citations get left out when applying the converter to XML articles with many metadata. It would be useful to add the option to have all tags converted since this would allow content outside the body to be parsed by natural language analysers as well.The converter was originally, as the name implies, conceived for HTML documents but together with the HTML Annotator it can this way be more generally useful in enabling NL parsing of a broader class of documents such as articles stored in XML documents.An example of how this option might work can be given by disabling the "inBody"-flag inside the HTMLConverterVisitor. The example also illustrates what offsets to apply to such annotations but otherwise the document annotation offsets can be used. Empty tags can still be ignored but tags with only attributes and no content should preferably be converted.Experiments with disabling the "in body"-constraint reveals that there will be an additional need to separate the content metadata tags in the converted text view. An NL parser reading the text will in many case read different tags as one word or one sentence, which is not desirable. Some text delimiter should therefore be inserted between tags were required, which optionally could be customizable as well.
issueID:UIMA-4287
type:New Feature
changed files:
texts:Ruta: improve handling of IDE in foreign environments
Improve the IDE functionality in order to work also in environments that are not ruta projects. It would be nice if the at least some functionality is also available in plain java projects without adding the ruta nature and its folder structure.
issueID:UIMA-4288
type:Bug
changed files:
texts:Cleanup Ducc code to remove warnings
Remove unused imports and variables
issueID:UIMA-4289
type:Task
changed files:
texts:Update DUCC sample applications for v2.0
The DUCC application depends on the DUCC flow controller type system. The XML file name for the type system was changed for DUCC v2.0 and this change has to be reflected in the sample application component descriptors.Also,  a threading bug was found in core UIMA's PEAR classpath encapsulation when external resources are used by PEAR components. Since this true for OpenNLP, the multithreaded DUCC sample application will stop using the PEAR descriptor.
issueID:UIMA-429
type:Bug
changed files:uimaj-tools/src/main/java/org/apache/uima/tools/cvd/MainFrame.java
uimaj-tools/src/main/java/org/apache/uima/tools/cvd/control/SofaSelectionListener.java
texts:Running an AE in CVD resets the document text (making it scroll to the end).

issueID:UIMA-4290
type:Task
changed files:
texts:DUCC: testing, clean up xml, add 1.dd.job
Testing XML has invalid delegate for DD tests.  Service deployment has mismatched caspool and thread count.  Include 1.dd.job in sample dir.
issueID:UIMA-4291
type:Bug
changed files:
texts:DUCC JP should stop polling thread after AEs initialize
The JP starts a polling thread to watch for AE state transition from Initializing to Running. Once this transition happens, the polling thread is no longer needed. Shutdown the thread when AEs initialize.
issueID:UIMA-4293
type:Improvement
changed files:
texts:DUCC Web Server (WS) reservation request improvements
When requesting a reservation (for a machine) from the Reservations page via the Request button:1) Remove number of instances as an option.  It should always be 1.2) Only display (and thus allow) type=reserve for scheduling classes3) Dynamically determine available "instance memory size" list
issueID:UIMA-4294
type:Bug
changed files:
texts:Ruta: Assignment of string list to StringArray in configuration parameters in CONFIGURE action
The assignment of string lists to StringArrays in the configuration parameters in the CONFIGURE action does not work.
issueID:UIMA-4296
type:Task
changed files:
texts:Upgrade Ruta to UIMA 2.7.0
Upgrade Ruta to UIMA 2.7.0
issueID:UIMA-4297
type:Improvement
changed files:
texts:Services registered prior to DUCC 2.0 should have UIMA jars added
Can be handled in CliFixups
issueID:UIMA-4298
type:Bug
changed files:
texts:Update docs for DUCC 2.0

issueID:UIMA-4299
type:Improvement
changed files:uimaj-core/src/main/java/org/apache/uima/cas/impl/DoubleArrayFSImpl.java
uimaj-core/src/main/java/org/apache/uima/jcas/impl/JCasImpl.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/MethodHandlesLookup.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FSIndexRepositoryImpl.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FSGenerator.java
unused-saved/src/org/apache/uima/cas/impl/AnnotationIndexImpl.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/LowLevelCAS.java
uimaj-core/src/main/java/org/apache/uima/cas/CAS.java
uimaj-core/src/main/java/org/apache/uima/jcas/tcas/Annotation_Type.java
uimaj-core/src/main/java/org/apache/uima/cas/FSIndexRepository.java
uimaj-core/src/main/java/org/apache/uima/cas/text/AnnotationIndex.java
uimaj-core/src/main/java/org/apache/uima/jcas/impl/JFSIndexRepositoryImpl.java
uimaj-core/src/main/java/org/apache/uima/cas/text/AnnotationTree.java
unused-saved/src/org/apache/uima/jcas/impl/CASMetadata.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/ByteArrayFSImpl.java
uimaj-core/src/main/java/org/apache/uima/impl/UimaContext_ImplBase.java
uimaj-core/src/main/java/org/apache/uima/jcas/JCasRegistry.java
uimaj-core/src/main/java/org/apache/uima/jcas/JFSIndexRepository.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/BooleanArrayFSImpl.java
uimaj-core/src/main/java/org/apache/uima/jcas/impl/JCasHashMap.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/SofaFSImpl.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/CASImpl.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/IntArrayFSImpl.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/StringArrayFSImpl.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/AnnotationBase_Type.java
uimaj-core/src/main/java/org/apache/uima/resource/metadata/impl/MetaDataObject_impl.java
uimaj-core/src/main/java/org/apache/uima/resource/impl/CasManager_impl.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FSClassRegistry.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/Subiterator.java
uimaj-core/src/main/java/org/apache/uima/resource/metadata/impl/TypePriorityList_impl.java
uimaj-core/src/main/java/org/apache/uima/impl/Util.java
uimaj-core/src/main/java/org/apache/uima/jcas/JCas.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/LongArrayFSImpl.java
texts:improve generics for UIMA indexes and iterators
When the JCas is being used, there are Java classes for UIMA types.  Each index definition is associated with a top-most type in the type hierarchy.Indexes are used to create iterators of various kinds; some of these iterators are defined within classes which implement Iterable.  Add generic mechanisms to the Indexes and iterators to support Iterables whose elements are JCas types. Update the APIs that get indexes over particular types to allow specifying those types by the type class, and use this for generic typing, so casts are not necessary for user code.Make the generics work also when JCas is not in use.
issueID:UIMA-43
type:Bug
changed files:uimaj-core/src/main/java/org/apache/uima/pear/tools/InstallationProcessor.java
texts:The &#39;;&#39; path separator char is not  replaced with OS dependent char in installed PEAR
The 'universal' path separator character is not replaced with OS dependent character during PEAR package installation. Need to replace chars in the org.apache.uima.pear.tools.InstallationProcessor.substituteStringVariablesInAction() method.
issueID:UIMA-430
type:Bug
changed files:
texts:CAS Editor test case fails
The following test cases fails in my workspace:testSerializeAndCreate(org.apache.uima.caseditor.core.model.dotcorpus.DotCorpusSerializerTest)testEquals(org.apache.uima.caseditor.core.model.dotcorpus.AnnotationStyleTest)
issueID:UIMA-4300
type:Improvement
changed files:
texts:Java 8 support in maven-uimafit-plugin
uimafit-maven-plugin chokes on some Java 8 constructions:[ERROR] Failed to execute goalorg.apache.uima:uimafit-maven-plugin:2.1.0:enhance (default) on projectde.tudarmstadt.ukp.dkpro.core.mallet-asl: Execution default of goalorg.apache.uima:uimafit-maven-plugin:2.1.0:enhance failed:java.io.IOException: invalid constant type: 18 at 291 -> [Help 1]Upgrading to a new javassist version helps.Workaround right now:<plugin>  <groupId>org.apache.uima</groupId>  <artifactId>uimafit-maven-plugin</artifactId>  <version>2.1.0</version>  <dependencies>    <dependency>      <groupId>org.javassist</groupId>      <artifactId>javassist</artifactId>      <version>3.19.0-GA</version>    </dependency>  </dependencies></plugin>
issueID:UIMA-4301
type:Bug
changed files:
texts:UIMAJ Javadocs Jenkins build failing
The new generic code makes use of the "diamond" operator, which is valid in Java 7 but not in Java 5.  Jenkins build (only?) seems to run a Javadoc goal with the execution id of "default-cli".  Normal maven build does not run this goal... The parent pom had been updated to specify source level 7 but not for the execution id of default-cli.  Add this configuration as a work-around to get the Jenkins build to work.
issueID:UIMA-4302
type:Bug
changed files:
texts:Support pre DUCC 2.0 applications referencing the old typesystem descriptor
Preserve a copy of the flow controller typesystem under the old name for backward compatibility
issueID:UIMA-4303
type:Bug
changed files:
texts:DUCC Web Server (WS) fix NPE
Fix NPE for legacy Job work items.24 Mar 2015 13:14:18,171 ERROR WS.DuccHandler - N/A handlejava.lang.NullPointerException        at org.apache.uima.ducc.transport.event.common.DuccProcessWorkItems.getSecsAvg(DuccProcessWorkItems.java:147)        at org.apache.uima.ducc.ws.server.DuccHandler.buildJobProcessListEntry(DuccHandler.java:1149)        at org.apache.uima.ducc.ws.server.DuccHandler.handleDuccServletJobProcessesData(DuccHandler.java:1508)        at org.apache.uima.ducc.ws.server.DuccHandler.handleDuccRequest(DuccHandler.java:4644)        at org.apache.uima.ducc.ws.server.DuccHandler.handle(DuccHandler.java:4856)        at org.eclipse.jetty.server.handler.HandlerList.handle(HandlerList.java:47)        at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:110)        at org.eclipse.jetty.server.Server.handle(Server.java:346)        at org.eclipse.jetty.server.HttpConnection.handleRequest(HttpConnection.java:589)        at org.eclipse.jetty.server.HttpConnection$RequestHandler.headerComplete(HttpConnection.java:1048)        at org.eclipse.jetty.http.HttpParser.parseNext(HttpParser.java:601)        at org.eclipse.jetty.http.HttpParser.parseAvailable(HttpParser.java:214)        at org.eclipse.jetty.server.HttpConnection.handle(HttpConnection.java:411)        at org.eclipse.jetty.io.nio.SelectChannelEndPoint.handle(SelectChannelEndPoint.java:535)        at org.eclipse.jetty.io.nio.SelectChannelEndPoint$1.run(SelectChannelEndPoint.java:40)        at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:529)        at java.lang.Thread.run(Thread.java:780)
issueID:UIMA-4304
type:Bug
changed files:
texts:DUCC Orchestrator (OR) should no longer employ ducc.rm.state.publish.rate
Fix NPE in OR when ducc.rm.state.publish.rate is not specified in ducc.properties.  It is obsolete.
issueID:UIMA-4305
type:New Feature
changed files:
texts:Ruta HtmlConverter: add regexp pattern for newline inducing tags
Ruta HtmlConverter: add regexp pattern for newline inducing tags. Do not forget to update the documentation.
issueID:UIMA-4306
type:Bug
changed files:
texts:DUCC Job Driver (JD) does not flush investment reset info to disk
WorkItemStateKeeper investmentReset() not flushing to disk.
issueID:UIMA-4307
type:Bug
changed files:
texts:DUCC Job Driver (JD) must consider current Job state when evalutating initialization errors
Jobs that are already initialized are exempt from being killed when the initialization error limit threshold is met.  Instead, these jobs should be prevented from further expansion.The 2.0 JD fails to consider the Job's current state (e.g. Initializing vs. Active) when evaluating initialization errors, and thus it incorrectly kills Active Jobs that have crossed the initialization error threshold.
issueID:UIMA-4309
type:Improvement
changed files:
texts:DUCC: SM track time of last good ping and last process Running
Have SM track date of last good ping and last time at least one of the instances is in state Running.Use cases: Sometimes services will be registered and started with bad pingers, and then used without declaring dependencies.  This is an acceptable use case but if the pinger isn't working, it looks like the service is broken.  If we can tell at a glance there is at least one Running process we can better assess if the service is viable.Similarly, if the system glitches and causes service processes to die and the service to become Disabled, we can look at the last viable ping date and automate restarting services that were known to have been recently working.
issueID:UIMA-431
type:Bug
changed files:
texts:Cas Editor: Select all button in the outline view does not work
The Select All Button in the Annotation editors outline view only selects one element in the list.
issueID:UIMA-4310
type:New Feature
changed files:
texts:Ruta: implicit action for variable assignments
Ruta: string concatenations with implicitly matched feature values.Example: CW{-> var1 = var2 + " with text " + CW.ct};
issueID:UIMA-4311
type:Improvement
changed files:
texts:DUCC Job Driver (JD) clean-up Junits
Some Junit tests are too verbose and some show exceptions, even though the tests do not fail.
issueID:UIMA-4312
type:New Feature
changed files:
texts:Ruta: allow both types of inlined rules at the same rule element
Allow both types of inlined rules at the same rule element.
issueID:UIMA-4313
type:Bug
changed files:
texts:DUCC Job Driver (JD) sometimes fails to cancel timers for Ack/End
When a work item ends due to normal completion or exception, the JD proceeds to cancel the corresponding Ack/End timer.  Unfortunately if a JP is preempted or autonomously ends the timer is not reclaimed (hence, the bug).  When the number of these non-reclaim events gets large, the potential exists for JD to go OOM.
issueID:UIMA-4314
type:Bug
changed files:
texts:DUCC Web Server (WS) sometimes fails to display data in a Job Details work items tab
JD maintains 3 files relative to work items: zip, active, and completed.  only zip exists for a Job that completes normally.  active comprises work items in progress, and completed comprises work items that have been processed. once Job completes, these latter two are replaced by the zip file.during processing, it may be the case that there are no active work items but the job is not yet completed.  in this case there may not be an active file, and WS is presently not expecting.fix is to teach WS that not having an active work items file is perfectly OK.
issueID:UIMA-4315
type:Bug
changed files:
texts:Ruta: block extensions break explanation
Ruta: block extensions, e.g. ONLYONCE, break explanation of the rule inference. There is no information after the additional block construct.
issueID:UIMA-4316
type:Bug
changed files:
texts:Ruta: Missing error for undefined variable in ASSIGN action
Ruta: Missing error for undefined variable in ASSIGN action
issueID:UIMA-4317
type:Bug
changed files:
texts:Ruta: problem in parsing a complex rule - repetetive NPEs
This rule causes problems (no idea yet why):(MetaDaten{-PARTOF(LawChapter)}<-{GliederungsBezug{-> ASSIGN(chapterString, GliederungsBezug.ct)};} TextDaten?    (MetaDaten<-{GliederungsBezug.ct==chapterString;} TextDaten?)*)    {-> CREATE(LawChapter, "name" = chapterString)};
issueID:UIMA-4318
type:Bug
changed files:
texts:DUCC Job Driver (JD) reduce storage (mis-)use
There are opportunities to reduce JD's use of memory, at least one of which is a leak.
issueID:UIMA-4319
type:Bug
changed files:
texts:Ruta: can&#39;t assign annotation feature values in CREATE actions
Ruta: can't assign annotation feature values in CREATE actionsExample:ILawCitation{-> CREATE(LawCitation, "code" = ILawCitation.code,     "chapter" = ILawCitation.lm.chapter, "section" = ILawCitation.lm.section)};
issueID:UIMA-432
type:Bug
changed files:
texts:CAS Editor annotation style property page show not all annotations
The annotation style property page does not show all annotations.
issueID:UIMA-4320
type:New Feature
changed files:
texts:Ruta: maven plugin for building twl/mtwl files
Ruta: maven plugin with building twl/mtwl files.
issueID:UIMA-4321
type:Bug
changed files:
texts:DUCC should not retry JPs forever when the JP framework fails
Job 235131 had a large string of JPs fail (when the JD OOM'd) with:HttpWorkerThread.run() I/O exception (org.apache.commons.httpclient.NoHttpResponseException) caught when processing request: The server 192.168.3.77 failed to respondFor the short-term we should count this as a Croak (i.e. an unexpected termination that DUCC didn't request), even though it is not caused by user error, so that the users's process_failures_limit can eventually end the job.Perhaps we need a "framework_failures_limit" in ducc.properties for errors caught in the ducc-side JP code as opposed to errors caught in user code.
issueID:UIMA-4322
type:Bug
changed files:
texts:Hide warning message about undefined DUCC_SERVICE_INSTANCE
Since the special DUCC_SERVICE_INSTANCE environment variable set by the SM should ALWAYS be undefined if used when registering a service, hide the warning about it.  Should perhaps treat this explicitly but for now simply hide messages about the always-propagated variables.
issueID:UIMA-4323
type:Bug
changed files:
texts:DUCC Orchestrator (OR) leaks storage slowly
Dump shows that Orchestrator is leaking Job Driver publications.OR keeps JD pubs in a map.  This was introduced in 2.0 and there is no good reason to do this.  The only information fetched from these kept pubs are related to work items: total, done, error.  This info can easily be kept in the DuccWorkJob instead.
issueID:UIMA-4324
type:Improvement
changed files:
texts:DUCC RM: Better control over nodepool search for open resource
For the moment - implement search-order keyword in the nodepool configuration, to be used as a tie-breaker when trying to find a good candidate nodepool for the next share assignment.This isn't the best way to solve this; instead we want RM to do some reasoning and work it out automatically.  This update is a short-term fix and will be replaced after a bit of research into how best to automate the solution.
issueID:UIMA-4325
type:Bug
changed files:
texts:DUCC Web Server (WS) remove db daemon from Daemons page display
See summary.
issueID:UIMA-4326
type:Improvement
changed files:
texts:DUCC SM: Add multiple retry to saving meta files
Despite much error checking and handling, a flaky file system can leave the service .meta files missing or corrupt.  This update adds retry to the update process to attempt to get past temporary errors.
issueID:UIMA-4327
type:Bug
changed files:
texts:DUCC RM: RM should not reallocate some shares when they exit.
If a non-job non-preemptable share should die RM should not reallocate new resources for the job.This used to be handled under the all-or-nothing policy but elimination of that precondition has exposed this problem.
issueID:UIMA-4328
type:Bug
changed files:
texts:DUCC Orchestrator (OR) miscalculates volunteerability
A cut and paste error results in Orchestrator miscalculation of when to volunteer unnecessary JPs.
issueID:UIMA-433
type:Bug
changed files:
texts:CAS Editor changing documents does not always sets dirty flag
Open/Close documents and change them. After a while chaning documents does not work correctly.
issueID:UIMA-4330
type:Improvement
changed files:
texts:Simplify Ducc Agent process state management
If a process terminates unexpectedly, the Agent should set its state to STOPPED and also set the reason to CROAKED. This applies to JP, JD and a Service. The APs are excluded from this and will never be marked CROAKED. These are arbitrary processes that may exit at any time for whatever reason. For them the status will be STOPPED and reason will be blank.
issueID:UIMA-4332
type:Bug
changed files:
texts:Job process termination on Java Exception should be an option
In DUCC v1.x any uncaught exception thrown in user's Job Process code causes the JP to be terminated and any other work items concurrently being processed in the JP to be resubmitted. In the DUCC v2 design the decision can and should be moved to the job's error handler running in the Job Driver.
issueID:UIMA-4333
type:Bug
changed files:
texts:DUCC Job Driver (JD) CasManager messages should be debug level
See summary.
issueID:UIMA-4334
type:Bug
changed files:
texts:DUCC Job Driver (JD) should count timeouts as "retry" not "preempt"
See summary.
issueID:UIMA-4335
type:Bug
changed files:
texts:DUCC CLI Monitor (CLI) has out-of-order messages
1. discard "remote"2. replace with "Assigned"degenaro@uima-ducc-vm:~/hello$ java-viaducc Hello/home/degenaro/ducc/versions/apache-uima-ducc-2.0.0-SNAPSHOT/bin/ducc_process_submit --attach_console --process_memory_size 15 --scheduling_class fixed --description java-viaducc --wait_for_completion --cancel_on_interrupt --working_directory /home/degenaro/hello --process_executable /home/degenaro/local/sun/jdk1.7.0_45/bin/java --process_executable_args "'Hello'"Managed Reservation 23 submitted.id:23 location:31712@uima-ducc-vmid:23 state:WaitingForResources&#91;1&#93; Helloid:23 state:Runningid:23 remote:31980@uima-ducc-demo-4id:23 state:Completedid:23 rationale:code=0id:23 rc:0
issueID:UIMA-4336
type:Bug
changed files:
texts:DUCC CLI: Different results with different JRE
So far this only affects the service API/CLI, perhaps because it is more complex than the others.The net is the API produces ClassNotFound exceptions under Oracle 1.7 JREs and later, but work in all other (IBM and Apple-supplied JREs of all tested vintages).Everything works under IBM JREs but the fields that are initialized by initializes in the declarations in the returned objects are initialized a bit differently; in particular, at least one string field is initialized to null despite being declared like this:String foo = "N/A";  If the field is updated as part of executing the CLI in the SM it is returned correctly.Only the query was working in the Oracle JREs.  Other SM APIs returned ClassNotFound for the base class returned by the query that works!An older JRE produced by Sun works the same as the IBM JRE.I believe this is a discrepancy and possibly a bug in the Oracle JREs.The "solution" was not to change the DUCC classloader but instead to declare the returned API objects to look fully like Java Beans with no-parameter constructors and getter/setter methods.  It's unclear why this matters but any port in a storm ...
issueID:UIMA-4339
type:Bug
changed files:
texts:DUCC Job Driver (JD) should count work item EndTimeout as "error" not "retry"
See summary.
issueID:UIMA-434
type:Bug
changed files:
texts:CAS Editor add icons
Add icons to the cas editor
issueID:UIMA-4340
type:Bug
changed files:uimaj-core/src/main/java/org/apache/uima/cas/impl/Subiterator.java
texts:more moveTo(FeatureStructure) failing to go to left-most equal one
Previous fixes have corrected implementations of moveTo(fs) to move to the left-most of potentially many Feature Structures that match "equal" using the index comparator.  I found some others where this is missing: in the Subiterator and UnambigiousIterator mplementations.
issueID:UIMA-4341
type:Bug
changed files:
texts:DUCC Job Driver (JD) should not piggyback writing of work item state on Get/Ack requests
JD is unable to supply WIs at a very high rate due to piggybacking of WI state persisting during Get request.
issueID:UIMA-4342
type:Bug
changed files:
texts:Testing utility MultiThreadUtils has sync hole
I observed occasional failures of tests using the MultiThreadUtils driver.  This was traced to an impl which had two adjacent sync blocks, and the failure happened when another thread ran inbetween these, and changed a state variable.  Fix is to have just one sync block (combine the two).
issueID:UIMA-4343
type:Improvement
changed files:
texts:Testing uses cas compare function, make this order independent
Some tests compare two CASes for (approximate) equality, but the compare requires the items in the CASes be in the same "order".  Newer iterator implementations of bag and sets no longer necessarily preserve ordering, so the compare may fail even though the CASes contain the same FeatureStructures.  Improve the CAS compare test to permit comparing equal without needing the same ordering.Remove extra test class CasComparerViewChange, have its 2 users directly call the compare function.
issueID:UIMA-4344
type:Improvement
changed files:uimaj-core/src/main/java/org/apache/uima/cas/impl/CASImpl.java
texts:add a simple internal cas id and cas reset tracing
For debugging, add a simple cas id - a global / static incrementing int, and a cas reset counter, and a trace of cas reset that shows the id, the reset number, and the thread name doing the reset.
issueID:UIMA-4345
type:Improvement
changed files:uimaj-core/src/main/java/org/apache/uima/cas/impl/FSIndexRepositoryImpl.java
unused-saved/src/org/apache/uima/jcas/impl/CASMetadata.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/TypeSystemImpl.java
texts:change iterators over sets to not do the order-preserving between types/subtypes
Iterators over "Set" indexes are defined to not have an ordering. The current iterators do potentially a lot of unneeded extra work to preserve an ordering among types and subtypes.  Change the impl to remove this.We might need a configuration flag to back out this change, for some users who accidentally "depend" on this ordering (for backwards compatibility - migration).
issueID:UIMA-4346
type:Bug
changed files:
texts:JP should not croak when no more work-items available
Currently sends an Ack even when no WI in the Get & crashes when debug logging
issueID:UIMA-4347
type:Bug
changed files:
texts:JD should tell JP when an Ack arrives late
JP should discard WI if Ack reply indicates that the Ack was too late.  When the JD took > 2min to return the Ack the JP didn't timeout ... since the JP is meant to retry the Ack at least once perhaps the JD & JP should have a similar value for the timeout ... perhaps JP's should be longer so the JD doesn't have 2 outstanding Acks.
issueID:UIMA-4348
type:Bug
changed files:
texts:asfext:PMC should be asfext:pmc in uima.rdf
while working on https://projects-new.apache.org/, I came across a little typo in http://svn.apache.org/repos/asf/uima/site/trunk/uima-website/docs/doap/uima.rdf<asfext:PMC rdf:about="UIMA"> should be <asfext:pmc rdf:about="UIMA">(I'm not a rdf expert, but lowercase is the way it is used in every other ASF project, and having it uppercase is causing some issues when parsing)thanks in advance
issueID:UIMA-4349
type:Bug
changed files:
texts:DUCC&#39;s daemons should normally log at info level
"debug" should ideally be reserved for extra logging when a user reports a problem
issueID:UIMA-435
type:Bug
changed files:
texts:Update runtime plugin manifest package list for CVD package name change
Eclipse PDE shows an error in uimaj-ep-runtime because the manifest includes package  org.apache.uima.tools.annot_view.ts_editor, which doesn't exist.  This should be removed and the new cvd packages added.
issueID:UIMA-4350
type:Bug
changed files:
texts:ducc_post_install fails if a jvm is not found
Script uses an undefined variable.  Prompt should say "java executable" instead of "java binary directory"
issueID:UIMA-4352
type:Bug
changed files:unused-saved/src/org/apache/uima/internal/util/ComparableIntPointerIterator.java
uimaj-core/src/main/java/org/apache/uima/internal/util/rb_trees/CompIntArrayRBT.java
uimaj-core/src/main/java/org/apache/uima/internal/util/rb_trees/Int2IntRBT.java
uimaj-core/src/main/java/org/apache/uima/internal/util/rb_trees/IntArrayRBT.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FSIteratorImplBase.java
unused-saved/src/org/apache/uima/jcas/impl/CASMetadata.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FSIndexRepositoryImpl.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/TypeSystemImpl.java
uimaj-core/src/main/java/org/apache/uima/internal/util/rb_trees/IntArrayRBTcommon.java
texts:index contains and find methods incorrect when index type has subtypes
The Javadocs in FSIndex (the general interface for UIMA index implementations) has two methods, contains(FeatureStructure) and find(FeatureStructure), which state the obvious definition.  UIMA Indexes are over some Type and its subtypes.  The current implementation of these methods only check the topmost Type of that index, and ignore subtypes.  So, for instance, if you have an index over type T, and add-to-indexes a subtype of T, and then ask if the index contains that one, implementation only checks the top-most "type", and incorrectly returns false.  Find also fails in the same way.
issueID:UIMA-4353
type:Bug
changed files:
texts:DUCC Orchestrator (OR) should disregard inventory for Stopped processes
If Agent reports faulty information after a process has stopped, this could cause Orchestrator to record such, resulting in the Web Server displaying such.  One possibility is that at Stopped process may continue to seem to accumulate Runtime on the Processes tab of the Job Details page.
issueID:UIMA-4354
type:Bug
changed files:
texts:Fix problems found in stress test with ~5000 active work items
Adjust the number of Jetty server threads and timeouts to avoid Get & Ack timeouts.
issueID:UIMA-4355
type:Bug
changed files:
texts:DUCC Apache Live Demo purposeful errors not occurring?
Fix Jobs 4,5,6 to use AE_RUNTIME_ERROR=<percentage>
issueID:UIMA-4356
type:Improvement
changed files:uimaj-core/src/main/java/org/apache/uima/cas/impl/FSIndexRepositoryImpl.java
unused-saved/src/org/apache/uima/jcas/impl/CASMetadata.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/TypeSystemImpl.java
texts:Simplify iterators over types and subtypes by omitting empty subtypes
Iterators over types and their subtypes currently assemble together multiple iterators, one for each type/subtype, and iterate them together.  For cases where there are potentially 100's or 1000's of subtypes, most of which are "empty", this overhead can be reduced by skipping at iterator creation time the empty ones.
issueID:UIMA-4357
type:Improvement
changed files:uimaj-core/src/main/java/org/apache/uima/cas/impl/FSIndexRepositoryImpl.java
unused-saved/src/org/apache/uima/jcas/impl/CASMetadata.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/TypeSystemImpl.java
texts:create auxiliary flattened version of index and its subtypes, automatically managed
UIMA indexes allow retrieving items from the CAS, trading off space (for indexes) for time (speed of finding items in the CAS, speed of iterating).  For sorted indexes over a type with subtypes, if the index isn't being modified, it is possible to do a one-time extraction in sorted order of the items and save this in an array, and iterate much more rapidly over that. I've seen lots of cases of UIMA flows where some annotators will create and index a type (and its subtypes), and once that's been done, the indexes are not subsequently updated for these types, but downstream annotators iterate over them.  It seems that a lazy creation for this kind of flattened index would work well in many cases.It is important, I think, to continue to preserve the same kind of ConcurrentModificationException detection.  To make this additional index space-time trade-off automatic and reasonable, make the additional index reachable via a SoftReference, to allow the GC to reclaim the space if needed.  Delay the creation of a flattened version until there's evidence that it will be unmodified for some time.  To count things that motivate its creation, count the number of times an iterator over an index is using the code "heapifyUp/Down" that manages the ordering of the subiterators to preserve sort order.  A basic indicator may be the number of times that occurs, without an intervening update to the indexes, relative to the size of the index.The flattened array can save a bit more time by holding references to the Java cover class (JCas or non-JCas) for this object. Cas Reset needs to clear out these things.
issueID:UIMA-4358
type:Task
changed files:
texts:Generic cleanup in preperation for Release of 2.0.0
This jira is to track misc tasks such as adjusting log levels and insuring code matches its documentation, as prep for the upcoming 2.0.0 release.
issueID:UIMA-4359
type:Bug
changed files:
texts:DUCC logger in JP can fail by loading user&#39;s config file
Even when under the DUCC classloader log4j searches for a default configuration file using the System classloader so may find the user's config file.
issueID:UIMA-436
type:Improvement
changed files:
texts:Eclipse Runtime Plugin:  add line to permit Fragments to add to API for other tooling
Some users have requested we add Eclipse-ExtensibleAPI: true to the manifest to permit tools to be augmented using fragments.
issueID:UIMA-4360
type:Bug
changed files:
texts:DUCC Agent camel route shutdown hangs a thread trying to stop a JP
It looks like a thread trying to stop a JP hangs in the following code (NodeAgent.java):      // stop collecting process stats from /proc/<pid>/statm          super.getContext().stopRoute(pid);The thread is stuck in stopRoute() until the JP is killed via -9. This hang does not happen every time but seems to happens sometimes.
issueID:UIMA-4361
type:Improvement
changed files:
texts:DUCC Job Driver (JD) should only recieve pertinent info from Orchestrator (OR)
OR publications can be large.  The JD only cares about its own Job, so all the rest is wasted bandwidth and memory.CLI and OR already communicate directly using HTTP.  JD will now use HTTP to publish its regular Status Reports and in return receive up-to-date Job information (e.g. new and gone JPs).OR --hot start should continue to work for already running Jobs.
issueID:UIMA-4362
type:Bug
changed files:
texts:DUCC Web Server (WS) Work Items tab column "queueing" time should be "delivery" time for 2.0
Under the Workitems tab on the WS Job details page the column heading "Queueing Time" is not correct for 2.0.  It is better characterized as "Delivery Time"
issueID:UIMA-4363
type:Bug
changed files:
texts:DUCC JP not handling errors while serializing process exceptions
When an AE throws an exception from process(), the JP serializes the exception and sends it back to the JD. If the annotator designer throws an exception that is not serializable, the JP fails and the JD is not notified of a process failure. Modify code to catch exceptions while serializing and send back serialized RuntimeException with an appropriate message directing user to look at JP log for more details.
issueID:UIMA-4364
type:Bug
changed files:
texts:DUCC Orchestrator (OR) HealthMonitor is too aggressive during Job shutdown
OR's HealthMonitor should not Deallocate the JD unless and until all the JPs are terminated.
issueID:UIMA-4365
type:Improvement
changed files:
texts:JD should shut itself down instead of being killed -9 by agent
It would wait until all JPs were gone, and have time to generate a summary of work & time spent etc.
issueID:UIMA-4366
type:Bug
changed files:
texts:Make JD Jetty max threads and idle time configurable via ducc.properties
Externalize JD jetty params max threads and idle time.
issueID:UIMA-4367
type:Bug
changed files:
texts:DUCC Web Server (WS) overall Time Avg (JD row) is incorrect under Processes tab
See summary.
issueID:UIMA-4368
type:Improvement
changed files:
texts:syntax simplification for types declaration
Below a proposal to make the Ruta syntax more succinct:When declaring types with a parent type: if no parent type is specified, Annotation is used as the implied default parent type. // beforeDECLARE Annotation MyAnnotation(STRING myFeature);// afterDECLARE MyAnnotation(STRING myFeature);
issueID:UIMA-4369
type:Improvement
changed files:
texts:syntax simplification for matching condition
Below a proposal to make the Ruta syntax more succinct:If no matching rule is specified, the whole document (DocumentAnnotation) is implicitely used. // beforeDocument{-> MARKFAST(Animal, 'Animals.txt')};// afterMARKFAST(Animal, 'Animals.txt');
issueID:UIMA-437
type:Bug
changed files:uimaj-core/src/main/java/org/apache/uima/impl/UimaContext_ImplBase.java
uimaj-core/src/main/java/org/apache/uima/impl/UimaContext_ImplBase.java
uimaj-core/src/main/java/org/apache/uima/UimaContextAdmin.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/impl/PrimitiveAnalysisEngine_impl.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/impl/UimacppAnalysisEngineImpl.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/CASImpl.java
uimaj-core/src/main/java/org/apache/uima/impl/UimaContext_ImplBase.java
uimaj-core/src/main/java/org/apache/uima/resource/CasManager.java
uimaj-core/src/main/java/org/apache/uima/resource/impl/CasManager_impl.java
uimaj-core/src/main/java/org/apache/uima/util/CasPool.java
uimaj-core/src/main/java/org/apache/uima/UimaContextAdmin.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/impl/PrimitiveAnalysisEngine_impl.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/impl/UimacppAnalysisEngineImpl.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/CASImpl.java
uimaj-core/src/main/java/org/apache/uima/impl/UimaContext_ImplBase.java
uimaj-core/src/main/java/org/apache/uima/resource/CasManager.java
uimaj-core/src/main/java/org/apache/uima/resource/impl/CasManager_impl.java
uimaj-core/src/main/java/org/apache/uima/util/CasPool.java
texts:Annotators are not prevented from calling CAS.release()
Annotators are prohibited from calling CAS.reset() but not CAS.release().Since release() in turn calls reset(), previously this was effectively prohibited as well.  However, Marshall undid that in his recent work - making release() "unlock" the CAS prohibited functions.This was done to allow CAS Mutipliers to release the CAS - which we currently say is a best practice when an error occurs in a CAS Multiplier.So I think CAS Multipliers need to be allowed to call release() on CASes that they obtain from the CAS pool.  But analysis components (either annotators or CAS multipliers) should not be allowed to release() CASes passed to their process() methods.
issueID:UIMA-4370
type:Improvement
changed files:
texts:refactor JUnit tests
introduces 2 helper functions for Ruta JUnit tests (see RutaTestUtils.java). removes over 4k lines of test code and improves readability
issueID:UIMA-4371
type:Bug
changed files:
texts:DUCC Job Driver (JD) remove @Deprecated v1.x -> v2.0 transition code
See summary.
issueID:UIMA-4372
type:Bug
changed files:
texts:Reservations will hang with no user messages if resources are unavailable
ducc_reserve should set up a monitor for status messages, and should accept --cancel_on_interruptBoth managed & unmanaged reservations should return status when the request is deferred.Both should accept the --timestamp option.
issueID:UIMA-4373
type:Improvement
changed files:
texts:Enhance monitor to report resource allocation status for reservations
In DUCC v2.0 the resource allocation behavior for fixed shares has changed; instead of failing when an allocation cannot be made, the resource request is queued until it can be satisfied or until the request is canceled.The CLI needs to inform users when and why a request is queued. Moreover, the reason can change over time; for example, the user's allotment may be used up and the allocation blocked until user owned resources are freed, at which point the allocation may be waiting for pre-emptions to free up the required space. The CLI must inform when the reason changes.This CLI behavior update is needed for ducc_process_submit and ducc_reserve.
issueID:UIMA-4374
type:Bug
changed files:
texts:Broken DOAP
The DOAP at http://svn.apache.org/repos/asf/uima/site/trunk/uima-website/docs/doap/uima.rdf has incorrect syntax.The entry:<asfext:pmc rdf:about="UIMA">is non-standard; it should be of the form:<asfext:pmc rdf:resource="http://vcl.apache.org" />Please fix this otherwise the DOAP cannot be properly processed
issueID:UIMA-4375
type:Bug
changed files:
texts:DUCC Web Server (WS) mistakenly classifies machine(s) as down
The WS keeps a cache of sorted machines.  This cache is updated in discreet intervals in order to reduce the amount of sorting and re-sorting.  The sorted machines cache is slightly stale data, yet the WS insists on enforcing strict elapsed time limits on this data to report down machines.The WS must account for the fact the the sorted machines data is slightly stale and must make accommodation accordingly with respect to reporting down machines.
issueID:UIMA-4376
type:Bug
changed files:
texts:DUCC requires Java 7, but spec&#39;s 6
Code uses method in ScheduledExecutor... setRemoveOnCancelPolicy which is used in the code was only added in version 7 of Java
issueID:UIMA-4377
type:Bug
changed files:uimaj-core/src/main/java/org/apache/uima/internal/util/IntSet.java
uimaj-core/src/main/java/org/apache/uima/internal/util/IntHashSet.java
uimaj-core/src/main/java/org/apache/uima/internal/util/IntBitSet.java
texts:some UIMA iterator moveToNext/Prev fail to check for invalid position
Some implementations of UIMA iterators fail to check to see if the iterator is invalid before attempting to move it forwards or backwards.  In some cases, this could result in an invalid iterator moving to a valid position.  An invalid iterator, moved forward or backwards (or via inc/dec) should remain invalid.
issueID:UIMA-4378
type:Test
changed files:
texts:Better testing of IntArrayRedBlackTree
There are some structure validity checks that aren't being run. Add these, and a test case that exercises this with lots of inserts and removes.
issueID:UIMA-4379
type:Improvement
changed files:unused-saved/src/org/apache/uima/internal/util/ComparableIntPointerIterator.java
uimaj-core/src/main/java/org/apache/uima/internal/util/rb_trees/CompIntArrayRBT.java
uimaj-core/src/main/java/org/apache/uima/internal/util/rb_trees/Int2IntRBT.java
uimaj-core/src/main/java/org/apache/uima/internal/util/rb_trees/IntArrayRBT.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FSIteratorImplBase.java
unused-saved/src/org/apache/uima/jcas/impl/CASMetadata.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FSIndexRepositoryImpl.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/TypeSystemImpl.java
uimaj-core/src/main/java/org/apache/uima/internal/util/rb_trees/IntArrayRBTcommon.java
texts:iterator code refactor for better maintainability and possibly performance
The iterator impls have grown over time, and there's lots of duplicated code.  Refactor to simplify.
issueID:UIMA-438
type:Bug
changed files:
texts:Unable to build Perlator
I am unable to build perlator in uima cpp 2.1.0 RC0.  I get the following output when I try to make:$makeswig -outdir . -c++ -perl -external-runtime uimaperlwrap.hg++ -Wall -x c++ -DDEBUG -g -fno-inline -fno-default-inline -fPIC -I/home/andrew/uima/uimacpp/include -I/home/andrew/uima/uimacpp/include/apr-1 -I/home/andrew/uima/uimacpp/include/apr-0 -fPIC -g `perl -MExtUtils::Embed -e ccopts` -DSWIG1_3_29 -I.. -Wno-deprecated -c Perltator.cppswig -o uima_wrap.cxx -outdir . -c++ -perl ../uima.ig++ -Wall -x c++ -DDEBUG -g -fno-inline -fno-default-inline -fPIC -I/home/andrew/uima/uimacpp/include -I/home/andrew/uima/uimacpp/include/apr-1 -I/home/andrew/uima/uimacpp/include/apr-0 -fPIC -g `perl -MExtUtils::Embed -e ccopts` -DSWIG1_3_29 -I.. -Wno-deprecated -c uima_wrap.cxxuima_wrap.cxx: In function 'void boot_perltator(PerlInterpreter*, CV*)':uima_wrap.cxx:5154: warning: unused variable 'items'g++  Perltator.o uima_wrap.o \        -shared  -g `perl -MExtUtils::Embed -e ldopts`   -L/home/andrew/uima/uimacpp/lib -luima  \        -o perltator.so/usr/bin/ld: cannot find -lperlcollect2: ld returned 1 exit statusmake: *** &#91;perltator.so&#93; Error 1
issueID:UIMA-4380
type:Task
changed files:
texts:Update parent version of update site
uimaj-eclipse-update-site depends on a parent pom with version 2.6.0, but should use the current one.
issueID:UIMA-4381
type:Improvement
changed files:uimaj-core/src/main/java/org/apache/uima/cas/impl/FeatureStructureImpl.java
uimaj-core/src/main/java/org/apache/uima/cas/text/AnnotationIndex.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/Subiterator.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FSIndexRepositoryImpl.java
uimaj-core/src/main/java/org/apache/uima/internal/util/Int2IntArrayMapFixedSize.java
texts:speed up flat iterator concurrent mod check
The concurrent modification check is done frequently (e.g., on each "get", etc.)  It requires finding a value mapped from a type code (for the particular type / subtype involved). Change this map from a simple lookup (loop over all typecodes in the map looking for the right one) to a binary search one.
issueID:UIMA-4382
type:Improvement
changed files:
texts:better multi-thread testing
Several tests exercise multi-threads by looping and creating threads and starting them. The problem with this is that creating and starting a thread takes more time than running whatever is being tested, so everything completes, but there's no real contention (because the 1st thread finishes before the 2nd starts, etc.).  Fix by using same technique as used in MultiThreadUtils
issueID:UIMA-4383
type:Improvement
changed files:
texts:better multi-threaded tests in core
Several tests in the core that attempt to test multi-threaded things run a loop of creating, then starting a test thread, for multiple threads.  Unfortunately, the time to create and start a thread is usually much much longer than the time to do the testing.  Switch to using MultiThreadUtils approach.
issueID:UIMA-4385
type:Improvement
changed files:
texts:cleanup - remove unused class UnambiguousIteratorImpl
Unambiguous iterators are implemented using a particular constructor of the Subiterator class; the UnambiguousIteratorImpl class is never called; it has code duplicating what's in the Subiterator class.  Remove the UnambiguousIteratorImpl class.
issueID:UIMA-4386
type:Bug
changed files:
texts:DUCC JP does not return initialization status of AE
When AE initializes a JP starts a thread to collect initialization status of components. It uses JMX to poll AE Management MBeans to fetch state and init time. This seems to work ok for UIMA-AS deployments but is not working for Pieces'n Parts. The jmx ObjecName constructed by the JP uses the following string: org.apache.uima:type=ee.jms.services,* to query. But for Pieces'n Parts deployements the AE MBean the object name is different:  org.apache.uima:p0=DUCC Job. Change the query string to  org.apache.uima:* to unify query across different deployments.
issueID:UIMA-4387
type:Bug
changed files:
texts:DUCC Agent over limit swap detection is wrong
When a node is low on swap space an agent will try to evict a process that is the fattest. Currently, it looks at processes that are over their allotted swap space and kill one that is the biggest in terms of resident memory.Change the rule and evict a process which is over its swap limit and also   the largest user of swap.
issueID:UIMA-4388
type:Bug
changed files:
texts:UIMA-AS service bloats metadata on each GetMeta request
Everytime a client sends GetMeta request the UIMA-AS service bloats metadata by adding AEInstanceCount parameter. This parameter is added only for informational purposes to let the client know how many AE instances are available for processing. DUCC Service Manager process sends GetMeta requests frequently to many services it manages and over time service metadata becomes large enough to cause OOM in the SM.Modify UIMA-AS to add the parameter only once.
issueID:UIMA-4389
type:Bug
changed files:
texts:Fix DUCC Agent excessive logging at info
DUCC Agent JmxAEProcessInitMonitor class generates too much logging at info.
issueID:UIMA-439
type:Improvement
changed files:
texts:Docbooks: support scale= in pdfs, convert to 0.93 FOP, fix scaling of many images
Improve image scaling.  FOP 0.20.5 ignored scale=, but FOP 0.93 supports it.  Switch the docbooks to 0.93 FOP.  Add support to adjust PDF scale so it is expected size (not huge).  Review and adjust all imagedata specs to work with 0.93 FOP (eliminate sizes in pixels, FOP using a different presumption about this).  After this, it should be possible to specify no size or scaling and have things work, or to specify the size in some fixed dimension for PDF output (like inches) - it will be scaled for html output so it looks the same size, or to specify a scale= parameter.
issueID:UIMA-4390
type:Bug
changed files:uimaj-core/src/main/java/org/apache/uima/cas/impl/FSIndexRepositoryImpl.java
texts:fix regression in type order compare for annotation index
A change checked in May 4 2015 had a regression- a custom comparator for the built-in annotation index was added, but it was missing returning 0 (equals) if the type codes were the same.
issueID:UIMA-4391
type:Improvement
changed files:unused-saved/src/org/apache/uima/cas/impl/FSIteratorWrapperDoubleCheck.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FSIteratorImplBase.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/Subiterator.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FilteredIterator.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FSIndexRepositoryImpl.java
unused-saved/src/org/apache/uima/cas/impl/AnnotationIndexImpl.java
texts:prepare support for subiterators using just begin and end
Per discussion on the mailing list, prepare support for subiterators that use just the begin and end values, and are inclusive (in contrast to the normal subiterator which is defined so the FSs returned are strictly greater-than the bounding FS).
issueID:UIMA-4392
type:Bug
changed files:unused-saved/src/org/apache/uima/cas/impl/FSIteratorWrapperDoubleCheck.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FSIteratorImplBase.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/Subiterator.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FilteredIterator.java
unused-saved/src/org/apache/uima/cas/impl/AnnotationIndexImpl.java
texts:subiterator edge case needs correction - begin value with multiple instances
The definition of a subiterator requires that the FSs returned by strictly greater than the bounding FS (greater-than is with respect to the sort order for Annotations).  The current implementation makes two mistakes - it uses the "equal" method on the FeatureStructure - which returns true only for the indentical FS (same heap address in same heap), and doesn't allow for multiple occurances of annotation-index-ordering-equals items.  For example, if there were multiple "Tokens" each of which had different non-indexed field "lemma" which were set to different values, and one of these FSs was used as the bounds, then the iterator incorrectly currently skips over that one but only if it happens to be the first one in the sort order, and never skips the others which would also compare equal (using the annotator comparator). The correct behavior is to skip over all until an item is found which would compare as not-equal-using-standard-annotator comparer.
issueID:UIMA-4393
type:Improvement
changed files:unused-saved/src/org/apache/uima/cas/impl/FSIteratorWrapperDoubleCheck.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FSIteratorImplBase.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/Subiterator.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FilteredIterator.java
unused-saved/src/org/apache/uima/cas/impl/AnnotationIndexImpl.java
texts:Subiterators - avoid copying
The current subiterator implementation starts by copying into a list all the valid values of the iterator; it then iterates over this.Change this to avoid copying in many cases.  Do the copying (converting to a list form of only valid FSs, and the previous implementation did) only when required (to support moveTo(FS) with unambiguous, reverse movement with ambiguous,  moveToLast (for all styles).  After conversion, the iterator will work as in the previous implementation, including not supporting ConcurrentModificationException (CME) signalling; before conversion, CME is supported (this is a behavior change).
issueID:UIMA-4394
type:Improvement
changed files:
texts:DUCC Web Server (WS) servlet to render DUCC daemons json data including Agents (w/o need for cookie)
See summary.
issueID:UIMA-4395
type:Bug
changed files:
texts:DUCC Agent should verify cgroup folder
In more recent libcgroup there is a bug that causes cgexec to return a bogus  error code even though a cgroup is successfully created and functioning. Enhance Agent bootup verification code to check if cgexec actually succeeds in creating a cgroup. Also do the same check for each process launched to make sure cgroup is viable. If the test fails, log a problem and disable cgroup functionality but allow an Agent to start
issueID:UIMA-4396
type:Improvement
changed files:uimaj-core/src/main/java/org/apache/uima/cas/impl/CASImpl.java
uimaj-core/src/main/java/org/apache/uima/jcas/tcas/Annotation.java
uimaj-core/src/main/java/org/apache/uima/jcas/tcas/Annotation_Type.java
texts:tiny performance improvement for frequent getBegin/end of Annotation
Since they're heavily used, eliminate one indirection and some unneeded validation checking for getBegin and getEnd for Annotations.
issueID:UIMA-4397
type:Bug
changed files:
texts:DUCC Agent throws NumberFormatException when scraping cpu time from top
An agent collects per process CPU stats by using the following:  top -b -n 1 -p "pid" | tail -n 2 | head -n 1 | awk '{print $9}';The above seems to cause a NumberFormatException while trying to convert scraped output into an integer. The exception is:java.lang.NumberFormatException: For input string: "%CPU"        at java.lang.NumberFormatException.forInputString(NumberFormatException.java:76)        at java.lang.Integer.parseInt(Integer.java:492)        at java.lang.Integer.valueOf(Integer.java:593)        at org.apache.uima.ducc.agent.processors.LinuxProcessMetricsProcessor.collectProcessCurrentCPU(LinuxProcessMetricsProce\ssor.java:462)When running the command by hand I seem to be getting a numeric value.
issueID:UIMA-4398
type:Bug
changed files:
texts:Ruta: declare IDE grammar broken
Grammar rule of declare statement in IDE is broken
issueID:UIMA-44
type:Bug
changed files:
texts:rename IBMResultPrinter class
rename IBMResultPrinter class to ResultPrinter
issueID:UIMA-440
type:Bug
changed files:uimaj-core/src/main/java/org/apache/uima/cas/impl/Heap.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/Heap.java
texts:CAS heap doesn&#39;t grow correctly when first page exceeded
This test case (which I''ll check i under this issue) demonstrates the issue:      for (int j = 0; j < 10; j++) {        for (int i = 0; i < 200000; i++) {          cas.createAnnotation(annotType, i, i);        }        heapSize = ((CASImpl) cas).getHeap().getCurrentTempSize();        bufSize = ((CASImpl)cas).getHeap().heap.length;        //System.out.println("Heap size: " + heapSize + ", buffer size: " + bufSize);              assertTrue(heapSize <= bufSize);        Assert.assertTrue(bufSize < CASImpl.DEFAULT_RESET_HEAP_SIZE);              cas.reset();      }The CAS should grow by one page initially (to 1,000,000 cells), but then should stay at that size.  But this test fails.  The output of the System.out.println is:Heap size: 800008, buffer size: 1500000Heap size: 800008, buffer size: 2000000Heap size: 800008, buffer size: 2500000Heap size: 800008, buffer size: 3000000Heap size: 800008, buffer size: 3500000Heap size: 800008, buffer size: 4000000Heap size: 800008, buffer size: 4500000The heap seems to be growing by one page each time.
issueID:UIMA-4400
type:Bug
changed files:
texts:Ruta: ruta maven plugin fails to build missing descriptors for scripts without delta
ruta maven plugin fails to build missing descriptor for scripts without delta.
issueID:UIMA-4401
type:Task
changed files:
texts:Ruta: include IDE support for core-ext artifact in update site
Include IDE support for core-ext artifact in update site: add the corresponding eclipse plugin
issueID:UIMA-4402
type:Task
changed files:
texts:Ruta: fix javadoc for java 8
Building JavaDocs fails with several errors with Java 8
issueID:UIMA-4404
type:Bug
changed files:
texts:DUCC Orchestrator (OR) reduce publication size comprising command line & especially classpath
In 5 parts:1. make an OR request/reply that provides a full IDuccWork for a given DuccId, including command line2. have users of getCommandLine() employ the request/reply function3. have OR no longer publish command line as part of the regularly published non-abbbreviated map4. have users of OR abbreviated map go back to non-abbreviated map5. remove OR abbreviated map publication
issueID:UIMA-4405
type:Bug
changed files:
texts:Ruta: when debugging a script, the source of imported/exec uimaFIT component is not shown
When debugging a script with the common UIMA ruta launch config, the source of imported/exec uimaFIT components is not shown. Breakpoints actually work, but are quite useless if the source code is not displayed.
issueID:UIMA-4406
type:Bug
changed files:
texts:Ruta: right to left wildcard match fails in stacked inlined action rules
Ruta: right to left wildcard match fails in stacked inlined action rules
issueID:UIMA-4408
type:New Feature
changed files:
texts:Ruta: add explicit assignment of matched annotations to variables with labels
It is sometimes to hard to specify a rule especially for assigning annotations to features, if the context, the matched annotation and the created annotation require a combination of different action llike create and gather.Add something like this:a:CW SW{-> CREATE(Type, "f"=a)};.. which assigns the matched annotation of CW to a feature of the newly created annotation Type.
issueID:UIMA-4409
type:Bug
changed files:
texts:Ruta: annotation browser view misses to display all feature values

issueID:UIMA-4410
type:Improvement
changed files:
texts:Ruta: html converter retains content in head
This could be reasonable, but at least a config parameter should be added to avoid the additional plain text.
issueID:UIMA-4411
type:New Feature
changed files:
texts:Ruta: include option to use space as gapText parameter
Include an option to use space as gapText parameter. It happened in different settings that the parameter value consisting of only one space is removed.
issueID:UIMA-4412
type:Task
changed files:
texts:upgrade uima-wide parent pom to ref Apache pom version 17 (from 14)
I did a diff - this appears to be mostly version upgrades of various tools.
issueID:UIMA-4415
type:Bug
changed files:
texts:Ruta: Semantic highlighting misses type in action
Ruta: Semantic highlighting misses type in action, e.g, CREATE
issueID:UIMA-4416
type:Bug
changed files:
texts:DUCC CLI Monitor (CLI) does not display Running state for Jobs in timely fashion
Problem is that WS does not fill in remotePids field.
issueID:UIMA-4418
type:Bug
changed files:
texts:UIMA documentation still mentions "incubator"
UIMA documentation still mentions "incubator", e.g. in "Install the UIMA SDK" on http://uima.apache.org/d/uimaj-2.7.0/overview_and_setup.html
issueID:UIMA-442
type:Bug
changed files:
texts:FileUtilsTest fail on Linux
The  FileUtilsTest fails on linux while using windows path:base = new File("c:/foo/bar/baz/dir/");    target = new File("c:/foo/d1/d2/d3/blah.xml");    assertEquals("../../../d1/d2/d3/blah.xml",            FileUtils.findRelativePath(target, base));Eclipse JUnit  trace:junit.framework.ComparisonFailure: expected:<...../../d1/d2/d3/...> but was:<...c:\foo\d1\d2\d3\...> at junit.framework.Assert.assertEquals(Assert.java:81) at junit.framework.Assert.assertEquals(Assert.java:87) at org.apache.uima.util.FileUtilsTest.testFindRelativePath(FileUtilsTest.java:41)&#91;snip&#93;Maven fails too:...Running org.apache.uima.util.FileUtilsTestTests run: 1, Failures: 1, Errors: 0, Skipped: 0, Time elapsed: 0.006 sec <<< FAILURE!...Results :Failed tests:  testFindRelativePath(org.apache.uima.util.FileUtilsTest)Tests run: 363, Failures: 1, Errors: 0, Skipped: 0...
issueID:UIMA-4421
type:Improvement
changed files:
texts:DUCC Web Server (WS) Reservations page Allocation column is extraneous
Remove Allocation column from WS Reservations page.
issueID:UIMA-4422
type:Improvement
changed files:
texts:DUCC Job Driver (JD) should terminate a JP if one of its work items times-out
If a work item times-out (by default after 24 hours) the JD marks it as an error.  However, the JP thread processing that work item remains unavailable for new work. The JD should deallocate the JP with a reason of "work item time-out".  The Agent will stop the JP, and any remaining work items located there will be retried elsewhere.
issueID:UIMA-4423
type:Improvement
changed files:
texts:Check backwards compatibility during build
Check if changes in the code are backwards compatible and at which level.An option is using this plugin apparently also used by other Apache projects:https://github.com/jeluard/semantic-versioning
issueID:UIMA-4424
type:Bug
changed files:
texts:CpePipeline always uses only one processing unit thread
CpePipeline.runPipeline() always uses only one processing unit thread. I think a good default would be to use as many threads as there are cores in the system minus one.
issueID:UIMA-4425
type:Bug
changed files:
texts:Nested resources not working with SharedResourceObject
Nested resources not working with SharedResourceObject.  @Test  public void sharedObject_testSimpleNesting() throws Exception {    AnalysisEngineDescription aeDesc = saveLoad(createEngineDescription(            TestAnalysisEngineWithSharedResourceObject.class,            TestAnalysisEngineWithSharedResourceObject.PARAM_RESOURCE,            createExternalResourceDescription(                    TestSharedResourceObject2.class,                    "http://dumm.my",                    TestSharedResourceObject2.PARAM_VALUE,                    TestSharedResourceObject2.EXPECTED_VALUE,                    TestSharedResourceObject2.PARAM_RESOURCE,                    createExternalResourceDescription(TestSharedResourceObject.class,                            "http://dumm.my", TestSharedResourceObject.PARAM_VALUE,                            TestSharedResourceObject.EXPECTED_VALUE))));    AnalysisEngine ae = createEngine(aeDesc);    ae.process(ae.newCAS());  }
issueID:UIMA-4426
type:Bug
changed files:
texts:Explicitly binding nested resources using bindExternalResource does not work
bindExternalResource(res1, key, res2) does not work. It causes an NPE later when res1 is bound to an AE, caused by not finding res2 in the nested resources of res1.
issueID:UIMA-4427
type:Improvement
changed files:
texts:Use iteratorWithSnapshot in the select methods
Since UIMA 2.7.0, there are "iterateWithSnapshot" methods that safeguard against modifying the indices while iterating over them. uimaFIT could avoid concurrency problems in client code by consistently using these new methods at the expense of some performances. I would expect though, that whoever wants to the the last piece of performance out of the code would not use the uimaFIT select methods anyway - they would try to optimize iteration order at all cost.
issueID:UIMA-4428
type:Bug
changed files:uimaj-core/src/main/java/org/apache/uima/util/CasCopier.java
texts:restore CasCopier alreadyCopied method
The redo of the CasCopier inadvertently changed the signature of the alreadyCopied method.  Restore the 2.6.0 version (but keep the 2.7.0 version in case anyone started depending on that one).
issueID:UIMA-4429
type:Task
changed files:
texts:Ruta: use (tm) for complete name
we should start to use (tm) for the complete name:Apache UIMA Ruta (TM)instead ofApache UIMA (TM) Ruta
issueID:UIMA-443
type:Bug
changed files:uimaj-core/src/main/java/org/apache/uima/analysis_engine/asb/impl/ASB_impl.java
uimaj-core/src/main/java/org/apache/uima/flow/SimpleStepWithResultSpec.java
uimaj-core/src/main/java/org/apache/uima/flow/impl/CapabilityLanguageFlowObject.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/asb/impl/ASB_impl.java
uimaj-core/src/main/java/org/apache/uima/flow/SimpleStepWithResultSpec.java
uimaj-core/src/main/java/org/apache/uima/flow/impl/CapabilityLanguageFlowObject.java
texts:fix flow ResultSpec handling
Currently it is possible to set a result spec for a flow node AnalysisSequenceCapabilityNode.setResultSpec(). But it seems that this feature is never supported in UIMA 2.x. We should either remove/deprecate this APIs if this is really true that it is never supported.But I think that this was a very important feature for search engine integrations, so I would vote for adding this functionality again to the FlowController stuff. Let's start the discussion on how this can be done and what we will do for UIMA 2.2.
issueID:UIMA-4430
type:Task
changed files:
texts:Ruta: eclipse plugins not compatible with kepler
When the plugins are built with luna, the the result is not compaible with kepler. Fix the osgi.framework version range.
issueID:UIMA-4432
type:Improvement
changed files:
texts:DUCC Job Driver (JD) WiTracker logging for assign/unassign should include seqNo
See summary.
issueID:UIMA-4433
type:Bug
changed files:
texts:UIMA Sets have contradictory aspect - document this
While examining the CasObj implementation, I was surprised to notice that the comparator for Set indexes always included a "types-are-the-same".  I looked at the test case for this, and saw some contradictory things.1) You can ask an index to compare (using its defined comparator) two feature structures.  1a) If you define an index to compare feature A, and you make two instances of a Feature Structure with the same A value, but one is a subtype of the other, the myIndex.compare(fs1, fs2) will return 0 (indicating they are "equal" for the purposes of the comparator.  1b) If you define the comparator to compare feature A and use type priorities, then the compare will not be 0 (because the types are different).2) back to the first comparator - just on feature A.  If you add-to-indexes the two FSs, the 2nd one, even though it "compares" equal to the first using the index's comparator, will still be added to the indexes; the size() of the index will be 2, not 1.This is long-standing behavior, so I'm reluctant to change it.  It is caused by a detail of the underlying implementation, where the index is actually kept as "n" separate indexes, by type, so the Type and the SubType are in two separate indexes.My feeling at this point is to update the documentation to correspond to this detail of the implementation.  Other thoughts?
issueID:UIMA-4436
type:Improvement
changed files:
texts:Check backwards compatibility during build
Check if changes in the code are backwards compatible and at which level.An option is using this plugin apparently also used by other Apache projects:https://github.com/jeluard/semantic-versioning
issueID:UIMA-4438
type:Bug
changed files:
texts:Ruta: IDE project dependency to closed project
An IDE project dependency to closed project should cuase not problems, but if the closed project is removed, then the reference is not updated causing an NPE.
issueID:UIMA-4439
type:Bug
changed files:
texts:Remove dependency on UIMA_HOME from ducc_services command
If UIMA_HOME is set to a missing or incomplete installation, registering a service fails with a cryptic ClassNotFoundException
issueID:UIMA-444
type:Bug
changed files:
texts:Sandbox projects build only when in same directory as uimaj projects

issueID:UIMA-4441
type:Bug
changed files:
texts:Ruta: maven plugin generates additional oldschool resource paths
Ruta: maven plugin generates additional resource paths ("resources"). This was legacy code and should be removed.
issueID:UIMA-4442
type:Bug
changed files:
texts:Ruta: maven plugin misses type in generated type system for imported script
Ruta: maven plugin misses type in generated type system for imported script. This is possibly no error/problem at all or caused by something different. This issue is at least a reminder to double-check this use case in different scenarios.
issueID:UIMA-4443
type:Bug
changed files:
texts:Ruta: maven-plugin produces os-specific paths
The ruta-maven-plugin produces os-specific paths. When a script/descriptor is built under windows the imports by location with relative paths contain a backslash.
issueID:UIMA-4444
type:Bug
changed files:
texts:Ruta: maven plugin builds src and target script files
The ruta-maven plugin builds script files located in src and target. This was intended in the beginning, but could cause problems or at least is much slower.
issueID:UIMA-4445
type:Bug
changed files:
texts:Ruta: maven-plugin generate desccriptors misses to set classloader-based resource manager
Ruta: maven-plugin generate desccriptors misses to set classloader-based resource manager
issueID:UIMA-4446
type:Bug
changed files:
texts:Ruta: typesystem descriptors sometimes not updated when build is initiated by m2e
Typesystem descriptors are sometimes not updated when the build is initiated by m2e. This was observed for the type systems of imported scripts.Could be related to UIMA-4442
issueID:UIMA-4447
type:Bug
changed files:
texts:DUCC Web Server (WS) request reservation hangs

issueID:UIMA-4448
type:Bug
changed files:
texts:Boolean CLI options may be set explicitly to false but are assumed to be true no matter the value
Boolean options used to take no values, so their existence implied "true".Now that they can optionally be set false the existence test is wrong.
issueID:UIMA-4449
type:Bug
changed files:
texts:Ruta: uimafit param for mainScript
There is a typo in the param for mainScript. It's not a real problem since the actual field is set in the initialize method., but it should be fixed.
issueID:UIMA-445
type:Improvement
changed files:
texts:add CasEditor abstract to the Sandbox web page.
As shown below, some UIMA users can't find the CasEditor plugin but want to use it.We have a web page for all the UIMA Sandbox projects with a short abstract:        http://incubator.apache.org/uima/sandbox.htmlI think the CasEditor project should be added there too.>Philip Ogren wrote:>> Here is a link to the svn repository which has a branch for the CasEditor.  I have not found a documentation page for it yet if there is one.>> http://svn.apache.org/repos/asf/incubator/uima/sandbox/trunk/>>>>> >Andrew Borthwick wrote:>>> As per the below, could someone please post a link to the CasEditor to>>> uima-user so we don't all have to go hunting for it?
issueID:UIMA-4450
type:Task
changed files:
texts:Ruta: check NOTICE/LICENSE for spring dependencies
Ruta: check NOTICE/LICENSE for spring dependencies
issueID:UIMA-4451
type:Improvement
changed files:
texts:Ruta: maven warnings for example project
&#91;INFO&#93; Scanning for projects...&#91;WARNING&#93;&#91;WARNING&#93; Some problems were encountered while building the effective model for org.apache.uima:ruta-maven-example:jar:2.3.0&#91;WARNING&#93; 'build.plugins.plugin.(groupId:artifactId)' must be unique but found duplicate declaration of plugin org.apache.uima:ruta-maven-plugin @ line 196, column 12&#91;WARNING&#93; 'build.plugins.plugin.(groupId:artifactId)' must be unique but found duplicate declaration of plugin org.apache.uima:ruta-maven-plugin @ line 239, column 12&#91;WARNING&#93;&#91;WARNING&#93; It is highly recommended to fix these problems because they threaten the stability of your build.&#91;WARNING&#93;&#91;WARNING&#93; For this reason, future Maven versions might no longer support building such malformed projects.
issueID:UIMA-4452
type:Task
changed files:
texts:Ruta: update buildpath of example script projects

issueID:UIMA-4453
type:Bug
changed files:
texts:MARKTABLE action works improperly
New available UIMA Ruta Runtime 2.7.0 & Workbench 2.3.0 for Eclipse has lost proper functionality of MARKTABLE action.  This action stopped annotating of all words from a csv file. I had noticed that the problem happened only for words written in Cyrillic witch contains spaces, i.e. for Latin it works fine. Please use sample outlined below in order to reproduce the problem i'm talking about. script/main.rutaWORDTABLE Dict = 'dict.csv';DECLARE Annotation Test (STRING meaning);Document {-> MARKTABLE(Test,1,Dict, "meaning" = 2)}; resources/dict.csvвід;fromс какой стати;whyс которой;fromWhichсюда;hereпо какому;whichсюди;hereкак нибудь;somehowсколько;howMuch input/test.txtвід с какой стати с которой сюда по какому сюди как нибудь сколькоAfter main.ruta script execution we wont get annotated everything from test.txt Worth mentioning that Cyrillic letter like 'с' at the beginning of string, somehow affecting on processing behavior. Moreover, by removing lines with spaces, will get rid us from the issue described above.
issueID:UIMA-4454
type:Bug
changed files:
texts:Ruta: out-of-window match in inlined rule broken for additional conditions
Example:SpokenTo is not within DirectSpeechDirectSpeech{-> CREATE(Relation, "Agens" = DirectSpeech.Speaker, "Agens2" = DirectSpeech.SpokenTo)}    <- {DirectSpeech.SpokenTo{PARTOF(FamilyRelationIndicator)};};
issueID:UIMA-4455
type:Bug
changed files:
texts:Ruta: conjunctive rule elements not order independent
Example:This fails:(DirectSpeech.SpokenTo{PARTOF(FamilyRelationIndicator)} & DirectSpeech{-> CREATE(Relation, "Agens" = DirectSpeech.Speaker, "Agens2" = DirectSpeech.SpokenTo)});but this works:(DirectSpeech{-> CREATE(Relation, "Agens" = DirectSpeech.Speaker, "Agens2" = DirectSpeech.SpokenTo)} & DirectSpeech.SpokenTo{PARTOF(FamilyRelationIndicator)});
issueID:UIMA-4456
type:Bug
changed files:
texts:Ruta: BasicEngine.xml misses configuration parameter
for example dictRemoveWS, but maybe also some others?
issueID:UIMA-4457
type:Bug
changed files:
texts:Ruta: handling of zero-length annotations
Zero-length annotations still cause problems. Either they should really be ignored now or the sequential matching needs to be changed so that they will be consumed somehow (avoiding the problem of endless matching of greedy elements)
issueID:UIMA-4458
type:Improvement
changed files:
texts:DUCC Job Driver (JD) is too verbose when config&#39;d at debug level
When config'd at DEBUG level the JD log can become cluttered with entries of the ilk:09 Jun 2015 18:01:08,712 DEBUG WiFsm - T&#91;31&#93; transition  seqNo=? remote=? curr=Start prev=Start event=Process_Volunteered09 Jun 2015 18:01:08,712 DEBUG ActionIgnore - T&#91;31&#93; engage  seqNo=? remote=?(complainer = Burn, Job = test DUCC 19875)
issueID:UIMA-4459
type:Bug
changed files:
texts:DUCC Job Driver (JD) does not advance state to JdState.Ended when final work item is a time-out
Symptom is that Job should be completed, since work items done + error == total.  All JPs have stopped, but incorrectly the JD state remains Running as does the Job state.  Observation is that work item time-outs have occurred, and this seems to precipitate the Job's hung status.
issueID:UIMA-446
type:New Feature
changed files:
texts:Create FS variables project in sandbox
See discussion here: http://www.mail-archive.com/uima-dev%40incubator.apache.org/msg03028.html
issueID:UIMA-4460
type:Bug
changed files:
texts:Ruta: incremental maven build of descriptors builds all descriptors
The plexus-utils method cannot be used in this context and should be replaced.
issueID:UIMA-4461
type:Bug
changed files:
texts:Ruta: maven plugin for IDE buildpath config causes empty problem
Ruta: maven plugin for IDE buildpath config causes empty problem, but only for specific configurations of the three folders. Need to investigate this further. This is not problematic, but annoying.
issueID:UIMA-4462
type:Bug
changed files:
texts:DUCC JP should notify Agent before terminating due to WI error
When a JP terminates itself due to WI error its agent marks the JP as Croaked. DUCC code in the JP knows that the WI failed. It should send a notification to its Agent that it is stopping due to exceeded threshold. The Agent should set the state of the process to Stopped with reason ExceededErrorThreshold
issueID:UIMA-4463
type:Bug
changed files:
texts:java.util.ConcurrentModificationException in iterate-and-copyFs() loop
My code, e.g.      https://github.com/brmson/yodaqa/blob/master/src/main/java/cz/brmlab/yodaqa/analysis/passextract/PassFilter.java#L67works fine with UIMA-2.6.0 but with UIMA-2.7.0 and its rewritten CasCopier it crashes with       Caused by: java.util.ConcurrentModificationException               at org.apache.uima.cas.impl.FSIndexRepositoryImpl$LeafPointerIterator.checkConcurrentModification(FSIndexRepositoryImpl.java:967)               at org.apache.uima.cas.impl.FSIndexRepositoryImpl$LeafPointerIterator.ll_get(FSIndexRepositoryImpl.java:1002)               at org.apache.uima.cas.impl.FSIndexRepositoryImpl$LeafPointerIterator.get(FSIndexRepositoryImpl.java:995)               at org.apache.uima.cas.impl.FSIteratorWrapper.get(FSIteratorWrapper.java:53)               at org.apache.uima.cas.impl.FSIteratorImplBase.next(FSIteratorImplBase.java:67)               at org.apache.uima.cas.impl.FSIteratorImplBase.next(FSIteratorImplBase.java:33)               at cz.brmlab.yodaqa.analysis.passextract.PassFilter.process(PassFilter.java:74)               at org.apache.uima.analysis_component.JCasAnnotator_ImplBase.process(JCasAnnotator_ImplBase.java:48)               at+org.apache.uima.analysis_engine.impl.PrimitiveAnalysisEngine_impl.callAnalysisComponentProcess(PrimitiveAnalysisEngine_impl.java:385)               ... 26 moreso it appears I cannot iterate a source view and simultaneously copyFs() from it.  This is a regression, and also seems rather counterintuitive - copyFs surely shouldn't modify the source view? Using the new .withSnapshotIterator() feature helps to work-around this, but for JCasUtil users this is not trivial to do at the moment (and then, it should be documented precisely what the CasCopier semantics in this regard is)..
issueID:UIMA-4465
type:Bug
changed files:
texts:DUCC Job Driver (JD) doesn&#39;t handle work item timeouts properly
Work item timeouts should be treated just like work item errors, subject to the plug-in error handler's decision making heuristics and if deemed an error (usually) counted towards the maximum number of errors tolerated for the Job before it is killed.Also, timeouts should be recorded in the jd.err.log.
issueID:UIMA-4466
type:Bug
changed files:uimaj-core/src/main/java/org/apache/uima/util/CasCopier.java
uimaj-core/src/main/java/org/apache/uima/util/CasCopier.java
texts:CasCopier not handling properly updating Sofa refs when copying to other views
This is a regression, introduced in 2.7.0.  The CasCopier is failing to update sofa references when copying to another view.  Add test case to cover this, too.
issueID:UIMA-4468
type:Bug
changed files:
texts:DUCC Web Server (WS) Files tab shows no files (on Job and Service details tabs)
WS fails to employ ducc_ling on behalf of logged-in user for creation of Files tab, and if the ducc userid itself does not have access permissions to the directory the page is mistakenly blank.
issueID:UIMA-4470
type:Improvement
changed files:uimaj-core/src/main/java/org/apache/uima/jcas/impl/JCasHashMap.java
texts:tweak default concurrency level for JCasHashMap
Tweaking the default concurrency level for the JCasHashMap to better balance concurrency and L1 cache loading (concurrency uses ~ 2 L1 cache slots per fetch).
issueID:UIMA-4471
type:Bug
changed files:
texts:ruta: combination of inlined rules allow execution of action for failed matches
Example:Sentence{-> UNMARK(Sentence)}<-{ W PERIOD CW;}->{# W PERIOD CW #{-> MARK(Sentence,1,2,3), MARK(Sentence,4,5)};};... removes all sentences where the pattern (conditional inlined rule) does not apply...
issueID:UIMA-4472
type:Bug
changed files:
texts:Ruta: implicit feature matches as generic expressions miss rule element match
Some code positions still miss to provide the match context (annotation) in expressions calls. Without those, generic feature match expression cannot return the correct values. Example: ComposedNumberExpression.getDoubleValue()
issueID:UIMA-4473
type:Bug
changed files:
texts:Ruta: explanation of action-only rules and generic feature expression
Teh explanation for both language elements is broken.
issueID:UIMA-4474
type:Bug
changed files:
texts:Ruta: double values casted to int for generic feature matches
Ruta: double values casted to int for generic feature matches.
issueID:UIMA-4475
type:Bug
changed files:
texts:DUCC Job Driver (JD) initially and incorrectly shows DriverProcessFailed for JD that ends normally
I did notice a bug in the WS. When a Job changes state from Running to Completed, its Reason or Extraordinary Status changes to DriverProcessFailed. The reason changes to EndOfJob when a JDprocess terminates. I dont think an Agent sets the reason=DriverProcessFailed.
issueID:UIMA-4476
type:Bug
changed files:
texts:uima-ducc-vm has too many JDs?
Noticed was 45 JDs on apache-ducc using linux command.  There should never be more than 3.  Also, from time-to-time 4 Jobs are displayed by the WS on apache-ducc's Jobs page.Suggestion is to do better accounting and error recovery in the demo's python script that submits and monitors jobs/reservations.Related: Each thread must employ a submission-unique log directory.  Reliance on the thread name for uniqueness is insufficient.
issueID:UIMA-4477
type:Bug
changed files:
texts:DuccMonitor terminates jobs when the WS is bounced
Regression - If the client monitor loses contact with DUCC it should retry rather than terminating the run.
issueID:UIMA-4478
type:Improvement
changed files:
texts:DUCC Orchestrator (OR) should record requests to cancel job, reservation, or service
Presently, OR does not make log entry for requests to cancel job, reservation, or service.
issueID:UIMA-4479
type:Bug
changed files:
texts:DUCC Web Server (WS) Work Items tab shows no work items (on Job Details)
WS fails to employ ducc_ling on behalf of logged-in user for creation of Work Items tab, and if the ducc userid itself does not have access permissions to the work-item-state.* files the page is mistakenly blank.
issueID:UIMA-448
type:Wish
changed files:
texts:Add a sample annotation project

issueID:UIMA-4480
type:Bug
changed files:
texts:Cannot declar new type in Java code to apply Ruta rules
I used Java code to apply UIMA Ruta rules, but with declare statement, ruta cannot recognize the new created annotation type.Here is the code I used:String rutaStr2 = "DECLARE person; W{REGEXP(\"Patient\") -> MARK(person)};";Ruta.apply( aJCas.getCas(), rutaStr2 );The error is like:Jun 24, 2015 3:01:07 PM org.apache.uima.analysis_engine.impl.PrimitiveAnalysisEngine_impl callAnalysisComponentProcess(417)SEVERE: Exception occurredorg.apache.uima.analysis_engine.AnalysisEngineProcessException: Annotator processing failed.     at org.apache.uima.ruta.engine.RutaEngine.process(RutaEngine.java:496) at org.apache.uima.analysis_component.JCasAnnotator_ImplBase.process(JCasAnnotator_ImplBase.java:48) at org.apache.uima.analysis_engine.impl.PrimitiveAnalysisEngine_impl.callAnalysisComponentProcess(PrimitiveAnalysisEngine_impl.java:385) at org.apache.uima.analysis_engine.impl.PrimitiveAnalysisEngine_impl.processAndOutputNewCASes(PrimitiveAnalysisEngine_impl.java:309) at org.apache.uima.analysis_engine.impl.AnalysisEngineImplBase.process(AnalysisEngineImplBase.java:267) at org.apache.uima.ruta.engine.Ruta.apply(Ruta.java:75) at org.apache.uima.ruta.engine.Ruta.apply(Ruta.java:83) at edu.uth.clamp.nlp.attr.ast.LinearAssertion.main(LinearAssertion.java:610)Caused by: java.lang.IllegalArgumentException: Not able to resolve type: animal at org.apache.uima.ruta.expression.type.SimpleTypeExpression.getType(SimpleTypeExpression.java:47) at org.apache.uima.ruta.action.AbstractMarkAction.createAnnotation(AbstractMarkAction.java:42) at org.apache.uima.ruta.action.MarkAction.execute(MarkAction.java:57) at org.apache.uima.ruta.rule.AbstractRuleElement.apply(AbstractRuleElement.java:130) at org.apache.uima.ruta.rule.RuleElementCaretaker.applyRuleElements(RuleElementCaretaker.java:111) at org.apache.uima.ruta.rule.ComposedRuleElement.applyRuleElements(ComposedRuleElement.java:559) at org.apache.uima.ruta.rule.AbstractRuleElement.doneMatching(AbstractRuleElement.java:84) at org.apache.uima.ruta.rule.ComposedRuleElement.fallback(ComposedRuleElement.java:480) at org.apache.uima.ruta.rule.ComposedRuleElement.fallbackContinue(ComposedRuleElement.java:384) at org.apache.uima.ruta.rule.RutaRuleElement.startMatch(RutaRuleElement.java:106) at org.apache.uima.ruta.rule.ComposedRuleElement.startMatch(ComposedRuleElement.java:73) at org.apache.uima.ruta.rule.RutaRule.apply(RutaRule.java:47) at org.apache.uima.ruta.rule.RutaRule.apply(RutaRule.java:40) at org.apache.uima.ruta.rule.RutaRule.apply(RutaRule.java:29) at org.apache.uima.ruta.RutaScriptBlock.apply(RutaScriptBlock.java:63) at org.apache.uima.ruta.RutaModule.apply(RutaModule.java:48) at org.apache.uima.ruta.engine.RutaEngine.process(RutaEngine.java:494) ... 7 moreorg.apache.uima.analysis_engine.AnalysisEngineProcessException: Annotator processing failed.     at org.apache.uima.ruta.engine.RutaEngine.process(RutaEngine.java:496) at org.apache.uima.analysis_component.JCasAnnotator_ImplBase.process(JCasAnnotator_ImplBase.java:48) at org.apache.uima.analysis_engine.impl.PrimitiveAnalysisEngine_impl.callAnalysisComponentProcess(PrimitiveAnalysisEngine_impl.java:385) at org.apache.uima.analysis_engine.impl.PrimitiveAnalysisEngine_impl.processAndOutputNewCASes(PrimitiveAnalysisEngine_impl.java:309) at org.apache.uima.analysis_engine.impl.AnalysisEngineImplBase.process(AnalysisEngineImplBase.java:267) at org.apache.uima.ruta.engine.Ruta.apply(Ruta.java:75) at org.apache.uima.ruta.engine.Ruta.apply(Ruta.java:83) at edu.uth.clamp.nlp.attr.ast.LinearAssertion.main(LinearAssertion.java:610)Caused by: java.lang.IllegalArgumentException: Not able to resolve type: animal at org.apache.uima.ruta.expression.type.SimpleTypeExpression.getType(SimpleTypeExpression.java:47) at org.apache.uima.ruta.action.AbstractMarkAction.createAnnotation(AbstractMarkAction.java:42) at org.apache.uima.ruta.action.MarkAction.execute(MarkAction.java:57) at org.apache.uima.ruta.rule.AbstractRuleElement.apply(AbstractRuleElement.java:130) at org.apache.uima.ruta.rule.RuleElementCaretaker.applyRuleElements(RuleElementCaretaker.java:111) at org.apache.uima.ruta.rule.ComposedRuleElement.applyRuleElements(ComposedRuleElement.java:559) at org.apache.uima.ruta.rule.AbstractRuleElement.doneMatching(AbstractRuleElement.java:84) at org.apache.uima.ruta.rule.ComposedRuleElement.fallback(ComposedRuleElement.java:480) at org.apache.uima.ruta.rule.ComposedRuleElement.fallbackContinue(ComposedRuleElement.java:384) at org.apache.uima.ruta.rule.RutaRuleElement.startMatch(RutaRuleElement.java:106) at org.apache.uima.ruta.rule.ComposedRuleElement.startMatch(ComposedRuleElement.java:73) at org.apache.uima.ruta.rule.RutaRule.apply(RutaRule.java:47) at org.apache.uima.ruta.rule.RutaRule.apply(RutaRule.java:40) at org.apache.uima.ruta.rule.RutaRule.apply(RutaRule.java:29) at org.apache.uima.ruta.RutaScriptBlock.apply(RutaScriptBlock.java:63) at org.apache.uima.ruta.RutaModule.apply(RutaModule.java:48) at org.apache.uima.ruta.engine.RutaEngine.process(RutaEngine.java:494) ... 7 more
issueID:UIMA-4481
type:Task
changed files:
texts:change uimaj next release to 2.8.0-SNAPSHOT to meet semantic versioning standards

issueID:UIMA-4482
type:Task
changed files:
texts:make global define switch to control flattened index creation reporting
There's code that's part of the index flattening optimization that reports wheh shutting down the JVM, to System.out, some statistics.  This report should be normally disabled, but enabled via a -D variable following our normal naming conventions for these.  Update also the ref chapter for these, and the readme.
issueID:UIMA-4483
type:Task
changed files:
texts:Ruta: semantic versioning for ruta-core
I think semantic versioning should only be applied for ruta-core. The other artifacts, especially the eclipse plugins, do probably not possess the necessary "code quality".
issueID:UIMA-4484
type:New Feature
changed files:
texts:Ruta: improve usage as helper lib in java code similar to the uimaFIT helper classes
Some extensions to the Ruta class could be helpful. Here are some inital thoughts:// returns the spans where the rules of the script have been appliedList<AnnotationFS> result = Ruta.select(CAS cas, String script);// returns the spans where the "amount" last rules of the script have been appliedList<AnnotationFS> result = Ruta.selectLast(CAS cas, String script, int amount);// returns annotations that have been created by the rules of the scriptList<clazz> result = Ruta.select(JCas cas, String script, Class clazz);
issueID:UIMA-4485
type:New Feature
changed files:
texts:Ruta: problem reporter if package declaration in script does not comply with actual package
Ruta: problem reporter if package declaration in script does not comply with actual package
issueID:UIMA-4486
type:Bug
changed files:
texts:Ruta: tests fail with uimaj-2.8.0
InvisibleWildcardMatchTest.test:41 size of expected annotations (0) doesnot match with actual size (1).MarkInGreedyComposedTest.testWildCardFollowedByComposedReversed:42 sizeof expected annotations (2) does not match with actual size (0).
issueID:UIMA-4487
type:Bug
changed files:uimaj-core/src/main/java/org/apache/uima/cas/impl/FSIndexRepositoryImpl.java
texts:Position lost on FSIterator copy
Apparently, in some cases, a FSIterator becomes invalid/looses its position after a copy(). Unfortunately, I haven't been able to quickly create a plain UIMA test case (I tried reproducing the effect in GetAllIndexedTest, but couldn't.So the following snipped is works (fails) when pasted into the uimaFIT CasUtilTest after upgrading uimaFIT to 2.8.0 RC 1:  @Test  public void lala() throws Exception {    String text = "Rot wood cheeses dew?";    tokenBuilder.buildTokens(jCas, text);    CAS cas = jCas.getCas();    // Option 1: remove the ".copy()"    FSIterator<FeatureStructure> fses = cas.getIndexRepository()            .getAllIndexedFS(cas.getTypeSystem().getTopType()).copy();    // Option 2: explicitly moveToFirst     // fses.moveToFirst();        int i = 0;    while (fses.hasNext()) {      fses.next();      i++;    }        assertEquals(6, i);  }Maybe you have some idea or can highlight another UIMA core test case where this could be conveniently tried out. (Unfortunately, setting up a test CAS in plain UIMA is a bit painful/verbose)
issueID:UIMA-4488
type:Bug
changed files:
texts:DUCC Web Server (WS) file pager not working when data comprises "<" and ">"
WS file pager should translate "<" and ">" data to "&lt" and "&gt" respectively.
issueID:UIMA-449
type:Bug
changed files:uimaj-core/src/main/java/org/apache/uima/cas/impl/XmiCasSerializer.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/XmiCasSerializer.java
texts:XMI serialization does not work with Sun Java 1.5.0_12
For some reason when running Sun Java 1.5.0_12, serialized XMI does not contain any XML namespace declarations (xmlns attributes).  This did not happen with earlier builds of Sun Java 1.5.0.This bug causes UIMA tooling such as the DocumentAnalyzer to break.
issueID:UIMA-4490
type:Bug
changed files:
texts:When running all_in_one=local the LD_LIBRARY_PATH is unset
The renaming of the env var LD_LIBRARY_PATH as DUCC_LD_LIBRARY_PATH should be suppressed or reverted when running locally.
issueID:UIMA-4491
type:Bug
changed files:
texts:DUCC should log exceptions caught in config module
Modify ErrorProcessor code in DUCC daemons to log exceptions. In some instances the code just dumps to stdout which is not redirected to a log. This can hide problems and make debugging difficult.
issueID:UIMA-4492
type:Bug
changed files:
texts:DUCC Web Server (WS) shows zero for file sizes under Job, Reservations, Services Details...
The Jobs Details page Processes tab, the Reservations Details page Processes tab, and the Services Details page Deployments tab may show zero for file sizes when the WS itself (running as "ducc") does not have access to user files.The fix is to add code to have WS employ ducc_ling for logged-in users.
issueID:UIMA-4493
type:Bug
changed files:uimaj-core/src/main/java/org/apache/uima/cas/impl/FSIndexRepositoryImpl.java
texts:FS iterator copy() positioning not quite correct
The core code implements the copy() method for iterators by doing a separate construction of the copy of the iterator, followed by a moveTo(fs) where fs is the feature structure obtained from the original iterator (if it is valid).The definition of moveTo(fs) though is to move to the left-most of potentially several FSs that compare "equal" using the underlying indexes' compare keys.This can result in the copy being positioned at a different spot.
issueID:UIMA-4494
type:Bug
changed files:
texts:Ducc&#39;s JP initialization failure not handled correctly by an agent
On AE initialization exception, a JP sends notification to its agent with a hint that AE failed during initialization. Immediately after sending notification, the JP exits. There is a race condition here. Before processing JP notification, the agent detects process exit and tries to determine what happened. Since it has not idea what went wrong, it marks the JP as Croaked. Give agent time to handle the notification before exiting JP.
issueID:UIMA-4495
type:Bug
changed files:
texts:All-In-One fails if the AE uses types not in the CR typesystem
All-In-One is creating CASes from just the CR typesystem and these fail if the AE has additional types.
issueID:UIMA-4496
type:Improvement
changed files:
texts:DUCC CLI Monitor (CLI) monitor should not show remote Job processes
CLI monitor output such as:30/06/2015 14:29:15 id:3 remote:4451@bluejws67-4should not be shown for Jobs processes (but should be shown for ManagedReservations).
issueID:UIMA-4497
type:Bug
changed files:
texts:Ruta: using BasicEngine for changing defaults of generated scripts
A problem was reported in UIMA-4453Investigate if there is a problem and if the correct descriptor is utliized.
issueID:UIMA-4498
type:Bug
changed files:
texts:DUCC Web Server (WS) NPE during monitor processing
01 Jul 2015 08:19:35,925  INFO WS.DuccWebMonitorReservation - 252837 renew  not found01 Jul 2015 08:19:35,926  INFO WS.DuccHandlerProxy - N/A handle   <null> java.lang.NullPointerExceptionAt:        org.apache.uima.ducc.ws.server.DuccWebMonitorReservation.renew(DuccWebMonitorReservation.java:230)        org.apache.uima.ducc.ws.server.DuccWebMonitor.renew(DuccWebMonitor.java:199)        org.apache.uima.ducc.ws.server.DuccHandlerProxy.handleServletReservationStatus(DuccHandlerProxy.java:157)        org.apache.uima.ducc.ws.server.DuccHandlerProxy.handleDuccRequest(DuccHandlerProxy.java:270)        org.apache.uima.ducc.ws.server.DuccHandlerProxy.handle(DuccHandlerProxy.java:293)        org.eclipse.jetty.server.handler.HandlerList.handle(HandlerList.java:47)        org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:110)        org.eclipse.jetty.server.Server.handle(Server.java:346)        org.eclipse.jetty.server.HttpConnection.handleRequest(HttpConnection.java:589)        org.eclipse.jetty.server.HttpConnection$RequestHandler.headerComplete(HttpConnection.java:1048)        org.eclipse.jetty.http.HttpParser.parseNext(HttpParser.java:601)        org.eclipse.jetty.http.HttpParser.parseAvailable(HttpParser.java:214)        org.eclipse.jetty.server.HttpConnection.handle(HttpConnection.java:411)        org.eclipse.jetty.io.nio.SelectChannelEndPoint.handle(SelectChannelEndPoint.java:535)        org.eclipse.jetty.io.nio.SelectChannelEndPoint$1.run(SelectChannelEndPoint.java:40)        org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:529)        java.lang.Thread.run(Thread.java:780)
issueID:UIMA-45
type:Task
changed files:
texts:Review and clean up unit tests
Things to review and clean up:1) The way that the tests find resource files is hacked up right now.  For legacy reasons they use classes in the junit_extension package to locate files.  The location of the files is decided by TestPropertyReader.getJUnitBasePath().  Since Maven requires (or at least strongly encourages) loading resources through the classpath, I hacked up getJUnitBasePath() to do a ClassLoader lookup on a dummy resource and return the directory in which it is found.  This ought to be cleaned up at some point.2) grep for TODO in src/test/java in both uimaj-core and uimaj-cpe.  There are many things that need to be addressed.  Several unit tests were commented out entirely because they didn't work right in Maven for some reason.
issueID:UIMA-450
type:Bug
changed files:
texts:Cas Editor: Renaming typesystem does not work
Renaming of the typesystem element in the corpus explorer does not work
issueID:UIMA-4500
type:Bug
changed files:
texts:A monitored job may fail if the WS monitor has not yet seen the job
This happened when both WS & OR cpu times were > 100% and network was probably slow.  Change to not terminate the monitor when the state is NotFound.  Race condition will be avoided when monitor is moved to OR !!
issueID:UIMA-4501
type:Bug
changed files:uimaj-core/src/main/java/org/apache/uima/internal/util/UIMAClassLoader.java
uimaj-core/src/main/java/org/apache/uima/internal/util/Utilities.java
uimaj-core/src/main/java/org/apache/uima/jcas/impl/JCasHashMap.java
texts:intermittent failure - uima class loader with multi-threads
Eddie found that a simple pipeline he wrote using an OpenNLP aggregate, for a DUCC test, occasionally failed with a certain combination of Java's, machines, data-being-processed.  (It was pretty rare).  The failure was java.lang.LinkageError: &#8211; the java class that was trying to be loaded --, and, for the failing Java, no other details (other than the stack trace.  The failure only happened if the OpenNlp aggregate was scaled out to run on multiple threads.Cause was traced to a small detail documented here in Java 7 info on implementing Multithreaded ClassLoading: http://docs.oracle.com/javase/7/docs/technotes/guides/lang/cl-mt.html .The UIMA Class loader was changed to support parallel class loading for Java 7 and beyond.  The problem is that the implementation didn't notice that the class loader using this facility has to have a mechanism to insure that "the protected defineClass() method is called only once for each class loader and class name pair."  The UIMA class loader fails to do this, and I think that's what's causing this issue.
issueID:UIMA-4502
type:Bug
changed files:
texts:DUCC JP does not exit cleanly on end of job
Sometimes a JP does not terminate on end of job. An agent sends a request to stop to the JP, but it gets stuck in camel contex.stop() and never completes the shutdown forcing agent to kill the process via -9.
issueID:UIMA-4503
type:Bug
changed files:
texts:DUCC Web Server (WS) incorrectly reports Agent as "up"
It seems that when calculating up/down status the WS is confused between seconds and milliseconds!
issueID:UIMA-4505
type:Bug
changed files:
texts:JCasFactory does not use auto-detection for type priorities and indexes
JCasFactory does not use auto-detection for type priorities and indexes. The respective arguments to CasCreationUtils used in JCasFactory are null. JCasFactory should use the full auto-detection, just like AnalysisEngineFactory does.
issueID:UIMA-4506
type:Bug
changed files:
texts:Unreproducible test failure on Jenkins
Encountered a test failure during XMI deserialization that I was unable to reproduce. Failure occurred on Jenkins:Building remotely on jenkins-ubuntu-1404-4gb-2d0 (jenkins-cloud-4GB cloud-slave Ubuntu ubuntu) in workspace /jenkins/workspace/UIMA-uimaFITUnpacking http://archive.apache.org/dist/maven/binaries/apache-maven-3.0.3-bin.zip to /jenkins/tools/hudson.tasks.Maven_MavenInstallation/Maven_3.0.3 on jenkins-ubuntu-1404-4gb-2d0org.apache.uima.fit.util.SimplePipelineTest.test1Failing for the past 1 build (Since Unstable#209 )Took 8 ms.add descriptionError MessageNo sofaFS with name myView found.Stacktraceorg.apache.uima.cas.CASRuntimeException: No sofaFS with name myView found. at org.apache.uima.cas.impl.CASImpl.getSofa(CASImpl.java:786) at org.apache.uima.cas.impl.CASImpl.getView(CASImpl.java:2978) at org.apache.uima.cas.impl.XmiCasDeserializer$XmiCasDeserializerHandler.<init>(XmiCasDeserializer.java:280) at org.apache.uima.cas.impl.XmiCasDeserializer$XmiCasDeserializerHandler.<init>(XmiCasDeserializer.java:78) at org.apache.uima.cas.impl.XmiCasDeserializer.getXmiCasHandler(XmiCasDeserializer.java:1931) at org.apache.uima.cas.impl.XmiCasDeserializer.deserialize(XmiCasDeserializer.java:2058) at org.apache.uima.cas.impl.XmiCasDeserializer.deserialize(XmiCasDeserializer.java:1977) at org.apache.uima.fit.util.CasIOUtil.readXmi(CasIOUtil.java:79) at org.apache.uima.fit.util.CasIOUtil.readCas(CasIOUtil.java:58) at org.apache.uima.fit.util.CasIOUtil.readJCas(CasIOUtil.java:178) at org.apache.uima.fit.util.SimplePipelineTest.test1(SimplePipelineTest.java:41)I haven't been able to reproduce the problem locally (tried with Java 7, Java 8, with and without the extra Maven profiles active during the Jenkins build, from Eclipse and from CLI, not necessarily all combinations).Rebuilding on Jenkins without any changes to the code also made the problem go away. Maybe there is/was a problem with the build slave...? Anyway, this is spooky.
issueID:UIMA-4507
type:Bug
changed files:
texts:DUCC Web Server (WS) fails to display history files on Services Details page
WS must employ duccling for logged-in user when attempting to gather data for History tab under Service Details page.
issueID:UIMA-4509
type:Bug
changed files:
texts:The ducc_perf_stats script no longer works
Was not updated for new style of option processing.May not be very useful so consensus seems to be to drop it.
issueID:UIMA-451
type:Bug
changed files:
texts:Cas Editor: AnnotionEditor.dispose() throws NPE
A NPE is thrown from the AnnotationEditor.dispose() method, if the documentcould not be loaded (e.g. cause the typesystem is missing or is incorrect).
issueID:UIMA-4510
type:Bug
changed files:
texts:Ruta: alternative continue match broken
Continue match and reluctant qualifiers are broken for alternative match options,
issueID:UIMA-4511
type:Task
changed files:
texts:Revert DUCC poms to 2.0.0-SNAPSHOT
Revert poms to 2.0.0-SNAPSHOT for RC2
issueID:UIMA-4512
type:New Feature
changed files:
texts:DUCC Web Server (WS) version 2.0.0
Update version from 2.0.0-beta to 2.0.0.
issueID:UIMA-4513
type:Bug
changed files:
texts:ruta-maven-plugin does not handle import by name correctly
We have two "mavenized" Ruta projects (Project A and B). The pom files in these projects strictly follow the ruta-maven-example.Project A contains some basic scripts that shall be reused in other Ruta projects. Thus Project B has a maven dependency to Project A.The ruta-maven-plugin has a configuration parameter that handles the type of import (by location or by name), e.g. <importByName>false</importByName>Setting importByName to true rises the following issues:1. The generated TypeSystem descriptors do not contain the types of the BasicTypeSystem, i.e. the scripts can not resolve the basic types.2. The generated Engine descriptors contain import statements that are not fully qualified, i.e. the package of referenced engines is missing.The following example shows the errornous import of the TypeSystem „com.denkbares.ruta.structures.LinesTypeSystem"        <typeSystemDescription>            <imports>                <import name="LinesTypeSystem"/>            </imports>        </typeSystemDescription>
issueID:UIMA-4514
type:Bug
changed files:
texts:DUCC JP fails with SocketException Addreas Already Bound
When deploying JPs for a DD job on the same node there is a chance of race when two JPs deploy embedded broker using the same port. The code is expecting BindException to handle a port that is not available, The JVM actually throws SocketException with a message Address already in use. Modify code to check for SocketException and the above message and on match retry with another port until success
issueID:UIMA-4515
type:Bug
changed files:
texts:DUCC Web Server (WS) System.Classes page may fail to display when user&#39;s preference is scroll mode
WS should not use getStringProperty(String k) unless it is prepared to handle a MissingPropertyException.
issueID:UIMA-4516
type:Bug
changed files:
texts:DUCC Agent doesn&#39;t kill JP on InitializationTimeout
The agent code to handle with InitializationTimeout was commented out by mistake recently, The agent should kill the JP on such event. Uncomment the code and test handling of the event.
issueID:UIMA-4517
type:Bug
changed files:
texts:fixing ArrayOutOfBounds exception when parsing invalid Ruta script
looking for more informative exception messages when parsing invalid Ruta scriptWhen using Ruta in a non-Workbench setup (in my case, Maven), I don't manage to catch Ruta script errors in a meaningful way. Here is an example:"aaa\." -> MyAnnotation; // fails because of escaped dotThe thrown error is quite uninformative:java.lang.ArrayIndexOutOfBoundsException: -1 at org.apache.uima.ruta.parser.RutaParser.emitErrorMessage(RutaParser.java:365) at org.apache.uima.ruta.parser.RutaParser.reportError(RutaParser.java:386) at org.antlr.runtime.BaseRecognizer.recoverFromMismatchedToken(BaseRecognizer.java:603) at org.antlr.runtime.BaseRecognizer.match(BaseRecognizer.java:115) at org.apache.uima.ruta.parser.RutaParser.file_input(RutaParser.java:680) at org.apache.uima.ruta.engine.RutaEngine.loadScript(RutaEngine.java:1058) at org.apache.uima.ruta.engine.RutaEngine.initializeScript(RutaEngine.java:743) ...Here is the code to reproduce: https://github.com/renaud/annotate_ruta_example/tree/ruta_error_messageHowever, if I paste that script line in the Ruta Workbench, it nicely underlines it in red at the exact location, and even says "Mismatched input". How do I achieve the same programatically (from Java)?
issueID:UIMA-4518
type:New Feature
changed files:uimaj-core/src/main/java/org/apache/uima/cas/impl/UimaDecompiler.java
uimaj-core/src/main/java/org/apache/uima/jcas/impl/JCasImpl.java
uimaj-v3migration-jcas/src/main/java/org/apache/uima/migratev3/jcas/MigrateJCas.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/TypeSystemImpl.java
uimaj-tools/src/main/java/org/apache/uima/tools/jcasgen/Jg.java
texts:uv3x Customized JCas cover class migration tooling
Add a standalone tooling for migrating v2 JCas classes to V3 style, while preserving any customization that may have been done.Initial approach:  command line tool, inputs are file system "roots" which are searched for either .java or .class files, recursively, including within Jar files.   For all that are likely JCas classes (use various heuristics, including if there is a paired ..._Type class), migrate the source form.     If starting with .class files, decompile those first to get the source form.       The migration consists of first parsing the source into an AST (Java Abstract Syntax Tree), and then having a view visitor methods to modify selected parts of the tree, including getters/setters and the 2-arg constructor. The migration tool should also report summaries of what it did, and handle things like multiple instances (including identifying which of these are ignorable because the files are all the same, and which have differences - so the user can decide).
issueID:UIMA-4519
type:Bug
changed files:
texts:DuccSchedulerClasses is not thread-safe
When JED submits many APs in parallel the check for a preemptable class can fail as the reloading of the classes file is unsafe.
issueID:UIMA-452
type:Bug
changed files:
texts:Cas Editor: Actions to modify annotations spans do not check bounds
The actions to modify the span of an annotation can create annotations which have start index > end indexor have spans outside of the document.
issueID:UIMA-4520
type:Improvement
changed files:
texts:Use snapshot iterators in uimaFIT select methods
Use snapshot iterators in uimaFIT select methods to avoid concurrent modification exceptions when changing the CAS while iterating over it.
issueID:UIMA-4521
type:Bug
changed files:
texts:The CLI won&#39;t accept "debug" as a scheduling class
The example classes file we ship has a class called "debug" but this cannot be specified on a request.  The parser must remove it early as it reports:"Missing required value for argument scheduling_class"
issueID:UIMA-4522
type:Bug
changed files:
texts:DUCC Orchestrator (OR) ConcurrentModificationException
DuccProcessMap may be modified (e.g. added to) while iterating.  Use ConcurrentHashMap in place of TreeMap.
issueID:UIMA-4523
type:Bug
changed files:
texts:UIMA-DUCC remove jetty-jsp-2.1-7.4.4.v20110707.jar from LICENSE
The jetty-jsp-2.1-7.4.4.v20110707.jar should be removed from LICENSE. This jar is covered by (webserver)jetty 7.4.4.v20110707. It has the same license as the jetty framework so there is no need to explicitly mention it.
issueID:UIMA-4524
type:Bug
changed files:
texts:DUCC build produces javadoc warnings
When building DUCC, the javadoc produces warnings for misspelled things like @returns instead of @return, parameters, etc. Seems like most DUCC projects show this problem. We should clean these up.
issueID:UIMA-4525
type:Bug
changed files:
texts:DUCC Web Server (WS) History tab displays wrong day of week
Use:SimpleDateFormat("yyyy-MM-dd HH:mm", Locale.ENGLISH);Not:SimpleDateFormat("yyyy-mm-dd HH:mm", Locale.ENGLISH);in org.apache.uima.ducc.ws.utils.alien.FileInfo
issueID:UIMA-4526
type:Bug
changed files:
texts:DUCC Web Server (WS) Specification should not be displayed when user is not logged-in
The ducc.js should not bypass specification fetching from WS upon refresh, since circumstances may have changed (e.g. user logged-out).   Although it is more efficient to not ask for the same specification during each refresh cycle the result may be wrong!
issueID:UIMA-4527
type:Bug
changed files:
texts:UIMA-AS NOTICE file is missing xmlbeans attributions
The xmlbeans.jar NOTICE file contains attributions that are missing from UIMA-AS NOTICE file.
issueID:UIMA-4528
type:Bug
changed files:
texts:DUCC NOTICE file is missing xmlbeans attributions
In xmlbeans.jar NOTICE file there are attributions that are not included in DUCCs NOTICE file.
issueID:UIMA-4529
type:Bug
changed files:
texts:DUCC docs don&#39;t reflect recent changes to the ducc_reserve comamnd
ducc_reserve now enables --wait_for_completion by default, and may wait forever if the request cannot be satisfied by any of the available machines.
issueID:UIMA-453
type:Bug
changed files:
texts:Cas Editor: FS View delete button does not work

issueID:UIMA-4530
type:Improvement
changed files:uimaj-core/src/main/java/org/apache/uima/cas/impl/CasSerializerSupport.java
uimaj-core/src/main/java/org/apache/uima/jcas/impl/JCasImpl.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/CASImpl.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FSIndexRepositoryImpl.java
uimaj-core/src/main/java/org/apache/uima/util/CasCopier.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/TypeSystemImpl.java
texts:make built-in uima types static
UIMA's type system has lots of "built-in" things which are always the same, and must be (for interoperability with C++, etc.).  Yet, these are dynamically created for every type system.  Change this so the built-ins are static kinds of Java things;  this will (among other things) permit the use of codes like booleanTypeCode to be use in Java switch/case statements (they need to be "constant").
issueID:UIMA-4532
type:Bug
changed files:
texts:DUCC Orchestrator (OR) expunge use of "shares"
OR should cease use of org.apache.uima.ducc.transport.event.rm.IResource.countShares().quantum is for RM.
issueID:UIMA-4533
type:Bug
changed files:uimaj-tools/src/main/java/org/apache/uima/tools/viewer/CasAnnotationViewer.java
texts:class cast exception in CasAnnotationViewer
The CasAnnotationViewer has a long-standing issue - it doesn't properly handle the displaying features which are built-in arrays (except FSArray), if the CAS being viewed is a JCas style Cas - a class cast exception happens. This problem predates the changes introduced in UIMA-3374, but is present there too.  Prior to UIMA-3374, the CasAnnotationViewer did not activate the JCas, and the DocumentAnalyzer (a main caller of this viewer) always passed in a non-JCas CAS, so things worked.  The changes in UIMA-3374 activated the JCas (it did a cas.getJCas()), and this exposed these previously present errors which generate class cast exceptions. These errors are caused by code that presumed a non-JCas style of CAS, and did casts that depended on this. One instance of this is the line StringArrayFSImpl arrayFS = (StringArrayFSImpl) aFS.getFeatureValue(feature);which generates a cast exception if the JCas is being used.  Scan the code to find any other instances of an assumption being made of the kind of cover class.
issueID:UIMA-4534
type:Bug
changed files:uimaj-core/src/main/java/org/apache/uima/cas/impl/FeatureStructureImpl.java
texts:Regression: method added is clashing with jcas-gen&#39;d method
A method added to an internal class is clashing with generated JCasgen'd standard method getTypeCode, because the class has a feature called "TypeCode".  Change the name of this method to avoid this.  Look for other instances where there could be a name clash.
issueID:UIMA-4535
type:Bug
changed files:
texts:Flatten indexes need to be invalidated when switching to JCas
uima 2.8.0 introduced automatically-generated "flattened-indexes", created after measurements of use indicate it would be beneficial to replace iteration over a type with (lots of) subtypes, with a flattened version of that index.  These flattened versions hold the Java cover class instantiation of the instances.  If these are created before JCas is used, then the cover classes are the non-JCas ones, e.g. FeatureStructureImpl or AnnotationImpl.  After the JCas is used, the generators are switched to use the JCas ones.A problem occurs in this case: JCas is not used, a flattened index is created, JCas is activated, and then an iteration is done over the flattened index.  This iteration will return the non-JCas versions of the cover classes, potentially causing class cast exceptions.The fix, I think, is to invalidate any flattened indexes that might exist in all views, the first time JCas use is started.
issueID:UIMA-4536
type:Improvement
changed files:
texts:setFeature/getFeature methods
Motivated by a discussion on the mailing list, I think it would be great to have a suite of methods along the line ofsetFeature(fs, "featureName", featureValue);getFeature(fs, "featureName", ValueClass.class);
issueID:UIMA-4537
type:Improvement
changed files:
texts:Upgrade to UIMA 2.8.0/2.8.1
Upgrade to UIMA 2.8.0/2.8.1 (or whatever the bugfix version for 2.8.0 will be).
issueID:UIMA-4538
type:Improvement
changed files:
texts:Fix JavaDoc for Java 7
The javadoc-maven-plugin is apparently still configured for Java 1.5 and doesn't like multi-catch statements. Probably we also don't need the apiLinks override anymore that redirected the links to the Sun Java APIDocs to Oracle.
issueID:UIMA-4539
type:Improvement
changed files:
texts:DUCC Web Server (WS) 2.1.0 improvements & small fixes
Improvements and small fixes.
issueID:UIMA-454
type:Bug
changed files:
texts:Cas Editor : AnnotationEditor highlights annotations which do not belong to the current annotation mode
In the FS View it is possible to select an annotation which has a different type than the annotation mode of the current editor.The editor than highlights than the bounds of the selected annotation, but it should only highlight annotations which have the same type as the annotation mode.
issueID:UIMA-4540
type:Bug
changed files:
texts:DUCC JP does not publish final AE init stats when it completes initialization
When a JP is launched, it starts an executor which spins a thread every 20 seconds to collect AE initialization status which is published to an agent.When all AEs initialize, a JP stops the executor and a reporting thread preventing the final update from being sent to an agent. The WS in such case is never updated and shows stale information.Fix: modifiy JobProcessComponent.start() to force an update to an agent before stopping the executor..
issueID:UIMA-4541
type:Bug
changed files:uimaj-core/src/main/java/org/apache/uima/util/CasCopier.java
texts:CasCopier edge use case copies multiple DocumentAnnotation instances
The normal envisioned use case for the cas copier is1) make an instance of the cas copier, specifying the two CASs2) do an operation (copy a cas, copy a cas-view, copy some FSs)Some users are in a sense reusing the cas copier instance; they make an instance, and then copy some FSs, and then maybe copy a view.  The general contract for the CasCopier instance is that it "remembers" what FSs have been copied, and doesn't copy them again. There was an optimization that tried to speed up the isDocumentAnnotation test - the casCopier instance remembers what the srcCasDocumentAnnotation is, once it's looked up.  Unfortunately, each view has its own; there was code to re-look it up but it wasn't being set for all possible user invoked paths.  Note this is only an issue for use cases which are using the same casCopier instance both for copying individual FSs and for copying views.
issueID:UIMA-4542
type:Bug
changed files:uimaj-core/src/main/java/org/apache/uima/cas/impl/FSIndexRepositoryImpl.java
texts:edge cases need Flattened index invalidation
There are some edge cases that invalidate the flattened indexes, that are not accounted for.  One is what happens when a pipeline transitions from non-JCas to JCas generators.  Any flattened index built before this transition will have the incompatible kinds of Java Cover classes. The other happens within a PEAR context - during that part of a pipeline, the classpath is altered, and the PEAR could be redefining the Java cover classes.  There may be others.  For now, because measurements in real-life situations didn't show much if any improvement, the fix is to disable this feature.
issueID:UIMA-4545
type:Improvement
changed files:
texts:build of uimaj-ep-launcher needs updated bundle plugin
While running with Eclipse MARS (the latest) I found that the ep-launcher was not building - the maven bundle plugin (version 2.3.7) complained of some "manifest" error.  Upgrading this to 2.5.0 (the current level) got rid of the problem.  But when I upgraded this in the parent pom for uimaj, some other plugin started failing to build, giving an error "default package '.' not permitted, org.apache.uima.cas.impl.  I didn't track this down; I just kept the 2.3.7 version in the uimaj-parent pom, and changed the pom for uimaj-ep-launcher to 2.5.0.
issueID:UIMA-4546
type:Bug
changed files:
texts:UIMA-AS client not recovering when broker connection is lost
The UIMA-AS client reports:Jul 31, 2015 1:35:50 PM org.apache.uima.adapter.jms.client.ActiveMQMessageSender rejectINFO: UIMA AS Client Message Dispatcher Rejecting Process Request - the Broker Is Not Available.Jul 31, 2015 1:35:50 PM org.apache.uima.adapter.jms.client.BaseUIMAAsynchronousEngineCommon_impl handleExceptionINFO: Received Exception In Message From Service on Queue:UimaASClient Broker: tcp://broker1:61616 Cas Identifier:94c42d8:14ee51d8e71:-783c Exception:org.a\pache.uima.jms.error.handler.BrokerConnectionException: Unable To Deliver Message To Destination. Connection To Broker tcp://broker1:61616 Has Been LostJul 31, 2015 1:35:50 PM org.apache.uima.adapter.jms.client.BaseUIMAAsynchronousEngineCommon_impl$SharedConnection retryConnectionUntilSuccessfullWARNING: UIMA AS Client Has Lost Connection To Broker:tcp://broker1:61616 Retrying Connection every 5secs until successful. Is Client Stopped:Jul 31, 2015 1:35:50 PM Jul 31, 2015 1:35:50 PM org.apache.uima.adapter.jms.client.BaseUIMAAsynchronousEngineCommon_impl sendCASINFO: Uima AS Client Sent PING Message To Service: fastqa-2015-28Jul 31, 2015 1:35:50 PM org.apache.uima.adapter.jms.client.BaseUIMAAsynchronousEngine_impl initializeConsumerINFO: Initializing JMS Message Consumer. Broker: tcp://broker1:61616 Queue Name: ID:XXX-35499-1438363236054-1:2:1Jul 31, 2015 1:35:50 PM org.apache.uima.adapter.jms.client.BaseUIMAAsynchronousEngine_impl initializeConsumerINFO: Initializing JMS Message Consumer. Broker: tcp://broker1:61616 Queue Name: ID:XXX-35499-1438363236054-1:2:2Jul 31, 2015 1:35:50 PM org.apache.uima.adapter.jms.client.BaseUIMAAsynchronousEngine_impl initializeConsumerINFO: Initializing JMS Message Consumer. Broker: tcp://broker1:61616 Queue Name: ID:XXX-35499-1438363236054-1:2:3Jul 31, 2015 1:35:50 PM org.apache.uima.adapter.jms.client.BaseUIMAAsynchronousEngineCommon_impl$SharedConnection retryConnectionUntilSuccessfullINFO: UIMA AS Client Recovered Connection to Broker: tcp://broker1:61616Jul 31, 2015 1:36:21 PM org.apache.uima.aae.delegate.Delegate$2 Delegate.TimerTask.runWARNING: Timeout While Waiting For Reply From Delegate:fastqa-2015-28 GetMeta Request Timed Out. Configured Reply Window Of 30,000.Jul 31, 2015 1:36:21 PM org.apache.uima.adapter.jms.client.ClientServiceDelegate handleErrorWARNING:                         WARNING: Service: fastqa-2015-28 Didn't Respond To Ping. PendingDispatchList Size:1 PendingReplyList size:9                    Jul 31, 2015 1:36:21 PM org.apache.uima.adapter.jms.client.ClientServiceDelegate handleErrorWARNING: UIMA AS Client Forcing Timeout on CAS: 94c42d8:14ee51d8e71:-783b (Hashcode:-1865482558) from PendingDispatch list. Unable to Dispatch the CAS Due \to Service Not Responding to a GetMeta ping.It looks like the connection is being recovered but the subsequent GetMet Ping requests timed out for some reason. This was not caused by a broker since I was able to connect a test client to the service and GetMeta worked just fine.Strange that this client fails since there are jUnit tests in extended test that force recovery after connection loss.
issueID:UIMA-4547
type:Improvement
changed files:
texts:Ruta: Improve numeric operations in rules
concerns for example some flaws in PARSE condition and missing numeric functions
issueID:UIMA-4548
type:Bug
changed files:uimaj-core/src/main/java/org/apache/uima/cas/impl/CASImpl.java
texts:ArrayOutOfBounds exception thrown during delta CAS deserialization
Bhavani reports a reproducable ArrayIndexOutOfBounds exception while deserializing a delta CAS.  Debugging traced this to a wrong "end" argument passed to Arrays.binarySearch with bounds - the end bound is "exclusive", but the value passed needed to be in the range considered.
issueID:UIMA-4549
type:Bug
changed files:
texts:Ruta: AE called in script breaking partitioning: problem with added annotations
Ruta: AE called in script breaking partitioning: problem with added annotations
issueID:UIMA-455
type:Bug
changed files:
texts:Unused import com.sun.org.apache.bcel.internal.generic.ISTORE in CasEditor causes build break with IBM JVM

issueID:UIMA-4550
type:Bug
changed files:
texts:Ruta: m2e build destroys compiled dictionaries created my normal maven build
Ruta: m2e build destroys compiled dictionaries created my normal maven bulid. It overrides it with an empty xml as if there are no input files.
issueID:UIMA-4551
type:Task
changed files:
texts:Ruta: update uima dependency
... but take care that the workbench plugin also work with older uima versions.
issueID:UIMA-4552
type:Task
changed files:
texts:Ruta: prepare release candidate
for example, fix the rat reports...
issueID:UIMA-4554
type:Bug
changed files:uimaj-jet-expander/src/org/apache/uima/util/jet/JetExpander.java
texts:JCasGen generating rawType warnings for fsGenerator
JCasGen generate references to FsGenerator which was changed in 2.8.0 to have generic type information.  So the resulting generated code causes warnings about raw types being used.  Workaround - add a @SuppressWarnings("rawtypes"), but a better thing would be to add the proper generic arguments.
issueID:UIMA-4555
type:Bug
changed files:
texts:UIMA-DUCC includes two copies of xstream jar
Two different versions of xstream jar are included in Ducc distro. One is in apache camel, and the other in activemq. Check if one of these can be removed.
issueID:UIMA-4556
type:Bug
changed files:
texts:MARKTABLE does not support ignoring whitespaces in the entries of the dictionary
MARKFAST's last parameter allows to specify whether whitespaces in the entries of the dictionary should be ignored. see docsMARKTABLE does not support this. One way to add this feature is to support it down to the scripting language. However, it would break backwards compatibility, since it would change the syntax fromMARKTABLE(TypeExpression, NumberExpression, TableExpression           (,BooleanExpression, NumberExpression,           StringExpression, NumberExpression)?           (,StringExpression = NumberExpression)+)toMARKTABLE(TypeExpression, NumberExpression, TableExpression           (,BooleanExpression, NumberExpression,           StringExpression, NumberExpression, BooleanExpression)?           (,StringExpression = NumberExpression)+)
issueID:UIMA-4557
type:Improvement
changed files:
texts:Ruta: prefer local paths  instead of classpath in workbench
Prefer local paths  instead of classpath in workbench: just change the order they are listed.
issueID:UIMA-4559
type:Bug
changed files:
texts:Ruta: wildcard match in stacked composed within inlined rule broken
Ruta: wildcard match in stacked composed within inlined rule broken:HeadlineTag -> {    ((NUM{STARTSWITH(HeadlineTag)} (PERIOD NUM)?){PARSE(n)} (CW #){-> HeadlineText})        {-> CREATE(NumberedHeadline, "number" = n)};};
issueID:UIMA-456
type:Improvement
changed files:
texts:Make our Eclipse plugin projects into PDE projects
Joern submitted a patch that changed the uimaj-ep-runtime project to be an Eclipse PDE project.  This was done by changing the Maven POM and assembly descriptors appropriately.  It would be nice if all of our plugin projects worked in this way.
issueID:UIMA-4560
type:Bug
changed files:
texts:Ruta: wildcard match until optional rule element
Ruta: wildcard match until optional rule elementshould this match also for the end of the document?(Type1 #) Type1?;
issueID:UIMA-4562
type:Bug
changed files:
texts:examples project from binary distr has wrong Eclipse launch configuration
An accidental commit 1633891 (commit message was "This was an accidental commit - pushed the wrong button.  I'll attempt to revert"  never was reverted.  Revert this change for the lauinchers (only) because it's preventing the launcher from finding the uima-core jar in the Classpath UIMA_HOME/lib directory
issueID:UIMA-4564
type:Bug
changed files:
texts:When a monitored job is given the state "Assigned" it terminates the job
Assigned should terminate only a reservation request
issueID:UIMA-4565
type:Bug
changed files:uimaj-core/src/main/java/org/apache/uima/cas/CAS.java
uimaj-core/src/main/java/org/apache/uima/cas/CAS.java
uimaj-core/src/main/java/org/apache/uima/cas/CAS.java
texts:CAS.FEATURE_FULL_NAME_SOFA wrong?
The CAS interface has to say this about the sofa feature's full nameFEATURE_FULL_NAME_SOFA = "uima.tcas.Annotation:sofa";However, when I try to use this to filter out the sofa feature, I don't catch it - and the reason seems to be that the sofa feature is actually defined asuima.cas.AnnotationBase:sofa... at least that's what the debugger says.
issueID:UIMA-4566
type:Improvement
changed files:
texts:FeatureStructure and AnnotationFS not recognized by CASUtil.getType()
FeatureStructure and AnnotationFS are not recognized by CASUtil.getType(). However, it would be convenient if FeatureStructure were mapped to TOP and AnnotationFS to Annotation, because that would allow to use these classes e.g. in select() calls.
issueID:UIMA-4567
type:Bug
changed files:
texts:Ruta: descriptor and uimaFIT default value for removeBasics not equal
Ruta: descriptor and uimaFIT default value for removeBasics not equal. I think it should be false, but I gonna wait a bit until further investigation on transferring information between AEs for the same CAS.
issueID:UIMA-4568
type:Improvement
changed files:
texts:Ruta: improve internal indexing for multiple ruta engine calls
Right now, the RutaBasics are not cached in the CAS. Therefore, all the internal information in beginMap, endMap and partof needs to be recreated for each call of an Ruta analysis engine. Investigate how this problem can be solved or relaxed.Some ideas (brainstorming): wait until annotations in UIMA are represented by a normal java objects try to enforce caching the relevant FSs (RutaBasic) store the information in features (the normal CAS way) add an extra index (can it be injected in order to avoid the problems with type priorities?) use an external resource (the probably most unnatural way)
issueID:UIMA-4569
type:Task
changed files:
texts:DUCC RM should report allocations in GB instead of number-of-shares
DUCC RM is to be updated to report allocations in GB instead of number of shares.
issueID:UIMA-457
type:Bug
changed files:
texts:Can&#39;t build CAS Editor from SVN checkout in Eclipse
I can't build the CAS Editor in Eclipse after checking it out from SVN.  I'm getting an error messages that "AbstractAnnotationDocumentListener", "AbstractDocument", "Action", and other classes can't be resolved to a type.  I'm assuming that this is some sort of class path issue.  Could somebody help?Thanks.
issueID:UIMA-4572
type:Bug
changed files:
texts:Ruta: descriptor name contains null if no package is given
Ruta: descriptor name contains null if no package is given
issueID:UIMA-4574
type:Bug
changed files:
texts:DUCC Job Driver (JD) incorrectly calculates values used for WS performance tab
JP supplies performance information for each completed WI to JD, comprising annotator performance data tuples of { short-name, unique-name, and msecs }.There are several problems addressed.1. JD should use unique-name as the primary key for performance data aggregation2. JD should normalize the unique-name by discarding from the left-hand side: <thread-number> "Components"3. WS should display short-name in the Performance tab and upon hover pop-up the unique-name
issueID:UIMA-4575
type:Bug
changed files:
texts:DUCC Agent adds duplicate -Dducc.deploy.components to the cmd line
The Agent adds duplicate -Dducc.deploy.components to the command line it receives from the OR. No need for doing this. The duplication does not cause any runtime issues but it is just wrong to add duplicate -Ds. Update DuccCommandExecutor.java
issueID:UIMA-4576
type:Bug
changed files:
texts:Sometimes jobs fail with: Missing the -Dducc.deploy.JdURL property
JPs are started before the OR has added the JdURL to the command line
issueID:UIMA-4577
type:Task
changed files:
texts:DUCC Add support for database
Database support to replace files for checkpoint, history, and then add additional things such as RM node status and user performance data.
issueID:UIMA-4578
type:Bug
changed files:
texts:DUCC Agent not killing child processes
Processes launched by an agent may spawn child processes. Currently, when a process is de-allocated, an agent only stops that process. Its not checking cgroups to determine if there are child processes to cleanup.These processes remaining running and a cgroup is never removed.
issueID:UIMA-4579
type:Task
changed files:
texts:Remove CAS semver exclude after next release
The exclude for the CAS interface introduced for UIMA-4565 must be removed again after the next (2.8.2) release. The exclude is configured in the uimaj-parent POM:<!-- UIMA-4565 Exclude CAS from check for 2.8.2 - after 2.8.2 release --><exclude>org/apache/uima/cas/CAS</exclude>
issueID:UIMA-4580
type:Bug
changed files:
texts:Findbugs (and others) fail on Java 8 CI build
Since UIMA is by default on Java 7 now, I have created a Java 8 build on Jenkins. However, here it appears that at least findbugs is having problems:[INFO] --- findbugs-maven-plugin:2.5.4:findbugs (default) @ uimaj-test-util ---[INFO] Fork Value is true     [java] The following errors occurred during analysis:     [java]   Unable to get XClass for java/lang/StringBuilder     [java]     java.lang.ArrayIndexOutOfBoundsException: 5747     [java]       At org.objectweb.asm.ClassReader.readClass(Unknown Source)     [java]       At org.objectweb.asm.ClassReader.accept(Unknown Source)     [java]       At edu.umd.cs.findbugs.asm.FBClassReader.accept(FBClassReader.java:44)     [java]       At org.objectweb.asm.ClassReader.accept(Unknown Source)....Give earlier experience, I assume that various code QA plugins need to be updated for compatibility with Java 8.Testing this in uimaj core, but probably should not be done locally but in the parent-pom.
issueID:UIMA-4581
type:New Feature
changed files:
texts:Ruta: resolve short names also using the overall imports of the script
Here's the situation:AAE ruta script with ruta.type1, contains rules using type1 some other analysis engine with ae.type1The ruta script will never know of the other analysis engine...We had this problem initially when we introduced the aliasing, but its still occurs if we do not want to adapt the ruta script. It should however be possible to resolve the correct short name using the imports of the script: use the type that is known. Maybe I missed something... at least this issue should be investigated.
issueID:UIMA-4582
type:Bug
changed files:
texts:The default for process_per_item_time_max is missing from ducc.properties
There is another hard-wired default of 24 hrs that is used.Should also check if we're missing other defaults.
issueID:UIMA-4583
type:Bug
changed files:
texts:Ruta: jumpto rule broken in explanation view
There must be something wrong with the id counting. ruta-core or the ide are maybe missing the inlined rules?
issueID:UIMA-4585
type:Bug
changed files:
texts:DUCC Agent CPU percentage is wrong when JP spawn child procs
Looks like an Agent is not calculating CPU percentage correctly when running with cgroups and JP spawns child processes. It correctly iterates over all processes in the cgroup but it keeps collecting CPU from the JP stat file in the /proc file system.To fix this, while iterating over procs in the cgroup, open process stat file to read the CPU. Make sure to close the file when done.
issueID:UIMA-4586
type:Improvement
changed files:
texts:DUCC Job Driver (JD) should provide individual work item performance breakdowns
Presently, JD provides a combined performance breakdown for all work items.  It is sometimes useful to have performance breakdowns for individual work items and JD should provide same.Initially, enable/disable of this capability will be via an environment variable: DUCC_WORK_ITEM_PERFORMANCE=true specified with the user's Job submission.When enabled, the JD will create subdirectory work-item-performance in the user specified log directory and will place an individual json.gz file for each work item successfully processed comprising its performance breakdown.
issueID:UIMA-4587
type:Bug
changed files:
texts:DUCC SM race: rapid unregister/deregister can corrupt state.
If an unregister followed by a very quick register for a service with the same endpoint is done, the internal tables managing these regs can get corrupted.  The problem appears to be missing 'synchronized' around the CLI-based methods.
issueID:UIMA-4588
type:Bug
changed files:
texts:DUCC JPs, APs, and JDs should not listen for events on admin channel
Only true Ducc daemons should listen on admin channel for events. User processes (JP, AP, JD) should not start listener on the admin channel, These processes lifecycle manager is an agent.
issueID:UIMA-4589
type:Bug
changed files:
texts:Ruta: CDE cannot handle directories with periods
The implementation of a helper method is crap...
issueID:UIMA-459
type:Bug
changed files:
texts:References html file has 0 bytes after clean build
When built separately, the references html file is generated correctly.  When the whole docbook build is run, for example in a clean extract, the references.html is empty (while the pdf is generated correctly).
issueID:UIMA-4592
type:Bug
changed files:
texts:Ruta: redundant elements in disjunctive composed leads to missed match
No idea yet what went wrong...was something like:A X (B (C1 | C2 | D)?)[1,5] Y;
issueID:UIMA-4594
type:Bug
changed files:
texts:Ruta: internal indexing broken for incremental partitioning
Ruta: internal indexing broken for incremental partitioning... working on a unit test.
issueID:UIMA-4595
type:Bug
changed files:
texts:Ruta: sorting of constraint expectation results broken in CDE view
Ruta: sorting of constraint expectation results broken in CDE view
issueID:UIMA-4596
type:Bug
changed files:
texts:Ruta: open document broken in CDE documents view for some special cases
Ruta: open document broken in CDE documents view for some special cases. Investigating...
issueID:UIMA-4597
type:New Feature
changed files:
texts:Ruta: Assign annotations to FSArray in implicit action
Ruta: Assign annotations to FSArray in implicit action. That's not yet supported.
issueID:UIMA-4598
type:Bug
changed files:
texts:DUCC JP should adjust performance metrics
The JP should strip the first two parts (delimited with "/") from the unique name of each delegate AE. Currently the name looks as follows:<N> Components/DUCC.Job/<AE Name>. Modify code so that the Web Server gets /<AE Name>.
issueID:UIMA-4599
type:Bug
changed files:
texts:Ruta: unknown problem in optional rule element
This rule (actually a wrong tutorial rule!) causes severe problems (exceptions):(Labor Entity.label=="NUMBER"{PARSE(v)} AhaUnit     (Entity.label=="NUMBER"{PARSE(low)-> ASSIGN(hasLowerLimit, true)}     Token.ct=="-"     Entity.label=="NUMBER"{PARSE(high)-> ASSIGN(hasUpperLimit, true)})?    )    {-> CREATE(LaboratoryValue,         "labor" = Labor,        "unit" = Unit,        "value" = ""+(v),        "numericValue" = v,        "hasNumericValue" = true,        "lowerLimit" = low,        "hasLowerLimit" = hasLowerLimit,        "upperLimit" = high,        "hasUpperLimit" = hasUpperLimit,        "limitsFromText" = hasUpperLimit        )};
issueID:UIMA-46
type:Bug
changed files:uimaj-core/src/main/java/org/apache/uima/util/CasCreationUtils.java
texts:Duplicate feature name on supertype and subtype does not work if subtype definition comes first in descriptor
If a user's type system declares an identical named feature on a supertype and one of its subtypes, it works as long as the supertype definition comes first in the XML type system descriptor.  (The subtype definition is ignored.)  But if the subtype definition comes first, then the feature is only created on the subtype, NOT the supertype.  We should make this consistent, so that the feature is always created on the supertype.
issueID:UIMA-460
type:Improvement
changed files:
texts:Change CAS Editor Docs project to be a general sandbox docs project
See mail thread: http://www.mail-archive.com/uima-dev%40incubator.apache.org/msg03299.html
issueID:UIMA-4600
type:Bug
changed files:
texts:Ruta: Feature value matches combined with wildcard problem
Maybe the rule is wrong again, but maybe there is a real problem:@AbbrConcept.uniqueID!=null{-> ASSIGN(id, AbbrConcept.uniqueID),ASSIGN(matchedText, AbbrConcept.ct)}     # AbbrConcept.uniqueID == null{AbbrConcept.ct == matchedText -> AbbrConcept.uniqueID = id};
issueID:UIMA-4601
type:Bug
changed files:
texts:Ruta: TRIM action creates invalid annotation causing problems in CAS Editor
Ruta: TRIM action creates invalid annotation causing problems in CAS Editor. It's not added to the stream, but to the index.
issueID:UIMA-4602
type:Bug
changed files:
texts:Ruta IDE collects too many dependencies for classpath of launch config
Ruta IDE collects too many dependencies for classpath of launch config. If it is a maven project then the exclusions are considered, but bypassed by collecting the dependencies of the dependent project.
issueID:UIMA-4603
type:Bug
changed files:
texts:Ruta: wildcard combination causes unintented multiple matches
Ruta: wildcard combination causes unintented multiple matches. Occurred in something like:I # @ParenOpen #         M{-PARTOF(E)-> GATHER(E, "indicator" = 1, "value" = 5)}         C        M{-PARTOF(E)-> GATHER(E, "indicator" = 1, "value" = 7)}         # ParenClose;
issueID:UIMA-4604
type:New Feature
changed files:
texts:Descriptor xml: ExternalResourceDependency cannot take a Dictionary
I wrote a small flow with a descriptor for a DictionaryNameFinder.I can get it to work with configurationParameters and a configurationParameterSettings with reference to a dictionary xml file.But that give me a warning:WARNING: The unmanaged resource models/names.dic was accessed.This feature is deprecated, and support may be removed in future versions.I can't get externalResourceDependencies to work. I have been told that it is not implemented for Dictionaries.Please provide support for Dictionaries in externalResourceDependencies.
issueID:UIMA-4605
type:Bug
changed files:
texts:Initialization of annotator class "org.apache.uima.ruta.engine.RutaEngine" failed
I got the error when I use the absolute path to create resource specifier,I declared a new type in the script and created a custimzed engine file, when I use it to create AE, I got the error:code is like:ResourceManager resMgr = UIMAFramework.newDefaultResourceManager(); URL aedesc = new File( customEngineFile ).toURI().toURL();XMLInputSource inae = new XMLInputSource( aedesc );ResourceSpecifier specifier =  UIMAFramework.getXMLParser().parseResourceSpecifier(inae);  AnalysisEngineDescription aed = (AnalysisEngineDescription) specifier;aed.resolveImports(resMgr);ae = UIMAFramework.produceAnalysisEngine(aed, resMgr, null);org.apache.uima.resource.ResourceInitializationException: Initialization of annotator class "org.apache.uima.ruta.engine.RutaEngine" failed.  (Descriptor: file:/Users/xxx/Documents/runtime-xxx/nnn/descriptor/defaultEngine.xml)
issueID:UIMA-4606
type:Bug
changed files:
texts:DUCC Webserver needlessly polls history
The webserver appears to constantly poll the history database / filesystem for all work that is known to be running.  This always returns a 'not found'.  It is mostly harmless but can create a needless load on the system and appears to be incorrect behaviour, as the ws already knows the query is required to fail (because the work is still running, and can't be in history.).In the non-database version of history, simply log from the 'restore&#91;Reservation Job Service&#93;' methods to observe the behaviour.
issueID:UIMA-4607
type:Bug
changed files:
texts:Optionally bundle java source code when building DUCC
Modify parent pom to conditionally add java sources when building DUCC projects. Enable this with a maven profile -Pbundle-source-code
issueID:UIMA-4608
type:Bug
changed files:
texts:Add SVN revision number to DUCCs jars
Modify DUCCs parent pom to add SVN revision number to the jars MANIFEST
issueID:UIMA-4609
type:Bug
changed files:
texts:Create new DUCC branch for release 2.0.1
Create new DUCC branch from uima-ducc-2.0.0 tag
issueID:UIMA-461
type:Improvement
changed files:
texts:Have docbuild ant script check for JVM version 5 or better
Docbook building requires JVM 5 or better, and fails in strange ways if run on 1.4.  Ant script should check this.
issueID:UIMA-4610
type:Bug
changed files:
texts:DuccSchedulerClasses still not thread-safe
When JED submits many APs in parallel the check for a preemptable class in DuccManagedReservationSubmit can fail as the reloading of the classes file is unsafe.Need to do double-check-locking
issueID:UIMA-4611
type:Bug
changed files:
texts:Upgrade WS version display
Make version 2.1.0
issueID:UIMA-4612
type:Improvement
changed files:
texts:DUCC Orchestrator (OR) externalize max threads per process limit to ducc.properties
Value for max threads per process allowed should be specifiable in ducc.properties.Default is found in IDuccSchedulingInfo.maxThreadsPerProcess = 100
issueID:UIMA-4613
type:Bug
changed files:
texts:Ruta: NPE for importing and configuring BasicEngine
ENGINE BasicEngine;Document{->CONFIGURE(BasicEngine, "dictRemoveWS" = true)};
issueID:UIMA-4615
type:Improvement
changed files:
texts:Sample descriptors should allow multiple deployments so can have more than 1 pipeline per JP
Some already have multipleDeploymentAllowed set 'true'
issueID:UIMA-4616
type:Bug
changed files:
texts:The uima-ducc-user jar should added to the head of the user&#39;s classpath
It is currently appended which means that a back-level copy can be used if there is a back-level cli jar in the user's classpath
issueID:UIMA-4617
type:Bug
changed files:
texts:DUCC should not take the --log_directory relative to the user&#39;s home directory
The --working-directory is assumed to be relative to the current directory when the request is made.  The --log_directory could be the same, or it could be relative to the value of the --working_directory option.
issueID:UIMA-4618
type:Improvement
changed files:jcasgen-maven-plugin/src/main/java/org/apache/uima/tools/jcasgen/maven/JCasGenMojo.java
jcasgen-maven-plugin/src/main/java/org/apache/uima/tools/jcasgen/maven/JCasGenMojo.java
texts:jcasgen maven plugin reports only NPE for reserved feature name
When the maven plugin is applied on a type system that contains a type that sepcifies a feature with a reserved name, e.g., type or address, then only an NPE is thrown without any indicator what went wrong (with the default logging settings). Some error message/logging in the default use case could save some time searching for the problem.
issueID:UIMA-4619
type:Improvement
changed files:
texts:Ruta: maven plugin causes endless m2e builds
I sometimes have the problem that the m2e build starts over and over again... doing nothing but blocking all user operations. It is probably not causes by the ruta maven plugin, but it should be investigated if it has its part in it.
issueID:UIMA-462
type:Bug
changed files:uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/MultiPageEditor.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/model/DescriptorTCAS.java
texts:CDE: when saving a remote delegate, where the remote is registered but not running, gets an internal CDE error
User writes:When I use the CDE (Linux - Eclipse 3.2 - UIMA-EE) to add a remote delegate to an Aggregate and then try to save I get "Save failed: Invalid Exception" ... the trace from the Error log is appended.  The problem is that the service is registered but not running ... I see the "resolved to" and "failed to connect" msgs in the window I started eclipse from.  Much the same error msgs when the service is not registered.Burn.org.apache.uima.taeconfigurator.InternalErrorCDE: Invalid Exception at org.apache.uima.taeconfigurator.model.DescriptorTCAS.update(DescriptorTCAS.java:96) at org.apache.uima.taeconfigurator.model.DescriptorTCAS.get(DescriptorTCAS.java:82) at org.apache.uima.taeconfigurator.editors.MultiPageEditor.validateIndexes(MultiPageEditor.java:988) at org.apache.uima.taeconfigurator.editors.MultiPageEditor.syncSourceBeforeSavingToFile(MultiPageEditor.java:601) at org.apache.uima.taeconfigurator.editors.MultiPageEditor.doSave(MultiPageEditor.java:699) ...Caused by: org.apache.uima.resource.ResourceInitializationException: Error initializing "org.apache.uima.adapter.vinci.VinciAnalysisEngineServiceAdapter" ... at org.apache.uima.util.SimpleResourceFactory.produceResource(SimpleResourceFactory.java:143) at org.apache.uima.impl.CompositeResourceFactory_impl.produceResource(CompositeResourceFactory_impl.java:62) ...Caused by: org.apache.uima.resource.ResourceInitializationException at org.apache.uima.adapter.vinci.VinciAnalysisEngineServiceStub.<init>(VinciAnalysisEngineServiceStub.java:126) at org.apache.uima.adapter.vinci.VinciAnalysisEngineServiceAdapter.initialize(VinciAnalysisEngineServiceAdapter.java:59) at org.apache.uima.util.SimpleResourceFactory.produceResource(SimpleResourceFactory.java:122) ... 73 moreCaused by: org.apache.vinci.transport.ServiceDownException: Could not connect to service: org.gale.rosetta.ibm.mtUIMA1 at org.apache.vinci.transport.VinciClient.open(VinciClient.java:433) at org.apache.vinci.transport.VinciClient.<init>(VinciClient.java:92) at org.apache.uima.adapter.vinci.VinciAnalysisEngineServiceStub.<init>(VinciAnalysisEngineServiceStub.java:113) ... 75 more
issueID:UIMA-4620
type:Bug
changed files:
texts:Ruta: wildcard lookahead resets iterator
Ruta: wildcard lookahead resets iterator. If no possible match is found, the wildcard searches at the beginning of the window. May be related to other issues with wildcards (multiple matches).... need reproducible example
issueID:UIMA-4621
type:New Feature
changed files:
texts:Ruta: support usage of uimaFIT AEs with manditory parameters without default values
Ruta: support usage of uimaFIT AEs with manditory parameters without default values.This was reported by a user and is an old problem. Some information:The problem here is that the uimaFIT analysis engine is alreadyinitialized when the ruta analysis engine initializes its main script,normally during initialize(). This means long before CONFIGURE is maybecalled. The configuration parameter is manditory, so that the initializealready fails.
issueID:UIMA-4623
type:New Feature
changed files:
texts:Ruta: relax syntax for resources declaration in order to include variables in path
Ruta: relax syntax for resources declaration in order to include variables in path.A use case: load different wordlists dependent of the language of the document...
issueID:UIMA-4624
type:Improvement
changed files:
texts:DUCC uima-ducc-user project should not use duplicate class/interface names, to avoid confusion
Change the following:IDuccUimaAggregate.javaIDuccUimaAggregateComponent.javaIDuccUimaDeployableConfiguration.javaIDuccUimaReferenceByName.javaDelete the following (unused):IIdentity.java
issueID:UIMA-4625
type:Improvement
changed files:
texts:Change the option --process_thread_count to --process_pipeline_count
The word "thread" has caused some confusion since each UIMA pipeline may use multiple threads.  This is really the per-process scaleout ... the number of work-items each JP can process simultaneously
issueID:UIMA-4627
type:Bug
changed files:
texts:Increase camel log level to WARN.
Update log4j.xml so camel warnings are displayed and not lost.
issueID:UIMA-4628
type:Bug
changed files:
texts:DUCC OR should not be required in daemon&#39;s classpath
The Orchestrator jar and project has become a classpath dependency for all DUCC daemons.  The affected classes must be moved to transport so OR is no longer a dependency.  Supporting trace:org.apache.camel.RuntimeCamelException: Failed to extract body due to: javax.jms.JMSException: Failed to build body from content. Serializable class not available to broker. Reason: java.lang.ClassNotFoundException: org.apache.uima.ducc.orchestrator.jd.scheduler.JdReservation. Message: ActiveMQObjectMessage {commandId = 363, responseRequired = true, messageId = ID:bluej538-60158-1443712577226-11:1:1:1:359, originalDestination = null, originalTransactionId = null, producerId = ID:bluej538-60158-1443712577226-11:1:1:1, destination = topic://ducc.orchestrator.state, transactionId = null, expiration = 0, timestamp = 1443716157428, arrival = 0, brokerInTime = 1443716157428, brokerOutTime = 1443716157428, correlationId = null, replyTo = null, persistent = true, type = null, priority = 4, groupID = null, groupSequence = 0, targetConsumerId = null, compressed = true, userID = null, content = org.apache.activemq.util.ByteSequence@2137bffd, marshalledProperties = org.apache.activemq.util.ByteSequence@5ed18f0, dataStructure = null, redeliveryCounter = 0, size = 0, properties = {firedTime=Thu Oct 01 12:15:57 EDT 2015, breadcrumbId=ID-bluej538-41690-1443712566893-0-2326}, readOnlyProperties = true, readOnlyBody = true, droppable = false}
issueID:UIMA-463
type:Bug
changed files:
texts:Can&#39;t find org.apache.uima.examples.xmi
When trying to run the example FileSystemCollectionReader.xml, which is find in &#91;UIMA-HOME&#93;/examples/descriptors/collection_reader/FileSystemCollectionReader.xmlI get the below message.  I also get the same message with org.apache.uima.examples.cpe.FileSystemCollectionReader and everything else in org.apache.uima.examples.cpeThanks,Andrew Borthwick__________________________________________org.apache.uima.resource.ResourceInitializationException: The class org.apache.uima.examples.xmi.XmiWriterCasConsumer could not be found. (Descriptor: /home/andrew/uima/apache-uima/examples/descriptors/cas_consumer/XmiWriterCasConsumer.xml) at org.apache.uima.collection.impl.CollectionProcessingEngine_impl.initialize(CollectionProcessingEngine_impl.java:83) at org.apache.uima.impl.UIMAFramework_impl._produceCollectionProcessingEngine(UIMAFramework_impl.java:395) at org.apache.uima.UIMAFramework.produceCollectionProcessingEngine(UIMAFramework.java:807) at org.apache.uima.tools.cpm.CpmPanel.startProcessing(CpmPanel.java:538) at org.apache.uima.tools.cpm.CpmPanel.access$000(CpmPanel.java:96) at org.apache.uima.tools.cpm.CpmPanel$1.construct(CpmPanel.java:678) at org.apache.uima.tools.util.gui.SwingWorker$2.run(SwingWorker.java:130) at java.lang.Thread.run(Thread.java:595)Caused by: org.apache.uima.resource.ResourceConfigurationException: The class org.apache.uima.examples.xmi.XmiWriterCasConsumer could not be found. (Descriptor: /home/andrew/uima/apache-uima/examples/descriptors/cas_consumer/XmiWriterCasConsumer.xml) at org.apache.uima.collection.impl.cpm.container.CPEFactory.isDefinitionInstanceOf(CPEFactory.java:661) at org.apache.uima.collection.impl.cpm.container.CPEFactory.produceIntegratedCasProcessor(CPEFactory.java:1076) at org.apache.uima.collection.impl.cpm.container.CPEFactory.getCasProcessors(CPEFactory.java:550) at org.apache.uima.collection.impl.cpm.BaseCPMImpl.init(BaseCPMImpl.java:253) at org.apache.uima.collection.impl.cpm.BaseCPMImpl.<init>(BaseCPMImpl.java:127) at org.apache.uima.collection.impl.CollectionProcessingEngine_impl.initialize(CollectionProcessingEngine_impl.java:75)
issueID:UIMA-4630
type:Bug
changed files:
texts:Performance Metrics check of UIMA-AS version should reject the current level
The UIMA-AS fix is not yet available so the current 2.6.1-SNAPSHOT level should be rejected.  So accept 2.6.2 or above, including  2.7.0 & 3.0.0 etc.
issueID:UIMA-4631
type:New Feature
changed files:
texts:ruta: query and open external xmis in query view
ruta: query and open external xmis in query view
issueID:UIMA-4632
type:Improvement
changed files:
texts:uima-ducc-vm should autostart DUCC demo from crontab when OS system reboots
/uima-ducc-examples/src/main/uima-ducc-vm/cron/autostart.sh is launched by crontab to test every 5 minutes for running DUCC (component=or).  If not found, then restart entire demo and send notification e-mail.
issueID:UIMA-4633
type:New Feature
changed files:
texts:Ruta: add new action for splitting annotations
Ruta: add a new action for splitting annotations... needs to be specified in more detailed. Functionality like split in java or more something like splitting on starts/end of annotations, e.g., split sentences on the transition of headline to content of a section?
issueID:UIMA-4634
type:Bug
changed files:
texts:DUCC Web Server (WS) file size is always zero under Job Details processes tab
WS uses wrong key to look-up filesize.
issueID:UIMA-4635
type:Bug
changed files:
texts:Prepare DUCC branch for 2.0.1 release
Update README, ReleaseNotes with 2.0.1 relevant content. Update parent pom to generate jira report.
issueID:UIMA-4636
type:Bug
changed files:
texts:Reduce DUCC Agent logging while AE parts initialize
While the AE delegates initialize, the Agent keeps logging the same msg:05 Oct 2015 11:48:16,993  INFO Job Process.AgentSession - J&#91;N/A&#93; T&#91;73&#93; notifyAgentWithStatus  ... Job Process State Changed - PID:59507. Process State: Initializing. JMX Url:N/A\ Dispatched State Update Event to Agent with IP:X.X.X.XThe above is driven by a timer which pops at configurable interval to check the init state of all AE delegate parts.Silence the above msg and only log when the AE transitions from Initializing to Running
issueID:UIMA-4637
type:Bug
changed files:
texts:DUCC Agent should test if CPU control is enabled on startup
Extend agent cgroup sanity check on startup to include a test for existence of CPU control. Users my forget to add cpu in their cgconfig.conf and start cgroups with no CPU control. The agent should call cgset and disable cgroups on failure. Agent should keep the state of cgroup in memory and log it at some interval to make sure this info is not lost. Currently the agent logs the state of cgroups (enabled/disabled) at startup only. When agent logs roll over this is lost. Modify agent node metrics logic to dump the cgroup state at regular intervals.
issueID:UIMA-4638
type:Bug
changed files:
texts:DUCC Orchestrator (OR) should not use "dead reckoning" to determine if Reservation is for JDs
When OR boots, previous JD Reservation(s) should be cancelled for cold+warm starts.OR uses current ducc.properties defined ducc.jd.host.class to determine if any previously existing JD Reservation(s) should be cancelled.  If the class is unchanged, then the cancellation is issued as expected.  But if the class is changed the OR will erroneously fail to cancel.
issueID:UIMA-4639
type:Bug
changed files:
texts:ruta-maven-plugin misses qualification of names when importing by name
The resource names in the descriptors generated by ruta-maven-plugin have no name qualification at all when importing resources by name. The package names are ignored. I've created a new Maven project. Added /src/main/ruta as source folder and put the scripts therein. There's no Java involved. The project was deployed with Maven and referenced by a Java UIMA project. Because a variant of the CPE builder from uimaFIT is used, all imports must be by name (The desciptor file of the UIMA aggregate is temporarily written to the systems temp folder). Resource resolution fails. But adding the name qualifications manually solves the issue, e. g. prepending org.apache.uima.ruta.engine to BasicTypeSystem or the project's package names to the generated resources.
issueID:UIMA-464
type:Bug
changed files:uimaj-core/src/main/java/org/apache/uima/cas/impl/Subiterator.java
texts:ClassCastException thrown when using subiterator and moveTo()
I am having difficulty with using the FSIterator returned by the AnnotationIndex.subiterator(AnnotationFS) method.The following is a code fragment:AnnotationIndex annotationIndex = jCas.getAnnotationIndex(tokenType);FSIterator tokenIterator = annotationIndex.subiterator(sentenceAnnotation);tokenIterator.moveTo(tokenAnnotation);Here is the relevant portion of the stack trace:    java.lang.ClassCastException: edu.colorado.cslr.dessert.types.Token    at java.util.Collections.indexedBinarySearch(Unknown Source)    at java.util.Collections.binarySearch(Unknown Source)    at org.apache.uima.cas.impl.Subiterator.moveTo(Subiterator.java:224)If I change the second line to the following, then I do not have any problems with an exception being thrown.FSIterator tokenIterator = annotationIndex.iterator();
issueID:UIMA-4640
type:Bug
changed files:
texts:ruta-maven-plugin&#39;s twl goal does not use the package name
The twl goal takes a file from a folder specified in the pom and generates a word list in twl format. That file is always written to the top of the resources folder for generated resources. But it should be written to a subfolder of the resource folder reflecting the package structure.For example, if the simple list file resides in src/main/resources/my/package the corresponding twl file is written to target/generated-sources/ruta/resources. But it should be written to target/generated-sources/ruta/resources/my/package.This is very important for projects with many dependencies where different resources from different packages but with the same name can occur.
issueID:UIMA-4641
type:Bug
changed files:
texts:Performance summary min/max values change erractically while job is active
Need to save total min/max values when saving the delegate values
issueID:UIMA-4642
type:Bug
changed files:
texts:DUCC Web Server (WS) Job Details performance tab Summary line is inconsistent
When watching the WS Job details performance tab during a running job, the Min and Max values displayed on the Summary line are inconsistent until the Completed state is reached.
issueID:UIMA-4643
type:Bug
changed files:
texts:DUCC Agent logs exceptions while collecting metrics from dead process
The agent tries to access /proc/PID/statm and also tries to collect metrics via JMX from a process that may no longer be running producing exceptions in an agent log. The process metric collector runs at regular interval in a dedicated thread driven by a camel timer route. There seems to be a race condition when a process exits and before an agent can change its internal state, the metric collector thread attempts to access statm which is no longer in there.When an exception is caught, check the state of the process and if it is not running dont log an exception
issueID:UIMA-4645
type:Bug
changed files:
texts:Fix DUCC Agent process metrics collector logging
When logging CPU metrics, the process metrics collector should identify PID of the process for which CPU metrics are collected
issueID:UIMA-4646
type:Bug
changed files:
texts:DUCC Job Driver (JD) aggregate generator instance should be separable from job driver instance
Improve re-usability.
issueID:UIMA-4647
type:Improvement
changed files:
texts:Allow user description for viaducc/java-viaducc
java-viaducc submits work with the description "java-viaducc". This is boring and not as useful as a real user description. Let them do it.
issueID:UIMA-4648
type:Bug
changed files:
texts:CpeBuilder writes descriptor in system encoding
CpeBuilder writes descriptor in system encoding. It should write in UTF-8 as that is also the encoding specified in the XML file.Problematic code:    BufferedWriter out = null;    try {      out = new BufferedWriter(new FileWriter(tempDesc));      resource.toXML(out);    } finally {      IOUtils.closeQuietly(out);    }
issueID:UIMA-4649
type:Task
changed files:
texts:Automate generation / import of DUCC version into ducc documents and code
Investigate whether it's possible for mvn to do some magic so the correct release level is inserted into the ducc_book when it is generated.Also get the version into code and hence to the daemons.
issueID:UIMA-465
type:Improvement
changed files:uimaj-core/src/main/java/org/apache/uima/cas/CAS.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/CASImpl.java
uimaj-core/src/main/java/org/apache/uima/jcas/JCas.java
uimaj-core/src/main/java/org/apache/uima/jcas/impl/JCasImpl.java
uimaj-core/src/main/java/org/apache/uima/cas/CAS.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/CASImpl.java
uimaj-core/src/main/java/org/apache/uima/jcas/JCas.java
uimaj-core/src/main/java/org/apache/uima/jcas/impl/JCasImpl.java
uimaj-core/src/main/java/org/apache/uima/cas/CAS.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/CASImpl.java
uimaj-core/src/main/java/org/apache/uima/cas/CAS.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/CASImpl.java
texts:Need getViewIterator() method to work with a variable number of views
Based on user feedback, a common design pattern is for an annotator to want to process a set of Views in a CAS. Currently user code can do this using getSofaIterator() and testing each SofaFS to see if it matches the requirement. A simpler approach is to have a new method:  Iterator getViewIterator(viewname)where viewname represents a Sofa name prefix. As with Sofa mapping, this API would return all views with names matching viewname.*. Sofa mapping would be respected, so "viewname" could be mapped.
issueID:UIMA-4650
type:Bug
changed files:
texts:Fix Version in DUCC docs for release 2.0.1
Change version in DUCC docs to 2.0.1 from 2.0.0
issueID:UIMA-4651
type:Improvement
changed files:
texts:Avoid duplicate doc-building code
The 2 profiles in uima-ducc-docs pom.xml have > 100 lines of duplicated  latex code that have not been maintained consistently.  Instead keep only the build-duccdocs profile.
issueID:UIMA-4652
type:Bug
changed files:
texts:Ruta: pattern for MARKUP too restrictive
The regex pattern should be extended in order to cover different quotes and dashes in attribute names.
issueID:UIMA-4653
type:Task
changed files:
texts:Post a DUCC update script to the UIMA webpage

issueID:UIMA-4654
type:Bug
changed files:
texts:DUCC Web Server (WS) does not respond if $DUCC_HOME/logs/webserver directory is missing
WS should create the $DUCC_HOME/logs/webserver directory, which should be created by ducc_post_install - but just in case it ever disappears...
issueID:UIMA-4655
type:Improvement
changed files:
texts:Investigate if JD scheduler releases its extra reservations too frequently
A released reservation may be assigned to a job and then a short time later removed and handed back to the JD ... could cause churn.
issueID:UIMA-4656
type:Bug
changed files:
texts:Start & stop & check scripts don&#39;t handle the broker the same as other daemons
Using the -c option the broker can be started, but not stopped.It suggests refreshing the pids with check_ducc but the -p option is needed.check_ducc doesn't recognize it (ducc unknown-java).check_ducc -k doesn't kill it - perhaps because it is the only daemon around?
issueID:UIMA-4657
type:New Feature
changed files:
texts:Ruta: variables for annotations
like for strings and types. Requires refactoring of the overall handling of annotations
issueID:UIMA-4658
type:Improvement
changed files:
texts:DUCC User Interface (CLI) processing of host & port should be done by DispatcherFactory
Only the DispatcherFactory knows for sure how to dispatch, including host + port interpretation.  A custom DispatcherFactory replacement might not need host + port, for example.
issueID:UIMA-4659
type:Bug
changed files:
texts:Ruta: default resourcePath not set in IDE for old projects
Ruta: default resourcePath not set in IDE for old projects
issueID:UIMA-4660
type:Bug
changed files:
texts:Improve DUCC JP connection error handling
When JP looses connection to its JD, it logs a stack trace each time.To users the stack trace and a message are not clear enough to determine what happen. Instead of logging a stack trace, log a more meaningful message like :Failed N times to connect the JD .. it may have failed
issueID:UIMA-4661
type:Task
changed files:
texts:Ruta: prepare next release candidate
just an issue for some smaller tasks in context of the next release, e.g., version updates
issueID:UIMA-4662
type:Epic
changed files:unused-saved/src/org/apache/uima/cas/impl/AnnotationIndexImpl.java
unused-saved/src/org/apache/uima/cas/impl/FSIteratorWrapperDoubleCheck.java
unused-saved/src/org/apache/uima/cas/impl/FeatureArrayImpl.java
unused-saved/src/org/apache/uima/cas/impl/FeatureGetter_int.java
unused-saved/src/org/apache/uima/cas/impl/FeatureGetter_int.java
unused-saved/src/org/apache/uima/cas/impl/FeatureSetter_int.java
unused-saved/src/org/apache/uima/cas/impl/FeatureSetter_ref.java
unused-saved/src/org/apache/uima/cas/impl/FeatureStructureClassGen.java
unused-saved/src/org/apache/uima/cas/impl/TypeImplList.java
unused-saved/src/org/apache/uima/cas/impl/TypeImplMap.java
unused-saved/src/org/apache/uima/cas/impl/XXXdont_use_JCasCoverClassFactory.java
unused-saved/src/org/apache/uima/jcas/impl/CASMetadata.java
unused-saved/src/org/apache/uima/jcas/impl/JCasCoverClassFactory.java
unused-saved/src/org/apache/uima/jcas/impl/JCasHashMap.java
unused-saved/src/org/apache/uima/jcas/impl/JCasHashMapSubMap.java
uimaj-core/src/main/java/org/apache/uima/cas/admin/TypeSystemMgr.java
uimaj-core/src/main/java/org/apache/uima/cas/admin/LinearTypeOrder.java
texts:UIMA Version 3 Epic: A container for the various changes in UIMA V3
I'm trying something new: organizing the various issues for UIMA v3 under this "Epic".Version 3 of UIMA adds some often requested features to UIMA.It is planned to be mostly backwards compatible, with some some needed changes aided by migration aids (JCasGen in particular).It will require and make use of Java 8 capabilities.It will trade off more storage for performance, given the trends in hardware over the past 15 years.
issueID:UIMA-4666
type:Story
changed files:uimaj-examples/src/main/java/org/apache/uima/tutorial/TimeAnnot.java
uimaj-examples/src/main/java/org/apache/uima/examples/tokenizer/Sentence.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/Sofa.java
uimaj-examples/src/main/java/org/apache/uima/tutorial/DateAnnot.java
uimaj-tools/src/main/java/org/apache/uima/tools/jcasgen/JCasTypeTemplate.java
uimaj-examples/src/main/java/example/PersonTitle.java
uimaj-examples/src/main/java/org/apache/uima/tutorial/SentenceAnnot.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/TypeImpl_list.java
uimaj-examples/src/main/java/org/apache/uima/tutorial/UimaAcronym.java
uimaj-document-annotation/src/main/java/org/apache/uima/jcas/tcas/DocumentAnnotation.java
uimaj-core/src/main/java/org/apache/uima/jcas/tcas/Annotation.java
uimaj-core/src/main/java/org/apache/uima/jcas/JCasRegistry.java
uimaj-examples/src/main/java/org/apache/uima/examples/SourceDocumentInformation.java
uimaj-examples/src/main/java/org/apache/uima/examples/tokenizer/Token.java
uimaj-examples/src/main/java/org/apache/uima/tutorial/Meeting.java
uimaj-tools/src/main/javajet/jcasgen/templates/JCasType.javajet
uimaj-examples/src/main/java/org/apache/uima/tutorial/DateTimeAnnot.java
uimaj-examples/src/main/java/org/apache/uima/tutorial/UimaMeeting.java
uimaj-examples/src/main/java/org/apache/uima/tutorial/WordAnnot.java
uimaj-tools/src/main/java/org/apache/uima/tools/jcasgen/Jg.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/AnnotationBase_Type.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FSClassRegistry.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/AnnotationBase.java
uimaj-core/src/main/java/org/apache/uima/jcas/JCas.java
uimaj-examples/src/main/java/org/apache/uima/tutorial/RoomNumber.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/CommonPrimitiveArray.java
texts:UV3 JCasGen
Changes to JCasGen approach.Allow users an easy migration from existing JCasGen classes a reporting tool that identifies existing JCas gen classes being used tooling support for setting up "merged" JCasGen class definitions from multiple sources   Goal: support PEARs having different (but mergable) JCasGen definitions  Internal: only one class per type - the xxx_type class is removed in UV3 document migration path for users previously using xxx_type capabilities for low-level CAS operationDocument use-cases for JCasGen customization and changes possible due to new support for JavaObjects as data in Features.Document the use-cases supported, including A single set of JCasGen classes used for different type systems External semi-manual merging of JCasGen classes from PEARs and their    containers Continuing to have JCasGen optional
issueID:UIMA-467
type:Bug
changed files:uimaj-core/src/main/java/org/apache/uima/util/TypeSystemUtil.java
uimaj-core/src/main/java/org/apache/uima/util/TypeSystemUtil.java
texts:TypeSystemUtils.typeSystem2TypeSystemDescription produces invalid output for arrays with elementType specified
User reports:  if CAS was created from a TypeSystem Descriptor containing a feature such as:<featureDescription> <name>compensationArray</name> <description></description> <rangeTypeName>uima.cas.FSArray</rangeTypeName> <elementType>uima.tcas.Annotation</elementType></featureDescription>If you use TypeSystemUtil.typeSystem2TypeSystemDescription to generate a new TypeSystem descriptor from this, it will look like:<featureDescription> <name>compensationArray</name> <description></description> <rangeTypeName>uima.tcas.Annotation[]</rangeTypeName></featureDescription>If you try to create a new CAS fromt his descriptor it will fail.
issueID:UIMA-4670
type:Improvement
changed files:uimaj-core/src/main/java/org/apache/uima/jcas/cas/IntegerArray.java
uimaj-core/src/main/java/org/apache/uima/UIMARuntimeException.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/XCASParsingException.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/Sofa.java
uimaj-core/src/main/java/org/apache/uima/cas/CASException.java
uimaj-core/src/main/java/org/apache/uima/cas/CASRuntimeException.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/ByteArray.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/FloatArray.java
uimaj-core/src/main/java/org/apache/uima/cas/admin/CASAdminException.java
uimaj-core/src/main/java/org/apache/uima/UIMAException.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/StringArray.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/LinearTypeOrderBuilderImpl.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/LongArray.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/DoubleArray.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/LowLevelException.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/CASImpl.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/BooleanArray.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/ShortArray.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/FSArray.java
uimaj-core/src/main/java/org/apache/uima/I18nExceptionI.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/CommonPrimitiveArray.java
texts:UV3 Internal - improve exception support
change internal exception creation to make use of varArgs, to make invocation simpler.  Invocation no longer needs to create explicit String[] and initialize them.  Arguments, including primitives like int, no longer need to be converted to Strings using forms like Integer.toString(int), because the varArgs will autobox these.  Change unmaintained serialVersionUID to the 1L form to indicate they are unmaintained.
issueID:UIMA-4671
type:Sub-task
changed files:uimaj-core/src/main/java/org/apache/uima/cas/FSIterator.java
uimaj-core/src/main/java/org/apache/uima/cas/FSIndex.java
texts:UV3 Internal - use default methods in interfaces to reduce code duplication
Java 8 adds default methods for interfaces; use these where appropriate to reduce code duplication.
issueID:UIMA-4672
type:Improvement
changed files:uimaj-core/src/main/java/org/apache/uima/cas/TypeSystem.java
texts:UV3 support Java 8 Streams including internal use
Add support for Java 8 streams to various things.  Follow naming conventions similar to core Java http://stackoverflow.com/questions/28805077/naming-java-methods-that-return-streamsUse streams internally when it makes sense (code is clearer, efficiency doesn't suffer).
issueID:UIMA-4673
type:Improvement
changed files:uimaj-tools/src/main/java/org/apache/uima/tools/cvd/FSNode.java
uimaj-core/src/main/java/org/apache/uima/cas/Type.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FsGeneratorArray.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/MethodHandlesLookup.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/XmiCasDeserializer.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/CommonArrayFSImpl.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/TypeImpl_array.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/XCASSerializer.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/TypeImpl_string.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/TypeImpl_stringSubtype.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FeatureImpl.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/TypeImpl_annot.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/TypeSystemImpl.java
uimaj-core/src/main/java/org/apache/uima/cas/FeatureStructure.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/BinaryCasSerDes4.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/XmiCasSerializer.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/XCASDeserializer.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/TypeImpl.java
uimaj-tools/src/main/java/org/apache/uima/tools/jcasgen/Jg.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/TypeSystem2Xml.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/CASMgrSerializer.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/TypeSystemConstants.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FeatureStructureImplC.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/TypeSystemUtils.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FSTypeConstraintImpl.java
texts:UV3 Internal - reorganize Type/Feature impl to improve locality of reference
Much information about types and features in UIMA v2 was organized into tables kept in the TypeSystemImpl object, indexed by type and feature codes.  Move most of this information into the TypeImpl and FeatureImpl objects, directly; this is more "object oriented" and may improve locality of reference.
issueID:UIMA-4674
type:Improvement
changed files:uimaj-core/src/main/java/org/apache/uima/internal/util/Int2ObjHashMap.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/Heap.java
uimaj-core/src/main/java/org/apache/uima/jcas/impl/JCasImpl.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/LongSet.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/Sofa.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FSIndexRepositoryImpl.java
uimaj-core/src/main/java/org/apache/uima/internal/util/Obj2IntIdentityHashMap.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FsIterator_aggregation_common.java
uimaj-tools/src/main/java/org/apache/uima/tools/jcasgen/JCasTypeTemplate.java
unused-saved/src/org/apache/uima/cas/impl/AnnotationIndexImpl.java
uimaj-tools/src/main/java/org/apache/uima/tools/cvd/FSTreeModel.java
uimaj-core/src/main/java/org/apache/uima/collection/impl/CasConsumerDescription_impl.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/impl/JCasIteratorWrapper.java
uimaj-core/src/main/java/org/apache/uima/jcas/impl/JFSIndexRepositoryImpl.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FsIterator_singletype.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/EmptyFloatList.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/TypeImpl_annot.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/LinearTypeOrderBuilderImpl.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/StringSet.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/EmptyStringList.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/BinaryCasSerDes4.java
unused-saved/src/org/apache/uima/internal/util/ComparableIntPointerIterator.java
uimaj-core/src/main/java/org/apache/uima/cas/admin/FSIndexRepositoryMgr.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/DebugNameValuePair.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/BooleanArray.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/CommonList.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/ShortHeap.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FilteredIterator.java
uimaj-core/src/main/java/org/apache/uima/util/FileUtils.java
uimaj-core/src/main/java/org/apache/uima/internal/util/PositiveIntSet.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/DeferredIndexUpdates.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/LongHeap.java
uimaj-core/src/main/java/org/apache/uima/cas/text/AnnotationFS.java
uimaj-tools/src/main/java/org/apache/uima/tools/cvd/FSNode.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/MethodHandlesLookup.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/XCASParsingException.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FsIterator_subtypes_snapshot.java
uimaj-core/src/main/java/org/apache/uima/internal/util/XmlElementNameAndContents.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/MarkerImpl.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/TypeImpl_string.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/CommonSerDes.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/LowLevelCAS.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FsIndex_snapshot.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/Id2FS.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/FloatArray.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FeatureImpl.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/StringArray.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/TypeSystemImpl.java
uimaj-core/src/main/java/org/apache/uima/jcas/tcas/Annotation.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/CasTypeSystemMapper.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/StringList.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/asb/impl/FlowContainer.java
uimaj-examples/src/main/java/org/apache/uima/examples/SourceDocumentInformation.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FsIndex_singletype.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FsIterator_bag.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/XmiCasSerializer.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/CommonAuxHeap.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/TypeImpl.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/NonEmptyStringList.java
uimaj-core/src/main/java/org/apache/uima/util/CasCreationUtils.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/AllFSs.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FsIndex_flat.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/FSArray.java
uimaj-core/src/main/java/org/apache/uima/resource/impl/CasManager_impl.java
uimaj-core/src/main/java/org/apache/uima/resource/impl/ResourceManager_impl.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/TypeSystemUtils.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/NonEmptyFSList.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/CasSeqAddrMaps.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/LLUnambiguousIteratorImpl.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/impl/PrimitiveAnalysisEngine_impl.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/impl/AnalysisEngineImplBase.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/CommonPrimitiveArray.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/BuiltinTypeKinds.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/impl/AnalysisEngineManagementImpl.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/Serialization.java
uimaj-core/src/main/java/org/apache/uima/collection/impl/CollectionReaderDescription_impl.java
uimaj-core/src/main/java/org/apache/uima/flow/impl/FlowControllerDescription_impl.java
uimaj-core/src/main/java/org/apache/uima/cas/Type.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/XmiCasDeserializer.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/LowLevelIterator.java
uimaj-core/src/main/java/org/apache/uima/cas/CASRuntimeException.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/XCASSerializer.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/NonEmptyIntegerList.java
uimaj-core/src/main/java/org/apache/uima/internal/util/Pair.java
uimaj-core/src/main/java/org/apache/uima/collection/impl/CasInitializerDescription_impl.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/FSList.java
uimaj-core/src/main/java/org/apache/uima/cas/FeatureStructure.java
uimaj-core/src/main/java/org/apache/uima/jcas/JCasRegistry.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/LowLevelIndexRepository.java
uimaj-core/src/main/java/org/apache/uima/internal/util/Int2ObjListMap.java
uimaj-core/src/main/java/org/apache/uima/internal/util/Misc.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/CASImpl.java
uimaj-core/src/main/java/org/apache/uima/cas/admin/CASFactory.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/EmptyIntegerList.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/OutOfTypeSystemData.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FsIterator_subtypes_ordered.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/StringHeap.java
uimaj-core/src/main/java/org/apache/uima/cas/FSIterator.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/fsview/FeatureStructureLabelProvider.java
uimaj-core/src/main/java/org/apache/uima/resource/Resource_ImplBase.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FeaturePathImpl.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/AnnotationImplException.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/Subiterator.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/CASSerializer.java
uimaj-core/src/main/java/org/apache/uima/cas/admin/FSIndexComparator.java
uimaj-core/src/main/java/org/apache/uima/resource/ResourceManager.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FSIndexComparatorImpl.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/IntegerList.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/CommonArrayFSImpl.java
uimaj-v3migration-jcas/src/main/java/org/apache/uima/migratev3/jcas/MigrateJCas.java
uimaj-core/src/main/java/org/apache/uima/internal/util/XmlAttribute.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/TypeImpl_array.java
uimaj-json/src/main/java/org/apache/uima/json/JsonCasSerializer.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/TOP.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/CasSerializerSupport.java
uimaj-core/src/main/java/org/apache/uima/cas/CAS.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/SlotKindsConstants.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/TypeImpl_stringSubtype.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/TypeImpl_list.java
uimaj-core/src/main/java/org/apache/uima/pear/tools/InstallationDescriptor.java
uimaj-core/src/main/java/org/apache/uima/cas/admin/CASAdminException.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/CommonSerDesSequential.java
uimaj-core/src/main/java/org/apache/uima/util/CasCopier.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FeatureValuePathImpl.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FsIndex_annotation.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/asb/impl/FlowControllerContainer.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/BinaryCasSerDes.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/ByteHeap.java
uimaj-core/src/main/java/org/apache/uima/jcas/JFSIndexRepository.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/BinaryCasSerDes6.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/XCASDeserializer.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/NonEmptyFloatList.java
uimaj-tools/src/main/javajet/jcasgen/templates/JCasType.javajet
uimaj-core/src/main/java/org/apache/uima/util/JCasPool.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FsIndex_iicp.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/XmiSerializationSharedData.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/CASMgrSerializer.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/TypeSystem2Xml.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FeatureStructureImplC.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/UimaDecompiler.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/AnnotationBase.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FSClassRegistry.java
uimaj-core/src/main/java/org/apache/uima/internal/util/ObjHashSet.java
texts:UV3 Internal - miscellaneous
Miscellaneous internal improvements, including: toString - change the display of the name of the class to be computed, rather than fixed, so it works if called on a subclass of the type with the toString definition.
issueID:UIMA-4677
type:Sub-task
changed files:uimaj-core/src/main/java/org/apache/uima/cas/impl/Id2FS.java
uimaj-core/src/main/java/org/apache/uima/cas/CASRuntimeException.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/CASImpl.java
texts:UV3 Internal support for Feature Structure IDs
Feature Structures have IDs; these show up in externalized formats.  In v2, these were the int heap address. In V3, these are incrementing ints, starting at 1.Support is needed for PEARs and for low-level createFS methods to hold onto FSs to prevent them from being garbage collected.  This is provided using a map from IDs to the FS.
issueID:UIMA-4678
type:Sub-task
changed files:
texts:UV3 Built-in Types/Features, type codes and feature codes as final constants
Arrange to have the built-types and features as final constants.  For the int "codes", these can be static as well.  For actual types and features, these are instance final things, because some of the fields vary by typesystem.
issueID:UIMA-4679
type:Sub-task
changed files:uimaj-core/src/main/java/org/apache/uima/cas/impl/FSClassRegistry.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FSClassRegistry.java
uimaj-core/src/main/java/org/apache/uima/internal/util/Misc.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FSClassRegistry.java
uimaj-core/src/main/java/org/apache/uima/jcas/JCas.java
uimaj-core/src/main/java/org/apache/uima/jcas/impl/JCasImpl.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FSClassRegistry.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FSGenerator.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/CasState.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FsGeneratorArray.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FSClassRegistry.java
texts:UV3 Internal - reorganize JCas instance creation, access to getters/setters
Use Java 8 method handle techniques for efficient instance creation and access to getters and setters. Reorganize to have built-ins loaded and set up once per class-loader (might be shared over mutliple different type systems).  Keep resulting artifacts in one object instance per class-loader; use to populate slots in type and feature impls when type system committed.
issueID:UIMA-468
type:Bug
changed files:uimaj-core/src/main/java/org/apache/uima/jcas/impl/JCasImpl.java
texts:race condition in JCasImpl  initializing static array
Static variables holding arrays are initialized by seeing if their size is 0 when making a new instance of JCasImpl.  If 2 threads do this at the same time, a race condition could happen.
issueID:UIMA-4680
type:Sub-task
changed files:uimaj-core/src/main/java/org/apache/uima/cas/impl/CASImpl.java
texts:UV3 Internal Journalling updates
update the journalling approach to track via references to actual feature structures.
issueID:UIMA-4681
type:Improvement
changed files:uimaj-core/src/main/java/org/apache/uima/cas/text/AnnotationIndex.java
uimaj-core/src/main/java/org/apache/uima/cas/text/AnnotationIndex.java
texts:clarify javadocs for AnnotationIndex APIs
Clarify the javadocs with respect to how feature structures are used as templates in subiterators.
issueID:UIMA-4683
type:New Feature
changed files:uimaj-core/src/main/java/org/apache/uima/jcas/cas/IntegerArray.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/Sofa.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/EmptyFSList.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/NonEmptyIntegerList.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/ByteArray.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/TOP.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/FloatArray.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/EmptyFloatList.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/StringArray.java
uimaj-document-annotation/src/main/java/org/apache/uima/jcas/tcas/DocumentAnnotation.java
uimaj-core/src/main/java/org/apache/uima/jcas/tcas/Annotation.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/EmptyStringList.java
uimaj-examples/src/main/java/org/apache/uima/examples/SourceDocumentInformation.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/LongArray.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/NonEmptyFloatList.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/DoubleArray.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/EmptyIntegerList.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/BooleanArray.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/NonEmptyStringList.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/ShortArray.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/FSArray.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/AnnotationBase.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/NonEmptyFSList.java
texts:Ruta: use address to refer to annotations
The syntax could look like:$1234{CONTAINS(Person)};This is required by different issue that improve the usage as a library
issueID:UIMA-4684
type:Bug
changed files:
texts:DUCC daemons log-to-file should never give up
Problem: When the common logging code fails to log to file, for example due to a quota violation, it sets a flag to never try logging again.  The only way to resume logging is to recycle the daemon.Resolution: The logger should always attempt to log to file..never give up hope!
issueID:UIMA-4685
type:New Feature
changed files:uimaj-core/src/main/java/org/apache/uima/cas/impl/CommonSerDes.java
uimaj-ep-cas-editor-ide/src/main/java/org/apache/uima/caseditor/ide/DefaultCasDocumentProvider.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/Serialization.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/DocumentUimaImpl.java
uimaj-core/src/main/java/org/apache/uima/util/XmlCasDeserializer.java
uimaj-ep-cas-editor-ide/src/main/java/org/apache/uima/caseditor/ide/wizards/ImportDocumentWizardPage.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/BinaryCasSerDes6.java
uimaj-core/src/main/java/org/apache/uima/util/CasLoadMode.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/XmiCasDeserializer.java
uimaj-ep-cas-editor-ide/src/main/java/org/apache/uima/caseditor/ide/wizards/DocumentImportStructureProvider.java
uimaj-core/src/main/java/org/apache/uima/util/CasIOUtils.java
uimaj-core/src/main/java/org/apache/uima/cas/CASRuntimeException.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/CASImpl.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/CASSerializer.java
uimaj-core/src/main/java/org/apache/uima/util/XmlCasSerializer.java
uimaj-core/src/main/java/org/apache/uima/cas/SerialFormat.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/CASMgrSerializer.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/BinaryCasSerDes.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/BinaryCasSerDes4.java
texts:Add Common Load/Save APIs, including type system and index defs, for various CAS formats
Create a new CasIOUtils class having common load and save APIs, with optional saving of type system and index definitions, in all the various CAS serialization formats (except JSON).  Implement heuristic discovery for deserialization to support automatic selection of the right kind of deserializer.  Update the headers for binary to support indicating they have the type system included (not used yet).  Update the SerialFormat to support this.  Update the CasEditor and other components to use this new API.
issueID:UIMA-4686
type:Improvement
changed files:
texts:DUCC User Interface (CLI) should pass properties to DispatcherFactory
Rationale: the dispatcher may have need to examine/change the request properties
issueID:UIMA-4687
type:Sub-task
changed files:uimaj-core/src/main/java/org/apache/uima/cas/impl/CASImpl.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FSClassRegistry.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FSIndexRepositoryImpl.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FeatureImpl.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/TypeSystemImpl.java
uimaj-core/src/main/java/org/apache/uima/jcas/JCasRegistry.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/AnnotationBase.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/FSArray.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/NonEmptyFSList.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/NonEmptyFloatList.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/NonEmptyIntegerList.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/NonEmptyStringList.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/Sofa.java
uimaj-core/src/main/java/org/apache/uima/jcas/tcas/Annotation.java
texts:UV3 improve JCas feature id use for index corruption checking and journaling
When setting (changing) values for features, sometimes index corruption checking needs to be done, and sometimes changes need to be journaled.  Both of these need to identify the feature involved.  This operation should be fast and memory-cache-friendly (e.g. not involve following a long chain of dereferencings).  Add static final fields that represent features used by a particular JCas class, which have names derived from the short-feature-name, and won't collide with other names, and set these using the same JCasRegistry mechanism to unique values within a class loader.  This allows the same JCas cover classes to be used with different type systems.  Change the corruption testing logic to use BitSets and have a version which uses these indexes as well as one which uses the FeatureImpl featureCode.  Keep one extra table mapping these codes to FeatureImpls, per type system.
issueID:UIMA-4689
type:Bug
changed files:
texts:DUCC service will not start if registered with --debug option
The DuccServiceSubmit call is rejected because debug is given an empty argument.  Generates a very large error message!Errors            : Argument debug: no value allowed.  Found;Usage:;org.apache.uima.ducc.cli.DuccServiceSubmit &#91;options&#93;;Where options are:;-help                            (no arguments);Print this help message;;debug                           (no arguments);Enable CLI Debugging messages.;;description                     <string>;Description of the run.;Example:  My excellent job!;;administrators                  <list of ids>;Blank-delimited list of userids allowed to manage this service.;Example:  bob mary jimbo;;scheduling_class                <scheduling class name>;The class to run the job in.;Example:  normal (or fixed or reserve);;log_directory                   <path>;The directory where logs are written.  Default: $HOME/ducc/logs;;working_directory               <path>;The working directory set in each process. Default to current dire;ctory.;;;jvm                             <path-name-to-java>;The jvm to use.  Must be a full path to the 'java' executable.  De;fault is the jvm that DUCC is using.;;Example:  /opt/vendor/jdk-1.7/bin/java;;process_jvm_args                <jvm arguments>;Blank-delimited list of JVM Arguments passed to each process;Example:  -Xmx100M -DMYVAR=foo;;classpath                       <java classpath>;Classpath for the Job. Default is current classpath.;;environment                     <env vars>;Blank-delimited list of environment variables.;Example:  TERM=xterm DISPLAY=me.org.net:1.0 LANG UIMA*;;process_memory_size             <size-in-GB>;Maximum memory for each process, in GB.;Example:  30;;process_descriptor_DD           <dd.xml>;Process deployment descriptor (mutually exclusive with CM+AE+CC).;Example:  /home/burn/descriptors/MyDD.xml;;process_executable              <program name>;The full path to a program to be executed.;Example:  /bin/ls;;process_executable_args         <argument list>;Blank-delimited list of arguments for process_executable;Example:  -a -t -l;;process_initialization_time_max <integer>;Maximum elapsed time (in minutes) for processing initialization.;;process_debug                   <debugger-port-number>;Listening port number the remote process is to connect to.;Example:  8000;;instance_failures_limit         <integer>;Number of consecutive instance failures that will cause the servic;e to be stopped.;;;specification, -f               <file>;Properties file comprising the specification, where the keys are n;ames of parameters. Individual parameters take precedence over tho;se specified in properties file, if any.;;;service_dependency              <list>;List of service descriptor strings.;Example:  UIMA-AS:RandomSleepAE:tcp://node1:61616 CUSTOM:myservice;;service_request_endpoint        <string>;Unique id for this service. Usually inferred for UIMA-AS services.;;Example:  UIMA-AS:queueName:ActiveMqUrl;;service_linger                  <milliseconds>;Time in milliseconds to wait after last referring job or service e;xits before stopping a non-autostarted service.;;;service_ping_arguments          <string>;Any (service-dependent) ping arguments, to be passed to the pinger;.;;Example:  q_thresh=12,svc_thresh=.01;;service_id                      <number>;The numeric id of the service being spawned;Example:  123;;service_ping_class              <classname>;Class to ping ervice, must extend AServicePing.java;Example:  org.bob.Pinger;;service_ping_classpath          <classpath>;Classpath containing service_custom_ping class and dependencies.;Example:  Bob.jar;;service_ping_jvm_args           <java-system-property-assignments>;-D jvm system property assignments to pass to jvm;Example:  -DxmX=3G -DxnS=1M;;service_ping_timeout            <time-in-ms>;Time in milliseconds to wait for a ping to the service.;Example:  1000;;service_ping_dolog              <boolean>;If specified, log the pinger, else suppress the log.;;instance_failures_window        <integer>;Size of the window (in minutes) used to manage service instance ru;ntime failures.;;Example:  30;;instance_failures_limit         <integer>;Number of consecutive instance failures that will cause the servic;e to be stopped.;;;-instance_init_failures_limit    <integer>;Number of consecutive instance initialization failures that will c;ause SM to cease starting the service.;;;;
issueID:UIMA-469
type:Bug
changed files:
texts:not all jars in the lib directory of a PEAR project are added to the PEAR CLASSPATH automatically
the documentation says that all jars in the lib directory are added to the PEAR CLASSPATH settings when using the pear packager eclipse plugin This is not true, only theese jar files that are listed in the eclipse java project classpath settings are automatically added.I will change the documentation to explain this.
issueID:UIMA-4690
type:Bug
changed files:
texts:DUCC service manager hangs when starting a service that has no available resoures
When the SM starts a service in a scheduling_class that has no available resources it appears to hang waiting for the resource.  The WS gets no heartbeats and CLI requests such as query or unregister hang.
issueID:UIMA-4691
type:Task
changed files:
texts:Ruta: remove jcas cover classes
Ruta: remove jcas cover classes. All but RutaBasic can and should be generated. Then, the classes for the other type systems (e.g., html) could also be available?
issueID:UIMA-4692
type:Bug
changed files:
texts:JCasGen produces unsafe code
Using FindBugs 3.0.0 and running it against the type system classes produced using the JCasGen tool in the Eclipse Component Descriptor Editor, the following 'Scary' category 'High Confidence' bug is identified.fsGenerator isn't initialised in &#91;...&#93;.Person_Type.getFSGenerator() when invoked from constructor for superclass(Where &#91;...&#93; represents the package, and Person is the type system type I have created).
issueID:UIMA-4693
type:Bug
changed files:
texts:DUCC daemon stop() is called twice
It looks like stop() is called twice in DUCC daemons when shutting down due to a kill event.  1. stop() is called from the onDuccAdminKillEvent when the event arrives,2. stop() is again called from the shutdown hook.Seems harmless but should be fixed.
issueID:UIMA-4694
type:Improvement
changed files:
texts:DUCC Web Server (WS) Daemons page should have rows for Broker and Database (if config&#39;d)
The broker and database (if used) are critical "daemons" and should be included on the Daemons status page of ducc-mon.
issueID:UIMA-4695
type:Improvement
changed files:
texts:java-viaducc should return stderr messages on stderr so will be red in Eclipse
When --attach_console is specified for an AP ducc_ling should not combine the stdout & stderr streams.  Also the &#91;1&#93; prefix on the redirected console messages should be removed for APs.
issueID:UIMA-4696
type:Bug
changed files:
texts:The CLI fixup for pre-2.0 services specifies an incorrect directory
One of the two directories added to the classpath is wrong.  This fixup should be removed as no longer needed and anyway only delayed the need for the user to provide any missing UIMA jars
issueID:UIMA-4697
type:Sub-task
changed files:uimaj-core/src/main/java/org/apache/uima/internal/util/Int2ObjHashMap.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/IntegerList.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/XmiCasDeserializer.java
uimaj-core/src/main/java/org/apache/uima/internal/util/Obj2IntIdentityHashMap.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/MarkerImpl.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/EmptyList.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/EmptyFSList.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/NonEmptyIntegerList.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/FloatList.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/EmptyFloatList.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/FSList.java
uimaj-core/src/main/java/org/apache/uima/internal/util/function/Consumer_withSaxException.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/EmptyStringList.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/StringList.java
uimaj-core/src/main/java/org/apache/uima/internal/util/function/Runnable_withSaxException.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/XmiCasSerializer.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/XCASDeserializer.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/NonEmptyFloatList.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/EmptyIntegerList.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/XmiSerializationSharedData.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/CommonList.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/NonEmptyStringList.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/NonEmptyFSList.java
texts:UV3 XMI serialization / deserialization
Update XMI serialization and deserialization. Because the new Feature Structure (FS) model has constant things as Java "final", they need to be known at FS creation time (e.g., the sofa reference for subtypes of AnnotationBase, the associated casView is also a final constant).  Sometimes the order when deserializing has the sofa FS following their use.  Implement a deferral method for these situations (using Java 8 lambda techniques where appropriate) to reorder creation as needed.  The same issue arises when deserializing feature values which are references to other FSs not yet deserialized.Change the xmi serialization to serialize the sofas first, to avoid needing to use the deferred FS creation logic.
issueID:UIMA-4698
type:Bug
changed files:uimaj-core/src/main/java/org/apache/uima/cas/CAS.java
texts:Wrong definition of AnnotationBase sofa feature
The CAS.java file defines many static final string constants corresponding to built-in type names and features.  One of these, the FEATURE_FULL_NAME_SOFA is supposed to define the full feature name for the sofa feature introduced by the type AnnotationBase.  The full feature name starts with the type name of the type which first introduces this feature (first in the top most type in the type hierarchy).  The definition says this type is Annotation, but should be AnnotationBase
issueID:UIMA-4699
type:Bug
changed files:
texts:"generate" mojo always claims to have written zero descriptors
The "generate" mojo always claims to have written zero descriptors - the internal counter is never incremented!
issueID:UIMA-47
type:Task
changed files:
texts:Post code style guidelines on website
As per agreement on dev list
issueID:UIMA-470
type:Improvement
changed files:
texts:CAS Editor: Cas Processor error reporting does not show a problem message
The Cas Processor error reporting dialog does not show exception messages thrown by an annotator orconsumer.
issueID:UIMA-4700
type:New Feature
changed files:
texts:Add new primitive types for JavaObject and JavaObjectArray
This is not yet fully worked out, especially w.r.t. de/serialization.  Add a new primitive UIMA type which can be the value of a feature, which is an arbitrary Java Object.  The intent is to allow at least things like ArrayLists and HashMaps to be used as values in the CAS.
issueID:UIMA-4701
type:Improvement
changed files:uimaj-core/src/main/java/org/apache/uima/resource/CasDefinition.java
uimaj-core/src/main/java/org/apache/uima/util/CasCreationUtils.java
texts:Creating CASs with common CAS Definition should share type systems
Cas Definitions can be captured in the class CasDefinition and passed to the CasCreationUtils createCas methods.  This is done, for instance, when CAS Pools are created.  The processing currently holds the definitions as description-objects, and re-parses these into type system implementations, every time a cas is produced.  These multiple type systems are identical, but replicated, which is wasteful.Change the definition of CasDefinition to permit it to hold the derived TypeSystemImpl object, and change createCas to use that if available, to share common TypeSystemImplementations.Other approaches that result in even more instances of type system sharing might be considered, but it's possible that different instances may be wanted in some cases in the future (for example, if we allow dynamic augmentation of types / features while running).
issueID:UIMA-4702
type:Bug
changed files:
texts:Ruta: auto completion terminates with error
see http://stackoverflow.com/questions/34079855/configuring-eclipse-content-assist-for-uima-ruta-scripts
issueID:UIMA-4703
type:Task
changed files:
texts:UIMA-AS prepare 2.8.1 release
Time to release the next UIMA-AS. Update poms to version 2.8.1 as well as README and NOTICE. Review LICENSE and RELASE_NOTES. Update compiler source and target to 1.7 from 1.6.
issueID:UIMA-4704
type:Bug
changed files:
texts:DUCC Web Server (WS) Machine Page support for Database query to determine status
If DB is enabled, use table populated by Resource Manager to:1. ascertain Machine status (up/down)2. build hover of data elements used to determine sameNotes:1. for DB: up when responsive==true && online==true && blacklisted==false2. for !DB: down when heartbeat==missing
issueID:UIMA-4705
type:Improvement
changed files:
texts:DUCC should provide the means for a security directory other than the user&#39;s home
Problem:Presently DUCC uses public and private keys located in <user.home>/.ducc to ensure secure submissions.  On some clusters the usual home directory is not in the shared file system.Solution:In site.ducc.properties the administrator can optionally include a new specification.# Location of security home directory.  By default DUCC employs <user.home> as the user's security directory. When ducc.security.home is specified here DUCC will instead employ <ducc.security.home>/<user.name>.##ducc.security.home = /users#
issueID:UIMA-4706
type:Bug
changed files:
texts:ResourceManagerFactory not used everywhere
uimaFIT should be using the uimaFIT ResourceManagerFactory to create resource managers. However, many places in the code still call UIMAFramework.newDefaultResourceManager().
issueID:UIMA-4707
type:New Feature
changed files:
texts:Ruta: block for resetting the match scope
Ruta: block for resetting the match scope, something like DOCUMENTBLOCK for resetting the RutaStream.
issueID:UIMA-4708
type:Task
changed files:
texts:Update UIMA-AS JmxMonitor to work with new AMQ
AMQ has changed how its jmx MBeans are named. In order to query the broker, modify JmxMonitor and classes its using to conform to the new naming standard. For example the old name for querring queues is ;Type=Queue|Topic,Destination=<destination identifier>and the new one is:type=Broker,destinationType=Queue|Topic,destinationName=<destination identifier>
issueID:UIMA-4709
type:Bug
changed files:
texts:Fix UIMA-AS test deployment descriptor
The Deploy_TopLevelComplexAggregateCM.xml uses wrong keys for delegates. For example BlueJTestMultiplier2 iinstead of TestMultiplier2
issueID:UIMA-471
type:Improvement
changed files:
texts:CAS Editor: Non xcas files are only viewable but not editable
Non xcas files are only viewable but not editable. Make all files editable.
issueID:UIMA-4710
type:Improvement
changed files:
texts:Update UIMA-AS javadoc plugin to build with JDK1.8
Need a way to build uima-as with jdk1.8. Currently the build fails due to javadoc which seems to be less tolerant to missing description for @param in header comments. Dont want to hold up the 2.8.1 release because of this. This will have to eventually be cleaned up. For now need a way to configure javadoc not to fail during a build.
issueID:UIMA-4711
type:Improvement
changed files:
texts:Fix typos and spellings in scripts

issueID:UIMA-4712
type:Improvement
changed files:
texts:DUCC RM: Prefer horizontal to vertical stacking for Service and AP allocations.
Avoid allocating processes for the same service on the same host.  If no horizontal allocations are available, then fall back to vertical stacking.
issueID:UIMA-4713
type:Bug
changed files:
texts:Update UIMA-DUCC javadoc plugin to build with JDK1.8
Ducc build fails with Java 1.8 compiler. Many source files contain method headers with @param's that are missing descriptions. This is a fatal error in Java 8, while Java 7 is less aggressive. Modify javadoc plugin to turn off strict checking and allow the build to finish.
issueID:UIMA-4714
type:Bug
changed files:
texts:Ruta: document matching condition within block ignores head matches
Ruta: document matching condition within block ignores head matches. The condition in the block head does not filter the document rules within...
issueID:UIMA-4716
type:Improvement
changed files:uimaj-core/src/main/java/org/apache/uima/cas/impl/BinaryCasSerDes6.java
texts:DUCC Web Server (WS) documentation revisions, cosmetics and minor improvements
Various small cosmetic changes.
issueID:UIMA-4717
type:Bug
changed files:
texts:ducc-mon fails to display log files if there is a &#39;+&#39; in the filename
Somebody is replacing the '+' with ' '22 Dec 2015 16:57:49,653 DEBUG WS.AlienTextFile - N/A trace  /users/ducc/ducc_ling/amd64/ducc_ling -q -u burn &#8211; /usr/bin/du -b /home/burn/ducc/logs/junk stuff/23296/23296-UIMA-bluej602.bluej.net-17628.log 22 Dec 2015 16:57:49,653 DEBUG WS.AlienTextFile - N/A trace  /users/ducc/ducc_ling/amd64/ducc_ling -q -u burn &#8211; /usr/bin/du -b /home/burn/ducc/logs/junk stuff/23296/23296-UIMA-bluej602.bluej.net-17628.log 22 Dec 2015 16:57:49,658 DEBUG WS.AlienTextFile - N/A getResult  122 Dec 2015 16:57:49,658 DEBUG WS.AlienTextFile - N/A getResult  122 Dec 2015 16:57:49,659 DEBUG WS.AlienTextFile - N/A trace  data size:022 Dec 2015 16:57:49,659 DEBUG WS.AlienTextFile - N/A trace  data size:022 Dec 2015 16:57:49,659 DEBUG WS.AlienTextFile - N/A getByteSize  22 Dec 2015 16:57:49,659 DEBUG WS.AlienTextFile - N/A getByteSize  22 Dec 2015 16:57:49,659 TRACE WS.AlienTextFile - N/A convertToInt java.lang.NumberFormatException: For input string: "" at java.lang.NumberFormatException.forInputString(NumberFormatException.java:76) at java.lang.Integer.parseInt(Integer.java:515) at java.lang.Integer.parseInt(Integer.java:538) at org.apache.uima.ducc.ws.server.AlienTextFile.convertToInt(AlienTextFile.java:181) at org.apache.uima.ducc.ws.server.AlienTextFile.getByteSize(AlienTextFile.java:199) at org.apache.uima.ducc.ws.server.AlienTextFile.getPageCount(AlienTextFile.java:259)
issueID:UIMA-4718
type:Sub-task
changed files:uimaj-core/src/main/java/org/apache/uima/cas/impl/CasTypeSystemMapper.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/BinaryCasSerDes6.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/CASImpl.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/MarkerImpl.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/BinaryCasSerDes6.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/CASImpl.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/CasTypeSystemMapper.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/CasSeqAddrMaps.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/CASImpl.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/BinaryCasSerDes.java
uimaj-core/src/main/java/org/apache/uima/internal/util/function/DeserBinaryIndexes.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/BinaryCasSerDes6.java
texts:UV3 Compressed Form 6 Serialization/Deserialization
Update CAS Serialization/deserialization (Compressed, Form 6) to use UV3 internal structure.  Ideally, this should be compatible with UIMA V2 - it should be able to read serializations produced by V2, and write formats that can be deserialized by V2 (provided no new UV3 CAS primitives are involved, e.g. JavaObjects.
issueID:UIMA-4719
type:Sub-task
changed files:uimaj-core/src/main/java/org/apache/uima/analysis_engine/impl/RsLangs.java
texts:uv3 Initialize ArrayLists with initial length 0 where it makes sense
Some uses of array lists are never used; these can save a bit of space by being initialized to 0-length; Java 8 has a slightly more efficient impl for these.
issueID:UIMA-472
type:Improvement
changed files:
texts:CAS Editor: All annotation inside the editor should have a differnt default colors as its done in the "UIMA Annotation Viewer"

issueID:UIMA-4720
type:Sub-task
changed files:uimaj-core/src/main/java/org/apache/uima/cas/admin/TypeSystemMgr.java
texts:UV3 Reuse existing type system if equal at commit time
When committing a type system, it is possible (and in some use cases, frequently) that the type system is "equal" to an already-in-use committed type system.  In this case, arrange to reuse the existing type system. Use a weak-ref map to keep track of available type systems.  Include an appropriate hashcode and equals for committed type systems that cache the hashcode to avoid expensive computation.
issueID:UIMA-4721
type:Bug
changed files:uimaj-core/src/main/java/org/apache/uima/cas/impl/CASImpl.java
texts:Nested protect blocks not adding back in all cases
The protect block mechanism has a provision to handle nested protect blocks.  It does this by keeping a stack of nested contexts. The close of the protect block checks to see if nested protect blocks were not closed.  If this is the case, the nested ones are closed automatically starting with the most deeply nested one. The logic for doing this has an off-by-one error, which would result in an array index out of bounds.
issueID:UIMA-4722
type:Bug
changed files:uimaj-core/src/main/java/org/apache/uima/cas/impl/XmiCasDeserializer.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/XCASDeserializer.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/XmiCasDeserializer.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/CASImpl.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/CASImpl.java
texts:updateDocumentAnnotation not properly doing remove from indexes
The DocumentAnnotation is indexed; it is a subtype of AnnotationBase, so it is indexed in one view.  The method to update it (cas.updateDocumentAnnotation) attempts to remove it from the indexes but doesn't pick the proper view to do this; it uses the "current view" which is usually correct, but may not be (was not in one test case for UIMA V3, where this was discovered).
issueID:UIMA-4723
type:Improvement
changed files:
texts:Ruta: improve performance of default seeder and its markup workaround
Ruta: improve performance of default seeder and its markup workaround
issueID:UIMA-4724
type:Task
changed files:
texts:Ruta: let maven generate the JCas cover classes for the other type systems
Ruta: let maven generate the JCas cover classes for the other type systems
issueID:UIMA-4725
type:Improvement
changed files:
texts:Ruta: multiple values for label
Ruta: multiple values for label. Investigate what should happen if the match of the label has multiple matches and add some unit tests
issueID:UIMA-4726
type:Bug
changed files:
texts:DUCC Web Server (WS) automatic or manual mode incorrectly displayed
When employing multiple windows/tabs to the same DUCC Web Server, if the mode { manual, automatic } is changed in one then the others are affected, since the value of the cookie changes, but the displays for the other windows/tabs are not updated.Fix is to insure each window/tab uses the cookie value to display its mode.
issueID:UIMA-4727
type:Bug
changed files:
texts:Cassandra DB crashes with IBM Java
Crashes were infrequent but are reliable with latest JVM.For fix see https://issues.apache.org/jira/browse/KAFKA-2421Upgrade LZ4 to version 1.3 to avoid crashing with IBM Java 7.
issueID:UIMA-4728
type:Bug
changed files:unused-saved/src/org/apache/uima/internal/util/Int2IntHashMap.java
texts:Int2IntHashMap bug in containsKey()
There is a bug in containsKey() in the Int2IntHashMap. Use this test to check for the bug:import java.util.HashMap;import java.util.Map;import org.apache.uima.internal.util.Int2IntHashMap;import org.junit.Test;    @Test    public void int2intTest()    {        Int2IntHashMap map1 = new Int2IntHashMap();                Map<Integer, Integer> map2 = new HashMap<Integer, Integer>();                for (int i = 1; i < 100; i++) {            map1.put(i, 100-1);            map2.put(i, 100-1);        }        for (int i = 1; i < 100; i++) {            assertTrue("Map does not contain key ["+i+"]", map2.containsKey(i));        }                System.out.println("Reference map implementation ok.");        for (int i = 1; i < 100; i++) {            assertTrue("Map does not contain key ["+i+"]", map1.containsKey(i));        }                System.out.println("UIMA map implementation ok.");    }Fails with:java.lang.AssertionError: Map does not contain key [65]
issueID:UIMA-4729
type:Improvement
changed files:
texts:Ruta: Token seeder without Markup
I have a case where I need the token seeds coming from the default seeder but I don’t want to run the markup initialisation. There is currently no separate seeder defined for this. Right now I will have to maintain my own copy of the default seeder without the MARKUP initialisation but obviously this is not desirable. One solution is to split the seeder in two seeders with both added as default and another solution is just to add an additional token seeder without MARKUP to the library, which can then be used optionally to replace the default seeder. The latter solution would probably benefit that the common code of the two seeders is shared somehow to make sure the implementations are always in sync.
issueID:UIMA-473
type:Task
changed files:
texts:Update README and RELEASE_NOTES
Version numbers need updating."Major Changes in this Release" section of RELEASE_NOTES needs to be writtenList of JIRA issues needs to be copied to RELEASE_NOTESBe sure to update both RELEASE_NOTES and RELEASE_NOTES.html
issueID:UIMA-4730
type:Bug
changed files:
texts:Upgrade UIMA-DUCC to use new UIMA-AS 2.8.1, Jetty and Camel
Upgrading DUCC to the latest UIMA-AS 2.8.1 Snapshot which uses the UIMA-SDK 2.8.1, new AMQ, Spring Framework. Also, upgrade DUCC to newer Jetty, Camel, and other dependencies to levels supported by newer AMQ.
issueID:UIMA-4732
type:Bug
changed files:
texts:DUCC Web Server (WS) broker and database are shown as "down" on Daemons page
When using IBM Java the WebServer System.Daemons page shows "up" status for both Broker and Database.  Using Oracle Java both are always shown as "down".
issueID:UIMA-4733
type:New Feature
changed files:
texts:Ruta: add and remove fro annotations
Implement ADD and REMOVE also for annotation lists
issueID:UIMA-4734
type:New Feature
changed files:
texts:Ruta: support interpretation of generic feature expression as list epxression
Ruta: support interpretation of generic feature expression as list epxression
issueID:UIMA-4735
type:New Feature
changed files:
texts:Ruta: variables (macros) for actions and conditions
Ruta: variables (macros) for actions and conditions. Only lteral version with special syntax for linking the arguments. Maybe implemented as rewriting?ACTION macro(T1, T2) = CREATE(T1, "a" = T2, "b" = "test"), ASSIGN(var, var+1);
issueID:UIMA-4737
type:New Feature
changed files:
texts:Ruta: allow reference of variables as arguments in macros
Ruta: allow reference of variables as arguments in macros. The expressions should then not be evaluated but delegated.
issueID:UIMA-4738
type:Improvement
changed files:
texts:Ruta: add more documentation for macros
Ruta: add more documentation for macros
issueID:UIMA-4739
type:Improvement
changed files:
texts:Ruta: improve IDE syntax checks of macros
Ruta: improve IDE syntax checks of macros
issueID:UIMA-474
type:Bug
changed files:uimaj-core/src/main/java/org/apache/uima/resource/impl/ResourceManager_impl.java
uimaj-core/src/main/java/org/apache/uima/resource/impl/ResourceManager_impl.java
texts:Log messages for duplicate resource declarations have their arguments switched
If you declare two resources with the same name, you get a log message:The external resource named {0} has been declared multiple times with different definitions. \  The definition of the resource in component {1} will be used.  The definition in component {2} will be ignored.However the code that generates the message has the arguments {1} and {2} the wrong way around, actualy it is the resource declared in component {2} that will be used.The same is true for the log message about overriding resources - it tells you that the resource declared in the aggregate was overriden by its delegate, which is the opposite of what actually happens.
issueID:UIMA-4740
type:Bug
changed files:
texts:DUCC Job Driver (JD) neglects to set current thread classloader
From Burn:I think the problem is that when the DUCC JobDriver runs the user'sCollection Reader code using the user's classpath it does not set thethread's context class loader.  I suspect that the code you're calling isusing the thread's classloader to load names.txt.A work-around (until the next release) is for you to set it in your CR tobe the same as the one that loaded your CR before calling the code thatloads names.txt, e.g.Thread.currentThread().setContextClassLoader(this.getClass().getClassLoader());Note that if any user code uses the system classloader it may fail sincethat uses the classpath that started the JVM which will be the DUCCclasspath.
issueID:UIMA-4741
type:Bug
changed files:
texts:DUCC Web Server (WS) when hovering over Done on jobs page (std) dev is always 0.0
Either show the correct value or remove from hover.
issueID:UIMA-4742
type:Task
changed files:
texts:DUCC RM: Never deallocate non-preemptable shares
Design change - never deallocate non-preemptable shares until the job is completed in some way.  The shares stay allocated under all these conditions, some of which may require manual attention to clear the job: vary off node failure misconfigurationPreviously, jobs in class FIXED, services, and APs would be purged because they can be started elsewhere.
issueID:UIMA-4743
type:Bug
changed files:uimaj-core/src/main/java/org/apache/uima/cas/CASRuntimeException.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/CASSerializer.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/CASSerializer.java
texts:errors in plain binary cas delta serialization of short/long modifications to arrays
(Found by code reading, needs test case) The code in class CASSerializer for handling long/dbl value modified cells in arrays while doing delta serialization appears to have a some copy/paste kinds of errors. The first (line 583) attempts to get the collection of modified addrs in the long heap,but gets the "short" rather than "long" addrs.  The second (line 587) writes the address of the modified value using a writeShort, which both silently fails if the value is > 32767, and only writes 2 bytes, while the corresponding "read" (in CASImpl after comment "//modified Short heap" reads the addresses as an integer.  This makes all reading after this off by 2.This same kind of error (writing the address as a short) also appears in the handling of modifications of shorts (line 570).Fixing this will result in writing more bytes to the serialization stream, so the streams won't be "compatible".  Therefore, do some kind of incrementing of versions and serialVersionId values to signal to readers this format change.  Updating this for client/server pairs will require updates at both ends.This bug causes failure of deserialization, if any short or long array values are modified and delta serialization is being used, so needs to be fixed.Added a new test case to check this area and found another issue: the rounding to word boundaries while serializing delta changes to byte and short arrays was incorrect.  Fix that as well.
issueID:UIMA-4744
type:Bug
changed files:
texts:UIMA DUCC: RM admin channel not started after recent Camel upgrade
With a new Camel version recently added, the RM admin channel is not getting started. The Camel route for this channel is added to the camel context after the context.start() is called. The older Camel version apparently auto starts the route right after the route is added to the context.
issueID:UIMA-4745
type:Task
changed files:
texts:DUCC Doc updates for 2.1
Generic JIRA for all duccbook updates for 2.1.
issueID:UIMA-4748
type:New Feature
changed files:
texts:Ruta: support boolean expressions for string comparison
Ruta: support boolean expressions for string comparison
issueID:UIMA-4749
type:Bug
changed files:
texts:DUCC Web Server (WS) support for AMQ 5.12.1
Broker page not working with upgraded DUCC AMQ broker.
issueID:UIMA-475
type:Bug
changed files:uimaj-tools/src/main/java/org/apache/uima/tools/cpm/CpmPanel.java
uimaj-tools/src/main/java/org/apache/uima/tools/docanalyzer/DocumentAnalyzer.java
texts:Document Analyzer and CPE GUI have trouble running AE&#39;s multiple times
Document Analyzer and UIMA CPE GUI successfully run a Python Analysis engine, but hang in the initialization step when the engine is run a second time.  This happens, for instance, with the sample.py/PythonSample.xml engine distributed with the Pythonnator.  Note that if the Python Analysis engine is run directly using a CPE and run with the runCPE.sh script, I don't encounter this issue.I get similar behavior when running the OpenNLP package from Document Analyzer, but with OpenNLP it runs twice and then runs out of memory and thrashes on the third run.
issueID:UIMA-4750
type:Bug
changed files:
texts:UIMA-AS: startBroker,sh script broken
The startBroker.sh scrip is broken. Broker is not starting up. The last line in the script is wrong :"$ACTIVEMQ_HOME/bin/activemq" "start xbean:file:$ACTIVEMQ_BASE/conf/activemq-nojournal.xml"It should be:"$ACTIVEMQ_HOME/bin/activemq" "start" "xbean:file:$ACTIVEMQ_BASE/conf/activemq-nojournal.xml"Not that "start" is quoted.
issueID:UIMA-4751
type:Bug
changed files:
texts:UIMA-AS: improve msg service dumps on stdout when is looses broker connection
When UIMA-AS service looses connection to a broker, it dumps:Could not refresh JMS Connection for destination 'queue://MeetingDetectorTaeQueue' - silently retrying in 5 ms. Cause: Could not connect to broker URL: tcp://localhost:61616. Reason: java.net.ConnectException: Connection refusedThis comes from Spring, add additional msg saying the the service will retry until successful. Also, add another line which states the connection was recovered and service is ready to process again
issueID:UIMA-4752
type:Bug
changed files:
texts:ducc-mon won&#39;t display a service registry that has ${DUCC_SERVICE_INSTANCE}
ducc-mon fails to display the registry for a service that contains a reference to the special service-instance variable . It should be displayed as ${DUCC_SERVICE_INSTANCE} but after the DB updates we get a crash resolving place-holders.  Problem appears to be that getProperties in org.apache.uima.ducc.common.persistence.services.StateServices now returns a DuccProperties ... used to be a Properties.15 Jan 2016 16:56:31,818  WARN WS.DuccHandler - N/A handleDuccServletServiceRegistryData java.lang.IllegalArgumentException: Missing value for placeholder: DUCC_SERVICE_INSTANCE at org.apache.uima.ducc.common.utils.Utils.resolvePlaceholders(Utils.java:252) at org.apache.uima.ducc.common.utils.DuccProperties.getProperty(DuccProperties.java:264) at org.apache.uima.ducc.ws.server.DuccHandler.handleDuccServletServiceRegistryData(DuccHandler.java:2786) at org.apache.uima.ducc.ws.server.DuccHandler.handleDuccRequest(DuccHandler.java:4657) at org.apache.uima.ducc.ws.server.DuccHandler.handle(DuccHandler.java:4809)
issueID:UIMA-4753
type:Bug
changed files:
texts:DUCC Web Server (WS) displays misleading job reason
If a job goes to Completed state and not all work items are finished, then the Reason should be Error not Warning.  In such case, the corresponding hover should be "some work items not processed" or similar.That is, the Reason should be Error whenever the job goes to Completed and work items Total != Done.
issueID:UIMA-4754
type:Bug
changed files:
texts:DUCC Web Server (WS) remove support for scroll pages
Simplify WS by removal of duplicate functionality.
issueID:UIMA-4755
type:Bug
changed files:
texts:DUCC Web Server (WS) must assure compiled JSP&#39;s are viable
When switching Java's between WS boots, for example, previously compiled JSP's may no longer be viable.One solution is to insure erasure of the JSP compile directory whenever WS is booted.  But the danger here of blind directory erasure is that there may be other data co-located.
issueID:UIMA-4757
type:Bug
changed files:
texts:DUCC Job Driver (JD) swallows serialization errors?
Then it is possible that the XMI serializer threw an exception which was caught and ignored by the JD. Instead the JD should not send out the CAS, but simply convert this exception into a WI error and attach the error.
issueID:UIMA-4758
type:Bug
changed files:
texts:Ruta: reluctant qualifier right to left lookahead to literal string expression matcher
Ruta: reluctant qualifier right to left lookahead to literal string expression matcher"text" W[0,3]? @Anchor
issueID:UIMA-4759
type:Improvement
changed files:
texts:Provide a way to run architecture-sensitive code on a heterogeneous DUCC cluster
Make DUCC agents set the variable DUCC_OS_ARCH to the value of the system property "os.arch" when launching processes.  If left undefined on the user's side, any references to ${DUCC_OS_ARCH} will be left as-is by the CLI and replaced with the appropriate value when launched (e.g. ppc64 or amd64)
issueID:UIMA-476
type:Bug
changed files:uimaj-core/src/main/java/org/apache/uima/cas/impl/CASMgrSerializer.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/CASMgrSerializer.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/CASImpl.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/CASMgrSerializer.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/TypeSystemImpl.java
texts:FSArray causes error in SOAP service
When we run a SOAP service with any type system which uses FSArray,AnalysisEngineProcessException occurs,though the same component can be run as a local service.It occurs in the type system checking, independently of the component implementations.The error says:Caused by: org.apache.uima.UIMARuntimeException: The JCas cannot beinitialized.  The following errors occurred: The JCAS range typeuima.cas.FSArray for feature <OurFeatureName> of type <OurTypeName> doesnot match the CAS range <OurFeatureTypeName>[] for the feature. replaced our specific feature/type names.
issueID:UIMA-4760
type:Bug
changed files:
texts:Ruta: duplicate verbalization of type in type matcher
Ruta: duplicate verbalization of type in type matcher
issueID:UIMA-4761
type:Bug
changed files:
texts:UIMA-DUCC; Agent should add its PID to Node Metrics publication
Agent should add its PID to node metrics publication for the WS to consume. Currently, the WS gets a PID of an agent from a file the agent writes on startup.
issueID:UIMA-4762
type:Bug
changed files:
texts:DUCC Web Server (WS) cannot use colon : in cookie names in Jetty 8 and beyond
When upgrading Jetty from 7.x to 8.x cookies were no longer recognized.  DUCC had been using "ducc:" as the prefix to all of its cookie names.  Change the prefix to "DUCC".
issueID:UIMA-4764
type:Bug
changed files:
texts:Service error status is not cleared after a successful restart
Service registry meta.submit-error and meta.disable-reason fields are not cleared when a restart succeeds
issueID:UIMA-4765
type:Bug
changed files:
texts:DUCC Job Driver (JD) should limit size of user supplied work item name
User specified work item name size should not be without limit.  It should be truncated at the maximum size allowable.
issueID:UIMA-4767
type:Improvement
changed files:
texts:java-viaducc: improve default description and DUCC memory handling
Currently, default description is "java-viaducc". Improve this by including the class name and the arguments.Also, if DUCC memory size is specified and it is smaller than the amount required by the JVM (via -Xmx), display a warning with information about the flag to change. If it is not specified, DUCC memory size is automatically set to the -Xmx value.
issueID:UIMA-4768
type:Bug
changed files:
texts:Ruta: generic argument for aliases type interpreted as generic feature expression
Ruta: generic argument for aliases type interpreted as generic feature expression- -> generic feature expression becomes a type expression until a better solution is found, or the class is simply renamed.
issueID:UIMA-4769
type:Bug
changed files:uimaj-core/src/main/java/org/apache/uima/flow/impl/FlowControllerContext_impl.java
uimaj-core/src/main/java/org/apache/uima/impl/UimaContext_ImplBase.java
uimaj-core/src/main/java/org/apache/uima/flow/impl/FlowControllerContext_impl.java
uimaj-core/src/main/java/org/apache/uima/impl/UimaContext_ImplBase.java
texts:sofa mapping not set properly for flow controllers
A user reports the following problem:  an inner aggregate (IA) is contained within an outer aggregate (OA) the OA has a sofa mapping specifying that initial view be mapped to "my_view" (MV). IA has components A1 and A2, plus a flow controller (IA_FC).A1 and A2 correctly receive MV as the cas view, via sofa mapping.  However, IA_FC does not - it receives the _InitialView.When an aggregate is set up, there are two sofa mappings to consider; one is the calling context's sofa mapping (if any) up to that point; and then there is the aggregate's own sofa mapping from its descriptor.  This 2nd sofa mapping specifies, for each delegate, a set of sofa mappings.  In addition to mapping for delegates, it can also contain a mapping for the flow controller.The intended operation is to set up sub-contexts for each delegate or flow controller, that has the merge of the calling context's sofa mapping and any mapping specified for the component.  This merge is done, for example, in UimaContext_ImplBase method "createChild".  This logic is missing for the analogous creation of the context for the flow controller.  The fix is to (a) pull out this bit of merge logic into a subroutine, and do it in both the creation of the Annotator context, as well as the Flow controller context.Test the fix to see if it fixes uima-as use case (if uima-as has this same issue).
issueID:UIMA-477
type:Improvement
changed files:uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/MultiPageEditor.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/files/MultiResourceSelectionDialog.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/ui/dialogs/ResourcePickerDialog.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/files/MultiResourceSelectionDialog.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/ui/AggregateSection.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/ui/FlowSection.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/MultiPageEditor.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/ui/FileAndShortName.java
texts:CDE function for import by name uses file system browser; should instead show appropriate items in classpath
User reports being confused by having import by name show a file system browser as a picker.
issueID:UIMA-4770
type:Bug
changed files:
texts:UIMA DUCC: Agent not resetting process %CPU
The process metrics collector is not resetting child process percent CPU used when the process is idle. The following code in LinuxProcessMetricsProcessor.java is at fault:if (percentCPU > 0) { process.setCurrentCPU(currentCpuUsage);....}if percentCPU == 0 the value for cpu usage is not reset and its old value keeps being published in node metrics.
issueID:UIMA-4771
type:Bug
changed files:
texts:Ruta: destroy of imported analysis engines is not called
Ruta: destory of imported analysis engines is not called. Also take care that the Workbench calls it.
issueID:UIMA-4773
type:Bug
changed files:
texts:UIMA DUCC: JP throws BindException on startup if port is not available
On startup a JP throws  java.net.BindException: Address already in useA JP starts a Camel route on a socket to listen for agent STOP requests. This route can fail if a socket port is not available.Change Agent to send SIGTERM signal to JP to force an orderly shutdown instead of sending a STOP request over a dedicated socket channel. with this change, the JP no longer needs to create a Camel route over socket listener. Instead it just needs to catch the SIGTERM signal, quiesce and stop. The Agent will send SIGKILL (-9) to a process that refuses to stop for SIGTERM.
issueID:UIMA-4774
type:Improvement
changed files:
texts:DUCC Web Server (WS) Pgin and Swap columns for (Managed) Reservations page
The Jobs and Services pages have columns for PgIn and Swap.  The same columns should be added to the Reservations page, and should be filled in for Managed Reservations (aka Arbitrary Processes).
issueID:UIMA-4775
type:Bug
changed files:
texts:DUCC Resource Manager (RM) NPE in JobManagerConverter
Resource Manager (RM) logs contain NPE exceptions in class JobManagerConverter.  The logic of this class in 2 locations correctly handle null values but the corresponding logging does not.
issueID:UIMA-4776
type:Bug
changed files:
texts:DUCC Web Server (WS) should key machines by IP address not host name
If 2 machines have host name = "localhost" only one Agent PID will be visible.  Use IP as map key instead ... and good luck to you if you have 2 machines with the same IP address.
issueID:UIMA-4777
type:Task
changed files:
texts:DUCC Internals Documentation
Add detailed internals documentation.  At this time, only Resource Manager, Service Manager, and database support are included.
issueID:UIMA-4779
type:Bug
changed files:
texts:DUCC Orchestrator (OR) remove Exceptions and WARNs
1. Fix number format exception when memory size is not specified2. Fix erroneous WARN messages for perfectly good job specification keys
issueID:UIMA-478
type:Improvement
changed files:
texts:update UIMA Source Code web page - add table of contents

issueID:UIMA-4780
type:Task
changed files:
texts:Ruta: use newer version of maven-invoker-plugin
upgrade to at least 2.0.0see http://article.gmane.org/gmane.comp.apache.uima.devel/29733
issueID:UIMA-4781
type:Task
changed files:
texts:Ruta: fix jacadoc warnings for java 8
Ruta: fix jacadoc warnings for java 8
issueID:UIMA-4782
type:Improvement
changed files:
texts:Ruta copy/paste error in documentation of trim
Ruta copy/paste error in documentation of trim
issueID:UIMA-4783
type:Improvement
changed files:
texts:Ruta: Instantiate external engines only once when reloadScript=true
We are currently setting the parameter reloadScript to true in our RUTA engines so the dictionaries reload without us having to restart the service.But we have some external engines, invoked from RUTA scripts, which create connections to other servers, and until now we have been storing this connections as class instance variables in our external engines so they can be reused and the engine doesn't need to create a new connection for every document processed. And the initialize method checks whether the engine instance has already an open connection, so no matter how many times the initialize method is invoked only one connection is established.But if we invoke this external engine from a RUTA script that has the reloadScript parameter set to true, a new instance of the engine is created for every document processed, and therefore a new connection to the remote server will be established for each document too, regardless of the check for an existing connection in the initialize method.So for external engines that store some sort of state in instance variables, it would be great if RUTA only created one instance when the reloadScript is set to true.
issueID:UIMA-4784
type:Bug
changed files:
texts:Ruta: Invalid characters in compiled TWL files
When creating compiled tree word lists (in XML format) certain characters should be escaped such as the ampersand (&), otherwise RUTA is not able to load the compile dictionary that it creates.
issueID:UIMA-4785
type:Improvement
changed files:
texts:Ruta: MARKFAST and MARKTABLE to reload dictionaries
Have these two methods reload the dictionaries automatically if the modified date of the resource file has changed.
issueID:UIMA-4786
type:Bug
changed files:uimaj-core/src/main/java/org/apache/uima/cas/impl/BinaryCasSerDes4.java
texts:uima-core test case copy/paste bug
A trivial cut/paste error in BinaryCasSerDes4 CAS compare, for the case of comparing two long/double arrays, was comparing with itself (and therefore always reporting true).  After fixing, I rechecked the test to insure this wasn't covering up some errors (it wasn't).
issueID:UIMA-4787
type:Bug
changed files:
texts:Ducc Agent not collecting Child Process Metrics
When an agent launches a child process it also creates a Camel route which gathers child process metrics (RSS, CPU, SWAP, etc). Apparently the new Camel (introduced recently) does not auto start the route on creation. The previous version of Camel did auto start.Start Camel route after it is added to Camel context.
issueID:UIMA-4789
type:Task
changed files:
texts:Ruta: fix license of GermanNovels example project
See discussion on dev list:>> - is it necessary that the GermanNovels example contains GeneratedDKPRoCoreTypes.xml - can these not be obtained through Maven? If it is necessary, provenance information would be good.>> It was necessary when the rules were contributed, but it would be> possible now with some new features. I do not have the time to upgrade> the project (its priority is too low and it would require to change the> tutorial). I could add provenance information. I assume that it should> be in a README file but not in the NOTICE file, or is there an issue> converning the DKPro type systems?The DKPro Core type systems are covered by ASL (although for some reasonthere are no ASL headers in the original DKPro Core XML files...). Soin principle there is no problem, and because the original files don't haveASL headers, they also were not stripped by the aggregation process - againno problem.My understanding is that staying strict to the Apache rules, the contentsof the NOTICE of the DKPro Core artifacts from which the types wereobtained would need to be copied into a NOTICE within the examplesproject. If Ruta could obtain the types directly from the Maven artifacts,the types file and NOTICE inclusion would not be necessary.
issueID:UIMA-479
type:Bug
changed files:
texts:fix test class names that do not end with "Test"
Test classes that do not end with "Test" are not called by Maven. So all test classes must end with "Test" and not with "Tests" or anything else.
issueID:UIMA-4791
type:Bug
changed files:
texts:DUCC Managed Reservation failure to launch
When a submitted ManagedReservation fails to launch, it is difficult for the user to determine what went wrong.  There are (at least) three problems to be addressed:1. There is no user log file2. The Agent Reason shown by WS is "Discontinued"3. The Exit Code shown by WS is "0"This problem can be recreated by, for example, submitting a Managed Reservation with an environment string 128K characters long.  In this case, the Agent's log clearly shows the problem, but this is inaccessible to user:09 Feb 2016 09:20:47,790 ERROR Agent.DuccCommandExecutor - J&#91;19&#93; T&#91;349&#93; exec 19java.io.IOException: Cannot run program "/users1/degenaro/svn/apache/ducc/workspace/bluejws67/install/apache-uima-ducc-2.1.0-SNAPSHOT/admin/amd64/ducc_ling": error=7, Argument list too long        at java.lang.ProcessBuilder.start(ProcessBuilder.java:1040)        at org.apache.uima.ducc.agent.launcher.DuccCommandExecutor.doExec(DuccCommandExecutor.java:770)        at org.apache.uima.ducc.agent.launcher.DuccCommandExecutor.startProcess(DuccCommandExecutor.java:721)        at org.apache.uima.ducc.agent.launcher.DuccCommandExecutor.exec(DuccCommandExecutor.java:277)        at org.apache.uima.ducc.agent.launcher.CommandExecutor.call(CommandExecutor.java:194)        at org.apache.uima.ducc.agent.launcher.CommandExecutor.call(CommandExecutor.java:35)        at java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:345)        at java.util.concurrent.FutureTask.run(FutureTask.java:177)        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1156)        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:626)        at java.lang.Thread.run(Thread.java:780)Caused by: java.io.IOException: error=7, Argument list too long        at java.lang.UNIXProcess.forkAndExec(Native Method)        at java.lang.UNIXProcess.<init>(UNIXProcess.java:139)        at java.lang.ProcessImpl.start(ProcessImpl.java:163)        at java.lang.ProcessBuilder.start(ProcessBuilder.java:1032)        ... 10 more
issueID:UIMA-4792
type:Improvement
changed files:uimaj-core/src/main/java/org/apache/uima/cas/impl/BinaryCasSerDes.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/BinaryCasSerDes6.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/CASImpl.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/CASSerializer.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/CommonSerDes.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/BinaryCasSerDes4.java
texts:add versioning for serialized forms that includes incrementing part
Some recent Jiras will make some serialization forms incompatible.  To allow common code to still be able to read output written before these changes, an incrementing version number is added to the serialization header.  This also is needed to support Uima V3 reading V2 formats, etc.Put all of this logic into a new class, CommonSerDes.
issueID:UIMA-4793
type:Bug
changed files:uimaj-core/src/main/java/org/apache/uima/InternationalizedException.java
uimaj-core/src/main/java/org/apache/uima/InternationalizedRuntimeException.java
uimaj-core/src/main/java/org/apache/uima/InternationalizedException.java
uimaj-core/src/main/java/org/apache/uima/InternationalizedRuntimeException.java
uimaj-core/src/main/java/org/apache/uima/InternationalizedException.java
uimaj-core/src/main/java/org/apache/uima/InternationalizedRuntimeException.java
uimaj-core/src/main/java/org/apache/uima/internal/util/I18nUtil.java
uimaj-core/src/main/java/org/apache/uima/internal/util/MsgLocalizationClassLoader.java
uimaj-core/src/main/java/org/apache/uima/internal/util/MsgLocalizationClassLoader.java
uimaj-core/src/main/java/org/apache/uima/InternationalizedException.java
uimaj-core/src/main/java/org/apache/uima/internal/util/I18nUtil.java
uimaj-core/src/main/java/org/apache/uima/internal/util/MsgLocalizationClassLoader.java
uimaj-core/src/main/java/org/apache/uima/InternationalizedException.java
texts:Unable to localize exceptions when using alternative classloader
If a component is initialized through a resource manager with a custom classloader, then it may not have access to its localized exception message bundles.The reason is, that within the classloader chain, the CL which knows about the Core UIMA framework is at a higher level than the CL used by the resource manager that created the component. The component CL would have access to the message bundle, but InterationalizedException uses it's own classloader (the higher level one that knows about Core UIMA) to load message bundles:// locate the resource bundle for this exception's messages         // turn over the classloader of the current object explicitly, so that the         // message resolving also works for derived exception classes         ResourceBundle bundle = ResourceBundle.getBundle(               getResourceBundleName(), aLocale, this.getClass()                     .getClassLoader());Thread [main] (Suspended (exception MissingResourceException))  owns: PrintWriter  (id=92)  owns: ThrowableInformation  (id=93)  owns: ConsoleAppender  (id=94)  owns: RootLogger  (id=95)  ResourceBundle.throwMissingResourceException(String, Locale, Throwable) line: 1564  ResourceBundle.getBundleImpl(String, Locale, ClassLoader, ResourceBundle$Control) line: 1387  ResourceBundle.getBundle(String, Locale, ClassLoader) line: 1082  AnalysisEngineProcessException(InternationalizedException).getLocalizedMessage(Locale) line: 240  AnalysisEngineProcessException(InternationalizedException).getLocalizedMessage() line: 218  AnalysisEngineProcessException(Throwable).toString() line: 480  String.valueOf(Object) line: 2994  PrintWriter.println(Object) line: 754  Throwable$WrappedPrintWriter.println(Object) line: 764  AnalysisEngineProcessException(Throwable).printStackTrace(Throwable$PrintStreamOrWriter) line: 655  AnalysisEngineProcessException(Throwable).printStackTrace(PrintWriter) line: 721  DefaultThrowableRenderer.render(Throwable) line: 60  ThrowableInformation.getThrowableStrRep() line: 87  LoggingEvent.getThrowableStrRep() line: 413  ConsoleAppender(WriterAppender).subAppend(LoggingEvent) line: 313  ConsoleAppender(WriterAppender).append(LoggingEvent) line: 162  ConsoleAppender(AppenderSkeleton).doAppend(LoggingEvent) line: 251  AppenderAttachableImpl.appendLoopOnAppenders(LoggingEvent) line: 66  Logger(Category).callAppenders(LoggingEvent) line: 206  Logger(Category).forcedLog(String, Priority, Object, Throwable) line: 391  Logger(Category).log(String, Priority, Object, Throwable) line: 856  Log4jLogger_impl.log(Level, String, Throwable) line: 272  PrimitiveAnalysisEngine_impl.callAnalysisComponentProcess(CAS) line: 417  PrimitiveAnalysisEngine_impl.processAndOutputNewCASes(CAS) line: 308  PrimitiveAnalysisEngine_impl(AnalysisEngineImplBase).process(CAS) line: 269  PrimitiveAnalysisEngine_impl(AnalysisEngineImplBase).process(JCas) line: 284  AnalysisEngine$process.call(Object, Object) line: not available ...The IMHO best way would be if UIMA would at try here to use the thread's context classloader - and maybe that UIMA actually sets the thread context classloader to the resource manager CL while running components... in my case, I already do that outside UIMA atm, so searching the thread CL would be sufficient for me atm.See also: https://issues.apache.org/jira/browse/UIMA-3692
issueID:UIMA-4794
type:Bug
changed files:
texts:DUCC Job Driver (JD) does not assure viability (e.g. existence) of user specified AE
If user specified AE is not viable (e.g. does not exist) the JD should terminate.  Presently, it swallows the exceptions encountered during DD generation.
issueID:UIMA-4795
type:Improvement
changed files:
texts:DUCC ducc.properties itself should comprise the DUCC Book documentation
Eliminate dual documentation comprising ducc.properties itself and the DUCC Book version thereof.
issueID:UIMA-4796
type:Task
changed files:
texts:Ruta: review/add/remove eclipse specific files in example projects
Review/add/remove eclipse specific files in example projects. Reported by Richard:Only in ruta-2.4.0-svn/example-projects/GermanNovels: .classpathOnly in ruta-2.4.0-svn/example-projects/GermanNovels: .projectOnly in ruta-2.4.0-svn/example-projects/Misc: .projectOnly in ruta-2.4.0-svn/example-projects/ruta-tutorial-GermanNovels: .projectIf the Eclipse build metadata (.project, .classpath) files are in SVN, then I suppose they should also be in the source ZIP.These settings appear to be important for the proper functioning of the example projects - otherwise I would expect they also wouldn't be in SVN.When I try to "Import->Existing projects" on the example projects folder from the sources ZIP, I get: ExampleProject ExtensionsExample TextRulerExampleUsing "Import->Existing Maven projects", I get GermanNovels ruta-ep-example-extensions ruta-maven-exampleI never get Misc
issueID:UIMA-4797
type:Bug
changed files:
texts:uimafit wont build on windows
due to CRLF / LF conversion clashes
issueID:UIMA-4798
type:Task
changed files:
texts:Ruta: improve build process of eclipse bundles
Ruta: improve build process of eclipse bundles, e.g., update dltk versions and provide fallback for the osgi-releases
issueID:UIMA-4799
type:Bug
changed files:
texts:DUCC Orchestrator (OR) Service Instance failures are not captured in any user viewable log
When a DUCC Service is started and an instance fails the associated error information should be captured for the user to see.The Orchestrator (OR) should write a file ducc.error viewable by users via the WebServer (WS) by selecting the Service Details -> History.
issueID:UIMA-48
type:Task
changed files:uimaj-core/src/main/java/org/apache/uima/resource/ResourceInitializationException.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/metadata/impl/FixedFlow_impl.java
jVinci/src/main/java/org/apache/vinci/transport/TransportConstants.java
jVinci/src/main/java/org/apache/vinci/transport/vns/client/ServeonResult.java
uimaj-core/src/main/java/org/apache/uima/jcas/impl/JCasImpl.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/cpm/BaseCPMImpl.java
uimaj-core/src/main/java/org/apache/uima/collection/metadata/NameValuePair.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/ui/dialogs/SearchMonitoringThread.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/cpm/utils/QueueEntity.java
uimaj-examples/src/main/java/org/apache/uima/examples/cas/RegExAnnotator.java
uimaj-ep-pear-packager/src/main/java/org/apache/uima/pear/insd/edit/InsdConstants.java
uimaj-core/src/main/java/org/apache/uima/resource/MessagingSpecifier.java
uimaj-core/src/main/java/org/apache/uima/resource/metadata/TypePriorityList.java
uimaj-adapter-soap/src/main/java/org/apache/uima/adapter/soap/AxisResourceServiceManager.java
jVinci/src/main/java/org/apache/vinci/transport/TransportableFactory.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/EntityProcessStatusImpl.java
uimaj-tools/src/main/java/org/apache/uima/tools/cvd/FSTreeNode.java
uimaj-tools/src/main/java/org/apache/uima/tools/util/gui/FormPanel.java
uimaj-core/src/main/java/org/apache/uima/util/TCasToInlineXml.java
uimaj-core/src/main/java/org/apache/uima/resource/metadata/impl/TypeDescription_impl.java
uimaj-core/src/main/java/org/apache/uima/ResourceSpecifierFactory.java
uimaj-core/src/main/java/org/apache/uima/collection/CasConsumerDescription.java
uimaj-examples/src/main/java/org/apache/uima/tutorial/ex6/UimaMeetingAnnotator.java
uimaj-core/src/main/java/org/apache/uima/cas/FSIndexRepository.java
uimaj-core/src/main/java/org/apache/uima/jcas/impl/JFSIndexRepositoryImpl.java
uimaj-examples/src/main/java/org/apache/uima/examples/RunAE.java
uimaj-core/src/main/java/org/apache/uima/resource/metadata/FsIndexDescription.java
uimaj-tools/src/main/java/org/apache/uima/tools/cvd/MarkupExtent.java
uimaj-tools/src/main/java/org/apache/uima/tools/cpm/CpmFrame.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FSComparator.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/metadata/cpe/CasProcessorFilterImpl.java
jVinci/src/main/java/org/apache/vinci/transport/vns/VNSConstants.java
jVinci/src/main/java/org/apache/vinci/transport/vns/service/ServiceRegistry.java
uimaj-core/src/main/java/org/apache/uima/util/ConsumerCasUtils.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/cpm/engine/EOFToken.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/LinearTypeOrderBuilderImpl.java
uimaj-core/src/main/java/org/apache/uima/cas_data/ReferenceValue.java
uimaj-core/src/main/java/org/apache/uima/analysis_component/AnalysisComponent_ImplBase.java
uimaj-core/src/main/java/org/apache/uima/internal/util/TimeSpan.java
uimaj-core/src/main/java/org/apache/uima/cas/admin/FSIndexRepositoryMgr.java
uimaj-core/src/main/java/org/apache/uima/resource/impl/ConfigurableDataResourceSpecifier_impl.java
uimaj-core/src/main/java/org/apache/uima/search/IndexBuildItem.java
uimaj-core/src/main/java/org/apache/uima/collection/base_cpm/CasObjectProcessor.java
uimaj-core/src/main/java/org/apache/uima/util/Logger.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/AnalysisEngine.java
uimaj-tools/src/main/java/org/apache/uima/tools/jcasgen/IError.java
uimaj-core/src/main/java/org/apache/uima/collection/base_cpm/SkipCasException.java
uimaj-core/src/main/java/org/apache/uima/resource/impl/RelativePathResolver_impl.java
uimaj-examples/src/main/java/org/apache/uima/examples/xmi/UimaTypeSystem2Ecore.java
uimaj-core/src/main/java/org/apache/uima/util/AnalysisEnginePerformanceReports.java
uimaj-core/src/main/java/org/apache/uima/cas/FSFloatConstraint.java
jVinci/src/main/java/org/apache/vinci/transport/FrameLeaf.java
uimaj-tools/src/main/java/org/apache/uima/tools/cpm/PerformanceReportDialog.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/StandardStrings.java
uimaj-ep-jcasgen/src/main/java/org/apache/uima/jcas/jcasgenp/JgPluginRunner.java
uimaj-core/src/main/java/org/apache/uima/cas/AbstractCas_ImplBase.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/wizards/FlowControllerNewWizard.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/AnalysisProcessData.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/cpm/utils/FeatureMap.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/ShortHeap.java
uimaj-adapter-soap/src/main/java/org/apache/uima/adapter/soap/AxisAnalysisEngineService_impl.java
uimaj-core/src/main/java/org/apache/uima/resource/impl/URISpecifier_impl.java
uimaj-adapter-soap/src/main/java/org/apache/uima/adapter/soap/axis11/XmlSerializer_Axis11.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/ui/IndexImportSection.java
uimaj-tools/src/main/java/org/apache/uima/tools/viewer/CasTreeViewerApplet.java
uimaj-tools/src/main/java/org/apache/uima/tools/cvd/tsview/FeatureTableModel.java
uimaj-core/src/main/java/org/apache/uima/collection/base_cpm/CasProcessor.java
jVinci/src/main/java/org/apache/vinci/transport/util/Base64Converter.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/cpm/container/CasObjectNetworkCasProcessorImpl.java
uimaj-core/src/main/java/org/apache/uima/resource/impl/FileLanguageResourceSpecifier_impl.java
uimaj-core/src/main/java/org/apache/uima/impl/SofaID_impl.java
uimaj-core/src/main/java/org/apache/uima/resource/metadata/NameValuePair.java
uimaj-core/src/main/java/org/apache/uima/internal/util/IntVector.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/annotator/AnnotatorContext.java
uimaj-core/src/main/java/org/apache/uima/cas/admin/CASMgr.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/DoubleArrayFSImpl.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/metadata/cpe/CasProcessorConfigurationParameterSettingsImpl.java
uimaj-core/src/main/java/org/apache/uima/util/CasPool.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/xml/XMLScanner.java
uimaj-core/src/main/java/org/apache/uima/uimacpp/UimacppAnalysisComponent.java
uimaj-core/src/main/java/org/apache/uima/collection/CasInitializerDescription.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/MethodHandlesLookup.java
uimaj-examples/src/main/java/org/apache/uima/tutorial/DateAnnot.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/AnnotationTreeImpl.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/PreferencePage.java
uimaj-tools/src/main/java/org/apache/uima/tools/stylemap/ColorEditor.java
uimaj-adapter-vinci/src/main/java/org/apache/uima/adapter/vinci/util/NetworkUtil.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/metadata/cpe/CpeDescriptionImpl.java
uimaj-core/src/main/java/org/apache/uima/cas_data/PrimitiveValue.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/ByteArray.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/wizards/CasInitializerNewWizardPage.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/ui/ParameterPage.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/metadata/CapabilityLanguageFlow.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/ByteArrayFSImpl.java
uimaj-core/src/main/java/org/apache/uima/resource/ResourceProcessException.java
uimaj-tools/src/main/java/org/apache/uima/tools/util/gui/SliderField.java
uimaj-core/src/main/java/org/apache/uima/resource/metadata/TypeSystemDescription.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/MultiPageEditor.java
uimaj-core/src/main/java/org/apache/uima/collection/base_cpm/SynchPoint.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/xml/XMLWhitespaceDetector.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/wizards/FlowControllerNewWizardPage.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/metadata/impl/SofaMapping_impl.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/XmiCasSerializer.java
uimaj-core/src/main/java/org/apache/uima/util/XMLizable.java
uimaj-tools/src/main/java/org/apache/uima/tools/util/gui/AboutDialog.java
jVinci/src/main/java/org/apache/vinci/transport/VinciFrame.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/model/DefinedTypesWithSupers.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/cpm/utils/ConfigurableFeature.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/annotator/GenericAnnotator_ImplBase.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/metadata/cpe/CpeCheckpointImpl.java
uimaj-core/src/main/java/org/apache/uima/collection/metadata/CpeCheckpoint.java
uimaj-core/src/main/java/org/apache/uima/resource/JMSMessagingSpecifier.java
uimaj-core/src/main/java/org/apache/uima/resource/metadata/ConfigurationParameterSettings.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/ui/PriorityListSection.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/TypeImpl.java
uimaj-core/src/main/java/org/apache/uima/cas/FloatArrayFS.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/AnnotationBase_Type.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/ShortArray.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/metadata/cpe/CasProcessorTimeoutImpl.java
uimaj-core/src/main/java/org/apache/uima/collection/base_cpm/CasDataConsumer_ImplBase.java
uimaj-core/src/main/java/org/apache/uima/resource/impl/CasManager_impl.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/wizards/AbstractNewWizardPage.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FloatConstraint.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FSFloatConstraintImpl.java
uimaj-ep-pear-packager/src/main/java/org/apache/uima/pear/PearException.java
uimaj-core/src/main/java/org/apache/uima/resource/metadata/impl/TypePriorityList_impl.java
uimaj-ep-pear-packager/src/main/java/org/apache/uima/pear/insd/edit/vars/VarValList.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/cpm/container/CPEFactory.java
uimaj-tools/src/main/java/org/apache/uima/tools/stylemap/TableGUIMediator.java
uimaj-core/src/main/java/org/apache/uima/UIMAFramework.java
uimaj-tools/src/main/java/org/apache/uima/tools/images/Images.java
uimaj-examples/src/main/java/org/apache/uima/examples/flow/WhiteboardFlowController.java
unused-saved/src/org/apache/uima/cas/impl/FSRBTIndex.java
uimaj-core/src/main/java/org/apache/uima/flow/impl/CapabilityLanguageFlowController.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/cpm/engine/SequencedQueue.java
uimaj-tools/src/main/java/org/apache/uima/tools/stylemap/StyleMapTableModel.java
uimaj-core/src/main/java/org/apache/uima/internal/util/Graph.java
uimaj-tools/src/main/java/org/apache/uima/tools/util/gui/ImageButton.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/CommonPrimitiveArray.java
uimaj-tools/src/main/java/org/apache/uima/tools/util/gui/XMLFileFilter.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/Serialization.java
uimaj-core/src/main/java/org/apache/uima/resource/metadata/impl/ConfigurationParameterDeclarations_impl.java
uimaj-core/src/main/java/org/apache/uima/resource/impl/ConfigurationManager_impl.java
uimaj-core/src/main/java/org/apache/uima/UIMARuntimeException.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/ui/dialogs/ExportImportablePartDialog.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/impl/compatibility/AnalysisComponentAdapterFactory.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/LowLevelTypeSystem.java
uimaj-core/src/main/java/org/apache/uima/util/XmlCasSerializer.java
uimaj-core/src/main/java/org/apache/uima/resource/ResourceConfigurationException.java
uimaj-tools/src/main/java/org/apache/uima/tools/util/gui/TransportControlListener.java
uimaj-adapter-vinci/src/main/java/org/apache/uima/adapter/vinci/util/SaxVinciFrameBuilder.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/annotator/JTextAnnotator_ImplBase.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/base_cpm/container/ServiceConnectionException.java
uimaj-core/src/main/java/org/apache/uima/internal/util/TextStringTokenizer.java
uimaj-core/src/main/java/org/apache/uima/pear/tools/InstallationProcessor.java
uimaj-examples/src/main/java/org/apache/uima/examples/tokenizer/SimpleTokenAndSentenceAnnotator.java
uimaj-core/src/main/java/org/apache/uima/cas/AnnotationBaseFS.java
uimaj-examples/src/main/java/org/apache/uima/examples/ExampleApplication.java
uimaj-core/src/main/java/org/apache/uima/cas/text/AnnotationIndex.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/CasConverter.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/metadata/cpe/CpeCasProcessorsImpl.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/asb/ASB.java
uimaj-core/src/main/java/org/apache/uima/resource/ResourceServiceException.java
jVinci/src/main/java/org/apache/vinci/transport/ServiceDownException.java
uimaj-adapter-vinci/src/main/java/org/apache/uima/adapter/vinci/util/VinciSaxParser.java
uimaj-core/src/main/java/org/apache/uima/impl/UimaContext_ImplBase.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/metadata/cpe/CpeCollectionReaderIteratorImpl.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/ui/PrimitiveSection.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/cpm/utils/CasMetaData.java
jVinci/src/main/java/org/apache/vinci/transport/vns/service/WorkspaceConfig.java
uimaj-ep-pear-packager/src/main/java/org/apache/uima/pear/insd/edit/vars/VarValSorter.java
uimaj-core/src/main/java/org/apache/uima/cas/StringArrayFS.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/BooleanArrayFSImpl.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/LowLevelIndexRepository.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/metadata/cpe/CpeTimerImpl.java
uimaj-core/src/main/java/org/apache/uima/resource/impl/ExternalResourceDependency_impl.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/ui/SofaMapSection.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/cpm/container/deployer/vns/LocalVNS.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/cpm/Checkpoint.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/ui/dialogs/AddParameterDialog.java
uimaj-examples/src/main/java/org/apache/uima/tutorial/ex5/RoomNumberAnnotator.java
jVinci/src/main/java/org/apache/vinci/transport/BaseClient.java
uimaj-core/src/main/java/org/apache/uima/cas/admin/CASFactory.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/EmptyIntegerList.java
uimaj-core/src/main/java/org/apache/uima/analysis_component/JCasMultiplier_ImplBase.java
uimaj-core/src/main/java/org/apache/uima/cas/BooleanArrayFS.java
uimaj-core/src/main/java/org/apache/uima/resource/impl/ConfigurableDataResource_impl.java
uimaj-examples/src/main/java/org/apache/uima/tutorial/ex6/UimaAcronymAnnotator.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/OutOfTypeSystemData.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/StringArrayFSImpl.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/base_cpm/container/CasProcessorController.java
uimaj-core/src/main/java/org/apache/uima/resource/metadata/impl/ExternalResourceBinding_impl.java
uimaj-examples/src/main/java/org/apache/uima/examples/SofaExampleAnnotator.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FeaturePathImpl.java
uimaj-core/src/main/java/org/apache/uima/collection/metadata/CpeCasProcessors.java
uimaj-adapter-soap/src/main/java/org/apache/uima/adapter/soap/BinaryDeserializerFactory.java
uimaj-examples/src/main/java/org/apache/uima/tutorial/ex4/MeetingAnnotator.java
uimaj-tools/src/main/java/org/apache/uima/tools/cpm/TabClosedListener.java
uimaj-core/src/main/java/org/apache/uima/flow/Step.java
uimaj-core/src/main/java/org/apache/uima/collection/base_cpm/BaseCPM.java
uimaj-tools/src/main/java/org/apache/uima/tools/cpm/MetaDataPanel.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/xml/NonRuleBasedDamagerRepairer.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/base_cpm/container/deployer/CasProcessorDeployer.java
uimaj-core/src/main/java/org/apache/uima/resource/ConfigurableResource_ImplBase.java
jVinci/src/main/java/org/apache/vinci/transport/VinciServer.java
uimaj-ep-pear-packager/src/main/java/org/apache/uima/pear/insd/edit/vars/AbstractVarValViewerHandler.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/cpm/container/deployer/FencedProcessReaper.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/IntegerArray.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/impl/MultiprocessingAnalysisEngine_impl.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/ui/ExtnlResBindSection.java
uimaj-core/src/main/java/org/apache/uima/internal/util/IntListIterator.java
uimaj-core/src/main/java/org/apache/uima/internal/util/rb_trees/IntRBTArray.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/metadata/cpe/CpeIncludeImpl.java
uimaj-tools/src/main/java/org/apache/uima/tools/viewer/CasAnnotationViewerApplet.java
uimaj-core/src/main/java/org/apache/uima/resource/impl/Parameter_impl.java
uimaj-tools/src/main/java/org/apache/uima/tools/docanalyzer/FileSelectorListener.java
uimaj-core/src/main/java/org/apache/uima/collection/base_cpm/CasDataStatusCallbackListener.java
uimaj-core/src/main/java/org/apache/uima/resource/metadata/impl/SimplePrecondition_impl.java
uimaj-core/src/main/java/org/apache/uima/UIMA_IllegalArgumentException.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/IntegerList.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/ui/ResourceDependencySection.java
uimaj-core/src/main/java/org/apache/uima/collection/base_cpm/CasDataConsumer.java
uimaj-core/src/main/java/org/apache/uima/internal/util/ComparableIntIterator.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/TOP.java
jVinci/src/main/java/org/apache/vinci/transport/Frame.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/ui/dialogs/AddCapabilityFeatureDialog.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/cpm/container/deployer/socket/OFSocketTransportImpl.java
uimaj-core/src/main/java/org/apache/uima/collection/metadata/CpeRemoteCasProcessor.java
uimaj-tools/src/main/java/org/apache/uima/tools/stylemap/StyleConstants.java
uimaj-core/src/main/java/org/apache/uima/util/ProcessTrace.java
uimaj-core/src/main/java/org/apache/uima/resource/impl/ConfigurationManagerImplBase.java
uimaj-core/src/main/java/org/apache/uima/cas_data/impl/XCasToCasDataSaxHandler.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/annotator/GenericAnnotator.java
uimaj-core/src/main/java/org/apache/uima/cas_data/impl/ReferenceValueImpl.java
uimaj-core/src/main/java/org/apache/uima/internal/util/UtilError.java
uimaj-examples/src/main/java/org/apache/uima/examples/tokenizer/Token.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/ui/HeaderPage.java
uimaj-core/src/main/java/org/apache/uima/util/ProgressImpl.java
uimaj-examples/src/main/java/org/apache/uima/examples/xmi/Ecore2UimaTypeSystem.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/cpm/container/deployer/VinciTAP.java
jVinci/src/main/java/org/apache/vinci/transport/VinciClient.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/metadata/cpe/CpeCollectionReaderCasInitializerImpl.java
uimaj-tools/src/main/java/org/apache/uima/tools/jcasgen/UimaLoggerProgressMonitor.java
uimaj-tools/src/main/java/org/apache/uima/tools/stylemap/MyCellRenderer.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/wizards/TypePrioritiesNewWizard.java
uimaj-examples/src/main/java/org/apache/uima/examples/cas/PersonTitleAnnotator.java
uimaj-core/src/main/java/org/apache/uima/pear/util/FileUtil.java
uimaj-core/src/main/java/org/apache/uima/util/JCasPool.java
uimaj-tools/src/main/java/org/apache/uima/tools/cvd/AnnotationDisplayCustomizationFrame.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/impl/EmptyCasIterator.java
uimaj-core/src/main/java/org/apache/uima/collection/metadata/CpeIntegratedCasProcessor.java
uimaj-core/src/main/java/org/apache/uima/cas/admin/TypeSystemMgr.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/cpm/container/deployer/vinci/VinciCasProcessorDeployer.java
uimaj-core/src/main/java/org/apache/uima/cas/DoubleArrayFS.java
uimaj-core/src/main/java/org/apache/uima/internal/util/UUIDGenerator.java
uimaj-core/src/main/java/org/apache/uima/cas_data/FeatureValue.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/ui/CapabilitySection.java
uimaj-core/src/main/java/org/apache/uima/resource/ParameterizedDataResource.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/impl/compatibility/CasConsumerAdapter.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/cpm/vinci/Vinci.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/cpm/container/deployer/JavaApplication.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/ui/dialogs/AddSofaDialog.java
uimaj-tools/src/main/java/org/apache/uima/tools/cpm/CpmPanel.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/AnnotationBase.java
uimaj-core/src/main/java/org/apache/uima/collection/StatusCallbackListener.java
uimaj-core/src/main/java/org/apache/uima/collection/metadata/CasProcessorErrorRateThreshold.java
uimaj-ep-jcasgen/src/main/java/org/apache/uima/jcas/jcasgenp/EP_LogThrowErrorImpl.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/ui/TypeImportSection.java
uimaj-core/src/main/java/org/apache/uima/internal/util/IntSet.java
jVinci/src/main/java/org/apache/vinci/debug/AssertionFailedException.java
uimaj-adapter-vinci/src/main/java/org/apache/uima/adapter/vinci/VinciBinaryAnalysisEngineService_impl.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/Heap.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/metadata/cpe/CpeRemoteCasProcessorImpl.java
uimaj-tools/src/main/java/org/apache/uima/tools/jcasgen/IMerge.java
uimaj-core/src/main/java/org/apache/uima/search/impl/Attribute_impl.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/impl/compatibility/AnnotatorAdapter.java
uimaj-core/src/main/java/org/apache/uima/cas/CASException.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FSIndexRepositoryImpl.java
uimaj-core/src/main/java/org/apache/uima/flow/CasFlow_ImplBase.java
uimaj-core/src/main/java/org/apache/uima/pear/tools/PackageBrowser.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/ui/ParameterSettingsSection.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/xml/XMLDoubleClickStrategy.java
unused-saved/src/org/apache/uima/cas/impl/AnnotationIndexImpl.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/asb/impl/ASB_impl.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/metadata/cpe/CpeCollectionReaderImpl.java
uimaj-core/src/main/java/org/apache/uima/collection/metadata/CasProcessorConfigurationParameterSettings.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/ui/IndexSection.java
uimaj-core/src/main/java/org/apache/uima/internal/util/GraphNode.java
uimaj-examples/src/main/java/org/apache/uima/tutorial/SentenceAnnot.java
uimaj-core/src/main/java/org/apache/uima/util/InstrumentationFacility.java
uimaj-core/src/main/java/org/apache/uima/internal/util/ResourcePool.java
jVinci/src/main/java/org/apache/vinci/transport/vns/service/NameClient.java
uimaj-core/src/main/java/org/apache/uima/cas/AbstractCas.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/cpm/engine/ConsumerCasUtils.java
jVinci/src/main/java/org/apache/vinci/debug/Debug.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/ui/ParameterSection.java
uimaj-ep-jcasgen/src/main/java/org/apache/uima/jcas/jcasgenp/JgPlugin.java
uimaj-core/src/main/java/org/apache/uima/util/AnalysisEngineUtils.java
uimaj-adapter-soap/src/main/java/org/apache/uima/adapter/soap/BinarySerializer.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/EmptyStringList.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/impl/AnnotatorContext_impl.java
uimaj-core/src/main/java/org/apache/uima/resource/metadata/TypeDescription.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/service/impl/AnalysisEngineService_impl.java
unused-saved/src/org/apache/uima/internal/util/ComparableIntPointerIterator.java
uimaj-core/src/main/java/org/apache/uima/resource/FileResourceSpecifier.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/impl/TaeDescription_impl.java
uimaj-core/src/main/java/org/apache/uima/internal/util/SortedIntSet.java
uimaj-core/src/main/java/org/apache/uima/internal/util/I18nUtil.java
uimaj-examples/src/main/java/org/apache/uima/tutorial/ex3/TutorialDateTime.java
uimaj-core/src/main/java/org/apache/uima/flow/impl/CapabilityLanguageFlowObject.java
uimaj-core/src/main/java/org/apache/uima/cas_data/impl/FeatureStructureImpl.java
uimaj-core/src/main/java/org/apache/uima/UimaContextAdmin.java
uimaj-core/src/main/java/org/apache/uima/resource/RelativePathResolver.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/BooleanArray.java
uimaj-core/src/main/java/org/apache/uima/flow/CasFlowController_ImplBase.java
uimaj-core/src/main/java/org/apache/uima/internal/util/JavaTimer.java
uimaj-tools/src/main/java/org/apache/uima/tools/pear/merger/PMControllerHelper.java
uimaj-core/src/main/java/org/apache/uima/resource/ResourceSpecifier.java
uimaj-core/src/main/java/org/apache/uima/search/impl/Mapping_impl.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/annotator/Annotator_ImplBase.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FilteredIterator.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/cpm/container/ServiceProxyPool.java
uimaj-adapter-soap/src/main/java/org/apache/uima/adapter/soap/XmlDeserializer.java
uimaj-examples/src/main/java/org/apache/uima/examples/cpe/SimpleRunCPE.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/ui/dialogs/AddRemoteServiceDialog.java
uimaj-core/src/main/java/org/apache/uima/collection/metadata/CasProcessorDeploymentParams.java
uimaj-core/src/main/java/org/apache/uima/resource/metadata/ResourceMetaData.java
uimaj-core/src/main/java/org/apache/uima/flow/impl/AnalysisSequenceCapabilityNode.java
uimaj-adapter-vinci/src/main/java/org/apache/uima/adapter/vinci/VinciBinaryAnalysisEngineServiceStub.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/wizards/TypePrioritiesNewWizardPage.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/cpm/utils/Execute.java
uimaj-core/src/main/java/org/apache/uima/resource/metadata/ConfigurationParameterDeclarations.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/annotator/JTextAnnotator.java
uimaj-core/src/main/java/org/apache/uima/internal/util/ArrayUtils.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/cpm/engine/NonThreadedProcessingUnit.java
uimaj-core/src/main/java/org/apache/uima/cas_data/impl/CasDataToXCas.java
jVinci/src/main/java/org/apache/vinci/transport/SimpleTransportable.java
uimaj-examples/src/main/java/org/apache/uima/examples/xmi/XmiWriterCasConsumer.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/cpm/utils/Timer.java
uimaj-examples/src/main/java/org/apache/uima/examples/tokenizer/Sentence.java
uimaj-core/src/main/java/org/apache/uima/collection/base_cpm/BaseStatusCallbackListener.java
uimaj-core/src/main/java/org/apache/uima/resource/metadata/ResourceManagerConfiguration.java
uimaj-core/src/main/java/org/apache/uima/InternationalizedException.java
uimaj-tools/src/main/java/org/apache/uima/tools/stylemap/StyleMapEditor.java
uimaj-adapter-soap/src/main/java/org/apache/uima/adapter/soap/BinaryDeserializer.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/impl/TypeOrFeature_impl.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/InternalErrorCDE.java
uimaj-ep-pear-packager/src/main/java/org/apache/uima/pear/generate/PearExport.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/ui/OverviewPage.java
uimaj-core/src/main/java/org/apache/uima/resource/metadata/impl/Capability_impl.java
uimaj-ep-pear-packager/src/main/java/org/apache/uima/pear/insd/edit/vars/VarValCellModifier.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/ui/dialogs/AbstractDialog.java
uimaj-core/src/main/java/org/apache/uima/flow/Flow.java
uimaj-core/src/main/java/org/apache/uima/internal/util/StringToIntMap.java
uimaj-core/src/main/java/org/apache/uima/resource/metadata/impl/LanguagePrecondition_impl.java
uimaj-tools/src/main/java/org/apache/uima/tools/cpm/AnalysisEnginePanel.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/ResultNotSupportedException.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/cpm/container/NetworkCasProcessorImpl.java
uimaj-core/src/main/java/org/apache/uima/cas_data/impl/CasDataImpl.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FSIteratorImplBase.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/FloatArray.java
uimaj-tools/src/main/java/org/apache/uima/tools/cvd/TypeTreeNode.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FeatureImpl.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/TypeSystemImpl.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/StringConstraint.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/cpm/Constants.java
uimaj-core/src/main/java/org/apache/uima/internal/util/rb_trees/CompIntArrayRBT.java
uimaj-adapter-soap/src/main/java/org/apache/uima/adapter/soap/AxisAnalysisEngineServiceStub.java
uimaj-cpe/src/main/java/org/apache/uima/cas_data/impl/vinci/VinciCasDataConverter.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/ui/FileAndShortName.java
uimaj-core/src/main/java/org/apache/uima/internal/util/UIMAClassLoader.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/ui/SettingsPage.java
uimaj-core/src/main/java/org/apache/uima/resource/metadata/impl/TypeSystemDescription_impl.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/metadata/cpe/CasProcessorExecutableImpl.java
uimaj-core/src/main/java/org/apache/uima/UIMA_UnsupportedOperationException.java
uimaj-tools/src/main/java/org/apache/uima/tools/cpm/JTabbedPaneWithCloseIcons.java
uimaj-ep-pear-packager/src/main/java/org/apache/uima/pear/PearPlugin.java
uimaj-core/src/main/java/org/apache/uima/cas/FeatureValuePath.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/LowLevelException.java
uimaj-core/src/main/java/org/apache/uima/search/impl/Style_impl.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/cpm/utils/CPMUtils.java
uimaj-ep-pear-packager/src/main/java/org/apache/uima/pear/insd/edit/INSDComponentPage.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/ui/AggregateSection.java
uimaj-tools/src/main/java/org/apache/uima/tools/util/gui/TransportControlPanel.java
uimaj-core/src/main/java/org/apache/uima/resource/impl/FileLanguageResource_impl.java
uimaj-core/src/main/java/org/apache/uima/util/TypeSystemUtil.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/wizards/ResourceManagerConfigurationNewWizard.java
uimaj-tools/src/main/java/org/apache/uima/tools/docanalyzer/FileSelector.java
uimaj-core/src/main/java/org/apache/uima/util/CasCreationUtils.java
uimaj-tools/src/main/java/org/apache/uima/tools/stylemap/AnTreeListener.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/metadata/cpe/CasProcessorExecArgsImpl.java
uimaj-core/src/main/java/org/apache/uima/resource/metadata/FsIndexCollection.java
uimaj-tools/src/main/java/org/apache/uima/tools/viewer/CasAnnotationViewer.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/metadata/cpe/CpeObject.java
uimaj-tools/src/main/java/org/apache/uima/tools/util/gui/FileSelectorListener.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/cpm/container/deployer/socket/SocketCasProcessorDeployer.java
uimaj-adapter-vinci/src/main/java/org/apache/uima/adapter/vinci/VinciAnalysisEngineServiceAdapter.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/NonEmptyFSList.java
jVinci/src/main/java/org/apache/vinci/transport/util/TransportableConverter.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/model/AbstractModelPart.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FSTypeConstraintImpl.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/LLUnambiguousIteratorImpl.java
uimaj-core/src/main/java/org/apache/uima/resource/MailMessagingSpecifier.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/impl/AnalysisEngineImplBase.java
uimaj-core/src/main/java/org/apache/uima/collection/CollectionProcessingManager.java
uimaj-core/src/main/java/org/apache/uima/resource/Resource.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/xml/XMLTagScanner.java
uimaj-core/src/main/java/org/apache/uima/flow/FlowController.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/LongArrayFSImpl.java
uimaj-adapter-vinci/src/main/java/org/apache/uima/adapter/vinci/util/Descriptor.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/cpm/container/deployer/NonJavaApplication.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/impl/compatibility/CollectionReaderAdapter.java
uimaj-tools/src/main/java/org/apache/uima/tools/cvd/LogFileViewer.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/ui/MetaDataSection.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/wizards/FsIndexCollectionNewWizardPage.java
uimaj-core/src/main/java/org/apache/uima/collection/base_cpm/BaseCollectionReader.java
jVinci/src/main/java/org/apache/vinci/transport/vns/client/VNSConfig.java
uimaj-core/src/main/java/org/apache/uima/collection/metadata/CpeCollectionReader.java
uimaj-tools/src/main/java/org/apache/uima/tools/cvd/IndexTreeNode.java
uimaj-core/src/main/java/org/apache/uima/pear/util/ProcessUtil.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/ui/Utility.java
uimaj-core/src/main/java/org/apache/uima/cas/Type.java
uimaj-examples/src/main/java/org/apache/uima/tutorial/ex1/RoomNumberAnnotator.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/XmiCasDeserializer.java
uimaj-core/src/main/java/org/apache/uima/internal/util/IntComparator.java
uimaj-core/src/main/java/org/apache/uima/cas/CASRuntimeException.java
jVinci/src/main/java/org/apache/vinci/transport/VinciServerRunnable.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/xml/XMLPartitionScanner.java
uimaj-core/src/main/java/org/apache/uima/util/XMLParser.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/cpm/container/ProcessingContainer_Impl.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/AnalysisEngineManagement.java
uimaj-examples/src/main/java/org/apache/uima/examples/flow/WhiteboardFlowController2.java
uimaj-core/src/main/java/org/apache/uima/resource/impl/SessionNamespaceView_impl.java
uimaj-core/src/main/java/org/apache/uima/resource/metadata/impl/FsIndexKeyDescription_impl.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/ui/TypeSection.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/wizards/TAEConfiguratorNewWizard.java
uimaj-core/src/main/java/org/apache/uima/collection/CollectionReader_ImplBase.java
uimaj-core/src/main/java/org/apache/uima/cas/text/AnnotationTree.java
jVinci/src/main/java/org/apache/vinci/transport/VinciServable.java
uimaj-examples/src/main/java/org/apache/uima/tutorial/UimaAcronym.java
uimaj-core/src/main/java/org/apache/uima/InternationalizedRuntimeException.java
uimaj-core/src/main/java/org/apache/uima/util/XMLSerializer.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/FSList.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/cpm/StatusCallbackListenerImpl.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/cpm/utils/Filter.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/metadata/FixedFlow.java
uimaj-ep-debug/src/main/java/org/apache/uima/ep_debug/DebugPlugin.java
jVinci/src/main/java/org/apache/vinci/transport/document/XMLToXTalk.java
uimaj-examples/src/main/java/org/apache/uima/examples/cpe/SimpleRunCPM.java
uimaj-core/src/main/java/org/apache/uima/CompositeResourceFactory.java
uimaj-core/src/main/java/org/apache/uima/search/impl/Filter_impl.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/ui/TypePriorityImportSection.java
uimaj-tools/src/main/java/org/apache/uima/tools/stylemap/StyleMapTable.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/metadata/cpe/OutputQueue_impl.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/ui/ImportSection.java
uimaj-core/src/main/java/org/apache/uima/resource/impl/ExternalResourceDescription_impl.java
jVinci/src/main/java/org/apache/vinci/transport/ErrorFrame.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/cpm/engine/WorkUnit.java
uimaj-core/src/main/java/org/apache/uima/collection/metadata/CpeDescriptorException.java
uimaj-core/src/main/java/org/apache/uima/resource/ExternalResourceDescription.java
uimaj-core/src/main/java/org/apache/uima/flow/FlowControllerDescription.java
uimaj-core/src/main/java/org/apache/uima/collection/metadata/CasProcessorExecArgs.java
uimaj-core/src/main/java/org/apache/uima/uimacpp/CppUimajEngine.java
uimaj-core/src/main/java/org/apache/uima/resource/Resource_ImplBase.java
uimaj-tools/src/main/java/org/apache/uima/tools/cpm/ConsumerPanel.java
uimaj-core/src/main/java/org/apache/uima/internal/util/StringUtils.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/Subiterator.java
uimaj-adapter-vinci/src/main/java/org/apache/uima/adapter/vinci/util/VinciTAEClient.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/CASSerializer.java
uimaj-core/src/main/java/org/apache/uima/resource/metadata/MimeTypePrecondition.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/metadata/cpe/CasProcessorErrorHandlingImpl.java
uimaj-core/src/main/java/org/apache/uima/collection/metadata/CasProcessorRunInSeperateProcess.java
uimaj-core/src/main/java/org/apache/uima/resource/MQMessagingSpecifier.java
uimaj-core/src/main/java/org/apache/uima/cas/admin/LinearTypeOrder.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/base_cpm/container/ProcessingContainer.java
uimaj-adapter-soap/src/main/java/org/apache/uima/adapter/soap/SoapAnalysisEngineServiceAdapter.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/wizards/FsIndexCollectionNewWizard.java
uimaj-core/src/main/java/org/apache/uima/cas_data/ReferenceArrayFS.java
jVinci/src/main/java/org/apache/vinci/transport/ServiceException.java
uimaj-core/src/main/java/org/apache/uima/search/impl/IndexBuildSpecification_impl.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/ui/dialogs/AddTypeDialog.java
jVinci/src/main/java/org/apache/vinci/transport/vns/service/VNS.java
uimaj-examples/src/main/java/org/apache/uima/examples/cpe/InlineXmlCasConsumer.java
uimaj-core/src/main/java/org/apache/uima/collection/metadata/CpeInclude.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/impl/AggregateAnalysisEngine_impl.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/EmptyFSList.java
uimaj-core/src/main/java/org/apache/uima/collection/metadata/CpeSofaMappings.java
uimaj-core/src/main/java/org/apache/uima/resource/metadata/impl/ProcessingResourceMetaData_impl.java
uimaj-core/src/main/java/org/apache/uima/ResourceFactory.java
uimaj-core/src/main/java/org/apache/uima/resource/metadata/ProcessingResourceMetaData.java
uimaj-core/src/main/java/org/apache/uima/impl/CompositeResourceFactory_impl.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/cpm/CheckpointData.java
uimaj-core/src/main/java/org/apache/uima/resource/SharedResourceObject.java
uimaj-core/src/main/java/org/apache/uima/resource/impl/FileResourceSpecifier_impl.java
uimaj-tools/src/main/java/org/apache/uima/tools/stylemap/LabelCellEditor.java
unused-saved/src/org/apache/uima/cas/impl/FSListIteratorImpl.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/cpm/CPMImpl.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/metadata/cpe/CasProcessorDeploymentParamImpl.java
uimaj-tools/src/main/java/org/apache/uima/tools/jcasgen/GuiProgressMonitor.java
uimaj-core/src/main/java/org/apache/uima/collection/base_cpm/AbortCasProcessorException.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FeatureValuePathImpl.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/XMLTypeSystemConsts.java
uimaj-core/src/main/java/org/apache/uima/resource/ResourceCreationSpecifier.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/ArrayFSImpl.java
uimaj-core/src/main/java/org/apache/uima/cas/FSIntConstraint.java
uimaj-ep-pear-packager/src/main/java/org/apache/uima/pear/actions/GeneratePearFileAction.java
uimaj-examples/src/main/java/org/apache/uima/examples/cpe/FileSystemCollectionReader.java
uimaj-core/src/main/java/org/apache/uima/analysis_component/AnalysisComponent.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/wizards/AbstractNewWizard.java
uimaj-core/src/main/java/org/apache/uima/internal/util/CommandLineParser.java
uimaj-core/src/main/java/org/apache/uima/collection/base_cpm/CasDataCollectionReader_ImplBase.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/NonEmptyFloatList.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/cpm/engine/CPMChunkTimeoutException.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/DoubleArray.java
uimaj-core/src/main/java/org/apache/uima/internal/util/CharArrayString.java
uimaj-adapter-soap/src/main/java/org/apache/uima/adapter/soap/XmlDeserializerFactory.java
uimaj-core/src/main/java/org/apache/uima/internal/util/ReplaceStringInFiles.java
uimaj-core/src/main/java/org/apache/uima/collection/metadata/CasProcessorExecutable.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/CASMgrSerializer.java
uimaj-core/src/main/java/org/apache/uima/resource/impl/Session_impl.java
uimaj-core/src/main/java/org/apache/uima/resource/CasDefinition.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/impl/ResultSpecification_impl.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/annotator/AnnotatorInitializationException.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/AnalysisEngineServiceStub.java
uimaj-ep-pear-packager/src/main/java/org/apache/uima/pear/actions/EditInstallationDescriptorAction.java
uimaj-core/src/main/java/org/apache/uima/internal/util/AnalysisEnginePool.java
uimaj-core/src/main/java/org/apache/uima/resource/metadata/impl/FsIndexDescription_impl.java
uimaj-core/src/main/java/org/apache/uima/collection/metadata/CpeTimer.java
uimaj-ep-jcasgen/src/main/java/org/apache/uima/jcas/jcasgenp/ProgressMonitorImpl.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/DebugFSLogicalStructure.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/impl/AnalysisEngineDescription_impl.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/cpm/utils/TimerFactory.java
uimaj-tools/src/main/java/org/apache/uima/tools/util/gui/Caption.java
uimaj-core/src/main/java/org/apache/uima/internal/util/JmxMBeanAgent.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/metadata/cpe/CasProcessorDeploymentParamsImpl.java
uimaj-core/src/main/java/org/apache/uima/resource/metadata/ExternalResourceBinding.java
uimaj-core/src/main/java/org/apache/uima/cas/FSIndex.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/cpm/utils/ExpirationTimer.java
uimaj-tools/src/main/java/org/apache/uima/tools/stylemap/AnnotationFeaturesViewer.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FsGeneratorArray.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/metadata/cpe/CasProcessorErrorRateThresholdImpl.java
uimaj-core/src/main/java/org/apache/uima/cas_data/FeatureStructure.java
uimaj-tools/src/main/java/org/apache/uima/tools/util/gui/FileChooserBugWorkarounds.java
uimaj-core/src/main/java/org/apache/uima/cas/admin/LinearTypeOrderBuilder.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FSGenerator.java
uimaj-core/src/main/java/org/apache/uima/flow/SimpleStep.java
uimaj-core/src/main/java/org/apache/uima/pear/tools/InstallationDescriptorHandler.java
uimaj-core/src/main/java/org/apache/uima/search/IndexingException.java
uimaj-core/src/main/java/org/apache/uima/resource/metadata/FeatureDescription.java
uimaj-core/src/main/java/org/apache/uima/resource/ExternalResourceDependency.java
uimaj-ep-pear-packager/src/main/java/org/apache/uima/pear/generate/PearExportMessages.java
uimaj-core/src/main/java/org/apache/uima/resource/ResourceServiceSpecifier.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/ui/HeaderPageWithSash.java
uimaj-core/src/main/java/org/apache/uima/impl/UIMAFramework_impl.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/EmptyFloatList.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/annotator/BaseAnnotator.java
uimaj-core/src/main/java/org/apache/uima/collection/metadata/CpeConfiguration.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/ui/dialogs/AbstractDialogKeyVerify.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/base_cpm/container/RunnableContainer.java
uimaj-tools/src/main/java/org/apache/uima/tools/AnnotationFeaturesViewer.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/cpm/engine/BoundedWorkQueue.java
uimaj-examples/src/main/java/org/apache/uima/tutorial/Meeting.java
uimaj-core/src/main/java/org/apache/uima/pear/tools/InstallationController.java
jVinci/src/main/java/org/apache/vinci/transport/QueryableFrame.java
uimaj-core/src/main/java/org/apache/uima/cas/ConstraintFactory.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/model/DescriptorTCAS.java
jVinci/src/main/java/org/apache/vinci/transport/FrameTransporter.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/base_cpm/container/CasProcessorConfiguration.java
uimaj-core/src/main/java/org/apache/uima/cas/ArrayFS.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/metadata/cpe/CpeResourceManagerConfigurationImpl.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/files/ContextForPartDialog.java
uimaj-core/src/main/java/org/apache/uima/pear/util/MessageRouter.java
uimaj-core/src/main/java/org/apache/uima/flow/FlowController_ImplBase.java
uimaj-core/src/main/java/org/apache/uima/collection/metadata/CasProcessorExecArg.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/model/FlowNodes.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/StringMap.java
uimaj-examples/src/main/java/org/apache/uima/examples/casMultiplier/SimpleTextSegmenter.java
uimaj-core/src/main/java/org/apache/uima/impl/ResourceSpecifierFactory_impl.java
uimaj-examples/src/main/java/org/apache/uima/tutorial/TimeAnnot.java
jVinci/src/main/java/org/apache/vinci/transport/vns/service/Service.java
uimaj-ep-pear-packager/src/main/java/org/apache/uima/pear/insd/edit/vars/VarVal.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/annotator/AnnotatorProcessException.java
uimaj-core/src/main/java/org/apache/uima/cas/CasOwner.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/XCASParsingException.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/ui/dialogs/AbstractDialogMultiColTable.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/TypeNameSpaceImpl.java
uimaj-core/src/main/java/org/apache/uima/resource/metadata/AllowedValue.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/xml/XMLDocumentProvider.java
uimaj-examples/src/main/java/org/apache/uima/examples/xmi/XmiEcoreCasConsumer.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/cpm/CPMException.java
uimaj-core/src/main/java/org/apache/uima/internal/util/Timer.java
uimaj-adapter-soap/src/main/java/org/apache/uima/adapter/soap/BinarySerializerFactory.java
uimaj-tools/src/main/java/org/apache/uima/tools/cvd/CVD.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/cpm/utils/ValuePair.java
uimaj-tools/src/main/java/org/apache/uima/tools/util/gui/SpringUtilities.java
uimaj-core/src/main/java/org/apache/uima/collection/base_cpm/CasDataProcessor.java
jVinci/src/main/java/org/apache/vinci/transport/BaseServer.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/cpm/container/deployer/vns/VinciServiceInfo.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/LowLevelCAS.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/ui/dialogs/AddTypeToPriorityListDialog.java
uimaj-examples/src/main/java/org/apache/uima/examples/casMultiplier/SimpleTextMerger.java
uimaj-core/src/main/java/org/apache/uima/analysis_component/CasMultiplier_ImplBase.java
uimaj-core/src/main/java/org/apache/uima/collection/metadata/CasProcessorFilter.java
uimaj-core/src/main/java/org/apache/uima/collection/metadata/CasProcessorTimeout.java
unused-saved/src/org/apache/uima/jcas/impl/CASMetadata.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/metadata/cpe/CpeIntegratedCasProcessorImpl.java
uimaj-core/src/main/java/org/apache/uima/resource/impl/ResourceState_impl.java
jVinci/src/main/java/org/apache/vinci/transport/util/UTFConverter.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/StringArray.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/ui/AbstractSectionParm.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/files/MultiResourceSelectionDialogWithFlowOption.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/cpm/container/deployer/DeployFactory.java
uimaj-core/src/main/java/org/apache/uima/util/SimpleResourceFactory.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/annotator/TextAnnotator.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/wizards/CasConsumerNewWizard.java
uimaj-core/src/main/java/org/apache/uima/pear/util/StringUtil.java
uimaj-examples/src/main/java/org/apache/uima/examples/SourceDocumentInformation.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/impl/AnalysisEngineManagementImplMBean.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/ResultSpecification.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/SofaFSImpl.java
uimaj-core/src/main/java/org/apache/uima/internal/util/IntStack.java
uimaj-core/src/main/java/org/apache/uima/cas_data/CasData.java
uimaj-core/src/main/java/org/apache/uima/resource/service/impl/ResourceServiceAdapter.java
uimaj-core/src/main/java/org/apache/uima/impl/CasInitializerFactory_impl.java
uimaj-tools/src/main/java/org/apache/uima/tools/util/gui/IntegerField.java
uimaj-ep-pear-packager/src/main/java/org/apache/uima/pear/insd/edit/vars/VarValLabelProvider.java
uimaj-examples/src/main/java/org/apache/uima/tutorial/DateTimeAnnot.java
uimaj-core/src/main/java/org/apache/uima/cas/FSStringConstraint.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/CommonAuxHeap.java
uimaj-tools/src/main/java/org/apache/uima/tools/docanalyzer/AnnotationViewerDialog.java
uimaj-adapter-soap/src/main/java/org/apache/uima/adapter/soap/AxisResourceServiceStub.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/cpm/engine/ProcessingUnit.java
uimaj-core/src/main/java/org/apache/uima/internal/util/CharArraySpanMap.java
uimaj-core/src/main/java/org/apache/uima/cas_data/impl/PrimitiveArrayFSImpl.java
uimaj-core/src/main/java/org/apache/uima/pear/util/UIMAUtil.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/wizards/CollectionReaderNewWizard.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/FSArray.java
uimaj-core/src/main/java/org/apache/uima/resource/impl/ResourceManager_impl.java
uimaj-core/src/main/java/org/apache/uima/resource/metadata/impl/ConfigurationGroup_impl.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/LowLevelIndex.java
uimaj-tools/src/main/java/org/apache/uima/tools/cpm/ConfigField.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/AnalysisEngineDescription.java
uimaj-core/src/main/java/org/apache/uima/impl/CollectionReaderFactory_impl.java
uimaj-core/src/main/java/org/apache/uima/util/Level.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/model/DescriptorMetaData.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/AnnotationTreeNodeImpl.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/model/ConfigGroup.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/cpm/container/CasProcessorConfigurationJAXBImpl.java
uimaj-tools/src/main/java/org/apache/uima/tools/stylemap/StyleMapXmlParser.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/metadata/cpe/CasProcessorRuntimeEnvParamImpl.java
uimaj-core/src/main/java/org/apache/uima/cas/SofaID.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/impl/AnalysisProcessData_impl.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FeatureStructureImpl.java
uimaj-core/src/main/java/org/apache/uima/flow/impl/FlowControllerDescription_impl.java
uimaj-core/src/main/java/org/apache/uima/internal/util/IntArrayUtils.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/CASCompleteSerializer.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/JCasIterator.java
uimaj-core/src/main/java/org/apache/uima/cas/FSConstraint.java
uimaj-core/src/main/java/org/apache/uima/collection/metadata/CasProcessorMaxRestarts.java
uimaj-core/src/main/java/org/apache/uima/internal/util/UIMAStreamHandler.java
uimaj-core/src/main/java/org/apache/uima/search/Filter.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/TypeOrFeature.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/cpm/utils/TypeComplianceConverterImpl.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/ui/dialogs/AddIndexDialog.java
uimaj-core/src/main/java/org/apache/uima/internal/util/BinaryTree.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/cpm/container/deployer/CPEDeployerDefaultImpl.java
uimaj-tools/src/main/java/org/apache/uima/tools/cvd/MainFrame.java
uimaj-core/src/main/java/org/apache/uima/collection/metadata/CpeCasProcessor.java
uimaj-core/src/main/java/org/apache/uima/resource/metadata/impl/PropertyXmlInfo.java
uimaj-core/src/main/java/org/apache/uima/jcas/tcas/Annotation_Type.java
uimaj-core/src/main/java/org/apache/uima/collection/impl/CasInitializerDescription_impl.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FSImplComparator.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/cpm/engine/DebugControlThread.java
uimaj-core/src/main/java/org/apache/uima/UIMAException.java
uimaj-core/src/main/java/org/apache/uima/resource/metadata/impl/MimeTypePrecondition_impl.java
uimaj-ep-pear-packager/src/main/java/org/apache/uima/pear/insd/edit/vars/IVarValListViewer.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/cpm/container/deployer/RunnableApplication.java
uimaj-ep-pear-packager/src/main/java/org/apache/uima/pear/generate/PearFileResourceExportPage.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/ui/dialogs/AbstractDialogKeyVerifyJavaNames.java
uimaj-core/src/main/java/org/apache/uima/collection/metadata/CpeCollectionReaderIterator.java
uimaj-core/src/main/java/org/apache/uima/cas/TypeNameSpace.java
uimaj-tools/src/main/java/org/apache/uima/tools/stylemap/StyleMapEntry.java
uimaj-core/src/main/java/org/apache/uima/resource/metadata/ConfigurationParameter.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/cpm/container/deployer/socket/ProcessControllerAdapter.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/CASImpl.java
jVinci/src/main/java/org/apache/vinci/transport/util/XMLConverter.java
uimaj-core/src/main/java/org/apache/uima/collection/metadata/CpeSofaMapping.java
uimaj-core/src/main/java/org/apache/uima/cas/IntArrayFS.java
uimaj-core/src/main/java/org/apache/uima/search/Mapping.java
uimaj-examples/src/main/java/org/apache/uima/tutorial/WordAnnot.java
uimaj-tools/src/main/java/org/apache/uima/tools/jcasgen/GUI.java
uimaj-core/src/main/java/org/apache/uima/resource/metadata/Import.java
uimaj-core/src/main/java/org/apache/uima/internal/util/InstrumentationFacility_impl.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/metadata/cpe/CasProcessorRunInSeperateProcessImpl.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/TaeDescription.java
uimaj-ep-pear-packager/src/main/java/org/apache/uima/pear/insd/edit/vars/VarValViewerHandler.java
uimaj-examples/src/main/java/org/apache/uima/tutorial/ex6/StringMapResource_impl.java
uimaj-core/src/main/java/org/apache/uima/cas/FSIterator.java
uimaj-core/src/main/java/org/apache/uima/cas/FSMatchConstraint.java
uimaj-core/src/main/java/org/apache/uima/search/impl/IndexRule_impl.java
uimaj-core/src/main/java/org/apache/uima/util/Progress.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/ui/dialogs/FindComponentDialog.java
uimaj-tools/src/main/java/org/apache/uima/tools/stylemap/ColorParser.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/ui/dialogs/PickTaeForTypesDialog.java
uimaj-core/src/main/java/org/apache/uima/cas_data/impl/PrimitiveValueImpl.java
uimaj-ep-pear-packager/src/main/java/org/apache/uima/pear/insd/edit/INSDEnvironmentPage.java
uimaj-examples/src/main/java/org/apache/uima/examples/casMultiplier/CasMultiplierExampleApplication.java
uimaj-core/src/main/java/org/apache/uima/pear/tools/SimplePackageSelector.java
uimaj-core/src/main/java/org/apache/uima/cas/admin/FSIndexComparator.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/metadata/impl/FlowControllerDeclaration_impl.java
uimaj-core/src/main/java/org/apache/uima/Constants.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/ui/ParameterDelegatesSection.java
uimaj-tools/src/main/java/org/apache/uima/tools/jcasgen/GuiErrorImpl.java
uimaj-tools/src/main/java/org/apache/uima/tools/cvd/ArrayNode.java
uimaj-core/src/main/java/org/apache/uima/collection/metadata/CasProcessorDeploymentParam.java
uimaj-core/src/main/java/org/apache/uima/resource/ResourceManager.java
uimaj-core/src/main/java/org/apache/uima/UimaContext.java
uimaj-core/src/main/java/org/apache/uima/resource/metadata/FsIndexKeyDescription.java
uimaj-core/src/main/java/org/apache/uima/resource/metadata/Precondition.java
uimaj-core/src/main/java/org/apache/uima/resource/metadata/impl/NameValuePair_impl.java
uimaj-adapter-vinci/src/main/java/org/apache/uima/adapter/vinci/VinciAnalysisEngineServiceStub.java
uimaj-core/src/main/java/org/apache/uima/resource/metadata/OperationalProperties.java
uimaj-adapter-soap/src/main/java/org/apache/uima/adapter/soap/axis11/XmlDeserializer_Axis11.java
uimaj-core/src/main/java/org/apache/uima/resource/metadata/impl/FsIndexCollection_impl.java
uimaj-core/src/main/java/org/apache/uima/resource/DataResource.java
uimaj-core/src/main/java/org/apache/uima/internal/util/XMLUtils.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/base_cpm/container/deployer/CasProcessorDeploymentException.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/cpm/utils/ChunkMetadata.java
uimaj-core/src/main/java/org/apache/uima/resource/metadata/LanguagePrecondition.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FloatArrayFSImpl.java
uimaj-tools/src/main/java/org/apache/uima/tools/jcasgen/Prefs.java
uimaj-core/src/main/java/org/apache/uima/cas/admin/CASAdminException.java
uimaj-core/src/main/java/org/apache/uima/cas/ParsingException.java
uimaj-core/src/main/java/org/apache/uima/util/CasCopier.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/ui/dialogs/EditSofaBindingsDialog.java
uimaj-tools/src/main/java/org/apache/uima/tools/docanalyzer/TfFileSelectorListener.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/xml/TagRule.java
uimaj-core/src/main/java/org/apache/uima/impl/ChildUimaContext_impl.java
uimaj-core/src/main/java/org/apache/uima/uimacpp/UimacppEngine.java
uimaj-tools/src/main/java/org/apache/uima/tools/ValidateDescriptor.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/cpm/CPEConfig.java
uimaj-core/src/main/java/org/apache/uima/internal/util/IntPointerIterator.java
uimaj-core/src/main/java/org/apache/uima/jcas/JFSIndexRepository.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/AnalysisEngineProcessException.java
uimaj-core/src/main/java/org/apache/uima/search/Style.java
uimaj-examples/src/main/java/org/apache/uima/examples/PrintAnnotations.java
uimaj-tools/src/main/java/org/apache/uima/tools/util/gui/FileSelector.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/cpm/engine/CPECasPool.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/TextAnalysisEngine.java
jVinci/src/main/java/org/apache/vinci/transport/context/VinciContext.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/ShortArrayFSImpl.java
uimaj-tools/src/main/java/org/apache/uima/tools/docanalyzer/TfDocumentListener.java
uimaj-core/src/main/java/org/apache/uima/resource/metadata/impl/Import_impl.java
uimaj-examples/src/main/java/org/apache/uima/examples/SofaExampleApplication.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/metadata/AnalysisEngineMetaData.java
uimaj-core/src/main/java/org/apache/uima/search/IndexRule.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/ui/dialogs/AddFeatureDialog.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/files/MultiResourceSelectionDialog.java
uimaj-core/src/main/java/org/apache/uima/resource/metadata/SimplePrecondition.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/CollectionProcessingEngine_impl.java
uimaj-core/src/main/java/org/apache/uima/resource/metadata/impl/MetaDataObject_impl.java
uimaj-adapter-vinci/src/main/java/org/apache/uima/adapter/vinci/CASTransportable.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/IntConstraint.java
uimaj-tools/src/main/java/org/apache/uima/tools/cvd/MultiAnnotViewerFrame.java
uimaj-ep-pear-packager/src/main/java/org/apache/uima/pear/actions/PearProjectCustomizationException.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/ConjunctiveConstraint.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/metadata/cpe/CasProcessorExecArgImpl.java
uimaj-core/src/main/java/org/apache/uima/cas/ShortArrayFS.java
uimaj-core/src/main/java/org/apache/uima/cas/LongArrayFS.java
uimaj-core/src/main/java/org/apache/uima/resource/metadata/impl/ResourceMetaData_impl.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/PathConstraint.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/metadata/cpe/CasProcessorCpeObject.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/ui/IndexesPage.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/cpm/CheckpointConfig.java
uimaj-core/src/main/java/org/apache/uima/collection/base_cpm/AbortCPMException.java
uimaj-ep-pear-packager/src/main/java/org/apache/uima/pear/insd/edit/PearInstallationDescriptor.java
uimaj-core/src/main/java/org/apache/uima/resource/metadata/impl/ConfigurationParameter_impl.java
uimaj-core/src/main/java/org/apache/uima/util/XmlCasDeserializer.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/model/BuiltInTypes.java
uimaj-examples/src/main/java/org/apache/uima/tutorial/ex2/RoomNumberAnnotator.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/Sofa.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/ui/ResourcesPage.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/model/AllTypes.java
uimaj-core/src/main/java/org/apache/uima/cas/FSTypeConstraint.java
uimaj-core/src/main/java/org/apache/uima/resource/metadata/TypePriorities.java
uimaj-tools/src/main/java/org/apache/uima/tools/cvd/ColorIcon.java
uimaj-core/src/main/java/org/apache/uima/impl/RootUimaContext_impl.java
uimaj-tools/src/main/java/org/apache/uima/tools/jcasgen/JCasTypeTemplate.java
uimaj-core/src/main/java/org/apache/uima/flow/impl/FlowControllerContext_impl.java
uimaj-core/src/main/java/org/apache/uima/internal/util/EncodedPrintStream.java
uimaj-adapter-soap/src/main/java/org/apache/uima/adapter/soap/axis11/BinarySerializer_Axis11.java
uimaj-tools/src/main/java/org/apache/uima/tools/cvd/FSTreeModel.java
uimaj-tools/src/main/java/org/apache/uima/tools/docanalyzer/TfFocusListener.java
uimaj-core/src/main/java/org/apache/uima/cas/TypeSystem.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/wizards/ResourceManagerConfigurationNewWizardPage.java
uimaj-core/src/main/java/org/apache/uima/resource/service/impl/ResourceService_impl.java
uimaj-tools/src/main/java/org/apache/uima/tools/docanalyzer/DocumentAnalyzer.java
uimaj-core/src/main/java/org/apache/uima/collection/impl/CasConsumerDescription_impl.java
uimaj-core/src/main/java/org/apache/uima/search/IndexBuildSpecification.java
uimaj-tools/src/main/java/org/apache/uima/tools/pear/install/InstallPear.java
uimaj-tools/src/main/java/org/apache/uima/tools/util/gui/ListSelector.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/impl/JCasIteratorWrapper.java
uimaj-core/src/main/java/org/apache/uima/cas/ByteArrayFS.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/cpm/container/deployer/socket/SocketTransport.java
jVinci/src/main/java/org/apache/vinci/transport/Attributes.java
uimaj-core/src/main/java/org/apache/uima/resource/ConfigurableDataResourceSpecifier.java
uimaj-tools/src/main/java/org/apache/uima/tools/jcasgen/TypeInfo.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/metadata/cpe/CpeConfigurationImpl.java
uimaj-core/src/main/java/org/apache/uima/util/TCasFormatter.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/metadata/cpe/CpeComponentDescriptorImpl.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/ui/dialogs/AddIndexKeyDialog.java
uimaj-core/src/main/java/org/apache/uima/collection/CasInitializer_ImplBase.java
uimaj-core/src/main/java/org/apache/uima/internal/util/SymbolTable.java
uimaj-core/src/main/java/org/apache/uima/resource/Session.java
jVinci/src/main/java/org/apache/vinci/transport/FrameComponent.java
uimaj-core/src/main/java/org/apache/uima/collection/EntityProcessStatus.java
uimaj-core/src/main/java/org/apache/uima/resource/URISpecifier.java
uimaj-core/src/main/java/org/apache/uima/flow/JCasFlowController_ImplBase.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/xml/XMLEditor.java
uimaj-core/src/main/java/org/apache/uima/cas/text/Language.java
uimaj-core/src/main/java/org/apache/uima/internal/util/TextTokenizer.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/ConstraintFactoryImpl.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/ui/ImportResBindSection.java
uimaj-core/src/main/java/org/apache/uima/pear/tools/LocalInstallationAgent.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/DebugNameValuePair.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/cpm/engine/CPMEngine.java
jVinci/src/main/java/org/apache/vinci/transport/document/XMLToVinci.java
jVinci/src/main/java/org/apache/vinci/transport/vns/client/ResolveResult.java
uimaj-ep-pear-packager/src/main/java/org/apache/uima/pear/nature/UimaNature.java
uimaj-core/src/main/java/org/apache/uima/pear/tools/PackageSelectorGUI.java
uimaj-core/src/main/java/org/apache/uima/collection/CollectionReaderDescription.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/ui/dialogs/AddExternalResourceDialog.java
uimaj-core/src/main/java/org/apache/uima/collection/CollectionException.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/wizards/CasInitializerNewWizard.java
uimaj-tools/src/main/java/org/apache/uima/tools/jcasgen/Jg.java
uimaj-core/src/main/java/org/apache/uima/resource/metadata/Capability.java
uimaj-core/src/main/java/org/apache/uima/search/Attribute.java
uimaj-adapter-vinci/src/main/java/org/apache/uima/adapter/vinci/VinciAnalysisEngineService_impl.java
uimaj-core/src/main/java/org/apache/uima/internal/util/rb_trees/RedBlackTree.java
uimaj-core/src/main/java/org/apache/uima/internal/util/rb_trees/IntArrayRBT.java
uimaj-core/src/main/java/org/apache/uima/util/FileUtils.java
uimaj-core/src/main/java/org/apache/uima/resource/ConfigurableResource.java
uimaj-core/src/main/java/org/apache/uima/resource/metadata/impl/ConfigurationParameterSettings_impl.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/metadata/cpe/CpeSofaMappingImpl.java
uimaj-examples/src/main/java/org/apache/uima/examples/XmlDetagger.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FSStringConstraintImpl.java
uimaj-examples/src/main/java/org/apache/uima/examples/xmi/XmiCollectionReader.java
jVinci/src/main/java/org/apache/vinci/transport/Transportable.java
uimaj-examples/src/main/java/org/apache/uima/tutorial/RoomNumber.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/wizards/CollectionReaderNewWizardPage.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/xml/IXMLColorConstants.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/LongHeap.java
uimaj-core/src/main/java/org/apache/uima/cas/text/AnnotationFS.java
uimaj-tools/src/main/java/org/apache/uima/tools/cvd/FSNode.java
uimaj-core/src/main/java/org/apache/uima/collection/base_cpm/CasDataInitializer.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/metadata/impl/CapabilityLanguageFlow_impl.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/base_cpm/container/KillPipelineException.java
uimaj-core/src/main/java/org/apache/uima/internal/util/rb_trees/RBTNode.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/wizards/TypeSystemNewWizard.java
uimaj-core/src/main/java/org/apache/uima/impl/CasConsumerFactory_impl.java
uimaj-core/src/main/java/org/apache/uima/util/impl/Logger_impl.java
uimaj-examples/src/main/java/example/PersonTitle.java
uimaj-core/src/main/java/org/apache/uima/util/impl/JSR47Logger_impl.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/CDEpropertyPage.java
uimaj-tools/src/main/java/org/apache/uima/tools/pear/merger/PMUimaAgent.java
uimaj-core/src/main/java/org/apache/uima/util/CasToInlineXml.java
uimaj-core/src/main/java/org/apache/uima/resource/ConfigurationManager.java
uimaj-core/src/main/java/org/apache/uima/resource/FileLanguageResourceSpecifier.java
uimaj-core/src/main/java/org/apache/uima/resource/ResourceSpecifierList.java
uimaj-core/src/main/java/org/apache/uima/resource/metadata/impl/OperationalProperties_impl.java
uimaj-ep-pear-packager/src/main/java/org/apache/uima/pear/insd/edit/EditInstallationDescriptorWizard.java
uimaj-core/src/main/java/org/apache/uima/cas/ComponentInfo.java
uimaj-core/src/main/java/org/apache/uima/flow/FinalStep.java
uimaj-tools/src/main/java/org/apache/uima/tools/jcasgen/LogThrowErrorImpl.java
uimaj-core/src/main/java/org/apache/uima/cas_data/impl/ReferenceArrayFSImpl.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/cpm/utils/JavaTimer.java
uimaj-core/src/main/java/org/apache/uima/internal/util/rb_trees/IntRBTNode.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/xml/XMLConfiguration.java
uimaj-tools/src/main/java/org/apache/uima/tools/viewer/CasTreeViewer.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/ui/ValueSection.java
uimaj-core/src/main/java/org/apache/uima/jcas/tcas/Annotation.java
uimaj-tools/src/main/java/org/apache/uima/tools/docanalyzer/PrefsMediator.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/StringList.java
uimaj-core/src/main/java/org/apache/uima/resource/metadata/impl/FeatureDescription_impl.java
uimaj-core/src/main/java/org/apache/uima/util/impl/XMLParser_impl.java
jVinci/src/main/java/org/apache/vinci/transport/PooledVinciClient.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/asb/impl/FlowContainer.java
uimaj-core/src/main/java/org/apache/uima/resource/metadata/ConfigurationGroup.java
uimaj-core/src/main/java/org/apache/uima/util/LoggerPrintStream.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/metadata/FlowConstraints.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/files/PickOverrideKeysAndParmName.java
uimaj-core/src/main/java/org/apache/uima/cas/Feature.java
uimaj-core/src/main/java/org/apache/uima/internal/util/UIMALogFormatter.java
uimaj-core/src/main/java/org/apache/uima/collection/CasConsumer_ImplBase.java
uimaj-core/src/main/java/org/apache/uima/internal/util/TextAnalysisEnginePool.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/base_cpm/container/deployer/CPEDeployer.java
uimaj-adapter-soap/src/main/java/org/apache/uima/adapter/soap/XmlSerializer.java
uimaj-examples/src/main/java/org/apache/uima/examples/cpe/PersonTitleDBWriterCasConsumer.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/IntArrayFSImpl.java
uimaj-core/src/main/java/org/apache/uima/util/impl/ProcessTrace_impl.java
uimaj-adapter-soap/src/main/java/org/apache/uima/adapter/soap/XmlSerializerFactory.java
uimaj-ep-pear-packager/src/main/java/org/apache/uima/pear/actions/AddUimaNatureAction.java
uimaj-core/src/main/java/org/apache/uima/resource/metadata/impl/AllowedValue_impl.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/CasIterator.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/NonEmptyStringList.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FSIntConstraintImpl.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/cpm/engine/ArtifactProducer.java
jVinci/src/main/java/org/apache/vinci/transport/KeyValuePair.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/cpm/vinci/cas_data/VinciPrimitiveValue.java
uimaj-core/src/main/java/org/apache/uima/collection/metadata/CpeResourceManagerConfiguration.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/TypeSystemUtils.java
uimaj-tools/src/main/java/org/apache/uima/tools/stylemap/ColorRenderer.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/metadata/CpeDefaultValues.java
uimaj-core/src/main/java/org/apache/uima/collection/CasConsumer.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/impl/PrimitiveAnalysisEngine_impl.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/EmbeddedConstraint.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/xml/ColorManager.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/TAEConfiguratorPlugin.java
uimaj-ep-pear-packager/src/main/java/org/apache/uima/pear/generate/PearExportOperation.java
uimaj-core/src/main/java/org/apache/uima/cas_data/PrimitiveArrayFS.java
uimaj-tools/src/main/java/org/apache/uima/tools/jcasgen/Waiter.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/ui/AbstractImportablePartSection.java
uimaj-ep-pear-packager/src/main/java/org/apache/uima/pear/nature/ProjectCustomizer.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/ui/AbstractSection.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/impl/AnalysisEngineManagementImpl.java
uimaj-adapter-vinci/src/main/java/org/apache/uima/adapter/vinci/util/UimaSaxVinciFrameBuilder.java
uimaj-core/src/main/java/org/apache/uima/collection/metadata/CpeDescription.java
jVinci/src/main/java/org/apache/vinci/transport/document/XTalkToSAX.java
uimaj-adapter-vinci/src/main/java/org/apache/uima/adapter/vinci/util/Shutdown.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/metadata/SofaMapping.java
uimaj-core/src/main/java/org/apache/uima/collection/impl/CollectionReaderDescription_impl.java
uimaj-core/src/main/java/org/apache/uima/analysis_component/JCasAnnotator_ImplBase.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/metadata/cpe/NameValuePairImpl.java
uimaj-core/src/main/java/org/apache/uima/util/XMLInputSource.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/service/impl/AnalysisEngineServiceAdapter.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/LowLevelIterator.java
uimaj-core/src/main/java/org/apache/uima/cas/CommonArrayFS.java
uimaj-core/src/main/java/org/apache/uima/collection/CollectionProcessingEngine.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/ui/CapabilityPage.java
uimaj-tools/src/main/java/org/apache/uima/tools/util/htmlview/AnnotationViewGenerator.java
uimaj-core/src/main/java/org/apache/uima/analysis_component/Annotator_ImplBase.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/XCASSerializer.java
uimaj-tools/src/main/java/org/apache/uima/tools/stylemap/TableSelectionListener.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/NonEmptyIntegerList.java
uimaj-core/src/main/java/org/apache/uima/resource/impl/ResourceCreationSpecifier_impl.java
uimaj-core/src/main/java/org/apache/uima/flow/FlowControllerContext.java
uimaj-core/src/main/java/org/apache/uima/cas/SofaFS.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/MultiPageEditorContributor.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/FloatList.java
uimaj-tools/src/main/java/org/apache/uima/tools/cvd/MultiMarkup.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/impl/UimacppAnalysisEngineImpl.java
uimaj-ep-pear-packager/src/main/java/org/apache/uima/pear/generate/GeneratePearWizard.java
uimaj-core/src/main/java/org/apache/uima/resource/impl/DataResource_impl.java
uimaj-examples/src/main/java/org/apache/uima/tutorial/ex6/StringMapResource.java
uimaj-core/src/main/java/org/apache/uima/util/InvalidXMLException.java
uimaj-core/src/main/java/org/apache/uima/cas/FeatureStructure.java
uimaj-core/src/main/java/org/apache/uima/internal/util/rb_trees/IntRedBlackTree.java
uimaj-core/src/main/java/org/apache/uima/collection/base_cpm/CasDataInitializer_ImplBase.java
jVinci/src/main/java/org/apache/vinci/transport/XTalkTransporter.java
uimaj-core/src/main/java/org/apache/uima/impl/AnalysisEngineFactory_impl.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/LongArray.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/service/impl/ServiceDataCargo.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/ui/dialogs/AddExternalResourceDependencyDialog.java
uimaj-examples/src/main/java/org/apache/uima/examples/cpe/AnnotationPrinter.java
jVinci/src/main/java/org/apache/vinci/transport/BaseServerRunnable.java
uimaj-core/src/main/java/org/apache/uima/collection/metadata/CpeComponentDescriptor.java
uimaj-core/src/main/java/org/apache/uima/uimacpp/UimacppException.java
uimaj-tools/src/main/java/org/apache/uima/tools/pear/merger/PMController.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/Form2Panel.java
uimaj-tools/src/main/java/org/apache/uima/tools/cpm/ElapsedTimeFormatter.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/metadata/cpe/CasProcessorMaxRestartsImpl.java
uimaj-tools/src/main/java/org/apache/uima/tools/AnnotationViewerMain.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/cpm/engine/CPMThreadGroup.java
uimaj-core/src/main/java/org/apache/uima/collection/metadata/CasProcessorRuntimeEnvParam.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/cpm/container/CPEContext.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/metadata/FlowControllerDeclaration.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/StringHeap.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/AnnotationImplException.java
uimaj-core/src/main/java/org/apache/uima/cas_data/impl/CasDataUtils.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/annotator/AnnotatorConfigurationException.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/metadata/cpe/CpeLocalCasProcessorImpl.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/wizards/TypeSystemNewWizardPage.java
uimaj-core/src/main/java/org/apache/uima/cas/FeaturePath.java
jVinci/src/main/java/org/apache/vinci/transport/vns/service/ServiceTree.java
uimaj-core/src/main/java/org/apache/uima/resource/Parameter.java
jVinci/src/main/java/org/apache/vinci/debug/FatalException.java
uimaj-core/src/main/java/org/apache/uima/collection/metadata/OutputQueue.java
uimaj-core/src/main/java/org/apache/uima/collection/metadata/CasProcessorErrorHandling.java
uimaj-tools/src/main/java/org/apache/uima/tools/stylemap/TableDropAdapter.java
uimaj-core/src/main/java/org/apache/uima/util/impl/ProcessTraceEvent_impl.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/metadata/cpe/CpeDescriptorFactory.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/ui/FlowSection.java
uimaj-core/src/main/java/org/apache/uima/UIMA_IllegalStateException.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FSIndexComparatorImpl.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/CommonArrayFSImpl.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/ui/TypePage.java
uimaj-examples/src/main/java/org/apache/uima/examples/cpe/XCasWriterCasConsumer.java
uimaj-tools/src/main/java/org/apache/uima/tools/jcasgen/IProgressMonitor.java
uimaj-core/src/main/java/org/apache/uima/pear/util/XMLUtil.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/ui/GeneralSection.java
uimaj-core/src/main/java/org/apache/uima/collection/CasInitializer.java
uimaj-core/src/main/java/org/apache/uima/collection/CollectionReader.java
uimaj-core/src/main/java/org/apache/uima/internal/util/BrowserUtil.java
uimaj-core/src/main/java/org/apache/uima/util/impl/SaxDeserializer_impl.java
uimaj-core/src/main/java/org/apache/uima/collection/base_cpm/CasDataCollectionReader.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/metadata/cpe/CpeSofaMappingsImpl.java
uimaj-core/src/main/java/org/apache/uima/resource/ResourceAccessException.java
uimaj-core/src/main/java/org/apache/uima/cas/CAS.java
uimaj-core/src/main/java/org/apache/uima/collection/metadata/CpeCollectionReaderCasInitializer.java
uimaj-core/src/main/java/org/apache/uima/collection/metadata/CpeLocalCasProcessor.java
uimaj-core/src/main/java/org/apache/uima/flow/JCasFlow_ImplBase.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/wizards/TAEConfiguratorNewWizardPage.java
uimaj-core/src/main/java/org/apache/uima/util/UimaTimer.java
uimaj-core/src/main/java/org/apache/uima/resource/ResourceServiceStub.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/cpm/container/deployer/vns/VNSQuery.java
uimaj-adapter-soap/src/main/java/org/apache/uima/adapter/soap/axis11/BinaryDeserializer_Axis11.java
uimaj-core/src/main/java/org/apache/uima/pear/tools/InstallationDescriptor.java
uimaj-core/src/main/java/org/apache/uima/search/impl/IndexBuildItem_impl.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/cpm/utils/CpmLocalizedMessage.java
uimaj-tools/src/main/java/org/apache/uima/tools/cvd/AnnotationExtent.java
uimaj-core/src/main/java/org/apache/uima/util/NameClassPair.java
uimaj-core/src/main/java/org/apache/uima/collection/base_cpm/RecoverableCollectionReader.java
uimaj-core/src/main/java/org/apache/uima/internal/util/rb_trees/RBTKeyValuePair.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/cpm/vinci/DATACasUtils.java
uimaj-core/src/main/java/org/apache/uima/cas/text/AnnotationTreeNode.java
uimaj-core/src/main/java/org/apache/uima/util/ProcessTraceEvent.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/asb/impl/FlowControllerContainer.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/ByteHeap.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/ui/dialogs/AddAllowedValueDialog.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/ui/dialogs/SearchThread.java
uimaj-core/src/main/java/org/apache/uima/resource/metadata/MetaDataObject.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/DisjunctiveConstraint.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/XCASDeserializer.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/annotator/AnnotatorContextException.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/metadata/impl/AnalysisEngineMetaData_impl.java
uimaj-adapter-vinci/src/main/java/org/apache/uima/adapter/vinci/util/Constants.java
uimaj-core/src/main/java/org/apache/uima/resource/metadata/impl/TypePriorities_impl.java
uimaj-core/src/main/java/org/apache/uima/resource/metadata/impl/ResourceManagerConfiguration_impl.java
uimaj-examples/src/main/java/org/apache/uima/tutorial/UimaMeeting.java
jVinci/src/main/java/org/apache/vinci/transport/document/AFrame.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/XmiSerializationSharedData.java
uimaj-core/src/main/java/org/apache/uima/analysis_component/CasAnnotator_ImplBase.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/TypeSystem2Xml.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/ui/AggregatePage.java
uimaj-core/src/main/java/org/apache/uima/internal/util/SerializationUtils.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FeatureStructureImplC.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/ui/dialogs/CommonInputDialog.java
uimaj-core/src/main/java/org/apache/uima/internal/util/CharacterUtils.java
uimaj-core/src/main/java/org/apache/uima/resource/metadata/impl/XmlizationInfo.java
uimaj-ep-jcasgen/src/main/java/org/apache/uima/jcas/jcasgenp/MergerImpl.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FSClassRegistry.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/wizards/CasConsumerNewWizardPage.java
uimaj-core/src/main/java/org/apache/uima/flow/impl/FixedFlowController.java
jVinci/src/main/java/org/apache/vinci/transport/VinciServableAdapter.java
jVinci/src/main/java/org/apache/vinci/transport/util/StreamMaterializer.java
uimaj-tools/src/main/java/org/apache/uima/tools/cvd/tsview/MainFrame.java
uimaj-core/src/main/java/org/apache/uima/internal/util/SystemEnvReader.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/Messages.java
uimaj-core/src/main/java/org/apache/uima/resource/CasManager.java
jVinci/src/main/java/org/apache/vinci/transport/vns/service/ServiceStack.java
uimaj-core/src/main/java/org/apache/uima/util/SaxDeserializer.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/ui/dialogs/AddCapabilityTypeDialog.java
texts:Reformat all source code to match adopted conventions
We should at least do the automated Eclipse formatting in the relatively near future.
issueID:UIMA-480
type:Bug
changed files:uimaj-tools/src/main/java/org/apache/uima/tools/docanalyzer/PrefsMediator.java
uimaj-tools/src/main/java/org/apache/uima/tools/docanalyzer/PrefsMediator.java
texts:DocumentAnalyzer interactive mode only eligible if an input data directory is specified
The DocumentAnalyzer interactive mode is only eligible if an input data directory is specified. When I enter my own text why do I need to specify an input directory?
issueID:UIMA-4800
type:Bug
changed files:
texts:CR error causes NPE in DUCC JD
Can be reproduced by running a 1.job with a mis-spelled CR override parameter, e.g. jabfile=...
issueID:UIMA-4801
type:Bug
changed files:
texts:DUCC installation process should automatically generate keystore w/o prompting
Simplify DUCC install process without loss of functionality.
issueID:UIMA-4802
type:Bug
changed files:
texts:DUCC Web Server (WS) Terminate button confirmation for Managed Reservation incorrectly displays the word "service"
Terminate button confirmation should say "reservation" not "service" for a Managed Reservation.
issueID:UIMA-4804
type:Bug
changed files:
texts:Drop unused DB tables until redesigned
Will be redesigned shortly for a few cmd-line queries and for future use by ducc-mon
issueID:UIMA-4805
type:Bug
changed files:
texts:Custom DUCC pingers cannot set the environment
External pingers should be given the same environment settings as the service
issueID:UIMA-4806
type:Bug
changed files:
texts:UIMA-AS: start broker in the foreground
The startBoker script in UIMA_HOME/bin launches broker in the background which is inconsistent with previous versions. Its preferred to start the broker in the foreground so that one can stop it with CTRL-C.
issueID:UIMA-4807
type:Bug
changed files:
texts:UIMA-AS: remove duplicate jar from eclipse-update-site/features
There are duplicated jars in features dir in eclipse-update-site. org.apache.uima.as.deployeditor_X.X.X.jar and org.apache.uima.deployeditor_X.X.X.jar. Both jars have the same content. Keep o.a.u.as.deployeditor.. and remove the other.
issueID:UIMA-4808
type:Bug
changed files:
texts:UIMA-DUCC: assembly declares dependency on old htttpcllient
Ducc's assembly script declares dependency on an old commons-httpclient.jar. This code is obsolete now and replaced by apache http client.I think its a cary-over from the past. Remove this dependency.
issueID:UIMA-4809
type:New Feature
changed files:
texts:UIMA DUCC: Agent should set cgroups swappiness
Cgroups default swappiness is 0 which means no swapping is allowed. Consequence of this is that the Unix OOM killer kills process when it uses more memory than available, The agent should read swappiness value from ducc.properties and write to a file memory.swappiness. Use 10 for default value.
issueID:UIMA-481
type:Improvement
changed files:
texts:Cas Editor: Error reporting for cas processor
The Cas Editor can launch an annotator or a cas consumer,but it does not shows an error message if something goes wrong.
issueID:UIMA-4812
type:Bug
changed files:
texts:UIMA-AS: fix  CasManager.defineCasPool() was called twice by the same Analysis Engine
The UIMA-AS initializes AE instances sequentially each in a separate thread. It appears that AE initialization proceeds even if a previous thread had an error. Code in question is in UimaAsThreadFactory.run().The scenario  12:06:33.379 - 22: org.apache.uima.aae.UimaAsThreadFactory$1.UimaAsThreadFactory.run(): INFO: Controller: Meeting Detector TAE Initializing AE instance on Thread Id: 2212:06:33.392 - 22: org.apache.uima.analysis_engine.impl.AggregateAnalysisEngine_impl.initialize: CONFIG: AnalysisEngine &#91;Meeting Detector TAE&#93; initialization begin12:06:33.469 - 22: org.apache.uima.analysis_engine.asb.impl.ASB_impl.initialize: CONFIG: ASB initialization begin12:06:33.470 - 22: org.apache.uima.analysis_engine.asb.impl.ASB_impl.initialize: CONFIG: ASB initialization successful12:06:33.472 - 22: org.apache.uima.resource.impl.ConfigurationManager_impl.declareParameters: CONFIG: Parameter "Patterns" in context /RoomNumber/ = "[\b&#91;0-4&#93;\d-&#91;0-2&#93;\d\d\b, \b&#91;G1-4&#93;&#91;NS&#93;-&#91;A-Z&#93;\d\d\b, \bJ[1\2]-&#91;A-Z&#93;\d\d\b]"12:06:33.472 - 22: org.apache.uima.resource.impl.ConfigurationManager_impl.declareParameters: CONFIG: Parameter "Locations" in context /RoomNumber/ = "[Watson - Yorktown, Watson - Hawthorne I, Watson - Haw\thorne II]"12:06:33.473 - 22: org.apache.uima.analysis_engine.impl.PrimitiveAnalysisEngine_impl.initialize: CONFIG: AnalysisEngine &#91;Room Number Annotator&#93; initialization begin12:06:33.478 - 22: org.apache.uima.analysis_engine.impl.PrimitiveAnalysisEngine_impl.initialize: CONFIG: AnalysisEngine &#91;Room Number Annotator&#93; initialization successful12:06:33.482 - 22: org.apache.uima.analysis_engine.impl.PrimitiveAnalysisEngine_impl.initialize: CONFIG: AnalysisEngine &#91;TutorialDateTime Annotator&#93; initialization begin12:06:33.490 - 22: org.apache.uima.analysis_engine.impl.PrimitiveAnalysisEngine_impl.initialize: CONFIG: AnalysisEngine &#91;TutorialDateTime Annotator&#93; initialization successful12:06:33.490 - 22: org.apache.uima.resource.impl.ConfigurationManager_impl.declareParameters: CONFIG: Parameter "WindowSize" in context /Meeting/ = "200"12:06:33.491 - 22: org.apache.uima.analysis_engine.impl.PrimitiveAnalysisEngine_impl.initialize: CONFIG: AnalysisEngine &#91;Meeting Annotator&#93; initialization begin12:06:33.492 - 22: org.apache.uima.analysis_engine.impl.PrimitiveAnalysisEngine_impl.initialize: CONFIG: AnalysisEngine &#91;Meeting Annotator&#93; initialization successful12:06:33.493 - 22: org.apache.uima.resource.impl.ConfigurationManager_impl.declareParameters: CONFIG: Parameter "ActionAfterCasMultiplier" in context /_FlowController/ = "dropIfNewCasProduced"12:06:33.497 - 22: org.apache.uima.analysis_engine.impl.AggregateAnalysisEngine_impl.initialize: CONFIG: AnalysisEngine &#91;Meeting Detector TAE&#93; initialization successful12:06:33.498 - 22: org.apache.uima.aae.controller.PrimitiveAnalysisEngineController_impl.initialize: CONFIG: - Initializing Async Primitive Service. Number of Worker Threads: 112:06:33.498 - 22: org.apache.uima.aae.AsynchAECasManager_impl.initialize: CONFIG: Primary CAS Pool Size: 1 Context: PrimitiveAEService Initial Cas Heap Size:500000 cells. Supports Incoming Service Request\s.12:06:33.717 - 22: org.apache.uima.aae.controller.PrimitiveAnalysisEngineController_impl.postInitialize: INFO: ********* Initialized the Controller. Meeting Detector TAE Ready To Process. ********12:06:33.719 - 1: org.apache.uima.adapter.jms.activemq.SpringContainerDeployer.doStartListeners: INFO: Controller: Meeting Detector TAE Starting Listener on Endpoint: queue://MeetingDetectorTaeQueue Select\or: Command=2000 OR Command=2002 Broker: ssl://XXXXXX:61617?transport.needClientAuth=false12:06:34.416 - 1: org.apache.uima.adapter.jms.activemq.SpringContainerDeployer.doStartListeners: INFO: Controller: Meeting Detector TAE Starting Listener on Endpoint: queue://MeetingDetectorTaeQueue Select\or: Command=2001 Broker: ssl://XXXXXX:61617?transport.needClientAuth=false12:07:04.422 - 22: org.apache.uima.adapter.jms.activemq.UimaDefaultMessageListenerContainer.handleListenerSetupFailure: WARNING: Uima AS Service:Meeting Detector TAE Listener Unable To Connect To Broker: s\sl://XXXXX:61617?transport.needClientAuth=false Retrying ...12:07:04.424 - 23: org.apache.uima.adapter.jms.activemq.UimaDefaultMessageListenerContainer.handleListenerSetupFailure: WARNING: Uima AS Service:Meeting Detector TAE Listener Unable To Connect To Broker: s\sl://XXXXXX:61617?transport.needClientAuth=false Retrying ...12:07:04.425 - 22: org.apache.uima.aae.UimaAsThreadFactory$1.UimaAsThreadFactory.run(): INFO: Controller: Meeting Detector TAE --------------- Process Thread ID:22 EXITING12:07:04.426 - 25: org.apache.uima.aae.UimaAsThreadFactory$1.UimaAsThreadFactory.run(): INFO: Controller: Meeting Detector TAE Initializing AE instance on Thread Id: 2512:07:04.426 - 22: org.apache.uima.analysis_engine.impl.PrimitiveAnalysisEngine_impl.initialize: CONFIG: AnalysisEngine &#91;Room Number Annotator&#93; destroyed.12:07:04.426 - 22: org.apache.uima.analysis_engine.impl.PrimitiveAnalysisEngine_impl.initialize: CONFIG: AnalysisEngine &#91;TutorialDateTime Annotator&#93; destroyed.12:07:04.427 - 22: org.apache.uima.analysis_engine.impl.PrimitiveAnalysisEngine_impl.initialize: CONFIG: AnalysisEngine &#91;Meeting Annotator&#93; destroyed.12:07:04.427 - 22: org.apache.uima.analysis_engine.impl.AggregateAnalysisEngine_impl.destroy: CONFIG: AnalysisEngine &#91;Meeting Detector TAE&#93; destroyed.12:07:04.427 - 22: org.apache.uima.aae.UimaAsThreadFactory$1.UimaAsThreadFactory.run(): INFO: Controller: Meeting Detector TAE --------------- AE destroy() Method Call Returned ID:2212:07:04.473 - 25: org.apache.uima.analysis_engine.impl.AggregateAnalysisEngine_impl.initialize: CONFIG: AnalysisEngine &#91;Meeting Detector TAE&#93; initialization begin12:07:04.515 - 25: org.apache.uima.analysis_engine.asb.impl.ASB_impl.initialize: CONFIG: ASB initialization begin12:07:04.515 - 25: org.apache.uima.analysis_engine.asb.impl.ASB_impl.initialize: CONFIG: ASB initialization successful12:07:04.516 - 25: org.apache.uima.resource.impl.ConfigurationManager_impl.declareParameters: CONFIG: Parameter "Patterns" in context /RoomNumber/ = "[\b&#91;0-4&#93;\d-&#91;0-2&#93;\d\d\b, \b&#91;G1-4&#93;&#91;NS&#93;-&#91;A-Z&#93;\d\d\b, \bJ[1\2]-&#91;A-Z&#93;\d\d\b]"12:07:04.516 - 25: org.apache.uima.resource.impl.ConfigurationManager_impl.declareParameters: CONFIG: Parameter "Locations" in context /RoomNumber/ = "[Watson - Yorktown, Watson - Hawthorne I, Watson - Haw\thorne II]"12:07:04.523 - 25: org.apache.uima.analysis_engine.impl.PrimitiveAnalysisEngine_impl.initialize: CONFIG: AnalysisEngine &#91;Room Number Annotator&#93; initialization begin12:07:04.525 - 25: org.apache.uima.analysis_engine.impl.PrimitiveAnalysisEngine_impl.initialize: CONFIG: AnalysisEngine &#91;Room Number Annotator&#93; initialization successful12:07:04.528 - 25: org.apache.uima.analysis_engine.impl.PrimitiveAnalysisEngine_impl.initialize: CONFIG: AnalysisEngine &#91;TutorialDateTime Annotator&#93; initialization begin12:07:04.528 - 25: org.apache.uima.analysis_engine.impl.PrimitiveAnalysisEngine_impl.initialize: CONFIG: AnalysisEngine &#91;TutorialDateTime Annotator&#93; initialization successful12:07:04.529 - 25: org.apache.uima.resource.impl.ConfigurationManager_impl.declareParameters: CONFIG: Parameter "WindowSize" in context /Meeting/ = "200"12:07:04.536 - 25: org.apache.uima.analysis_engine.impl.PrimitiveAnalysisEngine_impl.initialize: CONFIG: AnalysisEngine &#91;Meeting Annotator&#93; initialization begin12:07:04.537 - 25: org.apache.uima.analysis_engine.impl.PrimitiveAnalysisEngine_impl.initialize: CONFIG: AnalysisEngine &#91;Meeting Annotator&#93; initialization successful12:07:04.537 - 25: org.apache.uima.resource.impl.ConfigurationManager_impl.declareParameters: CONFIG: Parameter "ActionAfterCasMultiplier" in context /_FlowController/ = "dropIfNewCasProduced"12:07:04.538 - 25: org.apache.uima.analysis_engine.impl.AggregateAnalysisEngine_impl.initialize: CONFIG: AnalysisEngine &#91;Meeting Detector TAE&#93; initialization successful12:07:04.539 - 25: org.apache.uima.aae.controller.PrimitiveAnalysisEngineController_impl.initialize: CONFIG: - Initializing Async Primitive Service. Number of Worker Threads: 112:07:04.546 - 25: org.apache.uima.aae.AsynchAECasManager_impl.initialize: CONFIG: Primary CAS Pool Size: 1 Context: PrimitiveAEService Initial Cas Heap Size:500000 cells. Supports Incoming Service Request\s.12:07:04.547 - 25: org.apache.uima.aae.controller.PrimitiveAnalysisEngineController_impl.postInitialize: WARNING: Service: Meeting Detector TAE Runtime Exception12:07:04.547 - 25: org.apache.uima.aae.controller.PrimitiveAnalysisEngineController_impl.postInitialize: WARNING:org.apache.uima.UIMARuntimeException: The method CasManager.defineCasPool() was called twice by the same Analysis Engine (PrimitiveAEService).        at org.apache.uima.resource.impl.CasManager_impl.defineCasPool(CasManager_impl.java:244)        at org.apache.uima.resource.impl.CasManager_impl.defineCasPool(CasManager_impl.java:214)        at org.apache.uima.aae.EECasManager_impl.defineCasPool(EECasManager_impl.java:63)        at org.apache.uima.aae.AsynchAECasManager_impl.initialize(AsynchAECasManager_impl.java:101)        at org.apache.uima.aae.AsynchAECasManager_impl.initialize(AsynchAECasManager_impl.java:83)        at org.apache.uima.aae.AsynchAECasManager_impl.initialize(AsynchAECasManager_impl.java:79)        at org.apache.uima.aae.controller.PrimitiveAnalysisEngineController_impl.postInitialize(PrimitiveAnalysisEngineController_impl.java:312)        at org.apache.uima.aae.controller.PrimitiveAnalysisEngineController_impl.initializeAnalysisEngine(PrimitiveAnalysisEngineController_impl.java:220)        at org.apache.uima.aae.UimaAsThreadFactory$1.run(UimaAsThreadFactory.java:119)        at java.lang.Thread.run(Thread.java:780)12:07:04.561 - 25: org.apache.uima.aae.controller.PrimitiveAnalysisEngineController_impl.postInitialize: WARNING: Service: Meeting Detector TAE Runtime Exception12:07:04.562 - 25: org.apache.uima.aae.controller.PrimitiveAnalysisEngineController_impl.postInitialize: WARNING:org.apache.uima.aae.error.AsynchAEException: org.apache.uima.UIMARuntimeException: The method CasManager.defineCasPool() was called twice by the same Analysis Engine (PrimitiveAEService).        at org.apache.uima.aae.controller.PrimitiveAnalysisEngineController_impl.postInitialize(PrimitiveAnalysisEngineController_impl.java:342)        at org.apache.uima.aae.controller.PrimitiveAnalysisEngineController_impl.initializeAnalysisEngine(PrimitiveAnalysisEngineController_impl.java:220)        at org.apache.uima.aae.UimaAsThreadFactory$1.run(UimaAsThreadFactory.java:119)        at java.lang.Thread.run(Thread.java:780)Caused by: org.apache.uima.UIMARuntimeException: The method CasManager.defineCasPool() was called twice by the same Analysis Engine (PrimitiveAEService).        at org.apache.uima.resource.impl.CasManager_impl.defineCasPool(CasManager_impl.java:244)        at org.apache.uima.resource.impl.CasManager_impl.defineCasPool(CasManager_impl.java:214)        at org.apache.uima.aae.EECasManager_impl.defineCasPool(EECasManager_impl.java:63)        at org.apache.uima.aae.AsynchAECasManager_impl.initialize(AsynchAECasManager_impl.java:101)        at org.apache.uima.aae.AsynchAECasManager_impl.initialize(AsynchAECasManager_impl.java:83)        at org.apache.uima.aae.AsynchAECasManager_impl.initialize(AsynchAECasManager_impl.java:79)        at org.apache.uima.aae.controller.PrimitiveAnalysisEngineController_impl.postInitialize(PrimitiveAnalysisEngineController_impl.java:312)        ... 3 moreThe UimaAsThreadFactory should check the status of the controller to determine if initialization of subsequent thread should proceed.
issueID:UIMA-4813
type:Bug
changed files:
texts:UIMA-AS: upgrade ActiveMQ to 5.13.1
Apache ActiveMQ could allow a remote attacker to execute arbitrary code on the system, caused by the failure to restrict the classes that can be serialized in the broker. An attacker could exploit this vulnerability using a specially crafted serialized Java Message Service (JMS) ObjectMessage object to execute arbitrary code on the system.Fix for this is in 5.13.release. Upgrade UIMA-AS to the latest version (5.13.1)
issueID:UIMA-4814
type:Improvement
changed files:
texts:DUCC Orchestrator (OR) Jenkins build failures
Attempt to make OR Junit tests more reliable under Jenkins.
issueID:UIMA-4815
type:Improvement
changed files:
texts:DUCC Web Server (WS) System -> Classes and Machines page improvements
Update System -> Classes page:1. Drop these columns: Rel. Cap, Abs. Cap, Init Cap, Expand, Use Prediction, Fudge, Max Alloc.2. Rename "Debug Class" to "Non-preemptable Class"3. Move Nodepool after Name
issueID:UIMA-4816
type:Bug
changed files:
texts:Ruta: wizard shortcuts not available for working sets
Ruta: wizard shortcuts not available for working sets
issueID:UIMA-4817
type:Improvement
changed files:
texts:Ruta: documentation misses annotation variables
Ruta: documentation misses annotation variables, e.g., Section 2.5.2. Variables
issueID:UIMA-4818
type:Bug
changed files:
texts:The UIMA-AS build generates Maven warnings

issueID:UIMA-4819
type:Improvement
changed files:
texts:Ruta: documentation of split action contains wrong title
Ruta: documentation of slpit action contains wrong title. Also update the hover information in the workbench
issueID:UIMA-482
type:Bug
changed files:
texts:Cas Editor: Show Annotations menu does not remember selction across editors

issueID:UIMA-4820
type:Bug
changed files:uimaj-core/src/main/java/org/apache/uima/jcas/cas/Sofa.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FSIndexRepositoryImpl.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/TypeImpl_array.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/NonEmptyIntegerList.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/TOP.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/Id2FS.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FeatureImpl.java
uimaj-core/src/main/java/org/apache/uima/util/CasCopier.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/CommonSerDesSequential.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/TypeSystemImpl.java
uimaj-core/src/main/java/org/apache/uima/jcas/tcas/Annotation.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/LinearTypeOrderBuilderImpl.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/BinaryCasSerDes.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/BinaryCasSerDes4.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FsIndex_singletype.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/BinaryCasSerDes6.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/NonEmptyFloatList.java
uimaj-core/src/main/java/org/apache/uima/internal/util/Misc.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/CASImpl.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/TypeImpl.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/CommonList.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/NonEmptyStringList.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FeatureStructureImplC.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FSClassRegistry.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/AnnotationBase.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/NonEmptyFSList.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/CASSerializer.java
texts:uv3 Supporting Delta deserialization requires preserving simulated heap addresses
UIMA supports various formats of delta deserialization, which is when a serialization is done (to, for example, a remote service), and then a delta serialization returns just the changes back to the original CAS.  There are two approaches used to get the set of FSs to serialize.   One way, used for plain binary and form4 compressed, scans the "heap" sequentially, and sends all those FSs, including potentially FSs that are not "reachable". The other way is to use the indexes plus following reference chains to locate all "reachable" FSs, and only send those.  This is used for XCAS, XMI, JSON, and Form6 compressed.In V3, the plain and form4 serialization need to preserve simulated heap "addresses" (per CAS) for the FSs sent in order to enable future delta deserializations to have the proper "heap" addresses; it may not recalcuate this from the CAS FS contents, because intervening GCs may have garbage collected some unreachable FSs..  Furthermore, plain and form4 non-delta deserialization where a delta serialization is to follow, must likewise preserve these simulated heap addresses (per CAS), for all deserialized FSs.This preservation is needed to insure that the simulated "addresses" of FSs are constant, even if unreachable FSs are reclaimed.  In practice, this means that various maps involving simulated heap "addresses" need to be retained and not recreated.Because they are retained, their storage needs to be released when no longer needed:  at CAS Reset time, after a services delta deserializer has completed deserializing (potentially multiple) delta CASes, or when a new non-delta serialization is started (this will re-create this storage).  For services use, we may add a new API to release this storage; the service would call it after all delta deserializations for this CAS have been received (this use case is supporting having multiple remotes working on a common CAS and having their delta results merged back into the original CAS).
issueID:UIMA-4821
type:Bug
changed files:
texts:UIMA-DUCC: change dependency on UIMA-AS to ver.2.6.0
Revert back to UIMA-AS ver.2.6.0. Current ducc is broken due to the new UIMA-AS 2.8.1 SNAPSHOT which includes AMQ 5.13.1. This version of AMQ  requires white listing of packages in ObjectMessages. Getting the following:04 Mar 2016 09:20:57,085  WARN WS.EndpointMessageListener - N/A start Execution of JMS message listener failed. Caused by: [org.apache.camel.RuntimeCamelException - Failed to extract body due to: javax.jms.JMSException: Failed to build body from content. Serializable class not available to broker. Reason: java.lang.ClassNotFoundException: Forbidden class org.apache.uima.ducc.transport.event.NodeMetricsUpdateDuccEvent!
issueID:UIMA-4822
type:Bug
changed files:
texts:Ruta: feature expressions on label expressions
Ruta: feature expressions on label expressionsa:W W{-> var = a.begin};
issueID:UIMA-4823
type:Bug
changed files:uimaj-core/src/main/java/org/apache/uima/jcas/impl/JCasImpl.java
texts:Missing error reports for mismatch between JCas and UIMA Type system
There is a reversed boolean test in the JCasImpl method getRequiredFeatureDE, which results in never reporting feature-not-found in UIMA type system, which initializing the JCas classes.Fixing this causes lots of test cases to start failing, due to now exposed discrepancies between the generated JCas classes and the type system used for the test cases (which is missing some of the JCas-defined features).Change the reporting mechanism to allow for reporting that doesn't throw an exception (where an exception would later be thrown if a feature was accessed which isn't in the type system, anyway).  This allows existing user code which might be sharing a JCas class with "extra" defined features which are never accessed, to report this, but run anyway (if those undefined-in-the-type-system features are never attempted to be used).
issueID:UIMA-4824
type:Sub-task
changed files:uimaj-core/src/main/java/org/apache/uima/jcas/cas/Sofa.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FSIndexRepositoryImpl.java
uimaj-core/src/main/java/org/apache/uima/cas/CASRuntimeException.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/TypeImpl_array.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/NonEmptyIntegerList.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/TOP.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/Id2FS.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FeatureImpl.java
uimaj-core/src/main/java/org/apache/uima/util/CasCopier.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/TypeSystemImpl.java
uimaj-core/src/main/java/org/apache/uima/jcas/tcas/Annotation.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/LinearTypeOrderBuilderImpl.java
uimaj-core/src/main/java/org/apache/uima/jcas/JCasRegistry.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FsIndex_singletype.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/NonEmptyFloatList.java
uimaj-core/src/main/java/org/apache/uima/internal/util/Misc.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/CASImpl.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/TypeImpl.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/CommonList.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/NonEmptyStringList.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FSClassRegistry.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/AnnotationBase.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/NonEmptyFSList.java
texts:uv3 change storage model to always use int and ref arrays
The first design for uv3x supported two different styles of storing data.  One style, done for cases where there was no corresponding JCas definition for a feature, was to store the feature value either in _intData or _refData arrays.  The other style was to have a field in the JCas definition for the item; for example, a string value would be stored in a locally declared String field.The JCas API would directly get/set the field in this case.  The Plain API would test for a method handle in the Feature Impl, which would be set if there was a JCas field implementation; otherwise it would inherit the general set/get code that used the storage in the _intData or _refData.The method handle approach was very efficient - Eclipse single step showed only one step to get the value, and previous testing showed this approach was even JIT - efficient.However, running the CasCopier test with and without JCas cover classes showed a large slow-down for the JCas case.  Eventually, the evidence seemed to suggest some kind of memory cache loading issue, perhaps the instruction cache, since each getter / setter (with JCas) was running a different bit of code, whereas the non-JCas was running common code.Based on this observation, change the impl to simplify things by always using the array of ints / refs approach to storing data, and change the JCas versions to reference that storage.  As part of this, code the offsets in the JCas class as static final int values computed when the class is loaded.   This imposes a restriction in the use case where, under a single class loader, multiple type systems and one set of JCas classes are being used.  Add appropriate checks to insure that the static final offset values remain correct when multiple type systems are being used.  Also add checks to insure the JCas type hierarchy is consistent with the UIMA Type system hierarchy, and that the range in the JCas getters is consistent with the UIMA type system range for each feature.
issueID:UIMA-4825
type:Sub-task
changed files:uimaj-core/src/main/java/org/apache/uima/cas/impl/BinaryCasSerDes.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/BinaryCasSerDes4.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/BinaryCasSerDes6.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/CASSerializer.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/CommonSerDesSequential.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FeatureStructureImplC.java
texts:uv3 add various accessors that bypass redundant checks
The general getters and setters for features of types can do various kinds of checking.  Figure out which kinds of checks can be eliminated because they are redundant, in particular circumstances, and add additional APIs that bypass those.  Update callers to use these APIs. Insure extra getters/setters start with "_" to avoid get/set name conflicts with JCas getters/setters.
issueID:UIMA-4826
type:Bug
changed files:
texts:UIMA-DUCC: Agent should verify results from ps cmd when detecting rogue processes
When collecting user processes the Agent spawns ps command and gathers results. Under some circumstances the OS ps command may not provide correct results. Sometimes it returns user id instead of user name.User id is a numeric value. Add a check to see if the ps returned a numeric value and if so throw away the results.
issueID:UIMA-4827
type:Bug
changed files:
texts:ducc-mon specification tab omits boolean properties
The specified-by-user properties file for an AP has:--cancel_on_interrupt=but it is missing from the Specification view.Also the log directory has a new ducc.error file that gets a line added for each AP, e.g.2016.03.08 16:23:25 Tue Other
issueID:UIMA-4828
type:Improvement
changed files:
texts:UIMA-AS: fix documentation regarding process timeout
Modify UIMA-AS documentation to clarify process timeout in error handling. State that the process timeout is relevant to external services only. For internal services this setting is ignored although allowed apparently by dd2spring.
issueID:UIMA-4829
type:Bug
changed files:
texts:When a DUCC pinger hangs it is reported as Available
The DUCC pinger can hang and the main evidence is the stale ping statistics.  The SM should mark it as unavailable and indicate that pinger is active but not responding.
issueID:UIMA-483
type:Improvement
changed files:
texts:JCas method like getSofaDataString that doesn&#39;t copy the chars from the StringHeap
I process large documents--the String I pass to JCas.setSofaDataString may be as large 100 MBs (50,000,000 chars).  This is causing the JVM to run out of memory when we have many concurrent AnalysisEngines running.I traced JCas.getSofaDataString(), and it eventually calls StringHeap.getStringForCode(), which does a "new String" from it's private char[] (which does a copy).This would happen for each annotator.  We have five, so now the 100 MBs has become 600 MBs.  Multiply by 10 concurrent AnalysisEngines, and that's 6,000 MBs.Perhaps there could be a variation on getSofaDataString that returns one of the other classes (besides String) that implements CharSequence.  A CharBuffer perhaps, or even a new class the implements the CharSequence interface but is read-only (just four methods).  Or even just return a char[] or char[] and begin/end offset into the StringHeap.If nothing else, perhaps the document text should be treated specially from all the little strings in the StringHeap, and be stored separately, so calls to getSofaDataString() simply return a reference to an existing String object, without copying.I'm open to possibilities, I just need the copying to end.
issueID:UIMA-4830
type:Improvement
changed files:
texts:UIMA-AS: refactor SharedConnection code in the client
Current UIMA-AS client code uses single instance of a semaphore (sharedConnectionSemaphore) to guard access to JMS connections. The client code creates a connection for each broker url a client wants to use. So there may be multiple shared connections (one per broker URL) and one semaphore for all. If one of the shared connections hangs as recently observed when using failover://(...), other threads hang waiting for a semaphore to be released. The hang is caused by silent retry in AMQ connection.start(). This method does not return if broker is not accepting a connection and client uses failover protocol.Modify client code to use different semaphore for each broker url. Failure to connect to one will not effect other connections (threads).Also, add ExceptionListener to Connection object to receive notification on failures.
issueID:UIMA-4831
type:Bug
changed files:
texts:UIMA DUCC: create test utility to test cgcreate
Add utility to facilitate testing of cgcreate. Enable to modes1) concurrent where multiple threads run simultaneously each creating a cgroup2) run sequentially where only one thread at time is creating a cgroup
issueID:UIMA-4832
type:Bug
changed files:
texts:Enable remote JMX access to the DB
This could be controlled by the LOCAL_JMX env var when launching the DB.  The shipped DB allows only local access
issueID:UIMA-4833
type:Bug
changed files:
texts:Ruta: strictImport not transitive for scripts imports
Ruta: strictImport not transitive for scripts imports
issueID:UIMA-4834
type:Bug
changed files:
texts:DUCC Web Server (WS) sort fields with decimal points need to be marked as class="sorttable_numeric"

issueID:UIMA-4835
type:Bug
changed files:
texts:UIMA-DUCC: update ducc.properties and docs to change units on swap threshold
The current ducc.properties states Specify a minimum amount of free swap space available on a node. If an agent detects free swap space dipping below the value defined below, it will find the fattest (in terms of memory) process in its inventory and kill it. The value of the parameter below is expressed in MB. Initially disabled by setting the threshold at 0. Set this to 1GB equiv OVERRIDE by merger Thu Mar 10 11:39:13 2016 old value: 0The agent gets swap info from /proc/meminfo where swap is expressed in KB. The above comment asks a user to define threshold in MB which is wrong. It should be KB instead of MBAlso add units when logging memory and swap to make it explicit
issueID:UIMA-4837
type:Bug
changed files:
texts:When a nodepool is empty a job will just say WaitingForResources
RM log says waiting for preemptions ... should say no resources available and ducc-mon should display it ... perhaps as a hover, or as the Reason, just like waiting for services
issueID:UIMA-4838
type:Bug
changed files:
texts:Jenkins on Windows does not support POSIX

issueID:UIMA-4839
type:Bug
changed files:
texts:Ruta: autocompletion fails with warning and error dialog
Only observed in an installed workbench.java.lang.NullPointerException at org.eclipse.jface.viewers.StyledString.append(StyledString.java:264) at org.eclipse.jface.viewers.StyledString.<init>(StyledString.java:132) at org.eclipse.jface.viewers.StyledString.<init>(StyledString.java:117) at org.eclipse.dltk.ui.text.completion.ScriptCompletionProposal.<init>(ScriptCompletionProposal.java:71) at org.eclipse.dltk.ui.text.completion.ScriptCompletionProposal.<init>(ScriptCompletionProposal.java:42) at org.apache.uima.ruta.ide.ui.text.completion.RutaScriptCompletionProposal.<init>(RutaScriptCompletionProposal.java:32) at org.apache.uima.ruta.ide.ui.text.completion.RutaCompletionProposalCollector.createScriptCompletionProposal(RutaCompletionProposalCollector.java:48) at org.apache.uima.ruta.ide.ui.text.completion.RutaCompletionProposalCollector.createKeywordProposal(RutaCompletionProposalCollector.java:74) at org.eclipse.dltk.ui.text.completion.ScriptCompletionProposalCollector.createScriptCompletionProposal(ScriptCompletionProposalCollector.java:456) at org.eclipse.dltk.ui.text.completion.ScriptCompletionProposalCollector.processUnprocessedProposal(ScriptCompletionProposalCollector.java:343) at org.eclipse.dltk.ui.text.completion.ScriptCompletionProposalCollector.processUnprocessedProposals(ScriptCompletionProposalCollector.java:301) at org.eclipse.dltk.ui.text.completion.ScriptCompletionProposalCollector.getScriptCompletionProposals(ScriptCompletionProposalCollector.java:283) at org.eclipse.dltk.ui.text.completion.ScriptCompletionProposalComputer.computeScriptCompletionProposals(ScriptCompletionProposalComputer.java:193) at org.eclipse.dltk.ui.text.completion.ScriptCompletionProposalComputer.computeCompletionProposals(ScriptCompletionProposalComputer.java:240) at org.eclipse.dltk.ui.text.completion.CompletionProposalComputerDescriptor.computeCompletionProposals(CompletionProposalComputerDescriptor.java:342) at org.eclipse.dltk.ui.text.completion.CompletionProposalCategory.computeCompletionProposals(CompletionProposalCategory.java:276) at org.eclipse.dltk.ui.text.completion.ContentAssistProcessor.collectProposals(ContentAssistProcessor.java:291) at org.eclipse.dltk.ui.text.completion.ContentAssistProcessor.computeCompletionProposals(ContentAssistProcessor.java:247) at org.eclipse.jface.text.contentassist.ContentAssistant$5.run(ContentAssistant.java:1904) at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42) at org.eclipse.jface.text.contentassist.ContentAssistant.computeCompletionProposals(ContentAssistant.java:1902) at org.eclipse.jface.text.contentassist.CompletionProposalPopup.computeProposals(CompletionProposalPopup.java:573) at org.eclipse.jface.text.contentassist.CompletionProposalPopup.access$16(CompletionProposalPopup.java:570) at org.eclipse.jface.text.contentassist.CompletionProposalPopup$2.run(CompletionProposalPopup.java:505) at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:70) at org.eclipse.jface.text.contentassist.CompletionProposalPopup.showProposals(CompletionProposalPopup.java:499) at org.eclipse.jface.text.contentassist.ContentAssistant.showPossibleCompletions(ContentAssistant.java:1720) at org.eclipse.dltk.internal.ui.editor.ScriptEditor$AdaptedSourceViewer.doOperation(ScriptEditor.java:441) at org.eclipse.ui.texteditor.ContentAssistAction$1.run(ContentAssistAction.java:82) at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:70) at org.eclipse.ui.texteditor.ContentAssistAction.run(ContentAssistAction.java:80) at org.eclipse.jface.action.Action.runWithEvent(Action.java:473) at org.eclipse.jface.commands.ActionHandler.execute(ActionHandler.java:122) at org.eclipse.ui.internal.handlers.E4HandlerProxy.execute(E4HandlerProxy.java:90) at sun.reflect.GeneratedMethodAccessor255.invoke(Unknown Source) at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source) at java.lang.reflect.Method.invoke(Unknown Source) at org.eclipse.e4.core.internal.di.MethodRequestor.execute(MethodRequestor.java:56) at org.eclipse.e4.core.internal.di.InjectorImpl.invokeUsingClass(InjectorImpl.java:252) at org.eclipse.e4.core.internal.di.InjectorImpl.invoke(InjectorImpl.java:234) at org.eclipse.e4.core.contexts.ContextInjectionFactory.invoke(ContextInjectionFactory.java:132) at org.eclipse.e4.core.commands.internal.HandlerServiceHandler.execute(HandlerServiceHandler.java:152) at org.eclipse.core.commands.Command.executeWithChecks(Command.java:493) at org.eclipse.core.commands.ParameterizedCommand.executeWithChecks(ParameterizedCommand.java:486) at org.eclipse.e4.core.commands.internal.HandlerServiceImpl.executeHandler(HandlerServiceImpl.java:210) at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.executeCommand(KeyBindingDispatcher.java:286) at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.press(KeyBindingDispatcher.java:507) at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.processKeyEvent(KeyBindingDispatcher.java:558) at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.filterKeySequenceBindings(KeyBindingDispatcher.java:378) at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.access$0(KeyBindingDispatcher.java:324) at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher$KeyDownFilter.handleEvent(KeyBindingDispatcher.java:86) at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:84) at org.eclipse.swt.widgets.Display.filterEvent(Display.java:1266) at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1112) at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1137) at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1122) at org.eclipse.swt.widgets.Widget.sendKeyEvent(Widget.java:1164) at org.eclipse.swt.widgets.Widget.sendKeyEvent(Widget.java:1160) at org.eclipse.swt.widgets.Widget.wmChar(Widget.java:1581) at org.eclipse.swt.widgets.Control.WM_CHAR(Control.java:4795) at org.eclipse.swt.widgets.Canvas.WM_CHAR(Canvas.java:343) at org.eclipse.swt.widgets.Control.windowProc(Control.java:4676) at org.eclipse.swt.widgets.Canvas.windowProc(Canvas.java:339) at org.eclipse.swt.widgets.Display.windowProc(Display.java:5050) at org.eclipse.swt.internal.win32.OS.DispatchMessageW(Native Method) at org.eclipse.swt.internal.win32.OS.DispatchMessage(OS.java:2549) at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3767) at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$4.run(PartRenderingEngine.java:1127) at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:337) at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1018) at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:156) at org.eclipse.ui.internal.Workbench$5.run(Workbench.java:654) at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:337) at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:598) at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:150) at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:139) at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196) at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134) at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104) at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:380) at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:235) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source) at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source) at java.lang.reflect.Method.invoke(Unknown Source) at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:669) at org.eclipse.equinox.launcher.Main.basicRun(Main.java:608) at org.eclipse.equinox.launcher.Main.run(Main.java:1515)
issueID:UIMA-484
type:Bug
changed files:
texts:Clean build fails on Saxon download (tmp dir does not exist)
When building a clean extract, mvn assembly:assembly fails early on as follows:C:\code\uimaj-2.2.0\uimaj-2.2.0-02\uimaj-distr>mvn assembly:assembly&#91;INFO&#93; Scanning for projects...&#91;INFO&#93; Searching repository for plugin with prefix: 'assembly'.&#91;INFO&#93; ----------------------------------------------------------------------------&#91;INFO&#93; Building Apache UIMA Java SDK - Resources and Assembly Descriptor for building the distribution&#91;INFO&#93;    task-segment: &#91;assembly:assembly&#93; (aggregator-style)&#91;INFO&#93; ----------------------------------------------------------------------------&#91;INFO&#93; Preparing assembly:assembly&#91;INFO&#93; ----------------------------------------------------------------------------&#91;INFO&#93; Building Apache UIMA Java SDK - Resources and Assembly Descriptor for building the distribution&#91;INFO&#93; ----------------------------------------------------------------------------&#91;INFO&#93; &#91;resources:resources&#93;&#91;INFO&#93; Using default encoding to copy filtered resources.&#91;INFO&#93; &#91;compiler:compile&#93;&#91;INFO&#93; No sources to compile&#91;INFO&#93; &#91;resources:testResources&#93;&#91;INFO&#93; Using default encoding to copy filtered resources.&#91;INFO&#93; &#91;compiler:testCompile&#93;&#91;INFO&#93; No sources to compile&#91;INFO&#93; &#91;surefire:test&#93;&#91;INFO&#93; No tests to run.&#91;INFO&#93; &#91;jar:jar&#93;&#91;WARNING&#93; JAR will be empty - no content was marked for inclusion!&#91;INFO&#93; Building jar: C:\code\uimaj-2.2.0\uimaj-2.2.0-02\uimaj-distr\target\uimaj-distr-2.2-incubating.jar&#91;INFO&#93; [antrun:run {execution: default}]&#91;INFO&#93; Executing taskssetup-common-properties-per-build:setup-availables:test-saxon-available:get-saxon:Downloading and unzipping (one time) Saxon's free XSLT package, licensed under the Mozilla Public License Version 1.0; you may not use this package except in compliance with the License.  You may obtain a copy of the License at http://www.mozilla.org/MPL/Ok to download?(y,n)y      &#91;get&#93; Getting: http://prdownloads.sourceforge.net/saxon/saxon6-5-5.zip      &#91;get&#93; To: C:\code\uimaj-2.2.0\uimaj-2.2.0-02\uima-docbooks\target\temp\saxon.zip      &#91;get&#93; Error getting http://prdownloads.sourceforge.net/saxon/saxon6-5-5.zip to C:\code\uimaj-2.2.0\uimaj-2.2.0-02\uima-docbooks\target\temp\saxon.zip&#91;INFO&#93; ------------------------------------------------------------------------&#91;ERROR&#93; BUILD ERROR&#91;INFO&#93; ------------------------------------------------------------------------&#91;INFO&#93; Error executing ant tasksEmbedded error: The following error occurred while executing this line:C:\code\uimaj-2.2.0\uimaj-2.2.0-02\uima-docbook-tool\build\build-docbook.xml:157: The following error occurred while executing this line:C:\code\uimaj-2.2.0\uimaj-2.2.0-02\uima-docbook-tool\build\get-components.xml:57: java.io.FileNotFoundException: C:\code\uimaj-2.2.0\uimaj-2.2.0-02\uima-docbooks\target\temp\saxon.zip (The system cannot find the path specified)&#91;INFO&#93; ------------------------------------------------------------------------&#91;INFO&#93; For more information, run Maven with the -e switch&#91;INFO&#93; ------------------------------------------------------------------------&#91;INFO&#93; Total time: 16 seconds&#91;INFO&#93; Finished at: Fri Jul 06 14:29:59 CEST 2007&#91;INFO&#93; Final Memory: 7M/13M&#91;INFO&#93; ------------------------------------------------------------------------C:\code\uimaj-2.2.0\uimaj-2.2.0-02\uimaj-distr>A manual>mkdir  C:\code\uimaj-2.2.0\uimaj-2.2.0-02\uima-docbooks\target\tempfixes this.  I assume this can be fixed in the Ant script somewhere.
issueID:UIMA-4841
type:Bug
changed files:
texts:Ruta: missing error for invalid implicit action
(a:Employee # b:Employer)    {-> EmplRelation, EmplRelation.employee,  EmplRelation.employer = b};
issueID:UIMA-4842
type:Bug
changed files:
texts:Ruta: NPE with macro with no arguments
CONDITION NumOrComma() = OR(CONTAINS(NUM),CONTAINS(COMMA));DECLARE Macro;Sentence{NumOrComma() -> Macro};
issueID:UIMA-4843
type:Bug
changed files:
texts:Ruta: NPE with macro with no arguments
CONDITION NumOrComma() = OR(CONTAINS(NUM),CONTAINS(COMMA));DECLARE Macro;Sentence{NumOrComma() -> Macro};
issueID:UIMA-4844
type:Bug
changed files:
texts:UIMA-AS: upgrade ActiveMQ, Jetty, xstream and lsf4j
Upgrade 1) ActiveMQ 5.13.22) Jetty 9.2.133) Xstream 1.4.84) lsf4j 1.7.13
issueID:UIMA-4845
type:Bug
changed files:
texts:UIMA-AS: upgrade ActiveMQ to 5.13.2
Get the latest AMQ
issueID:UIMA-4846
type:Bug
changed files:
texts:Ruta: NPE with macro with no arguments
CONDITION NumOrComma() = OR(CONTAINS(NUM),CONTAINS(COMMA));DECLARE Macro;Sentence{NumOrComma() -> Macro};
issueID:UIMA-4847
type:Bug
changed files:
texts:UIMA-AS: upgrade ActiveMQ to 5.13.2
Get the latest AMQ
issueID:UIMA-4848
type:Bug
changed files:
texts:Ruta: problem with using named block in CALL
CALL(OtherFile.someBlock.eachSentence);
issueID:UIMA-4849
type:Bug
changed files:
texts:Ruta: problem with using named block in CALL
CALL(OtherFile.someBlock.eachSentence);
issueID:UIMA-485
type:Improvement
changed files:
texts:Cas Editor: Add cas text color annotation drawing strategy

issueID:UIMA-4850
type:Bug
changed files:
texts:Ruta: workbench reports error for FSArrays feature match
DECLARE ChunkCell (FSArray chunks);ChunkCell.chunks;
issueID:UIMA-4851
type:New Feature
changed files:
texts:Ruta: usage of labels in inlined rules
Should it be possible to use label expression with lined rules?
issueID:UIMA-4852
type:Bug
changed files:
texts:Ruta: wrong counting in CONTEXTCOUNT condition
There is maybe something wrong with CONTEXTCOUNT:f:FrequencyCell{CONTEXTCOUNT(TR,index-1,index-1) -> fa = f} # c:TD{PARTOF(FirstColumn) ->  ca=c}    # @TD{CONTEXTCOUNT(TR,0,100,index)}    ->{e:@Chunk{-PARTOF(UndesirableEffect)-> UE(ca,e,fa)};};
issueID:UIMA-4853
type:Bug
changed files:
texts:UIMA-DUCC: Agent should detect OS level and log it
Modify agent to detect OS level and add it to logging in the code where node metrics are collected.
issueID:UIMA-4855
type:New Feature
changed files:
texts:Ruta: support datapath for loading resources
Ruta: support datapath for loading resouces(, descriptors) and scripts
issueID:UIMA-4856
type:Improvement
changed files:
texts:DUCC broker should be restricted to ducc use only
Prevent any users other than ducc from using the DUCC broker
issueID:UIMA-4857
type:Bug
changed files:
texts:UIMA-AS: Fix NullPointerException
Fix NPE in the UIMA-AS service caused by a race condition when the service (remote multiplier) sends child CASes to a client. For each child it receives, the client sends a message to the service to free the CAS. Upon receipt of the message the service removes CAS from its cache.The race condition is as follows:1) Service in Thread 1 sends child CAS to client and the OS suspends the thread.2) Client immediately sends request to free CAS to the service3) Service in Thread 2 receives request to free CAS and deletes it from its cache.4) Service in Thread 1 looks up the CAS in its cache and gets NULL (since the CAS was deleted in 3) above.So the problem is that right after sending a child CAS to a client, the service tries to access cache entry for this CAS to change the state of the cache entry.Move the cache look up and state change before the send.
issueID:UIMA-486
type:Bug
changed files:
texts:CVD error message box cannot be closed with OK button
When loading an invalid descriptor file with CVD the error message box that opens cannot that be closed with the OK button.
issueID:UIMA-4860
type:Improvement
changed files:
texts:DUCC Web Server (WS) System -> Services and Preferences page improvements
remove active/inactive as a combinatorial "filter users" option honor "max records", regardless of state
issueID:UIMA-4861
type:Bug
changed files:
texts:When migrating to DUCC 2.1.0 must handle renamed properties
ducc.threads.limit has been renamed as ducc.job.max.pipelines.count
issueID:UIMA-4862
type:Bug
changed files:
texts:UIMA-DUCC: cgcreate fails sometimes when run concurrently
For some strange reason cgcreate fails to create cgroup when running concurrently. What is strange is that CGroupsManager.createContainer() uses synchronized code using CGroupManager.class which  provides class level locking. So there should not be any contention at all. Yet if run concurrently the cgcreate consistently fails unless there is sufficient wait time added between calls.
issueID:UIMA-4863
type:Bug
changed files:uimaj-tools/src/main/java/org/apache/uima/tools/viewer/CasAnnotationViewer.java
uimaj-tools/src/main/java/org/apache/uima/tools/viewer/CasAnnotationViewer.java
texts:AnnotationViewer stack overflow when switching among Sofas
To reproduce:In Eclipse, in a check-out of the uimaj trunk, find the class AnnotationViewerMain, and "run" it; it pops up a GUI.Navigate in the package view to uimaj-core/src/test/resources/ExampleCas, right-click that, select Properties, and copy the absolute path to that directory, and paste into the 1st box of the GUI.In the .../ExampleCas/ directory, right-click the testTypeSystem.xml file, select Properties, and copy the absolute path into the GUI's 2nd box, then hit View.In the view box, double click the "multiSofaCas.xml" (2nd item).In the resulting viewer, change the Sofa pull-down from DEFAULT to (for example) English Document.  This causes a stack overflow..
issueID:UIMA-4864
type:Bug
changed files:
texts:UIMA-DUCC: Agent exits when cgroups cgcreate fails
When cgcreate fails to create a cgroup for a child process, an Agent stops all of its running child processes and exits. No reason to do this. One process failure should not cause an Agent exit.
issueID:UIMA-4865
type:Improvement
changed files:
texts:Upgrade dependencies
Upgrade dependencies, e.g. UIMA SDK and Spring.
issueID:UIMA-4866
type:Bug
changed files:
texts:UIMA DUCC: Agent rogue detector not working
Looks like the rogue process detector does not actually initiate process kill when it detects a rogue process. The detector does not mark a rogue process for kill immediately upon detection. It supposed to mark it for death on 3rd iteration (detection). This is done due to an asynchronous nature of the detector. It runs in a thread driven by timer. It needs to reconcile processes it finds with information sent by the OR which includes reservations. So the rogue process detector does not mark anything for death until it sees OR state.The bug in the code is in RogueProcessReaper:        if ((counter = entry.countDown()) == 0 && !entry.isKilled()) {if entry.countDown() returns a negative number the test fails and the process is not marked for death.The fix is to first check the counter to see if it is positive and only than decrement and test.
issueID:UIMA-4867
type:Task
changed files:
texts:Adjust rat configuration
The rat configuration needs to be adjusted to accommodate for the new `.activate-enforce-compatibility` marker file a log4j.properties file which doesn't require a license header
issueID:UIMA-4868
type:Task
changed files:
texts:Wrap up 2.2.0 release
Update all the files to wrap up for a 2.2.0 release. Version in README Update LICENSE and NOTICE files since we had some dependency upgrades
issueID:UIMA-4869
type:New Feature
changed files:
texts:Provide script to simplify DUCC installation or migration
Create a ducc_install script that takes a downloaded tarball and either creates a fresh installation, or updates an existing one while preserving the site customized files.
issueID:UIMA-487
type:Improvement
changed files:
texts:XCAS operations may slow down when using command line tools
Problem description: I run documentAnalyzer tool from command line in Win to process 500KB text file by using a sample AE, create XMI output and view it in the built-in Java Viewer. The tool takes about 25 sec to open the output XMI file in the viewer. For bigger files this time may increase significantly. This happens only in those Win machines, where WebSphere products are installed.Problem analysis:The setUimaClassPath.bat script creates UIMA_CLASSPATH by adding UIMA resources to the default system CLASSPATH, which may already include 3rd party JARs (like eglbatchgen.jar in WebSphere products) containing their own implementation of org.xml.sax packages. Such JAR files may conflict with standard JDK runtime JARs and slow down XCAS related operations. If I manually modify the documentAnalyzer.bat script to use 'clear' UIMA CLASSPATH, w/o default system CLASSPATH, my XMI file opens reasonably fast (< 2 sec).Possible suggestions:a) not using default system CLASSPATH in the UIMA_CLASSPATH;b) create a tool that can identify possible CLASSPATH conflicts and form UIMA_CLASSPATH accordingly.&#8211; Lev
issueID:UIMA-4870
type:Bug
changed files:
texts:FindBugs 2 not compatible with Java 8
When building uimaFIT with the findbugs profile on a Java 8, the build fails:[INFO] --- findbugs-maven-plugin:2.5.4:findbugs (default) @ uimafit-core ---[INFO] Fork Value is true     [java] The following errors occurred during analysis:     [java]   Error scanning java/util/Comparator for referenced classes     [java]     java.lang.ArrayIndexOutOfBoundsException: 1320     [java]       At org.objectweb.asm.ClassReader.readClass(Unknown Source)     [java]       At org.objectweb.asm.ClassReader.accept(Unknown Source)     [java]       At edu.umd.cs.findbugs.asm.FBClassReader.accept(FBClassReader.java:44)     [java]       At org.objectweb.asm.ClassReader.accept(Unknown Source)     [java]       At edu.umd.cs.findbugs.classfile.engine.ClassParserUsingASM.parse(ClassParserUsingASM.java:110)     [java]       At edu.umd.cs.findbugs.classfile.engine.ClassParserUsingASM.parse(ClassParserUsingASM.java:587)     [java]       At edu.umd.cs.findbugs.classfile.engine.ClassInfoAnalysisEngine.analyze(ClassInfoAnalysisEngine.java:76)     [java]       At edu.umd.cs.findbugs.classfile.engine.ClassInfoAnalysisEngine.analyze(ClassInfoAnalysisEngine.java:38)     [java]       At edu.umd.cs.findbugs.classfile.impl.AnalysisCache.getClassAnalysis(AnalysisCache.java:268)     [java]       At edu.umd.cs.findbugs.FindBugs2.buildReferencedClassSet(FindBugs2.java:891)     [java]       At edu.umd.cs.findbugs.FindBugs2.execute(FindBugs2.java:222)     [java]       At edu.umd.cs.findbugs.FindBugs.runMain(FindBugs.java:393)     [java]       At edu.umd.cs.findbugs.FindBugs2.main(FindBugs2.java:1317)
issueID:UIMA-4872
type:Bug
changed files:
texts:UIMA-DUCC: Agent should not use duccling to run cgroup commands
Using ducc_ling to run cgroup commands is not necessary since they are executed as user ducc.Remove ducc_ling from a command line
issueID:UIMA-4874
type:Bug
changed files:
texts:ducc-mon shows a blank scheduling-class field for some services
CLI should set the default class if omitted when registering a service
issueID:UIMA-4875
type:Bug
changed files:
texts:UIMA-DUCC: Increase JP sleep time if JD has no WIs
The JP currently sleeps if a JD doesn't not provide a WI to work on. Current default in ducc.properties is 3 secs. Under large scaleout with many JP threads current default sleep time is not enough causing a JD to thrash and log excessively. Change the default to 60secs
issueID:UIMA-4877
type:Bug
changed files:
texts:UIMA-DUCC: Agent sets the state of process to Running
The agent wrongly sets a state of a child process to Running right after launch. This should only be done for processes which don't report their internal state transitions to the agent (JDs and APs). When a child process is launched (JP or UIMA-AS service), it immediately reports back to the agent its state as Initializing. The agent updates the child state in its internal process list and when publish inventory event is triggered the right info is communicated to the OR ( process in Initializing state).There is a race condition which produces erroneous state. In this scenario, a child process is launched, its state is set to Running, and before the process reports its state, the publish inventory is triggered and the OR is told that the process is running. Subsequent to that, the process sends a state update to its Agent telling it that its state=Initializing. The agent updates internal state of this process and publishes that state on the next publish inventory event. The problem is that the OR does not go back to Initializing once it sees a process in Running state. This is of course the right behavior.  Change the agent to set process state to Running for JDs and APs only. The other types are subject to reported state transitions with initial state=Starting.
issueID:UIMA-4878
type:Bug
changed files:
texts:UIMA-DUCC: Agent not killing a child process if it fails to stop after SIGTERM
Agent is not killing a process which fails to exit after SIGTERM is sent. When kill -15 is issued, an agent immediately sets the process state to Stopped even though the process may still be running. If a process is in Stopped state, an agent does not start a kill timer for it which leads to a process lingering on a node. The kill timer waits a configurable amount of time and when it pops, it sends SIGKILL signal to a process if its still running.  Modify code to change process state to Stopped when the process actually terminates. The agent has a handle to a process and calls its waitFor() which blocks until the process exits.
issueID:UIMA-4879
type:Bug
changed files:
texts:DUCC Job Driver (JD) should terminate Job Process (JP) when workitem timeout occurs
Job may hang if workitem timeout occurs since Job Driver (JD) is negligent by failing to terminate the containing Job Process (JP).
issueID:UIMA-488
type:Bug
changed files:uimaj-tools/src/main/java/org/apache/uima/tools/cvd/MainFrame.java
texts:CVD doesn&#39;t handle Errors that are thrown by an AE
CVD doesn't handle Errors that are thrown by an AE. The error stack traces are written to the command line but CVD doesn't provide any information that an error is occurred.
issueID:UIMA-4880
type:Bug
changed files:
texts:DUCC JobDriver doesn&#39;t terminate when fewer than expected work-items found
If the CR claims there are 20 work-items but hasNext returns false after 15 then the JobDriver keeps asking for more.  It used to report "Premature" end.
issueID:UIMA-4881
type:Improvement
changed files:
texts:UIMA DUCC: Optimize JP handling of no work from the JD
When a JD returns no work, each worker JP thread sleeps for a bit and than asks JD again. At large scaleout many threads repeat this cycle causing the JD to spend a lot of time handling WI requests.Modify the JP to use a single thread in each process to retry request for work. While a single thread repeatedly retries other threads block until:1) Retry thread receives work item2) JP terminates
issueID:UIMA-4882
type:Improvement
changed files:
texts:DUCC Resource Manager (RM) does not adequately expand Job Processes (JPs)
The Resource Manager (RM) employs a mean work item completion time published by the Orchestrator (OR) to predict Job Processes (JP) usage for resource allocation.  Presently this mean only considers completed work items, not active ones, and therefore may not reflect the benefits of more resource allocation to a Job.A revised algorithm for calculating the work item prediction mean is:1. calculate mean of completed work items2. find active work items > completed mean3. calculate new mean comprising completed + longer active work items4. publish same
issueID:UIMA-4883
type:Improvement
changed files:
texts:DUCC system events log
DUCC should keep a system-wide events log to record for example:1. OR/SM/RM requests/replys2. Job/AP/Service start/end3. Node up/down determination4. Monitor cancellations
issueID:UIMA-4884
type:Improvement
changed files:
texts:DUCC standardization of environment variables
DUCC environment variables should adhere to the following rules:1. prefix is DUCC_2. all upper case3. those that do not follow this convention will be deprecated4. consider the following list compiled by Burn:USER=burnHOME=/home/burnLANG=en_US.UTF-8LD_LIBRARY_PATH=/yet/a/nother/dumb/pathIP=192.168.3.6JobId=294768DUCC_PROCESS_LOG_PREFIX=/home/burn/ducc/logs/294768/294768-UIMA-host.domain.netProcessDuccIdFriendly=33NodeName=host.domain.netProcessDuccId=dde7edef-eec0-44da-8467-9067811974d9
issueID:UIMA-4885
type:Improvement
changed files:
texts:UIMA DUCC: default.ducc.properties missing cgroup directory property
Add ducc.agent.launcher.cgroups.basedir=/cgroup/ducc to default properties
issueID:UIMA-4886
type:Improvement
changed files:
texts:Ruta: remove useless debug launcher in Eclipse
"Debugging with Ruta debug support Launcher"... remove that option somehow.
issueID:UIMA-4887
type:Bug
changed files:
texts:DUCC Web Server (WS) Reservations page terminate of Managed Reservation is ineffective
Employing a terminate button from the Reservations page is ineffective for Managed Reservations.Likely the Web Server (WS) is using the wrong command.  It should use ducc_process_cancel not ducc_cancel in this case.
issueID:UIMA-4889
type:Bug
changed files:
texts:Ruta: workbench reports error on string function
e.g., in something like CW{-> A.f = replaceAll(CW.ct, "a", "b")};
issueID:UIMA-489
type:Bug
changed files:
texts:Windows .bat files should use "endlocal" command
We use "setlocal" in our scripts, but without "endlocal" this does not prevent the environment set in the scripts from being exported to the command console that called the script.  This can result on the UIMA_CLASSPATH variable growing longer and longer, and eventually in a "line to long" error.
issueID:UIMA-4890
type:Bug
changed files:
texts:DUCC Active MQ Security
DUCC's Active MQ Topics and Queues should be securely configured to block unauthorized use.Also, any unused topics/queues should be removed.
issueID:UIMA-4892
type:Bug
changed files:
texts:DUCC database creates many frequent snapshots of the OR checkpoint
The unnecessary snapshots are flooding the disk
issueID:UIMA-4893
type:Bug
changed files:
texts:DUCC Web Server (WS) Machines page may display wrong memory free value
After a migration from DUCC 2.0 to 2.1 (using Cassandra DB) the Machines page may display the wrong value for Memory free for reserved machines.  When the WS detects a zero value for the size of the unmanaged  reservation as published by the OR, it should then employ the scheduled size of the reservation as a close approximation.
issueID:UIMA-4895
type:Bug
changed files:
texts:DUCC Web Server (WS) Utilization value may exceed 100%
Bad programming.  Try again...
issueID:UIMA-4896
type:Bug
changed files:
texts:UIMA-DUCC: instrument JP to log more details on negative performance metrics
Detect negative value for analysis time in UimaProcessContainer.doProcess() and log more details. Performance breakdown for one job showed negative analysis time. This was only observed and reported once. The hypothesis is that the JP provided bad data to the JD. Need proof that this is indeed the case. The JP code computes per CAS analysis time by doing before AE.process() and after snapshots and than computing delta essentially:after.analysisTime() - before.analysisTime. The uima-core analysisTime is cumulative and increasing each time process is called. In theory the delta should always be > 0.
issueID:UIMA-4897
type:Improvement
changed files:uimaj-core/src/main/java/org/apache/uima/jcas/cas/ByteArray.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/IntegerArray.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FeatureStructureImplC.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/ShortArray.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/FSArray.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/LongArray.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/FloatArray.java
uimaj-core/src/main/java/org/apache/uima/internal/util/Misc.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/AnnotationBase.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/Sofa.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/DoubleArray.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/CASImpl.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/StringArray.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/BooleanArray.java
texts:uimaj debug and trace improvements
add methods to trace FS creation and updating, in nice columns (add elide method to Misc), with optional call-back tracing (add callers method to Misc)
issueID:UIMA-4898
type:Bug
changed files:
texts:UIMA-DUCC: Agent process killer not working
When a child process fails to stop in response to SIGTERM the agent timer pops and SIGKILL signal is sent to a process. The timer thread does pop but it checks the state of the process before sending SIGKILL. It only allows this to be sent to process which is in a Running state. However the process may be in Initializing and Starting states and SIGKILL is never sent.Change the code to send kill signal no matter the state of the process is.
issueID:UIMA-49
type:New Feature
changed files:
texts:Migration tools from IBM UIMA to Apache UIMA
Tooling to support users making the transition to Apache UIMA.
issueID:UIMA-490
type:Bug
changed files:
texts:release number in wrong format
In many places, the release number is 2.2-incubating.  This needs to be 2.2.0-incubating except in things relating to Eclipse plugins, where it needs to be 2.2.0.incubating (the last "-" needs to be a period).
issueID:UIMA-4901
type:Improvement
changed files:
texts:UIMA DUCC: Improve process cleanup code on deallocate request
There is a suggestion to improve process cleanup strategy. On deallocate request, the agent should cleanup owner of the  container along with all dependent processes.
issueID:UIMA-4902
type:Improvement
changed files:
texts:DUCC Job Driver (JD) add programmability feature to built-in error handler
The Job Driver built-in error handler is not readily "programmable".  A desired feature is to specify, per Job, the number of work item time-outs allowed for each work item.  Presently, the number of retrys per work item time-out is 0.  The default remains 0.Allow users job submissions to specify for driver_jvm_args -DJobDriverErrorHandlerMaximumNumberOfTimeoutRetrysPerWorkItem=N, where N is an integer.  If a work item times-out, it will be counted.  If the number of retrys for that work item does not exceed the specified integer, it will be retried, else it will be a work item error.
issueID:UIMA-4903
type:Improvement
changed files:
texts:DUCC Orchestrator (OR) Health Monitor fails to detect too many Job Process failures
To assure a failing Job does not mistakenly live forever, the OR health monitor should not use initialization completed as a criteria for enforcing the too many JP failures limit.
issueID:UIMA-4904
type:Bug
changed files:
texts:UIMA DUCC: On SIGTERM the JP should stop communicating with a JD
When a JP receives a SIGTERM it should stop communicating with its JD. This includes sending pending replies no matter what the status of WI is. Extend logging to instruct the user to ignore any processing exceptions that may follow SIGTERM
issueID:UIMA-4905
type:Bug
changed files:
texts:UIMA DUCC: Agent not providing Reason for failure if JP exits while initializing
If a JP exits due to a framework error while in initializing, the Agent marks the process as Stopped but does not fill in the Reason. In this case, the Agent should set reason=FailedInitialization
issueID:UIMA-4907
type:Bug
changed files:
texts:UIMA DUCC: Agent rogue detector not working correctly
When running with cgroups enabled, the rogue process detector should check if a process exists in any of user cgroup containers before marking such process rogue. Users may deploy an AP which can spawn child processes detached from a parent. Currently such child processes are considered rogue. The rogue detector checks the parent tree and a process which is not rooted at agent is marked as rogue.When cgroups are disabled, current code should not change as there are no containers to check. The only approach is to check parent tree.
issueID:UIMA-4908
type:Bug
changed files:
texts:DUCC Agent: detached processes in cgroup container not being killed
When Ducc deallocates a process, it first kills the process and than removes its cgroup container. If the process spawned detached child processes they continue to run and the container is not removed. Modify code to cleanup all processes from a container by sending SIGKILL to child processes.
issueID:UIMA-4909
type:Bug
changed files:
texts:DUCC&#39;s all-in-one can exit without saying why
e.g. if the log-directory is not writable.
issueID:UIMA-491
type:Bug
changed files:uimaj-tools/src/main/java/org/apache/uima/tools/cpm/CpmPanel.java
uimaj-tools/src/main/java/org/apache/uima/tools/cpm/CpmPanel.java
texts:CPE GUI doesn&#39;t handle spaces in component descriptor file paths
This was introduced in supporting import in CPE descriptors.  There's a conversion to a URI that's not escaping spaces in the file paths.
issueID:UIMA-4910
type:Bug
changed files:
texts:DUCC work submitted to a reserve class may be placed on an offline or unresponsive node
RM avoids only black-listed nodes ... should also avoid offline & unresponsive nodes.
issueID:UIMA-4911
type:Task
changed files:
texts:Promote ducc from sandbox to the regular project
Ducc has been in the uima sandbox since its inception. It has a number of releases behind it and is being actively developed and used. After a vote we've got a consensus to go ahead with the svn move.Before the next DUCC release candidate move the source to make it a regular uima project like uima sdk and uimaFIT.
issueID:UIMA-4912
type:Bug
changed files:
texts:Preemption may not occur if some nodes are offline or unresponsive
Scheduler includes the unusable nodes when computing available resources so make a job that should be shrunk appear to instead be expanding, and so suppress the eviction.
issueID:UIMA-4913
type:Bug
changed files:
texts:DUCC RM may crash when the usable memory changes on a machine
This could reduce the size (in quanta) of the machine to below that of work already allocated.  e.g. an unmanaged reservation may then be larger than the macine.
issueID:UIMA-4914
type:Bug
changed files:
texts:Annotation Viewer StackOverflowError
Multiple view CASes cause a infinite call loop.Exception in thread "AWT-EventQueue-0" java.lang.StackOverflowError at javax.swing.SwingUtilities.layoutCompoundLabelImpl(SwingUtilities.java:975) at javax.swing.SwingUtilities.layoutCompoundLabel(SwingUtilities.java:890) at javax.swing.plaf.basic.BasicLabelUI.layoutCL(BasicLabelUI.java:94) at javax.swing.plaf.basic.BasicLabelUI.getPreferredSize(BasicLabelUI.java:238) at javax.swing.JComponent.getPreferredSize(JComponent.java:1662) at com.apple.laf.AquaComboBoxRendererInternal.getPreferredSize(AquaComboBoxRendererInternal.java:59) at javax.swing.plaf.basic.BasicListUI.updateLayoutState(BasicListUI.java:1363) at javax.swing.plaf.basic.BasicListUI.maybeUpdateLayoutState(BasicListUI.java:1311) at javax.swing.plaf.basic.BasicListUI$Handler.valueChanged(BasicListUI.java:2623) at javax.swing.DefaultListSelectionModel.fireValueChanged(DefaultListSelectionModel.java:184) at javax.swing.DefaultListSelectionModel.fireValueChanged(DefaultListSelectionModel.java:164) at javax.swing.DefaultListSelectionModel.fireValueChanged(DefaultListSelectionModel.java:211) at javax.swing.DefaultListSelectionModel.insertIndexInterval(DefaultListSelectionModel.java:632) at javax.swing.plaf.basic.BasicListUI$Handler.intervalAdded(BasicListUI.java:2581) at javax.swing.AbstractListModel.fireIntervalAdded(AbstractListModel.java:148) at javax.swing.DefaultComboBoxModel.addElement(DefaultComboBoxModel.java:129) at javax.swing.JComboBox.addItem(JComboBox.java:716) at org.apache.uima.tools.viewer.CasAnnotationViewer.initializeSofaSelectionPanel(CasAnnotationViewer.java:1062) at org.apache.uima.tools.viewer.CasAnnotationViewer.setCAS(CasAnnotationViewer.java:1033) at org.apache.uima.tools.viewer.CasAnnotationViewer$4.itemStateChanged(CasAnnotationViewer.java:363) at javax.swing.JComboBox.fireItemStateChanged(JComboBox.java:1223) at javax.swing.JComboBox.selectedItemChanged(JComboBox.java:1280) at javax.swing.JComboBox.contentsChanged(JComboBox.java:1330) at javax.swing.AbstractListModel.fireContentsChanged(AbstractListModel.java:118) at javax.swing.DefaultComboBoxModel.setSelectedItem(DefaultComboBoxModel.java:93) at javax.swing.DefaultComboBoxModel.addElement(DefaultComboBoxModel.java:131) at javax.swing.JComboBox.addItem(JComboBox.java:716) at org.apache.uima.tools.viewer.CasAnnotationViewer.initializeSofaSelectionPanel(CasAnnotationViewer.java:1062)Call loop continues after this.
issueID:UIMA-4915
type:Bug
changed files:uimaj-core/src/main/java/org/apache/uima/cas/impl/CasSerializerSupport.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/CasSerializerSupport.java
texts:NullPointerException in CasSerializerSupport when called from JsonCasSerializer and features reference the cas:NULL element
When serializing a CAS, if there are references to the NULL element (<cas:NULL xmi:id="0"/>) in the features for an annotation, a NullPointerException is thrown at line 693 of CasSerializerSupport. It appears that the ll_getTypeForCode(0) returns null, resulting in a NullPointerException when the "getName()" method is called on the return object.The same CAS can successfully be serialized to XML using the XmlCasSerializer.
issueID:UIMA-4916
type:Bug
changed files:
texts:UIMA-AS: fix license and notice issues found in RC3
Multiple issues found in the LICENSE file. Some jars mentioned there are not in the distribution. Also, some jar versions are mentioned incorrectly. Redo licenses and make sure the LICENSE accounts for what is in the distribution.Also NOTICE file refers to jmDNS which is not part of the distribution. Remove this reference from the file.
issueID:UIMA-4918
type:Bug
changed files:
texts:DUCC Web Server (WS) numeric values column sorting is inconsistent
The WS uses sorttable to display most information.  It seems to not always automatically recognize columns of numeric data and thus does not always sort them correctly.
issueID:UIMA-492
type:Bug
changed files:uimaj-core/src/main/java/org/apache/uima/util/impl/XMLParser_impl.java
texts:uimaj-cpe test failures on some machines when run from maven
If you cd to the uimaj-cpe directory, and do mvn install, on some machines this results in failure due to the tests using the UIMA Framework validating XML parsing, which gets the .xsd schema for resources from the class path - this produces a URL for (on Windows machines) jar:/C:/Documents and Settings/administrator/.m2/repository/   etc.  The problem is the blank space following "Documents".  The SAX parser impl stops looking right after the blank, and produces an error message about not being able to find a schema at "jar:/C:/Documents".On some machines, the URL returned from class.getResource() substitutes "%20" for blanks.  On other machines, this is not done.  I am unable to see why this works on some machines and not others.  It doesn't seem to be Java version related (two machines showing different behavior were both running java 1.6.0_01 as shown by System.getProperties("java.version")).Fix is to have the routine that gets the Resource Specifier Schema check to see if the URL has blanks in it, and if so, create another (equivalent) URL with %20 substituted for the blanks.
issueID:UIMA-4920
type:Bug
changed files:uimaj-core/src/main/java/org/apache/uima/util/CasCopier.java
texts:fix a quirk in cas copier used for copy view then for individual FS copy
If you use the cas copier to copy a view to another view, and reuse the same instance of the cas copier to copy fss, it remembers the view you were copying to, and sets the copied fs's to be in that view.  Although it isn't indexing, a subsequent fs_instance.addToIndexes will (if not a subtype of AnnotationBase) add the fs_instance to that last view, rather than the view the cas copier was initially specified with.
issueID:UIMA-4922
type:Bug
changed files:
texts:Invalid changes to the DUCC classes file can cause jobs to fail
Even though the administrator has not reconfigured DUCC or checked the syntax with check_ducc -c, the CLI may call functions that read  the classes file and produce a confusing error message.  The CLI should not be responsible for switching a P class to its NP equivalent ... the RM should do so using its validated set of classes.
issueID:UIMA-4923
type:Improvement
changed files:
texts:DUCC Web Server (WS) should not display nodes that have been removed from service on Machines page
Justification: it is confusing to users and administrators to display nodes on the Machines page that are no longer in service.  By not in service we mean: no longer in a nodes file if previously in a node files, no longer in use
issueID:UIMA-4924
type:Bug
changed files:
texts:Re-activate saving of revisionnumber in jars
Was perhaps disabled accidentally last Oct 28th
issueID:UIMA-4925
type:Bug
changed files:
texts:DUCC Agent adds duplicate VM Arguments
DUCC Agent blindly appends -D's when constructing command line.  Fix is to use existing jcl.addOption which handles duplicates.
issueID:UIMA-4926
type:Improvement
changed files:
texts:No need to prompt for passwords when installing DUCC
Generate password(s) at install time. Prompt for DB yes/no
issueID:UIMA-4927
type:Bug
changed files:
texts:Update internal UIMA-AS pinger to not use UIMA-AS

issueID:UIMA-4928
type:Bug
changed files:
texts:Modifications to a service&#39;s autostart parameter are not saved in the DB
autostart is in the meta-props (should be in svc-props) but is saved only when the pinger or some other state is changed
issueID:UIMA-4929
type:Bug
changed files:
texts:UIMA-AS: missing license context in LICENSE
For some artifacts the LICENSE mentions licenses by url instead including the full license text. Include license text instead of pointing to external sites.
issueID:UIMA-493
type:Bug
changed files:
texts:Cas Editor: Adding a typesystem throws NPE

issueID:UIMA-4930
type:Bug
changed files:
texts:RM gets an NPE if P and NP classes have the same priority
check_ducc -c does not detect this.  Nor does reconfigure.
issueID:UIMA-4931
type:Bug
changed files:
texts:UIMA-DUCC: Fix ConcurrentModificationException in Agent
The DuccCommandExecutor throws ConcurrentModificationException while iterating over cmd line options. Synchronized the options list while iterating or changing it.
issueID:UIMA-4932
type:Improvement
changed files:uimaj-core/src/main/java/org/apache/uima/cas/CASRuntimeException.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FSIndexRepositoryImpl.java
uimaj-core/src/main/java/org/apache/uima/cas/CASRuntimeException.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FSIndexRepositoryImpl.java
texts:improve error message when sofa missing during add to indexes
If the sofa reference for a FS which is a subtype of AnnotationBase is added to the index, an error is thrown saying the sofa is missing.  Improve this by adding some likely causes useful to users receiving this message to enable tracking down the cause.  A typical cause might be that the type system being used for deserialization of a CAS differs from the one used for serialization in that the FS when serialized was not a subtype of AnnotationBase.
issueID:UIMA-4934
type:Improvement
changed files:
texts:Detect license text in JavaDoc
The uimaFIT maven plugin tries to pick up the documentation of a component from the JavaDoc of the implementing class. However, if there is no JavaDoc for the class, but there is a JavaDoc-like license header at the beginning of the file, then this license header is picked up again.This can be fixed by:  adding JavaDoc for the class using a  line-comment or block-comment for the license header instead of a `/**`-like JavaDoc blockAnother option (which this bug is for) is for the uimaFIT plugin to allow configuring a regular expression which is matched against the JavaDoc comment. If the regex matches, then the JavaDoc would be classified as a license (or potentially other non-documentation item) and would be ignored. E.g.                <plugin>                    <groupId>org.apache.uima</groupId>                    <artifactId>uimafit-maven-plugin</artifactId>                    <configuration>                        <ignoreJavaDocMatching>.*Licensed to.*</ignoreJavaDocMatching>                    </configuration>
issueID:UIMA-4935
type:Bug
changed files:
texts:Agent reports some JPs as Starting when they have initialized
ducc-mon reports a large init-time and no run-time ... meanwhile 1000's of WIs may have run
issueID:UIMA-4936
type:Bug
changed files:
texts:Ruta: throw meaningful exception when AE is missing instead of NPE
Ruta: throw meaningful exception when AE is missing instead of NPEhttp://stackoverflow.com/questions/37154527/html-annotator-html-converter-in-uima-ruta
issueID:UIMA-4937
type:Bug
changed files:
texts:DUCC Resource Manager (RM) exception running rm_qload command
Command line:johndoe@ducc01.apache.org:/users1/degenaro/workspace/mega-ducc/ducc_install/apache-uima-ducc/admin> ./rm_qloadorg.apache.uima.ducc.common.exception.DuccRuntimeException: Received unexpected object as response: org.apache.uima.ducc.common.admin.event.RmAdminQLoad at org.apache.uima.ducc.common.main.DuccRmAdmin.dispatchAndWaitForReply(DuccRmAdmin.java:213) at org.apache.uima.ducc.common.main.DuccRmAdmin.qload(DuccRmAdmin.java:274) at org.apache.uima.ducc.common.main.DuccRmAdmin.run(DuccRmAdmin.java:341) at org.apache.uima.ducc.common.main.DuccRmAdmin.main(DuccRmAdmin.java:388)Traceback (most recent call last):  File "./rm_qload", line 133, in <module>    query.main(sys.argv&#91;1:&#93;)  File "./rm_qload", line 127, in main    self.format(lines)  File "./rm_qload", line 99, in format    qload = eval(lines)  File "<string>", line 0    ^=====rm.log:17 May 2016 14:07:51,992  INFO RM.ResourceManagerComponent- N/A runScheduler  -------- 30 ------- Scheduling loop returns  --------------------17 May 2016 14:07:52,337  INFO RM.ResourceManagerComponent- N/A RmAdminEventProcessor.process  Received Admin Message of Type: org.apache.uima.ducc.common.admin.event.RmAdminQLoad17 May 2016 14:07:52,343 ERROR RM.ResourceManagerComponent- N/A ErrorProcessor.process()java.lang.ArrayIndexOutOfBoundsException: Array index out of range: 1        at org.apache.uima.ducc.rm.scheduler.NodePool.countLocalQShares(NodePool.java:365)        at org.apache.uima.ducc.rm.scheduler.Scheduler.getNpStats(Scheduler.java:1299)        at org.apache.uima.ducc.rm.scheduler.Scheduler.queryLoad(Scheduler.java:1390)        at org.apache.uima.ducc.rm.ResourceManagerComponent$RmAdminEventProcessor.process(ResourceManagerComponent.java:182)        at org.apache.camel.processor.DelegateSyncProcessor.process(DelegateSyncProcessor.java:63)        at org.apache.camel.management.InstrumentationProcessor.process(InstrumentationProcessor.java:77)        at org.apache.camel.processor.RedeliveryErrorHandler.process(RedeliveryErrorHandler.java:448)        at org.apache.camel.processor.CamelInternalProcessor.process(CamelInternalProcessor.java:190)        at org.apache.camel.processor.Pipeline.process(Pipeline.java:118)        at org.apache.camel.processor.Pipeline.process(Pipeline.java:80)        at org.apache.camel.processor.CamelInternalProcessor.process(CamelInternalProcessor.java:190)        at org.apache.camel.util.AsyncProcessorHelper.process(AsyncProcessorHelper.java:109)        at org.apache.camel.processor.DelegateAsyncProcessor.process(DelegateAsyncProcessor.java:87)        at org.apache.camel.component.jms.EndpointMessageListener.onMessage(EndpointMessageListener.java:103)        at org.springframework.jms.listener.AbstractMessageListenerContainer.doInvokeListener(AbstractMessageListenerContainer.java:560)        at org.springframework.jms.listener.AbstractMessageListenerContainer.invokeListener(AbstractMessageListenerContainer.java:498)        at org.springframework.jms.listener.AbstractMessageListenerContainer.doExecuteListener(AbstractMessageListenerContainer.java:467)        at org.springframework.jms.listener.AbstractPollingMessageListenerContainer.doReceiveAndExecute(AbstractPollingMessageListenerContainer.java:325)        at org.springframework.jms.listener.AbstractPollingMessageListenerContainer.receiveAndExecute(AbstractPollingMessageListenerContainer.java:263)        at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.invokeListener(DefaultMessageListenerContainer.java:1058)        at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.executeOngoingLoop(DefaultMessageListenerContainer.java:1050)        at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.run(DefaultMessageListenerContainer.java:947)        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1156)        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:626)        at java.lang.Thread.run(Thread.java:780)17 May 2016 14:08:01,977  INFO RM.ResourceManagerEventListener- N/A onOrchestratorStateUpdateEvent  Event arrives
issueID:UIMA-4938
type:Bug
changed files:
texts:DUCC Job Driver (JD) erroneously determines: fewer work items available than expected
Seemingly a  rare event: all work items were successful yet ducc.log contents:2016.05.18 10:23:18 Wed Received2016.05.18 10:23:18 Wed WaitingForDriver2016.05.18 10:23:32 Wed WaitingForServices2016.05.18 10:23:39 Wed WaitingForResources2016.05.18 10:24:29 Wed Assigned2016.05.18 10:24:34 Wed Initializing2016.05.18 10:25:06 Wed Running2016.05.18 10:27:49 Wed Completing2016.05.18 10:28:55 Wed Completed2016.05.18 10:28:55 Wed completion type: CanceledByDriver2016.05.18 10:28:55 Wed rationale: fewer work items available than expectedJobDriver ActionGet needs synchronization to prevent overlapping JP requests from processing partially updated information and thereby arriving at an incorrect conclusion.
issueID:UIMA-494
type:Bug
changed files:uimaj-core/src/main/java/org/apache/uima/analysis_engine/impl/AnalysisEngineDescription_impl.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/impl/AnalysisEngineDescription_impl.java
texts:AnalysisEngineDescription_impl indirectly uses promletatic method URL.equals()
This class uses a Set containing URL objects, which will cause URL.equals() to be called.  URL.equals has performance problems since it can go out to the internet to do domain name resolution.  (In practice though, in our case the URLs are almost always file URLs on the local machine.)
issueID:UIMA-4943
type:Bug
changed files:
texts:DUCC Web Server (WS) non-DB case uses default Resource Manager quantum only
When DUCC is configured to not use database (not recommended, but allowed) the Web Server (WS)  may not display Machines page data correctly in the case where the system is configured to use multiple share size quanta. Nominally, the Resource Manager (RM) places the data needed by the Web Server to properly display the Machines page into the database.  However, in the non-DB case, this is information is not shared by the RM and thus the WS must divine the needed information.  As a minimal solution that works in many cases, the WS reads the default ducc.rm.share.quantum size from ducc.properties and employ same universally.  A complete solution would be for the WS to independently do the identical calculations that the RM does with respect to multi-quanta.  Presently it does not do so, and thus this is a known limitation.
issueID:UIMA-4944
type:Bug
changed files:
texts:Restore Cassandra&#39;s check for old Oracle JVMs & report any failures
Cassandra's claims to require Oracle 7u25 or newer.  Restore this check and add extra options if an IBM JDK is detected.
issueID:UIMA-4945
type:Task
changed files:
texts:regenerate serialize form 4 for SerDesTest4 for V3
SerDesTest4 testWithPrevGenerated has parts disabled, pending regeneration of previous serialized forms to used.  These changed in V3, so regenerate them, and put the tests back in.
issueID:UIMA-4946
type:Improvement
changed files:
texts:DUCC Web Server (WS) file pager should display grabbable un-encoded name of file
Justification: it is useful to be able to grab with a mouse the name of the log file being displayed by the file pager then go to a window on the OS and employ vi with the entire string or cd with part of it.  This could be done using the file pager URL in the past, but the URL now conforms to using encoding for special characters, such as /.
issueID:UIMA-4947
type:Improvement
changed files:
texts:UIMA-DUCC: Agent should run cgroup test before attempting cleanup
On startup an Agent tries to cleanup cgroups before it actually run tests to determine if it should run with cgroups enabled. Under some scenarios, the agent will not be able to remove cgroups created on a node by a different user in which case an agent keeps trying the remove indefinitely making the agent unusable. Modify agent to first test if cgroups are viable and if not skip the cleanup step.
issueID:UIMA-4948
type:Improvement
changed files:
texts:UIMA-DUCC: Agent should use uptime cmd to collect node average cpu load
Change the way an Agent collects node load average. Instead of fetching the info from the /proc execute uptime command and scrape the output. From the output extract the first metric which is 1 minute load average
issueID:UIMA-4949
type:Improvement
changed files:
texts:UIMA DUCC: Agent should filter out error msg generated by cgcreate
Due to a bug in cgroups helper library, the cgcreate generates "bin/cgcreate: can't create cgroup ducc/test: Operation not permitted" which is logged and gives an impression that something is wrong. Despite the error msg, the cgroup container is created. When processing stdout/stderr when running cgcreate filter out the error message to avoid the confusion. In case there is an actual problem creating a cgroup, the agent runs secondary test to validate existence of cgroup after cgcreate completes. This test will catch and report a failure and disable cgroups.
issueID:UIMA-495
type:Improvement
changed files:
texts:Cas Editor: FS View should show address of FS objects

issueID:UIMA-4950
type:Improvement
changed files:
texts:UIMA DUCC: Agent should log more details when testing for cgroups
An agent should log steps it takes while testing if cgroups are viable. If a particular step fails, the log should help identify a reason for failure.  Current an agent log shows  "nodeAgent  ------- CGroups Not Installed on this Machine" but does not provide detailed descriptions what is missing or went wrong while testing for cgroups.
issueID:UIMA-4951
type:Improvement
changed files:
texts:DUCC Web Server (WS) remove "estimated" hover from Time Init + Run since it is misleading
See summary.
issueID:UIMA-4952
type:Bug
changed files:
texts:UIMA DUCC: pinger should support failover protocol in broker URL
Current pinger code does not support failover directive in broker URLUIMA-AS:<queue>:failover:<protocol>://<host>:<port>When specified such URL causes an exception:  javax.management.InstanceNotFoundException: org.apache.activemq:BrokerName...Modify pinger code to check for failover and parse the url to extract needed parameters.
issueID:UIMA-4953
type:Improvement
changed files:
texts:UIMA DUCC: pinger should support failover protocol in broker URL
Current pinger code does not support failover directive in broker URLUIMA-AS:<queue>:failover:<protocol>://<host>:<port>When specified such URL causes an exception:  javax.management.InstanceNotFoundException: org.apache.activemq:BrokerName...Modify pinger code to check for failover and parse the url to extract needed parameters.
issueID:UIMA-4955
type:Bug
changed files:
texts:Ruta: too long verbalization of rule -> profiling info not visible
Ruta: too long verbalization of rule -> profiling info not visible
issueID:UIMA-4956
type:Improvement
changed files:
texts:DUCC Job Driver (JD) should warn in JD log if negative performance numbers are encountered
See summary.
issueID:UIMA-4957
type:Bug
changed files:
texts:DUCC: Agent logs amq credentials (username and password)
On startup agent logs username and password found in credential file. left from debugging most likely. Remove the logging of sensitive information.
issueID:UIMA-496
type:Bug
changed files:uimaj-core/src/main/java/org/apache/uima/pear/tools/InstallationController.java
uimaj-core/src/main/java/org/apache/uima/pear/tools/PackageInstaller.java
texts:PEAR API does not delete the PEAR ID subdirectory before the new content is installed
When installing a PEAR file, currently the InstallationController API overrides all available data in the target installation directory. The directory content isn't removed before. So it can happen that old class files or descriptor files that are never valid are still in the installation directory since they will not be removed when the new stuff is installed. Existing files with the same name will be overridden.
issueID:UIMA-4960
type:Bug
changed files:
texts:DUCC Web Server (WS) Jobs page may not show fails (init or run) for kill -9&#39;d JP
The process might have been stuck on I/O as sigterm did not take it down. SIGKILL did it, and this allowed DUCC to spawn another JP and retry the 15 WI hung there.The Job Details page correctly reflected the killed JP as Failed + Failed +SIGKILL(9).The Jobs page has zeros for both Init and Run Fails.  One of them should have been 1.
issueID:UIMA-4961
type:Bug
changed files:
texts:DUCC Web Server (WS) main pages should display alerts and/or messages
AlertsIt would be very useful for administrators and users to know when critical situations arise.  One case is where a core daemon, such as Orchestrator or Resource Manager has become uncommunicative.  This can be seen on the Daemons page, but many times this page is not regularly checked.  We thus introduce an additional line to the banner of the main pages that remains undisplayed unless one of the core daemons is determined to be down.Example: ALERT - critical component(s) unresponsive: Database MessagesIt would be very useful for administrators to communicate upcoming events to the user community, such as a scheduled maintenance window.  Like alerts, it would be handy to display this information on each of the main pages.Example: Do not adjust your set. This is a message from your DUCC administrator.
issueID:UIMA-4962
type:New Feature
changed files:
texts:Ruta: maven archtetype for typical ruta projects
Ruta: maven archtetype for typical ruta projects. Don't forget about some documentation.
issueID:UIMA-4963
type:Improvement
changed files:
texts:Ruta: faster removal of token and basic annotations in engine
Ruta: faster removal of token and basic annotations in engine
issueID:UIMA-4964
type:Bug
changed files:
texts:DUCC Web Server (WS) should employ more reliable aliveness detection for database & broker
Presently, the Web Server (WS) determines up/down for the database (DB)  via JMX.  A better test would be to perform an actual DB query or perhaps even confirm that actual DB updates succeed.Likewise, a better test of broker aliveness would be to send actual messages from WS to WS via broker to insure successful round trip.Note: such changes may be problematic for "shadow" WS when not running as actual "ducc" user.
issueID:UIMA-4965
type:Bug
changed files:
texts:Ruta: Check Annotations view stores only two types of annotations
Ruta: Check Annotations view stores only two types of annotations
issueID:UIMA-4966
type:Task
changed files:
texts:UIMA-DUCC: Prepare DUCC for 2.1.0 release
Update and verify legal docs(LICENSE + NOTICE), README, RELEASE_NOTES, etc
issueID:UIMA-4967
type:New Feature
changed files:
texts:Ruta: for each block setting local annotation variable for anchoring all rules within block
Ruta: for each block setting local annotation variable for anchoring all rules within block
issueID:UIMA-4968
type:New Feature
changed files:
texts:Ruta: type function for parsing type from string
Ruta: type function for paring type from string
issueID:UIMA-4969
type:New Feature
changed files:
texts:Ruta: allow setting type variables from configuration parameters
Ruta: allow setting type variables from configuration parameters
issueID:UIMA-497
type:Improvement
changed files:
texts:Cas Editor: Add token annotation drawing strategy

issueID:UIMA-4970
type:Task
changed files:
texts:Ruta: move block extensions to ruta-core
Ruta: move block extensions to ruta-core
issueID:UIMA-4971
type:Task
changed files:
texts:Ruta: upgrade to uimafit 2.2.0
Ruta: upgrade to uimafit 2.2.0
issueID:UIMA-4972
type:Task
changed files:
texts:UIMA-DUCC: modify uima-as dd2spring.xsl to remove scope="singleton"
UIMA-AS 2.8.1 comes with a modified version of dd2spring.xsl which is not backwards compatible with previous versions of UIMA-AS. The problem is that bean scope=singleton is not a valid attribute in older versions of Spring framework. The documentation clearly says it is supported yet when running with older version of Spring the setting scope="singleton" causes the following exception:Caused by: org.xml.sax.SAXParseException; lineNumber: 63; columnNumber: 28; Attribute "scope" must be declared for element type "bean".Modify DUCC's root pom to change dd2spring.xsl supplied by UIMA-AS 2.8.1 by replacing offending attribute (scope="singleton") with an empty string.
issueID:UIMA-4973
type:Improvement
changed files:
texts:Upgrade Spring Version uimafit
Upgrade spring to version 4.x
issueID:UIMA-4974
type:Bug
changed files:
texts:DUCC Orchestrator (OR) remove abbreviated state publication remnants
See summary.
issueID:UIMA-4975
type:Bug
changed files:
texts:DUCC Web Server (WS) Broker page support for AMQ version 5.13.2
See Summary.
issueID:UIMA-4976
type:Bug
changed files:
texts:Ruta: explanation of rules with wrong verbalization or missing entries
Ruta: explanation of rules with wrong verbalization or missing entries
issueID:UIMA-4977
type:Bug
changed files:
texts:Ruta: syntax check for FOREACH block not sufficient
Ruta: syntax check for FOREACH block not sufficient
issueID:UIMA-4978
type:New Feature
changed files:
texts:Ruta: labels as match condition
Ruta: labels as match conditione:CW e;
issueID:UIMA-4979
type:Bug
changed files:
texts:DUCC Resource Manager (RM) remove state publication rate configuration remnants
RM publishes in response to receipt of OR publications.  It no longer publishes independently and therefore ducc.rm.state.publish.rate can be removed.
issueID:UIMA-498
type:Bug
changed files:uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/TAEConfiguratorPlugin.java
texts:TAEConfiguratorPlugin throws NullPointer during activation
TAEConfiguratorPlugin throws a NPE during activation if the org.eclipse.platform pluginis missing (but its not required <- not listed in manifest). The plugin tries to retrieve the version of the org.eclipse.platform pluginI suggest to remove the code since the version is not used after retrieval. The code in question is located in the static initializer of the class.
issueID:UIMA-4980
type:Improvement
changed files:uimaj-core/src/main/java/org/apache/uima/jcas/cas/CommonList.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/EmptyFSList.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/EmptyFloatList.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/EmptyIntegerList.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/EmptyStringList.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/NonEmptyFSList.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/NonEmptyFloatList.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/NonEmptyIntegerList.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/NonEmptyStringList.java
texts:add constructors for Builtin Feature Structure lists that take value and maybe the next ptr
I think it would be frequently convenient to have a constructor for a FS list (e.g. NonEmptyFloatList), that took one or 2 additional args.  The first additional argument would be the value to set, the 2nd optional argument would be the value for the "tail" pointer - if omitted, it would set it to the (common, shared) "empty" value for this kind of list.Also, rework getEmptyList() so it works better with existing instances of the 4 kinds of lists.
issueID:UIMA-4981
type:Bug
changed files:
texts:Ruta: sequential matching with annotation matching condition checks only type but not offset
Ruta: sequential matching with annotation matching condition checks only type but not offset
issueID:UIMA-4982
type:Improvement
changed files:
texts:Ruta: SHIFT changes too many annotations
Ruta: SHIFT changes too many annotations. even if the rule element match is on one specific annotation, annotations that end there are also shifted
issueID:UIMA-4983
type:Bug
changed files:
texts:Ruta: changing annotation  offsets directly should cause internal update
Ruta: changing annotation  offsets directly should cause internal updateTest{-> Test.begin = 0};
issueID:UIMA-4984
type:Bug
changed files:
texts:Ruta: DocumentAnnotation not known with strictImport
Ruta: DocumentAnnotation not known with strictImport.... should alsways be resolvable
issueID:UIMA-4985
type:Improvement
changed files:
texts:UIMA-AS: modify log msg to indicate attempt to connect to a broker
Improve logging to make it clear that JMS listener is attempting broker connection. Change from "starting listener" to "Trying to start listener".
issueID:UIMA-4986
type:Bug
changed files:
texts:Start Broker on Windows
I'm working on an Apache UIMA-AS solution. After set UIMA_HOME and PATH environment variables I'm not able to start successfully the startBroker.bat under Windows 8, I've obtained the following console output, what's wrong or missing?:D:\apache-uima-as-2.8.1\bin>startBroker.bat        1 file copiati.        1 file copiati.D:\apache-uima-as-2.8.1\apache-activemq\conf\activemq-nojournal.xmlD:\apache-uima-as-2.8.1\apache-activemq\conf\credentials-enc.propertiesD:\apache-uima-as-2.8.1\apache-activemq\conf\credentials.propertiesD:\apache-uima-as-2.8.1\apache-activemq\conf\log4j.propertiesD:\apache-uima-as-2.8.1\apache-activemq\conf\logging.properties        5 file copiati.D:\apache-uima-as-2.8.1\bin>call "D:\apache-uima-as-2.8.1\apache-activemq\bin\activemq.bat" "console" "xbean:file:amq/conf/activemq-nojournal.xml"Java Runtime: Oracle Corporation 1.8.0_51 C:\Program Files\Java\jdk1.8.0_51\jre  Heap sizes: current=1005056k  free=984084k  max=1005056k    JVM args: -Dcom.sun.management.jmxremote -Xms1G -Xmx1G -Djava.util.logging.config.file=logging.properties -Djava.security.auth.login.config=D:\apache-uima-as-2.8.1\apache-activemq\conf\login.config -Dactivemq.classpath=D:\apache-uima-as-2.8.1\apache-activemq\conf;amq/conf;D:\apache-uima-as-2.8.1\apache-activemq/conf; -Dactivemq.home=D:\apache-uima-as-2.8.1\apache-activemq -Dactivemq.base=amq -Dactivemq.conf=D:\apache-uima-as-2.8.1\apache-activemq\conf -Dactivemq.data=D:\apache-uima-as-2.8.1\apache-activemq\data -Djava.io.tmpdir=D:\apache-uima-as-2.8.1\apache-activemq\data\tmpExtensions classpath:  [amq\lib,D:\apache-uima-as-2.8.1\apache-activemq\lib,amq\lib\camel,amq\lib\optional,amq\lib\web,amq\lib\extra,D:\apache-uima-as-2.8.1\apache-activemq\lib\camel,D:\apache-uima-as-2.8.1\apache-activemq\lib\optional,D:\apache-uima-as-2.8.1\apache-activemq\lib\web,D:\apache-uima-as-2.8.1\apache-activemq\lib\extra]ACTIVEMQ_HOME: D:\apache-uima-as-2.8.1\apache-activemqACTIVEMQ_BASE: amqACTIVEMQ_CONF: D:\apache-uima-as-2.8.1\apache-activemq\confACTIVEMQ_DATA: D:\apache-uima-as-2.8.1\apache-activemq\dataUsage: Main &#91;--extdir <dir>&#93; &#91;task&#93; &#91;task-options&#93; &#91;task data&#93;Tasks:    browse                   - Display selected messages in a specified destination.    bstat                    - Performs a predefined query that displays useful statistics regarding the specified broker    consumer                 - Receives messages from the broker    create                   - Creates a runnable broker instance in the specified path.    dstat                    - Performs a predefined query that displays useful tabular statistics regarding the specified destination type    export                   - Exports a stopped brokers data files to an archive file    list                     - Lists all available brokers in the specified JMX context    producer                 - Sends messages to the broker    purge                    - Delete selected destination's messages that matches the message selector    query                    - Display selected broker component's attributes and statistics.    start                    - Creates and starts a broker using a configuration file, or a broker URI.    stop                     - Stops a running broker specified by the broker name.Task Options (Options specific to each task):    --extdir <dir>  - Add the jar files in the directory to the classpath.    --version       - Display the version information.    h,?,-help    - Display this help information. To display task specific help, use Main &#91;task&#93; -h,?,--helpTask Data: Information needed by each specific task.JMX system property options:    -Dactivemq.jmx.url=<jmx service uri> (default is: 'service:jmx:rmi:///jndi/rmi://localhost:1099/jmxrmi')    -Dactivemq.jmx.user=<user name>    -Dactivemq.jmx.password=<password>
issueID:UIMA-4987
type:Bug
changed files:
texts:Enable DUCC to run on ppc64le environments
1. check_ducc fails on this platform2. cgroup configuration hard to get working on ubuntu3. agent needs to use cgdelete and not rmdir to clean up containers
issueID:UIMA-4988
type:Bug
changed files:uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/TAEConfiguratorPlugin.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/MultiPageEditor.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/ui/AbstractSectionParm.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/ui/HeaderPage.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/ui/HeaderPageWithSash.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/ui/dialogs/AbstractDialog.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/model/AllTypes.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/wizards/AbstractNewWizardPage.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/TAEConfiguratorPlugin.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/ui/HeaderPage.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/ui/HeaderPageWithSash.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/wizards/AbstractNewWizardPage.java
uimaj-ep-jcasgen/src/main/java/org/apache/uima/jcas/jcasgenp/EP_LogThrowErrorImpl.java
uimaj-ep-jcasgen/src/main/java/org/apache/uima/jcas/jcasgenp/JgPlugin.java
texts:UIMA plugins fail to install on Eclipse NEON
The new Eclipse version "NEON" came out. I run into problem when trying to install the Eclipse plugins for UIMA and UIMA AS.
issueID:UIMA-4989
type:Bug
changed files:
texts:UIMA-DUCC: Fix problems found by FindBugs
Findbugs found a bunch of issues in Ducc code.
issueID:UIMA-499
type:Improvement
changed files:
texts:Make it easier for users to view UIMA JavaDocs from Eclipse
Adding source jars to our distribution will make programming against our APIs a lot more convenient.
issueID:UIMA-4990
type:Bug
changed files:
texts:DUCC&#39;s all_in_one fails with UIMA 2.8.1
AllInOne serializes & deserializes the CAS to emulate the JD/JP communication, but it's unnecessary use of the XmiSerializationSharedData object causes an obscure RunTime exception: Error classifying FS type.For some reason this works with UIMA 2.6.0 but not 2.8.1
issueID:UIMA-4992
type:Bug
changed files:
texts:UIMA DUCC: modify agent to fetch cgroup location from /proc/mounts
Modify agent to dynamically fetch location of cgroups from /proc/mounts. The static location defined in ducc.properties does not work across all flavors of linux or even the same flavor but different version. Remove configuration property ducc.agent.launcher.cgroups.basedir
issueID:UIMA-4993
type:Bug
changed files:
texts:UIMA DUCC: agent uses wrong command to create cgroups
Agent uses an incorrect command to create cgroups. Current code does this:cgcreate -a ducc -t ducc -g memory,cpu:ducc/newcontainerinstead it should be :cgcreate -a ducc:ducc -t ducc:ducc -g memory,cpu:ducc/newcontainerThe above fixes what previously was thought to be an error in cg utils where the cgcreate return error code 96 even though cgroup creation was successful.
issueID:UIMA-4994
type:Bug
changed files:
texts:Some DUCC administration scripts do not handle errors well
If ducc_post_install fails creating the database rerunning it doesn't help.ducc_post_install and build_duccling must be run from the admin folder but don't enforce it.For safety should require start_ducc & stop_ducc to be run from the head node
issueID:UIMA-4995
type:Bug
changed files:
texts:Service ping interface fails to restart a single service instance
The pinger interfaces supports stopping specific service instances and starting additional service instances. However, if a single service instance is running the instruction to delete the instance and replace with a new one is either ignored (when autostart=true) or entirely stopped (when autostart=false).
issueID:UIMA-4996
type:Bug
changed files:
texts:DUCC DB does not shutdown when using Java 1.8 (IBM)
The recommended procedure is "kill -15" which makes the DB shutdown cleanly.  With IBM Java 1.8 the process hangs and the last message is:Waiting for messaging service to quiesce
issueID:UIMA-4997
type:Bug
changed files:
texts:DUCC scripts rm_reconfigure and vary_on/off fail with the new ActiveMQ
Packages now need to be whitelisted
issueID:UIMA-4998
type:Bug
changed files:
texts:SimplePipeline.iteratePipeline doesn&#39;t call typeSystemInit on readers (uimaFIT 2.2.0)
Looks like typeSystemInit doesn't called when using SimplePipeline.iteratePipeline or when using JCasIterable.This was already fixed for SimplePipeline.runPipeline: http://svn.apache.org/r1446505
issueID:UIMA-5
type:Task
changed files:
texts:re-organize docbook project and update ant build scripts
Re-organize docbook project:1) not a Java project - no need for java builder / bin dir, etc.2) fix build to unzip docbook xml/xsl files once, into non-target spot.3) <Dropped- not important> share images with html and single-html - change build to move to shared spot one up in dir tree.4) fix file subtree organization to fit xml build script conventions (get rid of uima/docbook, use docbook/uima instead)
issueID:UIMA-500
type:Improvement
changed files:uimaj-core/src/main/java/org/apache/uima/cas/impl/TypeSystemImpl.java
texts:Reduce excessive synch lock contention caused by calls to ll_isValidTypeCode that are not needed
User reports slowdown as the number of threads are increased; traced to lock contention in Vector.get() method; call trace is:XmiCasSerializer$XmiCasDocSerializer.<many places>CASImpl.ll_getTypeClass(int)TypeSystemImpl.subsumes(int, int)TypeSystemImpl.ll_subsumes(int, int)TypeSystemImpl.ll_isArrayType(int)TypeSystemImpl.ll_isValidTypeCode(int)    <<< Not neededSymbolTable.getSymbol(int)Vector.get(int)The callers of ll_isValidTypeCode include this caller and another (ll_getStringSet), where the call can be omitted without affecting the returned value.
issueID:UIMA-5000
type:Improvement
changed files:
texts:DUCC properties flag to disable use of ssh for "remote" daemons control
For uima-ducc-vm.apache.org the use of ssh is discouraged (ok, prohibited).  Nominally, DUCC start_sim and stop_sim employ ssh even when host is local for simulated nodes.We introduce a new flag ducc.ssh in ducc.properties which when not present or true uses ssh as usual, but when false (for a single system test or demo cluster) bypasses use of ssh and issues commands directly.
issueID:UIMA-5001
type:Improvement
changed files:
texts:DUCC properties flag to disable use of ssh for "remote" daemons control
For uima-ducc-vm.apache.org the use of ssh is discouraged (ok, prohibited).  Nominally, DUCC start_sim and stop_sim employ ssh even when host is local for simulated nodes.We introduce a new flag ducc.ssh in ducc.properties which when not present or true uses ssh as usual, but when false (for a single system test or demo cluster) bypasses use of ssh and issues commands directly.
issueID:UIMA-5002
type:Bug
changed files:
texts:Custom DUCC pingers may want to use a different JDK
Currently custom pingers are launched with the JDK used for DUCC daemons ... if they need a newer/different one then we could check for a JAVA_HOME environment variable
issueID:UIMA-5003
type:Bug
changed files:
texts:The internal broker used by DD jobs creates many log4j exceptions
The JP launches the internal broker with an AMQ-only classpath but the user's log4j configuration file may reference classes that are only on the user's classpath ... and so will fail to create many of the loggers and generate many errors.
issueID:UIMA-5004
type:Bug
changed files:
texts:A junit test fails with Java 8
Header on a serialized CAS has different ordering.
issueID:UIMA-5007
type:Bug
changed files:
texts:Jobs using Java7 fail if DUCC uses Java8
Caused when Java7 deserializes a ConcurrentHashMap created by Java8.
issueID:UIMA-5009
type:Bug
changed files:
texts:Agent cannot access ducc_get_process_swap_usage.sh
Needs to be moved back to bin as is invoked as the user
issueID:UIMA-501
type:Improvement
changed files:
texts:Cas Editor: Finish the about dialog

issueID:UIMA-5011
type:Bug
changed files:
texts:Permissions of dd2spring.xsl are wrong
Needs to be readable by all.
issueID:UIMA-5013
type:Bug
changed files:
texts:Ruta: wildcard skips very first annotation at document start
Ruta: wildcard skips very first annotation at document start
issueID:UIMA-5014
type:Task
changed files:
texts:uimaj - change next release version to 2.9.0 from 2.8.2
Semantic versioning fails because we introduce a new error message.  I'm not sure that qualifies, but the rules say that violates the increment-the-3rd-digit policy.Also, we'll be releasing a bug fix for binary delta cas serialization which produces an incompatible serialized form not readable by old uima versions.  This will most likely be completely hidden by an update to uima-as, but is another reason to bump the middle number.  See UIMA-4743Now, there is also a new utils class CasIOUtils with public methods/interfaces, which also violates the enforcer rule. With the help of this class, new functionality is introduced in the CAS Editor: enough reasons to make a minor release instead of a bugfix one.
issueID:UIMA-5015
type:Improvement
changed files:
texts:Improve performance measurements reporting
RunRemoteAsyncAE is a sample code driver that is used to drive a UIMA-AS service. Two improvements added for this issue are:1. For the -log option, add another column to disambiguate the time the driver sends a CAS from the time the CAS begins processing in the service. Also the "duration" column should not include queuing time.2. UIMA-AS process replies include a performance breakdown per primitive annotator in the service. Add a -perf option to log that information.
issueID:UIMA-5016
type:Improvement
changed files:
texts:Ruta: add more documentation for annotation variables
Ruta: add more documentation for annotation variables
issueID:UIMA-5017
type:New Feature
changed files:uimaj-core/src/main/java/org/apache/uima/cas/SerialFormat.java
uimaj-core/src/main/java/org/apache/uima/util/CasIOUtils.java
texts:Ruta: launch configuration should work with all uima serialization formats
Ruta: launch configuration should work with all uima serialization formats. Add some preference for the default CAS format.
issueID:UIMA-5018
type:Bug
changed files:
texts:Typo in docs re Log4jLogger_impl
Has extra <brackets>
issueID:UIMA-5019
type:Task
changed files:
texts:Ruta: make sure that the workbench works with Eclipse Neon
Ruta: make sure that the workbench works with Eclipse Neon
issueID:UIMA-502
type:Improvement
changed files:
texts:Cas Editor: Add a splash screen

issueID:UIMA-5020
type:Bug
changed files:
texts:Ruta: descriptor build created empty import for included type system
Ruta: descriptor build created empty import for included type system
issueID:UIMA-5021
type:Bug
changed files:uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/DocumentUimaImpl.java
texts:Cas Editor cannot import imported type system from classpath of selected type system
Cas Editor cannot import imported type system from classpath of selected type system
issueID:UIMA-5022
type:Bug
changed files:
texts:Some Dd2Spring errors are lost and confusing
When dd2spring cannot resolve an import-by-name it returns an error message that is interpreted as a relative file name which produces a strange message such as:  FODC0005: java.io.FileNotFoundException:  /users10/ducc/apache_ducc_runtime/apache-uima/bin/ERROR converting import by name to  absolute path (No such file or directory)Also some Saxon errors (e.g. cannot access file) are lost when the Transform class exits before the calling code can log them.
issueID:UIMA-5023
type:Bug
changed files:
texts:UIMA-AS: Spring context file not cleaned up on deployment failure
UIMA_Service uses Dd2spring.java to process deployment descriptor and to generate Spring context file used for service deployment. Once the deployment happens (good or failed) the context file is no longer needed. These files are generated in OS specific temp directory. The bug is that the code only deletes the context file if the deployment succeeds. On deploy error, the code calls System.exit() and does not remove temp files it generated.
issueID:UIMA-5024
type:Bug
changed files:
texts:Simple bug in SimpleNamedResourceManager
The method getFieldValue(Object, String) needs to be altered to usegetDeclaredField because ResourceRegistration is now protected due tohttps://issues.apache.org/jira/browse/UIMA-2102https://github.com/apache/uima-uimafit/blob/trunk/uimafit-core/src/main/java/org/apache/uima/fit/util/SimpleNamedResourceManager.java#L204User report: https://lists.apache.org/thread.html/b4f1df20acd7d13ba95a5aca6460a69ba53f0441250443bdf498770d@%3Cdev.uima.apache.org%3ENeeds to be fixed in such a way that it also still works with older UIMA core versions.
issueID:UIMA-5025
type:Bug
changed files:
texts:Wrong error message when parameter name constant is not found
Wrong error message when parameter name constant is not found. The message should state that the constant was "not found".
issueID:UIMA-5026
type:Task
changed files:
texts:Ruta: remove ruta document type
Ruta: remove ruta document type : org.apache.uima.ruta.type.Document
issueID:UIMA-5027
type:New Feature
changed files:
texts:Ruta: make configuration parameter optional/deprecated
Ruta: make configuration parameter optional/deprecated: additionalScripts, additionalEngines... all that are parsed from the script anyway. They need to be set only for the root level but not for imported scripts.
issueID:UIMA-5028
type:Task
changed files:
texts:Ruta: all cover classes but RutaBasic should be generated by jcasgen
Ruta: all cover classes but RutaBasic should be generated by jcasgen
issueID:UIMA-5029
type:Task
changed files:
texts:Ruta: remove configuration parameter for engine loaders
Ruta: remove configuration parameter for engine loaders
issueID:UIMA-503
type:Improvement
changed files:
texts:Cas Editor: Add support for XMI files

issueID:UIMA-5030
type:Sub-task
changed files:uimaj-core/src/main/java/org/apache/uima/cas/impl/FsIndex_bag.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FsGeneratorArray.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/MethodHandlesLookup.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FSIndexRepositoryImpl.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/TypeImpl_array.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/TOP.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/Id2FS.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FsIterator_bag_pear.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/TypeSystemImpl.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FsIndex_set_sorted.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FsIterator_bag.java
uimaj-core/src/main/java/org/apache/uima/jcas/impl/JCasHashMap.java
uimaj-core/src/main/java/org/apache/uima/internal/util/UIMAClassLoader.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FsIterator_set_sorted_pear.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/CASImpl.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/TypeImpl.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FeatureStructureImplC.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/FSArray.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FSClassRegistry.java
uimaj-core/src/main/java/org/apache/uima/jcas/impl/JCasHashMapSubMap.java
texts:UV3 Pear Support
Pear support for UV3 is based on the concept of a variant of main Java Feature Structure class, indicated by a bit in the _flags.  The variant used for Pears (called trampoline), when there is a different JCas cover class for a type (due to the PEAR having a different classpath for loading these), the variant instance is constructed like a normal one except for the flag setting and for not having its own int/Object arrays for features; instead it shares those with the base feature structure instance. We use similar mechanisms as in V2 to manage this.  To locate the trampoline we use the same jcas hash map mechanism as in V2, and switch in and out various instances of those maps as pear boundaries are crossed (same as in V2).
issueID:UIMA-5033
type:New Feature
changed files:
texts:Ruta: UNMARK with annotation expression
Ruta: UNMARK with annotation expression
issueID:UIMA-5034
type:Improvement
changed files:
texts:Add support for language capabilities
Add support for a `LanguageCapability` annotation.
issueID:UIMA-5035
type:Improvement
changed files:
texts:Add support for mime type capabilities
Add support for a `MimeTypeCapability` annotation.
issueID:UIMA-5037
type:Bug
changed files:
texts:UIMA-DUCC: Agent not reporting child process GC sometimes
Looks like another race in agent process metrics gathering. This time, for some processes the garbage collection metrics are missing. An agent collects these by connecting to a remote process using jmx and querring the MBean server. Looking at the agent's log it appears that the class responsible for GC metrics gathering is initialized before the remote process sends its first status update which includes jmx connect string. If the jmx string is missing at the time of class initialization, GC metrics are not collected.
issueID:UIMA-5038
type:Improvement
changed files:uimaj-core/src/main/java/org/apache/uima/resource/ResourceManager.java
uimaj-core/src/main/java/org/apache/uima/resource/impl/ResourceManager_impl.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/asb/impl/FlowControllerContainer.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/impl/PrimitiveAnalysisEngine_impl.java
uimaj-core/src/main/java/org/apache/uima/resource/Resource_ImplBase.java
uimaj-core/src/main/java/org/apache/uima/impl/CasConsumerFactory_impl.java
uimaj-core/src/main/java/org/apache/uima/impl/CasInitializerFactory_impl.java
uimaj-core/src/main/java/org/apache/uima/impl/CollectionReaderFactory_impl.java
uimaj-core/src/main/java/org/apache/uima/impl/ResourceSpecifierFactory_impl.java
uimaj-core/src/main/java/org/apache/uima/resource/impl/ResourceManager_impl.java
texts:UV3 refactor class loading for consistency / maintainability
There are 4 main places the UIMA framework loads classes: the Framework itself at startup, Resources, Annotators (a kind of resource) and JCas Classes.  The last 3 can make use of UIMA extension class loaders, or PEAR isolation class loaders.Refactor the code to have these where possible use common code.One issue to confirm: the current code uses 2 methods for loading classes:Class.forName and classloader.loadClass.  The Class.forName has a variant which takes 3 arguments, making it functionally equivalent to the loadClass.  But its operation is subtly different in that it caches the reference to the loaded class, even if it isn't the defining class loader, whereas loadClass doesn't do this.  See http://blog.bjhargrave.com/2007/09/classforname-caches-defined-class-in.html for a discussion of this, and the comments for a reply from Oracle tech support saying:Applications should basically never call Classloader.loadClass(). It may appear to work but it is often subtly wrong, can be a source of latent bugs, and is almost never the best choice. They should instead call Class.forName() using the 3 parameter version that takes a specific Classloader instance.Our current code always (I think) uses Class.forName for the case where there is no UIMA class loader, and loadClass otherwise.  I think this would cause failures in an OSGi loading scenario, where one of the parent loaders was an OSGi loader and it dynamically switched its "parent".  The expectation would be that the child loader (the UIMA class loader), the next time it was called to load something not in its set of classes, would delegate to the parent chain and the OSGi loader would now load from whatever was it's current "parent".  But instead, because the UIMA loader would have "cached" the class, it would instead be stuck getting the old class forever (unless the old class was eventually GC'd)  Therefore, I think to work properly in this scenario, we must always use loadClass, and never Class.forName.  The one known issue of loading named arrays doesn't arise in our case, unless from some highly usual user code, and we can catch this and use Class.forName in this instance.
issueID:UIMA-5039
type:Bug
changed files:
texts:Language and mimetype capabilities only added if type/sofa capabilities present
Language and mimetype capabilities only added if type/sofa capabilities present
issueID:UIMA-504
type:Improvement
changed files:
texts:Cas Editor: Cas Processors should synchronize with editors

issueID:UIMA-5040
type:Bug
changed files:
texts:UIMA-AS: when service terminates it exits with exit code=1 instead of 0
When UIMA-AS service terminates due to error handling threshold being met, it logs that the service exits with exit(0), The code however forces shutdown with exit(1). Modify code to shutdown with exit(0). This should be a "normal" or expected shutdown since it is explicitly specified in error handling so 0 seems like more appropriate value.
issueID:UIMA-5041
type:Bug
changed files:uimaj-json/src/main/java/org/apache/uima/json/JsonCasSerializer.java
uimaj-json/src/main/java/org/apache/uima/json/JsonCasSerializer.java
texts:JsonCasSerializer creates duplicate shortname
Our type system includes a type named "com.intersys.uima.annotation.iknow.TOP", which inherits directly from "uima.cas.TOP" and then has a number of subtypes specific to our AE. When serializing this through the JsonCasSerializer, it generates the shortname TOP twice:{"_context":   {"_types": [    ...    "TOP": {"_id":"com.intersys.uima.annotation.iknow.TOP",                 "_subtypes":["Entity","ProximityScore"]},    "TOP": {"_id":"uima.cas.TOP",                 "_subtypes":["TOP","AnnotationBase","ArrayBase","Sofa"]},    ...]  }}While we can work around this by renaming our top type, the documentation explicitly states this shouldn't pose a problem and shortnames would be de-duplicated automatically:https://uima.apache.org/d/uimaj-2.8.1/references.html#ugr.ref.json.overview Section 9.2.2:In the _types section, the key (e.g. "Sofa" or "A_Typical_User_or_built_in_Type") is the "short" name for the type used in the serialization. It is either just the last segment of the full type name (e.g. for the type x.y.z.TypeName, it's TypeName), or, if name would collide with another type name if just the last segment was used (example: some.package.cname.Foo, and some.other.package.cname.Foo), then the key is made up of the next-to-last segment, with an optional suffixed incrementing integer in case of collisions on that name, a colon ( and then the last name.I see there are unit test checking for this, but maybe it's because uima.cas.TOP is sort of a special case? Or because neither uima.cas.TOP nor our custom TOP is actually used directly (only subtypes are). So before I go ahead and change our root type name, I'd like to make sure this isn't something the framework should have taken care of itself.
issueID:UIMA-5042
type:Bug
changed files:
texts:UIMA-AS: org.xml.sax.SAXParseException thrown when parsing DD
When calling uimaAsynchronousEngine.deploy(asDeploymentDescriptorFile.getPath(), appCtx)the dd2spring throws an exception with this stack trace:Caused by: org.xml.sax.SAXParseException; lineNumber: 30; columnNumber: 29; Attribut "scope" muss für Elementtyp "bean" deklariert werden.        at com.sun.org.apache.xerces.internal.util.ErrorHandlerWrapper.createSAXParseException(ErrorHandlerWrapper.java:198)        at com.sun.org.apache.xerces.internal.util.ErrorHandlerWrapper.error(ErrorHandlerWrapper.java:134)        at com.sun.org.apache.xerces.internal.impl.XMLErrorReporter.reportError(XMLErrorReporter.java:437)        at com.sun.org.apache.xerces.internal.impl.XMLErrorReporter.reportError(XMLErrorReporter.java:368)        at com.sun.org.apache.xerces.internal.impl.XMLErrorReporter.reportError(XMLErrorReporter.java:325)        at com.sun.org.apache.xerces.internal.impl.dtd.XMLDTDValidator.addDTDDefaultAttrsAndValidate(XMLDTDValidator.java:1253)        at com.sun.org.apache.xerces.internal.impl.dtd.XMLDTDValidator.handleStartElement(XMLDTDValidator.java:1917)        at com.sun.org.apache.xerces.internal.impl.dtd.XMLDTDValidator.emptyElement(XMLDTDValidator.java:763)        at com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl.scanStartElement(XMLDocumentFragmentScannerImpl.java:1343)        at com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl$FragmentContentDriver.next(XMLDocumentFragmentScannerImpl.java:2786)        at com.sun.org.apache.xerces.internal.impl.XMLDocumentScannerImpl.next(XMLDocumentScannerImpl.java:606)        at com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl.scanDocument(XMLDocumentFragmentScannerImpl.java:510)        at com.sun.org.apache.xerces.internal.parsers.XML11Configuration.parse(XML11Configuration.java:848)        at com.sun.org.apache.xerces.internal.parsers.XML11Configuration.parse(XML11Configuration.java:777)        at com.sun.org.apache.xerces.internal.parsers.XMLParser.parse(XMLParser.java:141)        at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(DOMParser.java:243)        at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(DocumentBuilderImpl.java:347)        at org.springframework.beans.factory.xml.DefaultDocumentLoader.loadDocument(DefaultDocumentLoader.java:76)        at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.doLoadDocument(XmlBeanDefinitionReader.java:428)        at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.doLoadBeanDefinitions(XmlBeanDefinitionReader.java:390)        ... 52 moreit appears that dd2spring.xsl uses an outdated dtd. Instead of using<xsl:output method="xml" indent="yes"    doctype-public="-//Spring//DTD BEAN//EN"    doctype-system="http://www.springframework.org/dtd/spring-beans.dtd"     />use this<xsl:output method="xml" indent="yes"    doctype-public="-//Spring//DTD BEAN 2.0//EN"doctype-system="http://www.springframework.org/dtd/spring-beans-2.0.dtd"    />Note the spring-beans-2.0.dtd
issueID:UIMA-5043
type:Improvement
changed files:uimaj-core/src/main/java/org/apache/uima/UimaContextHolder.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/asb/impl/FlowControllerContainer.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/impl/AggregateAnalysisEngine_impl.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/impl/PrimitiveAnalysisEngine_impl.java
uimaj-core/src/main/java/org/apache/uima/resource/Resource_ImplBase.java
uimaj-core/src/main/java/org/apache/uima/resource/impl/FileResourceSpecifier_impl.java
uimaj-core/src/main/java/org/apache/uima/resource/metadata/impl/Import_impl.java
uimaj-core/src/main/java/org/apache/uima/resource/metadata/impl/MetaDataObject_impl.java
uimaj-core/src/main/java/org/apache/uima/UimaContext.java
uimaj-core/src/main/java/org/apache/uima/impl/UimaContext_ImplBase.java
uimaj-core/src/main/java/org/apache/uima/ResourceSpecifierFactory.java
uimaj-core/src/main/java/org/apache/uima/UimaContext.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/asb/impl/FlowControllerContainer.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/impl/PrimitiveAnalysisEngine_impl.java
uimaj-core/src/main/java/org/apache/uima/impl/ResourceSpecifierFactory_impl.java
uimaj-core/src/main/java/org/apache/uima/impl/UimaContext_ImplBase.java
uimaj-core/src/main/java/org/apache/uima/resource/ResourceConfigurationException.java
uimaj-core/src/main/java/org/apache/uima/resource/ResourceManager.java
uimaj-core/src/main/java/org/apache/uima/resource/Resource_ImplBase.java
uimaj-core/src/main/java/org/apache/uima/resource/impl/ConfigurationManager_impl.java
uimaj-core/src/main/java/org/apache/uima/resource/metadata/impl/FsIndexCollection_impl.java
uimaj-core/src/main/java/org/apache/uima/resource/metadata/impl/Import_impl.java
uimaj-core/src/main/java/org/apache/uima/resource/metadata/impl/TypePriorities_impl.java
uimaj-core/src/main/java/org/apache/uima/resource/metadata/impl/TypeSystemDescription_impl.java
uimaj-core/src/main/java/org/apache/uima/util/Settings.java
uimaj-core/src/main/java/org/apache/uima/util/impl/Settings_impl.java
uimaj-core/src/main/java/org/apache/uima/util/impl/XMLParser_impl.java
uimaj-core/src/main/java/org/apache/uima/UimaContextHolder.java
uimaj-core/src/main/java/org/apache/uima/UimaContext.java
uimaj-core/src/main/java/org/apache/uima/impl/UimaContext_ImplBase.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/asb/impl/FlowControllerContainer.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/impl/PrimitiveAnalysisEngine_impl.java
uimaj-core/src/main/java/org/apache/uima/resource/ResourceManager.java
uimaj-core/src/main/java/org/apache/uima/resource/metadata/impl/FsIndexCollection_impl.java
uimaj-core/src/main/java/org/apache/uima/resource/metadata/impl/TypePriorities_impl.java
uimaj-core/src/main/java/org/apache/uima/resource/metadata/impl/TypeSystemDescription_impl.java
uimaj-core/src/main/java/org/apache/uima/resource/Resource_ImplBase.java
uimaj-core/src/main/java/org/apache/uima/ResourceSpecifierFactory.java
uimaj-core/src/main/java/org/apache/uima/UimaContext.java
uimaj-core/src/main/java/org/apache/uima/UimaContextHolder.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/asb/impl/FlowControllerContainer.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/impl/PrimitiveAnalysisEngine_impl.java
uimaj-core/src/main/java/org/apache/uima/impl/ResourceSpecifierFactory_impl.java
uimaj-core/src/main/java/org/apache/uima/impl/UimaContext_ImplBase.java
uimaj-core/src/main/java/org/apache/uima/resource/ResourceConfigurationException.java
uimaj-core/src/main/java/org/apache/uima/resource/impl/ConfigurationManager_impl.java
uimaj-core/src/main/java/org/apache/uima/resource/metadata/impl/Import_impl.java
uimaj-core/src/main/java/org/apache/uima/util/Settings.java
uimaj-core/src/main/java/org/apache/uima/util/impl/Settings_impl.java
uimaj-core/src/main/java/org/apache/uima/util/impl/XMLParser_impl.java
texts:Provide method to access individual external override settings
The framework loads the external override settings and uses them in any configuration parameter that has an external override name attached,  Users have asked for the ability to access these values directly without the indirection of configuration parameter entries in descriptors.  Currently the complete Settings object that holds all the external override settings loaded by the framework is accessible via UimaContextAdmin.An improvement would be to allow individual values to be read using a method in the UimaContext interface, perhaps: String getExternalOverride(String name)String[] getExternalOverrideArray{String name)
issueID:UIMA-5044
type:Bug
changed files:
texts:Ruta: NPE for window caused by getAnnotationsByTypeInContext
Ruta: NPE for window caused by getAnnotationsByTypeInContext. Introduced by latest changes for using feature expressions as annotation expressions.
issueID:UIMA-5045
type:Bug
changed files:
texts:-uimaEeDebug Flag is not considered in BaseUIMAAsynchronousEngine_impl
The -uimaEeDebug flag should prevent the deletion of the springContext file. This works inside the Dd2Spring class, but the BaseUIMAAsynchronousEngine_impl does not consider this flag and callsdisposeContextFiles(springContextFiles) in line 892 anyway, therefor the context file is always deleted and debugging is only possible with breakpoints.
issueID:UIMA-5046
type:Improvement
changed files:
texts:Faster indexCovered implementation
CasUtil.indexCovered() currently uses a quite naive approach of going over all of the covering candidate annotations and calling selectCovered for each of them. This can be done smarter by iterating simultaneously over the covering and covered type while maintaining a memory in which only the potentially covering annotations are maintained and compared against the covered annotations. Any annotation of the covering type can be purged from this memory once it cannot match any covering annotation anymore. This approach exploits the sort order inherent in the annotation index.
issueID:UIMA-5047
type:Improvement
changed files:
texts:UIMA-DUCC: refactor agent code which gathers node and process metrics
Currently agent fetches metrics from different sources including /proc file system, top, ps, etc. The files found in /proc file system don't have fixed structure across Linux platforms causing some metrics to be missing or be wrong. Also scrapping lnx commands may not be 100% reliable as wellChange the code to fetch CPU metrics from cgroups. For reporting the CPU, the agent needs to look at cgroups cpuacct.stat file.Agent will collect process CPU usage when      a) cgroups  are ON.        b) cgroups accounting is configured in cgconfig    Agent publishes -1 ( read: N/A) if cgroups are OFF or accounting is OFF.Agent will:     a) fetch the CPU from cgroups accounting as a sum of CPU spent in both user and system mode.          These are separately maintained counts in cgroups.     b) agent should publish delta (subtracting current from previous reading)Agent will continue to include two CPU values as part of its inventory publication:     1) Total CPU used by a process from the time it started. This value is used by the webserver to show CPU usage when a process terminates.    2) "Current" CPU used be a process. This is a delta computed as described in 2c above. This value is shown by the webserver while the process is running.
issueID:UIMA-5048
type:Bug
changed files:
texts:DUCC Orchestrator (OR) record Process Manager (PM) Job CommandLine requests
On uima-ducc-demo we saw one Job that caused PM to OOM.  According to the PM log, the request for Job 784 from PM to Orchestrator to fetch the CommandLine (comprising the CLASSPATH) resulted in the unexpected value of null.1. Put more logging code into OR to better understand why a null value was returned to PM2. PM should prevent such Jobs Processes from launching, since there is no command line3. Increase PM's -Xmx on uima-ducc-demo from 150M to 200M (same as SM and WS)
issueID:UIMA-5049
type:Bug
changed files:
texts:uima-ducc-demo adjustments
Add the follow flags to DUCC daemons:-XX:+HeapDumpOnOutOfMemoryError-XX:HeapDumpPath=/home/duccy/dump
issueID:UIMA-505
type:Bug
changed files:
texts:Cas Editor: Hide unwanted org.eclipse.ui.ide extensions
The org.eclipse.ui.ide plugin adds many extensions to the Cas Editor. Many of these extenionsdo not make sense e.g "Convert Line Delimiters" in the file menu.Unwanted extensions should be deactivated.Here is explained how it should be done:http://wiki.eclipse.org/Product_Customization?
issueID:UIMA-5050
type:Bug
changed files:
texts:IndexCorruptionReportingTest fails in Eclipse
IndexCorruptionReportingTest fails in Eclipse when all tests in uimaj-core are executed at once. When it runs in Maven or in isolation, it works. This is probably because surefire runs tests classes in forked JVMs so system properties do not leak between tests. Probably some other test sets IS_THROW_EXCEPTION_CORRUPT_INDEX and doesn't restore the property to its original state after executing.org.apache.uima.UIMARuntimeException: Illegal update of indexed Feature Structure feature used as an key in one or more indices at org.apache.uima.cas.impl.CASImpl.featModWhileInIndexReport(CASImpl.java:3692) at org.apache.uima.cas.impl.CASImpl.checkForInvalidFeatureSetting(CASImpl.java:3670) at org.apache.uima.cas.impl.CASImpl.setFeatureValue(CASImpl.java:2245) at org.apache.uima.cas.impl.CASImpl.ll_setIntValue(CASImpl.java:3837) at org.apache.uima.jcas.tcas.Annotation.setBegin(Annotation.java:78) at org.apache.uima.cas.impl.IndexCorruptionReportingTest.testReport(IndexCorruptionReportingTest.java:78) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:606) at junit.framework.TestCase.runTest(TestCase.java:154) at junit.framework.TestCase.runBare(TestCase.java:127) at junit.framework.TestResult$1.protect(TestResult.java:106) at junit.framework.TestResult.runProtected(TestResult.java:124) at junit.framework.TestResult.run(TestResult.java:109) at junit.framework.TestCase.run(TestCase.java:118) at junit.framework.TestSuite.runTest(TestSuite.java:208) at junit.framework.TestSuite.run(TestSuite.java:203) at org.eclipse.jdt.internal.junit.runner.junit3.JUnit3TestReference.run(JUnit3TestReference.java:131) at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38) at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:459) at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:675) at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:382) at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:192)
issueID:UIMA-5051
type:Improvement
changed files:
texts:Deprecate uimaFIT CasIOUtil in favor of uimaj-core CasIOUtils
Deprecate uimaFIT CasIOUtil in favor of uimaj-core CasIOUtils. The signatures are not the same, but the functionality is covered.
issueID:UIMA-5052
type:Bug
changed files:
texts:DUCC check_ducc should complain if ssh is not viable
check_ducc carries on even when the required ssh is not working as expected, e.g. the keys for passwordless ssh have not been set-up.
issueID:UIMA-5053
type:Bug
changed files:
texts:DUCC ducc_watcher optional admin script to determine status and send notifications
Justification: to complement the WS system daemons page, it would be useful for DUCC administrators to receive email notifications when significant status changes occur, such as head node daemon(s) down.
issueID:UIMA-5054
type:Bug
changed files:
texts:JCas returning generic class instead of JCas cover class
A DKPro Core user reported that when deploying an AE in a CPE he was unable to access a JCas cover class in the entityProcessComplete(...) CPE callback. See: https://groups.google.com/d/msg/dkpro-core-user/-DtO5Ivnk9I/sjQAPPv1BwAJ        public void entityProcessComplete(CAS cas, EntityProcessStatus status) {            try {                JCas jcas = cas.getJCas();                // here getting a JCas cover class fails. Instead,                // an AnnotationImpl is returned from the jcas.            } catch (CASException e) {                e.printStackTrace();            }        }The problem appears to be that the static CAS classloaders are restoredbefore invoking the entityProcessComplete() callback (CPMEngine 3468):      try {        if (null != cas)          ((CASImpl)cas).switchClassLoaderLockCas(statCL);        statCL.entityProcessComplete(cas, eps);      } finally {        if (null != cas)           ((CASImpl)cas).restoreClassLoaderUnlockCas();      }Is there any reason that the classloaders are switched out before invoking the callback? If not, any objection if I change the code such that the callback is invoked before the classloaders are switched out?Thread [[Procesing Pipeline#7 Thread]::] (Suspended (breakpoint at line 1021 in CASImpl))  CASImpl.setLocalFsGenerators(FSGenerator<FeatureStructure>[]) line: 1021  FSClassRegistry.swapInGeneratorsForClassLoader(ClassLoader, CASImpl) line: 225  JCasImpl.switchClassLoader(ClassLoader) line: 548  CASImpl.switchClassLoader(ClassLoader) line: 4195  CASImpl.switchClassLoaderLockCasCL(ClassLoader) line: 4183  CASImpl.switchClassLoaderLockCas(Object) line: 4176  CPMEngine.callEntityProcessCompleteWithCAS(StatusCallbackListener, CAS, EntityProcessStatus) line: 3472  ProcessingUnit.doNotifyListeners(Object, boolean, EntityProcessStatus) line: 1650  ProcessingUnit.notifyListeners(Object, boolean, EntityProcessStatus) line: 1592  ProcessingUnit.processNext(Object[], ProcessTrace) line: 917  ProcessingUnit.run() line: 575
issueID:UIMA-5055
type:Bug
changed files:uimaj-core/src/main/java/org/apache/uima/cas/impl/CASImpl.java
uimaj-core/src/main/java/org/apache/uima/jcas/impl/JCasImpl.java
texts:JCas not always initialized
JCas classes are loaded lazily on the first switch of the CAS to the JCas format.JCas support includes support for nested JCas class loading contexts, which can be established either by setting the UIMA Extension class loader when a pipeline is instantiated, and/or by entering a Pear (which establishes its own classpath for use within the Pear).If the first switch to JCas format occurs within an inner class loading context, when the outer class loading context is in force, the switch to JCas no longer triggers the lazy loading of the JCas classes for that class loading context (because JCas was already loaded).  This bug causes the outer class loading context to not be initialized for JCas.  See UIMA-5054 for an example where this occurred.Fix this to remember JCas initialization per class loader, or by locating all the outer classloading contexts at the time the JCas is turned on, and re-initializing these with the JCas versions of the generators (this is a non-lazy approach and may do extra work, for example, if the outer context isn't using JCas).
issueID:UIMA-5056
type:Improvement
changed files:uimaj-core/src/main/java/org/apache/uima/cas/impl/CASImpl.java
uimaj-core/src/main/java/org/apache/uima/cas/CASRuntimeException.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/CASImpl.java
uimaj-core/src/main/java/org/apache/uima/cas/CASRuntimeException.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/CASImpl.java
texts:UIMA Class loader switching design needs to support more than 2 levels
A recent Jira UIMA-5054 highlighted a potential use case not previously adequately considered: classloader - application - loads the "main" (under CL#1) main instantiates a UIMA pipeline, specifying an extension class loader (CL#2) UIMA pipeline contains a Pear, specifying its own class loader (CL#3).JCas class may be used by code loaded under any of these 3 class loaders.  In the example in UIMA-5054, a component called by the UIMA Framework was loaded under CL#1, so the framework needed to "switch" to this.  Had that component been inside a Pear, it would need to switch to CL#1 from CL#3, and then restore CL#3 when returning from the component back to the UIMA Framework.  But the current design for switching only supports 2 (not 3 or more) levels of switching / restoring.Extend this to support arbitrary levels, using some kind of a stack mechanism.  Two things need extension: support for tracking the current JCas class loader, and support that tracks the current JCasHashMap instance. After some more investigation and thought, this may not be necessary in normal cases.  This is because the initial CAS JCasLoader value is set to the loader specified when the pipeline is set up, and then only switches when calling Pears, or when calling user code in exit callbacks.  The issue came up previously because one of the exit callbacks was into code loaded by CL#1.  Even in that case, only one level of remembering (to restore the previous class loader) is needed.Other cases (somewhat convoluted) may still require a stack implementation.  One is nested Pears (not currently supported). Anyone know of other cases?  If not, I'll probably defer this for now.
issueID:UIMA-5057
type:Bug
changed files:
texts:DUCC Orchestrator (OR) handle down JD node
If a node that goes down happens to be a JD node then:1. cancel any running jobs whose JD was assigned there, and2. allocate a new JD node, if needed and possibleCurrently when the Agent hosting the JD of running Job is killed the Job hangs because the Agent is not there to carry out the Orchestrator directed clean-up procedures.
issueID:UIMA-5058
type:Bug
changed files:uimaj-core/src/main/java/org/apache/uima/resource/metadata/impl/FsIndexCollection_impl.java
uimaj-core/src/main/java/org/apache/uima/resource/metadata/impl/TypePriorities_impl.java
uimaj-core/src/main/java/org/apache/uima/resource/metadata/impl/TypeSystemDescription_impl.java
uimaj-core/src/main/java/org/apache/uima/resource/ResourceManager.java
uimaj-core/src/main/java/org/apache/uima/resource/impl/CasManager_impl.java
uimaj-core/src/main/java/org/apache/uima/resource/impl/ResourceManager_impl.java
uimaj-core/src/main/java/org/apache/uima/resource/metadata/impl/FsIndexCollection_impl.java
uimaj-core/src/main/java/org/apache/uima/resource/metadata/impl/TypePriorities_impl.java
uimaj-core/src/main/java/org/apache/uima/resource/metadata/impl/TypeSystemDescription_impl.java
uimaj-core/src/main/java/org/apache/uima/resource/ResourceManager.java
uimaj-core/src/main/java/org/apache/uima/resource/impl/CasManager_impl.java
uimaj-core/src/main/java/org/apache/uima/resource/impl/ResourceManager_impl.java
uimaj-core/src/main/java/org/apache/uima/resource/metadata/impl/FsIndexCollection_impl.java
uimaj-core/src/main/java/org/apache/uima/resource/metadata/impl/TypePriorities_impl.java
uimaj-core/src/main/java/org/apache/uima/resource/metadata/impl/TypeSystemDescription_impl.java
uimaj-core/src/main/java/org/apache/uima/resource/impl/CasManager_impl.java
texts:Scaled out pipelines can falsely trigger the error: Illegal adding of additional MetaData after CASes have been defined
When UIMA-AS scales out a synchronous UIMA pipeline it sequentially creates separate AEs in separate threads, sharing the resource manager.  Creation of the 2nd (identical) AE will fail with "Illegal adding of additional MetaData after CASes have been defined" if a descriptor imports 2 type-system files, one of which is included in the other.  The check fails to recognize that the types loaded by the 2nd AE are already in the resource manager because of the way type-systems are cached.
issueID:UIMA-5059
type:Bug
changed files:
texts:DUCC WS should compile jsps into $DUCC_HOME/tmp/ducc/jsp
If another user later tries to start DUCC the WS will fail if it can't delete that directory
issueID:UIMA-506
type:Improvement
changed files:
texts:add UIMA getting started

issueID:UIMA-5060
type:Bug
changed files:
texts:DUCC Orchestrator (OR) "warm" restart issues
Address issues pertaining to the ability to shutdown and restart the OR component without loss of active jobs or services or AP's (aka Managed Reservations).
issueID:UIMA-5061
type:Bug
changed files:
texts:Ruta: incremental partitioning does not update RutaBasic correctly
Ruta: incremental partitioning does not update RutaBasic correctly: should be empty but is not...
issueID:UIMA-5062
type:Improvement
changed files:
texts:Ruta:delegate resource manager to uimaFIT factories
Ruta:delegate resource manager to uimaFIT factories. Do not create analysis engine directly. Create the description and then also provide the resource manager for the analysis engines.
issueID:UIMA-5063
type:Bug
changed files:uimaj-core/src/main/java/org/apache/uima/cas/impl/FsIndex_annotation.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/Subiterator.java
unused-saved/src/org/apache/uima/cas/impl/AnnotationIndexImpl.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/Subiterator.java
texts:unambigious iterator incorrectly stopping after returning 1 item
User testing of 2.9.0 revealed an issue where an unambigious iterator was ending after returning the first item.  Problem traced to bug in the refactoring of the Subiterator class.
issueID:UIMA-5064
type:Improvement
changed files:
texts:uima website not secure under https
chrome browser now tells you what you need to fix to get the green-lock secure icon for your website - in our case, change the embedded search from using http://... to https://...
issueID:UIMA-5065
type:Task
changed files:
texts:broken links on website referring to uima docs at 2.3.1 version - should be current version
User reports broken links on toolsServers.html
issueID:UIMA-5066
type:Task
changed files:uimaj-core/src/main/java/org/apache/uima/resource/ResourceManager.java
uimaj-core/src/main/java/org/apache/uima/util/XmlCasDeserializer.java
uimaj-core/src/main/java/org/apache/uima/resource/metadata/impl/FsIndexCollection_impl.java
uimaj-core/src/main/java/org/apache/uima/resource/metadata/impl/TypePriorities_impl.java
uimaj-core/src/main/java/org/apache/uima/resource/metadata/impl/TypeSystemDescription_impl.java
texts:fix issues in 2.9.0 re: semantic versioning
Remove the exclude element in uimaj-parent pom for semantic versioning that should not be needed anymore.  The following issues then show up:1) exclude added classes - these have a small chance of causing backward incomatibility (they would do so if the class already existed in the users code, but this is unlikely due to the package naming conventions): CasIOUtils, CasLoadMode.2) change internal use only methods from public, remove unused ones, and remove change to Interface: XmlCasDeserializer (deserializerR, 2x), getImportUrlsCache.3) exclude change to CAS interface fixing spelling issue in FEATURE_FULL_NAME_SOFA.4) exclude changes adding error messages to CASRuntimeException and enums to SerialiFormat
issueID:UIMA-5067
type:Bug
changed files:
texts:JCasUtil.selectSingleRelative returns wrong object
The returned object of JCasUtil.selectSingleRelative() should match the generic-type of its first argument.However, when the last argument is 0, it returns an object whose class is identical to the second argument's class.for (Annotation aa : cas.getAnnotationIndex(AA.type)){   Object ab = JCasUtil.selectSingleRelative(AB.class, aa, 0);   System.out.println(ab.getClass().getName());}The output ought to be "AB", however it is "AA".(When the last argument is 0, I thought it would find an annotation which begins exactly where the annotation of the second argument begins. However, it returns a wrong object).Perhaps, if last-argument 0 is prohibited, an exception should be thrown (and documented).Thanks.
issueID:UIMA-5068
type:Bug
changed files:
texts:Ruta: false postive problems for unknown features reported in editor
Ruta: false postive problems for unknown features reported in editor. Investigating...
issueID:UIMA-5069
type:Bug
changed files:
texts:Ruta: classpath of projects neglected if started without new vm
Ruta: classpath of projects neglected if started without new vm
issueID:UIMA-507
type:Improvement
changed files:
texts:Remove ref to gutenberg.org to avoid licensing entanglement possibility
Avoid the gutenberg.org licensing requirements by removing ref to gutenberg.org
issueID:UIMA-5070
type:Bug
changed files:
texts:Ruta: classpath of maven project neglected by Workbench tooling
Ruta: classpath of maven project neglected by Workbench tooling
issueID:UIMA-5071
type:Task
changed files:
texts:Ruta: prepare 2.5.0 release
Ruta: prepare 2.5.0 release set uima version to 2.9.0 update release notes
issueID:UIMA-5072
type:New Feature
changed files:
texts:Ruta: support setting lists variables using configuration parameter
Ruta: support setting lists variables using configuration parameter
issueID:UIMA-5074
type:Bug
changed files:
texts:Ruta: strange parse error in foreach block with condition macro
Ruta: strange parse error in foreach block with condition macro: complain about wildcard... but there is none.Minimal example:CONDITION isSmall() = REGEXP(".");FOREACH(num) NUM{} {    num{isSmall()};}
issueID:UIMA-5075
type:Bug
changed files:
texts:DUCC should check that it runs with the uid of the installer
When started by root things become very messy.
issueID:UIMA-5076
type:Improvement
changed files:
texts:Respect UimaContextHolder if set
Respect the Respect UimaContextHolder (since UIMA 2.9.0) if set and re-use its resource manager instead of always creating a new one.This change is required to avoid exceptions due to nested classloaders (UIMA-5056) when uimaFIT is used to instantiated a UIMA component inside another UIMA component.
issueID:UIMA-5077
type:Improvement
changed files:
texts:Ruta: ruta-core unit test warnings
Example:Running org.apache.uima.ruta.engine.HtmlConverterTestAug 26, 2016 6:33:34 PM org.apache.uima.jcas.impl.JCasImpl getJCas(768)WARNUNG: JCas Type "org.apache.uima.ruta.type.html.U" implements getters and setters for feature "name", but the type system doesnt define that feature.JCas Type "org.apache.uima.ruta.type.html.U" implements getters and setters for feature "expandedOffsets", but the type system doesnt define that feature.JCas Type "org.apache.uima.ruta.type.html.U" implements getters and setters for feature "attributeName", but the type system doesnt define that feature.JCas Type "org.apache.uima.ruta.type.html.U" implements getters and setters for feature "attributeValue", but the type system doesnt define that feature.
issueID:UIMA-5078
type:Bug
changed files:
texts:UIMA DUCC: http dispatch code doesn&#39;t rethrow exception
The BaseHttpDispatcher.dispatchAndWaitForDuccReply() "swallows" exceptions in try .. catch(). On exception it dumps the trace using e.printStackTrace() never re-throwing it up to the caller and instead returning null. Modify to rethrow an exception and also modify all code that uses the method in question. This method is used by the CLI apparently. Modify every instance of code that calls the API and add try .. catch to handle an exception in a specific way. It looks like the method returning null is an error condition the client code considers as an error. Seems like a bad practice to me to use null as an error condition if it is caused by an exception in a generic code which dispatchAndWaitForDuccReply() in fact is. This code is also called from the PM and perhaps other places and null as a return value obfuscates the  real cause. Each client should handle an exception as appropriate.
issueID:UIMA-5079
type:Bug
changed files:
texts:DUCC Orchestrator (OR) handle no Agent Reason given for process termination
If the Agent gives the Orchestrator no reason for process termination (e.g. blank or null), then set reason to Unexplained and count the failure towards maximum number of "user" process failures permitted, rather than as a presumed "framework" failure whose number are unlimited.
issueID:UIMA-508
type:Bug
changed files:
texts:Docbook build tool - not updating the olink databases unless running the full 4-book build
The olink_work control variable isn't being set in all cases.  This used to work before the restructure/cleanup of the ant scripts.
issueID:UIMA-5080
type:Bug
changed files:
texts:DUCC uses UIMA-AS&#39;s dd2spring.xsl file which generates an obsolete dtd
Should use spring-beans-2.0.dtd which is in the spring-beans jarModify dd2spring.xsl to generate a reference to spring-beans-2.0.dtd
issueID:UIMA-5081
type:Bug
changed files:
texts:UIMA-AS: dd2spring.xsl generates spring ctx file with old style dtd reference
The dd2spring.xsl generates a spring context file from a deployment descriptor with a reference to an old dtd file. When running in a mixed mode where spring file is generated by a newer uima-as yet the uima-as runtime is old (say 2.6.0), the parsing of spring context file fails. The old spring-beans.dtd does not define scope attribute causing a runtime exception.Modify dd2spring.xsl to generate a reference to spring-beans-2.0.dtd instead of spring-beans.dtd.
issueID:UIMA-5082
type:Task
changed files:
texts:UIMA-AS: http based communication is broken due to AMQ bug
Due to https://issues.apache.org/jira/browse/AMQ-6262 the UIMA-AS http communication is broken. When a client connects to the broker using http, the brokers log starts filling up with these:WARN  Transport                      - Transport Connection to: blockingQueue_-1679375177 failed: org.apache.activemq.transport.InactivityIOException: Channel was inactive (no connection attempt made) for too (>30000) long: blockingQueue_-1679375177Change UIMA-AS pom to depend on AMQ 5.14.0 which fixes the problem.Review all dependencies in AMQ 5.14.0 to check if UIMA-AS LICENSE AND NOTICE files need updating.
issueID:UIMA-5083
type:Bug
changed files:
texts:UIMA-AS: missing JUnit test with service listener using HTTP
Add Junit test with service listeners using http instead of tcp. All HTTP testing is currently done on the client side. This new test should deploy a service and wait for more than 30 seconds which is a default keep alive wait time the AMQ uses to discover dead endpoints. With AMQ version 5.13.2 such setup causes WARN msgs in the broker's log. The problem has been fixed in AMQ 5.14.0.
issueID:UIMA-5084
type:Bug
changed files:
texts:DUCC Web Server (WS) does not reflect PM to Agent publication size on Daemons page
The PM presently makes two publications.  The first is published on a regular interval and is of constant size.  This is an aliveness indicator for Web Server (WS).The second is published only when there is something for Agent(s) to do, but its size varies depending on current Job/Reservation/Service activities.Until now, the WS only considered the first publication for display of size (last) and size (max) for PM on the Daemons page.
issueID:UIMA-5085
type:Improvement
changed files:uimaj-core/src/main/java/org/apache/uima/InternationalizedException.java
uimaj-core/src/main/java/org/apache/uima/InternationalizedRuntimeException.java
uimaj-core/src/main/java/org/apache/uima/internal/util/I18nUtil.java
uimaj-core/src/main/java/org/apache/uima/internal/util/MsgLocalizationClassLoader.java
uimaj-core/src/main/java/org/apache/uima/InternationalizedException.java
uimaj-core/src/main/java/org/apache/uima/InternationalizedRuntimeException.java
uimaj-core/src/main/java/org/apache/uima/InternationalizedRuntimeException.java
texts:add use of context class loader for msg localization for RuntimeExceptions
UIMA-4793 fixed this for InternationalizedException but missed fixing it for InternationalizedRuntimeException.  Copy the fix to the this other class.
issueID:UIMA-5086
type:Improvement
changed files:
texts:DUCC should consider slightly larger machines when reserving a whole machine
DUCC should consider machines up to <fudge> GB bigger than requested, where the fudge value is a site property,
issueID:UIMA-5088
type:Bug
changed files:
texts:UIMA-AS getmeta fails with an old http broker (the one in UIMA-AS 2.6)
May be an AMQ version incompatibility problem
issueID:UIMA-5089
type:Bug
changed files:
texts:Ruta: NPE thrown for unresolvable feature if type is not known yet
org.apache.uima.analysis_engine.AnalysisEngineProcessException: Annotatorprocessing failed.        at org.apache.uima.ruta.engine.RutaEngine.process(RutaEngine.java:497)        atorg.apache.uima.analysis_component.JCasAnnotator_ImplBase.process(JCasAnnotator_ImplBase.java:48)        atorg.apache.uima.analysis_engine.impl.PrimitiveAnalysisEngine_impl.callAnalysisComponentProcess(PrimitiveAnalysisEngine_impl.java:396)        atorg.apache.uima.analysis_engine.impl.PrimitiveAnalysisEngine_impl.processAndOutputNewCASes(PrimitiveAnalysisEngine_impl.java:314)        atorg.apache.uima.analysis_engine.impl.AnalysisEngineImplBase.process(AnalysisEngineImplBase.java:269)        atorg.apache.uima.analysis_engine.impl.AnalysisEngineImplBase.process(AnalysisEngineImplBase.java:284)        at org.apache.uima.ruta.engine.Ruta.applyRule(Ruta.java:86)        at org.apache.uima.ruta.engine.Ruta.matches(Ruta.java:273)        atorg.apache.uima.ruta.expression.annotation.AnnotationLabelExpressionTest.testWrongFeature(AnnotationLabelExpressionTest.java:309)
issueID:UIMA-5090
type:Bug
changed files:
texts:Ruta: build warning for ide parser - ResourceLiteral
warning(203): org\apache\uima\ruta\ide\core\parser\RutaParser.g:489:55: Inputsuch as "{Identifier, RessourceLiteral}" is insufficiently covered withpredicates at locations: alt 2: line 2374: at Identifier, line 2577: at Identifierwarning(200): org\apache\uima\ruta\ide\core\parser\RutaParser.g:489:55:Decision can match input such as "{Identifier, RessourceLiteral}" using multiplealternatives: 1, 2
issueID:UIMA-5091
type:Task
changed files:
texts:Ruta: pdf formatting of documentation
docbook: (not a blocker): pdf formatting in some places flows too far right onthe page, even in one case exceeding the page boundary (and therefore part ofthe line is missing) - see pdf pages 24, 25.
issueID:UIMA-5092
type:Improvement
changed files:
texts:Upgrade to UIMAJ 2.9.0
Upgrade to UIMAJ 2.9.0
issueID:UIMA-5093
type:Improvement
changed files:
texts:Upgrade to JUnit 4
UIMA is still using the ancient JUnit 3 in the core framework. Time to upgrade to JUnit 4.
issueID:UIMA-5094
type:Task
changed files:
texts:UIMA-AS: Prepare for 2.9.0 release
Update poms to 2.9.0 level, update readme, release notes, LICENSE and NOTICE as appropriate. Also upgrade to UIMA SDK 2.9.0.This release will fix two important bugs:1) AMQ 5.13.2 has regression bug prohibiting http based services from working. Fix for this is AMQ upgrade to 5.14.02) dd2spring.xsl generates reference to spring-beans.dtd which is not compatible with spring runtime resulting in exceptions when encountering scope attribute in spring context file.
issueID:UIMA-5095
type:Bug
changed files:
texts:Fix approach to get plugin image resource in UIMA-AS deploy editor
The fix to support Eclipse Neon changed the getImageDescriptor method in the TAEDescriptorEditor plugin from a static to a non-static, in order to find the bundle. Fix the users of the static method to have another way to get this resource.
issueID:UIMA-5097
type:Bug
changed files:uimaj-core/src/main/java/org/apache/uima/analysis_engine/asb/impl/FlowContainer.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/asb/impl/FlowContainer.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/asb/impl/FlowControllerContainer.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/impl/PrimitiveAnalysisEngine_impl.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/CASImpl.java
texts:Current component info on CAS not reset
uimaFIT tests re-use a single CAS which is stored in a thread-local variable and reset that CAS between unit tests. Apparently there was some change which causes the Sofa-mapping information - or more specifically the current component info from which that mapping is obtained - to not be reset anymore. The problem only appears when running all uimafit-core tests jointly in one JVM, e.g. from Eclipse.Initial hypothesis which proved to be wrong: There may be a bug that might be related to the UimaContextHolder not being cleaned up probably (probably in case of some kind of failure).The problem appears when running the uimafit-core tests in Eclipse. Here all tests run in the same JVM instance which allows "global" information like thread locals to be carried over between unit tests.Then running all tests and when the `ViewCreatorAnnotatorTest` runs before the `SimplePipelineTest`, then the deserialization of an XMI file fails because `_InitialView` is still mapped to `myView` in the UIMA context. Debugging yields that the UIMAContext in use for the SimplePipelineTest apparently still belongs to the `ViewCreatorAnnotatorTest` because the mQualifiedContextName is `/org.apache.uima.fit.component.ViewCreatorAnnotatorTest$SofaAwareAnnotator/`This hypothesis was wrong: checked it by verifying that UimaContextHolder.getContext() is null before and after each unit test.
issueID:UIMA-5098
type:Bug
changed files:
texts:DUCC Agent does not handle /bin/cgcreate failure properly on re-start when there are left over processes
Upon (re-)start of DUCC, one machine showed status as "defined" on the Machines page and "unknown" on Daemons page in ducc-mon.Examination of the Agent's log revealed:host.domain.net.agent.log:java.io.FileNotFoundException: /cgroup/ducc/327204.327204.28574/cgroup.procs (No such file or directory)Also, manually attempting to run/bin/cgcreate -t degenaro:mygroup -a degenaro:mygroup -g memory,cpu:ducc/testfailed with:/bin/cgcreate: can't create cgroup ducc/test: Cgroup, operation not allowedThis may be due to Agent attempting to clean-up processes from previous lifetime, but is unable to do so.
issueID:UIMA-51
type:Improvement
changed files:uimaj-core/src/main/java/org/apache/uima/cas/impl/XCASSerializer.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/XCASSerializer.java
texts:Add version number to XCAS (or maybe to CAS built-in typesystem?)
From version 1.x to 2.x we broke XCAS compatibility.  (v2.x can read v1.x XCASes but not vice-versa.)  We've been thinking we might want to have a version number on the XCAS so that we can detect an incompatibility and report a good error message.It occurs to me that what changed here is not the XCAS syntax, but the built-in CAS type system.  In v2.x the annotation type changed (the "sofa" feature became a reference instead of an int).  Also new primitive types and new array types were added.So perhaps the right thing to do is to have a version number on the CAS built-in type system, and dump that version number in our XCAS (and XMI) serializations.I'm not sure if it's right to just use the framework version number (which might lock us into a versioning scheme such as agreeing not to add new built-in types without incrementing the major version number), or having a completely separate version number just for the built-in type system?
issueID:UIMA-5102
type:Improvement
changed files:
texts:auto set missing AnnotationBase sofaRef feature
This Jira describes a possible approach to automatically recovering from an error condition, which might be implemented.Sometimes, the sofa feature of a FS which is a subtype of AnnotationBase is missing (is null) when the FS is being added to the indexes of some particular CAS View.  One way this can happen is during (lenient) deserialization of XMI or XCAS CASes, after some update has occurred to the type system, which changes a type from not being a subtype of AnnotationBase, to having that as a supertype.In this case (where the sofa reference is null), instead of throwing an exception, set the sofa reference to the likely proper value - the sofa that corresponds to the view it is being indexed in.  If there is no sofa for that view (unlikely but possible), throw an exception.If this recovery is done, output a diminishing frequency log message about it.
issueID:UIMA-5103
type:Bug
changed files:uimaj-core/src/main/java/org/apache/uima/cas/impl/CommonSerDes.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/CommonSerDes.java
texts:CasIOUtils save in SerialFormat COMPRESSED_FILTERED_TS broken
saving in COMPRESSED_FILTERED_TS format works, but doesn't record this in the header.  Deserialization fails.add test case for this.
issueID:UIMA-5104
type:Bug
changed files:
texts:Ruta: NPE for stringValue on annotationListExpression in AnnotationTypeExpression
Ruta: NPE for stringValue on annotationListExpression in AnnotationTypeExpression String script = "CW{-> CREATE(Struct1, \"a\" = \"1\")};\n";    script += "CW{-> CREATE(Struct1, \"a\" = \"2\")};\n";    script += "CW{-> CREATE(Struct1, \"a\" = \"3\")};\n";    script += "s:Struct1 SW{-> CREATE(Struct2, \"a\" = s)};\n";
issueID:UIMA-5105
type:Improvement
changed files:
texts:UIMA-AS: Reduce verbosity of JUnit tests
When extended tests run there are lots of messages being produced which makes reviewing tests difficult as there is so much to scroll through. Majority of these are uima-as service headers (dumped each time a service is deployed). Also, the client dumps "sending CAS..." and "received CAS..." for each CAS. Also, address fail-fast for extended tests. Currently, when tests are run, junit just continues despite an unexpected error. Test should fail immediately on first uncaught exception.
issueID:UIMA-5107
type:Bug
changed files:
texts:maven-shade-plugin sample config erroneous
In the example configuration for the Maven Shade Plugin configuration (https://uima.apache.org/d/uimafit-current/tools.uimafit.book.html#ugr.tools.uimafit.packaging), the `<outputFile>` should be specified outside the `transformers` section.
issueID:UIMA-5108
type:New Feature
changed files:
texts:Ruta: support feature structures in feature expressions
Ruta: support feature structures in feature expressions.
issueID:UIMA-5109
type:Improvement
changed files:
texts:DUCC Web Server (WS) does not display Services deployments that have Completed
DUCC WS should display Services deployments which have Completed.
issueID:UIMA-511
type:Improvement
changed files:
texts:Cas Editor: Should show all annotaions by default

issueID:UIMA-5110
type:Bug
changed files:
texts:DUCC Job Driver (JD) erroneously logs ***** TIMEOUT *****
In the JD log we see:14 Sep 2016 10:41:29,157 ERROR JD.err - T&#91;34&#93; record  seqNo=2 ***** TIMEOUT *****[B@e9a57948But this log entry is not correct.  The real problem is that the JD tried to convert the Exception object that occurred in "user space" into a string, but that fails and the JD then makes the wrong assumption that a timeout must have occurred because it finds value of null for the stringified Exception...wrong!
issueID:UIMA-5111
type:Sub-task
changed files:uimaj-core/src/main/java/org/apache/uima/cas/impl/FsIndex_set_sorted.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FsIterator_bag.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FsIndex_singletype.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FsIndex_flat.java
uimaj-core/src/main/java/org/apache/uima/internal/util/CopyOnWriteOrderedFsSet_array.java
uimaj-core/src/main/java/org/apache/uima/cas/FSIterator.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FsIndex_bag.java
unused-saved/src/org/apache/uima/jcas/impl/CASMetadata.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FsIterator_bag_pear.java
uimaj-core/src/main/java/org/apache/uima/internal/util/ObjHashSet.java
uimaj-core/src/main/java/org/apache/uima/internal/util/CopyOnWriteObjHashSet.java
uimaj-core/src/main/java/org/apache/uima/internal/util/OrderedFsSet_array.java
texts:uv3 Experiments in avoiding ConcurrentModificationException for UIMA iterators
Experiment with alternative approaches to avoid ConcurrentModificationExceptions in iterators over UIMA indexes.  Try an approach using minimal, localized copy-on-write for parts of indexes.
issueID:UIMA-5112
type:Improvement
changed files:
texts:Avoid deploying docbook module to repository
Avoid deploying docbook module to repository. There is no Java stuff in there that needs deploying.
issueID:UIMA-5113
type:Improvement
changed files:
texts:Upgrade to UIMA 2.10.0
Upgrade to UIMA 2.10.0 when it is released.
issueID:UIMA-5114
type:Bug
changed files:
texts:DUCC Web Server (WS) needs better user validation for login
A user is able to login to ducc (via ldap) as first.last.  But the actual linux userid is First.Last, and when ducc_ling tries to employ first.last the switch-to-user fails.WS could employ the command "/usr/bin/id first.last" to validate the userid before delegating to ldap.
issueID:UIMA-5115
type:New Feature
changed files:uimaj-core/src/main/java/org/apache/uima/cas/FSIndex.java
uimaj-core/src/main/java/org/apache/uima/jcas/impl/JCasImpl.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FsIndex_bag.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FsIterator_subtypes_snapshot.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FSIndexRepositoryImpl.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FsIterator_aggregation_common.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/LowLevelIterator.java
uimaj-core/src/main/java/org/apache/uima/cas/CASRuntimeException.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FsIndex_snapshot.java
uimaj-core/src/main/java/org/apache/uima/cas/CAS.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FsIterator_backwards.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FsIterator_limited.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/SelectFSs_impl.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/FSList.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FsIndex_annotation.java
uimaj-core/src/main/java/org/apache/uima/cas/SelectFSs.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FsIndex_set_sorted.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FsIterator_bag.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FsIndex_singletype.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/CASImpl.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FsIndex_iicp.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FsIndex_flat.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/FSArray.java
uimaj-core/src/main/java/org/apache/uima/cas/FSIterator.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/LowLevelIndex.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/NonEmptyFSList.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/Subiterator.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/LLUnambiguousIteratorImpl.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FSClassRegistry.java
uimaj-core/src/main/java/org/apache/uima/jcas/JCas.java
texts:uv3 select() api for iterators and streams over CAS contents
Design and implement a select() API based on uimaFIT's select, integrated well with Java 8 concepts.  Initial discussions in UIMA-1524.  Wiki with diagram: https://cwiki.apache.org/confluence/display/UIMA/UV3+Iterator+support
issueID:UIMA-5117
type:Bug
changed files:
texts:UIMA-AS: dd2spring should log at INFO
Dd2Spring.convertDd2Spring() method should log exceptions at INFO level instead of CONFIG. When runtime was mis-configured, the code was failing yet there were no exceptions being logged, making debugging difficult.Also, when exception happens in converDd2Spring() it is not being re-thrown. This causes the uima-as to continue running and trying to deploy using zero-length spring context file which results in another Exception. Modify code to re-throw Exception.
issueID:UIMA-5118
type:Bug
changed files:
texts:UIMA-AS: NPE thrown when cleaning up C++ based service
NPE is thrown from BaseUIMAAsynchronousEngine_impl.undeploy()line:      ((AnalysisEngineController) ctrer).getControllerLatch().release();when a controller is an instance of UimacppServiceController. This class returns null from getControllerLatch() causing NPE in the uima-as client which tries to clean up after processing.Add check for null before attempting call to release().
issueID:UIMA-5119
type:Bug
changed files:
texts:UIMA-AS: CPP wrapper fails with Exception on service shutdown
The UimacppServiceManagement code fails when remote C++ service terminates. The java code logs the following stack trace:> UimacppServiceManagement service reports shutdown DONE> UimacppShutdownHook sending quiesce message> java.net.SocketException: Socket is closed>         at java.net.Socket.getInputStream(Socket.java:903)>         at> org.apache.uima.aae.controller.UimacppServiceManagement.> quiesceAndStop(Uima> cppServiceManagement.java:88)>         at> org.apache.uima.aae.controller.UimacppServiceManagement.> quiesceAndShutdown(> UimacppServiceManagement.java:397)>         at> org.apache.uima.aae.controller.UimacppShutdownHook.run(> UimacppServiceController.java:1105)The UimacppServiceManagement is a communication wrapper which is used by UimacppServiceController to interact with a remote C++ process. It sends text commands to the remote using a Socket. In quiesceAndStop() the code sends "QUIESCEANDSTOP" command and a remote process exits immediately. After sending the command, the UimacppServiceManagement tries to read from a socket that was closed causing the exception.Modify code to catch SocketException and log a short message instead of dumping stack trace and returning an exception. Process terminating quickly should not be considered an error.
issueID:UIMA-512
type:Bug
changed files:
texts:Cas Editor: plugin.xml contains unused extensions which depend on eclipse 3.3

issueID:UIMA-5120
type:Improvement
changed files:
texts:Enable/disable CAS logging via JMX
CAS logging in UIMA-AS is currently done using java properties. This requires custom process configuration to dump CASes for one or more components. Putting a CAS dump control in the mbean of each asynchronous component would allow dumping to be turned off and on as needed for a running UIMA-AS service.
issueID:UIMA-5121
type:Bug
changed files:uimaj-core/src/main/java/org/apache/uima/cas/SelectFSs.java
uimaj-core/src/main/java/org/apache/uima/cas/FSIndex.java
uimaj-core/src/main/java/org/apache/uima/cas/FSIterator.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/Subiterator.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/SelectFSs_impl.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FsIndex_annotation.java
texts:subiterator moveTo sometimes fails to check if the target is in bounds
A subiterator has a bounding FS.  The moveTo(fs) operation sometimes fails to check if the result of the move is a position outside of the bounding fs (this case should result in an invalid iterator status.
issueID:UIMA-5122
type:Improvement
changed files:
texts:DUCC Database (db) admin tool for save & restore
DUCC employs the Cassandra database, which in turn provides the nodetool command to create snapshots of the database.  There is also a web site https://docs.datastax.com/en/cassandra/2.1/cassandra/operations/ops_backup_noderestart_t.html that comprises a labor intensive recipe for database restoration from snapshots.Provide a DUCC tool to aid in the creation of database snapshots and restoration therefrom.
issueID:UIMA-5123
type:Bug
changed files:
texts:UIMA-AS: Cas Multiplier service doesnt recover from broker restart
After broker restart the top level UIMA-AS service Cas Multiplier does not recover completely. The jms listener on an input queue recovers fine, but a listener on a temp queue processing FreeCas requests does not. The temp queue is created on a service startup. When a broker is bounced, this temp queue is no longer valid as it was created using an old broker connection. The listener on this temp queue just keeps logging rapidly filling a log. All outgoing child CASes contain a stale replyTo queue and such CASes are never freed by the service leading to an empty Cas Pool eventually.There is no auto recovery of temp queues. A listener on a temp queue must be shutdown and instantiated again. When a lost connection is detected, the service must:1) invalidate its listener on a temp queue (FreeCas queue)2) all unacknowledged child CASes that have been dispatched to a client must be automatically released.3) a new temp queue should be created along with a listener for it.When UIMA-AS client is unable to send FreeCas requests to a service due to a stale queue, it should log a message with a CAS Id and complete processing the CAS.
issueID:UIMA-5124
type:Bug
changed files:
texts:DUCC-MON doesn&#39;t display the Reason for WaitingForResources for jobs
The "no resources available" reason is shown for reservations but is missing for jobs
issueID:UIMA-5125
type:Bug
changed files:
texts:Ruta: encoding of launch delegate not configurable
Ruta: encoding fo launch delegate not configurable
issueID:UIMA-5126
type:Bug
changed files:
texts:UIMA-AS thows an NPE if saxon9he.jar is in the classpath
Works OK if saxon8 is in the classpath.  Failure occurs when replying to a getmeta request.  The stack trace is in UIMA-5117
issueID:UIMA-5127
type:Task
changed files:
texts:uv3 make jcas backward compatible and no longer required
JCas is now mostly (if not entirely) just a trampoline to CAS and other objects. Complete this transform.  Change the uses of jcas to work when passed the CAS instead - and deprecate jcas use.  Change jcasgen to include new constructor that just takes the cas.  update all uses of jcas to use the cas.
issueID:UIMA-5128
type:Bug
changed files:
texts:Ruta: false positive problem in editor for stacked feature expresson on label expression
Ruta: false positive problem in editor for stacked feature expresson on label expression. Example:((NumericValue{-> CREATE(Measurement, "unit" = mi.low.unit, "value" = NumericValue)}     ANY{INLIST(IntervalIndicatorList)}     NumericValue{-> CREATE(Measurement, "unit" = mi.low.unit, "value" = NumericValue)})     {-PARTOF(MeasurementInterval)}     ->{Measurement ANY{INLIST(IntervalIndicatorList)} Measurement{-> GATHER(MeasurementInterval, 1, 3, "low" = 1, "high" = 3)}; }    SPECIAL.ct=="/")+     mi:@MeasurementInterval;
issueID:UIMA-5129
type:Bug
changed files:
texts:Ruta: unable to resolve feature on label expression in implicit feature action
Ruta: unable to resolve feature on label expression in implicit feature action
issueID:UIMA-513
type:Improvement
changed files:
texts:jcasgen_merge script fails with Eclipse 3.3 due to repackaging done by Eclipse
jcasgen_merge script runs Eclipse in "headless" mode.  The method of starting eclipse changed in Eclipse 3.3, and the previous method which depends on startup.jar doesn't work (there is no longer a startup.jar).  See the Eclipse help topic "Incompatibilities between Eclipse 3.2 and 3.3".  Workaround is to use Eclipse 3.2 for this operation.
issueID:UIMA-5130
type:Bug
changed files:
texts:Ruta: label feature expression in composed string expression
Ruta: feature expression in composed string expression is not resolved as feature expression but as simple type expression which leads to the plain string of the expression.NumericValue<-{ANY{INLIST(multipyIndicatorList) -> dim  = dim + 1};}        u:Unit {-> u.normalized = null, u.normalizedAscii = null, u.dimension = null,                  u.parsed = ""+ u.parsed + "^" + (dim)};
issueID:UIMA-5131
type:Bug
changed files:
texts:Ruta: composed number expression returns always double as string expression
Ruta: composed number expression returns always double as string expression
issueID:UIMA-5132
type:Bug
changed files:
texts:Ruta: access coveredText by lazy feature on label expression
Ruta: access coveredText by lazy feature on label expression.REGEXP(m.unit.ct, "L|H")
issueID:UIMA-5133
type:Bug
changed files:
texts:Ruta: feature expression on label for annotation expression does not work with UNMARK
Ruta: feature expression on label for annotation expression does not work with UNMARKUNMARK(m.unit)
issueID:UIMA-5135
type:Improvement
changed files:
texts:UIMA CasIOUtils enhancements in handling type systems
A recent Jira UIMA-5120 was logging CASs to file system directories, and including a type system.  It would be good to have a conventional,supported way to do this common kind of operation, added to CasIOUtils.Additionally, it would be good to support as an alternative the standard XML serialization format for type systems.Some possible conventions:   multiple cas files, in 1 directory, with one additional file with the name "typesystem.xml". the above style, in one zip file (for example, to be able to read it, one cas at a time, via some iterator). finding a type system via the class path following uimaFIT conventionsOne factor that probably is important is to store the type system for this kind of thing "close to" the serialized forms it applies to.It would be possible of course to support multiple conventions.  However, the more conventions, the less benefit from "standardization", so this ought to be a balance.
issueID:UIMA-5136
type:Bug
changed files:
texts:UIMA-AS: the undeploy removes all MBeans from JMX
If there are multiple pipelines deployed in the same process, an undeploy of one of them causes all MBeans to be removed. The remaining pipeline's statistics are destroyed in the middle of processing. The code in question is:Line 138 -140 in org.apache.uima.aae.jmx.JmxManagerpublic void destroy() throws Exception {unregisterDomainObjects("org.apache.uima:type=ee.jms.services,*");}The undeploy should only remove MBeans related to a pipeline being undeployed.
issueID:UIMA-5137
type:Documentation
changed files:uimaj-core/src/main/java/org/apache/uima/jcas/cas/BooleanArray.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/ByteArray.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/DoubleArray.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/FSList.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/FloatArray.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/FloatList.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/IntegerArray.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/IntegerList.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/LongArray.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/NonEmptyFloatList.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/NonEmptyIntegerList.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/ShortArray.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/StringList.java
texts:uv3 documentation
Documentation for UIMA Version 3
issueID:UIMA-5138
type:Improvement
changed files:
texts:DUCC Database (db) improvements and exploitations
Address previous shortcomings and/or add new uses of DB for this version of DUCC.
issueID:UIMA-5139
type:Bug
changed files:
texts:Ruta: NPE of CAS Editor extensions in Neon.1

issueID:UIMA-514
type:Bug
changed files:
texts:remove souce jars from binary distribution
We discussed the topic:Don't some companies have issues with their people downloading source code in the binary release?  Does this create a barrier for UIMA to be used?"and we decided to remove the source jars from the binary distribution.
issueID:UIMA-5140
type:Bug
changed files:
texts:Ruta: remove noVM preference
This also causes launcher problems.
issueID:UIMA-5142
type:Bug
changed files:
texts:DUCC: JP scaleout not derived from process_pipeline_count for DD jobs
For DD based jobs the scaleout is not based on process_pipeline_count specified in job's spec. Instead, the code tries to fetch the scaleout from a DD which is not right. When a job is submitted, the OR creates a command line to launch a JP to run the job. The OR takes the value of process_pipeline_count parameter and creates a System property from it as follows:     arg&#91;4&#93;: -Dducc.deploy.JpThreadCount=2All the JP needs to do is to fetch the property value and use it to create matching number of process threads that will request WIs from a JD.
issueID:UIMA-5143
type:Bug
changed files:
texts:Ruta: Launcher fails because classpath is to large
Launch delegate does not work. Console reports:Exception occurred executing command line.Cannot run program "C:\Program Files\Java\jdk1.7.0_79\bin\javaw.exe": CreateProcess error=206, Der Dateiname oder die Erweiterung ist zu langThis is most likely caused by the extension being too long, caused by a really large classpath (32k chars?).
issueID:UIMA-5144
type:Improvement
changed files:
texts:Ruta: dataPath extension by param paths should be configurable
Ruta: dataPath extension my param paths should be configurable
issueID:UIMA-5145
type:Bug
changed files:
texts:DUCC attempts to run even if the DB doesn&#39;t start
start_ducc should quit if the DB cannot be started
issueID:UIMA-5146
type:Improvement
changed files:uimaj-core/src/main/java/org/apache/uima/resource/ResourceManager.java
uimaj-core/src/main/java/org/apache/uima/resource/impl/ResourceManager_impl.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/impl/PearAnalysisEngineWrapper.java
texts:Multiple pipelines need to share just the resources in a ResourceManager
If an annotator creates an AE to run an independent pipeline with a different typesystem it can't reuse the RM as the CasManager's merged typesystem cannot be updated.  We should be able to create a child RM that shares the resources (delegates to the parent?) but has a unique CasManager.  The 5-arg RM constructor used for pears can be used but it requires access to maps that are protected in the existing RM.  Perhaps we could add:a method such as: ResourceManager createChild();Destoying a child RM should not affect the parent and vice-versa.
issueID:UIMA-5147
type:Bug
changed files:
texts:RUTA leaves the contents of STYLE tags in plaintext
I'm using RUTA HtmlAnnotator and HtmlConverter to turn an HTML document into the plain text extracted from it, with annotations to represent the markup that were in the original HTML. The contents of <STYLE> tags are showing up in the plaintext view, which isn't helpful. As STYLE isn't part of the document contents, I think it'd be better for this not to be added to plaintext, or at least for there to be an option to allow this to be excluded. (Apologies if I've missed a way to do this using the existing options)As an example of a simple recreate, a document like this can be used:<html><head>    <style>        /*  */        .test {            text-align: left;        }    </style></head><body>Hello world</body></html>
issueID:UIMA-5148
type:Bug
changed files:uimaj-core/src/main/java/org/apache/uima/resource/Resource_ImplBase.java
uimaj-core/src/main/java/org/apache/uima/resource/impl/DataResource_impl.java
uimaj-core/src/main/java/org/apache/uima/resource/Resource_ImplBase.java
uimaj-core/src/main/java/org/apache/uima/resource/impl/ConfigurableDataResource_impl.java
uimaj-core/src/main/java/org/apache/uima/resource/impl/DataResource_impl.java
uimaj-core/src/main/java/org/apache/uima/resource/impl/FileLanguageResource_impl.java
uimaj-core/src/main/java/org/apache/uima/resource/impl/ResourceManager_impl.java
texts:External Resources not given creating ResourceManager
UIMA-2903 mentioned that External Resources, created by a Resource Manager, get instantiated with a different, unconnected, unique Resource Manager instance (returned by that Resource's getResourceManager() API), and suggests that it would be a better design to have the External Resource's getResourceManager() API return the ResourceManager that created it, instead.This seems very reasonable to me.  This Jira will change the implementation to do this.It's possible that this may break code which was depending on having External Resource Creation being set up with an independent ResourceManager instance, but I doubt any code is depending on this.
issueID:UIMA-5149
type:Improvement
changed files:
texts:Ruta: support changing the serialization format in the launcher
Ruta: support changing the serialization format in the launcher. If there is an XMI in input, allow to create bcas
issueID:UIMA-515
type:New Feature
changed files:
texts:enable CASEditor to work with resource specifiers as cas processors

issueID:UIMA-5150
type:Bug
changed files:
texts:Duplicate agents (or daemons) MUST be avoided
Very strange things happen if a 2nd agent is started on a node. Should we include the pid in the agent id? Keep a registry of legal agents? Make each agent check for others at startup? ???
issueID:UIMA-5151
type:Improvement
changed files:
texts:add doc re UIMA Resources, external resources, and the ResourceManager
document some general notions about UIMA Resources, external resources, and the ResourceManager.
issueID:UIMA-5152
type:Bug
changed files:
texts:DUCC may let a JP grab some WIs if pre-empted just as initilization completes
If the kill comes just before the JP completes it will go ahead and fetch WIs which then will fail.21 Oct 2016 09:19:19,239  INFO JobProcessComponent - T&#91;39&#93; setState  Notifying Agent New State:Running21 Oct 2016 09:19:19,275  INFO JobProcessComponent - T&#91;30&#93; start  DUCC Service Caught Kill Signal - Registering Killer Task and Stopping ...21 Oct 2016 09:19:19,366  INFO AgentSession - T&#91;39&#93; notifyAgentWithStatus  ... Job Process State Changed - PID:18185. Process State: Running. JMX Url:service:jmx:rmi:///jndi/rmi://bluej605.bluej.net:2120/jmxrmi Dispatched State Update Event to Agent with IP:192.168.4.821 Oct 2016 09:19:19,367  INFO HttpWorkerThread - T&#91;39&#93; HttpWorkerThread.run()  Begin Processing Work Items - Thread Id:3921 Oct 2016 09:19:19,367  WARN HttpWorkerThread - T&#91;39&#93; run  EXITING WorkThread ID:39EXITING WorkThread ID:3921 Oct 2016 09:19:19,367  INFO JobProcessComponent - T&#91;37&#93; setState  Notifying Agent New State:Running21 Oct 2016 09:19:19,402  INFO HttpWorkerThread - T&#91;37&#93; HttpWorkerThread.run()  Begin Processing Work Items - Thread Id:3721 Oct 2016 09:19:19,403  INFO HttpWorkerThread - T&#91;38&#93; HttpWorkerThread.run()  Begin Processing Work Items - Thread Id:3821 Oct 2016 09:19:19,403  INFO HttpWorkerThread - T&#91;36&#93; HttpWorkerThread.run()  Begin Processing Work Items - Thread Id:3621 Oct 2016 09:19:22,096  INFO HttpWorkerThread - T&#91;37&#93; run  Thread:37 Recv'd WI:77521 Oct 2016 09:19:22,106  INFO HttpWorkerThread - T&#91;38&#93; run  Thread:38 Recv'd WI:77421 Oct 2016 09:19:22,200  INFO HttpWorkerThread - T&#91;36&#93; run  Thread:36 Recv'd WI:776org.apache.uima.analysis_engine.AnalysisEngineProcessExceptionCaused by: java.lang.Exception: Uima EE Client Not In Running State
issueID:UIMA-5154
type:Improvement
changed files:
texts:Ruta: improve error message of launcher in IDE
Ruta: improve error message of launcher in IDE. If the descriptor is missing, the error says something about invalid arguments like for the preference
issueID:UIMA-5155
type:Improvement
changed files:
texts:ResourceManager automatic destory
UIMA-2977 adds a destory() method to the ResourceManager (RM), that forwards this call to external resources managed by that RM.The destroy() method was not called by the framework, because in general the RM may be shared by the user (or framework) among multiple pipelines.This Jira is to enable RMs created by the framework to call destroy() internally at the appropriate time.This assumes that the right time can be figured out for the various cases.These include: MultiprocessingAnalysisEngine_impl, and fixing other associated frameworks which may use a pattern where they  let the framework create a RM, but then use that in other contexts.
issueID:UIMA-5157
type:Bug
changed files:
texts:DUCC shutdown sequence leaves agents running
A full DUCC shutdown (./stop_ducc -a) can leave DUCC agents as well as user processes still running after shutdown completes.The problems are caused because 1) a DUCC agent will hang trying to send inventory update report if the DUCC broker has been terminated, and 2) agents kill user processes sequentially which increases the likelihood that the broker will be terminated before the agent is finished cleaning up.
issueID:UIMA-5158
type:Documentation
changed files:
texts:DUCC Job Driver (JD) should provide individual work item performance breakdowns
Document functionality introduced by Jira 4586 in DUCC Book.
issueID:UIMA-5159
type:Bug
changed files:
texts:Ruta: use UIMA classloader for loading from classpath
Ruta: use UIMA classloader for loading from classpath
issueID:UIMA-516
type:Improvement
changed files:
texts:CDE tool has unneeded dependency on PDE UI - making it not resolve in last Eclipse download packaging unless you download the "Classic"
With Eclipse 3.3, the packaging of Eclipse changed.  Users now will likely download a version of Eclipse which doesn't include the PDE development environment because this is the first (top) choice in the menu picks for Eclipse downloads.  If the user downloads the bottom menu pick (Eclipse "Classic") everything will work.  The CDE appears to have an unused / unneeded dependency on a plugin in the PDE development environment.  Fix is to remove this dependency and retest.
issueID:UIMA-5161
type:Bug
changed files:
texts:Ruta: condition causes NPE for empty document
Ruta: condition causes NPE for empty document
issueID:UIMA-5162
type:Improvement
changed files:uimaj-core/src/main/java/org/apache/uima/jcas/cas/ByteArray.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/IntegerArray.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/ShortArray.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/FSArray.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/LongArray.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/FloatArray.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/DoubleArray.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/CASImpl.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/StringArray.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/BooleanArray.java
texts:uv3 change id to match v2
v3's current ids start at 1 and increment by 1.  v2 ids start at 1 and increment by the "size" on the main int heap of the FS. Pros: v3's serializations / deserializations often need to recreate the v2 ids so the serialized forms can be read by v2 impl (for backwards compatibility), so this can have a performance benefit. It also improves the match for xmi/json id-refs with version 2 (although xmi deserialization should still work without this).  Cons: Changing to the v2 style will reduce the maximum number of Feature Structures per CAS somewhat; it will be the same as the current limit that exists in v2.Because of pros/cons, keep both impls, together with a global static final boolean switch to pick one or the other (and set it for now to use the v2 style).
issueID:UIMA-5163
type:Bug
changed files:
texts:Ruta: reluctant quantifier problem with composed rule element ending
Ruta: reluctant quantifier problem with composed rule element endingSW (CW+?) SW;
issueID:UIMA-5164
type:New Feature
changed files:uimaj-core/src/main/java/org/apache/uima/jcas/cas/FSArrayList.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/FSArrayList.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/FSHashSet.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/IntegerArrayList.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/FSArrayList.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/FSHashSet.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/FSArray.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/FSHashSet.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/BuiltinTypeKinds.java
uimaj-core/src/main/java/org/apache/uima/cas/CAS.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/SelectFSs_impl.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/TypeSystemConstants.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/TypeSystemImpl.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/FSArray.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/FSArrayList.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/FSHashSet.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/SelectViaCopyToArray.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/FSArrayList.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/IntegerArrayList.java
uimaj-core/src/main/java/org/apache/uima/List_of_ints.java
uimaj-core/src/main/java/org/apache/uima/UimaSerializable.java
uimaj-core/src/main/java/org/apache/uima/UimaSerializableFSs.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/AllFSs.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/BinaryCasSerDes.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/BinaryCasSerDes4.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/BinaryCasSerDes6.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/CASImpl.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/CASSerializer.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/CasSerializerSupport.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/CommonSerDesSequential.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/SelectFSs_impl.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/TypeImpl.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/TypeSystemImpl.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/XCASDeserializer.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/XCASSerializer.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/XmiCasDeserializer.java
uimaj-core/src/main/java/org/apache/uima/util/CasCopier.java
texts:uv3 support for arbitrary Java objects in the CAS
Using JCas, it has been possible to have arbitrary Java objects included in the Java instance.  The problem with doing this has been that there was no architected way for these objects to participate in the broader UIMA interoperability concepts such as serialization, remote annotators, etc.  And, furthermore, JCas objects were optional, and might not be used.UIMA V3 implements Feature Structures in the CAS as JCas objects directly, so these are now always present and reliable.  This means that when an implementation adds arbitrary Java objects (e.g, a special HashSet containing Feature Structures) to a JCas class definition, they are reliably present.Here's how we could make this all work in v3.A user would first pick some Java class to emulate in the CAS.  A requirement would be that the data in the emulated class would need to support having a serialized form representing a  "snapshot" of the data at a particular moment, that  could be put into the CAS using a fixed number of UIMA features of normal UIMA data types, including Feature Structures.  For example, an ArrayList<FeatureStructure>  could be put into the CAS as an FSArray instance of the current size; a Map<Integer, FeatureStructure> could be put into the CAS as an IntegerArray and an FSArray, etc.  The snapshot would be produced whenever needed, for example, during serialization.  A corresponding transformation (used, for instance, during deserialization) would convert the snapshot data back into the emulated Java class instance.This new kind of hybrid object would be implemented with a custom JCas cover class which wrapped the emulated Java class instance.  It would also have as features those needed for the "snapshot" representation.The user would need to  define a UIMA type; this type would include the feature definitions needed for the snapshot. create the corresponding JCas cover class for that type add 3 extra methods in the cover class, all methods defined by a new UIMA interface "UimaSerializable"   _init_from_cas_data()  _save_to_cas_data()  clone  The _init_from_cas_data would use the cas data in this Feature Structure to initialize the emulated Java class.  This method would be called by the framework whenever it makes a new instance with non-empty Feature Structure data (for example, during deserialization), so that the emulated Java class instance may be initialized.  This would typically be called by routines like the cas copier and deserialization.Similarly, the _save_to_cas_data would be called by the framework as part of serialization, and would extract data from the emulated Java class and save as CAS features..This Jira adds support for this approach; other Jiras will add some likely popular new types (example: FSArrayList - like ArrayList<TOP>).  Users can (easily ?) add types of their own, for instance, if they need a peculiar kind of Set of Feature Structures, perhaps built on top of ConcurrentSkipListSet using a special definition of set-member-equals.
issueID:UIMA-5165
type:Bug
changed files:
texts:Ruta: false positive problem report for feature expression on label expression across inlined rules
Ruta: false positive problem report for feature expression on label expression across inlined rules
issueID:UIMA-5166
type:New Feature
changed files:
texts:UIMA-AS: Add option to disable JMX connector when running extended tests
UIMA-As extended tests, by default, enable jmx connector on port 1098 which in turn enables RMI. While running regression tests under Jenkins,  this port should not be enabled for security reasons. Add a new JVM option -Dapache.uima.as.jmx.enable=&#91;true/false&#93; to manage opening the RMI port. By default, the port will be open but when running under Jenkins this will not be the case.
issueID:UIMA-5167
type:Improvement
changed files:
texts:Need better wording for JP "no more work" log message
The current log message for "no more work" is: INFO HttpWorkerThread - T&#91;37&#93; run Thread:37 Recv'd JD Response, however there is no MetaCas. Sleeping for 60000 and retryingSuggested improvement could be:INFO HttpWorkerThread - T&#91;37&#93; run Thread:37 Recv'd JD Response: JD is presently out of work items. Will retry in 60 seconds.
issueID:UIMA-5168
type:Question
changed files:
texts:uv3 vs backporting most things to uv2?
The uv3 docs - overview has a summary of the "features" / benefits of uv3.  I was surprised to realize, looking at these, that most of these could be back-ported into version 2.  Because of this, there is a choice in moving forwards, either to stick to the current v2 data representation models (sticking), or switch to new v3 ones (for Java).  In the subsequent discussion, "sticking" refers to a currently non-existent v2 where the v3 improvements (except for changing how Feature Structures are stored) are backported.The two benefits lost in sticking are:  garbage collection of unreferenced Feature Structures. larger limits on the number of Feature Structures per CAS (approximately order of magnitude).  This is due to the fact that in v2, all of the slots for all Feature Structures and int and float arrays are kept in one int array, which has a limit of approximately 2 billion words.Benefits in sticking include: (perhaps) better backwards compatibility a smaller memory footprint if JCas is not being used (imagine UIMA running on a smartphone) (maybe) better performance in some cases, including serializationRegarding performance differences:  v3 may be more performant in many cases because of not needing to switch from low-level int handles to JCas object references.  But it may be less performant in some operations involving serialization, because of the overhead to emulate/model the way v2 does serialization.  New Native-to-v3 serializaton forms that are not backward compatible could be added to v3 to overcome this.   The things that could be backported to v2 include: redesigning the JCas cover classes for higher performance (eliminating the xxx_Type classes, putting an extra field in the xxx cover class instead).   note: a JCas class migration would be needed for this, similar to the one for v3.   redesigning much of the supporting infrastructure to improve performance by increasing locality of reference. supporting arbitrary Java Objects, and backporting the implementation of FSArrayList and IntegerArrayList integrating with Java 8 - including the new select framework eliminating problems with ConcurrentModificationException while iterating over UIMA indexes reusing Type SystemsComparing v3 versus v2+backport, what do people think of the balance between pro/con?  Should we focus on a v2+backport direction instead of v3?
issueID:UIMA-5169
type:Improvement
changed files:
texts:Ruta: real world FOREACH block too slow for large documents
Ruta: real world FOREACH block too slow for large documents
issueID:UIMA-517
type:Bug
changed files:
texts:CDE has internal bug - shows up in Error log when using the Add delegate to an aggregate when picking top level project
The ResourcePickerDialog gets an IPath with 1 element - when picking the top node of a "project" in a workspace, and passes that to the getFile method of the WorkspaceRoot - but this method fails if the IPath is only 1 element.  Fix: return null for result in this case.
issueID:UIMA-5170
type:Bug
changed files:
texts:When pages have "no data" indicate if because not logged in or data missing
Ensure that all Experiments are found even when userid ducc cannot access them directly.  Modify the reading of other's files to indicate the difference between an empty file and an inaccessible one.
issueID:UIMA-5171
type:Bug
changed files:uimaj-json/src/main/java/org/apache/uima/json/JsonCasSerializer.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/CasSerializerSupport.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/CasSerializerSupport.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/CasSerializerSupport.java
uimaj-json/src/main/java/org/apache/uima/json/JsonCasSerializer.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/CasSerializerSupport.java
texts:JSON serialization in uima core wrong context, sometimes
Running json test in v3 revealed two bugs in the JSON serialization.1) reset the cache in "sortedUsedTypes" when starting serailization because this may have changed (in CasSerializerSupport)2) Also in CasSerializerSupport - make the static Comparator used for sorting types used, public, so it can be used by the JSON serializer code when doing a binary search to see if a type is present.3) Change the code in JsonCasSerializer which does the binary search to use this same comparator, because the search must use the same sort ordering.
issueID:UIMA-5172
type:Task
changed files:uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/annotation/DrawingStyle.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/cpm/BaseCPMImpl.java
uimaj-core/src/main/java/org/apache/uima/jcas/impl/JCasImpl.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/ui/dialogs/SearchMonitoringThread.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/cpm/utils/QueueEntity.java
uimaj-ep-pear-packager/src/main/java/org/apache/uima/pear/insd/edit/InsdConstants.java
uimaj-examples/src/main/java/org/apache/uima/examples/cas/RegExAnnotator.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/outline/ModeSensitiveContentProvider.java
uimaj-adapter-soap/src/main/java/org/apache/uima/adapter/soap/AxisResourceServiceManager.java
uimaj-tools/src/main/java/org/apache/uima/tools/cvd/FSTreeNode.java
uimaj-tools/src/main/java/org/apache/uima/tools/util/gui/FormPanel.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/contextmenu/IShowAnnotationsListener.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/point/IUimaEditorExtension.java
uimaj-core/src/main/java/org/apache/uima/cas/FSIndexRepository.java
uimaj-examples/src/main/java/org/apache/uima/examples/RunAE.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/AbstractAnnotationDocumentListener.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FsIterator_singletype.java
uimaj-tools/src/main/java/org/apache/uima/tools/cvd/MarkupExtent.java
uimaj-tools/src/main/java/org/apache/uima/tools/cpm/CpmFrame.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/editview/FeatureStructureContentProvider.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/CasEditorError.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/metadata/cpe/CasProcessorFilterImpl.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FSComparator.java
uimaj-tools/src/main/java/org/apache/uima/tools/cvd/control/XCASSaveHandler.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/LinearTypeOrderBuilderImpl.java
uimaj-tools/src/main/java/org/apache/uima/tools/jcasgen/IError.java
uimaj-examples/src/main/java/org/apache/uima/examples/xmi/UimaTypeSystem2Ecore.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/fsview/TypeCombo.java
uimaj-tools/src/main/java/org/apache/uima/tools/cpm/PerformanceReportDialog.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/StandardStrings.java
uimaj-ep-jcasgen/src/main/java/org/apache/uima/jcas/jcasgenp/JgPluginRunner.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/wizards/FlowControllerNewWizard.java
uimaj-tools/src/main/java/org/apache/uima/tools/cvd/control/AboutUimaHandler.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/cpm/utils/FeatureMap.java
uimaj-adapter-soap/src/main/java/org/apache/uima/adapter/soap/AxisAnalysisEngineService_impl.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/ui/IndexImportSection.java
uimaj-adapter-soap/src/main/java/org/apache/uima/adapter/soap/axis11/XmlSerializer_Axis11.java
uimaj-tools/src/main/java/org/apache/uima/tools/viewer/CasTreeViewerApplet.java
uimaj-tools/src/main/java/org/apache/uima/tools/cvd/tsview/FeatureTableModel.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/cpm/container/CasObjectNetworkCasProcessorImpl.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/metadata/cpe/CasProcessorConfigurationParameterSettingsImpl.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/xml/XMLScanner.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/annotation/BoxDrawingStrategy.java
uimaj-tools/src/main/java/org/apache/uima/tools/cvd/control/TypeSystemFileOpenEventHandler.java
uimaj-examples/src/main/java/org/apache/uima/tutorial/DateAnnot.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/AbstractDocumentListener.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/PreferencePage.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/ui/dialogs/TypesWithNameSpaces.java
uimaj-tools/src/main/java/org/apache/uima/tools/stylemap/ColorEditor.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/metadata/cpe/CpeDescriptionImpl.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/wizards/CasInitializerNewWizardPage.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/ui/ParameterPage.java
uimaj-tools/src/main/java/org/apache/uima/tools/util/gui/SliderField.java
uimaj-tools/src/main/java/org/apache/uima/tools/cvd/control/XmiCasFileOpenHandler.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/MultiPageEditor.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/xml/XMLWhitespaceDetector.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/wizards/FlowControllerNewWizardPage.java
unused-saved/src/org/apache/uima/jcasgen/impl/JCasClassConversion.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FsIndex_set_sorted.java
uimaj-tools/src/main/java/org/apache/uima/tools/util/gui/AboutDialog.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/model/DefinedTypesWithSupers.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/cpm/utils/ConfigurableFeature.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/metadata/cpe/CpeCheckpointImpl.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/AnnotationDocument.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/ui/PriorityListSection.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/TypeImpl.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/styleview/AnnotationTypeNode.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/SelectViaCopyToArray.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/metadata/cpe/CasProcessorTimeoutImpl.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/wizards/AbstractNewWizardPage.java
uimaj-tools/src/main/java/org/apache/uima/tools/cvd/control/PopupListener.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/ui/dialogs/SelectTypeDialog.java
uimaj-ep-pear-packager/src/main/java/org/apache/uima/pear/PearException.java
uimaj-ep-pear-packager/src/main/java/org/apache/uima/pear/insd/edit/vars/VarValList.java
uimaj-tools/src/main/java/org/apache/uima/tools/stylemap/TableGUIMediator.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/cpm/container/CPEFactory.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/AnnotationStyleChangeListener.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/cpm/engine/SequencedQueue.java
uimaj-tools/src/main/java/org/apache/uima/tools/stylemap/StyleMapTableModel.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/ICustomInformationControlContentHandler.java
uimaj-tools/src/main/java/org/apache/uima/tools/cvd/RecentFilesList.java
uimaj-tools/src/main/java/org/apache/uima/tools/util/gui/ImageButton.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/BuiltinTypeKinds.java
uimaj-tools/src/main/java/org/apache/uima/tools/util/gui/XMLFileFilter.java
uimaj-core/src/main/java/org/apache/uima/UIMARuntimeException.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/ui/dialogs/ExportImportablePartDialog.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FsIndex_bag.java
uimaj-tools/src/main/java/org/apache/uima/tools/cvd/control/AnnotatorOpenEventHandler.java
uimaj-tools/src/main/java/org/apache/uima/tools/util/gui/TransportControlListener.java
uimaj-tools/src/main/java/org/apache/uima/tools/cvd/control/CloseLogViewHandler.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/AnnotationStyle.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/AnnotationEditorPreferencePage.java
uimaj-core/src/main/java/org/apache/uima/internal/util/Pair.java
uimaj-tools/src/main/java/org/apache/uima/tools/cvd/control/TextChangedListener.java
uimaj-examples/src/main/java/org/apache/uima/examples/tokenizer/SimpleTokenAndSentenceAnnotator.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/metadata/cpe/CpeCasProcessorsImpl.java
uimaj-tools/src/main/java/org/apache/uima/tools/cvd/control/NewTextEventHandler.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/AbstractDocument.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/metadata/cpe/CpeCollectionReaderIteratorImpl.java
uimaj-core/src/main/java/org/apache/uima/impl/UimaContext_ImplBase.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/ui/PrimitiveSection.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/cpm/utils/CasMetaData.java
uimaj-ep-pear-packager/src/main/java/org/apache/uima/pear/insd/edit/vars/VarValSorter.java
uimaj-tools/src/main/java/org/apache/uima/tools/cvd/control/LoadRecentTextFileEventHandler.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/LowLevelIndexRepository.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/metadata/cpe/CpeTimerImpl.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/core/model/dotcorpus/DotCorpusSerializer.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/ui/SofaMapSection.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/cpm/container/deployer/vns/LocalVNS.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/ui/dialogs/AddParameterDialog.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/cpm/Checkpoint.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/util/FeatureStructureTransfer.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/IEditorSelectionListener.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/base_cpm/container/CasProcessorController.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FeaturePathImpl.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/FindAnnotateDialog.java
uimaj-adapter-soap/src/main/java/org/apache/uima/adapter/soap/BinaryDeserializerFactory.java
uimaj-tools/src/main/java/org/apache/uima/tools/cpm/TabClosedListener.java
uimaj-tools/src/main/java/org/apache/uima/tools/cpm/MetaDataPanel.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/xml/NonRuleBasedDamagerRepairer.java
uimaj-ep-pear-packager/src/main/java/org/apache/uima/pear/insd/edit/vars/AbstractVarValViewerHandler.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/ui/ExtnlResBindSection.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/metadata/cpe/CpeIncludeImpl.java
uimaj-tools/src/main/java/org/apache/uima/tools/viewer/CasAnnotationViewerApplet.java
uimaj-tools/src/main/java/org/apache/uima/tools/docanalyzer/FileSelectorListener.java
uimaj-core/src/main/java/org/apache/uima/UIMA_IllegalArgumentException.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/core/model/DefaultColors.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/ui/ResourceDependencySection.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/AnnotationSelectionListener.java
uimaj-tools/src/main/java/org/apache/uima/tools/cvd/control/AboutHandler.java
uimaj-tools/src/main/java/org/apache/uima/tools/cvd/control/PopupHandler.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/TOP.java
uimaj-tools/src/main/java/org/apache/uima/tools/cvd/control/CloseTypeSystemHandler.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/ui/dialogs/AddCapabilityFeatureDialog.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/cpm/container/deployer/socket/OFSocketTransportImpl.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/ModelFeatureStructure.java
uimaj-tools/src/main/java/org/apache/uima/tools/stylemap/StyleConstants.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/SelectFSs_impl.java
uimaj-examples/src/main/java/org/apache/uima/examples/tokenizer/Token.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/ui/HeaderPage.java
uimaj-examples/src/main/java/org/apache/uima/examples/xmi/Ecore2UimaTypeSystem.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/cpm/container/deployer/VinciTAP.java
uimaj-tools/src/main/java/org/apache/uima/tools/jcasgen/UimaLoggerProgressMonitor.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/point/IUimaMultiPageEditor.java
uimaj-tools/src/main/java/org/apache/uima/tools/stylemap/MyCellRenderer.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/metadata/cpe/CpeCollectionReaderCasInitializerImpl.java
uimaj-tools/src/main/java/org/apache/uima/tools/cvd/control/AnnotatorRerunEventHandler.java
unused-saved/src/org/apache/uima/jcas/impl/JCasCoverClassFactory.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/wizards/TypePrioritiesNewWizard.java
uimaj-tools/src/main/java/org/apache/uima/tools/cvd/AnnotationDisplayCustomizationFrame.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/cpm/container/deployer/vinci/VinciCasProcessorDeployer.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/ui/CapabilitySection.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/ui/dialogs/AddSofaDialog.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/FSHashSet.java
uimaj-tools/src/main/java/org/apache/uima/tools/cpm/CpmPanel.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/editview/EditView.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/ICasEditorInputListener.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/cpm/vinci/Vinci.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/cpm/container/deployer/JavaApplication.java
uimaj-ep-jcasgen/src/main/java/org/apache/uima/jcas/jcasgenp/EP_LogThrowErrorImpl.java
uimaj-core/src/main/java/org/apache/uima/I18nExceptionI.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/ICasDocument.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/ui/TypeImportSection.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/metadata/cpe/CpeRemoteCasProcessorImpl.java
uimaj-tools/src/main/java/org/apache/uima/tools/jcasgen/IMerge.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/action/LowerLeftAnnotationSideAction.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/ui/ParameterSettingsSection.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/ICasEditor.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FSIndexRepositoryImpl.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/xml/XMLDoubleClickStrategy.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/metadata/cpe/CpeCollectionReaderImpl.java
uimaj-tools/src/main/java/org/apache/uima/tools/cvd/control/ColorPrefsOpenHandler.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/ui/IndexSection.java
uimaj-tools/src/main/java/org/apache/uima/tools/cvd/control/TextContextMenuAction.java
uimaj-tools/src/main/java/org/apache/uima/tools/cvd/control/ManualHandler.java
uimaj-examples/src/main/java/org/apache/uima/tutorial/SentenceAnnot.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/cpm/engine/ConsumerCasUtils.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/ArrayValue.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/editview/validator/CellEditorValidatorFacotory.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/util/UimaUtil.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/ui/ParameterSection.java
uimaj-ep-jcasgen/src/main/java/org/apache/uima/jcas/jcasgenp/JgPlugin.java
uimaj-adapter-soap/src/main/java/org/apache/uima/adapter/soap/BinarySerializer.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/util/StrictTypeConstraint.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/CasEditorViewPage.java
uimaj-tools/src/main/java/org/apache/uima/tools/cvd/control/XCASSaveTSHandler.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/util/AnnotationSelection.java
uimaj-tools/src/main/java/org/apache/uima/tools/cvd/control/FileSaveAsEventHandler.java
uimaj-tools/src/main/java/org/apache/uima/tools/cvd/control/ShowTypesystemHandler.java
uimaj-tools/src/main/java/org/apache/uima/tools/cvd/control/RestoreLangDefaultsHandler.java
uimaj-adapter-soap/src/main/java/org/apache/uima/adapter/soap/XmlDeserializer.java
uimaj-examples/src/main/java/org/apache/uima/examples/cpe/SimpleRunCPE.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/ui/dialogs/AddRemoteServiceDialog.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/wizards/TypePrioritiesNewWizardPage.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/cpm/utils/Execute.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/editview/validator/ByteCellEditorValidator.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/cpm/engine/NonThreadedProcessingUnit.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/cpm/utils/Timer.java
uimaj-examples/src/main/java/org/apache/uima/examples/tokenizer/Sentence.java
uimaj-tools/src/main/java/org/apache/uima/tools/stylemap/StyleMapEditor.java
uimaj-adapter-soap/src/main/java/org/apache/uima/adapter/soap/BinaryDeserializer.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/InternalErrorCDE.java
uimaj-ep-pear-packager/src/main/java/org/apache/uima/pear/generate/PearExport.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/ui/OverviewPage.java
uimaj-ep-pear-packager/src/main/java/org/apache/uima/pear/insd/edit/vars/VarValCellModifier.java
uimaj-tools/src/main/java/org/apache/uima/tools/viewer/EntityResolver.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/ui/dialogs/AbstractDialog.java
uimaj-tools/src/main/java/org/apache/uima/tools/cpm/AnalysisEnginePanel.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/AnnotationEditorPreferenceInitializer.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/cpm/container/NetworkCasProcessorImpl.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/ui/dialogs/TypesWithNameSpaces32.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/util/Primitives.java
uimaj-tools/src/main/java/org/apache/uima/tools/cvd/TypeTreeNode.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/QuickTypeSelectionDialog.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/TypeSystemImpl.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/editview/validator/IntegerCellEditorValidator.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/ui/FileAndShortName.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/AnnotationEditorSelection.java
uimaj-adapter-soap/src/main/java/org/apache/uima/adapter/soap/AxisAnalysisEngineServiceStub.java
uimaj-cpe/src/main/java/org/apache/uima/cas_data/impl/vinci/VinciCasDataConverter.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/ui/SettingsPage.java
uimaj-tools/src/main/java/org/apache/uima/tools/cpm/JTabbedPaneWithCloseIcons.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/metadata/cpe/CasProcessorExecutableImpl.java
uimaj-ep-pear-packager/src/main/java/org/apache/uima/pear/PearPlugin.java
uimaj-core/src/main/java/org/apache/uima/UIMA_UnsupportedOperationException.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/cpm/utils/CPMUtils.java
uimaj-ep-pear-packager/src/main/java/org/apache/uima/pear/insd/edit/INSDComponentPage.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/ui/AggregateSection.java
uimaj-tools/src/main/java/org/apache/uima/tools/util/gui/TransportControlPanel.java
uimaj-core/src/main/java/org/apache/uima/internal/util/OrderedFsSet_array.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/wizards/ResourceManagerConfigurationNewWizard.java
uimaj-tools/src/main/java/org/apache/uima/tools/cvd/control/SofaSelectionListener.java
uimaj-tools/src/main/java/org/apache/uima/tools/docanalyzer/FileSelector.java
uimaj-tools/src/main/java/org/apache/uima/tools/stylemap/AnTreeListener.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/metadata/cpe/CpeObject.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/metadata/cpe/CasProcessorExecArgsImpl.java
uimaj-tools/src/main/java/org/apache/uima/tools/viewer/CasAnnotationViewer.java
uimaj-tools/src/main/java/org/apache/uima/tools/util/gui/FileSelectorListener.java
uimaj-ep-cas-editor-ide/src/main/java/org/apache/uima/caseditor/ide/CasEditorIdePlugin.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/model/AbstractModelPart.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/outline/OutlinePageBook.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/cpm/container/deployer/socket/SocketCasProcessorDeployer.java
uimaj-tools/src/main/java/org/apache/uima/tools/cvd/control/IndexPopupListener.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/CasSeqAddrMaps.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/xml/XMLTagScanner.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/cpm/container/deployer/NonJavaApplication.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/CasEditorView.java
uimaj-tools/src/main/java/org/apache/uima/tools/cvd/LogFileViewer.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/ui/MetaDataSection.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/wizards/FsIndexCollectionNewWizardPage.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/fsview/FeatureStructureBrowserViewPage.java
uimaj-tools/src/main/java/org/apache/uima/tools/cvd/IndexTreeNode.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/ui/Utility.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/xml/XMLPartitionScanner.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/cpm/container/ProcessingContainer_Impl.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/editview/FeatureColumnLabelProvider.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/wizards/TAEConfiguratorNewWizard.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/ui/TypeSection.java
uimaj-ep-launcher/src/main/java/org/apache/uima/ep_launcher/LauncherPlugin.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/util/ObjectTransfer.java
uimaj-examples/src/main/java/org/apache/uima/tutorial/UimaAcronym.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/AnnotationEditorActionContributor.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/styleview/AnnotationStyleView.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/cpm/utils/Filter.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/FSList.java
uimaj-ep-debug/src/main/java/org/apache/uima/ep_debug/DebugPlugin.java
uimaj-examples/src/main/java/org/apache/uima/examples/cpe/SimpleRunCPM.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/ui/TypePriorityImportSection.java
uimaj-tools/src/main/java/org/apache/uima/tools/stylemap/StyleMapTable.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/metadata/cpe/OutputQueue_impl.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/ui/ImportSection.java
uimaj-core/src/main/java/org/apache/uima/internal/util/Misc.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/cpm/engine/WorkUnit.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/core/model/dotcorpus/DotCorpus.java
uimaj-tools/src/main/java/org/apache/uima/tools/cvd/control/AddLanguageHandler.java
uimaj-tools/src/main/java/org/apache/uima/tools/cvd/control/HelpHandler.java
uimaj-tools/src/main/java/org/apache/uima/tools/cvd/control/AnnotatorRunOnCasEventHandler.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/ui/dialogs/ContentAssistField32.java
uimaj-tools/src/main/java/org/apache/uima/tools/cpm/ConsumerPanel.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/metadata/cpe/CasProcessorErrorHandlingImpl.java
uimaj-core/src/main/java/org/apache/uima/cas/admin/LinearTypeOrder.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/wizards/FsIndexCollectionNewWizard.java
uimaj-adapter-soap/src/main/java/org/apache/uima/adapter/soap/SoapAnalysisEngineServiceAdapter.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/ui/dialogs/AddTypeDialog.java
uimaj-examples/src/main/java/org/apache/uima/examples/cpe/InlineXmlCasConsumer.java
uimaj-tools/src/main/java/org/apache/uima/tools/cvd/AutoFoldingMenu.java
uimaj-tools/src/main/java/org/apache/uima/tools/pear/install/InstallPearCli.java
uimaj-tools/src/main/java/org/apache/uima/tools/stylemap/LabelCellEditor.java
uimaj-tools/src/main/java/org/apache/uima/tools/cvd/control/FileOpenEventHandler.java
unused-saved/src/org/apache/uima/tools/jcasgen/DecompiledFilter.java
uimaj-tools/src/main/java/org/apache/uima/tools/cvd/control/SystemExitHandler.java
uimaj-tools/src/main/java/org/apache/uima/tools/jcasgen/GuiProgressMonitor.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/metadata/cpe/CasProcessorDeploymentParamImpl.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/annotation/BracketDrawingStrategy.java
uimaj-core/src/main/java/org/apache/uima/cas/SelectFSs.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/annotation/TagDrawingStrategy.java
uimaj-ep-pear-packager/src/main/java/org/apache/uima/pear/actions/GeneratePearFileAction.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/BinaryCasSerDes.java
uimaj-examples/src/main/java/org/apache/uima/examples/cpe/FileSystemCollectionReader.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/wizards/AbstractNewWizard.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/BinaryCasSerDes6.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/NonEmptyFloatList.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/cpm/engine/CPMChunkTimeoutException.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/outline/AnnotationOutline.java
uimaj-adapter-soap/src/main/java/org/apache/uima/adapter/soap/XmlDeserializerFactory.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/fsview/ITypePaneListener.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/outline/OutlineStyles.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/CASMgrSerializer.java
uimaj-ep-pear-packager/src/main/java/org/apache/uima/pear/actions/EditInstallationDescriptorAction.java
uimaj-core/src/main/java/org/apache/uima/internal/util/ObjHashSet.java
uimaj-ep-jcasgen/src/main/java/org/apache/uima/jcas/jcasgenp/ProgressMonitorImpl.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/cpm/utils/TimerFactory.java
uimaj-tools/src/main/java/org/apache/uima/tools/util/gui/Caption.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/metadata/cpe/CasProcessorDeploymentParamsImpl.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/ui/property/AnnotationPropertyPage.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/DocumentUimaImpl.java
uimaj-core/src/main/java/org/apache/uima/cas/FSIndex.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/cpm/utils/ExpirationTimer.java
uimaj-tools/src/main/java/org/apache/uima/tools/stylemap/AnnotationFeaturesViewer.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/metadata/cpe/CasProcessorErrorRateThresholdImpl.java
uimaj-tools/src/main/java/org/apache/uima/tools/util/gui/FileChooserBugWorkarounds.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/editview/EditViewPage.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/outline/OutlineLabelProvider.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/ui/dialogs/ResourcePickerDialog.java
uimaj-ep-pear-packager/src/main/java/org/apache/uima/pear/generate/PearExportMessages.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/ui/HeaderPageWithSash.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/util/AnnotationComparator.java
uimaj-tools/src/main/java/org/apache/uima/tools/RunAE.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/ui/dialogs/AbstractDialogKeyVerify.java
uimaj-tools/src/main/java/org/apache/uima/tools/AnnotationFeaturesViewer.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/cpm/engine/BoundedWorkQueue.java
uimaj-examples/src/main/java/org/apache/uima/tutorial/Meeting.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/AnnotationEditorPreferenceConstants.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/outline/AnnotationTreeNodeList.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/model/DescriptorTCAS.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/IntegerArrayList.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/files/ContextForPartDialog.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/metadata/cpe/CpeResourceManagerConfigurationImpl.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/annotation/EclipseAnnotationPeer.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/model/FlowNodes.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/ChangeModeAction.java
uimaj-examples/src/main/java/org/apache/uima/tutorial/TimeAnnot.java
uimaj-ep-pear-packager/src/main/java/org/apache/uima/pear/insd/edit/vars/VarVal.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/ui/dialogs/AbstractDialogMultiColTable.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/xml/XMLDocumentProvider.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/FSArrayList.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/IAnnotationEditorModifyListener.java
uimaj-adapter-soap/src/main/java/org/apache/uima/adapter/soap/BinarySerializerFactory.java
uimaj-tools/src/main/java/org/apache/uima/tools/cvd/CVD.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/cpm/utils/ValuePair.java
uimaj-tools/src/main/java/org/apache/uima/tools/util/gui/SpringUtilities.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/ui/dialogs/AddTypeToPriorityListDialog.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/outline/TypeGroupedContentProvider.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/metadata/cpe/CpeIntegratedCasProcessorImpl.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/files/MultiResourceSelectionDialogWithFlowOption.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/ui/AbstractSectionParm.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/wizards/CasConsumerNewWizard.java
uimaj-core/src/main/java/org/apache/uima/internal/util/CopyOnWriteObjHashSet.java
uimaj-examples/src/main/java/org/apache/uima/examples/SourceDocumentInformation.java
uimaj-tools/src/main/java/org/apache/uima/tools/cvd/control/SetDataPathHandler.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FsIndex_singletype.java
uimaj-tools/src/main/java/org/apache/uima/tools/cvd/control/TextFocusHandler.java
uimaj-tools/src/main/java/org/apache/uima/tools/util/gui/IntegerField.java
uimaj-ep-pear-packager/src/main/java/org/apache/uima/pear/insd/edit/vars/VarValLabelProvider.java
uimaj-examples/src/main/java/org/apache/uima/tutorial/DateTimeAnnot.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/editview/CreateFeatureStructureDialog.java
uimaj-tools/src/main/java/org/apache/uima/tools/docanalyzer/AnnotationViewerDialog.java
uimaj-adapter-soap/src/main/java/org/apache/uima/adapter/soap/AxisResourceServiceStub.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/cpm/engine/ProcessingUnit.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/TypeSystemConstants.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/wizards/CollectionReaderNewWizard.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/LowLevelIndex.java
uimaj-tools/src/main/java/org/apache/uima/tools/cpm/ConfigField.java
uimaj-core/src/main/java/org/apache/uima/List_of_ints.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/model/DescriptorMetaData.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/model/ConfigGroup.java
uimaj-tools/src/main/java/org/apache/uima/tools/stylemap/StyleMapXmlParser.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/metadata/cpe/CasProcessorRuntimeEnvParamImpl.java
uimaj-tools/src/main/java/org/apache/uima/tools/cvd/control/FSTreeSelectionListener.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/annotation/BackgroundDrawingStrategy.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/annotation/UnderlineDrawingStrategy.java
uimaj-tools/src/main/java/org/apache/uima/tools/cvd/control/LoadRecentDescFileEventHandler.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/ui/property/EditorAnnotationPropertyPage.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/annotation/TextColorDrawingStrategy.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/cpm/utils/TypeComplianceConverterImpl.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/ui/dialogs/AddIndexDialog.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/editview/ValueColumnLabelProvider.java
uimaj-tools/src/main/java/org/apache/uima/tools/cvd/MainFrame.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/cpm/container/deployer/CPEDeployerDefaultImpl.java
unused-saved/src/org/apache/uima/tools/jcas/internal/AnalyzeContent.java
uimaj-tools/src/main/java/org/apache/uima/tools/cvd/control/ShowAnnotationCustomizerHandler.java
uimaj-tools/src/main/java/org/apache/uima/tools/cvd/control/IndexTreeSelectionListener.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/action/WideRightAnnotationSideAction.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/cpm/engine/DebugControlThread.java
uimaj-ep-pear-packager/src/main/java/org/apache/uima/pear/insd/edit/vars/IVarValListViewer.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/cpm/container/deployer/RunnableApplication.java
uimaj-ep-pear-packager/src/main/java/org/apache/uima/pear/generate/PearFileResourceExportPage.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/ui/dialogs/AbstractDialogKeyVerifyJavaNames.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/editview/validator/ShortCellEditorValidator.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/CasDocumentProviderFactory.java
uimaj-tools/src/main/java/org/apache/uima/tools/stylemap/StyleMapEntry.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/cpm/container/deployer/socket/ProcessControllerAdapter.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/CASImpl.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/util/IDGenerator.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/contextmenu/ModeMenu.java
uimaj-examples/src/main/java/org/apache/uima/tutorial/WordAnnot.java
uimaj-tools/src/main/java/org/apache/uima/tools/jcasgen/GUI.java
uimaj-tools/src/main/java/org/apache/uima/tools/cvd/control/FocusTextAction.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/metadata/cpe/CasProcessorRunInSeperateProcessImpl.java
uimaj-ep-pear-packager/src/main/java/org/apache/uima/pear/insd/edit/vars/VarValViewerHandler.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/fsview/FeatureStructureLabelProvider.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/ui/dialogs/FindComponentDialog.java
uimaj-tools/src/main/java/org/apache/uima/tools/stylemap/ColorParser.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/ui/dialogs/PickTaeForTypesDialog.java
uimaj-ep-pear-packager/src/main/java/org/apache/uima/pear/insd/edit/INSDEnvironmentPage.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/FindAnnotateAction.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/ui/ParameterDelegatesSection.java
uimaj-tools/src/main/java/org/apache/uima/tools/cvd/ArrayNode.java
uimaj-tools/src/main/java/org/apache/uima/tools/cvd/control/XCASFileOpenEventHandler.java
uimaj-tools/src/main/java/org/apache/uima/tools/jcasgen/GuiErrorImpl.java
uimaj-core/src/main/java/org/apache/uima/resource/ResourceManager.java
uimaj-adapter-soap/src/main/java/org/apache/uima/adapter/soap/axis11/XmlDeserializer_Axis11.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/CasSerializerSupport.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/cpm/utils/ChunkMetadata.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/CasDocumentProvider.java
uimaj-tools/src/main/java/org/apache/uima/tools/jcasgen/Prefs.java
uimaj-core/src/main/java/org/apache/uima/util/CasCopier.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/ui/dialogs/EditSofaBindingsDialog.java
uimaj-tools/src/main/java/org/apache/uima/tools/cvd/control/MainFrameClosing.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/xml/TagRule.java
uimaj-tools/src/main/java/org/apache/uima/tools/docanalyzer/TfFileSelectorListener.java
uimaj-tools/src/main/java/org/apache/uima/tools/ValidateDescriptor.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/FeatureStructureSelection.java
uimaj-examples/src/main/java/org/apache/uima/examples/PrintAnnotations.java
uimaj-tools/src/main/java/org/apache/uima/tools/util/gui/FileSelector.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/cpm/engine/CPECasPool.java
unused-saved/src/org/apache/uima/cas/impl/XXXdont_use_JCasCoverClassFactory.java
uimaj-tools/src/main/java/org/apache/uima/tools/docanalyzer/TfDocumentListener.java
uimaj-examples/src/main/java/org/apache/uima/examples/SofaExampleApplication.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/ui/dialogs/AddFeatureDialog.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/files/MultiResourceSelectionDialog.java
unused-saved/src/org/apache/uima/jcas/cas/JavaObjectArray.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/context/AnnotationEditingControl.java
uimaj-tools/src/main/java/org/apache/uima/tools/cvd/MultiAnnotViewerFrame.java
uimaj-ep-pear-packager/src/main/java/org/apache/uima/pear/actions/PearProjectCustomizationException.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/metadata/cpe/CasProcessorExecArgImpl.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/action/MergeAnnotationAction.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/ui/IndexesPage.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/metadata/cpe/CasProcessorCpeObject.java
uimaj-ep-pear-packager/src/main/java/org/apache/uima/pear/insd/edit/PearInstallationDescriptor.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/model/BuiltInTypes.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/model/AllTypes.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/CustomInformationControl.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/ui/ResourcesPage.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/Sofa.java
uimaj-core/src/main/java/org/apache/uima/internal/util/Obj2IntIdentityHashMap.java
uimaj-tools/src/main/java/org/apache/uima/tools/cvd/ColorIcon.java
uimaj-tools/src/main/java/org/apache/uima/tools/jcasgen/JCasTypeTemplate.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/contextmenu/TypeMenu.java
uimaj-tools/src/main/java/org/apache/uima/tools/docanalyzer/TfFocusListener.java
uimaj-tools/src/main/java/org/apache/uima/tools/cvd/FSTreeModel.java
uimaj-adapter-soap/src/main/java/org/apache/uima/adapter/soap/axis11/BinarySerializer_Axis11.java
uimaj-core/src/main/java/org/apache/uima/cas/TypeSystem.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/wizards/ResourceManagerConfigurationNewWizardPage.java
uimaj-tools/src/main/java/org/apache/uima/tools/docanalyzer/DocumentAnalyzer.java
uimaj-tools/src/main/java/org/apache/uima/tools/util/gui/ListSelector.java
uimaj-tools/src/main/java/org/apache/uima/tools/pear/install/InstallPear.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/FeatureValue.java
uimaj-core/src/main/java/org/apache/uima/util/impl/Settings_impl.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/cpm/container/deployer/socket/SocketTransport.java
uimaj-tools/src/main/java/org/apache/uima/tools/jcasgen/TypeInfo.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/metadata/cpe/CpeConfigurationImpl.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/ui/dialogs/AddIndexKeyDialog.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/metadata/cpe/CpeComponentDescriptorImpl.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/action/LowerRightAnnotationSideAction.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/xml/XMLEditor.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/BinaryCasSerDes4.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/ui/ImportResBindSection.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/cpm/engine/CPMEngine.java
uimaj-ep-cas-editor-ide/src/main/java/org/apache/uima/caseditor/ide/TypeSystemLocationPropertyPage.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/action/DeleteFeatureStructureAction.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/ui/dialogs/AddExternalResourceDialog.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/context/AnnotationEditingControlCreator.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/contextmenu/IModeMenuListener.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/wizards/CasInitializerNewWizard.java
uimaj-tools/src/main/java/org/apache/uima/tools/jcasgen/Jg.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/CommonList.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/outline/AnnotationTreeNode.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/metadata/cpe/CpeSofaMappingImpl.java
uimaj-examples/src/main/java/org/apache/uima/tutorial/RoomNumber.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/wizards/CollectionReaderNewWizardPage.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/xml/IXMLColorConstants.java
uimaj-core/src/main/java/org/apache/uima/cas/text/AnnotationFS.java
uimaj-tools/src/main/java/org/apache/uima/tools/cvd/FSNode.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/FeatureStructureSelectionIterator.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/core/TaeError.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/wizards/TypeSystemNewWizard.java
uimaj-examples/src/main/java/example/PersonTitle.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/CDEpropertyPage.java
uimaj-tools/src/main/java/org/apache/uima/tools/cvd/control/TreeFocusHandler.java
uimaj-ep-pear-packager/src/main/java/org/apache/uima/pear/insd/edit/EditInstallationDescriptorWizard.java
uimaj-core/src/main/java/org/apache/uima/internal/util/CopyOnWriteOrderedFsSet_array.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/util/ContainingConstraint.java
uimaj-tools/src/main/java/org/apache/uima/tools/jcasgen/LogThrowErrorImpl.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/cpm/utils/JavaTimer.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/xml/XMLConfiguration.java
uimaj-tools/src/main/java/org/apache/uima/tools/viewer/CasTreeViewer.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/ui/ValueSection.java
uimaj-core/src/main/java/org/apache/uima/jcas/tcas/Annotation.java
uimaj-tools/src/main/java/org/apache/uima/tools/docanalyzer/PrefsMediator.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/CasTypeSystemMapper.java
uimaj-tools/src/main/java/org/apache/uima/tools/cvd/control/UndoMgr.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/files/PickOverrideKeysAndParmName.java
uimaj-tools/src/main/java/org/apache/uima/tools/cvd/control/SetLogConfigHandler.java
uimaj-examples/src/main/java/org/apache/uima/examples/cpe/PersonTitleDBWriterCasConsumer.java
uimaj-adapter-soap/src/main/java/org/apache/uima/adapter/soap/XmlSerializer.java
uimaj-adapter-soap/src/main/java/org/apache/uima/adapter/soap/XmlSerializerFactory.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/AnnotationEditor.java
uimaj-ep-pear-packager/src/main/java/org/apache/uima/pear/actions/AddUimaNatureAction.java
uimaj-tools/src/main/java/org/apache/uima/tools/cvd/control/ColorPrefsSaveHandler.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/FeatureStructureSelectionProvider.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/cpm/engine/ArtifactProducer.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FsIndex_flat.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/NonEmptyStringList.java
uimaj-tools/src/main/java/org/apache/uima/tools/stylemap/ColorRenderer.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/xml/ColorManager.java
uimaj-tools/src/main/java/org/apache/uima/tools/cvd/control/ShowAnnotatedTextHandler.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/TAEConfiguratorPlugin.java
uimaj-ep-pear-packager/src/main/java/org/apache/uima/pear/generate/PearExportOperation.java
uimaj-tools/src/main/java/org/apache/uima/tools/cvd/StringFsPopupEventAdapter.java
uimaj-tools/src/main/java/org/apache/uima/tools/jcasgen/Waiter.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/ui/AbstractImportablePartSection.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/ui/AbstractSection.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/action/WideLeftAnnotationSideAction.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/editview/validator/FloatCellEditorValidator.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/metadata/cpe/NameValuePairImpl.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/outline/AnnotationTypeTreeNode.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/TextDocumentProvider.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/ui/CapabilityPage.java
uimaj-tools/src/main/java/org/apache/uima/tools/cvd/control/FocusFSAction.java
uimaj-tools/src/main/java/org/apache/uima/tools/cvd/control/FileSaveEventHandler.java
uimaj-tools/src/main/java/org/apache/uima/tools/util/htmlview/AnnotationViewGenerator.java
uimaj-tools/src/main/java/org/apache/uima/tools/stylemap/TableSelectionListener.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/NonEmptyIntegerList.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/MultiPageEditorContributor.java
uimaj-tools/src/main/java/org/apache/uima/tools/cvd/MultiMarkup.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/util/Span.java
uimaj-ep-pear-packager/src/main/java/org/apache/uima/pear/generate/GeneratePearWizard.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/AnnotationEditorView.java
uimaj-core/src/main/java/org/apache/uima/cas/FeatureStructure.java
uimaj-tools/src/main/java/org/apache/uima/tools/cvd/control/AnnotatorRunCPCEventHandler.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/outline/OutlineContentProviderBase.java
uimaj-tools/src/main/java/org/apache/uima/tools/cvd/control/SetCodePageHandler.java
uimaj-examples/src/main/java/org/apache/uima/examples/cpe/AnnotationPrinter.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/ui/dialogs/AddExternalResourceDependencyDialog.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/Form2Panel.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/CasEditorPlugin.java
uimaj-tools/src/main/java/org/apache/uima/tools/cpm/ElapsedTimeFormatter.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/metadata/cpe/CasProcessorMaxRestartsImpl.java
uimaj-tools/src/main/java/org/apache/uima/tools/AnnotationViewerMain.java
uimaj-tools/src/main/java/org/apache/uima/tools/cvd/control/XmiCasSaveHandler.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/cpm/engine/CPMThreadGroup.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FsIterator_subtypes_ordered.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/cpm/container/CPEContext.java
uimaj-core/src/main/java/org/apache/uima/cas/FeaturePath.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/fsview/FeatureStructureBrowserView.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/wizards/TypeSystemNewWizardPage.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/metadata/cpe/CpeLocalCasProcessorImpl.java
uimaj-tools/src/main/java/org/apache/uima/tools/stylemap/TableDropAdapter.java
uimaj-tools/src/main/java/org/apache/uima/tools/cvd/control/RemoveLanguageHandler.java
unused-saved/src/study/asm/decompiled/AnnotationDumpV3.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/ui/FlowSection.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/metadata/cpe/CpeDescriptorFactory.java
uimaj-core/src/main/java/org/apache/uima/UIMA_IllegalStateException.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/annotation/TokenDrawingStrategy.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/ui/TypePage.java
uimaj-examples/src/main/java/org/apache/uima/examples/cpe/XCasWriterCasConsumer.java
uimaj-tools/src/main/java/org/apache/uima/tools/jcasgen/IProgressMonitor.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/contextmenu/ShowAnnotationsMenu.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/ui/GeneralSection.java
uimaj-tools/src/main/java/org/apache/uima/tools/cvd/control/SetLanguageHandler.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/metadata/cpe/CpeSofaMappingsImpl.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/AnnotationInformationProvider.java
uimaj-core/src/main/java/org/apache/uima/cas/CAS.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/wizards/TAEConfiguratorNewWizardPage.java
uimaj-tools/src/main/java/org/apache/uima/tools/cvd/control/CaretChangeHandler.java
uimaj-adapter-soap/src/main/java/org/apache/uima/adapter/soap/axis11/BinaryDeserializer_Axis11.java
uimaj-tools/src/main/java/org/apache/uima/tools/cvd/AnnotationExtent.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/cpm/utils/CpmLocalizedMessage.java
uimaj-core/src/main/java/org/apache/uima/UimaContextHolder.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/cpm/vinci/DATACasUtils.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/outline/OutlineTableSorter.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/ICasDocumentListener.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/ui/dialogs/AddAllowedValueDialog.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/IAnnotationStyleListener.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/ui/dialogs/SearchThread.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/outline/SwitchStyleAction.java
unused-saved/src/org/apache/uima/jcasgen/JCasClassDefinition.java
uimaj-examples/src/main/java/org/apache/uima/tutorial/UimaMeeting.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FsIndex_iicp.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/XmiSerializationSharedData.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/ui/AggregatePage.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/styleview/AnnotationStyleViewPage.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/ui/dialogs/CommonInputDialog.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FeatureStructureImplC.java
uimaj-tools/src/main/java/org/apache/uima/tools/cvd/control/CloseAnnotationViewHandler.java
uimaj-tools/src/main/java/org/apache/uima/tools/cvd/control/FocusIRAction.java
uimaj-ep-jcasgen/src/main/java/org/apache/uima/jcas/jcasgenp/MergerImpl.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FSClassRegistry.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/SubPageSite.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/Messages.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/wizards/CasConsumerNewWizardPage.java
uimaj-tools/src/main/java/org/apache/uima/tools/cvd/tsview/MainFrame.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/editview/validator/LongCellEditorValidator.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/ui/dialogs/AddCapabilityTypeDialog.java
texts:prepare UIMA V3 alpha release
Prepare UIMA v3 for an alpha release.  The alpha is there to get a somewhat wider community to look at, test, and comment on this new direction.  No commitment is made to keeping APIs stable at the alpha level. May not be feature-complete.  See https://en.wikipedia.org/wiki/Software_release_life_cycle#Alpha
issueID:UIMA-5173
type:Improvement
changed files:
texts:compare XML results using XMLunit in uimaFIT test
Change compare method for two xml strings to use XMLunit to avoid issues with things like alternate ways of representing empty elements.
issueID:UIMA-5174
type:Task
changed files:uimaj-v3migration-jcas/src/main/java/org/apache/uima/migratev3/jcas/MigrateJCas.java
texts:uv3 correct wrong svn location for uimaj-v3migration-jcas project
by accident, this project was checked into svn at the wrong root.Copy to the correct root, and remove from the wrong root.
issueID:UIMA-5175
type:Improvement
changed files:
texts:DUCC remove obsolete code and configuration data
See Summary.
issueID:UIMA-5176
type:Bug
changed files:
texts:multi-threaded test case driver has logic bug
The test case helper class for running multi-threaded tests, MultiThreadUtils, has a missed race condition in the main runnable. The first part which waits / runs, until done, misses one test for terminate, which might become true right before the synchronized block is entered.  Saw this in one run.  Fixed by testing for ThreadControl.TERMINATE after synchronized.
issueID:UIMA-5177
type:Bug
changed files:jVinci/src/main/java/org/apache/vinci/transport/document/XTalkToSAX.java
jVinci/src/main/java/org/apache/vinci/transport/document/XTalkToSAX.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/impl/ResultSpecification_impl.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/impl/TypeOrFeature_impl.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/XCASSerializer.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/XmiCasSerializer.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/XmiSerializationSharedData.java
uimaj-core/src/main/java/org/apache/uima/resource/metadata/impl/ConfigurationGroup_impl.java
uimaj-core/src/main/java/org/apache/uima/resource/metadata/impl/Import_impl.java
uimaj-core/src/main/java/org/apache/uima/resource/metadata/impl/MetaDataObjectSerializer_plain.java
uimaj-core/src/main/java/org/apache/uima/resource/metadata/impl/MetaDataObject_impl.java
uimaj-core/src/main/java/org/apache/uima/search/impl/Attribute_impl.java
uimaj-core/src/main/java/org/apache/uima/search/impl/Filter_impl.java
uimaj-core/src/main/java/org/apache/uima/search/impl/Style_impl.java
uimaj-core/src/main/java/org/apache/uima/util/XMLSerializer.java
uimaj-core/src/main/java/org/apache/uima/util/impl/XMLParser_impl.java
uimaj-core/src/main/java/org/apache/uima/resource/metadata/impl/MetaDataObjectSerializer_plain.java
uimaj-core/src/main/java/org/apache/uima/resource/metadata/impl/MetaDataObject_impl.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/XmiCasDeserializer.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/XmiCasSerializer.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/XmiSerializationSharedData.java
uimaj-core/src/main/java/org/apache/uima/resource/metadata/impl/MetaDataObject_impl.java
uimaj-core/src/main/java/org/apache/uima/util/XMLSerializer.java
uimaj-core/src/main/java/org/apache/uima/util/impl/XMLParser_impl.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/impl/ResultSpecification_impl.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/impl/TypeOrFeature_impl.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/XCASSerializer.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/XmiCasSerializer.java
uimaj-core/src/main/java/org/apache/uima/resource/metadata/impl/ConfigurationGroup_impl.java
uimaj-core/src/main/java/org/apache/uima/resource/metadata/impl/Import_impl.java
uimaj-core/src/main/java/org/apache/uima/resource/metadata/impl/MetaDataObjectSerializer_plain.java
uimaj-core/src/main/java/org/apache/uima/resource/metadata/impl/MetaDataObject_impl.java
uimaj-core/src/main/java/org/apache/uima/search/impl/Attribute_impl.java
uimaj-core/src/main/java/org/apache/uima/search/impl/Filter_impl.java
uimaj-core/src/main/java/org/apache/uima/search/impl/Style_impl.java
texts:NPEs occur if Saxon is in the classpath
The SAX startElement method and its attributes must use an empty string and not a null when the localName or qName is not provided.Found in UIMA-5126
issueID:UIMA-5178
type:Bug
changed files:
texts:UIMA-AS: service returns wrong performance metrics
The JmsOutputChannel uses a single instance of XStream to serialize CAS performance metrics. When multiple threads serialize metrics at the same time there is a chance that the data becomes corrupted. Synchronize access to the xstream instance when serializing metrics
issueID:UIMA-5179
type:Bug
changed files:
texts:Problems with uimaj-examples project in UIMA-AS v2.8.1
Am aware of two problems: 1) project build configuration includes wrong version of AMQ jars; and 2) "UIMA Deploy AS Service" has bad configuration in VM arguments
issueID:UIMA-518
type:Improvement
changed files:uimaj-core/src/main/java/org/apache/uima/internal/util/BrowserUtil.java
uimaj-core/src/main/java/org/apache/uima/internal/util/BrowserUtil.java
texts:improve browser utilities to configured the used browser in UIMA
The annotation viewer has the possibility to use the browser to show the annotation results. By default on Linux the "mozilla" browser is used.On "old" Linux systems, "mozilla" is correct to call, but I think on newer Linux systems, "mozilla" never works...http://www.linuxworld.com/news/2006/101106-portland-project.html describesxdg-utils, and says Fedora, OpenSUSE, and Debian have already committed to installing the utilities.One utility enables visiting a Web page in the user's chosen browser.On Debian, this capability is available via the command "x-www-browser", which launches the user's graphical browser of choice.OSDL's xdg-utils extends the availability across distributions.See http://portland.freedesktop.org/wiki/ for details on xdg-utils.   It is licensed under the MIT license, andthe MIT/X11 license is listed as category "A" (allowed) on Cliff's 3rd party page.
issueID:UIMA-5180
type:Bug
changed files:
texts:UIMA-AS: service returns list of performance metrics in an inconsistent order
Performance metrics list returned to the client does not preserve consistent order in deployments using concurrent process threads. For example if there are two pipelines  containing AE1, AE2, AE3, the service sends metrics list as: AE2, AE1, AE3 for CAS1  and for CAS2 it returns AE3, AE1, AE2. The order of AEs in the list should be consistent across all CASes.
issueID:UIMA-5181
type:Improvement
changed files:
texts:DUCC Web Server (WS) Viz should display actual and schedulable sizes in concordance with Machines page
On Viz page: Hover over machine name title should display actual machine size. Hover over box should display used, unused, and schedulable sizes.
issueID:UIMA-5182
type:Improvement
changed files:
texts:ducc-mon should hide/show other large values when displaying Job, AP, or Service specifications
Extend the classpath hide/show buttons to other fields such as jvm args & environment to produce a more readable view
issueID:UIMA-5183
type:Improvement
changed files:
texts:Support "fenced-off" worker nodes with read-only access to DUCC_HOME
Nodes with protected data may have restricted access to all but a few filesystems so the DUCC agent may not have write access to the usual log directory under DUCC_HOME.  Add support for node-specific logging configuration files so some nodes can be made to log elsewhere.
issueID:UIMA-5184
type:Bug
changed files:
texts:UIMA-AS: AMQ white listing of packages not working
It appears that white listing of packages is not working anymore. Current approach was to use this:    ConnectionFactoryIniter cfIniter =            new ConnectionFactoryIniter((ActiveMQConnectionFactory)connectionFactory);    cfIniter.whiteListPackages();Apparently this no longer works. Modify code to use an alternate way of achieving this with     ((ActiveMQConnectionFactory)aConnectionFactory).setTrustAllPackages(true);
issueID:UIMA-5185
type:Improvement
changed files:
texts:uv3 throw new exception v2 binary delta deserialization
Version 3 models the v2 layout by scanning all reachable FSs; this drops (versus v2) unreachable FSs.  Binary form deltas encode the changes relative to this model. Because the model for v3 doesn't match v2's (due to the omission of unreachable FSs), delta updates can't be handled when reading a v2-generated delta cas into a v3 instance.  Throw an exception for this case (using binary deserializing of Delta CASs generated using V2 into a V3 instance).  Document this in the backwards compatibility section.
issueID:UIMA-5186
type:Improvement
changed files:
texts:DUCC Web Server (WS) should support other than jobs page as the default home
Presently, when visiting the WS with no specific page indicated in the URL the user is directed to the defacto home page which is the jobs page.Suggested improvement:Allow the site to configure a welcome page in site.ducc.properties: Optionally configure the Web Server welcome page, default is index.html (which forwards to jobs.html)ducc.ws.welcome.page = index.htmlTo utilize, the site might, say, specify:ducc.ws.welcome.page = system.daemons.htmlThe welcome page is fixed for the lifetime of the WS process.
issueID:UIMA-5187
type:Bug
changed files:
texts:Ruta: Document block extension not available in workbench
Ruta: Document block extension not available in workbench
issueID:UIMA-5188
type:Bug
changed files:
texts:UIMA-DUCC: the PM logs excessively
Reduce logging in the PM. Looks like 10MB log fills up very quickly, The current code dumps the entire process map on every OR publication.
issueID:UIMA-5189
type:Bug
changed files:
texts:UIMA-AS: error handling not working when XMI deserialization fails
The UIMA-AS service is not handling CAS deserialization errors correctly. When an incoming XMI contains bad data, the UIMA serializer throws org.xml.sax.SAXParseException; lineNumber: 1; columnNumber: 585;Character reference "&#The full stack trace below shows that the request flows through an error handler but the UIMA-AS cache look ups fail resulting in NPE. 09:54:38.24 - 1:org.apache.uima.adapter.jms.activemq.SpringContainerDeployer.doStartListeners:INFO: Controller: XTokenizerAggregate Trying to Start Listener onEndpoint: queue://XTokenizerAggregate Selector: Command=2000 ORCommand=2002 Broker: tcp://localhost:6161609:54:38.193 - 1:org.apache.uima.adapter.jms.activemq.SpringContainerDeployer.doStartListeners:INFO: Controller: XTokenizerAggregate Trying to Start Listener onEndpoint: queue://XTokenizerAggregate Selector: Command=2001 Broker:tcp://localhost:6161609:55:11.411 - 16:org.apache.uima.aae.handler.input.ProcessRequestHandler_impl.handleProcessRequestFromRemoteClient:WARNING: Service: XTokenizerAggregate Runtime Exception09:55:11.411 - 16:org.apache.uima.aae.handler.input.ProcessRequestHandler_impl.handleProcessRequestFromRemoteClient:WARNING:org.xml.sax.SAXParseException; lineNumber: 1; columnNumber: 585;Character reference "&#        at com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser.parse(AbstractSAXParser.java:1239)        at org.apache.uima.aae.UimaSerializer.deserializeCasFromXmi(UimaSerializer.java:187)        at org.apache.uima.aae.handler.input.ProcessRequestHandler_impl.deserializeCASandRegisterWithCache(ProcessRequestHandler_impl.java:220)        at org.apache.uima.aae.handler.input.ProcessRequestHandler_impl.handleProcessRequestFromRemoteClient(ProcessRequestHandler_impl.java:531)        at org.apache.uima.aae.handler.input.ProcessRequestHandler_impl.handle(ProcessRequestHandler_impl.java:1062)        at org.apache.uima.aae.handler.input.MetadataRequestHandler_impl.handle(MetadataRequestHandler_impl.java:78)        at org.apache.uima.adapter.jms.activemq.JmsInputChannel.onMessage(JmsInputChannel.java:731)        at org.springframework.jms.listener.AbstractMessageListenerContainer.doInvokeListener(AbstractMessageListenerContainer.java:689)        at org.springframework.jms.listener.AbstractMessageListenerContainer.invokeListener(AbstractMessageListenerContainer.java:649)        at org.springframework.jms.listener.AbstractMessageListenerContainer.doExecuteListener(AbstractMessageListenerContainer.java:619)        at org.springframework.jms.listener.AbstractPollingMessageListenerContainer.doReceiveAndExecute(AbstractPollingMessageListenerContainer.java:307)        at org.springframework.jms.listener.AbstractPollingMessageListenerContainer.receiveAndExecute(AbstractPollingMessageListenerContainer.java:245)        at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.invokeListener(DefaultMessageListenerContainer.java:1144)        at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.executeOngoingLoop(DefaultMessageListenerContainer.java:1136)        at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.run(DefaultMessageListenerContainer.java:1033)        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)        at org.apache.uima.aae.UimaAsThreadFactory$1.run(UimaAsThreadFactory.java:132)        at java.lang.Thread.run(Thread.java:745)09:55:11.412 - 16:org.apache.uima.aae.error.handler.ProcessCasErrorHandler.handleError:WARNING: Service: XTokenizerAggregate Runtime Exception09:55:11.412 - 16:org.apache.uima.aae.error.handler.ProcessCasErrorHandler.handleError:WARNING:org.xml.sax.SAXParseException; lineNumber: 1; columnNumber: 585;Character reference "&#        at com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser.parse(AbstractSAXParser.java:1239)        at org.apache.uima.aae.UimaSerializer.deserializeCasFromXmi(UimaSerializer.java:187)        at org.apache.uima.aae.handler.input.ProcessRequestHandler_impl.deserializeCASandRegisterWithCache(ProcessRequestHandler_impl.java:220)        at org.apache.uima.aae.handler.input.ProcessRequestHandler_impl.handleProcessRequestFromRemoteClient(ProcessRequestHandler_impl.java:531)        at org.apache.uima.aae.handler.input.ProcessRequestHandler_impl.handle(ProcessRequestHandler_impl.java:1062)        at org.apache.uima.aae.handler.input.MetadataRequestHandler_impl.handle(MetadataRequestHandler_impl.java:78)        at org.apache.uima.adapter.jms.activemq.JmsInputChannel.onMessage(JmsInputChannel.java:731)        at org.springframework.jms.listener.AbstractMessageListenerContainer.doInvokeListener(AbstractMessageListenerContainer.java:689)        at org.springframework.jms.listener.AbstractMessageListenerContainer.invokeListener(AbstractMessageListenerContainer.java:649)        at org.springframework.jms.listener.AbstractMessageListenerContainer.doExecuteListener(AbstractMessageListenerContainer.java:619)        at org.springframework.jms.listener.AbstractPollingMessageListenerContainer.doReceiveAndExecute(AbstractPollingMessageListenerContainer.java:307)        at org.springframework.jms.listener.AbstractPollingMessageListenerContainer.receiveAndExecute(AbstractPollingMessageListenerContainer.java:245)        at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.invokeListener(DefaultMessageListenerContainer.java:1144)        at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.executeOngoingLoop(DefaultMessageListenerContainer.java:1136)        at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.run(DefaultMessageListenerContainer.java:1033)        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)        at org.apache.uima.aae.UimaAsThreadFactory$1.run(UimaAsThreadFactory.java:132)        at java.lang.Thread.run(Thread.java:745)09:55:11.413 - 16:org.apache.uima.aae.error.handler.ProcessCasErrorHandler.handleError:INFO: Controller: XTokenizerAggregate Handling Exception. Delegate:ID:deploy-trusty-2-51366-1479431901326-1:1:15 Cas Id:ff737f8:15875035005:-4fe209:55:11.413 - 16:org.apache.uima.aae.error.handler.ProcessCasErrorHandler.handleError:INFO: Controller: XTokenizerAggregate Parent CAS For CAS:ff737f8:15875035005:-4fe2 Not Found In Cache09:55:11.413 - 16:org.apache.uima.aae.controller.AggregateAnalysisEngineController_impl.process:WARNING: Service: XTokenizerAggregate Runtime Exception09:55:11.413 - 16:org.apache.uima.aae.controller.AggregateAnalysisEngineController_impl.process:WARNING:org.apache.uima.aae.error.AsynchAEException: Cas Not Found InCasManager Cache. CasReferenceId::ff737f8:15875035005:-4fe2 is Invalid        at org.apache.uima.aae.InProcessCache.getCacheEntryForCAS(InProcessCache.java:522)        at org.apache.uima.aae.controller.AggregateAnalysisEngineController_impl.process(AggregateAnalysisEngineController_impl.java:1117)        at org.apache.uima.aae.error.handler.ProcessCasErrorHandler.handleError(ProcessCasErrorHandler.java:573)        at org.apache.uima.aae.error.ErrorHandlerChain.handle(ErrorHandlerChain.java:57)        at org.apache.uima.aae.handler.input.ProcessRequestHandler_impl.handleProcessRequestFromRemoteClient(ProcessRequestHandler_impl.java:601)        at org.apache.uima.aae.handler.input.ProcessRequestHandler_impl.handle(ProcessRequestHandler_impl.java:1062)        at org.apache.uima.aae.handler.input.MetadataRequestHandler_impl.handle(MetadataRequestHandler_impl.java:78)        at org.apache.uima.adapter.jms.activemq.JmsInputChannel.onMessage(JmsInputChannel.java:731)        at org.springframework.jms.listener.AbstractMessageListenerContainer.doInvokeListener(AbstractMessageListenerContainer.java:689)        at org.springframework.jms.listener.AbstractMessageListenerContainer.invokeListener(AbstractMessageListenerContainer.java:649)        at org.springframework.jms.listener.AbstractMessageListenerContainer.doExecuteListener(AbstractMessageListenerContainer.java:619)        at org.springframework.jms.listener.AbstractPollingMessageListenerContainer.doReceiveAndExecute(AbstractPollingMessageListenerContainer.java:307)        at org.springframework.jms.listener.AbstractPollingMessageListenerContainer.receiveAndExecute(AbstractPollingMessageListenerContainer.java:245)        at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.invokeListener(DefaultMessageListenerContainer.java:1144)        at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.executeOngoingLoop(DefaultMessageListenerContainer.java:1136)        at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.run(DefaultMessageListenerContainer.java:1033)        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)        at org.apache.uima.aae.UimaAsThreadFactory$1.run(UimaAsThreadFactory.java:132)        at java.lang.Thread.run(Thread.java:745)09:55:11.414 - 16:org.apache.uima.aae.controller.AggregateAnalysisEngineController_impl.process:WARNING: Service: XTokenizerAggregate Runtime Exception09:55:11.414 - 16:org.apache.uima.aae.controller.AggregateAnalysisEngineController_impl.process:WARNING:java.lang.NullPointerException        at org.apache.uima.impl.Util.getStartingView(Util.java:45)        at org.apache.uima.analysis_engine.asb.impl.FlowControllerContainer.computeFlow(FlowControllerContainer.java:219)        at org.apache.uima.aae.controller.AggregateAnalysisEngineController_impl.process(AggregateAnalysisEngineController_impl.java:1224)        at org.apache.uima.aae.error.handler.ProcessCasErrorHandler.handleError(ProcessCasErrorHandler.java:573)        at org.apache.uima.aae.error.ErrorHandlerChain.handle(ErrorHandlerChain.java:57)        at org.apache.uima.aae.handler.input.ProcessRequestHandler_impl.handleProcessRequestFromRemoteClient(ProcessRequestHandler_impl.java:601)        at org.apache.uima.aae.handler.input.ProcessRequestHandler_impl.handle(ProcessRequestHandler_impl.java:1062)        at org.apache.uima.aae.handler.input.MetadataRequestHandler_impl.handle(MetadataRequestHandler_impl.java:78)        at org.apache.uima.adapter.jms.activemq.JmsInputChannel.onMessage(JmsInputChannel.java:731)        at org.springframework.jms.listener.AbstractMessageListenerContainer.doInvokeListener(AbstractMessageListenerContainer.java:689)        at org.springframework.jms.listener.AbstractMessageListenerContainer.invokeListener(AbstractMessageListenerContainer.java:649)        at org.springframework.jms.listener.AbstractMessageListenerContainer.doExecuteListener(AbstractMessageListenerContainer.java:619)        at org.springframework.jms.listener.AbstractPollingMessageListenerContainer.doReceiveAndExecute(AbstractPollingMessageListenerContainer.java:307)        at org.springframework.jms.listener.AbstractPollingMessageListenerContainer.receiveAndExecute(AbstractPollingMessageListenerContainer.java:245)        at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.invokeListener(DefaultMessageListenerContainer.java:1144)        at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.executeOngoingLoop(DefaultMessageListenerContainer.java:1136)        at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.run(DefaultMessageListenerContainer.java:1033)        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)        at org.apache.uima.aae.UimaAsThreadFactory$1.run(UimaAsThreadFactory.java:132)        at java.lang.Thread.run(Thread.java:745)09:55:11.414 - 16:org.apache.uima.aae.controller.AggregateAnalysisEngineController_impl.sendReply:WARNING: Service: XTokenizerAggregate Runtime Exception09:55:11.414 - 16:org.apache.uima.aae.controller.AggregateAnalysisEngineController_impl.sendReply:WARNING:org.apache.uima.aae.error.AsynchAEException: Cas Not Found InCasManager Cache. CasReferenceId::ff737f8:15875035005:-4fe2 is Invalid        at org.apache.uima.aae.InProcessCache.getCacheEntryForCAS(InProcessCache.java:522)        at org.apache.uima.aae.controller.AggregateAnalysisEngineController_impl.sendReplyWithShutdownException(AggregateAnalysisEngineController_impl.java:996)        at org.apache.uima.aae.controller.AggregateAnalysisEngineController_impl.process(AggregateAnalysisEngineController_impl.java:1250)        at org.apache.uima.aae.error.handler.ProcessCasErrorHandler.handleError(ProcessCasErrorHandler.java:573)        at org.apache.uima.aae.error.ErrorHandlerChain.handle(ErrorHandlerChain.java:57)        at org.apache.uima.aae.handler.input.ProcessRequestHandler_impl.handleProcessRequestFromRemoteClient(ProcessRequestHandler_impl.java:601)        at org.apache.uima.aae.handler.input.ProcessRequestHandler_impl.handle(ProcessRequestHandler_impl.java:1062)        at org.apache.uima.aae.handler.input.MetadataRequestHandler_impl.handle(MetadataRequestHandler_impl.java:78)        at org.apache.uima.adapter.jms.activemq.JmsInputChannel.onMessage(JmsInputChannel.java:731)        at org.springframework.jms.listener.AbstractMessageListenerContainer.doInvokeListener(AbstractMessageListenerContainer.java:689)        at org.springframework.jms.listener.AbstractMessageListenerContainer.invokeListener(AbstractMessageListenerContainer.java:649)        at org.springframework.jms.listener.AbstractMessageListenerContainer.doExecuteListener(AbstractMessageListenerContainer.java:619)        at org.springframework.jms.listener.AbstractPollingMessageListenerContainer.doReceiveAndExecute(AbstractPollingMessageListenerContainer.java:307)        at org.springframework.jms.listener.AbstractPollingMessageListenerContainer.receiveAndExecute(AbstractPollingMessageListenerContainer.java:245)        at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.invokeListener(DefaultMessageListenerContainer.java:1144)        at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.executeOngoingLoop(DefaultMessageListenerContainer.java:1136)        at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.run(DefaultMessageListenerContainer.java:1033)        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)        at org.apache.uima.aae.UimaAsThreadFactory$1.run(UimaAsThreadFactory.java:132)        at java.lang.Thread.run(Thread.java:745)
issueID:UIMA-519
type:Bug
changed files:unused-saved/src/org/apache/uima/cas/impl/AnnotationIndexImpl.java
texts:Infinite Loop in AnnotationIndexImpl tree()
There seems to be an infinite loop within the AnnotationIndexImpl addChildren() method, called by the tree() method.  The subiterator that is passed in doesn't seem to be pushed to the next value, and so it just sits and loops forever.  I changed the loop to the code below and it seems to solve the problem.while (it.hasNext()) {    annot = (AnnotationFS) it.next();    dtr = new AnnotationTreeNodeImpl();    dtr.set(annot);    node.addChild(dtr);    addChildren(dtr, subiterator(annot));}
issueID:UIMA-5191
type:Bug
changed files:uimaj-core/src/main/java/org/apache/uima/analysis_engine/impl/MultiprocessingAnalysisEngine_impl.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/impl/MultiprocessingAnalysisEngine_impl.java
texts:Free instance of agreggate with cas multiplier in MultiprocessingAnalysisEngine
I have a aggregate analysis engine that contains  2 casmultiplierannotators. I instantiate this aggregate with the interfaceUIMAFramework.produceAnalysisEngine(specifier, 1, 0) for multithreadedprocessing. The last casmultiplier generate more than one cas for eachinput CAS from first casmultiplier. The issue is that after first time that the last casmultipler's hasNext method method returns false, the MultiprocessingAnalysisEngine_impl assumes that the instance ofAggregateAnalysisEngine that processes the request has ended, andthen this instance is free to process ahother request from other thread, and it is not true, because missing child cas to process from de first casmultipler, producing concurrency errors.
issueID:UIMA-5192
type:Bug
changed files:
texts:Ruta: RutaDescriptorFactory does not create executable descriptions for anonymous script strings
Ruta: RutaDescriptorFactory does not create executable descriptions for anonymous script strings
issueID:UIMA-5193
type:Improvement
changed files:
texts:DUCC failover support (static)
DUCC should provide the capability to move the head node, comprising the broker, database, Orchestrator, PM, RM, SM, and WS, and have the agents seamlessly switch over w/o service disruption.&#8212;In this "static" failover implementation the agents are pre-configured with a list of potential head nodes.  Introduced into the ducc.properties file is the key ducc.head.failover whose value is a comma separated list of failover nodes:ducc.head.failover = node1, node2, node3...The agents at boot time are configured for broker failover to this set of nodes.If ducc.head.failover is not specified, then the failover functionality is simply not supported for the installation (e.g. no seamless transition of running agents to an alternate broker head node).If ducc.head.failover is specified, then the node specified for ducc.head must appear in this list.
issueID:UIMA-5194
type:Bug
changed files:
texts:uv3 delta serializing- handle case where delta is for non-reachable FS
In version 3 FSs may be unreachable (if not indexed, and if no other FS that is reachable references them).  Serialization only serializes the reachable FSs; it can't find the others. It's possible that some modifications are done to FSs which subsequently are unreachable.  When serializing, these modifications can't be found in the set of known FSs being serialized.  Handle this case by skipping serialization of those modifications.
issueID:UIMA-5195
type:Test
changed files:
texts:uv3 add capability to test for v2 - v3 compatibility of serialized forms for form6 compression
Add similar capability for form 6 tests that capture and reuse serialization and random number sequences, as was done for form 4, to verify compatibility with v3, and to insure changes don't break ability to read serializations written with older versions.  Refactor some common things with form 4 testing to share.
issueID:UIMA-5196
type:Improvement
changed files:
texts:DUCC Web Server (WS) file pager usability improvement
Current file pager is a bit clumsy.  The data display goes off to the right and one must scroll to the bottom to use the horizontal scroll to view same.Improvements: use wrapping to contain the data within the viewing area eliminate need for horizontal scroll bar enable resize of data viewing area
issueID:UIMA-5197
type:Bug
changed files:
texts:DUCC Web Server (WS) support startsWith function, when not present in browser&#39;s js
Problem discovered with Opera.
issueID:UIMA-5198
type:Question
changed files:
texts:uima 2.9.0 files missing eclipse update site
the archives of the 2.9.0 release are missing on the eclipse update site, though plugin can't be installed
issueID:UIMA-5199
type:Bug
changed files:
texts:UIMA-AS should check for a core UIMA version no older than it
Perhaps check that the major is the same and the minor no older.  The 3rd digit could be ignored.  The versions will usually be identical since a matching version is included in the UIMA-AS package.
issueID:UIMA-520
type:Bug
changed files:uimaj-core/src/main/java/org/apache/uima/impl/CustomResourceFactory_impl.java
uimaj-core/src/main/java/org/apache/uima/util/CasCreationUtils.java
texts:Calling CasCreationUtils to produce a custom resource is ignoring the passed in ResourceManager in some cases
A specific case: CasCreationUtils.getMetaDataList(Collection, ResourceManager, Map) for a ResourceSpecifier callsUIMAFramewor.produceResource but passes in Collections.EMPTY_MAP instead of creating one with the ResourceManager.This results in resources defined in class paths specified only via the ResourceManager not being found.
issueID:UIMA-5200
type:Bug
changed files:
texts:leak of some meta artifacts prior to release to uima-as eclipse-update site
It appears that the uima-as RC1 leaked some metadata artifacts for the Eclipse update site to the official release. (the content and artifact jars and their signatures, look at the dates on the files here: http://www.apache.org/dist/uima/eclipse-update-site/uima-as/These should be reverted, and the release process fixed to not update this site until the release is approved.Note that the plugins themselves were not copied to the release site.
issueID:UIMA-5201
type:Bug
changed files:uimaj-core/src/main/java/org/apache/uima/cas/impl/BinaryCasSerDes.java
texts:uv3 support deserialization of v2 binary serializations
Because v3 has more built-in types, even "identical" type systems (from the user's point of view) are different.  Accomodate this when deserializing v2 serialized binary CASs (including compressed form 4 and 6).
issueID:UIMA-5202
type:Bug
changed files:
texts:uv3 update eclipse plugins to require java 8
mark the plugins as requiring java 8, not 7.
issueID:UIMA-5204
type:Improvement
changed files:
texts:Ruta: improve error message of launcher in workbench
Ruta: improve error message of launcher in workbench
issueID:UIMA-5205
type:Task
changed files:
texts:switch next uimaj release from 2.9.1 to 2.10.0 due to semantic versioning
Semver tool reports several changes to public APIs that added methods to ResourceManager: destroy, getExternalResources, and loadUserClass, and one method to Resource_ImplBase: getRelativePathResolver.
issueID:UIMA-5206
type:Improvement
changed files:
texts:DUCC Web Server (WS) should provide restriction on responses comprising user data
DUCC WS should be configurable such that responses comprising user data can be prevented over http, instead requiring https.
issueID:UIMA-5207
type:Improvement
changed files:uimaj-core/src/main/java/org/apache/uima/List_of_ints.java
uimaj-core/src/main/java/org/apache/uima/internal/util/IntVector.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/DoubleArray.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/FSArray.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/FSList.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/IntegerArray.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/IntegerArrayList.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/LongArray.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/NonEmptyIntegerList.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/BooleanArray.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/ByteArray.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/DoubleArray.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/FSList.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/FloatArray.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/FloatList.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/IntegerArray.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/IntegerList.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/LongArray.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/NonEmptyFloatList.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/NonEmptyIntegerList.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/ShortArray.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/StringList.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/BooleanArray.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/ByteArray.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/DoubleArray.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/FSList.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/FloatList.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/IntegerArray.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/IntegerList.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/LongArray.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/NonEmptyFSList.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/NonEmptyFloatList.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/NonEmptyIntegerList.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/NonEmptyStringList.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/ShortArray.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/StringList.java
uimaj-core/src/main/java/org/apache/uima/internal/util/PositiveIntSet.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/BooleanArray.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/ByteArray.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/DoubleArray.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/FSArrayList.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/FSHashSet.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/FloatArray.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/IntegerArray.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/IntegerArrayList.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/LongArray.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/ShortArray.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/FSArray.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/FSArrayList.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/FSList.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/NonEmptyFSList.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/NonEmptyStringList.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/StringArray.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/StringList.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/FSArray.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/FSList.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/NonEmptyFSList.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/NonEmptyStringList.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/StringArray.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/StringList.java
texts:make FSArray/List, StringArray/list iterable
The common collection-style Feature Structures in UIMA could implement iterable, to enable writing for loops over them.  Add these to the JCas impls for those built-ins.
issueID:UIMA-5208
type:Improvement
changed files:uimaj-core/src/main/java/org/apache/uima/resource/ResourceConfigurationException.java
uimaj-core/src/main/java/org/apache/uima/util/impl/Settings_impl.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/BooleanArray.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/ByteArray.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/DoubleArray.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/FSList.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/FloatArray.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/FloatList.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/IntegerArray.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/IntegerList.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/LongArray.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/NonEmptyFloatList.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/NonEmptyIntegerList.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/ShortArray.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/StringList.java
uimaj-core/src/main/java/org/apache/uima/util/impl/Settings_impl.java
texts:Also search the classpath and datapath when loading an extenal overrides file
Improve the error message when an external override settings file is not found.  If not found in the filesystem search the classpath, and also the datapath.
issueID:UIMA-521
type:Task
changed files:
texts:Add LICENSE, DISCLAIMER, and NOTICES files to source jars produced by Maven

issueID:UIMA-5210
type:Bug
changed files:
texts:UIMA-Ducc: Rogue process detector broken for services
The rogue process detector is not detecting services that had been orphaned. The current code detecting ducc daemons is faulty and needs to change. Instead of looking at -Dducc.components=XX, it should check if the process user (owner) is the same as an owner of an agent process. If both match, the process is not rogue.
issueID:UIMA-5211
type:Improvement
changed files:
texts:fix dependency for xmlunit to be more universal, move to uimaj-test-util
Fix dependency for xmlunit to be part of uimaj-test-util, and included via transitive dependencies in other projects using it (e.g. uimaj-json)
issueID:UIMA-5212
type:Improvement
changed files:
texts:DUCC Database (db) user "guest" with r/o access should employ private pw
Although database user "guest" has just r/o access, the pw should be private since restricted user-supplied data may be visible in the database.
issueID:UIMA-5213
type:Bug
changed files:
texts:UIMA-DUCC: deprecate ducc.agent.node.metrics.sys.gid.max
The ducc.agent.node.metrics.sys.gid.max should be deprecated and replaced with ducc.agent.rogue.process.sys.uid.max which more accurately describes its purpose. This value is used during rogue process detection. Defines a threshold what Ducc considers a "system" process. Any process whose user id < ...uid.max is not rogue and will be left alone. For the time being both properties (...gid.max and ...uid.max) will be supported. If, by mistake, both are specified and have different values, the ..uid.max is used.
issueID:UIMA-5215
type:Improvement
changed files:
texts:DUCC: on process launch failure agent should set reason to content of stderr
When duccling fails to launch a process (due to bad log dir for example), currently an agent sets reason=Croaked hiding the real cause of the failure. Instead, agent should check stderr and if there is anything there, it should use it to populate the reason. The WS and OR should be checked if there is any dependency on word "Croaked" to make display decisions.
issueID:UIMA-5218
type:Bug
changed files:
texts:UIMA-DUCC: Prepare for 2.2.0 release
Update dependencies, README, LICENSE, NOTICE, etc
issueID:UIMA-5219
type:New Feature
changed files:
texts:Ruta: provide information about type usage in script when parsing
Ruta: provide information about type usage in script when parsing. This information can be used to automatically optimize the runtime performance of internal indexing.
issueID:UIMA-522
type:Bug
changed files:uimaj-core/src/main/java/org/apache/uima/cas/impl/CASImpl.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/XmiCasDeserializer.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/XmiCasSerializer.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/CASImpl.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/XmiCasDeserializer.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/XmiCasSerializer.java
texts:XMI Serialization fails for parameterized arrays
When a parameterized array (an array with an elementType) is serialized to XMI, the elements of the array are not correctly added to the queue of FSs to be serialized.  That means that if these FSs are not otherwise indexed or referenceable, they will be omitted from the output.
issueID:UIMA-5220
type:New Feature
changed files:
texts:Ruta: add option to automatically optimize internal indexing
Ruta: add option to atuomatically optimize internal indexing. Mind type variables and their values set by configuration parameter. Store befin, end and partof information only of used types. Mind the interaction with reindexOnly configuration parameter.
issueID:UIMA-5222
type:Bug
changed files:
texts:DUCC failover support (monitor)
Job monitor (and other monitors) should dynamically switch to new DUCC head node.
issueID:UIMA-5225
type:Improvement
changed files:uimaj-core/src/main/java/org/apache/uima/jcas/cas/AnnotationBase_Type.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FeatureStructureImplC.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/annotation/EclipseAnnotationPeer.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FeatureStructureImpl.java
uimaj-core/src/main/java/org/apache/uima/jcas/tcas/Annotation_Type.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/fsview/FeatureStructureLabelProvider.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/outline/AnnotationTreeNode.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/CASImpl.java
uimaj-core/src/main/java/org/apache/uima/util/FileUtils.java
uimaj-core/src/main/java/org/apache/uima/jcas/JCas.java
uimaj-core/src/main/java/org/apache/uima/util/CasCopier.java
texts:uv3 backward compatibility work
Try uv3 with other big frameworks (uimaFIT, Ruta, uima-as, ducc, add-ons), find / fix backward compatibility issues. Also temporarily set the semver backwards compatibility level to catch things, and review them.
issueID:UIMA-5226
type:New Feature
changed files:
texts:DUCC script to assist in gathering problem determination information
admin/ducc_gather_logsUsage: ducc_gather_logs &#91;options&#93;Options:  -h, --help                           show this help message and exit  -d DIRECTORY, --directory=DIRECTORY  path to directory for gz file,                                       default=/tmpPurpose: gather problem determination information comprising DUCC logs and configuration data into a gz file.
issueID:UIMA-5227
type:Bug
changed files:
texts:Customized user logging fails in DUCC Job Driver
When a user specifies a custom logging configurator via -Djava.util.logging.config.class it fails in the JD as its ToLog class creates a logger using the DUCC classpath which does not have the users class.
issueID:UIMA-5228
type:Bug
changed files:
texts:Ruta: label expression on optional rule element may lead to invalid annotations
Ruta: label expression on optional rule element may lead to invalid annotations
issueID:UIMA-5229
type:Bug
changed files:
texts:Ruta: feature expression on label expression on multiple matches by quantifier rule element
Ruta: feature expression on label expression on multiple matches by quantifier rule element may fail. a:A b:B*{a.x != b.x};
issueID:UIMA-523
type:Bug
changed files:
texts:Some of the anchors on the sandbox website don&#39;t work

issueID:UIMA-5231
type:Bug
changed files:
texts:Ruta: reset temp variables for labels for each rule match
Ruta: reset temp variables for labels for each rule match
issueID:UIMA-5232
type:Bug
changed files:
texts:DUCC missing DUCC Book documentation
DUCC Book documentation is missing for several new commands introduced in release 2.2.0.
issueID:UIMA-5233
type:Improvement
changed files:uimaj-core/src/main/java/org/apache/uima/jcas/cas/IntegerArray.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/DoubleArrayFSImpl.java
uimaj-core/src/main/java/org/apache/uima/cas/text/AnnotationFS.java
uimaj-tools/src/main/java/org/apache/uima/tools/cvd/FSNode.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FeatureStructureImpl.java
uimaj-core/src/main/java/org/apache/uima/jcas/impl/JCasImpl.java
uimaj-core/src/main/java/org/apache/uima/cas/FSIndex.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/Sofa.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/XmiCasDeserializer.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/CommonArrayFSImpl.java
uimaj-core/src/main/java/org/apache/uima/cas/CommonArrayFS.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/FSArrayList.java
uimaj-json/src/main/java/org/apache/uima/json/JsonCasSerializer.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/ByteArray.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/TypeImpl_string.java
uimaj-core/src/main/java/org/apache/uima/cas/SofaFS.java
uimaj-core/src/main/java/org/apache/uima/cas/CAS.java
uimaj-core/src/main/java/org/apache/uima/cas/AnnotationBaseFS.java
uimaj-core/src/main/java/org/apache/uima/jcas/tcas/Annotation_Type.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FloatArrayFSImpl.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FSIteratorImplBase.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/FloatArray.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/StringArray.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/ByteArrayFSImpl.java
uimaj-core/src/main/java/org/apache/uima/util/CasCopier.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/ArrayFSImpl.java
uimaj-core/src/main/java/org/apache/uima/jcas/tcas/Annotation.java
uimaj-core/src/main/java/org/apache/uima/cas/FeatureStructure.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/BinaryCasSerDes.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/BinaryCasSerDes4.java
uimaj-core/src/main/java/org/apache/uima/cas/StringArrayFS.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/BooleanArrayFSImpl.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/SofaFSImpl.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/LongArray.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/XmiCasSerializer.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/BinaryCasSerDes6.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/ShortArrayFSImpl.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/DoubleArray.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/CASImpl.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/IntArrayFSImpl.java
uimaj-core/src/main/java/org/apache/uima/cas/BooleanArrayFS.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/BooleanArray.java
uimaj-core/src/main/java/org/apache/uima/cas/IntArrayFS.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/IntegerArrayList.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/TypeImpl.java
uimaj-core/src/main/java/org/apache/uima/cas/ArrayFS.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/StringArrayFSImpl.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/AnnotationBase_Type.java
uimaj-core/src/main/java/org/apache/uima/cas/FloatArrayFS.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/AllFSs.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FeatureStructureImplC.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/ShortArray.java
uimaj-core/src/main/java/org/apache/uima/cas/AbstractCas_ImplBase.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/FSArray.java
uimaj-core/src/main/java/org/apache/uima/cas/FSIterator.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FeaturePathImpl.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FSClassRegistry.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/AnnotationBase.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/CASSerializer.java
uimaj-core/src/main/java/org/apache/uima/jcas/JCas.java
uimaj-core/src/main/java/org/apache/uima/cas/LongArrayFS.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/LongArrayFSImpl.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/CommonPrimitiveArray.java
texts:uv3 backwards compatibility - add nonJCas built-in cover classes back
UIMA v2 implemented for built-ins, 2 kinds of Java cover classes.  One was "JCas" the other not.  Users not using the JCas could make use of the other style.  V3 has only one style, and uses JCas versions for the actual Feature Structure Implementation.  Create interfaces for the non-JCas style, and supply them with default methods that cast "this" to the JCas style actually being used.Arrange the hierarchy to follow v2 where possible. Take out new v3 upper hierarchy common classes where a v2 class already exists; use that class instead (with appropriate casting as above) - so that V2 code that uses these continues to work. Update the docs: remove the part which says users have to rename the non-JCas class uses to the JCas ones (will no longer be required).
issueID:UIMA-5238
type:Bug
changed files:uimaj-core/src/main/java/org/apache/uima/cas/SelectFSs.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/SelectFSs_impl.java
texts:uv3 select api - collision in method name unordered
The Select API has an unordered method.  But it also implements the "stream" APIs, which has a same-named method (with a different purpose).  Rename the Select API's method to orderNotNeeded
issueID:UIMA-5239
type:Bug
changed files:
texts:DUCC Web Server (WS) too verbose with logging disk info
DUCC WS should only log disk info every 15 minutes (at most) unless there is an actual change.
issueID:UIMA-524
type:Task
changed files:
texts:Prepare for distribution of UIMA artifacts in Maven repository
Add required <license> and <scm> sections to POM files.Update extractAndBuild script to build the Maven bundles necessary for upload (including source jars)
issueID:UIMA-5240
type:Improvement
changed files:
texts:List of UIMA-related publications
Since UIMA is being used quite a bit in scientific contexts, it seems quite reasonable to set up a prominent "publications" page that helps researchers find out about core publications related to the UIMA framework including the respective bibtex data.
issueID:UIMA-5241
type:Improvement
changed files:
texts:Mention auto-detection of index definitions and type prios in documentation
Mention auto-detection of index definitions and type prios in documentation
issueID:UIMA-5242
type:Improvement
changed files:
texts:Ruta: Unify usage of annotation/type expressions in combination with matchers
Ruta: Unify usage of annotation/type expressions in combination with matchers. There are currently three annotation/type based matchers, but there should only be one... but none supports all functionality, like type functions and annotation address expression. Extend usage of AnnotationTypeExpression.
issueID:UIMA-5243
type:Bug
changed files:
texts:DUCC admin script vary_on gives extraneous help information
Eliminate extraneous help information.
issueID:UIMA-5244
type:Bug
changed files:
texts:Problem moved to UIMA-5283 -- was: SM sometimes keeps starting failing instances forever
If multiple instances of a service are started and some fail before all have been started, the SM will keep restarting instances and ignores the init-failure limit.When staring 10 with an init-failure limit of 1 it created >100 instances ... only an unregister stopped it.
issueID:UIMA-5245
type:Bug
changed files:
texts:UIMA-DUCC: refactor agent to fetch child process metrics from cgroups
Currently ducc gets swap, rss, major faults, and cpu usage for each child process from variety of sources including ps, external scripts, cgroups. All needed metrics are available in cgroups. The rss, swap and pgin can be fetched from memory.stat file.If cgroups are not ON, the values for the above metrics will be set to -1 and shown as N/A to the user in the duccmon.
issueID:UIMA-5246
type:Bug
changed files:
texts:Serialize re-registration of DUCC services to reduce chance  of duplicate services
After an unregister + register ducc-mon has sometimes shown 2 service with the same endpoint.  Apparently the older unregistered one was not marked as "archived" in the DB.  Currently new instances of the service may be created before all of the old ones have been removed - would be better if the old service is completely removed before the new instances created.Should also handle failures to update the DB.
issueID:UIMA-5247
type:Improvement
changed files:
texts:JavaDoc should mention that overlapping annotations are not returned by selectCovered/selectCovering and friends
JavaDoc should mention that overlapping annotations are not returned by selectCovered/selectCovering and indexCovered/indexCovering.Cf. discussion in https://github.com/openminted/uc-tdm-socialsciences/issues/21#issuecomment-272183692
issueID:UIMA-5249
type:Improvement
changed files:uimaj-core/src/main/java/org/apache/uima/cas/impl/Id2FS.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/CASImpl.java
uimaj-core/src/main/java/org/apache/uima/jcas/impl/JCasHashMap.java
uimaj-core/src/main/java/org/apache/uima/jcas/impl/JCasHashMapSubMap.java
texts:uv3 JCasHashMap Java 8 adaption
update JCasHashMap design for Java 8 - eliminate need for complex synchronization locking.
issueID:UIMA-525
type:Improvement
changed files:
texts:Move 2.1 SVN tags under a common directory
Following discussion on dev list (http://mail-archives.apache.org/mod_mbox/incubator-uima-dev/200708.mbox/%3c46B9D908.90606@gmx.de%3e), reorganizing 2.1 SVN tags under a common directory.
issueID:UIMA-5250
type:Bug
changed files:uimaj-core/src/main/java/org/apache/uima/cas/impl/FsIndex_bag.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FsIterator_subtypes_snapshot.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FSIndexRepositoryImpl.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FsIterator_aggregation_common.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/LowLevelIterator.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FSGenerator.java
uimaj-core/src/main/java/org/apache/uima/internal/util/CopyOnWriteOrderedFsSet_array.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FsIterator_backwards.java
unused-saved/src/org/apache/uima/jcas/impl/CASMetadata.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FsIterator_limited.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FsIterator_singletype.java
uimaj-core/src/main/java/org/apache/uima/internal/util/CopyOnWriteObjHashSet.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FsIndex_set_sorted.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FsIterator_bag.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FsIndex_singletype.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/CasState.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FsIndex_iicp.java
uimaj-core/src/main/java/org/apache/uima/internal/util/OrderedFsSet_array.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FsIterator_subtypes_ordered.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FsIndex_flat.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/Subiterator.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FilteredIterator.java
texts:uv3 copy-on-write needs reset for moveToFirst/Last/fs
In v2, iterators may throw ConcurrentModificationException when an index is updated while it's being iterated over. In v3, this is avoided by doing the minimal copy-on-write operation to the affected portion of the indexes. There is an exception in v2 to this: 3 operations "reset" the modification tracking state to the current state of the index.  These operations are those that move the interator to a known position.  There are three API calls that do this: moveToFirst, moveToLast, and moveTo (meaning move to a position indicated by the passed-in FeatureStructure). The corresponding operation for v3 has to be: for these three operations, if a copy-on-write operation has occurred, to reset the iterator to a fresh view of the current state of the underlying index (discarding the copy-on write version).
issueID:UIMA-5251
type:Bug
changed files:uimaj-core/src/main/java/org/apache/uima/internal/util/OrderedFsSet_array.java
texts:uv3 set-sorted index mishandles freespace in some cases
Testing with Ruta found a bug in the handling of free space in OrderedFsSet_array handling of freespace, when the freespace is moved down to the beginning of already present freespace. The amount of freespace added needs to account for already present freespace at the beginning.Also fix toString to not processBatch - causes difficulties in debugging in this area (because the debugger calls toString if the GUI is showing this element).
issueID:UIMA-5252
type:Bug
changed files:
texts:uima core debug plugin no longer building - dependency issue
Seems maven central changed, and building on linux fails due to lack of eclipse platform dependency. Failed to execute goal on project uimaj-ep-debug: Could not resolve dependencies for project org.apache.uima:uimaj-ep-debug:jar:2.10.0-SNAPSHOT: Failed to collect dependencies at org.eclipse.jdt:org.eclipse.jdt.debug.ui:jar:3.2.0 -> org.eclipse.jdt:org.eclipse.jdt.ui:jar:3.12.2 -> org.eclipse.platform:org.eclipse.search:jar:3.11.1 -> org.eclipse.platform:org.eclipse.ui:jar:3.108.1 -> org.eclipse.platform:org.eclipse.swt:jar:3.105.2 -> org.eclipse.platform:org.eclipse.swt.gtk.linux.aarch64:jar:&#91;3.105.2,3.105.2&#93;: No versions available for org.eclipse.platform:org.eclipse.swt.gtk.linux.aarch64:jar:&#91;3.105.2,3.105.2&#93; within specified rangeThe step after org.eclipse.jdt.debug.ui:3.2.0 appears to hit new artifacts uploaded Jan 7.  The failing one has a machine qualifier: "aarch64" which is for an "ARM" machine.  So the build probably needs to be directed to not build for that architecture?Build was on "ubuntu" machine, which is unlikely to be an "arm" - so probably something is wrong with the maven upload that happened on Jan 7.  Investigating.There are multiple artifacts missing in maven central from the Jan 7 update.  The fix seems to be to exclude somewhat high up in the chain of dependencies.  Added 4 exclude points determined by trial and error to ep-debug and ep-launcher, the other projects don't seem to have an issue.  Now builds.
issueID:UIMA-5253
type:Improvement
changed files:
texts:Auto-generate JCas classes for examples
Auto-generate JCas classes for examples. That will facilitate building uimaFIT against V2 and V3.
issueID:UIMA-5254
type:Bug
changed files:
texts:DUCC Orchestrator (OR) improved trace capability of reported Node Inventory
See Summary.
issueID:UIMA-5255
type:Bug
changed files:
texts:UIMA-DUCC:cgdelete fails if cpu and cpuacct are sym linked to same dir
On systems where cpu and cpuacct are symlinked to the same location, the cgdelete command fais. Instead using  cgdelete memory,cpu,cpuacct:path use  cgdelete memory,cpu:path.Modify code determine if cpu and cpuacct are sym linked to the same dir and adjust cgdelete command accordingly.
issueID:UIMA-5256
type:Improvement
changed files:
texts:Ruta/uv3 accomodation, ruta-core
These are the minor changes I made to ruta-core to accomodate UIMA v3; I believe they are compatible with V2.in Ruta.java the 2nd "inject" method, change the 2nd arg from Annotation ... to FeatureStructureImpl ... remove the 3rd "inject" method - now covered by 2nd. change getAddresses arg list to have type FeatureStructureImpl[] remove the 2nd getAddresses method (now covered by previous one).These (above) changes accomodate the fact that there's just one impl of Annotation in v3, and AnnotationImpl is now an interface.============In RutaEngine, the process method sets a variable:boolean typeSystemChanged = lastTypeSystem != cas.getTypeSystem();In UIMA V3, loading a new type system which is identical to a previously committed type system, results in the cas.getTypeSystem being == to the "lastTypeSystem".  So as a result, you can't use this to determine if a new type system was loaded.  The line 484 fails for one test because of this.  The workaround is to set "typeSystemChanged" to true, always.  But you might have a better solution.
issueID:UIMA-5257
type:Improvement
changed files:
texts:uimaFIT/uv3 accomodation
These changes were needed to make the tests run in uimaFIT.  I think all of these are backward OK with V2.CasDumpWriterTestThe "toString" for FeatureStructures writes the id as well, so that needs to be stripped.  e.g. FS "Foo" is printed as "Foo:17".After line 55, insert:    // uima v3 writes "Uima-type-name:nnnnn" delete the :nnnnn to make it the same as v2    actual = actual.replaceAll("(\\w*)\\:d{1,}(s)", "$1$2");This same fix needs to be applied multiple places.  here are the others: JCasBuilderTest, after line 69 CasDumpWriterTest (in uimafit-legacy-support) JCasBuilderTest (in uimafit-legacy-support)=================in FSUtilTest: there's a compare test for the two styles of Annotation class in V2:  "Annotation" and "AnnotationImpl".  In V3, there's only one style so this variation testing could be skipped.  Better yet, it can be written so it works in V2 and V3, by changing the compare of the feature value's class-name to a constant, to testing that the feature value is an "instanceof" AnnotationImpl (in the 2nd test).  The first test, seeing if the feature value's classname is "org.apache.uima.jcas.tcas.Annotation" is still valid.This test happens in two places in FSUtilTest, both need updating.
issueID:UIMA-5259
type:Bug
changed files:uimaj-examples/src/main/java/org/apache/uima/examples/PrintAnnotations.java
uimaj-examples/src/main/java/org/apache/uima/examples/SofaExampleApplication.java
uimaj-examples/src/main/java/org/apache/uima/examples/XmlDetagger.java
uimaj-examples/src/main/java/org/apache/uima/examples/cas/PersonTitleAnnotator.java
uimaj-examples/src/main/java/org/apache/uima/examples/casMultiplier/CasMultiplierExampleApplication.java
uimaj-examples/src/main/java/org/apache/uima/tutorial/ex2/RoomNumberAnnotator.java
texts:uv3 update examples to uv3 level
The examples have some very old code and code style.  While they work, (due to backward compatibility support), they are not the best from a pedagogical point of view.
issueID:UIMA-526
type:Improvement
changed files:
texts:Cas Editor: Add a new Edit View for editing of FS

issueID:UIMA-5260
type:Task
changed files:
texts:uv3 move in svn to top level spot
Right now, uima v3 is in svn in uima/uimaj/branches/experiment-v3-jcas.Move to more permanent spot, probably uima/uimaj-v3/trunk would be most conventional for Maven.
issueID:UIMA-5261
type:Task
changed files:
texts:jcasgen-maven-plugin pom missing the scm element
not sure why this hasn't been noticed; perhaps it's being correctly defaulted.
issueID:UIMA-5262
type:Bug
changed files:
texts:Ruta Workbench - can&#39;t disable Annotation
When working with RUTA Workbenchit sometimes happens that one of the annotation types is selected and can't be deselected anymore.Event when deselecting the annotation, the annotated text is highlighted. You can see an example of this behavior on the attached Screenshots.Sometimes it helps deleting all Output Documents and restarting eclipse but sometimes it's needed to reinstall Workbench and recreate the project. (Maybe there is a better way which I don't know).
issueID:UIMA-5264
type:Bug
changed files:
texts:uv3 eclipse plugins build missing uimaj-ep-jcasgenp
The built eclipse update site is missing the uimaj-ep-jcasgen plugin.  The build correctly built it, the publishing steps failed at the very end.  Finally traced to an issue with the version level of the maven-bundle-plugin. This was noticed before when UIMA-5202 was worked on, because another plugin (the uimaj-ep-configurator) also got dropped, when, as part of 5202, the maven-bundle-plugin was upgraded to 3.0.1.  This was done to fix errors that occurred when the bundle plugin was scanning Java 8 classes and looking up things related to that.  Fix this by restoring the default back to 2.3.7, and just overriding this to 3.0.1 for the one plugin needing it, the uimaj-ep-runtime plugin and the one plugin not building in Eclipse env: uimaj-ep-launcher.
issueID:UIMA-5265
type:Task
changed files:
texts:uv3 changing versioning to avoid potential eclipse issues
Our build toolset uses the maven build-helper plugin to convert between maven version conventions and OSGi conventions.  That build helper plugin converts 1.2.3-SNAPSHOT to 1.2.3.SNAPSHOT.  The hyphen (maven convention) is converted to a period (Eclipse convention).  This seems to fall apart somewhat, when working with 1.2.3-alpha-SNAPSHOT - the coverter changes just the first hyphen it finds (left to right scan) to a period, giving for this example 1.2.3.alpha-SNAPSHOT.  There are other problems with this, see https://docs.oracle.com/middleware/1212/core/MAVEN/maven_version.htm#MAVEN400.To avoid these issues, I'm renaming 3.0.0-alpha-SNAPSHOT to 3.0.0-SNAPSHOT.  The readme and announcement will say alpha.
issueID:UIMA-5266
type:Improvement
changed files:
texts:uimaj eclipse "debug" plugin - bad startup config maybe
The plugin configuration for the Debug plugin has an invalid startup configuration.  Logs message: The org.eclipse.ui.IStartup extension from 'org.apache.uima.debug' does not provide a valid 'startup' element.
issueID:UIMA-5267
type:Bug
changed files:uimaj-tools/src/main/java/org/apache/uima/tools/jcasgen/Jg.java
uimaj-core/src/main/java/org/apache/uima/cas/TypeSystem.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/TypeSystemImpl.java
uimaj-tools/src/main/java/org/apache/uima/tools/jcasgen/Jg.java
texts:uv3 jcasgen type system impl finish details of new built-in types
FSHashSet, FSArrayList and IntegerArrayList are missing from jcasgen table of built-in types.  Also, missing type and feature final specs.  JCasgen generating wrong imports because of this.
issueID:UIMA-5269
type:Task
changed files:
texts:Ruta: extract typesystems to separate artefact
Ruta: extract typesystems to separate artefact in order to make it easier to switch between v2 and v3
issueID:UIMA-527
type:Bug
changed files:
texts:script file syntax does not correct if UIMA_HOME is not set
if UIMA_HOME is not set the script file syntax is not correct. >> runPearInstaller.bat'USAGE_UIMA' is not recognized as an internal or external command, operable program or batch file.>> call "\bin\setUimaClassPath" The system cannot find the path specified.
issueID:UIMA-5270
type:Bug
changed files:
texts:uv3 FSHashSet has bad hashcode impl
The hashcode is calculated in two different ways, depending on internal state. Both ways must yield the same result, but don't.
issueID:UIMA-5271
type:Improvement
changed files:
texts:uv3 reorganize some unit test support
To share unit test support code, move classes used by multiple projects to uimaj-test-util, not in the /test branch because that branch is not put on the classpath via maven dependency mechanism across different projects.
issueID:UIMA-5272
type:Improvement
changed files:uimaj-tools/src/main/java/org/apache/uima/tools/jcasgen/Jg.java
uimaj-core/src/main/java/org/apache/uima/UimaSerializable.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/BuiltinTypeKinds.java
uimaj-core/src/main/java/org/apache/uima/cas/CAS.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/BinaryCasSerDes.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/BinaryCasSerDes4.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/BinaryCasSerDes6.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/TypeSystemConstants.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/TypeSystemImpl.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/FSArrayList.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/FSHashSet.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/IntegerArrayList.java
texts:uv3 redo 3 new built-ins as non-builtins
Having new built-ins breaks v2 compatibility.  put new JCas Java Object types into new project uimaj-types; remove from core and from special jcasgen support
issueID:UIMA-5273
type:Improvement
changed files:uimaj-core/src/main/java/org/apache/uima/resource/ResourceConfigurationException.java
uimaj-core/src/main/java/org/apache/uima/resource/ResourceConfigurationException.java
uimaj-core/src/main/java/org/apache/uima/util/impl/Settings_impl.java
texts:Check for circular definitions in external override settings
Make lookup fail instead of producing StackOverflowError
issueID:UIMA-5274
type:Improvement
changed files:uimaj-core/src/main/java/org/apache/uima/resource/Resource_ImplBase.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/asb/impl/FlowControllerContainer.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/impl/PrimitiveAnalysisEngine_impl.java
uimaj-core/src/main/java/org/apache/uima/resource/Resource_ImplBase.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/asb/impl/FlowControllerContainer.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/asb/impl/FlowControllerContainer.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/asb/impl/FlowControllerContainer.java
uimaj-core/src/main/java/org/apache/uima/UimaContextHolder.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/asb/impl/FlowControllerContainer.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/impl/AggregateAnalysisEngine_impl.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/impl/PrimitiveAnalysisEngine_impl.java
uimaj-core/src/main/java/org/apache/uima/resource/Resource_ImplBase.java
uimaj-core/src/main/java/org/apache/uima/resource/impl/FileResourceSpecifier_impl.java
uimaj-core/src/main/java/org/apache/uima/resource/metadata/impl/Import_impl.java
uimaj-core/src/main/java/org/apache/uima/resource/metadata/impl/MetaDataObject_impl.java
uimaj-core/src/main/java/org/apache/uima/UimaContextHolder.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/asb/impl/FlowControllerContainer.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/impl/AggregateAnalysisEngine_impl.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/impl/PrimitiveAnalysisEngine_impl.java
uimaj-core/src/main/java/org/apache/uima/resource/Resource_ImplBase.java
uimaj-core/src/main/java/org/apache/uima/resource/impl/FileResourceSpecifier_impl.java
uimaj-core/src/main/java/org/apache/uima/resource/metadata/impl/Import_impl.java
uimaj-core/src/main/java/org/apache/uima/resource/metadata/impl/MetaDataObject_impl.java
uimaj-core/src/main/java/org/apache/uima/resource/Resource_ImplBase.java
uimaj-core/src/main/java/org/apache/uima/resource/impl/FileResourceSpecifier_impl.java
uimaj-core/src/main/java/org/apache/uima/resource/metadata/impl/Import_impl.java
uimaj-core/src/main/java/org/apache/uima/resource/metadata/impl/MetaDataObject_impl.java
texts:Support descriptor customization by allowing external setting variables in some fields
Currently the <envVarRef> element supports customization via system properties in 4 ways (see below).  UIMA could also support the ${variable-name} syntax in these text fields.  In addition it could also be supported in the value for the name and location attributes of the import element so that an aggregate's delegates could be controlled via external settings.  This might also be done by changing the primitive descriptor as in 2 & 3 below, but in some cases a completely different delegate descriptor is preferable.From the References document:The syntax for environment variable references is <envVarRef>&#91;VariableName&#93;</envVarRef> , where &#91;VariableName&#93; is any valid Java system property name. Environment variable references are valid in the following places:1)   The value of a configuration parameter (String-valued parameters only)2)  The <annotatorImplementationName> element of a primitive AE descriptor3)   The <name> element within <analysisEngineMetaData>4)   Within a <fileResourceSpecifier> or <fileLanguageResourceSpecifier>
issueID:UIMA-5275
type:Task
changed files:uimaj-tools/src/main/java/org/apache/uima/tools/jcasgen/Jg.java
texts:uv3 rename release to have a "-alpha" qualifier
Further study seems to show that this would be OK; see http://stackoverflow.com/questions/13004443/how-does-maven-sort-version-numbersThis will mark the maven artifacts as -alpha, which is a good thing.
issueID:UIMA-5277
type:Bug
changed files:
texts:start/stop_ducc scripts should check for unwanted args
If an option flag is omitted or invalid the stop/start scripts parse it as an argument and then ignore it.Also check_ducc doesn't recognize a daemon stuck with a procname of "JIT Compilation"
issueID:UIMA-5278
type:Bug
changed files:
texts:uv3 empty iterator for FS collections over primitives wrong type
v3 has iterators for collections over primitive types (e.g. IntegerList, IntegerArrayList, IntegerArray, LongArray, etc.) which support the Java 8 API PrimitiveIterator.  But the code for supplying the "empty" version doesn't support this API.This applies only to IntegerList, because only UIMA XyzList forms have "empty" versions, and Xyz = Integer, Float, String, and FS, and only Integer has a iterator subtype in PrimitiveIterator. Also, some impls over primitive collections having XXXConsumers defined for functional interfaces are missing support for those in forEach().  Applies to DoubleArray, LongArray, IntegerArray, IntegerArrayList.
issueID:UIMA-5279
type:Bug
changed files:
texts:DUCC Web Server (WS) may show incorrect values for PgIn and Swap on mixed cgroup cluster
On a cluster that has some machines with cgroups enabled and others not, jobs and services that have instances deployed across both types of machines will have incorrect values displayed for PgIn and Swap on the respective Jobs and Services pages.
issueID:UIMA-528
type:New Feature
changed files:
texts:Add information on RASP4UIMA to external resources page
Also add a general sentence about updates to this part of our website.
issueID:UIMA-5281
type:Bug
changed files:
texts:UIMA-DUCC: Agent not stopping JPs if state=Starting
The agent checks state of the process before trying to stop it. The stop will apply running processes only. Modify processInRunningOrInitializingState() to include a check for state=Starting.
issueID:UIMA-5282
type:Bug
changed files:
texts:DUCC simulator fails to start multiple virtual agents on a node
Duplicate daemon detector is too aggressive
issueID:UIMA-5284
type:Bug
changed files:
texts:UIMA-DUCC: JP does not send FailedInitialization status to an agent
For DD jobs, a JP is not communicating to an agent correct state when there is an initialization failure. Instead of sending FailedInitialization, the JP sends Stopping. In such case, an agent does not set reason for failure and a job does not end quickly. Instead, the OR keeps asking for new JPs to start.
issueID:UIMA-5285
type:Bug
changed files:
texts:uv3 fix build process to name signatures on eclipse artifacts properly
The .asc, .md5, and .sha1 files produced for Eclipse artifacts (plugins and features) are named 3.0.0-alpha instead of 3.0.0.alpha (needed to match the eclipse convention used for the main artifact.
issueID:UIMA-5286
type:Improvement
changed files:uimaj-core/src/main/java/org/apache/uima/cas/impl/CASImpl.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/FSArray.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/FSArrayList.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/FSHashSet.java
texts:uv3 consider improving FSArrayList and FSHashSet to work with PEARs
Built-in types like FSArray used to store references to feature structures have are implemented to check for, and accomodate, FS refs that need conversion to/from PEAR trampolines.  This support is missing in the implementation of FSArrayList and FSHashSet, leading to documenting "exceptions" about these.  Consider supporting PEAR trampolines, so the documentation can shrink, and the complexity of the system is reduced (everything works the same way, no exceptions).
issueID:UIMA-5287
type:Improvement
changed files:
texts:uv3 user guide doc improvements
misc doc improvements
issueID:UIMA-5288
type:Bug
changed files:
texts:DUCC Web Server (WS) ducc-servlet/json-system-daemons-data does not give correct status for Broker and Database
Status for ducc daemons is correct for all except Broker and Database which always are returned incorrectly as "unknown".
issueID:UIMA-5289
type:Bug
changed files:
texts:DUCC Web Server (WS) NPE DuccHandler.java:1621
Handle job not found more elegantly.
issueID:UIMA-529
type:Bug
changed files:uimaj-core/src/main/java/org/apache/uima/util/CasCreationUtils.java
uimaj-core/src/main/java/org/apache/uima/util/CasCreationUtils.java
uimaj-core/src/main/java/org/apache/uima/InternationalizedException.java
uimaj-core/src/main/java/org/apache/uima/resource/ResourceInitializationException.java
uimaj-core/src/main/java/org/apache/uima/util/CasCreationUtils.java
texts:Type System Merging not checking for compatible element types, nor compatible multipleReferencesAllowed settings
When merging two identically named types, the feature merge for identically named features needs to check that the element type (for arrays and lists) is specified the same, and the setting of the multipleReferencesAllowed is the same.See thread in uima-dev: http://thread.gmane.org/gmane.comp.apache.uima.devel/1260
issueID:UIMA-5290
type:Bug
changed files:
texts:UIMA-DUCC: current version of jna-4.2.2 not working
The jna version 4.2.2 is not working correctly causing a jvm to hang. Switch back to older version 4.0.0 which has been proven to work fine.
issueID:UIMA-5291
type:Bug
changed files:
texts:UIMA-AS: eclipse update site missing from Eclipse install menus
Noticed that UIMA-AS plugins are not showing on the Eclipse update site.  A quick look seems to indicate they are there, so something has gone wrong.  Needs investigation.To reproduce: start a new fresh unzipped Eclipse (I used the current download - neon.2 ),Click on Install new software, and select http://www.apache.org/dist/uima/eclipse-update-site/uima-as.  This produces:"Unable to read repository at http://www.apache.org/dist/uima/eclipse-update-site/uima-as"caused by java.io.IOException: http://www.apache.org/dist/uima/eclipse-update-site/uima-as is not a valid repository location.
issueID:UIMA-5292
type:Bug
changed files:
texts:DUCC Orchestrator (OR) does not propagate Reason/Extended Reason when log file is unwritable
If Job is submitted with a specified user log directory that becomes unwritable no information is available on duccmon and user does not know what went wrong.  In fact the Agent does report the trouble to the Orchestrator, but the Orchestrator fails to update the records (map) published to all, including duccmon.Fix is to insure Orchestrator updates its publishing correctly.
issueID:UIMA-5293
type:Improvement
changed files:uimaj-examples/src/main/java/org/apache/uima/examples/cas/PersonTitleAnnotator.java
uimaj-examples/src/main/java/org/apache/uima/tutorial/ex2/RoomNumberAnnotator.java
uimaj-core/src/main/java/org/apache/uima/analysis_component/AnalysisComponent_ImplBase.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/AnalysisEngine.java
uimaj-core/src/main/java/org/apache/uima/util/Level.java
uimaj-core/src/main/java/org/apache/uima/util/Logger.java
uimaj-core/src/main/java/org/apache/uima/util/impl/JSR47Logger_impl.java
uimaj-core/src/main/java/org/apache/uima/util/impl/Log4jLogger_impl.java
uimaj-core/src/main/java/org/apache/uima/util/impl/Logger_common_impl.java
uimaj-core/src/main/java/org/apache/uima/util/impl/Logger_impl.java
uimaj-core/src/main/java/org/apache/uima/util/impl/Slf4jLogger_impl.java
uimaj-core/src/main/java/org/apache/uima/analysis_component/AnalysisComponent_ImplBase.java
uimaj-core/src/main/java/org/apache/uima/util/Logger.java
uimaj-core/src/main/java/org/apache/uima/util/impl/JSR47Logger_impl.java
uimaj-core/src/main/java/org/apache/uima/util/impl/Log4jLogger_impl.java
uimaj-core/src/main/java/org/apache/uima/util/impl/Logger_impl.java
texts:uv3 logging upgrade
Upgrade logging per discussion on dev mailing list, including upgrading existing log4j adapter to support log4j 2, and adding slf4j support.
issueID:UIMA-5294
type:Task
changed files:
texts:move uimaj eclipse update site for uimaj v3 to separate site
To avoid confusion with people loading 3.0.0 versions, have a separate update site subarea for this.  Name it to indicate it's "pre-production" levels.
issueID:UIMA-5296
type:Task
changed files:
texts:rebuild uimaj 3.0.0-alpha eclipse update site
The upload of the 3.0.0-alpha eclipse plugins broke uima-as eclipse plugins.Revert this, and investigate.
issueID:UIMA-5298
type:Bug
changed files:
texts:Life-cycle methods not called on all components instantiated by uimaFIT
Life-cycle methods (e.g. "destroy") not called on all components instantiated by uimaFIT.
issueID:UIMA-5299
type:Bug
changed files:
texts:Work around UIMA-5097 in SimplePipeline unit test
Due to UIMA-5097 unit test SimplePipelineTest.test1() can fail in situations where multiple unit tests are run on the same JVM.
issueID:UIMA-53
type:Improvement
changed files:uimaj-core/src/main/java/org/apache/uima/analysis_engine/asb/impl/ASB_impl.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/asb/impl/FlowContainer.java
uimaj-core/src/main/java/org/apache/uima/flow/CasFlow_ImplBase.java
uimaj-core/src/main/java/org/apache/uima/flow/Flow.java
uimaj-core/src/main/java/org/apache/uima/flow/JCasFlow_ImplBase.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/asb/impl/ASB_impl.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/asb/impl/FlowContainer.java
uimaj-core/src/main/java/org/apache/uima/flow/CasFlow_ImplBase.java
uimaj-core/src/main/java/org/apache/uima/flow/Flow.java
uimaj-core/src/main/java/org/apache/uima/flow/JCasFlow_ImplBase.java
texts:Add Flow.aborted() method
We may want to consider adding a Flow.aborted() method that is called when a CAS encounters an error and will not undergo further processing. This would allow the Flow object to release resources.  Also Flow objects could potentially be pooled by a FlowController for better performance.
issueID:UIMA-530
type:Bug
changed files:
texts:Cas Editor: The Annotation Editor throws sometimes exceptions if used as FS drag source

issueID:UIMA-5300
type:Bug
changed files:
texts:Ruta: wordlist/table declaration in blocks broken
Ruta: wordlist/table declaration in blocks broken. resourceManager field is directly accessed causing NPE in blocks
issueID:UIMA-5301
type:Bug
changed files:
texts:DUCC Book issues
Info is present when issuing start_ducc and stop_ducc --help.
issueID:UIMA-5302
type:Bug
changed files:
texts:DUCC Web Server (WS) System Broker page incomplete for Preference -> Table Style = Scroll
Info is available when Preference -> Table Style = Classic.
issueID:UIMA-5303
type:Bug
changed files:
texts:selectPreceding fails to skip over annotations
The annotation index is sorted by begin (ascending) and end (descending). That effect is taken into account in selectFollowing and selectBetween to ensure that only annotations that begin after a certain offset or that lie entirely between two given offsets are returned.The present implementation of selectPreceding seeks backwards from the reference annotation until it finds the first annotation that ends before the start of the reference annotation. However, then it fails to recognize that the end offsets of annotations are not monotonically decreasing because the end-offset is only the secondary sorting criterium (the primary criterium is the begin-offset). This appears to be a bug in the present implementation.This issue exists since when selectPreceding was first introduced in version 1.1.0 (pre-Apache). Hence it is difficult to tell if anybody has come to rely on it.
issueID:UIMA-5304
type:Bug
changed files:uimaj-core/src/main/java/org/apache/uima/cas/impl/SelectFSs_impl.java
uimaj-core/src/main/java/org/apache/uima/cas/SelectFSs.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/SelectFSs_impl.java
texts:uv3 select api javadocs and fixes
Do the javadocs for the SelectFSs API.  Fix miscellaneous issues including: apis taking FSs which must be subtypes of Annotation, change arg type to Annotation When doing the "single element required" check, move in the direction indicated by any shiftedBy argument. for following/preceding with int args, use just one int "position" arg (the other was being ignored.)
issueID:UIMA-5305
type:Improvement
changed files:uimaj-core/src/main/java/org/apache/uima/jcas/cas/DoubleArray.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/IntegerArray.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/IntegerArrayList.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/IntegerList.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/LongArray.java
texts:uv3 Built-in collection feature types having primitive values: support Java 8 non-boxing
Java 8 has methods for dealing with collections of primitive values which avoid boxing/unboxing.  Take advantage of these for UIMA features having types: DoubleArray, LongArray, IntegerArray, IntegerList, IntegerArrayList
issueID:UIMA-5307
type:Improvement
changed files:
texts:improve version compatibility checking for uimaj
switch from using the semver rule for backwards compatibility (no longer supported) to japicmp which gives much better reporting.
issueID:UIMA-5308
type:Bug
changed files:uimaj-cpe/src/main/java/org/apache/uima/collection/impl/cpm/container/ProcessingContainer_Impl.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/cpm/container/ProcessingContainer_Impl.java
texts:Fix potential NPE in ProcessContainer_Impl.java
Marshall examined the Jenkins build reports, which included a "PMD" report, which had some "red" notations (more serious), which found a bug that can cause NPE in ProcessingContainer_Impl.java in the CPE.The following :        if (( (filterExpression.getOperand() == null               && filterExpression.getOperand().getOperand() == null) && !exists)should be:        if (( (filterExpression.getOperand() == null              &#124;| filterExpression.getOperand().getOperand() == null) && !exists)
issueID:UIMA-5309
type:Bug
changed files:
texts:UIMA-DUCC: when running ps command user name is truncated
When collecting processes using ps command a user name is truncated to 12 characters. For example ProcessBuilder pb = new ProcessBuilder("ps", "-Ao",     "user:12,pid,ppid,args,stat", "--no-heading");Note: user:12 This command appears in multiple places in DUCC:CGroupsManager, NodeMemInfoCollector, NodeUsersCollectorModify to prevent truncation of the user name.
issueID:UIMA-531
type:Bug
changed files:
texts:Cas Editor: Delete button of the FSView does not work correctly
The button only works for Annotation but not for FeatureStructures.
issueID:UIMA-5311
type:Bug
changed files:
texts:UIMA-DUCC: performance breakdown wrong for scaled synch pipelines
When a sync processing pipeline is scaled up, the performance breakdown code does not merge stats from replicated AEs. For example, AG1: AE1 - AE2   (pipeline1)AG2: AE1 - AE2   (pipeline2)The performance breakdown list contains:AG1/AE1AG1/AE2AG2/AE1AG2/AE2Instead, the list should contain:AE1 (merged)AE2 (merged)
issueID:UIMA-5314
type:Bug
changed files:
texts:DUCC utility tooling for check_ducc, start_ducc... does not correctly test ssh viability
ducc_util.py has function def ssh_operational() which attempts to check the viability of the ssh command.  It does not correctly handle the case where the ssh worked but with a warning message issued.This function should examine all lines returned from the ssh attempt and if one of them has the expected results then ssh is operational!  Otherwise print the failing command and the results.
issueID:UIMA-5316
type:Bug
changed files:
texts:Ruta: feature expression resolved as type expression within inlined rule
c:Concept{IS(Token)-> CREATE(Candidate, "parent" = c)}    <-{ma:c.matchedAnnotations{ma.end==c.end, ma.begin!=c.begin};};
issueID:UIMA-5317
type:Bug
changed files:
texts:Ruta: PlainTextAnnotator in not a uimaFIT analysis engine
also check the other engines
issueID:UIMA-5318
type:Task
changed files:
texts:uv3 update v3 users guide with info on logging changes

issueID:UIMA-5319
type:Task
changed files:
texts:uv3 fix build api-change-report to select the proper previous version
The japicmp plugin is using the defaults - this breaks if you "deploy" the version you're going to release - it then compares the 3.0.0-alpha02 (or whatever) with the 3.0.0-alpha02-SNAPSHOT which are, of course identical.
issueID:UIMA-532
type:Bug
changed files:
texts:Cas Editor: Select all action does not work in FSView

issueID:UIMA-5320
type:Task
changed files:uimaj-core/src/main/java/org/apache/uima/analysis_engine/asb/impl/FlowControllerContainer.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/impl/AggregateAnalysisEngine_impl.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/impl/PrimitiveAnalysisEngine_impl.java
uimaj-core/src/main/java/org/apache/uima/impl/Util.java
uimaj-core/src/main/java/org/apache/uima/resource/Resource_ImplBase.java
texts:uv3 reduce maven dependencies on specific logging back ends for uimaj-core
Try changing dependencies on log4j 2 to "provided" scope.
issueID:UIMA-5321
type:Task
changed files:
texts:uv3 update license/notice for new logging jars in binary distr
update the license / notice as required for including new logging jars in binary distribution. update the lic/not/research.txt file
issueID:UIMA-5322
type:Task
changed files:
texts:Create copy of uimaFIT source tree to be based on UIMA v3
Create copy of uimaFIT source tree to be based on UIMA v3
issueID:UIMA-5323
type:Task
changed files:
texts:Adjust uimaFIT v3 branch to actually build against UIMA v3
Adjust uimaFIT v3 branch to actually build against UIMA v3. This might entail code changes.
issueID:UIMA-5324
type:Improvement
changed files:uimaj-core/src/main/java/org/apache/uima/resource/Resource_ImplBase.java
uimaj-core/src/main/java/org/apache/uima/impl/ChildUimaContext_impl.java
uimaj-core/src/main/java/org/apache/uima/impl/RootUimaContext_impl.java
uimaj-core/src/main/java/org/apache/uima/impl/UimaContext_ImplBase.java
uimaj-core/src/main/java/org/apache/uima/impl/UIMAFramework_impl.java
uimaj-core/src/main/java/org/apache/uima/analysis_component/AnalysisComponent_ImplBase.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/AnalysisEngine.java
texts:uv3 logging: change defaults, add suppress logging from annotators capability
per discussion on dev list:1) Make UIMA more embeddable by having it able to not have its own back-end for logging.  2) Never-the-less, have the out-of-the-box experience do reasonable logging.3) Provide a simple, not logging-back-end-specific, way to globally suppress logging from Annotator code.
issueID:UIMA-5325
type:Bug
changed files:
texts:Ruta: conjunct rules broken
Ruta: conjunct rules broken. Observed in inlined rules as condition.
issueID:UIMA-5328
type:Bug
changed files:
texts:DUCC should set DUCC_UMASK for all submitted work (if not already set)
If not already set by the submitter, the CLI should add DUCC_UMASK to the environment so that log files inherit the user's file access permissions.
issueID:UIMA-533
type:Improvement
changed files:
texts:Cas Editor: Show and mode menu in the annotation editor can remove the "Annotation" sub menu
In the show and mode menu is an extra sub menu for the "Annotation" type. This menu is not necessary, sinceall annotation types are sub types of the annotation type. The menu can be removed.
issueID:UIMA-5330
type:Bug
changed files:
texts:Custom pinger may fail if classpath has old DUCC jars
SM should add DUCC jars to head of user's service_ping_classpath
issueID:UIMA-5331
type:New Feature
changed files:
texts:Ruta: support feature match expressions as arguments
Ruta: support feature match expressions as arguments
issueID:UIMA-5332
type:New Feature
changed files:
texts:Ruta: support conditioned annotation expressions as arguments
Ruta: support conditioned annotation expressions as arguments
issueID:UIMA-5333
type:Bug
changed files:
texts:uv3 test case reset enableSchemaValidation & Logger levels
While comparing output of v2 and v3 test suites, I found differences due to different ordering of tests, and the fact that tests would set a level on a log, and not reset it back afterwards, or they would set a mode of XML parse schema validation and not set it back afterwards.  Use try / finally or setup/teardown to reset things like this in test cases.  Probably not worth fixing in v2, so not queued up for that.
issueID:UIMA-5334
type:Bug
changed files:
texts:DUCC Web Server (WS) sometimes incorrectly shows DB down
Presently, WS queries DB for Machines data to determine if DB is alive.  However when Resource Manager (RM) is recycled it clears the table and then rebuilds it.  WS may get fooled that DB is not functional for a short period of time when in fact it is functional.WS should query DB ckpt table, since it will always respond with data, to determine aliveness.
issueID:UIMA-5335
type:Task
changed files:
texts:Relax XML schema for UIMA Index label
The current xml schema for UIMA specifies the value of the <label> part of the FSIndex descriptor for custom indexes must be the xml schema Name value https://www.w3.org/TR/2000/WD-xml-2e-20000814#NT-Name which doesn't allow, for example, blanks in the name.One test case was actually using blanks (TextAnalysisEngineImplTest/MultipleAeTest4.xml), and so that part of the testing was being skipped.As far as I know, the label value is only used as an identifier, so string should be fine.Change the schema value spec for this to string.
issueID:UIMA-5336
type:Task
changed files:
texts:Ruta: switch to japicmp for api checks
Ruta: switch to japicmp for api checks
issueID:UIMA-5338
type:Task
changed files:uimaj-core/src/main/java/org/apache/uima/util/XMLSerializer.java
uimaj-core/src/main/java/org/apache/uima/util/XMLSerializer.java
texts:change error message when finding invalid xml char to not output that
The checking code for bad xml characters produces an exception with a message that contains the bad char.  This causes problems downstream for some tools.   For instance, printing to the Eclipse console, if the bad char is "00"x this causes cut/paste to "stop" at the character, silently...Remove the bad char in the error message, but continue to include the hex representation of it in the error message.
issueID:UIMA-5339
type:Bug
changed files:uimaj-core/src/main/java/org/apache/uima/UIMAFramework.java
uimaj-core/src/main/java/org/apache/uima/util/Logger.java
uimaj-core/src/main/java/org/apache/uima/util/impl/JSR47Logger_impl.java
uimaj-core/src/main/java/org/apache/uima/util/impl/Slf4jLogger_impl.java
texts:uv3 slf4j simple logger can&#39;t be cast to locationaware logger
building jcasgen-maven-plugin was working by itself, but failing in Maven build of entire uimaj sdk. Eventually discovered after a day of poking around, and improving a diagnostic in core uima for UIMAFramework where it was trying to load the factory configuration, and getting an exception during class initialization (the improvement: print the exception), found out that the full build ended up having slf4j "simple logger" in the class path that was being used, and slf4j was hooking this up as its back-end.  But this logger doesn't implement the location-aware interface, so a cast to that was failing.  Fix this to no longer require this.
issueID:UIMA-534
type:Bug
changed files:uimaj-core/src/main/java/org/apache/uima/resource/metadata/impl/MetaDataObject_impl.java
texts:The equals() method in MetaDataObject_impl doesn&#39;t compare elements in a Map properly.
In the class org.apache.uima.resource.metadata.impl.MetaDataObject_impl, the equals() method returns immediately with the comparison result of the first Map elements, leaving the rest of the Map's element uncompared. Here is the code snippet:         while (it.hasNext()) {          Map.Entry entry = (Map.Entry) it.next();          Object subval1 = ((Map) val1).get(entry.getKey());          Object subval2 = ((Map) val2).get(entry.getKey());          if (subval1 == null) {            if (subval2 != null)              return false;          } else if (subval1 instanceof Object[]) {            if (!(subval2 instanceof Object[]))              return false;            if (!Arrays.equals((Object[]) subval1, (Object[]) subval2))              return false;line:443  } elseline:444      return subval1.equals(subval2);        }The problem with the code is that the statement line 444 will return the result immediately, causing the while loop to be quit without comparing the rest of elements in the Map.To fix this, one could replace line 443 and 444 with the following:           } else if (!(subval1.equals(subval2)) {                  return false;           }
issueID:UIMA-5340
type:New Feature
changed files:
texts:Provide an example of a service registry for custom services
Provide an interface and simple file-based registry for custom services
issueID:UIMA-5342
type:New Feature
changed files:
texts:UIMA-DUCC: implement a new driver with support for pluggable task allocation component
Implement a new embeddable driver component which will deliver Work Items to services that use GET/ACK/END protocol. This protocol is currently used between a JP and JD. Its a pull based, synchronous request/response exchange with a JP being a requestor. The new Driver will enable an application to plug in a callback listener which will implement the following interface:public interface TaskAllocatorCallbackListener  { public String getSerializedCAS(TaskConsumer taskConsumer);        public void onTaskSuccess(TaskConsumer taskConsumer, IPerformanceMetrics metrics);        public void onTaskFailure(TaskConsumer taskConsumer, String stringifiedException);}The Driver will call getSerializedCAS() when it receives a GET request from a remote service, The method must return a serializedCAS or null if there are none available. The TaskConsumer argument identifies where the CAS will be processed [ host, pid, thread id, service type ]. The Driver will call onTaskSuccess() when it receives END from a remote service and processing of a CAS succeeded. In addition to TaskConsumer argument, the IPerformanceMetrics instance will be passed in which will contains performance breakdown.The Driver will call onTaskFailure() when it receives END from a remote service and processing of a CAS failed. In addition to TaskConsumer argument, a serialized exception (String) will be passed in to identify the cause of failure.The Driver assumes that the TaskAllocatorCallbackListener implementation will catch and handle its errors and none will be rethrown.
issueID:UIMA-5343
type:Improvement
changed files:uimaj-core/src/main/java/org/apache/uima/util/Level.java
uimaj-core/src/main/java/org/apache/uima/util/Logger.java
uimaj-core/src/main/java/org/apache/uima/util/impl/JSR47Logger_impl.java
uimaj-core/src/main/java/org/apache/uima/util/impl/Log4jLogger_impl.java
uimaj-core/src/main/java/org/apache/uima/util/impl/Logger_common_impl.java
uimaj-core/src/main/java/org/apache/uima/util/impl/Logger_impl.java
uimaj-core/src/main/java/org/apache/uima/util/impl/Slf4jLogger_impl.java
texts:uv3 switch logger level mappings to match uimaFIT better
UIMA Logger levels are modeled on java.util.logging.Level.  This has levels: SEVERE/WARNING/INFO/CONFIG/FINE/FINER/FINEST.  Newer loggers, including the common facade SLF4J have levels ERROR/WARN/INFO/TRACE/DEBUG.  Because UIMA v3 is using the slf4j style as a default, it needs to have a mapping between these levels.  The initial mapping needs updating slightly so that it is compatible with the already in existence mappings done by uimaFIT in its Extended Logger implementation. Change the mappings to:SEVERE  <-> ERRORWARNING <-> WARNINFO    <-> INFOCONFIG  <-> INFO   (distinguished by a marker, UIMA_MARKER_CONFIG)*FINE    <-> DEBUG  *FINER   <-> TRACE  *FINEST  <-> TRACE (distinguished by a marker, UIMA_MARKER_FINEST) The asterisks mark the changes.
issueID:UIMA-5344
type:Bug
changed files:
texts:UIMA-DUCC:JP check for no work is incomplete
When a JP issues a GET to a driver it expects to receive a CAS or null. In case it receives null, the JP waits awhile and retries GET until it either receives a CAS or the JP is told to trerminate.The retry code in the JP is incomplete. It currently only checks if the MetaCas object is null. It should also check if MetaCas.getUserSpaceCas() returns null.
issueID:UIMA-5345
type:Improvement
changed files:
texts:uv3 consider moving some scope-compile to scope-provided
Some dependencies in the uimaj project are scope compile, which would be better as scope provided, to allow downstream projects that depend on this to *not* have these dependencies added to their project.Examples: the jar that is used only at compile time to supply annotations for Findbugs; the jars that are used at compile time for the log4j logging impl (the downstream depender may not be using log4j, and having these causes maybe wrong slf4j selection of the logging back end).When moving log4j things to provided, this also removes them from the test classpath, which makes the tests that need log4j break.  Fix this by configuring the surefire plugin to add these dependencies back just for testing (a hack, but I don't know of a better way).
issueID:UIMA-5346
type:Bug
changed files:uimaj-core/src/main/java/org/apache/uima/cas/impl/BinaryCasSerDes6.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FeatureStructureImplC.java
texts:sort compare method not following contract, sometimes get IllegalArgExcptn
BinaryCasSerDes6 has a method used for sort comparison.  At one point in testing, a test case threw an IllegalArgumentException from TimSort, one of the implementations of sort in Java, where it determined some invalid state due to the sortCompare not obeying the contract.This could be due to equals(fs1, fs2) == false and sortCompare(fs1, fs2) == 0.Fix this in two places: Add equals method for FeatureStructureImplC that returns 0 if the _id fields are the same.  This matches the hashcode for that.Change the sortCompare function to only return 0 if the id's are the same.
issueID:UIMA-5347
type:Bug
changed files:
texts:Changes to DUCC&#39;s reserve_overage are not picked up by rm_reconfigure
Should be a per-NopePool value instead of a static.Work-around is to stop & restart the RM.
issueID:UIMA-5348
type:Task
changed files:
texts:uimaFIT v3 - upgrade for uv3-alpha02
upgrade ExtendedLogger in uimaFIT for uv3 alpha02.  This has the new logging implementation.  Make the ExtendedLogger implement the Logger_common_impl, and add required methods.Fix test cases (which assume the logger back end is the java.unit.logging logger) to include the slf4j-jdk14 jar artifact in the test classpath.
issueID:UIMA-5349
type:Improvement
changed files:uimaj-v3migration-jcas/src/main/java/org/apache/uima/migratev3/jcas/MigrateJCas.java
texts:uv3 migration tool duplicating generated comments
The uv3 jcas migration tool is duplicating standard comments like "generated" when migrating source code
issueID:UIMA-535
type:Bug
changed files:
texts:Cas Editor: After running an AE there is no call to collectionProcessComplete
Call collectionProcessComplete after the AE was run.
issueID:UIMA-5350
type:Improvement
changed files:uimaj-v3migration-jcas/src/main/java/org/apache/uima/migratev3/jcas/MigrateJCas.java
texts:uv3 launcher for migration tool clumsy in selecting source root
Right now, there's a file selection dialog which is a tedious way to select the source root.  Change to an Eclipse variable selected-resource-location. Also update the docs. Also update migrate tool to have the output dir be optional; if not supplied, create a temp output directory and use that.  Change the launchers to not specify the output dir so they use this new mechanism.
issueID:UIMA-5351
type:Task
changed files:
texts:Ruta: clean up duplicate type systems in different projects and test folders
Ruta: clean up duplicate type systems in different projects and test folders, e.g., in example-projects/ruta-ep-example-extensions NBSP has the wrong parent
issueID:UIMA-5352
type:Bug
changed files:
texts:uv3 logger test dependencies incorrect or missing
Some test cases need the logger.  The uv3 default logger is no logger - and slf4j uses its "NOP" logger.  To make these tests work like they do in v2, add a test dependency on the slf4j-jdk14 adapter.  One project had this accidentally added but not as a test scope (it used the default compile scope).  This worked, except it showed up a (probable) bug in Maven / Invoker, when running the jcasgen-maven-plugin integration tests - the slfj4-api would go missing from the jcasgen maven plugin's environment.  Fixing the other dependency in uimaj-cpe for slfj4-jdk14 to "test" made the invoker plugin no longer delete the slf4j-api jar from its execution classpath.  (Documented here for historical reasons, and because it took most of a day to debug this!)
issueID:UIMA-5353
type:Bug
changed files:uimaj-ep-debug/src/main/java/org/apache/uima/ep_debug/DebugPlugin.java
uimaj-ep-debug/src/main/java/org/apache/uima/ep_debug/DebugPluginStartup.java
uimaj-ep-debug/src/main/java/org/apache/uima/ep_debug/DebugPlugin.java
uimaj-ep-debug/src/main/java/org/apache/uima/ep_debug/DebugPluginStartup.java
texts:uimaj-ep-debug start code needs updating for eclipse v 4
The Eclipse error log reports invalid Istartup element.  This broke when old compatibility code was removed in later Eclipse releases. Update to current way startup is done - via another class and earlyStartup method.
issueID:UIMA-5354
type:Improvement
changed files:
texts:DUCC Web Server (WS) copyright 2017
See summary.
issueID:UIMA-5355
type:Improvement
changed files:
texts:DUCC Agent CGroups support for virtual (sim)
DUCC Agent does not support CGroups for virtual agents (in simulated clusters).Force virtual agent to behave like real one for utilizing CGroup configurations.
issueID:UIMA-5356
type:Improvement
changed files:
texts:DUCC Web Server (WS) should have single expiry time value in ducc.properties for head-node daemons&#39; down
WS currently uses a few different formulae to determine the status (up/down) for the head node daemons.Database: DB Query of CKPT data fails on-demand for the Daemons page (or corresponding JSON data).Other daemons are down when elapsed time since last publication was received by WS is exceeded according to the formula: Number * Ratio * Rate as shown below.    Broker:   3  * ducc.ws.state.publish.rate    PM: 3 * ducc.pm.state.publish.rate    OR: 3 * ducc.orchestrator.state.publish.rate    SM: 3 * ducc.orchestrator.state.publish.rate    RM: 3 * ducc.rm.state.publish.ratio * ducc.orchestrator.state.publish.rateThe new design calls for a single value specified in ducc.properties, which applies to all head node daemons except DB: The elapsed time in milliseconds between monitored head-node daemons' publications that if exceeded indicates "down". Default = 120000 (two minutes).ducc.ws.monitored.daemon.down.millis.expiry=120000
issueID:UIMA-5357
type:Improvement
changed files:
texts:DUCC spelling, grammar, etc.
See Summary.
issueID:UIMA-5358
type:Task
changed files:
texts:Ruta: adapt build and dependencies for uima-sdk-3.0.0-alpha02
Marshall reported in his vote mail:3) Some of the ep plugins need the version of the maven-bundle-plugin updated to3.0.1; otherwise there are strange errors about missing dependencies.  I'm notsure why.  It may have something to do with Java 8.Plugins needing upgrading to 3.0.1 to avoid this issue are:    ruta-ep-example-extensions    ruta-ep-addons    ruta-ep-core-ext    ruta-ep-engine    ruta-ep-ide    ruta-ep-ide-ui    ruta-ep-textrulerI had issues in core uima with making *all* of the maven-bundle-plugin version3.0.1 - everything appeared to work OK, but the building of the update site P2repository for some reason left out some of the plugins.  When I reverted backto 2.3.7, for those, it worked.  So this might take more investigation to get tothe underlying root causes.4) I had to fix an (already reported) problem in ruta-ep-example-extensionswhere the type system for NBSP's super type was incorrect.  Changed inexample-projects/ruta-ep-example-extensions, the src/test/resources /org/apache/uima  /ruta/example/extensions  /BasicTypeSystem.xml:  supertype forNBSP changed to org.apache.uima.ruta.type SPACE (was ...ANY).5) &#91;Enable test case logging&#93; Because the default logging in core uima is a NOP,add a dependency to 5 projects that want the v2-style logging for testing:Note scope: test:    <!-- hook up to standard Java logger as back end -->    <dependency>      <groupId>org.slf4j</groupId>      <artifactId>slf4j-jdk14</artifactId>      <scope>test</scope>    </dependency>To make this work without <version>, put the version info in the commonruta-parent-pom in the <dependencyManagement> section:    <!-- hook up to standard Java logger as back end -->    <dependency>      <groupId>org.slf4j</groupId>      <artifactId>slf4j-jdk14</artifactId>      <version>1.7.24</version>      <scope>test</scope>    </dependency>projects:    ruta-core    ruta-core-ext    ruta-maven-plugin    example-projects/ruta-ep-example-extensions    example-projects/ruta-maven-exampleWith these changes, I could build everything (including the junit andintegration tests) with mvn clean install.
issueID:UIMA-5359
type:Task
changed files:
texts:uv3 set up svn spot for uv3 and dependent projects
UIMA v3 needs a more prominent spot in SVN.  Sub-projects that depend on uv3 need a spot too.  These need to co-exist with v2 UIMA, since migration is  something that will occur over time, and early versions are needed for testing.The current svn layout: https://svn.apache.org/repos/asf/uima.Under that we have  addons  (trunk, tags, branches) build (trunk, tags, branches) eclipse-packagings (archive, not currently used?) ruta (trunk, tags, branches) sandbox (trunk, tags, branches) site (trunk - this is the website) uima-as (trunk, tags, branches, depend-on-parent-pom-4 (to-be-deleted)) uimacpp (trunk, tags, branches) uima-ducc (trunk, tags, branches) uimafit (trunk, tags, branches) uimafit-v3 (trunk only) uimaj (trunk, tags, branches)We could follow the convention started by uimafit, of adding a -v3 suffix. We could put in a top level additional folder, say "uv3", and put exisiing projects which have a v3 migration, there. I'm not sure which is better.  I suppose the additional high level folder would keep the number of subfolders in the top level smaller, so might be a good thing, so i'm leaning toward that.  Opinions?
issueID:UIMA-536
type:Improvement
changed files:
texts:Build Cas Editor as rcp application with maven

issueID:UIMA-5360
type:Task
changed files:
texts:uima-as-v3 get it going
Initial setup of uima-as-v3, get it going
issueID:UIMA-5361
type:Bug
changed files:uimaj-v3migration-jcas/src/main/java/org/apache/uima/migratev3/jcas/MigrateJCas.java
texts:uv3 migration tool - wrong defaulting for temp output directory
The v3 migration tool, if not given an explicit output directory, gets a "temporary" one.  The code for this forgot to set 3 additional strings for subdirectories, resulting in later null pointer exceptions.
issueID:UIMA-5362
type:Task
changed files:
texts:Ruta: accumulative ticket for fixing flaws listed in 2.6.0 rc1 review
Ruta: accumulative ticket for fixing flaws listed in 2.6.0 rc1 reviewReported by Richard:Compared tag with source: OKChecking POMs: OK I don't understand why you exclude UIMAJ-Core classes in the "enforce-compatibility" profile of Ruta. Shouldn't semver be removed after switching to japicmp?POM check yields no changes in dependencies, skipping re-check of licenses.Build on OS X: OKSpot check signatures: OK ( and I actually have Peter's key in my keyring  ) Install from Update Site into Eclipse: OK Update site identifies itself as "file:/D:/work/ruta/ruta-eclipse-update-site/target/eclipse-update-site/ruta" - A proper name would be better Before being able to install Ruta, I also need to add the normal UIMA update site. I though that update sites can refer to each other?Code breaks out of boxes in PDF documentation on page 26.Indentation depth in code examples in the documentation is not always the same.
issueID:UIMA-5363
type:Bug
changed files:
texts:uv3 binary assembly -update javaparser
To fix UIMA-5349 the java parser version was upgraded.  Forgot to also upgrade this in the assembly step - so the old version was included.  also need to upgrade the .classpath in the sample examples project in the bin distr.
issueID:UIMA-5364
type:Bug
changed files:
texts:Ruta: conjunct rules as inlined rules with too many matches
Ruta: conjunct rules as inlined rules with too many matchesDocument{ -> CREATE(Detection, "anchors" = list)} <- {        w1:CW{w1.ct=="A" -> ADD(list, CW)}        %        w2:CW{w2.ct=="B" -> ADD(list, CW)}       %       w3:CW{w3.ct=="B" -> ADD(list, CW)}       %       w4:CW{w4.ct=="A" -> ADD(list, CW)};       };
issueID:UIMA-5365
type:Improvement
changed files:
texts:Ruta: remove values of label expressions if rule element did not match successfully
Ruta: remove values of label expressions if rule element did not match successfullyShould the value be removed? What are the consequences?
issueID:UIMA-5366
type:Bug
changed files:
texts:uv3 integration tests - parent pom wrong
The parent pom can't be a -SNAPSHOT, these don't get converted during release:prepare.
issueID:UIMA-5367
type:Improvement
changed files:
texts:reduce deploy failures due to timouts
Got a spurious failure in the middle of release:perform where we got a timeout on upload to the maven repository server.  Attempt to workaround this by following a suggestion: https://issues.apache.org/jira/browse/INFRA-7984
issueID:UIMA-5368
type:Bug
changed files:
texts:uimaj java9 jcasgen maven plugin failure fix
Looking at the log, it seems that when run on Java 9, the default source / target compiler Java level cannot be left to default to 1.5.Add an explicit level for this, of 1.7 (which works with Java 9), which allows older configurations to continue to build too.
issueID:UIMA-5369
type:Bug
changed files:uimaj-v3migration-jcas/src/main/java/org/apache/uima/migratev3/jcas/MigrateJCas.java
uimaj-core/src/main/java/org/apache/uima/internal/util/Misc.java
uimaj-core/src/main/java/org/apache/uima/internal/util/Misc.java
unused-saved/src/org/apache/uima/cas/impl/FSRBTIndex.java
texts:java9 javadoc requires defs for annotations
Several things need fixups to allow Java 9 builds. add a <profile> which triggers on <jdk>9 the compiler target level needs to be set to 1.9 the compiler needs an additional argument to include the javax.xml.bind module, which is otherwise no longer available. The javadoc needs to specify the javadocVersion, otherwise it fails to discover it and uses 0, which causes the "tag" options to be ignored. The file FSRBTIndex is completely commented out in v3.  Javadoc complains.  Move this to the unused-saved folder... Some javadoc errors involving trailing </p> and </html> tags. 1 error due to using a no-longer available "setAccessible" on a method 2 xml miscompares of generated formatted XML due to different formatting styles
issueID:UIMA-537
type:Bug
changed files:
texts:Cas Editor: Imports do not work in descriptor files
The import is searched in the wrong location.
issueID:UIMA-5370
type:Bug
changed files:
texts:Ruta: NPE for empty annotation list of annotation type expression given by type
Ruta: NPE for empty annotation list of annotation type expression given by type
issueID:UIMA-5371
type:Bug
changed files:
texts:Ruta Workbench: Ruta Query tool is broken
Ruta Query tool doesn't show any result, even with a simple query like 'W;'Seems to be broken since upgrade to 2.6.0
issueID:UIMA-5372
type:Bug
changed files:
texts:SM failed to unregister a service but allowed another to start
Vito unregistered 8799 but the SM threw an NPE and didn't shut it down, while claiming that it is unregistered.  sm log in /users/burn/for/SM16 Mar 2017 10:07:27,725  INFO SM.ServiceHandler - 8799 authorized  unregister request from Vito.Colano allowed.16 Mar 2017 10:07:27,725  INFO SM.ServiceHandler - 8799 ServiceStateHandler.unregister  Removing UIMA-AS:dsqa-async-service-Vito.Colano-2017-08:tcp://broker1:61616 8799processIncoming  ===== Orchestrator State Arrives =====16 Mar 2017 10:07:34,184  INFO SM.ServiceHandler - N/A    runCommands  Running 2 API Tasks.16 Mar 2017 10:07:34,185 ERROR SM.ServiceHandler - N/A    run java.lang.NullPointerException at org.apache.uima.ducc.sm.ServiceHandler.doStop(ServiceHandler.java:884) at org.apache.uima.ducc.sm.ApiHandler.run(ApiHandler.java:89) at org.apache.uima.ducc.sm.ServiceHandler.runCommands(ServiceHandler.java:243) at org.apache.uima.ducc.sm.ServiceHandler.run(ServiceHandler.java:117) at java.lang.Thread.run(Thread.java:780)
issueID:UIMA-5373
type:Bug
changed files:
texts:DUCC Web Server (WS) add clarity to MonitorWarning hover text for Jobs & Reservations
New context sensitive text: 1. submitter's client monitor contact established2. submitter's client monitor contact lost, <type> will be canceled in <time> minutes
issueID:UIMA-5374
type:Bug
changed files:
texts:UIMA-AS Eclipse plugin - need update to exclude some dependencies
Building starting with an empty Eclipse local maven repo results in dependencies on artifacts in Eclipse that are not present - relating to a recent update of Eclipse artifacts in Maven central.  The artifacts are related to the ARM architecture.Add exclusions for these.
issueID:UIMA-5375
type:Bug
changed files:
texts:UIMA-AS update eclipse plugin for v3
The xml files need updating for v3 core artifacts they depend on
issueID:UIMA-5376
type:Bug
changed files:
texts:UIMA-AS eclipse update site missing some versions
The update site only has 2.9.0 version, the other versions do not appear.  Looking at the physical update site on dist/uima/eclipse-update-site/uima-as, in the features and plugins dirs, there are versions for 2.3.1, 2.4.0, 2.4.2, 2.6.0, 2.8.1, and 2.9.0.The artifacts.jar shows all of these, but the content.jar only has 2.9.0.The uima-as-eclipse-update-site src/main/resources/category.xml has feature elements for 2.3.1, 2.4.0, and the "current one"; not sure what's needed.  Looks like same file in the the core uima eclipse update site project only has current one.  needs investigation.
issueID:UIMA-5377
type:Improvement
changed files:
texts:improve version compatibility checking for uimafit
switch from using the semver rule for backwards compatibility (no longer supported) to japicmp which gives much better reporting.
issueID:UIMA-5378
type:Bug
changed files:
texts:uv3 api-change-report has wrong file permissions on Linux
The binary build (and maybe others) has wrong permissions for the api-change-report (no permissions at all - can't be read on linux).
issueID:UIMA-5379
type:Improvement
changed files:uimaj-v3migration-jcas/src/main/java/org/apache/uima/migratev3/jcas/MigrateJCas.java
texts:uv3 migration tool check for missing migrationClasspath
A user tried migrating from compiled classes, without specifying the classpath.  There is a missing detection of this mis-configuration.  There is no proper handling if the decompile fails -the Java Parser is invoked on the non-parsible !Error message.  Fix both of these.
issueID:UIMA-538
type:Improvement
changed files:
texts:Cas Editor: Add an icon for the merge action in the outline view

issueID:UIMA-5380
type:Improvement
changed files:uimaj-core/src/main/java/org/apache/uima/util/Logger.java
uimaj-core/src/main/java/org/apache/uima/util/impl/Logger_common_impl.java
texts:uv3 Logger Interface missing methods using Supplier
Added methods to Logger_common_impl which use Supplier, but left those out of the Logger Interface.  Add them. Also, some methods in Logger_common_impl forgot to make public (were "defaulting" to package private).  Fix these too.
issueID:UIMA-5381
type:Improvement
changed files:uimaj-core/src/main/java/org/apache/uima/util/impl/Slf4jLogger_impl.java
texts:uv3 tooling - specify JUL logger
For most common tools, insure the logger is set up, to use the JUL logger as a default.Make this work only if a JVM property, "-Duima.use_jul_as_default_uima_logger" is specified.This should work only for the uima logger, when the normal slf4j implementation hasn't been overridden; in that case, if slf4j finds there's no back end logger specified, it will set up a NOP back end.  In this case, arrange for the UIMA logger to get the alternate JUL (java.util.logging) logger, instead of the slf4j (which will remain hooked up to the NOP back end logger).Update the scripts that run tools (the runUimaClass.bat and .sh) to define this JVM property when starting UIMA tooling, so that tools started using the default scripts will have some logging, if no back end is specified.
issueID:UIMA-5382
type:Improvement
changed files:uimaj-bootstrap/src/main/java/org/apache/uima/bootstrap/UimaBootstrap.java
uimaj-bootstrap/src/main/java/org/apache/uima/bootstrap/UimaBootstrap.java
texts:allow Java-style classpath wildcard in tooling startup
Java now allows in their classpath specification at JVM startup, specifying directories whose jars are to be included, using the syntax x/y/z/*.  Add support for this convention to UimaBootstrap.
issueID:UIMA-5383
type:Improvement
changed files:
texts:uv3 migration tool: allow Java-style classpath notation with wildcard
A user specified the classpath in the migration tool using the java style wildcard; this didn't work.  Add support for this, modeled after the approach in uimaj-bootstrap.
issueID:UIMA-5384
type:Bug
changed files:uimaj-v3migration-jcas/src/main/java/org/apache/uima/migratev3/jcas/MigrateJCas.java
texts:uv3 migration tool class path setup
There are multiple issues with the migrateClasspath setup for v3 migration.  There are two uses of the classpath.   One is for decompiling the v2 compiled classes, when migrating from classes - roots. The other is for (optional) compiling of the resulting converted source.  These is done for the use case where the v2 classes were in JARs or PEARs, and the result of the conversion is new versions of these JARs or PEARs with converted JCas classes.The classpath passed for migrateClasspath should be the v2 classpath needed for decompiling the v2 JCas classes. When recompiling, the classpath for v3 uimaj-core is prepended.migrateClasspath is temporarily augmented when migrating PEAR files, by prepending any PEAR classpath specs.A separate Jira improved the migrateClasspath to permit the Java style of classpath specs using a trailing wildcard .Changes needed: if the migrateClasspath argument is not set:   if migrating from classes roots, treat this as an error; migrateClasspath is required in order to properly decompile.     Add a note that this classpath must include the classes being migrated, because they are read from that classpath.      If migrating from sources roots, if the migrateClasspath is not set, substitute the application classpath, with a warning.   for compiling:   do the PEAR prepending if the source came from a pear.  prepend at the very front, the uimaj-core-v3 (or the app classpath).
issueID:UIMA-5385
type:New Feature
changed files:
texts:UIMA-AS: add support for targeting specific service instance via JMS
With multiple service instances getting messages from a shared JMS queue there is no way to know which instance gets a particular message. By design, the JMS queue provides natural load balancing and a broker routes a message to a service which has capacity (ready thread) to process it.Targeting services would support interesting use cases. For example, sending a message to a specific service instance could be used to determine if the service is viable or not. Targeted messages can also be considered of high processing priority and processed ahead of 'normal' priority messages. JMS supports targeting with selectors. A message listener is configured to indicate which messages it wants to receive. The selection is based on a value of a JMS property included in a message. The JMS selector syntax is based on SQL 92 spec which allows for compound expressions that include: AND, OR, NOT, etc. The message selection is done by the broker not the consumer. The broker will route messages to a consumer whose selector matches property values in a message.Current UIMA-AS already supports two selectors, one for handling Process requests and the other for GetMeta. Each of these has a dedicated listener and thread(s) to process messages. The proposal is to add yet another listener with a new selector to support targeting. The service selector value can be user defined via -DHighPriorityServiceId=XXX. If the -D is not present, the UIMA-AS will create a new listener with a selector = &#91;Node IP: PID&#93; which would uniquely identify a service. It would be up to the client application to determine value for the targeting string (selector). The UIMA-AS client will provide a way for an application to specify targeting string via a Map which is passed into the initialize( ) method of the UIMA-AS client. This would allow for pinning a client to a specific service instance. All messages from the client would be processed by that service. If targeting string is not present, targeting will not be enabled and messages will be processed by an arbitrary service instance.As mentioned, targeted messages will have a high priority and will be processed first. A new java priority queue will be added to the UIMA-AS service to enable sorting of messages according to the priority.
issueID:UIMA-5386
type:Bug
changed files:
texts:UIMA-AS: performance breakdown wrong for sync aggregates
See Ducc related issue:https://issues.apache.org/jira/browse/UIMA-5311?filter=12329459Implement the fix as described in the above JIRA in the UIMA-AS code.
issueID:UIMA-5387
type:Bug
changed files:uimaj-core/src/main/java/org/apache/uima/cas/impl/TypeSystemUtils.java
texts:uv3 missing bacwards compat method
A user discovered a missing method, classifyType, in TypeSystemUtils.  Investigation shows other missing methods, e.g. classifyType in CasSerializerSupport(int typecode).  Add these for less backwards compatibility "breakage".
issueID:UIMA-5388
type:Improvement
changed files:uimaj-core/src/main/java/org/apache/uima/internal/util/UIMAClassLoader.java
uimaj-core/src/main/java/org/apache/uima/internal/util/Misc.java
texts:Support javac style classpath specs in uima classpaths
Javac supported classpath specs with a trailing wildcard, which meant all the jars or .class files rooted at the directory.  Users may want to use this style in specifying uima classpaths.  (UIMA already supports classpaths which are directories, which mean the same thing).  Add this support, update the docs.
issueID:UIMA-5389
type:Bug
changed files:
texts:UIMA-AS: JMS Listener floods a service log when broker connection is lost
When a service looses connection to a broker, the JMS listener logs spuriously until connection is recovered. Review logging done in UIMA-AS callbacks to see if there is a way to reduce amount of messages going into the log.
issueID:UIMA-539
type:New Feature
changed files:
texts:implement UIMA RegularExpressionAnnotator
I will implement a regular expression annotator that can be configured with a rule file containing the regular expressions. The annotator can work with simple regular expressions to detect entities but can also define concepts where more than one regular expression rule can be defined for a concept.Each rule can additionally have filter conditions and exceptions that are recognized before it is matched. If a match is found additional annotations and features can be created.
issueID:UIMA-5390
type:Bug
changed files:uimaj-core/src/main/java/org/apache/uima/cas/impl/CASImpl.java
uimaj-core/src/main/java/org/apache/uima/util/impl/DataIO.java
jVinci/src/main/java/org/apache/vinci/transport/document/XMLToXTalk.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/CommonSerDes.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/UimaDecompiler.java
uimaj-core/src/main/java/org/apache/uima/pear/tools/InstallationDescriptorHandler.java
uimaj-core/src/main/java/org/apache/uima/pear/util/XMLUtil.java
uimaj-core/src/main/java/org/apache/uima/uimacpp/CppUimajEngine.java
uimaj-core/src/main/java/org/apache/uima/util/CasIOUtils.java
uimaj-core/src/main/java/org/apache/uima/util/TCasToInlineXml.java
uimaj-core/src/main/java/org/apache/uima/util/impl/Settings_impl.java
uimaj-ep-pear-packager/src/main/java/org/apache/uima/pear/nature/ProjectCustomizer.java
uimaj-examples/src/main/java/org/apache/uima/examples/cpe/InlineXmlCasConsumer.java
uimaj-tools/src/main/java/org/apache/uima/tools/components/InlineXmlCasConsumer.java
uimaj-tools/src/main/java/org/apache/uima/tools/docanalyzer/AnnotationViewerDialog.java
texts:DUCC may restart failing custom services forever
Since custom services have no initialization phase all init errors are counted as run errors, but before the threshold is reached the error count may be reset.
issueID:UIMA-5391
type:Bug
changed files:
texts:UIMA-AS: sendAndReceive() should throw Exception when client is in shutdown mode
When  an application calls UIMA-AS client sendAndReceive() its thread will block until a reply comes back or stop() is called. While a thread blocks in sendAndReceive() a System.exit() may be called causing the UIMA-AS client ShutdownHook to call stop(). This method will cleanup resources including a semaphore where an application thread blocks in sendAndReceive. In this case, the sendAndReceive() simply returns realizing that the client is not in a running state. The application is not aware that the sendAndReceive() was essentially interrupted as a reply had not been received. The application may consider the CAS as processed as there was no exception,The sendAndReceive() should throw an exception if UIMA-AS client stop() was called while an application thread blocked awaiting reply from a service. Throw ResourceProcessException with cause = UimaAsClientStoppingException. This will let the application know about the cause of the interrupt.
issueID:UIMA-5392
type:Bug
changed files:
texts:DUCC&#39;s cli jar drags in too many jars
It's reported that 125MB of jars are required.
issueID:UIMA-5393
type:Bug
changed files:
texts:Jenkins DUCC build fails with Javadoc error
For some reason Jenkins is running the Javadoc plugin on the examples project which has some 1.7 code.  It should not be defaulting to 1.5
issueID:UIMA-5394
type:Bug
changed files:
texts:permissions wrong on api-change-report in binary build
permissions missing when un-tarring binary build artifact on linux systems, for api-change-report
issueID:UIMA-5395
type:Improvement
changed files:
texts:DUCC move_ducc flexibility
Presently, concerning move_ducc and node pools: the current head node "A" and target head node "B" must both be in the same node pool or both not be in any node pool.Improvement: additionally allow for "A" to be in a node pool and "B" to not be in a node pool.  In this case, move_ducc should remove "A" and add "B".It will still be disallowed for "A" and "B" to be in different node pools.
issueID:UIMA-5396
type:Bug
changed files:
texts:When --console_attach is set for a DUCC process some input lines are lost
When the console handler receives a 2nd connection for stderr from an AP it should not start a 2nd thread reading the console input.
issueID:UIMA-5398
type:Task
changed files:
texts:Ruta: update uima/uimafit version

issueID:UIMA-5399
type:Bug
changed files:
texts:Ruta: verbalization of head rule in block is null
Ruta: verbalization of head rule in block is null
issueID:UIMA-540
type:Improvement
changed files:
texts:Cas Editor: Add launcher icons
Add launcher icons for the different platforms.
issueID:UIMA-5400
type:Improvement
changed files:
texts:DUCC ducc_update should give better error message when unable to install ducc_ling
See Summary.
issueID:UIMA-5401
type:Improvement
changed files:
texts:DUCC ducc.properties processing improvements
1. disallow // a comment indicator2. allow # or ! as comment indicator at beginning of line only3. tolerate // within ducc.jvm value
issueID:UIMA-5403
type:Bug
changed files:
texts:The reserved DUCC_OS_ARCH variable is ignored if in the command executable
Currently it is handled in JavaCommandLine::getCommandLine() which actually returns only the command-line's arguments.
issueID:UIMA-5404
type:Improvement
changed files:
texts:Custom services should be able to report their status to their agent
Put the agent's state-update port in the environment instead of (or as well as) in the system properties
issueID:UIMA-5405
type:Improvement
changed files:
texts:DUCC should allow the "ducc" user to be other than exactly "ducc"
There is no guarantee that user "ducc" will be available as the DUCC userid.Allow for specification of ducc.uid in the site.ducc.properties file and use same for: ducc_ling CgroupsManager & CgroupsTest DbManager & DbCreate ducc_util.py & db_util.py jconsole.xml
issueID:UIMA-5406
type:Improvement
changed files:
texts:DUCC JP-services should convert DDs if necessary and not always require a dedicated JD-client
Since the DD is used with a local broker it must specify a dynamically determined queue & broker name.  Also could use a registry to find its client (JD)
issueID:UIMA-5407
type:Bug
changed files:uimaj-v3migration-jcas/src/main/java/org/apache/uima/migratev3/jcas/MigrateJCas.java
texts:uv3 migrate: throwing array index out of bounds
Running the migration tool in linux, Burn found a bug - throwing array index out of bounds.  Traced to using an "Optional" value instead of the actual value.
issueID:UIMA-5408
type:Bug
changed files:uimaj-v3migration-jcas/src/main/java/org/apache/uima/migratev3/jcas/MigrateJCas.java
texts:uv3 migrate missing report of duplicates
logic bug stops reports from printing after first one returns false.  Reverse order of && tests to insure subsequent reports run.
issueID:UIMA-5409
type:Bug
changed files:uimaj-v3migration-jcas/src/main/java/org/apache/uima/migratev3/jcas/MigrateJCas.java
texts:uv3 migrate tool not skipping built-in classes
migrate tool not skipping built-in classes, categorizing them in reports incorrectly as a result.
issueID:UIMA-541
type:Improvement
changed files:
texts:Cas Editor: Add windows icons
Add gif icons which will be associated with the application window.
issueID:UIMA-5410
type:Bug
changed files:uimaj-v3migration-jcas/src/main/java/org/apache/uima/migratev3/jcas/MigrateJCas.java
texts:uv3 migration tool sorting of reports sometimes throws exception
The reports does sorting; and the sort compare occasionally fails trying to compare two File System objects. saying they are not compatible, when one of them is a zip file system.  Add work-around for this case.
issueID:UIMA-5411
type:Improvement
changed files:uimaj-core/src/main/java/org/apache/uima/util/impl/Settings_impl.java
uimaj-core/src/main/java/org/apache/uima/util/impl/Settings_impl.java
texts:Make the class/data path search for external settings explicit by requiring a path: prefix
Require a "path:" prefix when loading settings from the class or data path. Use the dotted name format, similar to import by name.  Files may optionally have a "file:" prefix.  NOTE - this is an incompatible change from the syntax used in 2.10.0 under UIMA-5208
issueID:UIMA-5412
type:Bug
changed files:
texts:Ruta: problem with float variables
DECLARE Annotation Percent(STRING class, FLOAT value, STRING unit );FLOAT a2,a1;// works as expected: value is 10.0 for input "10 %"(NUM{PARSE(a1)} "%") {-> CREATE (Percent, "value" = a1, "class" = "Percent", "unit" = "%")};// Example 2: => returns wrong value 0.0. ASSIGN() is excecuted after CREATE() ?(NUM{PARSE(a1)} "‰") {-> ASSIGN(a1, a1/10), CREATE (Percent, "value" = a1, "class" = "Percent", "unit" = "‰")};
issueID:UIMA-5413
type:Bug
changed files:
texts:DUCC post_install should not proceed if DUCC is already installed!
See Summary.
issueID:UIMA-5414
type:New Feature
changed files:
texts:Ruta: config param for max amount of rule and rule element matches
Ruta: config param for max amount of rule and rule element matches. If exceeded, an runtime exception is throw with the name of the script and the verbalization of the rule/rule element.
issueID:UIMA-5415
type:New Feature
changed files:
texts:Ruta: open inference crowd visitors as configuration parameter
Ruta: open inference crowd visitors as configuration parameter
issueID:UIMA-5416
type:Bug
changed files:
texts:Ruta: strange behavior of # matching
The attached ruleset Loop.ruta has a strange behavior on the attached text file : the last rule matches 1009 times and creates 1008 annotations where only two are expected. What is very strange is the ability for # to "cross" over the right boundary and match the two lines. This is (at least) counterintuitive as # is supposed to behave like a non-greedy catch-all.
issueID:UIMA-5418
type:Bug
changed files:
texts:DUCC check_ducc -k should not use -9 to kill the database, by default
Normally, check_ducc -k sends -9 signal to those process it aims to kill, including the database.  This may leave the database in a bad (unusable?) state.1. Change check_ducc -k to issue signal -9 to all daemons except database which will get -3.2. Change check_ducc to accept the --db-9 option that indicates that the database should get signal -9.  The db-9 option only applies if the -k option is also specified, and should be used only as a last resort.
issueID:UIMA-5419
type:New Feature
changed files:
texts:Ruta: actions for creating annotations as functions filling label variables
Ruta: actions for creating annotations as functions filling label variablesCW{-> a:CREATE(A), CREATE(B, "a" = a)};
issueID:UIMA-542
type:Bug
changed files:
texts:Cas Editor cannot be exported via product export wizard

issueID:UIMA-5420
type:Improvement
changed files:
texts:DUCC python scripts formatted log messages class
add DuccLogger class to ducc_base module.
issueID:UIMA-5421
type:Bug
changed files:uimaj-v3migration-jcas/src/main/java/org/apache/uima/migratev3/jcas/MigrateJCas.java
uimaj-v3migration-jcas/src/main/java/org/apache/uima/migratev3/jcas/MigrateJCas.java
texts:uv3 migration tool design fixes
The design for the migration tool has some defects.  The main one is it should migrate all versions  the migrate from sources vs from classes should operate differently:   sources     migrate the source, no subsequent compilation; no reassembly (in Jars or PEARs)   if in a Jar or PEAR, issue message saying Jar or PEAR will need to be rebuilt and advising to delete the xxx_Type.java files.      classes     decompile.  Always use the original byte array for decompiling (current impl switches to the version from the classpath). Arrange the migrate classpath to put any Jar or Pear-classpath in front.   do a compile using above modified migrate classpath (plus the uv3 core in front) and reassembly step (if class was found in Jars or Pears, an no compile errors) by copying the original assembly and updating the class part.       change the output naming convention to support multiple compiled migrations - for example, having the same class inside multiple updated Jars, with obvious tracking between the output pathnames and the original. update the version of the parser and decompiler dependencies to the current versions update the documentation. properly handle jars containing pears, pears containing jars. allow no migrate classpath when migrating from classes (useful for migrating Pear files) break the compile step for a container into multiple sets of compilation units, if different versions exist for the same classname (otherwise get compiler error - duplicate definition) print out all compiler errors and messages
issueID:UIMA-5423
type:Bug
changed files:
texts:Variables in Ruta scripts are not initialized properly by RutaEngine if their script is called by others
Variables in Ruta scripts are not initialized properly by RutaEngine if theirscript is called by others.We found this issue in Ruta 2.3.1, but it’s still in Ruta 2.6.0.I attached the sample project TestVariable.zip to this mail.Example: script3.rutaDECLARE Value(STRING value);STRING value;W{-> CREATE(Value, "value" = value), ASSIGN(value, W.ct)};Creates an annotation "Value" with an empty feature "value".The variable "value" stores the word (and is evaluated by other rules – the real use case doesn't matters here).Input testfiles:input-01.txt: snarkinput-02.txt: catOutput after running Ruta with script3.ruta:input-01.txt.xmi: Value annotation for "snark" with an empty value (nil)input-02.txt.xmi: Value annotation for "cat" with an empty value (nil)=> works as expected.We added two scripts to call finally script3.ruta in the order  script1 calls script2 => script2 calls script3 => scripts3to creates Value annotation.(our real project is complex - uses packages ...)Now we call script1.ruta on the same input, but the output annotation Valuecontains a wrong value feature for all documents after the first.input-01.txt.xmi: Value annotation for "snark" with an empty value (nil)input-02.txt.xmi: Value annotation  "cat" with value feature "snark" (insteadof nil as before).It seems the variable is not initialized properly if it is defined in a sub-script, which is called by other scripts.It doesn't help to initialized the variable in script3, e.g:STRING value = "dog"The output is unchanged the Value annotation return the stored variable,which was set by script3.ruta while processing the first input file.One of my colleguage examined the issue and proposed to patch RutaEngine class to solve this issue.We added the following lines to:private void resetEnvironment(RutaModule module, CAS cas):&#8212;641a642,646>     final Collection<RutaModule> scripts = module.getScripts().values();>     for (final RutaModule subModule : scripts) {>       resetEnvironment(subModule, cas);>     }&#8212;This solves the issue in our applications which integrates Ruta.Known workaround: clear or initialize the variables at the end of the script.But I prefer if the issue is fixed in the RutaEngine class.
issueID:UIMA-5424
type:Bug
changed files:
texts:Ruta: mtwl wordlist parser not robust considering buffering
Ruta: mtwl wordlist parser not robust considering buffering: characters() won't provide complete string in one method call
issueID:UIMA-5426
type:Bug
changed files:
texts:Ruta: stacked feature expression on label expression not resolved correctly
Ruta: stacked feature expression on label expression not resolved correctly
issueID:UIMA-5427
type:Bug
changed files:
texts:indexCovered should not return reference annotation
This was introduced with #UIMA-5046. In v2.2.0, running JCasUtil.indexCovered(jCas, MyType.class, MyType.class) did not include an annotation as covering itself. However, in v2.3.0 it does.
issueID:UIMA-5428
type:New Feature
changed files:
texts:DUCC minimally support user log directory not in shared file system
Support submitted work where user specified log directory is not in shared file system.For example, if user specifies /tmp/foobar as the log directory for a submitted job, the job will run and the /tmp on each system where the JD and JPs run will contain written files, such as JD and JP logs files.  But no ducc-mon support.  ducc-mon will only be able to see the /tmp of its local file system. Any files located in /tmp on remote machines (e.g. machines other than the DUCC head node) will not be visible via ducc-mon.
issueID:UIMA-5429
type:Bug
changed files:
texts:Ruta: inclusion of analysis engine in script invalidates filtered iterator in RutaStream
Ruta: inclusion of analysis engine in script invalidates filtered iterator in RutaStream. This can of course not be the reason, but it is reproducible in one setup. Need to find the real reason...
issueID:UIMA-543
type:New Feature
changed files:
texts:Update website for 2.2 release
Create news item, download page, documentation download.
issueID:UIMA-5430
type:Bug
changed files:
texts:Ruta: sidestep match should not continue if match failed before
Ruta: sidestep match should not continue if match failed before. It does not produce wrong annoation or misses some, but it can be a performance bottleneck if the other side of the sidestep contains a wildcard with many potential anchors... it just keeps matching since the rule match cannot be fulfilled.
issueID:UIMA-5433
type:Bug
changed files:
texts:DUCC WebServer (WS) Utilization banner display should use "usable" memory for divisor in the calculation
For example,  Memory usable displayed on the Machines page may be 70 GB while memory for Utilization calculation may be 77 GB (ie "actual" memory).  The Utilization should use the 70 GB number too, for consistency.
issueID:UIMA-5434
type:Improvement
changed files:uimaj-core/src/main/java/org/apache/uima/internal/util/Misc.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/UimaDecompiler.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/TypeImpl.java
uimaj-core/src/main/java/org/apache/uima/internal/util/Misc.java
texts:Misc utilities improvements in uimaj sdk core
add classNameFromByteCode add setAsList (access a set of elements as a list, without making a list) support various pretty printing things with indentation control.  Include a list formatter that for short lists keeps things on one line, but for longer lists, switches to an item per line format. add some javadoc comments add dumpByteArray - convert to nicely formatted string
issueID:UIMA-5435
type:Bug
changed files:uimaj-core/src/main/java/org/apache/uima/internal/util/UIMAClassLoader.java
uimaj-core/src/main/java/org/apache/uima/internal/util/UIMAClassLoader.java
texts:UIMA Class Loader getResource doesn&#39;t look first in its own resources
The UIMAClassLoader stategy is to load from this class loader before delegating to its parent.  It does this for classes, but missed doing this for "resources" obtained by getResource.  I think this should be fixed so that a Pear, trying to load its resource, will get that resource, and not a same-named one from some parent classloader. This might break some existing use cases, as it changes where some resources will come from.
issueID:UIMA-5436
type:Bug
changed files:
texts:Ruta: implicit condition comparing string variable to null
Ruta: implicit condition comparing string variable to null
issueID:UIMA-5438
type:Bug
changed files:
texts:Bad error msg when registering a service with an invalid scheduling class
Message falsely claims the DUCC configuration files are bad
issueID:UIMA-5439
type:Bug
changed files:
texts:The QuotedOptions class is in 2 projects, one is back-level
Should update the one in uima-ducc-user and delete the other
issueID:UIMA-544
type:Bug
changed files:
texts:check JavaDoc for class ParsingException
JavaDoc says: Deprecated. The Constraint Parser is not supported in externally released versions of UIMA
issueID:UIMA-5440
type:Improvement
changed files:
texts:DUCC WebServer (WS) should provide secure file-based login
DUCC Webserver supports a Linux-based login plugin.  Another useful login plugin (secure file) would work as follows:1. generate a single use password in a file-based location that only the user can view each time a login is attempted2. check the user login specified password with the generated password for a match and only then grant login
issueID:UIMA-5441
type:Bug
changed files:
texts:The JD sometimes hangs a job when it falsely thinks a JP is down
Th JD processBlacklist method may wrongly mark a node as down, leaving any work on it unprocessed and never retried.
issueID:UIMA-5442
type:Improvement
changed files:uimaj-core/src/main/java/org/apache/uima/cas/impl/CASImpl.java
texts:uv3 backward compatibility: add casImpl v2 public methods for Type access
The CASImpl implements is missing the isArrayType(Type) and isAbstractArrayType(Type) methods in the v2 casImpl, add these for backwards compatibility
issueID:UIMA-5444
type:Bug
changed files:
texts:DUCC User component Job Driver (JD) plug-in error handler does not honor max work item errors
The default plug-in error handler is configured to stop a Job after 15 work item failures, yet jobs continue far beyond that.
issueID:UIMA-5445
type:Bug
changed files:
texts:Ruta: Year.ruta in ExampleProject is not valid
Ruta: Year.ruta in ExampleProject is not valid
issueID:UIMA-5446
type:Bug
changed files:uimaj-core/src/main/java/org/apache/uima/cas/impl/XmiCasDeserializer.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/TypeSystemImpl.java
texts:uv3 xmi deserialization of arrays not handling null values properly
In serialized forms of FS arrays and lists, null values are represented by 0.  This is erroneously considered an error.
issueID:UIMA-5447
type:Improvement
changed files:
texts:DUCC ducc_watcher script improvements - timestamp & unable to write state
ducc_watcher keeps its state in the filesystem.  Successive invocations rely on this state in order to eliminate duplicate e-mails.  In the event that the state can be read but not written (e.g. file system problems) more information would be helpful, specifically:1. add timestamp to message text at time of generation2. include "state file write failed" or similar in message text
issueID:UIMA-5448
type:Bug
changed files:
texts:Ruta: problem with internal indexing using PARTOF after simple regex rule
"(concept)([a-z])" -> 1 = Concept, 2 = Segment;c:Concept{-PARTOF(Segment) -> Segment};
issueID:UIMA-545
type:Bug
changed files:
texts:DescEditor plugin exception with GNU libgcj 4.1.2
The DescEditor plugin throws this exception when Eclipse is used with GNU libgcj. The plugin works fine when changing to the java-6-sun implementation.-----------------------------------!ENTRY org.eclipse.ui 4 0 2007-08-24 07:49:56.109!MESSAGE java.lang.ExceptionInInitializerError!STACK 0java.lang.ExceptionInInitializerError   at java.lang.Class.initializeClass(libgcj.so.70)   at org.apache.uima.util.impl.XMLParser_impl.parse(XMLParser_impl.java:174)   at org.apache.uima.taeconfigurator.editors.ui.AbstractSection.parseDescriptor(AbstractSection.java:1411)   at org.apache.uima.taeconfigurator.editors.MultiPageEditor.parseSource(MultiPageEditor.java:816)   at org.apache.uima.taeconfigurator.editors.MultiPageEditor.init(MultiPageEditor.java:799)   at org.eclipse.ui.internal.EditorManager.createSite(EditorManager.java:842)   at org.eclipse.ui.internal.EditorReference.createPartHelper(EditorReference.java:583)   at org.eclipse.ui.internal.EditorReference.createPart(EditorReference.java:372)   at org.eclipse.ui.internal.WorkbenchPartReference.getPart(WorkbenchPartReference.java:566)   at org.eclipse.ui.internal.EditorReference.getEditor(EditorReference.java:214)   at org.eclipse.ui.internal.WorkbenchPage.busyOpenEditorBatched(WorkbenchPage.java:2595)   at org.eclipse.ui.internal.WorkbenchPage.busyOpenEditor(WorkbenchPage.java:2528)   at org.eclipse.ui.internal.WorkbenchPage.access$10(WorkbenchPage.java:2520)   at org.eclipse.ui.internal.WorkbenchPage$9.run(WorkbenchPage.java:2505)   at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:67)   at org.eclipse.ui.internal.WorkbenchPage.openEditor(WorkbenchPage.java:2500)   at org.eclipse.ui.actions.OpenWithMenu.openEditor(OpenWithMenu.java:288)   at org.eclipse.ui.actions.OpenWithMenu.access$0(OpenWithMenu.java:280)   at org.eclipse.ui.actions.OpenWithMenu$2.handleEvent(OpenWithMenu.java:184)   at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:66)   at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1085)   at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:3180)   at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2856)   at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1930)   at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1894)   at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:422)   at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:149)   at org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:95)   at org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:78)   at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:92)   at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:68)   at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:400)   at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:177)   at java.lang.reflect.Method.invoke(libgcj.so.70)   at org.eclipse.core.launcher.Main.invokeFramework(Main.java:336)   at org.eclipse.core.launcher.Main.basicRun(Main.java:280)   at org.eclipse.core.launcher.Main.run(Main.java:977)   at org.eclipse.core.launcher.Main.main(Main.java:952)Caused by: java.lang.ClassCastException: gnu.xml.transform.TransformerFactoryImpl cannot be cast to javax.xml.transform.sax.SAXTransformerFactory   at org.apache.uima.util.impl.SaxDeserializer_impl.<clinit>(SaxDeserializer_impl.java:53)   at java.lang.Class.initializeClass(libgcj.so.70)   ...37 more!ENTRY org.eclipse.ui 4 4 2007-08-24 07:49:57.389!MESSAGE Unhandled event loop exception!ENTRY org.eclipse.ui 4 0 2007-08-24 07:49:57.390!MESSAGE org.apache.uima.util.impl.SaxDeserializer_impl!STACK 0java.lang.NoClassDefFoundError: org.apache.uima.util.impl.SaxDeserializer_impl   at java.lang.Class.initializeClass(libgcj.so.70)   at org.apache.uima.util.impl.XMLParser_impl.parse(XMLParser_impl.java:174)   at org.apache.uima.taeconfigurator.editors.ui.AbstractSection.parseDescriptor(AbstractSection.java:1411)   at org.apache.uima.taeconfigurator.editors.MultiPageEditor.parseSource(MultiPageEditor.java:816)   at org.apache.uima.taeconfigurator.editors.MultiPageEditor.init(MultiPageEditor.java:799)   at org.eclipse.ui.internal.EditorManager.createSite(EditorManager.java:842)   at org.eclipse.ui.internal.EditorReference.createPartHelper(EditorReference.java:583)   at org.eclipse.ui.internal.EditorReference.createPart(EditorReference.java:372)   at org.eclipse.ui.internal.WorkbenchPartReference.getPart(WorkbenchPartReference.java:566)   at org.eclipse.ui.internal.PartPane.setVisible(PartPane.java:290)   at org.eclipse.ui.internal.presentations.PresentablePart.setVisible(PresentablePart.java:140)   at org.eclipse.ui.internal.presentations.util.PresentablePartFolder.select(PresentablePartFolder.java:268)   at org.eclipse.ui.internal.presentations.util.LeftToRightTabOrder.select(LeftToRightTabOrder.java:65)   at org.eclipse.ui.internal.presentations.util.TabbedStackPresentation.selectPart(TabbedStackPresentation.java:394)   at org.eclipse.ui.internal.PartStack.refreshPresentationSelection(PartStack.java:1144)   at org.eclipse.ui.internal.PartStack.setSelection(PartStack.java:1097)   at org.eclipse.ui.internal.PartStack.presentationSelectionChanged(PartStack.java:795)   at org.eclipse.ui.internal.PartStack.access$1(PartStack.java:781)   at org.eclipse.ui.internal.PartStack$1.selectPart(PartStack.java:123)   at org.eclipse.ui.internal.presentations.util.TabbedStackPresentation$1.handleEvent(TabbedStackPresentation.java:126)   at org.eclipse.ui.internal.presentations.util.AbstractTabFolder.fireEvent(AbstractTabFolder.java:267)   at org.eclipse.ui.internal.presentations.util.AbstractTabFolder.fireEvent(AbstractTabFolder.java:276)   at org.eclipse.ui.internal.presentations.defaultpresentation.DefaultTabFolder.access$1(DefaultTabFolder.java:1)   at org.eclipse.ui.internal.presentations.defaultpresentation.DefaultTabFolder$2.handleEvent(DefaultTabFolder.java:84)   at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:66)   at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1085)   at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1109)   at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1094)   at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:935)   at org.eclipse.swt.custom.CTabFolder.setSelection(CTabFolder.java:3171)   at org.eclipse.swt.custom.CTabFolder.onMouse(CTabFolder.java:1953)   at org.eclipse.swt.custom.CTabFolder$1.handleEvent(CTabFolder.java:288)   at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:66)   at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1085)   at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:3180)   at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2856)   at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1930)   at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1894)   at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:422)   at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:149)   at org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:95)   at org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:78)   at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:92)   at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:68)   at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:400)   at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:177)   at java.lang.reflect.Method.invoke(libgcj.so.70)   at org.eclipse.core.launcher.Main.invokeFramework(Main.java:336)   at org.eclipse.core.launcher.Main.basicRun(Main.java:280)   at org.eclipse.core.launcher.Main.run(Main.java:977)   at org.eclipse.core.launcher.Main.main(Main.java:952)
issueID:UIMA-5450
type:Bug
changed files:
texts:Ruta: MinMax quantifier misses to fail
Ruta: MinMax quantifier misses to fail(ChunkNP{-PARTOF(Group)-> Member} (COMMA ChunkNP{-PARTOF(Group)-> Member})[2,5]){->Enum()};
issueID:UIMA-5451
type:Improvement
changed files:
texts:DUCC WebServer (WS) ducc_disk_info runs too often
WebServer may be observed having a plethora of threads attempting ducc_disk_info.  Presently this is triggered by each ducc-mon visitor.  Change the paradigm such that only one WS thread instance of ducc_disk_info is running, and wait 60 minutes between completion of the previous and start of the next invocation of the Python script.  Record the result to WS log.
issueID:UIMA-5452
type:Documentation
changed files:
texts:DUCC Web Server (WS) should provide restriction on responses comprising user data - documentation!
Update DUCC Book to better document Jira 5206.
issueID:UIMA-5453
type:Bug
changed files:
texts:uv3 select api index not set, causing NPE
doing aCas.select("someTypeName").count() causes an NPE, because the index is null in the splititerator impl used to create the stream.
issueID:UIMA-5454
type:Task
changed files:
texts:uv3 refactor feature structure compare for wider use cases + more accurate Cas Compare mode
BinaryCasSerDes6 has general CAS compare methods, currently set up for equal / not-equal with error reporting for not-equal (used in testing).  For other uses, it is helpful to be able to "sort" feature structures; so change some parts of this to return -1 0 1 instead of true/false, and allow use without error reporting.  Use this new capability to have a mode for CAS compare that does a more thorough sorting of the FSs for a more accurate compare.
issueID:UIMA-5456
type:Bug
changed files:
texts:Ruta: ConcurrentModificationException in wildcard
Ruta: ConcurrentModificationException in wildcard
issueID:UIMA-5457
type:Bug
changed files:
texts:Ruta: block within foreach block
Ruta: block within foreach block
issueID:UIMA-5458
type:Task
changed files:
texts:Ruta: add more documentation about wildcard #
Ruta: add more documentation about wildcard # also with best practices when to use it and when not.
issueID:UIMA-546
type:Task
changed files:
texts:Refactor Cas Editor source code
All warnings should be removed All finbugs warnings should be removed Ensure that all code is formated according to the uima guidelines Run the eclipse clean up wizard
issueID:UIMA-5460
type:Bug
changed files:uimaj-core/src/main/java/org/apache/uima/analysis_engine/impl/PearAnalysisEngineWrapper.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/impl/PearAnalysisEngineWrapper.java
texts:NPE in PearAnalysisEngineWrapper.createRM
The method CreateRM in the class PearAnalysisEngineWrapper throws an NPE on line 122:rsrcMgr.setCasManager(parentResourceManager.getCasManager());because parentResourceManager is NULL.In my case, I have seen this exception in 2 cases:1) When datapath was not set in the PEAR (or in the context)2) When my PEAR was referring another PEARI guess this is also the case documented in the code itself where it says that parentResourceManager CAN be NULL (indeed the NULL on that parameter is also previously checked in the code...).// could be null for top level Pear not in an aggregate
issueID:UIMA-5461
type:Bug
changed files:
texts:UIMA-AS services should support deployment descriptors in the class path
the CLI should use the caller's CP when opening a DD in the classpath A file copy of the DD must be created as UIMA-AS (actually Saxon) expects a file
issueID:UIMA-5462
type:Bug
changed files:
texts:DUCC Orchestrator (OR) should checkpoint when shutdown is requested
In order to have the closest approximation to the current state at next Orchestrator (OR) boot, it should do a checkpoint when a shutdown request arrives.Presently, no checkpoint is done at shutdown request time.  And if a Job has processed 20 work items, once the OR reboots the Job will be canceled (as expected) but will likely show 0 work items completed on the WS Jobs page.  But drilling down to the Job details one would discover that these 20 work items were indeed completed.
issueID:UIMA-5463
type:Improvement
changed files:
texts:uv3 add docs: bkwds compatibility: iterator order change
UIMA defines iterators over an Index as "undefined" for FSs which compare equal using the Index's comparator.  For example, for Annotations, this is based on the begin and end features, and the type via the type priority ordering (if one exists).UIMA v2 and v3 treat these undefined elements differently, and have different iteration orders.  For users who may have inadvertantly written code that depends on iteration order for "equal" FSs, the results may differ.  Document this as part of the backward compatibility differences.
issueID:UIMA-5464
type:Documentation
changed files:
texts:fixing typos in doc-uima-*.html pages
Two of the root documentation pages contain typos. https://uima.apache.org/doc-uima-examples.html      "...the complied sources" should read "...the compiled sources..."      "...the core Java SDK pacakge."  should read "...the core Java SDK package." https://uima.apache.org/doc-uima-annotator.html      "doesn't collide accidently with someone else use of that name." should read "...accidentally with someone else's use..."Patch attached.
issueID:UIMA-5465
type:Bug
changed files:
texts:UIMA DUCC: Fix StringOutOfBoundsException when DD points to primitive AE with scalout > 1
The JP throws StringOutOfBoundsException when a DD points to a primitive AE descriptor and scaleout > 1. It's parsing error while trying to build performance metrics right after CAS processing. Full exception:WARNING: UimaProcessContainerjava.lang.StringIndexOutOfBoundsException: String index out of range: -1        at java.lang.String.substring(String.java:1219)        at org.apache.uima.ducc.user.jp.UimaASProcessContainer.doProcess(UimaASProcessContainer.java:333)
issueID:UIMA-5467
type:Bug
changed files:
texts:Ruta: combination of strictImports and setting type variables by parameter
Ruta: combination of strictImports and setting type variables by parameter can cause an ugly NPE instead of a meaningful exception when the configured type is not imported.
issueID:UIMA-5468
type:Bug
changed files:
texts:Ruta: order of multiple scripts in explanation view
If a pipeline with several RutaEngine which all are set to debug is run, the Applied Rules view shows the scripts in random order.
issueID:UIMA-5469
type:Bug
changed files:
texts:UIMA-DUCC: The JP code not handling HttpHostConnectException
Error handling for HttpHostConnectionException is incomplete. When the HttpClient looses connection to the JD's Web Server, the above exception is thrown. There is an explicit  catch() to deal with it but all it does now is just log the problem once. So what happens in this scenario is that a thread fails over and over again. What should happen here is that a single thread should attempt connection recovery sleeping for awhile (default=60sec) and try again. Other threads (if scaleout > 1), should block doing nothing until a thread doing the retry succeeds.
issueID:UIMA-547
type:Bug
changed files:uimaj-core/src/main/java/org/apache/uima/cas/impl/XCASDeserializer.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/XCASSerializer.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/XmiCasDeserializer.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/XCASDeserializer.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/XCASSerializer.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/XmiCasDeserializer.java
texts:XmiCasDeserializer fails to deserialize arrays if JCAS has been initialized
If the JCAS has been initialized, subsequently attempting to deserialize an XMI CAS containing an array will fail with an error message such as:java.lang.ClassCastException: org.apache.uima.jcas.cas.StringArray cannot be cast to org.apache.uima.cas.impl.FeatureStructureImplCThe XmiCasDeserializer is incorrectly trying to typecast to FeatureStructureImplC, which is the implementation class used only in non-JCAS scenarios.  It is surprising we did not see this before.
issueID:UIMA-5470
type:Improvement
changed files:uimaj-core/src/main/java/org/apache/uima/cas/impl/AllFSs.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/BinaryCasSerDes6.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/CASImpl.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/CasCompare.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/CommonSerDesSequential.java
texts:ReDo AllFSs to support excluding the merely reachables
some operations (Comparing 2 CASs) work better when starting from just the set of indexed FSs. Rework the AllFSs class to support this.  Update the callers as needed.
issueID:UIMA-5471
type:Improvement
changed files:uimaj-core/src/main/java/org/apache/uima/cas/impl/AllFSs.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/BinaryCasSerDes6.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/CASImpl.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/CasCompare.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/CommonSerDesSequential.java
texts:Better CasCompre code, move to own class
BinaryCasSerDes6 has a cas compare routine, used more generally.  Break out into its own class, change callers. Make the compare do a better job of comparing, handling not just unequal type systems, but also better handling of FsRefs and arrays.
issueID:UIMA-5475
type:Bug
changed files:
texts:DUCC Web Server (WS) running under IBM Java 1.8 fielding https from Chromium gives ERR_SSL_VERSION_OR_CIPHER_MISMATCH
All is well with Oracle Java 1.8 and with IBM Java 1.7.  But switching to IBM Java 1.8 and using Chromuim results in ERR_SSL_VERSION_OR_CIPHER_MISMATCH when attempting to use https to ducc-mon.See https://www.ibm.com/developerworks/community/forums/html/topic?id=d34413d1-fc6d-4ea1-9e7b-4e331b591aa9
issueID:UIMA-5478
type:Bug
changed files:uimaj-core/src/main/java/org/apache/uima/internal/util/OrderedFsSet_array.java
texts:OrderedFsSet_array has several infrequent problems
More extensive testing in a larger user application reveals some problems with the main data structure used to implement sorted FS indexes in UV3.  Build a much more comprehensive test case that tests all kinds of adds and removes, to uncover these, and fix them.  Also,add IllegalArgumentException for passing a null to add or remove.
issueID:UIMA-5479
type:Improvement
changed files:uimaj-core/src/main/java/org/apache/uima/cas/impl/FsIndex_iicp.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FsIndex_set_sorted.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FsIndex_singletype.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FsIterator_subtypes_ordered.java
texts:uv3 performance bug - FsIterator_subtypes_ordered not using custom comparator
Most uses of Sorted UIMA indexes for comparing FSs make use of custom comparators for Annotation indexes (versus using the general purpose comparator).  But the implementation of FsIterator_subtypes_ordered fails to use this one.
issueID:UIMA-548
type:Improvement
changed files:
texts:update UIMA project members webpage

issueID:UIMA-5480
type:Bug
changed files:
texts:Ruta: unknown type param variable resolved against Annotation
Ruta: unknown type param variable resolved against Annotation
issueID:UIMA-5481
type:Improvement
changed files:
texts:Ruta: string variables with null values
Currently, string variables cannot be null, only ""
issueID:UIMA-5483
type:Improvement
changed files:uimaj-core/src/main/java/org/apache/uima/cas/text/AnnotationIndex.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/LinearTypeOrderBuilderImpl.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FSIndexRepositoryImpl.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FsIndex_singletype.java
uimaj-core/src/main/java/org/apache/uima/cas/admin/LinearTypeOrder.java
texts:uv3 exclude type order in index comparators if no type priorities are priorities are defined
The Annotation Index (and any other user defined index which includes type ordering) sorts using type ordering.  However, if no type ordering is present (there is typePriority specification in the pipeline xml). then this is a no-op.  UIMA V2 did some kind of default type ordering in this case.  Update V3 to exclude the type ordering test if there are no type priorities specified (for performance improvement).  Update the backward compatibility spec to mention this difference.
issueID:UIMA-5484
type:Improvement
changed files:
texts:Ruta: wildcard with optional rule element
Ruta: wildcard with optional rule elementCurrently, optional rule elements after wildcards are not optional since the wildcard uses the iterator for the type. If the rule element is optional, it should check if a match of the next element is closer.
issueID:UIMA-5485
type:Task
changed files:
texts:UIMA-AS: prepare for 2.10.2 release
Update pom's, README, RELEASE_NOTES, LICENSE, NOTICE for the next release
issueID:UIMA-5486
type:Bug
changed files:
texts:Services registered without an endpoint specification fail to start
Probably broken by changes in UIMA-5461
issueID:UIMA-5487
type:Bug
changed files:
texts:Ruta: false positive problem in editor for label expression in inlined rule
Ruta: false positive problem in editor for label expression in inlined rule
issueID:UIMA-5488
type:Bug
changed files:
texts:Ruta: problem in testing view resolving typesystems in classpath
Ruta: problem in testing view resolving typesystems in classpath
issueID:UIMA-5489
type:Bug
changed files:
texts:Ruta: verbalization of some elements flawed
MATCHEDTEXT contains
issueID:UIMA-549
type:Bug
changed files:
texts:Extra jar listed in runtime plugin manifest
Part of UIMA-400 that was not fixed:lib/uima-jcas-builtin-types.jar is listed in manifest, but not present in plugin.It is still present in UIMA 2.2 release, though it does not cause any problems.The only possible problem that could arise is importing UIMA runtime plugin as an Eclipse project, then Eclipse may complain about missing jar.
issueID:UIMA-5495
type:Improvement
changed files:
texts:Set Index implicit use of type in comparator - document and add test case
UIMA Set indexes are implemented such that the type is an implicit part of the key set used for determining equality.  In other words, two Feature Structures of different types, but with the same key values for a Set index comparator, will not compare equal; both will be added to the set.  Document this, and add a test case.
issueID:UIMA-5496
type:Improvement
changed files:uimaj-core/src/main/java/org/apache/uima/cas/impl/FsIndex_set_sorted.java
uimaj-core/src/main/java/org/apache/uima/internal/util/OrderedFsSet_array.java
uimaj-core/src/main/java/org/apache/uima/internal/util/OrderedFsSet_array2.java
unused-saved/src/org/apache/uima/cas/impl/FsIterator_set_sorted_navset_version.java
texts:uv3 replace FsIndex_set_sorted, apply many fixes to replaced one
The first implementation of FsIndex_set_sorted assumed the underlying index was implemented by OrderedFsSet_array2.  This did a complex set of tradeoffs that improved insert/remove performance at the expense of more complex iteration. The OrderedFsSet_array2 impl was complex and was buggy (many bugs were removed, though, in this most recent commit).This implementation was based on "NavigableSet" apis, which required creation of multiple iterators as direction of iteration was reversed, and was quite complex.This change reverts both of these to a simpler more straight forward implementation, closer to how UIMA v2 did this, but with significant improvements in both iteration and insert/remove.  The underlying OrderedFsSet_array keeps the indexed items for one type in a compacted array, with free space possible at the begin and/or end, and rebalancing done as needed.  The iterator implementation removed several layers of indirection and is now implemented directly on top of the OrderedFsSet_array itself.
issueID:UIMA-5497
type:Bug
changed files:uimaj-core/src/main/java/org/apache/uima/cas/impl/FsIterator_aggregation_common.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FsIndex_singletype.java
texts:uv3 copy on write generation bugs
Race condition possible in copy on write generation.  Also missing for bag. unify parts with more sharing via refactoring, guarantee no gc of weak ref before can hold on to it.
issueID:UIMA-5499
type:Documentation
changed files:
texts:Describe how to set up an application broker for DUCC services

issueID:UIMA-550
type:Improvement
changed files:
texts:Sandbox components: use UIMA artifacts from the repository

issueID:UIMA-5504
type:Improvement
changed files:uimaj-core/src/main/java/org/apache/uima/cas/impl/FsIterator_subtypes_snapshot.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FSIndexRepositoryImpl.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FsIterator_aggregation_common.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/LowLevelIterator.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FsIndex_snapshot.java
unused-saved/src/org/apache/uima/cas/impl/FSListIteratorImpl.java
uimaj-core/src/main/java/org/apache/uima/internal/util/CopyOnWriteOrderedFsSet_array.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FsIterator_backwards.java
unused-saved/src/org/apache/uima/cas/impl/FsIterator_subtypes_list_unused.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FSIteratorImplBase.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FsIterator_limited.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FsIterator_singletype.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FsIterator_bag_pear.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/SelectFSs_impl.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FsIndex_annotation.java
uimaj-core/src/main/java/org/apache/uima/internal/util/CopyOnWriteObjHashSet.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FsIndex_set_sorted.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FsIterator_bag.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FsIndex_singletype.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FsIterator_set_sorted_pear.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FsIndex_iicp.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FsIterator_subtypes_ordered.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/LowLevelIterator_empty.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FsIterator_set_sorted2.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FsIterator_multiple_indexes.java
uimaj-core/src/main/java/org/apache/uima/cas/FSIterator.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/LowLevelIndex.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/Subiterator.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FilteredIterator.java
uimaj-core/src/main/java/org/apache/uima/internal/util/ObjHashSet.java
unused-saved/src/org/apache/uima/cas/impl/FsIterator_set_sorted.java
unused-saved/src/org/apache/uima/cas/impl/FsIterator_subtypes.java
texts:uv3 cleanup iterator classes
general iterator refactoring and cleanup, remove duplicate code by refactoring to common spots, make uniform the copy-on-write support across all iterators / indexes as appropriate.
issueID:UIMA-5505
type:Improvement
changed files:uimaj-core/src/main/java/org/apache/uima/cas/FSIndexRepository.java
uimaj-core/src/main/java/org/apache/uima/cas/CAS.java
uimaj-core/src/main/java/org/apache/uima/cas/FSIndexRepository.java
texts:uv3 APIs which take a UIMA Type instance, allow JCas class additionally, instead
Some methods which need a UIMA Type can take a Type instance, or the corresponding JCas class.  Extend this feature to more APIs.
issueID:UIMA-5506
type:Bug
changed files:
texts:DUCC Web Server (WS) log directory display path saved in DB is corrupted by missing "/"
When WebServer (WS) boots it should verify that the saved log directory display path comprising log directory + jobid is correct, but if not then correct it in its cache of historical data.Symptom is that clicking on log file link incorrectly yields: No data found.
issueID:UIMA-5508
type:Bug
changed files:
texts:DUCC Web Server (WS) Performance tab heading mislabelled
See Summary.
issueID:UIMA-5509
type:Bug
changed files:
texts:DUCC Web Server (WS) some historical ManagedReservations missing?
When displaying the Reservations page, some (possibly all) historical of type=Managed may be missing.
issueID:UIMA-551
type:Improvement
changed files:
texts:website update: add RegularExpressionAnnotator to Sandbox

issueID:UIMA-5510
type:Task
changed files:
texts:UIMA-DUCC: prepare for v.2.2.1 release
Update README, RELEASE_NOTES and legal docs.
issueID:UIMA-5511
type:Bug
changed files:
texts:UIMA-DUCC: add javadoc plugin to parent pom.xml
Add javadoc plugin to ducc's parent pom.xml. Since each ducc subproject imports parent pom and javadoc plugin is not defined, maven uses javadoc plugin from uima super pom where this plugin configuration is quite old. It sets java source level to 1.5.The consequence is that the build fails (when building with -Papache-release).The error is:&#91;ERROR&#93; Failed to execute goal org.apache.maven.plugins:maven-javadoc-plugin:2.9.1:jar (attach-javadocs) on project uima-ducc-user: MavenReportException: Error while creating archive:&#91;ERROR&#93; Exit code: 1 - /users1/cwiklik/releases/builds/uima-ducc/trunk/uima-ducc-user/src/main/java/org/apache/uima/ducc/user/service/UimaASServiceContainer.java:114: error: try-with-resources is not supported in -source 1.5&#91;ERROR&#93; try (FileOutputStream outs = new FileOutputStream(outf)) {&#91;ERROR&#93; ^&#91;ERROR&#93; (use -source 7 or higher to enable try-with-resources)By providing javadoc plugin in the paren pom we effectively override uima super pom settings for this plug-in. Set the java source level to whatever maven compiler plugin  source is set to. The try-with-resources is available since java 1.7.
issueID:UIMA-5512
type:Bug
changed files:
texts:UIMA-AS: Fix logging in JmsEndpointConnection_impl.send()
Scenario: service tries to send a msg to an endpoint which is no longer valid. It may had been deleted when a client went away. The client uses a temp queue for replies which are transient. If the owner of a temp queue terminates the queue is removed as well.If such queue is deleted a service trying to send a msg to it logs the following:Jul 27, 2017 11:02:04 AM org.apache.uima.adapter.jms.activemq.JmsEndpointConnection_impl sendWARNING: Controller: NoOpAnnotator Failed To Send Message to Delegates  Queue: nullIt is important for debugging to show the endpoint name which is currently not identified (null).The UIMA-AS extended junit test has a testcase which shows this scenario. Run testMultipleSyncClientsRecoveryFromBrokerStopAndRestart and when done grep for:NoOpAnnotator Failed To Send Message to Delegates
issueID:UIMA-5513
type:Bug
changed files:
texts:Fix docs for job descriptor override
Overrides are blank not comma separated
issueID:UIMA-5514
type:Bug
changed files:
texts:Fix docs for job descriptor override
Overrides are blank not comma separated
issueID:UIMA-5515
type:Bug
changed files:
texts:Fix docs for job descriptor override
Overrides are blank not comma separated
issueID:UIMA-5516
type:Bug
changed files:
texts:Fix docs for job descriptor overrides
Overrides are blank not comma separated
issueID:UIMA-5517
type:Bug
changed files:
texts:Fix docs for job descriptor overrides
Overrides are blank not comma separated
issueID:UIMA-5518
type:Bug
changed files:
texts:Fix docs for job descriptor overrides
Overrides are blank not comma separated
issueID:UIMA-5519
type:Bug
changed files:
texts:uv3 clarify use of ll_indexsize - used incorrectly in one spot
Given an iterator, there are two definitions of index size.  One is the size as seen by the iterator, which in v3, may not be the current index size (because iterators iterate over a view of the index at a particular point in time - either the time of iterator creation, or when a moveTo, moveToFirst, or moveToLast operation happens (except for snapshot iterators)).  The other size is the current size of the index (and any sub-type indexes). Change the name of the api to indicate this to reduce mistakes in the future.  Change uses which are incorrect (which need the current index size).
issueID:UIMA-552
type:Bug
changed files:
texts:Documentation for applications has non-working examples of API use (wrong number of args, reversed args)
We should check the tutorial examples in the documentation - perhaps by adding them to the examples project so that if they would not compile, we could tell.  Currently found in Tutorial & User's Guide, application chapter:mAnalysisEngine = UIMAFramework.produceAnalysisEngine(specifier,3);  <<< FAILS, no such signature   //create CAS pool with 3 CAS instances    mCasPool = new CasPool(mAnalysisEngine,3);  <<< Fails, arguments reversedThere are likely  others...
issueID:UIMA-5521
type:Bug
changed files:
texts:DUCC now fails to handle fake ids when running a simulated cluster
Should check if the effective id is 0 instead of trying to switch when not setuid
issueID:UIMA-5522
type:Bug
changed files:
texts:DUCC Web Server (WS) NPE handling JobSpecificationData requests
Request for non-existent Job Specification for non-existent Job causes (recoverable) NPE in WS.
issueID:UIMA-5523
type:Bug
changed files:
texts:uv3 wrong test in one iterator impl for index becoming non-empty
a test to see if an empty iterator is no longer empty is mistakenly testing the copy-on-write version.
issueID:UIMA-5524
type:Improvement
changed files:
texts:add test case for all varieties of rattling iterators
do a thorough test of all edge cases of rattling iterators, using random number to create variety.
issueID:UIMA-5525
type:Bug
changed files:
texts:Correct documentation for ducc_update

issueID:UIMA-5526
type:Bug
changed files:
texts:UIMA-AS: improve log msg when service unable to reply to client
When a client terminates while it has outstanding CASes processed, the service logs a Warning msg like " .... Failed to Send Message to Delegates Queue: null".Not much information in there to understand the problem. Improve the message to help user determine the problem and also to help identify the client which is no longer running.  No need to log an exception since a missing client is a possible/expected scenario in a dynamic system.
issueID:UIMA-5527
type:Task
changed files:
texts:UIMA-DUCC: require java 1.8 for builds and runtime
Currently DUCC requires java 7 for maven builds. This version of java is quite old. We should  move up DUCC's java version to java 8 at minimum. Besides pom changes, the DUCC's javadoc method headers must be changed to comply with a stricter syntax checking in version 8.
issueID:UIMA-5529
type:Bug
changed files:
texts:DUCC: Serialization of AnalysisEngineProcessException fails in JP
If AE process() fails, the JP tries to serialize the exception before sending it to the JD. The AE throws a UIMA core AnalysisEngineProcessException which fails to serialize with:java.io.NotSerializableException: sun.misc.Launcher$AppClassLoaderIt turns out that this is caused by changes made to the InternationalizedException class as described in JIRA https://issues.apache.org/jira/browse/UIMA-4793The fix discussed in the JIRA broke serialization of uima exceptions. The InternationalizedException  class contains a member variable of type ClassLoader which is not Serializable. For Ducc, the fix is to avoid Object serialization of the AnalysisEngineProcessException and use this instead:            StringWriter sw = new StringWriter();            t.printStackTrace(new PrintWriter(sw));            serializedCause =  sw.toString();where t = AnalysisEngineProcessException The entire stack trace is captured as a String then wrapped in a java RuntimeException and sent to the JD for logging. Also, add a new job to the DUCC_HOME/example/simple 1-error.job which forces AE to throw an error.
issueID:UIMA-553
type:Improvement
changed files:uimaj-core/src/main/java/org/apache/uima/resource/impl/CasManager_impl.java
texts:casManager.releaseCas(aCas) should switch to the base view of the argument; otherwise fails to release
User tried:CAS cas = casManager.getCas("pool");       // ... some processingcasManager.releaseCas(cas);    // << FAILED, because the getCas returned the default view (not the base view), but                                                            // the base view is required (currently) to release.
issueID:UIMA-5530
type:Bug
changed files:
texts:DUCC Agent does not kill -9 a service that has refuses to be stopped by kill -15?
A python script that is run as a service employs a signal handler.  When the service is stopped, the signal 15 is sent to the service instance, but the signal is ignored  The Agent should detect that the instance stubbornly remains alive and should issue kill -9 to it, but that does not seems to occur.
issueID:UIMA-5531
type:Bug
changed files:
texts:DUCC service threads may be slow to pick up new work
Out-of-work threads block while the first idle one waits for work, but when it gets work each of the waiting threads waits a minute before checking for work - so if all 40 are blocked when a batch of work arrives the last will get work 39 mins after the first does.
issueID:UIMA-5532
type:Bug
changed files:uimaj-core/src/main/java/org/apache/uima/cas/impl/CasSerializerSupport.java
uimaj-json/src/main/java/org/apache/uima/json/JsonCasSerializer.java
uimaj-json/src/main/java/org/apache/uima/json/JsonCasSerializer.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/CasSerializerSupport.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/CasSerializerSupport.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/CasSerializerSupport.java
texts:xmi/json serialization multiple-refs-allowed sometimes fails to serialize item
The xmi/json common serialization code made a wrong assumption in the design.  It assumed that if a FS referenced from a feature slot marked as MultipleReferencesAllowed, that all other feature slots which might have that FS as a feature slot value also declared those slots as MutlipleReferencesAllowed.One use case occured where this was not the case.  The implementation in that case fails to serialize the shared FS, and subsequent deserialization (of course) fails.
issueID:UIMA-5533
type:Improvement
changed files:
texts:improve sorted index insert and faster findEq when lots of equal items
Use the same technique used in UIMA v3 for sorted indexes to sort by their comparator, and then if equal, to sort by their FS hashcode (== id).  This fixes a performance problem when there's lots of comparator-equal (but not identical) FSs added to a sorted index.  It also makes the iteration order consistent with UIMA V3, enabling verification/compares of the two versions.
issueID:UIMA-5534
type:Bug
changed files:
texts:uv3 subiterator fixups
The subiterator impl has lots of small fixups needed.
issueID:UIMA-5535
type:Bug
changed files:
texts:Fix Javadoc error found by Java 1.8

issueID:UIMA-5536
type:Bug
changed files:uimaj-core/src/main/java/org/apache/uima/cas/impl/SelectFSs_impl.java
texts:uv3 remove positionUsesType from select api
The select API attempts to combine some of uimaFIT's capability for iterating.  The design included a configuration choice "positionUsesType".  This was implemented incorrectly for some cases, and it seems it would be hard to fix.  This Jira suggests removing it altogether.What it does: It affects two bits of iterator operation: moveTo(fs) - move to the leftmost item that "matches" fs for bounded iterators: skip the item which is "equal" to the bound.Details: The "matches" in 1) is based on the comparator for the index.  For Annotation indexes, this includes the typePriority.  However, the select API framework by default doesn't use type priorities (can be configured though). This means, if the underlying iterator is using type priorities, then doing a moveTo on it will move to a spot which might not be the "left-most" when type priorities are not used.  The correction for this has two flavors: depending on the setting of positionUsesType.  If not specified, the correction worked, and moved to the left-most same-begin-end-ignoring-type.  If specified, the correction was ignoring this, and a fix would need to scan in both directions to find the right type.  Although this could be done, it's complex.  And I think this is designing beyond a real need.  Use 2 is for skipping the bounding annotation when iterating (if it is in the index).  The normal mode for skipping is to skip only the item if it is == identical to the bounding annotation.  But (for UIMA v2 bounded iterator compatibility) a mode where the compare is done using the Annotation Comparator is provided.  The positionUsesType would narrow this equal test by also requiring that the types match.  I think this is unnecessarily complex, since I think most uses will be using the == style.So I propose to remove positionUsesType from the implementation / documentation.
issueID:UIMA-5537
type:Bug
changed files:
texts:UIMA-DUCC: agent GC collector not reporting GC stats
Agent's child process GC collector not reporting stats sometimes. When agent launches a child process it also starts a GC collector which probes the remote MBeanServer for current garbage collector stats. The remote process sends an update to the agent which includes process JMX port. This port is used by the GC collector to connect to the remote. There is a race here: an agent can start GC collector before it receives JMX port from the remote. The current code establishes JMX connection in its constructor which is a bug. If it fails to connect, it silently goes on and keeps reporting 0 for GC stats. The fix is to improve logging to clearly identify what is happening. Since the collector is called on  a timer, it should always check its connection and try to establish it if a previous attempt failed.
issueID:UIMA-5538
type:Test
changed files:uimaj-core/src/main/java/org/apache/uima/cas/impl/CASImpl.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/CASImpl.java
texts:add -D flag to enable Feature Structure tracing
There is a trace facility that traces creation and updating of feature structures.  It produces huge output, typically, so is only useful for debugging purposes.  Currently, a re-compile is needed to turn it on/off.  Add a -D jvm argument to do this.
issueID:UIMA-554
type:Improvement
changed files:uimaj-core/src/main/java/org/apache/uima/impl/CollectionReaderFactory_impl.java
texts:Have produceResource for CollectionReaders operate like other Analysis Engines with respect to setup of type system
This code fails but works if you uncomment out line 3:     CollectionReader cr = UIMAFramework.produceCollectionReader(aSpecifier);     CasManager casManager = cr.getCasManager();//   casManager.addMetaData((ProcessingResourceMetaData)cr.getMetaData());     casManager.defineCasPool("pool", 2, null);Other "produce" methods (i.e. for analysis engines) add their metadata to their cas managers.  Consider doing this for Collection Readers too  (this is now done during CPE initialization).Use case: User found this while trying to test collection reader by itself.
issueID:UIMA-5540
type:Bug
changed files:
texts:UIMA-AS: Aggregate type priorities are not merged properly
The UIMA-AS aggregate merges type priorities from all delegates. When all delegates report back, the aggregate does not merge its type priorities. The consequence is that the aggregate's type priorities are clobbered due to this:aggregateMetadata.setTypePriorities(getCasManagerWrapper().getMetadata().getTypePriorities());In the above, the CasManager contains type priorities from all delegates only.When UIMA-AS client receives Meta from an aggregate service, the type priorities are missing if an aggregate was the only one that defined it. If type priorities are moved from aggregate to a delegate all is well since the merge successfully added them to the aggregate meta. The fix is to merge an aggregate type priorities with the delegate type priorities before callingaggregateMetadata.setTypePriorities(...);
issueID:UIMA-5541
type:Improvement
changed files:
texts:DUCC Orchestrator (OR) should record DB checkpoint size in its log
See Summary.
issueID:UIMA-5542
type:Bug
changed files:
texts:UIMA-DUCC: upgrade JNA or correct LICENSE
DUCC License says we depend on jna-4.2.2 which was true at some point. The ibm jvm had some issues with that causing a hang. The parent pom dependency was changed to jna 4.0.0 but LICENSE file had not been updated. Apparently ibm jvm was fixed (jdk8?) and is now happy with a newer jna. If so we can upgrade jna for the next release.
issueID:UIMA-5543
type:Bug
changed files:
texts:uv3: cas binary deserialization may miss resetting CAS first
The reinit() method in BinaryCasSerDes fails to reset the cas, and in particular, the getDocumentAnnotation method gets an old version which has a wrong type system instance.
issueID:UIMA-5544
type:Bug
changed files:
texts:XmiCasDeserializer test doing invalid cas building - causes error in uv3
The XmiCasDeserializerTest does an invalid operation:  It runs two tests sequentially (in the same method), with a cas reset inbetween them.  But the first test creates two FSs which are held in Java local variables, and reused after the CAS has been reset (they were never recreated after the CAS was reset).This causes some strange behavior in Uima V3 (in its current state), which trips a runtime check.  The easy fix is to recreate the two FSs after the cas reset.Besides fixing the test case, maybe add a (maybe optional) catcher for these kinds of errors: something like detecting if a FS that was created in CAS nnn (where nnn is different for different CASs and different "resets" of the same CAS) is attempted to be set as a reference in another CASnnn.  Or maybe this is overdesign, since no one's complained...
issueID:UIMA-5545
type:Improvement
changed files:
texts:UIMA-DUCC: add toString() to PerformanceMetrics
The PerformanceMetrics class should provide toString() convenience method to extract metrics from Properties. Currently the user code has to call get() which returns List<Properties> and iterate over this. If all the user wants is to log metrics, toString() convenience method would hide all the details of this iteration and instead would return formatted string ready for logging.
issueID:UIMA-5546
type:Improvement
changed files:uimaj-core/src/main/java/org/apache/uima/cas/FSComparators.java
uimaj-core/src/main/java/org/apache/uima/cas/SelectFSs.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FSIndexRepositoryImpl.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FsIndex_annotation.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FsIndex_bag.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FsIndex_flat.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FsIndex_iicp.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FsIndex_set_sorted.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FsIndex_singletype.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FsIndex_snapshot.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FsIterator_aggregation_common.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FsIterator_bag.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FsIterator_multiple_indexes.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FsIterator_set_sorted2.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FsIterator_set_sorted_pear.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FsIterator_singletype.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FsIterator_subtypes_ordered.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FsIterator_subtypes_snapshot.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/LLUnambiguousIteratorImpl.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/LowLevelIndex.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/LowLevelIterator.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/LowLevelIterator_empty.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/SelectFSs_impl.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/Subiterator.java
uimaj-core/src/main/java/org/apache/uima/internal/util/OrderedFsSet_array.java
texts:uv3 rework iterator use of typeOrder
Simplify the implementation of the feature of the select API to create iterators which can bypass type order.  Make a universal iterator(orderNotNeeded, ignoreType) API, pushing the implementation of these into the iterator framework (instead of subiterator impl). Change subiterator impl to focus on boundaries and iteration styles (strict, unambiguous, etc).  Change select API to use new iterator creation apis.
issueID:UIMA-5547
type:Bug
changed files:uimaj-core/src/main/java/org/apache/uima/cas/impl/CASImpl.java
texts:some CAS deserializations skipping CAS Reset
The cas complete deserialization done by a test case in UIMA V3 had a strange failure caused by some caching that wasn't cleared (and was holding on to previously created 0-length primitive arrays shared by the JCas).Check all the CAS deserialization paths to insure that non-delta ones do a cas reset - to clear out possibly cached things.  And check if extra reset is needed when (re)installing type system, indexes, etc. - some is done in v3, not sure about v2..
issueID:UIMA-5548
type:Improvement
changed files:uimaj-core/src/main/java/org/apache/uima/jcas/JCas.java
uimaj-core/src/main/java/org/apache/uima/jcas/impl/JCasImpl.java
uimaj-core/src/main/java/org/apache/uima/jcas/tcas/Annotation.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/AnnotationBase.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/BooleanArray.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/ByteArray.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/CommonList.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/CommonPrimitiveArray.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/DoubleArray.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/FSList.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/FloatArray.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/FloatList.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/IntegerArray.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/IntegerList.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/LongArray.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/NonEmptyFSList.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/NonEmptyFloatList.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/NonEmptyIntegerList.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/NonEmptyStringList.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/ShortArray.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/StringArray.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/StringList.java
uimaj-core/src/main/java/org/apache/uima/cas/ArrayFS.java
uimaj-core/src/main/java/org/apache/uima/cas/BooleanArrayFS.java
uimaj-core/src/main/java/org/apache/uima/cas/ByteArrayFS.java
uimaj-core/src/main/java/org/apache/uima/cas/CAS.java
uimaj-core/src/main/java/org/apache/uima/cas/FSIterator.java
uimaj-core/src/main/java/org/apache/uima/cas/FloatArrayFS.java
uimaj-core/src/main/java/org/apache/uima/cas/IntArrayFS.java
uimaj-core/src/main/java/org/apache/uima/cas/LongArrayFS.java
uimaj-core/src/main/java/org/apache/uima/cas/ShortArrayFS.java
uimaj-core/src/main/java/org/apache/uima/cas/StringArrayFS.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/CASImpl.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/SelectFSs_impl.java
texts:uv3 API rationalization and cleanup
API cleanups: including uniform naming for create instead of createFromArray, getEmptyXX-list/array for cas and jcas, with default implementations, cleanups and clarifications for some javadocs, including describing moveTo operation with and without typeOrder
issueID:UIMA-555
type:New Feature
changed files:
texts:add documentation for the RegularExpressionAnnotator

issueID:UIMA-5550
type:Task
changed files:
texts:Eclipse Update Site improvement for 3.0.0SDK
Figure out how to drop the older versions (alpha and beta) from the eclipse update site for 3.0.0.Decide on a naming convention for the 3.0.0 "branch" if keeping separate.Figure out how to move older versions for v2 Uima to "archive" spot, not in the Apache "mirrors".
issueID:UIMA-5551
type:New Feature
changed files:
texts:Add registry support so pull services can locate their server
Optionally allow pull services to use a registry to locate resources such as their server and other services such as a database.
issueID:UIMA-5552
type:Bug
changed files:uimaj-core/src/main/java/org/apache/uima/cas/CAS.java
uimaj-core/src/main/java/org/apache/uima/cas/FeatureStructure.java
texts:uv3: Get JCas instance in JCas class
In the new JCas FS classes, it is no longer possible to access the JCas instance conveniently. With UIMA v2, is was possible to get the JCas containing a feature structure via `jcasType.jcas`. Now, one has to do a `getCAS().getJCas()` but that requires catching a CASException. It would be nice to have a convenience method `getJCas()` in JCas FS classes that does not throw an exception.
issueID:UIMA-5553
type:Bug
changed files:uimaj-core/src/main/java/org/apache/uima/resource/impl/ResourceManager_impl.java
uimaj-core/src/main/java/org/apache/uima/resource/ResourceManager.java
uimaj-core/src/main/java/org/apache/uima/resource/impl/ResourceManager_impl.java
texts:uv3: Ability to set just a parent classloader, but not classpath
uimaFIT tries to set a custom classloader on a resource manager - but it does so without adding any additional classpath entries:          ResourceManager resMgr = UIMAFramework.newDefaultResourceManager();          resMgr.setExtensionClassPath(ClassUtils.getDefaultClassLoader(), "", true);          return resMgr;With UV3, this call now produces a warning:org.apache.uima.internal.util.Misc addUrlsFromPath(257) WARNING: Skipping adding "" to URLsIt would be nice to have a `resMgr.setExtensionClassPath` method that just sets the parent loader but without trying to add URLs.
issueID:UIMA-5554
type:Bug
changed files:uimaj-core/src/main/java/org/apache/uima/cas/CASRuntimeException.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/TypeSystemImpl.java
texts:Strange exception when trying to get JCas FS class through reflection
I am trying to get a class object for a JCas FS type using reflection:Class.forName(typeName);However, it produces this strange error.java.lang.ExceptionInInitializerError at java.lang.Class.forName0(Native Method) at java.lang.Class.forName(Class.java:264)...Caused by: org.apache.uima.cas.CASRuntimeException: A JCas class field "sofa" is being initialized by non-framework (user) code before Type System Commit for a type system with a corresponding type. Either change the user load code to not do initialize, or to defer it until after the type system commit. at org.apache.uima.cas.impl.TypeSystemImpl.getAdjustedFeatureOffset(TypeSystemImpl.java:2575) at org.apache.uima.jcas.cas.AnnotationBase.<clinit>(AnnotationBase.java:71) ... 27 moreIs it considered harmful to try getting a class object for a JCas FS class?
issueID:UIMA-5556
type:Bug
changed files:uimaj-core/src/main/java/org/apache/uima/util/impl/JSR47Logger_impl.java
uimaj-core/src/main/java/org/apache/uima/util/impl/Log4jLogger_impl.java
uimaj-core/src/main/java/org/apache/uima/util/impl/Logger_common_impl.java
uimaj-core/src/main/java/org/apache/uima/util/impl/Logger_impl.java
uimaj-core/src/main/java/org/apache/uima/util/impl/Slf4jLogger_impl.java
texts:uv3: Logging substitution does not work consistently
The substitution of values in UIMA logging does not work consistently. E.g. for the following code      UIMAFramework.getLogger().warn("Skipping adding \"{0}\" to URLs", p);Depending on the configured logging backend, I get different messages. E.g. with SLF4J, I get the broken:2017-09-08 14:45:42  WARN [main] (Misc) - Skipping adding "{0}" to URLswhile with what (I suppose) is the default UIMA logger used in the uimaFIT maven plugin, I get the correct[WARNING] Skipping adding "" to URLs
issueID:UIMA-5557
type:Bug
changed files:uimaj-core/src/main/java/org/apache/uima/cas/impl/FSClassRegistry.java
texts:uv3 custom JCas getters return value check should be skipped for arg lists which are not getters
With the UIMAv3 jcasgen, at runtime, I am seeing messages such as2017-09-08 15:00:29  WARN [main] (FSClassRegistry) - CAS type system type "de.tudarmstadt.ukp.dkpro.core.api.segmentation.type.Compound" defines field "splits" with range "class org.apache.uima.jcas.cas.FSArray", but JCas getter method is returning "interface java.util.List" which is not a subtype of the declared range.A user on the users mailing list reported a similar message when trying out UIMAv3:JCAS range type uima.cas.FSArray for feature ... does not match the CAS range type uima.cas.StringArray for the feature
issueID:UIMA-5558
type:Bug
changed files:uimaj-core/src/main/java/org/apache/uima/cas/impl/XmiCasSerializer.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/XmiCasSerializer.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/XmiCasSerializer.java
texts:xmi serialization/deserialization of 0-length array being deserialized as null
A user reports a serialization of a 0-length string array feature value is subsequently being deserialized as a null.  The binary serialization/deserialization is correct, though.Also check JSON, and FSLists.
issueID:UIMA-5559
type:Documentation
changed files:
texts:DUCC cgroups use prerequistes are out-of-date
CGroups have changed a lot relative to what DUCC documentation describes. Update cgroup related info to reflect this. Make the information more general to be able to cover Ubuntu as well as SuSe and Red Hat based distros. Remove details specific to older distros.Add a little helpful info about building DUCC documentation which is in the same file.
issueID:UIMA-556
type:Improvement
changed files:
texts:Cas Editor: Add drag n drop to the corpus explorer view

issueID:UIMA-5560
type:Improvement
changed files:
texts:DUCC Web Server (WS) banner Home: should be DUCC_HOME=
See Summary.
issueID:UIMA-5561
type:Bug
changed files:
texts:DUCC Web Server (WS) queries DB too often
In order for the WS to determine if the DB is up, it reads the checkpoint dataset.  However, this operation is performed for each individual user request for the daemons page.  If say Zabbix and others are making such requests this could amount to a plethora of reads of the checkpoint dataset.Evidence is a slew of entries like so:11 Sep 2017 13:37:25,791  INFO DB.HistoryManagerDb - 365696 restore  Restored class org.apache.uima.ducc.transport.event.common.DuccWorkJob11 Sep 2017 13:37:25,791  INFO DB.HistoryManagerDb - 365692 restore  Restored class org.apache.uima.ducc.transport.event.common.DuccWorkJob11 Sep 2017 13:37:25,791  INFO DB.HistoryManagerDb - 366293 restore  Restored class org.apache.uima.ducc.transport.event.common.DuccWorkJob11 Sep 2017 13:37:25,791  INFO DB.HistoryManagerDb - 365794 restore  Restored class org.apache.uima.ducc.transport.event.common.DuccWorkJobA cache is introduced.  If DB checkpoint dataset access has been attempted within the last minute, we return the last status of: Up or Down.  Otherwise WS attempts to read the checkpoint dataset and resets the status sets the time of last access attempt to the current time.
issueID:UIMA-5562
type:Bug
changed files:
texts:UIMA AS fails with HttpConnector
Hi,if I try to use UIMA AS with ActiveMQ http-connector, which is provided in default configuration, I do get a timeout.Steps to reproduce: Unzip http://www-eu.apache.org/dist/uima/uima-as-2.9.0/uima-as-2.9.0-bin.zip Set InputDirectory in apache-uima-2.9.0/examples/descriptors/collection_reader/FileSystemCollectionReader.xml to correct absolute path Copy attached Batch-File into directory Start it, wait and press 3 times EnterIf I set BROKER_URL to tcp://localhost:61616 in the Batch-Script, the documents are processed successfully.With value http://localhost:8080 I get the following exception.Error on getMeta call to remote service:org.apache.uima.aae.error.UimaASMetaRequestTimeout: UIMA AS Client Timed Out Waiting For GetMeta Reply From a Service On Queue:MeetingDetectorTaeQueue        at org.apache.uima.adapter.jms.client.BaseUIMAAsynchronousEngineCommon_impl.notifyOnTimout(BaseUIMAAsynchronousEngineCommon_impl.java:2350)        at org.apache.uima.adapter.jms.client.ClientServiceDelegate.handleError(ClientServiceDelegate.java:192)        at org.apache.uima.aae.delegate.Delegate$2.run(Delegate.java:839)        at java.util.TimerThread.mainLoop(Timer.java:555)        at java.util.TimerThread.run(Timer.java:505)Terminating Client...org.apache.uima.adapter.jms.client.BaseUIMAAsynchronousEngine_impl.stop() - Stopping UIMA-AS Clientjavax.jms.JMSException: A consumer is consuming from the temporary destination        at org.apache.activemq.ActiveMQConnection.deleteTempDestination(ActiveMQConnection.java:2061)        at org.apache.uima.adapter.jms.client.BaseUIMAAsynchronousEngine_impl.stopConnection(BaseUIMAAsynchronousEngine_impl.java:324)        at org.apache.uima.adapter.jms.client.BaseUIMAAsynchronousEngine_impl.stop(BaseUIMAAsynchronousEngine_impl.java:345)        at org.apache.uima.examples.as.RunRemoteAsyncAE$StatusCallbackListenerImpl.stop(RunRemoteAsyncAE.java:367)        at org.apache.uima.examples.as.RunRemoteAsyncAE$StatusCallbackListenerImpl.initializationComplete(RunRemoteAsyncAE.java:360)        at org.apache.uima.adapter.jms.client.BaseUIMAAsynchronousEngineCommon_impl.notifyListeners(BaseUIMAAsynchronousEngineCommon_impl.java:1220)        at org.apache.uima.adapter.jms.client.BaseUIMAAsynchronousEngineCommon_impl.notifyOnTimout(BaseUIMAAsynchronousEngineCommon_impl.java:2351)        at org.apache.uima.adapter.jms.client.ClientServiceDelegate.handleError(ClientServiceDelegate.java:192)        at org.apache.uima.aae.delegate.Delegate$2.run(Delegate.java:839)        at java.util.TimerThread.mainLoop(Timer.java:555)        at java.util.TimerThread.run(Timer.java:505)
issueID:UIMA-5563
type:Improvement
changed files:uimaj-tools/src/main/java/org/apache/uima/tools/docanalyzer/AnnotationViewerDialog.java
uimaj-tools/src/main/java/org/apache/uima/tools/docanalyzer/AnnotationViewerDialog.java
texts:Improve Annotation Viewer File Section UI
One issue I often have with the annotation viewer is that it is hard to select individual files from large directories. This patch is a simple UI tweak to add a text field for filtering the file names.The patch is here
issueID:UIMA-5564
type:Improvement
changed files:uimaj-core/src/main/java/org/apache/uima/cas/impl/CASImpl.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/XmiCasDeserializer.java
texts:have deserializers reuse 0-length arrays and lists
Observed use cases show CASes containing lots of 0-length arrays or empty lists.  When these are deserialized from an xmi CAS where multi-ref features are not specified (the default), these would be deserialized as individual copies.  Change this to reuse shared values.
issueID:UIMA-5565
type:Improvement
changed files:uimaj-core/src/main/java/org/apache/uima/flow/FlowController_ImplBase.java
texts:uv3: Adding getLogger() method in flow controllers
How about adding a getLogger() method also in CasFlowController_ImplBase / JCasFlowController_ImplBase?
issueID:UIMA-5566
type:Bug
changed files:
texts:uv3 change way 0-length arrays are created, remove new (in v3) APIs for them
I rediscovered that some of the deserialization code (e.g. xmi deserialization) has been deserializing empty lists by reusing a shared instance (for a particular CAS) of an empty list.This seems like Java's sharing of other immutable objects, such as Integer (when you say new Integer(4), it returns you a shared object; likewise, strings like "123" are merged and shared where possible).The 3.0.0-beta had previously introduced a bunch of methods on CAS and JCas to get shared 0-length arrays and lists.  I'm think it would be good to remove all of these, and instead, just change the creation of these to automatically reuse shared (per CAS) instances of these.This has a small (tiny?) potential to "break" existing code, if  code was written that depended on two different instances of, for example, an FSArray of length 0, were required to be !=.A recovery mechanism (workaround) for these probably very rare cases would be to enable the creation of non-equal instances, perhaps via the clone() method.  Even this is probably not really needed, and deserialization would still be reusing shared values.
issueID:UIMA-5568
type:Improvement
changed files:
texts:uv3: Drop ExtendedLogger from uimaFIT
The UIMA logger is now very convenient to use. The ExtendedLogger is no longer required, so drop it.
issueID:UIMA-5569
type:Bug
changed files:
texts:Ruta: setting variables by paramters: only skip invalid
Ruta: setting variables by paramters: only skip invalid. Do not use return in the for loop
issueID:UIMA-557
type:Improvement
changed files:
texts:Cas Editor: Annotator Runner should show log output of the AE

issueID:UIMA-5570
type:Bug
changed files:uimaj-core/src/main/java/org/apache/uima/util/impl/Logger_common_impl.java
texts:uv3 loggers missing arg on 2-object form of substitutable parms
v3 logging adds methods from slf4j + log4j for forms like logger.info(...), logger.warn(...), etc.One of these forms has 2 parameter objects; the 2nd of these was accidentally omitted when passing the call on, in Logger_common_impl
issueID:UIMA-5571
type:Bug
changed files:uimaj-core/src/main/java/org/apache/uima/util/impl/Log4jLogger_impl.java
texts:uv3 log4j bridge not handling multi-substitutable args vs throwable correctly
The log4j (v2) API has calls which allow both a message (with substitutable parts) and arguments to substitute.It also has calls which allow passing a throwable.The calls that support passing a throwable do not support substituable parts.  The bridge code assumed that it did.  This resulted in an array of args being treated as one substitutable value. Change the bridge code to call one of two different log4j methods, depending on whether or not a throwable is being included.
issueID:UIMA-5572
type:Improvement
changed files:uimaj-core/src/main/java/org/apache/uima/cas/impl/FSIteratorImplBase.java
texts:uv3 make default method for getComparator() in FSIteratorImplBase
Peter mentioned a backwards compatibility issue - caused by the need for classes extending FSIteratorImplBase to implement a new method getComparator.  Implement this as a default method to eliminate this backwards compatibility issue
issueID:UIMA-5573
type:Improvement
changed files:uimaj-document-annotation/src/main/java/org/apache/uima/jcas/tcas/DocumentAnnotation.java
uimaj-core/src/main/java/org/apache/uima/UIMA_IllegalStateException.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FSClassRegistry.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/TypeSystemImpl.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/BinaryCasSerDes.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/TypeSystemImpl.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/AnnotationBase.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/FSArrayList.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/FSHashSet.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/IntegerArrayList.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/NonEmptyFSList.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/NonEmptyFloatList.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/NonEmptyIntegerList.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/NonEmptyStringList.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/Sofa.java
uimaj-core/src/main/java/org/apache/uima/jcas/tcas/Annotation.java
uimaj-core/src/main/java/org/apache/uima/jcas/tcas/Annotation.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FSClassRegistry.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/TypeSystemImpl.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FeatureStructureImplC.java
uimaj-tools/src/main/java/org/apache/uima/tools/jcasgen/JCasTypeTemplate.java
uimaj-tools/src/main/java/org/apache/uima/tools/jcasgen/Jg.java
uimaj-tools/src/main/javajet/jcasgen/templates/JCasType.javajet
uimaj-v3migration-jcas/src/main/java/org/apache/uima/migratev3/jcas/MigrateJCas.java
uimaj-core/src/main/java/org/apache/uima/UIMARuntimeException.java
uimaj-core/src/main/java/org/apache/uima/UIMA_IllegalArgumentException.java
uimaj-core/src/main/java/org/apache/uima/UIMA_IllegalStateException.java
uimaj-core/src/main/java/org/apache/uima/UIMA_UnsupportedOperationException.java
uimaj-core/src/main/java/org/apache/uima/cas/CASRuntimeException.java
uimaj-core/src/main/java/org/apache/uima/cas/admin/CASAdminException.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/LowLevelException.java
texts:uv3 change JCas feature slot initialization to be more lazy
The current implementation of JCas classes requires that a type system associated with a JCas class be committed before the JCas class is loaded.  This causes some existing code to fail, because they're causing a JCas class to be loaded before the type system is committed (see UIMA-5554).  The reason for this design in v3 was to enable the computation of the offsets for accessing features in feature structures to be done once and saved in static final int values, for efficiency. Find a new approach, which is as efficient, but is more lazy - allowing JCas classes to be loaded, and later a corresponding type system commit to be run.
issueID:UIMA-5574
type:Bug
changed files:uimaj-core/src/main/java/org/apache/uima/UIMARuntimeException.java
uimaj-core/src/main/java/org/apache/uima/UIMA_IllegalArgumentException.java
uimaj-core/src/main/java/org/apache/uima/UIMA_IllegalStateException.java
uimaj-core/src/main/java/org/apache/uima/UIMA_UnsupportedOperationException.java
uimaj-core/src/main/java/org/apache/uima/cas/CASRuntimeException.java
uimaj-core/src/main/java/org/apache/uima/cas/admin/CASAdminException.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/LowLevelException.java
texts:uv3 UIMA Exceptions constructors calling wrong super
Finish incomplete refactoring of UIMA exception classes.  Problems include the class UIMA_IllegalStateException having a constructor with a resource-bundle, but the superclass not supporting this.  Other issues: throwables are getting lost due to wrong argument ordering for the superclass
issueID:UIMA-5575
type:Bug
changed files:uimaj-v3migration-jcas/src/main/java/org/apache/uima/migratev3/jcas/MigrateJCas.java
texts:uv3 migration tool missing insert of _featName_xxx and _typeName
JCas class in v3 have additional static final string fields, intended for use in @annotations.  The migration tool is missing the generation of these; add them.
issueID:UIMA-5576
type:Bug
changed files:uimaj-tools/src/main/java/org/apache/uima/tools/jcasgen/Jg.java
texts:Use setExtensionClassPath only when classpath is not empty
Use setExtensionClassPath only when classpath is not empty - otherwise use setExtensionClassLoader. This avoids the warning about adding an empty classpath.
issueID:UIMA-5577
type:Bug
changed files:uimaj-core/src/main/java/org/apache/uima/internal/util/Misc.java
texts:uv3: Adjust new-style logging statements not to use parameter positions
Per UIMA-5556 new-style logging statements can not make use of parameter positions anymore. However, there are several new-style logging statements in the code that still make use of the parameter positions. Fix these.
issueID:UIMA-5578
type:Bug
changed files:uimaj-v3migration-jcas/src/main/java/org/apache/uima/migratev3/jcas/MigrateJCas.java
uimaj-tools/src/main/java/org/apache/uima/tools/jcasgen/JCasTypeTemplate.java
uimaj-tools/src/main/javajet/jcasgen/templates/JCasType.javajet
texts:uv3 jcasgen plugin integration test errors
The changes to do lazy initialization of JCas classes are causing compile errors in the JCasGen integration test.  Check for missing imports, java version, etc.  If missing imports, also check that the migration utility adds the needed ones.
issueID:UIMA-5579
type:Bug
changed files:uimaj-core/src/main/java/org/apache/uima/internal/util/Misc.java
uimaj-core/src/main/java/org/apache/uima/util/impl/JSR47Logger_impl.java
uimaj-core/src/main/java/org/apache/uima/util/impl/Logger_impl.java
uimaj-core/src/main/java/org/apache/uima/util/impl/Slf4jLogger_impl.java
texts:uv3 slf4j bridge new style broken
The slf4j support for "new" style logging - accidentally treating these in old style.  This is causing the downstream build of uimaFIT to fail
issueID:UIMA-558
type:Bug
changed files:
texts:Cas Editor: Annotator Runner sets editor dirty but also writes the file to disc
The Annotator Runner should only set the editor dirty but not write the file to disc.
issueID:UIMA-5584
type:Improvement
changed files:uimaj-core/src/main/java/org/apache/uima/cas/CAS.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/CASImpl.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/XmiCasDeserializer.java
uimaj-core/src/main/java/org/apache/uima/jcas/JCas.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/CommonList.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/FSList.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/FloatList.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/IntegerList.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/NonEmptyFSList.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/NonEmptyFloatList.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/NonEmptyIntegerList.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/NonEmptyStringList.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/StringList.java
uimaj-core/src/main/java/org/apache/uima/jcas/impl/JCasImpl.java
texts:uv3 shorten api names for getting 0-length arrays/lists
There are new APIs to get shared (per CAS) instances of empty lists and arrays of various types.These APIs are called getEmpty/xxxx/List|Array  where xxxx can be blank or a type name part. (e.g. getEmptyFloatList).  These APIs are found in the CAS, the JCas, and on the various JCas classes for the type kinds (e.g., FloatList has a getEmptyList())Improve things by shortening these APIs uniformly by dropping the "get".  This will also align the style with how Java does this in its Collections class for empty instances.
issueID:UIMA-5585
type:Bug
changed files:
texts:Ruta: allow ResourceManager extension classloader for loading ruta extensions
Ruta: allow ResourceManager extension classloader for loading ruta extensions
issueID:UIMA-5586
type:Bug
changed files:uimaj-core/src/main/java/org/apache/uima/cas/impl/BinaryCasSerDes.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/BinaryCasSerDes4.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/BinaryCasSerDes6.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/BuiltinTypeKinds.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/CASImpl.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FSClassRegistry.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/TypeSystemImpl.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/XCASDeserializer.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/XmiCasDeserializer.java
uimaj-core/src/main/java/org/apache/uima/internal/util/Misc.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/Sofa.java
texts:uv3: DocumentAnnotation subclasses not handled as in UIMAv2 during deserialization
Consider the case that you have custom subclass of the uima `DocumentAnnotation`, let's call it `DocumentMetaData`. Next, we have an XMI file which contains an annotation of the `DocumentMetaData` type.When loading such an XMI file in UIMAv2, the CAS ends up with a single `DocumentMetaData` annotation which is accessible via `cas.getDocumentAnnotation()`.When loading the same file with UIMAv3, the CAS ends up with both, a `DocumentAnnotation` and a `DocumentMetaData` annotation and `cas.getDocumentAnnotation()` returns the former.The same appears to happen when deserializing a CAS from various binary formats.
issueID:UIMA-5587
type:Bug
changed files:
texts:DUCC Process Manager (PM) takes OOM on Apache DUCC demo
Apache DUCC demo has PM that runs with reduced memory -Xmx200MOn at least 2 occasions PM has taken OOM.  Core dumps have resulted that indicate that PM is flooded with multiple OR publications that is supposed to be handled by "BlastGuard"?Investigate what storage is being used for and if multiple OR messages are being processed in parallel.  Perhaps Camel should be configured to process OR message sequentially if it isn't already.
issueID:UIMA-5588
type:Bug
changed files:uimaj-core/src/main/java/org/apache/uima/cas/impl/BinaryCasSerDes.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/BinaryCasSerDes4.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/BinaryCasSerDes6.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/CASImpl.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/CasSeqAddrMaps.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/XCASDeserializer.java
texts:uv3: NPE during deserialization under certain circumstances
This was previously thought to be covered by UIMA-5586 - however, the problem remains after the order of the deserialization had been fixed in UIMA-5586.When deserializing some binary CAS formats, there is a NPE in certain cases. Here is an example that might serve for reproduction:    @Test    public void test6LenientPlainUima() throws Exception    {        CAS source = JCasFactory.createJCas().getCas();        CAS target = JCasFactory.createJCas().getCas();        new DocumentMetaData(source.getJCas(), 0, 0).addToIndexes();        @SuppressWarnings("resource")        ByteArrayOutputStream bos = new ByteArrayOutputStream();        CasIOUtils.save(source, bos, COMPRESSED_FILTERED);        bos.close();                CasIOUtils.load(new ByteArrayInputStream(bos.toByteArray()), target);    }Mind this is a minimal code for reproduction. The same happens when deserializing within the context of an initialized AnalysisEngine.The NPE only seems to be thrown when the `DocumentMetaData` is added via JCas:java.lang.NullPointerException at org.apache.uima.cas.impl.CASImpl.getView(CASImpl.java:2224) at org.apache.uima.cas.impl.BinaryCasSerDes6.deserializeAfterVersion(BinaryCasSerDes6.java:1892) at org.apache.uima.cas.impl.BinaryCasSerDes.reinit(BinaryCasSerDes.java:595) at org.apache.uima.util.CasIOUtils.load(CasIOUtils.java:382) at org.apache.uima.util.CasIOUtils.load(CasIOUtils.java:313) at org.apache.uima.util.CasIOUtils.load(CasIOUtils.java:237)        ...I have set up a similar test using only the plain CAS API which seems to work fine:    @Test    public void test6LenientPlainUima2() throws Exception    {        TypeSystemDescription tsd = new TypeSystemDescription_impl();        TypeDescription td = tsd.addType("DocumentMetaData", "", CAS.TYPE_NAME_DOCUMENT_ANNOTATION);        td.addFeature("feat", "", CAS.TYPE_NAME_STRING);                CAS source = CasCreationUtils.createCas(tsd, null, null, null);        CAS target = CasCreationUtils.createCas(tsd, null, null, null);        AnnotationFS dmd = source                .createAnnotation(source.getTypeSystem().getType("DocumentMetaData"), 0, 0);        source.addFsToIndexes(dmd);        assertEquals("DocumentMetaData", source.getDocumentAnnotation().getType().getName());        @SuppressWarnings("resource")        ByteArrayOutputStream bos = new ByteArrayOutputStream();        CasIOUtils.save(source, bos, COMPRESSED_FILTERED);        bos.close();                CasIOUtils.load(new ByteArrayInputStream(bos.toByteArray()), target);    }
issueID:UIMA-559
type:Improvement
changed files:
texts:Cas Editor: Add a facility to choose the type of a new annotation in the AnnotationEditor

issueID:UIMA-5591
type:Bug
changed files:
texts:DUCC Apache demo Process Manager (PM) takes OOM with Xmx = 200M
Apache DUCC demo runs with reduced Xmx memory specification for its daemons.  Recently, PM has been taking OOM when running with its 200M heap.  Increasing to 300M seems to have fixed things.
issueID:UIMA-5592
type:Bug
changed files:
texts:UIMA-DUCC: agent uses wrong test to decide if it should connect to child process via JMX
Agent does not start GC collector for POPs (Plain Old Process) types. This is an invalid test. Instead, the agent should check if a child process sent its JMX connect string. If available the agent should attempt connection no matter the type of process.
issueID:UIMA-5593
type:Bug
changed files:uimaj-core/src/main/java/org/apache/uima/cas/impl/BinaryCasSerDes.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/BinaryCasSerDes4.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/BinaryCasSerDes6.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/CASImpl.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/CasSeqAddrMaps.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/XCASDeserializer.java
texts:uv3 deserialize compressed form 4 sofas not being indexed correctly
Traced a strange bug to the deserialization for form 4 compressed - getting a NPE.  Root cause is the index info being deserialized is written with a conversion that changes the "address" of FSs to incrementing indexes (because they compress better).  But the serialization code doesn't do this for Sofas.  Mostly this doesn't matter by accident.  But the special test case done in DocumentAnnotation test trips this bug.Fix is in deserialization: after reading the sofa index number (which was written as v2 addresses, not converted to sequential) is to convert it to sequential so the rest of the code (which expects this) works.  In v2, not an issue, but an improvement was made in v3 which broke this.
issueID:UIMA-5595
type:Bug
changed files:uimaj-core/src/main/java/org/apache/uima/cas/impl/FeatureStructureImplC.java
uimaj-core/src/main/java/org/apache/uima/internal/util/Misc.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FeatureStructureImplC.java
texts:uv3 toString for FeatureStructures seems not quite right
uv3's impl of FeatureStructure toString was returning (in most cases) identical values as UV2, but somewhere along the line, it started calling every FS as if it had circular refs, even when it didn't.  Fix this, and see about getting the format to be identical (in most cases) to v2, for better backwards compatibility.
issueID:UIMA-5596
type:Improvement
changed files:
texts:Eclipse plugin categories not properly versioned
The category information gets turned into an "installable unit" with a version 1.0.0 plus some long alphanumeric string.  It should have the same version as the features.  This will make subsequent "slicing" operations more convenient.
issueID:UIMA-5598
type:Bug
changed files:uimaj-core/src/main/java/org/apache/uima/cas/impl/BinaryCasSerDes.java
texts:uv3 set classloader for reinit call when doing type system commit
Type Systems may be changed as part of deserializing.  When this happens, insure that the calls to type system commit gets the jcas class loader for the CAS being deserialized into, passed as an argument.
issueID:UIMA-5599
type:Improvement
changed files:
texts:DUCC JD node allocation and watching improvements
1. Services only DUCC, meaning no JD allocation - done2. DUCC Watcher warning - done    a) No JD allocation  - done    b) Insufficient JD allocation3. Give example of cron job for DUCC Watcher in doc - done4. Allow mailhost to be specified on command line - done
issueID:UIMA-5600
type:Bug
changed files:uimaj-core/src/main/java/org/apache/uima/cas/impl/CASImpl.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/XCASDeserializer.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/XmiCasDeserializer.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/Sofa.java
texts:uv3 some deserializers using generic setFeature to set Sofa features
In some edge cases, deserializers may be using generic setFeatureValue calls to set sofa features and getting error messages like Can't use standard set methodswith SofaFS features.  One such case is in XMI deserialization XmiCasDeserializerHandler.finalizeRefValue XmiCasDeserializer.java:1835
issueID:UIMA-5601
type:Bug
changed files:uimaj-core/src/main/java/org/apache/uima/util/CasCopier.java
texts:uv3: CasCopier problems with custom subclasses of DocumentAnnotation
It seems as if there may be a bug in the way that CasCopier handles the documen annotation. Specifically, it seems as if the CasCopier incorrectly handles the case where the target CAS already contains a document annotation. In my case, I do: create the target CAS add a document annotation (DocumentMetaData extends DocumentAnnotation) to the target CAS create the CasCopier with the source and target CAS copy several FSes but not the document annotationExpected: target CAS contains 1 DocumentMetaData annotationActual target CAS contains 2 DocumentMetaData annotationAlso, it seems that `isDocumentAnnotation` may not able to handle it if a CAS uses a custom subclass of DocumentAnnotation:  private <T extends FeatureStructure> boolean isDocumentAnnotation(T aFS) {    if (((TOP)aFS)._getTypeCode() != TypeSystemConstants.docTypeCode) {      return false;    }    if (srcCasDocumentAnnotation == null) {      srcCasDocumentAnnotation = srcCasViewImpl.getDocumentAnnotationNoCreate();     }    return aFS == srcCasDocumentAnnotation;  }
issueID:UIMA-5602
type:Improvement
changed files:
texts:DUCC Web Server (WS) Job Details page Workitem tab Start Time column
Add the subject column.
issueID:UIMA-5603
type:Improvement
changed files:uimaj-core/src/main/java/org/apache/uima/cas/impl/FSIndexRepositoryImpl.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FSIndexRepositoryImpl.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FeatureStructureImplC.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/XCASDeserializer.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/XmiCasDeserializer.java
uimaj-examples/src/main/java/org/apache/uima/examples/flow/WhiteboardFlowController2.java
uimaj-core/src/main/java/org/apache/uima/cas/CAS.java
uimaj-core/src/main/java/org/apache/uima/cas/FSIndexRepository.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/AllFSs.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/BinaryCasSerDes.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/BinaryCasSerDes6.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/CasSerializerSupport.java
unused-saved/src/org/apache/uima/jcas/impl/CASMetadata.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FSIndexRepositoryImpl.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FsIndex_iicp.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FsIndex_singletype.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/XCASSerializer.java
uimaj-core/src/main/java/org/apache/uima/internal/util/CopyOnWriteObjHashSet.java
uimaj-core/src/main/java/org/apache/uima/internal/util/CopyOnWriteOrderedFsSet_array.java
uimaj-core/src/main/java/org/apache/uima/jcas/JCas.java
uimaj-core/src/main/java/org/apache/uima/util/CasCopier.java
uimaj-core/src/main/java/org/apache/uima/cas/FSIterator.java
texts:uv3 add ability to do extended-for on all FSs of a type in a view
Forms like cas.getIndexRepository().getAllIndexedFSs(...) return an iterator.  It would be nice to be able to use the returned result in an extended for :   for (TOP x : cas.getInd... etc).  Add a new set of methods, getIndexedFSs( Type or JCas.class or nothing) to CAS/JCas and FSIndexRepository interfaces, that return Collections, without copying the index arrays, but just using them.  Make these copy-on-write style, so subsequent updates to the UIMA indexes won't affect the collection.  These can then be used in extended-for loops.Update internal uses of getAllIndexedFS (which does copy the indexes) to use the new style.
issueID:UIMA-5604
type:Improvement
changed files:
texts:DUCC Web Server (WS) Job Details page Processes tab in json format
Create a ducc-mon servlet that returns the Job Details page Processes tab data in json format.URI format is http://ducc-host:42133/ducc-servlet/json-format-job-processes?id=NNNN, where NNNN is the Job number.
issueID:UIMA-5605
type:Bug
changed files:
texts:DUCC scheduler ArrayIndexOutOfBoundsException
The scheduler stops scheduling and ducc-mon indicates inresposive ResourceManager.rm.log (Trace):05 Okt 2017 11:29:13,336 TRACE RM.NodepoolScheduler- N/A detectFragmentation  Freed shares 246 on machine xxx.xxx.xx05 Okt 2017 11:29:13,336 TRACE RM.NodepoolScheduler- N/A detectFragmentation  Update v before: NP[ -default- ] vkt 2017 11:29:13,336 FATAL RM.ResourceManagerComponent- N/A runScheduler java.lang.ArrayIndexOutOfBoundsExceptionAn ArrayIndexOutOfBoundsException can occur in the NodepoolScheduler class at line 2422:vmach_j&#91;free&#93;++;  Quickfix: comment it out. It seems only be used for logging (trace).
issueID:UIMA-5606
type:Bug
changed files:
texts:DUCC ResourceManager crashed with ArrayIndexOutOfBounds
05 Oct 2017 09:51:13,701 FATAL RM.ResourceManagerComponent- N/A runScheduler java.lang.ArrayIndexOutOfBoundsException at org.apache.uima.ducc.rm.scheduler.NodepoolScheduler.detectFragmentation(NodepoolScheduler.java:2422) at org.apache.uima.ducc.rm.scheduler.NodepoolScheduler.insureFullEviction(NodepoolScheduler.java:2509) at org.apache.uima.ducc.rm.scheduler.NodepoolScheduler.schedule(NodepoolScheduler.java:2678) at org.apache.uima.ducc.rm.scheduler.Scheduler.schedule(Scheduler.java:1072) at org.apache.uima.ducc.rm.ResourceManagerComponent.runScheduler(ResourceManagerComponent.java:304) at org.apache.uima.ducc.rm.ResourceManagerComponent.run(ResourceManagerComponent.java:279) at java.lang.Thread.run(Thread.java:809)NodepoolScheduler 2422:     vmach_j&#91;free&#93;++;                     // This is the largest potential share that can be made on this machine,This code appears to be only used to produce trace level messages
issueID:UIMA-5607
type:Bug
changed files:uimaj-core/src/main/java/org/apache/uima/cas/impl/FSClassRegistry.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/TypeSystemImpl.java
texts:Exception when using JCas after accessing type property of a JCas class
The scenario described in UIMA-5554 still causes problems.java.lang.ArrayIndexOutOfBoundsException: -1 at org.apache.uima.cas.impl.FeatureStructureImplC._setRefValueCommon(FeatureStructureImplC.java:1609) at org.apache.uima.jcas.cas.AnnotationBase.<init>(AnnotationBase.java:96) at org.apache.uima.jcas.tcas.Annotation.<init>(Annotation.java:78) at org.apache.uima.fit.type.Token.<init>(Token.java:83) at org.apache.uima.fit.XReaderTest$XReader.getNext(XReaderTest.java:67) at org.apache.uima.fit.pipeline.JCasIterator.next(JCasIterator.java:140) at org.apache.uima.fit.pipeline.JCasIterator.next(JCasIterator.java:1) at org.apache.uima.fit.XReaderTest.wwwReaderTest(XReaderTest.java:47) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:498) at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) at org.junit.runners.ParentRunner.run(ParentRunner.java:363) at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:86) at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38) at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:459) at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:678) at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:382) at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:192)
issueID:UIMA-5608
type:Bug
changed files:
texts:UIMA-DUCC: reduce Process Manager publication size
The PM publication to Agents includes a Classpath in each Process Object bloating the publication. The PM code fetches a CP from the OR and updates its data structures before publication. The PM should not call the OR anymore. Instead, an agent should retrieve a CP for each Process before launching it.
issueID:UIMA-5609
type:Improvement
changed files:uimaj-core/src/main/java/org/apache/uima/internal/util/Misc.java
uimaj-core/src/main/java/org/apache/uima/resource/impl/ResourceManager_impl.java
uimaj-v3migration-jcas/src/main/java/org/apache/uima/migratev3/jcas/MigrateJCas.java
uimaj-core/src/main/java/org/apache/uima/resource/ResourceManager.java
uimaj-core/src/main/java/org/apache/uima/resource/impl/ResourceManager_impl.java
uimaj-tools/src/main/java/org/apache/uima/tools/jcasgen/Jg.java
uimaj-tools/src/main/java/org/apache/uima/tools/jcasgen/Jg.java
uimaj-core/src/main/java/org/apache/uima/resource/ResourceManager.java
uimaj-core/src/main/java/org/apache/uima/resource/impl/ResourceManager_impl.java
texts:uv3 change ResourceManager setExtensionClassLoader to not wrap loader
Change the impl of ResourceManager setExtensionClassLoader, to take a UIMA Class Loader instance - to allow sharing of these among resource managers.
issueID:UIMA-561
type:Bug
changed files:
texts:Cas Editor: Junit Plugin tests cannot be run
Its not possible to start the junit plugin tests from eclipse.
issueID:UIMA-5610
type:Documentation
changed files:
texts:DUCC Web Server (WS) document requirement for JDK vs. JRE for JSP compilation
Update DUCC documentation to specify that a JDK is required so that WS can compile JSPs.  JRE won't work.
issueID:UIMA-5611
type:Bug
changed files:
texts:UIMA-DUCC: Agent fails to kill a child process sometimes
Improve detection of child processes which fail to stop after kill -9 was sent. If kill -9 is sent by an agent while a child process is experiencing an OOM, the signal is not acted upon and the process remains running.An agent should retry kill -9 on regular basis (configured in ducc.properties) if a process is still standing after kill -9.
issueID:UIMA-5612
type:Improvement
changed files:
texts:update the uima-wide shared superPOM
Things to update:1) version of it's parent2) version of many plugins.  e.g. the maven release plugin3) The Eclipse update site building - to support code-signingPlease add your candidates
issueID:UIMA-5616
type:Improvement
changed files:
texts:DUCC (CLI) ducc_status command should get host and port from ducc.properties
ducc_status should use ducc.head and ducc.ws.port from ducc.properties if target is not specified.  Currently it uses hard-coded values "localhost" and "42133" respectively.
issueID:UIMA-5618
type:Improvement
changed files:
texts:DUCC Resource Manager (RM) should restrict JobDriver allocation to user "ducc"
The JD node allocation should be restricted to "ducc".   This can be done by RM's ResourceClass upon examination of the specifications in ducc.properties for ducc.jd.host.class and ducc.jd.host.user.
issueID:UIMA-5619
type:Bug
changed files:uimaj-core/src/main/java/org/apache/uima/cas/FSIterator.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FsIndex_iicp.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FsIndex_singletype.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FsIndex_snapshot.java
texts:uv3 consider converting Iterable to Collection
As part of the integration with Java 8, consider switching classes that implement Iterable, to Collection.  This requires that the item implement size().  If done, then stream and spliterator are included in the class.  Example: JCas xxxArray, xxxList
issueID:UIMA-562
type:Improvement
changed files:
texts:Cas Editor: Add an import wizard for txt files

issueID:UIMA-5620
type:Bug
changed files:uimaj-core/src/main/java/org/apache/uima/cas/CAS.java
uimaj-core/src/main/java/org/apache/uima/cas/ArrayFS.java
uimaj-core/src/main/java/org/apache/uima/cas/BooleanArrayFS.java
uimaj-core/src/main/java/org/apache/uima/cas/ByteArrayFS.java
uimaj-core/src/main/java/org/apache/uima/cas/CommonArrayFS.java
uimaj-core/src/main/java/org/apache/uima/cas/DoubleArrayFS.java
uimaj-core/src/main/java/org/apache/uima/cas/FSIndex.java
uimaj-core/src/main/java/org/apache/uima/cas/FloatArrayFS.java
uimaj-core/src/main/java/org/apache/uima/cas/IntArrayFS.java
uimaj-core/src/main/java/org/apache/uima/cas/LongArrayFS.java
uimaj-core/src/main/java/org/apache/uima/cas/ShortArrayFS.java
uimaj-core/src/main/java/org/apache/uima/cas/StringArrayFS.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/ArrayFSImpl.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/BooleanArray.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/ByteArray.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/CommonList.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/CommonPrimitiveArray.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/DoubleArray.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/EmptyFSList.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/FSArray.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/FSHashSet.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/FSList.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/FloatArray.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/FloatList.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/IntegerArray.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/IntegerArrayList.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/IntegerList.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/LongArray.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/NonEmptyFSList.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/NonEmptyIntegerList.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/ShortArray.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/StringArray.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/StringList.java
texts:uv3 add generics for FSList, FSArray
add generic typing capability to FSArray and FSList, minimizing backwards compatibility issues where feasible, to achieve better integration with Java 8 iterators / streams
issueID:UIMA-5621
type:Bug
changed files:uimaj-core/src/main/java/org/apache/uima/cas/impl/CASImpl.java
texts:uv3 extend support for create empty arrays for typed FSArrays
It is possible to deserialize a 0 length specialization of an FSArray; but the emptyArray(Typecode) doesn't support this.  Fix to support.
issueID:UIMA-5622
type:Improvement
changed files:
texts:UIMA-DUCC: reduce Agent logging
Reduce the verbosity of agent logging. Logs wrap too fast.
issueID:UIMA-5623
type:Bug
changed files:
texts:DUCC Web Server (WS) Job Details page Processes tab log file size always 0.0?
See Summary.
issueID:UIMA-5624
type:Bug
changed files:
texts:uv3 update the version numbers of included JARs in the uimaj-examples classpath
The uimaj-examples project has a classpath file used to create the .classpath for the examples Eclipse project in the binary distribution.  This classpath file has out-of-date version numbers for 3 jars needed to run the v3 migration tool.  Update the version numbers so they match the distribution, or better yet, fix this so they're always automatically kept in sync.The classpath file is also missing the slf4j api jar, and the slf4j connection to the java unit logger jar.  Without these, no logging is possible - and running something like the Document Analyzer tool gives warnings about this.
issueID:UIMA-5625
type:Improvement
changed files:uimaj-examples/src/main/java/org/apache/uima/examples/PrintAnnotations.java
uimaj-examples/src/main/java/org/apache/uima/examples/SofaExampleApplication.java
uimaj-examples/src/main/java/org/apache/uima/tutorial/ex1/RoomNumberAnnotator.java
uimaj-examples/src/main/java/org/apache/uima/tutorial/ex2/RoomNumberAnnotator.java
uimaj-examples/src/main/java/org/apache/uima/tutorial/ex4/MeetingAnnotator.java
uimaj-examples/src/main/java/org/apache/uima/tutorial/ex5/RoomNumberAnnotator.java
uimaj-examples/src/main/java/org/apache/uima/examples/cas/PersonTitleAnnotator.java
texts:uv3 update Examples project to use UV3 idioms
UV3 has many simplified idioms for accessing things in the CAS, integrating with Java 8, etc.  Upgrade the examples in the uimaj-examples project to make use of these.
issueID:UIMA-5626
type:Improvement
changed files:
texts:uv3 upgrade docs: overview/setup and getting started guide
The "Overview and Setup" document contains a section on   changes from previous major versions. Would be nice to have   such a section for UIMA 3. There is also a section for   "the migration utility" (from IBM UIMA to Apache UIMA).   This could be updated with info about the new utility  for v2 to v3 migration.
issueID:UIMA-5627
type:Bug
changed files:
texts:uv3 examples project fails to launch v3 migrate tool
The v3-migration tool launcher in the examples project in the binary distribution is incorrectly copied from the version in the v3-migration project.  It is assuming a maven project, while the example project in the binary distribution is a plain eclipse project, so the classpath is set up incorrectly.  Fix and test on both windows and linux.
issueID:UIMA-5628
type:Bug
changed files:
texts:wrong path for javadocs in examples project
The examples project has a eclipse "classpath" file used to create the examples eclipse project. It has entries specifying the path to the javadocs.  These paths are missing the /d/ part of the path, so the javadocs don't work when you import the examples project into Eclipse.
issueID:UIMA-5629
type:Improvement
changed files:
texts:add uimaj-json to examples project classpath
The examples project's prototype classpath file misses the uimaj-json jar
issueID:UIMA-563
type:Improvement
changed files:
texts:Cas Editor: Add cas compare support

issueID:UIMA-5630
type:Improvement
changed files:uima-docbook-references/src/docbook/ref.javadocs.xml
texts:uv3 documentation - update 4 older books to reflect better uv3
Make a pass through the 4 "books" of docs for UIMA sdk, and update to use new v3 idioms, etc.
issueID:UIMA-5631
type:Improvement
changed files:
texts:uv3 jcas interface missing the emptyXXXlist methods
I noticed that the jcas interface in uv3 was missing the emptyFloatList, emptyStringList, etc. methods that are part of the cas interface.  Add these.
issueID:UIMA-5632
type:Improvement
changed files:uimaj-core/src/main/java/org/apache/uima/cas/impl/LowLevelIndex.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/SelectFSs_impl.java
uimaj-core/src/main/java/org/apache/uima/cas/ArrayFS.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/FSArrayList.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/IntegerArrayList.java
uimaj-core/src/main/java/org/apache/uima/cas/ArrayFS.java
uimaj-core/src/main/java/org/apache/uima/cas/CAS.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/FSArray.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/FSArrayList.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/IntegerArrayList.java
uimaj-core/src/main/java/org/apache/uima/cas/ArrayFS.java
uimaj-core/src/main/java/org/apache/uima/cas/CAS.java
uimaj-core/src/main/java/org/apache/uima/cas/FSIndex.java
uimaj-core/src/main/java/org/apache/uima/cas/SelectFSs.java
uimaj-core/src/main/java/org/apache/uima/jcas/JCas.java
texts:uv3 javadocs missing on some cas/jcas/fsindex APIs for select
add missing javadocs for methods like select in the various APIs.
issueID:UIMA-5633
type:Improvement
changed files:uimaj-core/src/main/java/org/apache/uima/cas/impl/LowLevelIndex.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/SelectFSs_impl.java
uimaj-core/src/main/java/org/apache/uima/cas/ArrayFS.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/FSArrayList.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/IntegerArrayList.java
uimaj-core/src/main/java/org/apache/uima/cas/ArrayFS.java
uimaj-core/src/main/java/org/apache/uima/cas/CAS.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/FSArray.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/FSArrayList.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/IntegerArrayList.java
uimaj-core/src/main/java/org/apache/uima/cas/ArrayFS.java
uimaj-core/src/main/java/org/apache/uima/cas/CAS.java
uimaj-core/src/main/java/org/apache/uima/cas/FSIndex.java
uimaj-core/src/main/java/org/apache/uima/cas/SelectFSs.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/FSArray.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/FSArrayList.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/FSList.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/NonEmptyFSList.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/SelectViaCopyToArray.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/LowLevelIndex.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/CasSerializerSupport.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/SelectFSs_impl.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/CASImpl.java
uimaj-core/src/main/java/org/apache/uima/jcas/JCas.java
texts:uv3 generic spec poor for select api in some Interfaces
For situations where an interface is generically typed (e.g. FSIndex<T>), the generic spec for methods like select should have a param like <N extends T>, not <N extends FeatureStructure>.  This allows better automation for types while using these forms in user code.  Do a review of the generic specs and update where needed.
issueID:UIMA-5634
type:Improvement
changed files:
texts:DUCC Orchestrator (OR) populate DB with Job and Managed Reservation specifications
Presently, Job and Managed Reservation specifications are kept in "user" space, that is in the file system in the user's log directory.  The Command Line Interface (CLI) should no longer write these specifications to the file system, but rather when submitted to the Orchestrator (OR) they should be persisted in the DB for later retrieval.  This accomplishes 2 desirable outcomes: 1. The specification persists after the user purges his/her log directory2. The specification is available to the Web Server (ducc-mon) when there is no shared file system
issueID:UIMA-5635
type:Bug
changed files:
texts:uv3 select on index impl forgets index in some cases
The impl to get a select over an index, starting with an index, and then specifying other parameters like type, ignores the index.
issueID:UIMA-5636
type:Improvement
changed files:
texts:UIMA-DUCC: restrict JMX access when running with older java
Older java contain JMX related security vulnerability as described by CVE-2016-3427. DUCC processes run with JMX enabled by default and the java vulnerability can be exploited. The main fix is to run with a newer java. These are the versions of java that contain the fix:   IBM - 1.7.0.9.40, 1.7.1.3_40, 1.8.0.3.0   Oracle (Sun) - 1.7.0_101+, 1.8.0_91+   Java 9 (Oracle & IBM)Ducc code should introspect java version at runtime and lock down JMX when running with a version that is known to have the vulnerability. External JMX access should not be allowed.
issueID:UIMA-5637
type:Bug
changed files:
texts:JCasUtil.selectAt has different meaning than expected
I was wondering what exactly the semantics of JCasUtil.selectAt is supposed to be after looking into the implementation, since the JavaDoc isn’t very precise. I initially thought that it would select annotations of the given type with the exact begin and end, but this is not the case when inspecting the implementation. The problem is in CasUtil.selectAt with the following while loop:while (it.isValid()) {  AnnotationFS a = it.get();  // If the offsets do not match the specified offets, we're done  if (a.getBegin() != aBegin && a.getEnd() != aEnd) {    break;  }  it.moveToNext();  list.add(a);}I would have expected that either begin or end must be different to drop the item, i.e. "if (a.getBegin() != aBegin || a.getEnd() != aEnd)" instead. This is obviously not the case, and it does not have the same behaviour like selectCovered either, so what is the intend if it’s not a bug?
issueID:UIMA-5639
type:Bug
changed files:
texts:UIMA-DUCC: Agent rogue process detector not working
Even though a user id is added to the user exclusion filter the agent keeps marking this processes as rogue.Identified the following user to be excluded:ducc.agent.rogue.process.user.exclusion.filter =xxxxxxxxxxxxxxBut it continues to be labeled as alien:01 Nov 2017 17:17:12,644  INFO Agent.NodeAgent - J&#91;N/A &#93; T&#91;60&#93; RogueProcessReaper.submitRogueProcessForKill  Ducc Not Configured to Kill Rogue Proces (PID:)876 Owner:xxxxxxxxxx+. Change (or define) ducc.agent.rogue.process.reaper.script property in ducc.properties if you want rogue processes to be cleaned up.Looks like a bug with long user names. Agent seems to truncate id's when quering the OS for user processes.
issueID:UIMA-564
type:Improvement
changed files:
texts:Cas Editor: Add a "Find and Annotate" dialog to the AnnotationEditor

issueID:UIMA-5640
type:Improvement
changed files:
texts:UIMA-DUCC: JP/Service wrapper should not sleep when Work Item is not available
Currently when JD/Protocol Handler runs out of work it returns null back in response to GET. In this case, the service wrapper sleeps for a fixed amount of time and tries again. The sleeping should be done in the client (JD/Protocol Handler) to reduce latency. Instead of waiting for a fixed amount of time, the client code can use notification/interrupt to wake up a sleeping GET thread when a new work items becomes available. The service wrapper will block in http get request until a reply comes or the get request times out. On timeout, the service will immediately call the client (JD/Protocol Handler).
issueID:UIMA-5641
type:Bug
changed files:
texts:Errors in custom containers cause class not found
HttpWorkerThread gets class not found for getLastSerializedError as it is protected in DuccAbstractProcessContainer
issueID:UIMA-5642
type:Improvement
changed files:uimaj-v3migration-jcas/src/main/java/org/apache/uima/migratev3/jcas/MigrateJCas.java
texts:uv3 migration tool should add comment about the conversion
The current v3 migration tool should add a comment for each converted class, similar to what JCasGen does, documenting the running of the tool.
issueID:UIMA-5643
type:Bug
changed files:
texts:UIMA-AS: Fix  javadoc 1.8 errors and warnings
When compiling with java 8, the build with -Papache-release fails due to javadoc problems like this:&#91;ERROR&#93; /users1/cwiklik/releases/builds/uima-as/2.10.2/uimaj-as-core/src/main/java/org/apache/uima/aae/UimaSerializer.java:175: warning: no @param for binarySource
issueID:UIMA-5644
type:Improvement
changed files:
texts:Upgrade to UIMA 2.10.2
Upgrade to UIMA 2.10.2
issueID:UIMA-5645
type:Improvement
changed files:
texts:Add FSUtil.isMultiValuedFeature signature that works without a feature structure
Add FSUtil.isMultiValuedFeature signature that works only with access to the type system, i.e. without the need to have actual annotations in the CAS.
issueID:UIMA-5646
type:Improvement
changed files:
texts:DUCC Web Server (WS) does not use cluetip javascript ==> it should be removed.
See Summary.
issueID:UIMA-5647
type:Bug
changed files:
texts:%CPU always reports 0 for managed reservations
%CPU reporting works for service and job processes, but not managed reservations.To reproduce the problem, create a bash script, say eatcpu.sh:#!/bin/bashwhile true; do for f in $(seq 1 100000); do echo 555 > /dev/null; done; done;and then run it viaducc:$DUCC_HOME/bin/viaducc eatcpu.shThe duccmon reservation details page always shows %CPU=0, but top shows something just under 100%
issueID:UIMA-5648
type:Bug
changed files:
texts:DUCC Common code should not use components WS or OR directly for logging
Common code that directly specifies WS or OR as component for logging is in error.
issueID:UIMA-5649
type:Bug
changed files:
texts:The new ducc.uid property may cause migration problems as the default of "ducc" will be used
With UIMA-5405 the new ducc.uid property is added by ducc_post_install but the migration script doesn't add it, and the default of "ducc" may be wrong.  Instead we can assume the ducc.uid is the userid that installed ducc
issueID:UIMA-565
type:Improvement
changed files:
texts:Cas Editor: Improve startup process
Startup should be like its done for ecipse ide application, with workspace locking and prompt for the workspace.
issueID:UIMA-5650
type:Improvement
changed files:uimaj-core/src/main/java/org/apache/uima/jcas/cas/FSHashSet.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/FSLinkedHashSet.java
texts:uv3 add FSLinkedHashSet
Many users of HashSet find they need to switch to a LinkedHashSet in order to have a predictable iteration order, for reproducability.  Add this style.
issueID:UIMA-5651
type:Bug
changed files:
texts:DUCC Web Server (WS) alerts too soon with RED banner

issueID:UIMA-5652
type:Improvement
changed files:uimaj-core/src/main/java/org/apache/uima/analysis_engine/impl/AnalysisEngineImplBase.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/AnalysisEngine.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/impl/AnalysisEngineImplBase.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/impl/PrimitiveAnalysisEngine_impl.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/impl/UimacppAnalysisEngineImpl.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/CASImpl.java
uimaj-core/src/main/java/org/apache/uima/impl/UimaContext_ImplBase.java
texts:uv3 update/impl logging mdc/ndc
Replace NDC with MDC, implement suitable context info, update docs.Context maintained:  1) id of pipeline being run (an incr int + suitable string if one can be found, from root context)  2) id of CAS (an incr int, and/or the CAS UniqueId)  3) annotator being run (within a pipeline) - both Java Class & the path in the context to itInsure values are not held onto to prevent GC problems.
issueID:UIMA-5655
type:Improvement
changed files:uimaj-json/src/main/java/org/apache/uima/json/impl/JsonContentHandlerJacksonWrapper.java
texts:uv3 migrate to current versions of slf4j and log4j and other dependencies
move to log4j 2.10.0move to slf4j 1.7.25move to jackson-core 2.9.2
issueID:UIMA-5658
type:Bug
changed files:
texts:2 uimaj eclipse plugins being dropped from update site when using recent bundle plugin version
For a while, we've had to run the "bundle" step for the uimaj-ep-jcasgenp and uimaj-ep-configurator eclipse plugins using maven-bundle-plugin version 2.3.7, which is an old release of the bundle plugin.  If run with more current versions, no errors are reported, and the build works OK, but the subsequent build of the eclipse-update-site drops these two plugins when running the features-and-bundles-publishing step.  The workaround was to use the older version of the maven-bundle-plugin.By trial and error, found the fix for this was changing the <Import-package clause to keep the line having just "*" as the last line.  This involved reordering the lines following this up before this.
issueID:UIMA-5659
type:Bug
changed files:
texts:UIMA-DUCC: Agent JMX connection retry not working
When an agent looses a JMX connection to a remote service it does not try to recover it. Instead just reports 0's for GC values.The problem is that it checks connection for null and only if true the reconnect happens. In the failing scenario, the connection is established and works for awhile than the connection fails due to a long GC in the service. The connection object is stale (not null) at this point and reconnect does not happen.When a JMX failure occurs set the connection object to null forcing a subsequent reconnect. When the JMX fails to fetch GC info the GC collection should set GC values to -1. This info will be sent to Duccmon where the failure can be visualized. Perhaps changing color of GC value to red could alert a user.
issueID:UIMA-566
type:Improvement
changed files:
texts:Cas Editor: Add a dialog to choose the workspace

issueID:UIMA-5660
type:Improvement
changed files:uimaj-core/src/main/java/org/apache/uima/cas/impl/FSClassRegistry.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FSClassRegistry.java
texts:uv3 JCas loading superclass test too strong
When JCas Classes are checked for conformity to UIMA Type Systems, a check is made that the super types match; if they don't, and error is thrown.There are cases when JCas classes could be changed to have a different super class inserted, which would be allowable.  Accommodate this by changing the action when this happens to be just a warning.
issueID:UIMA-5661
type:Bug
changed files:
texts:uv3 Ref doc: add all -D settings
-D settings for some v3 things are missing from the v2 chapter having the table of these.  Example -Duima.v2_pretty_print_format Scan code and add all missing ones.
issueID:UIMA-5662
type:Improvement
changed files:uimaj-core/src/main/java/org/apache/uima/cas/impl/BinaryCasSerDes6.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/CASImpl.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/XCASDeserializer.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/CASImpl.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/CASImpl.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/LowLevelCAS.java
uimaj-core/src/main/java/org/apache/uima/jcas/impl/JCasHashMap.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/AllFSs.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/CASImpl.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/Id2FS.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/LowLevelCAS.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/BooleanArray.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/ByteArray.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/DoubleArray.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/FSArray.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/FloatArray.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/IntegerArray.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/LongArray.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/ShortArray.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/StringArray.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/TOP.java
uimaj-core/src/main/java/org/apache/uima/jcas/impl/JCasHashMap.java
uimaj-core/src/main/java/org/apache/uima/jcas/impl/JCasHashMapSubMap.java
uimaj-core/src/main/java/org/apache/uima/util/IteratorNvc.java
texts:uv3 support CAS deserialization subsequent low level access
Some users depend 1) constant v2-ids for FSs preserved in deserialization and serialization, and 2) low level cas API access to these.V3 normally doesn't maintain tables linking ids to FSs, as these prevent GC of unreachable FSs. Based on a mode, set by -Duima.default_v2_id_references, and also controllable per CAS instance, support the use of id's in the same way V2 did, with better support for more serialization/deserializations. Feature Structures when created are added to the internal id-to-FeatureStructure map, enabling the LowLevelCAS apis to work. IDs are assigned so that mimic what they would be in V2 Serialization is altered to include unreachable Feature Structures for those serialization forms where this is the v2 worked.  Forms like Xmi, XCAS, and compressed binary serialization form 6 only serialized reachable featrue structures in v2, and for backwards compatibility, this is continued. 
issueID:UIMA-5663
type:Bug
changed files:
texts:Ruta: possible NPE for lazy feature access on null annotation variable
Ruta: possible NPE for lazy feature access on null annotation variable
issueID:UIMA-5664
type:Improvement
changed files:uimaj-core/src/main/java/org/apache/uima/jcas/cas/Int2FS.java
texts:uv3 add semibuiltin map from int -> fs
Some applications find it so convenient to have a map from ints to FSs, that they use the low level CAS APIs, and the fs's v2 "address" for this.  In v3, use of the low level APIs in this manner disables garbage collection, as there is no way to clear the map.Support an alternative way to have int -> FS maps, under user control of what exactly gets added to them, supporting removes, and clearing under application control, by implementing a new semi-built-in type
issueID:UIMA-5665
type:Bug
changed files:
texts:UIMA-AS: fix JMS listener recovery after broker restart
There is a race when trying to recover lost JMS connection which sometimes prevents the service from recovering correctly. When JMS listeners loose connection to a broker, they are entering retry mode where connection attempt is made. When one listener gets a valid Session, other listener's Sessions become invalid which triggers another connection retry invaliding Session of another JMS Consumer. This continues in a loop. Make sure only one listener is doing the recovery. Other threads block until the first one recovers and test the connection and if OK will refresh Session using a new connection.
issueID:UIMA-5666
type:Bug
changed files:
texts:uv3 previous call in list style iterators not quite right
Java has a ListIterator interface, which defines previous() and next() such that repeated operations of next(), previous(), ... return the same item.  This means that the next impl returns the current item and then advances the position, while the previous impl decrements the position (first) and then returns that item.  v3 added impl of ListIterator to fsIterator, but implemented this backwards for previous.  Change this to comply with the definition in listIterator.  Also, change other list-iterator like things. that have the same issue.  This change should not cause backwards compatibility issues, because v2 didn't implement ListIterator interface for FsIterators.
issueID:UIMA-5667
type:Bug
changed files:
texts:Potential Integer Overflow
Our tool DeepTect has detected several potential integer overflow bugs:Path: uima-ducc/uima-ducc-pm/src/main/java/org/apache/uima/ducc/pm/ProcessManagerComponent.javaprivate long normalizeMemory(String processMemoryAssignment, MemoryUnits units) {   //  Get user defined memory assignment for the JP     long normalizedProcessMemoryRequirements =             Long.parseLong(processMemoryAssignment);     // Normalize memory requirements for JPs into Gigs      if ( units.equals(MemoryUnits.KB ) ) {       normalizedProcessMemoryRequirements = (int)normalizedProcessMemoryRequirements/(1024*1024);     } else if ( units.equals(MemoryUnits.MB ) ) {       normalizedProcessMemoryRequirements = (int)normalizedProcessMemoryRequirements/1024;     } else if ( units.equals(MemoryUnits.GB ) ) {       //  already normalized     } else if ( units.equals(MemoryUnits.TB ) ) {       normalizedProcessMemoryRequirements = (int)normalizedProcessMemoryRequirements*1024;     }     return normalizedProcessMemoryRequirements; } private int getShares(long normalizedProcessMemoryRequirements ) {     int shares = (int)normalizedProcessMemoryRequirements/shareQuantum;  // get number of shares     if ( (normalizedProcessMemoryRequirements % shareQuantum) > 0 ) shares++; // ciel     return shares; }In the above code snippet, "normalizedProcessMemoryRequirements" is a long variable, if it is super large, directly casting "normalizedProcessMemoryRequirements" into integer (as used in the above code snippet) will definitely lead to a potential integer overflow.
issueID:UIMA-5668
type:Bug
changed files:
texts:DUCC ducc_watcher (CLI) issues multiple up-to-down state changes for agents
If Agent 1 goes down ducc_watcher sends message, as desired.  If now Agent 2 goes down, another message is sent, which is not as desired.Global state is state of all head+agent daemons.  If all are up then global state should be up.  If any one goes down then global state should be down.
issueID:UIMA-567
type:New Feature
changed files:
texts:Support for application specified logging facility
.Applications embedding the UIMA C++ runtine need to be able to route  log messages generated by the C++ framework and by UIMA C++ componenets to logging facilities used by the application. Currently, the UIMA C++ SDK only supports logging to a file and routing log messages to Java if called from a  Java application.  To support this requirement to support custom loggers, the SDK will be extended as follows:1)  define a Logger interface to be implemented by users to wrap the application specific logger.2)  provide APIs in the ResourceManager class to register/unregister Loggers. The ResourceManager will maintain reference to       all the registered loggers.3) modify the LogFacility class to route the log messages to all registered loggers.4) reimplement the current logging to file and java logger to conform to this design.
issueID:UIMA-5670
type:Improvement
changed files:
texts:UIMA-AS upgrade to use UIMA parent pom ver.11
Upgrade uima-as parent pom to use uima parent pom version 11
issueID:UIMA-5671
type:Task
changed files:
texts:Ruta: update parent pom

issueID:UIMA-5673
type:Bug
changed files:
texts:UIMA-AS: fix documentation discussing new targeting feature
Section discussing service targeting is wrong. Talks about how client can use targeting using initialize() method. The has been a wrong idea. Targeting is now done  using new sendCAS() and sendAndReceive() methods.
issueID:UIMA-5674
type:Bug
changed files:uimaj-core/src/main/java/org/apache/uima/util/IntEntry.java
uimaj-core/src/main/java/org/apache/uima/internal/util/Common_hash_support.java
uimaj-core/src/main/java/org/apache/uima/internal/util/Int2ObjHashMap.java
uimaj-core/src/main/java/org/apache/uima/internal/util/IntHashSet.java
uimaj-core/src/main/java/org/apache/uima/internal/util/Obj2IntIdentityHashMap.java
uimaj-core/src/main/java/org/apache/uima/internal/util/ObjHashSet.java
texts:uv3 upgrade multiple hash map impls
The package org.apache.uima.internal.util has several hash maps and sets, all implemented in the same general way.  Consolidate all of the "same" parts of these impls into a superclass, and fix various edge case bugs revealed from the comparisons of the multiple implementations.
issueID:UIMA-5675
type:Improvement
changed files:uimaj-core/src/main/java/org/apache/uima/cas/impl/BinaryCasSerDes.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/BinaryCasSerDes4.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/BinaryCasSerDes6.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/Id2FS.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/XmiCasDeserializer.java
uimaj-core/src/main/java/org/apache/uima/util/CasIOUtils.java
uimaj-core/src/main/java/org/apache/uima/util/XmlCasDeserializer.java
uimaj-core/src/main/java/org/apache/uima/List_of_ints.java
uimaj-core/src/main/java/org/apache/uima/cas/FSIterator.java
uimaj-core/src/main/java/org/apache/uima/internal/util/IntBitSet.java
uimaj-core/src/main/java/org/apache/uima/internal/util/IntListIterator.java
uimaj-core/src/main/java/org/apache/uima/internal/util/IntSet.java
uimaj-core/src/main/java/org/apache/uima/internal/util/IntStack.java
uimaj-core/src/main/java/org/apache/uima/internal/util/IntVector.java
uimaj-core/src/main/java/org/apache/uima/internal/util/PositiveIntSet.java
uimaj-core/src/main/java/org/apache/uima/internal/util/PositiveIntSet_impl.java
uimaj-core/src/main/java/org/apache/uima/internal/util/rb_trees/Int2IntRBT.java
uimaj-core/src/main/java/org/apache/uima/internal/util/rb_trees/IntArrayRBT.java
texts:uv3 upgrade internal listIterator interfaces to support no-checking next, previous
add the nextNvc, previousNvc methods, default the next and previous methods, add the required impls, change the usage of next/prev to nextNvc/previousNvc where appropriate.
issueID:UIMA-5676
type:Bug
changed files:
texts:UIMA-DUCC: modify DuccAbstractProcessContainer to use UIMA  logger
Currently this class just dumps msgs to stdout. This code should be logging with UIMA logger instead.
issueID:UIMA-5677
type:Improvement
changed files:uimaj-core/src/main/java/org/apache/uima/List_of_ints.java
uimaj-core/src/main/java/org/apache/uima/cas/FSIterator.java
uimaj-core/src/main/java/org/apache/uima/internal/util/IntBitSet.java
uimaj-core/src/main/java/org/apache/uima/internal/util/IntListIterator.java
uimaj-core/src/main/java/org/apache/uima/internal/util/IntSet.java
uimaj-core/src/main/java/org/apache/uima/internal/util/IntStack.java
uimaj-core/src/main/java/org/apache/uima/internal/util/IntVector.java
uimaj-core/src/main/java/org/apache/uima/internal/util/PositiveIntSet.java
uimaj-core/src/main/java/org/apache/uima/internal/util/PositiveIntSet_impl.java
uimaj-core/src/main/java/org/apache/uima/internal/util/rb_trees/Int2IntRBT.java
uimaj-core/src/main/java/org/apache/uima/internal/util/rb_trees/IntArrayRBT.java
texts:uv3 internal list iterators - align with definition of previous
The Java definition of previous and next says that next followed by previous followed by next etc. always returns the same value.In our impls, this means that  next returns the currently pointed-to object, then advances, and previous first goes backwards, and then returns that objectSome of our internal implementations implement previous by returning the currently pointed-to object and then goes backwards. Fix the implementations and uses (if any) (including the hasPrevious) to do this following the same conventions as Java.
issueID:UIMA-5678
type:Bug
changed files:
texts:When the SM starts a service process its environment has USER=ducc
The environment of a service process should have USER set to the owner of the service.  Perhaps the expansion of USER to USER=$USER should be done when a service is registered, not when the process is started by the SM
issueID:UIMA-568
type:Improvement
changed files:
texts:Cas Editor: Add an action to clean a document
All feature structures should be removed.
issueID:UIMA-5680
type:Bug
changed files:
texts:Special characters in MARKFAST dictionaries mask entries
It seems that two entries in MARKFAST dictionary simply differing from a special character make MARKFAST ignore some entries :My script is:DECLARE AndOr;Document{->MARKFAST(AndOr, 'dict.txt', true)};My dict.txt containsand/orand orOn the following text : "knowledge of java and/or php and or Groovy is a plus", only the second "and or" (without the slash) is marked. If I remove the "unslashed" entry from the dict.txt file, "and/or" is correctly marked.This also happens with other separators, such as "+", ".", etc. and even if two entries share the same prefix. For example, if you add "and/or php" to dict.txt, it won't be marked.
issueID:UIMA-5681
type:Bug
changed files:
texts:MARKFAST silently ignores non .txt files
If a resource is passed to MARKFAST that does not end in '.txt', MARKFAST silently ignores it.Example:Document{->MARKFAST(Annot, 'non-existent-file.csv')};does nothing, even if the file doesn't exist.
issueID:UIMA-5682
type:Improvement
changed files:
texts:DUCC Orchestrator (OR) system logger should disambiguate Services from Managed Reservations
Specific improvements would be 1. SUBMIT_SERVICE would become MANAGED_RESERVATION for those events2. SUBMIT_SERIVCE events (starting and completed) would add the actual service IDs they are associated with
issueID:UIMA-5683
type:Bug
changed files:uimaj-core/src/main/java/org/apache/uima/cas/impl/CASImpl.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/BooleanArray.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/ByteArray.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/DoubleArray.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/FSArray.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/FloatArray.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/IntegerArray.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/LongArray.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/ShortArray.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/StringArray.java
texts:uv3 space calc for v2 size off by 1 for non-heap-stored arrays
Bug in the calc of v2 space for arrays - mistook the meaning of a method name.  Rename the method, fix callers
issueID:UIMA-5684
type:Bug
changed files:
texts:DUCC Web Server (WS) NPE when request for non-existant job details arrives
Minor bug.
issueID:UIMA-5685
type:Improvement
changed files:
texts:DUCC Web Server (WS) fix poorly named method name in DuccHandlerHttpRequestFilter
refreshListEncryptionException() --> refreshListEncryptionExemption()
issueID:UIMA-5687
type:Improvement
changed files:uimaj-core/src/main/java/org/apache/uima/cas/impl/FsIndex_singletype.java
texts:uv3 index flush: don&#39;t do the copy-on-write
Index flush operations are used in cas reset and in the "removeAll" operations. These operations are so unlikely to need the value having iterators continue to work, that the copy-on-write operations can be skipped.  Needs documentation.
issueID:UIMA-5688
type:Improvement
changed files:
texts:DUCC Orchestrator (OR) system logger should track launching and termination of distributed processes
For problem determination purposes, it would be useful to track launching and termination of distributed processes.  Modify the Agent to report same to OR for recording to system events log.
issueID:UIMA-5689
type:Bug
changed files:uimaj-core/src/main/java/org/apache/uima/cas/impl/CasCompare.java
texts:uv3 CasCompare edge case with type filtering - sort order wrong
When sorting FSs prior to compare, for those FS types which have no corresponding type in the other cas, substitute null when comparing, because the other cas will have null there.
issueID:UIMA-569
type:Bug
changed files:
texts:Cas Editor: The annotation editor view should redraw after the annotation styles are changed

issueID:UIMA-5690
type:Improvement
changed files:
texts:DUCC Orchestrator (OR) system logger should include request submitter, when appropriate
Similar to the submitters console, the system events log should include submitter: <PID>@<HOST>.Also, SM should set environment variable USER when issuing start/stop with configuration in ducc.properties comprising ducc.runmode = Test, for correctness of logging entries.
issueID:UIMA-5691
type:Bug
changed files:uimaj-core/src/main/java/org/apache/uima/cas/impl/XmiCasDeserializer.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/XmiCasDeserializer.java
texts:hex to byte conversion routine wrong for lower case hex
bug in XmiDeserialization code in hex char to byte when converting lower-case hex chars - using wrong lower bound char (should be 'a', but is using '1').  This bug is from 2008.  Since no one has noticed, it's probably true that lower case hex representations are never being used in Xmi byte array serializations.  But this should be fixed anyways.
issueID:UIMA-5692
type:New Feature
changed files:
texts:DUCC Web Server (WS) copyright 2018
See summary.
issueID:UIMA-5693
type:Improvement
changed files:
texts:DUCC Orchestrator (OR) system logger should track Agent BOOT and SHUTDOWN
Orchestrator (OR) system logger should track Agent BOOT and SHUTDOWN.To accomplish this, some small delay (10 seconds) is added to the OR SHUTDOWN request processing to allow the other daemons the opportunity to receive their SHUTDOWN requests and report back to OR for recording in the system events log.When booting all DUCC system daemons the boot order is { broker, database }, { or }, { all others }.  For shutdown the ordering is reversed.
issueID:UIMA-5694
type:Improvement
changed files:
texts:UIMA-AS: Update README to say that user may need to run mvn with -U option
The local m2 repo may get stale and builds may fail with strange errors like this:&#91;ERROR&#93; Failed to execute goal on project uimaj-ep-deployeditor: Could not resolve dependencies for project org.apache.uima:uimaj-ep-deployeditor:jar:2.10.2: Failed to collect dependencies at org.eclipse.pde:org.eclipse.pde.ui:jar:3.9.100 -> org.eclipse.pde:org.eclipse.pde.core:jar:[3.6.0,4.0.0): No versions available for org.eclipse.pde:org.eclipse.pde.core:jar:[3.6.0,4.0.0) within specified range -> &#91;Help 1&#93; Modify README to tell a user to run mvn with -U option when strange errors happen. The default build should not use -U as it forces maven to run a check on each dependency which may take a long time.
issueID:UIMA-5695
type:Bug
changed files:
texts:UIMA-AS: eclipse examples not working due to bad classpath
uima-as examples not working since the classpath has not been updated to use the new AMQ version.
issueID:UIMA-5696
type:Bug
changed files:
texts:UIMA-AS Update year in Copyright (Notice)
The NOTICE file has thisApache UIMA-ASCopyright 2008, 2017 The Apache Software Foundationshould beApache UIMA-ASCopyright 2008, 2018 The Apache Software Foundation
issueID:UIMA-5697
type:Bug
changed files:
texts:UIMA-AS: modify RunRemoteAsyncAE to support service targeting
The RunRemoteAsyncAE should change to support targeting of specific service instance. The code already accepts a command line option for targeting but the UIMA-AS client is not using it If -TargetServiceId is provided, the client should use synchronous sendAndReceive(cas,List<>,serviceTargetId) API instead of asynchronous send().Modifiy comments to include description of TargetServiceId option. Also modify usage text to include targeting option.
issueID:UIMA-5698
type:Improvement
changed files:uimaj-core/src/main/java/org/apache/uima/cas/impl/FSClassRegistry.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/TypeImpl.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/TypeSystemImpl.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FeatureImpl.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FeatureImpl_jcas_only.java
uimaj-core/src/main/java/org/apache/uima/cas/CASRuntimeException.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/CASImpl.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/CommonAuxHeap.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FSClassRegistry.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FeatureStructureImplC.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/TypeImpl.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/TypeSystemImpl.java
texts:uv3 create type systems with JCas features merged in
Some use cases involve setting up (over time) multiple CASs with similar but not identical type systems, differing in the number of features the types have.  The use case for this also has JCas class definitions defining features.  The following currently fails: load type T with no features, load JCas for T with features f1, f2, f3.  This works correctly. Now load type T with features f1, f2, f3, using the same classloader that loaded the JCas for T previously.  This fails because the offsets for f1, f2, f3 in the JCas were computed previously, and cannot be changed (because existing instances of the JCas class for T would stop working).Implement a fix for this that works by having the initial setup of the JCas feature offsets be preceeded by a step which, prior to committing the type system, loads the JCas classes and programmatically adds in to the type system any features defined in the JCas but not in the Type system.Include logging messages showing what's happening.
issueID:UIMA-5699
type:Bug
changed files:
texts:DUCC Web Server (WS) should use Resource Manager (RM) calculated value for machine&#39;s memory available
WS should use RM calculated value for mem avail on Viz page, and mem usable on Machines page.  The present bug causes WS to flip-flop between RM calculated value and Agent reported value.
issueID:UIMA-57
type:Bug
changed files:uimaj-core/src/main/java/org/apache/uima/analysis_engine/impl/UimacppAnalysisEngineImpl.java
uimaj-core/src/main/java/org/apache/uima/impl/CasConsumerFactory_impl.java
uimaj-core/src/main/java/org/apache/uima/uimacpp/UimacppAnalysisComponent.java
texts:UimacppAnalysisEngine should be named UimacppAnalysisComponent
The original name was TafAnalysisComponent, but "Component" accidentally became "Engine" during the renaming of Taf to UimaCpp.
issueID:UIMA-570
type:Bug
changed files:
texts:Cas Editor does not work if there is more than one workbench window

issueID:UIMA-5700
type:Bug
changed files:
texts:DUCC pull-service wrapper should not always kill the process when a work-item fails
Needed for an in-process pull service to prevent it from destroying everything.
issueID:UIMA-5701
type:Bug
changed files:
texts:UIMA-AS: remove debug msgs
There are a bunch of debug msgs being dumped to stdout when running uima-as clientorg.apache.uima.adapter.jms.client.BaseUIMAAsynchronousEngine_impl.stop() - Stopping UIMA-AS ClientBaseMessageSender.doStop() called............................BaseMessageSender.run() - Exiting Dispatch Thread............BaseMessageSender.doStop() added empty message to force stop .........Modify code to log these instead of dumping to stdout
issueID:UIMA-5702
type:Bug
changed files:
texts:UIMA AS: example launch scripts are not working
The UIMA Deploy AS Service.launch script has wrong configuration value for MAPPED_RESOURCE_TYPES.It is <listAttribute key="org.eclipse.debug.core.MAPPED_RESOURCE_TYPES"><listEntry value="1"/>but should be<listAttribute key="org.eclipse.debug.core.MAPPED_RESOURCE_TYPES"><listEntry value="4"/>In addition the following was wrong<stringAttribute key="org.eclipse.jdt.launching.PROJECT_ATTR" value="uimaj-as-activemq"/>It should be<stringAttribute key="org.eclipse.jdt.launching.PROJECT_ATTR" value="uimaj-examples"/>Also it is missing Apache header.
issueID:UIMA-5703
type:Bug
changed files:
texts:UIMA-AS: Fix NPE on service shutdown
Sometimes the service throws NPE when cleaning up while shutting down. The stack trace is a follows:Jan 11, 2018 10:12:29 AM org.apache.uima.aae.controller.PrimitiveAnalysisEngineController_impl terminateINFO: Controller: Meeting Detector TAE Received Terminate EventJan 11, 2018 10:12:29 AM org.apache.uima.adapter.jms.service.UIMA_Service mainWARNING: java.lang.NullPointerException at org.apache.uima.aae.controller.BaseAnalysisEngineController.getInputChannel(BaseAnalysisEngineController.java:2435) at org.apache.uima.aae.controller.BaseAnalysisEngineController.terminate(BaseAnalysisEngineController.java:2168) at org.apache.uima.aae.controller.BaseAnalysisEngineController.terminate(BaseAnalysisEngineController.java:2148) at org.apache.uima.adapter.jms.activemq.SpringContainerDeployer.undeploy(SpringContainerDeployer.java:501) at org.apache.uima.adapter.jms.service.UIMA_Service.main(UIMA_Service.java:464)
issueID:UIMA-5704
type:Bug
changed files:uimaj-core/src/main/java/org/apache/uima/cas/CASRuntimeException.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/CASImpl.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FSClassRegistry.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/TypeSystemImpl.java
texts:uv3 edge case failures in setting up JCas
After adding the capability to merge from JCas class definitions into existing type systems, some edge cases appeared causing failures or replication in conformance testing and setting up the offsets in JCas classes when loading them with type systems.  Rework to remove redundant checking, and insure offsets are set up in all cases.Use a simplified supertype/superclass validity checker.Remove 2nd map used just for class loader associated with pears (not needed).make type2jcci map only have entries for types having loaded JCas classes (others return null).Insure updateOrValidateAllCallSitesForJCasClass is called for each combo of a type system and class loader, to either set it up, or validate the offsets.fix a bug setting the threadlocal used for a previous (alpha) version of some jcas class impl - in case those jcas classes are hanging around (one is, in a PEAR test case)Skip conformance checking for built-ins.
issueID:UIMA-5705
type:Bug
changed files:
texts:DUCC Web Server (WS) incorrectly formulates pager url for error column links on Jobs page
Missing &pages=<n>.
issueID:UIMA-5706
type:Bug
changed files:uimaj-core/src/main/java/org/apache/uima/cas/impl/FeatureStructureImplC.java
texts:uv3 feature validation for getters setters weaker than v2
Methods like fs.get/set&#91;valueKind&#93;(feature) fail to compare the valueKind with the range of the feature.  Examples:  valueKind = featureValue, the range should be a Feature Structure. valueKind = intValue, the range should be a uima.cas.Integer valueKind = shortValue, the range should be uima.cas.Short These are not value checks, but rather checks between the setter API (which is range specific) and the feature. The setter apis are things like setFeatureValue (needs feature structure range), setShortValue (needs feature whose range is a short, etc.). 
issueID:UIMA-5707
type:Improvement
changed files:uimaj-core/src/main/java/org/apache/uima/cas/impl/CasCompare.java
texts:uv3 cas compare add convert linear lists to arrays for performance
The Cas Compare does complex, time consuming logic when comparing structures that reference others.  One extensive use of this happens with uima lists (the list nodes reference the following one).Add an optional step in the compare that finds all the linear lists, makes equivalent UIMA array objects for them, and removes the list elements from the compare operation.  
issueID:UIMA-5708
type:Improvement
changed files:uimaj-core/src/main/java/org/apache/uima/cas/impl/FSClassRegistry.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FSClassRegistry.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/TypeSystemImpl.java
uimaj-core/src/main/java/org/apache/uima/cas/CASRuntimeException.java
texts:uv3 add better message when alpha02 version of JCas is found
The approach for assigning adjusted offset slots in alpha02 doesn't work in the current release due to redesign.  If JCas classes, generated for alpha02, but not updated for beta or later are being used, they fail, with a poor message.Remove the (now non-working) bit of support code for alpha02 and improve the error message to say the JCas class needs to be rebuilt for the current version of UIMA.
issueID:UIMA-5709
type:Task
changed files:
texts:uv3 eclipse-update site, arrange 3.0.0 version
Design and implement 3.0.0SDK eclipse update site, along these lines: do a new top-level composite site: eclipse-update-site-uv3.  This will contain subsites for versions of plugins dependent on uv3 of uimaj update the build to produce a subsite named uimaj-uv3  (was uimaj-v3-pre-production)
issueID:UIMA-571
type:Improvement
changed files:
texts:Cas Editor: Add drawing layer support for annotation painting
The user should be able to define the drawing layer for the different types of annotations.This issue includes also a background color drawing strategy.
issueID:UIMA-5710
type:Task
changed files:uimaj-core/src/main/java/org/apache/uima/cas/impl/FeatureImpl.java
texts:uv3 bug in creating JCas feature-impl if range is unknown
When merging in features from JCas definitions, sometimes the range is unknown.  In this case null is used, but that cannot be assigned to the rangetypeclass which is an int.  Use the feature structure ref default instead. 
issueID:UIMA-5711
type:Improvement
changed files:
texts:uv3 handle migration from alpha levels of JCas classes more gracefully
Alpha levels of JCas classes call TypeSystemImpl.getAdjustedFeatureOffset(...) as part of the initialization for features.  This approach was changed for beta and later levels, and this API if used throws an exception (saying it's an old alpha level construct). Change this to a) not throw an exception, but just issue a warning, and b) return -1, which, if it really is an old jcas class, at run time, if this feature is referenced, it will cause an exception.This will let people successfully migrate from v3 alpha levels by running for example JCasGen from the Component Description Editor.
issueID:UIMA-5712
type:Improvement
changed files:uimaj-core/src/main/java/org/apache/uima/UIMAFramework.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/CASImpl.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/TypeSystemImpl.java
uimaj-core/src/main/java/org/apache/uima/util/CasCreationUtils.java
uimaj-core/src/main/java/org/apache/uima/util/Logger.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/model/AbstractModelPart.java
texts:uv3 have ComponentDescriptorEditor not load user JCas classes
Richard noticed that the Component Descriptor Editor (CDE) was loading user-defined JCas classes.  This may cause problems while editing, if the edits result in some structural change (super class inheritance for example) which invalidates the "offsets" assigned when JCas classes are loaded.There's no need to load these classes, due to the running of the Component Descriptor Editor, because the only reason they were loaded in the first place was as part of Cas Creation, which  in turn was only done to "validate" the Component Descriptor, not to run it.Add a capability to have the CDE create CASs without loading user-defined JCas classes.
issueID:UIMA-5713
type:Bug
changed files:
texts:uv3 update eclipse project class path for updated jars
Update the eclipse examples project examples classpath file so it corresponds to the upgraded jars for slf4j and jackson core
issueID:UIMA-5715
type:Bug
changed files:uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/MultiPageEditor.java
uimaj-tools/src/main/java/org/apache/uima/tools/jcasgen/Jg.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/MultiPageEditor.java
uimaj-tools/src/main/java/org/apache/uima/tools/jcasgen/Jg.java
texts:uv3 jcasgen from Eclipse plugin, limited, fails on some levels of Eclipse
A user reported on Mars / Linux, running JCasGen with limited from the gui failed to do anything (nothing was generated, no error messages).  Traced this to the eclipse getProject().getLocationURI().getPath() returning a path which started with "/default/".  This is unexpected, what was expected was the full path in the file system. Fix by using getProject().getLocation().toString().
issueID:UIMA-5717
type:Bug
changed files:
texts:Ruta: TRIM action removes annotation if internal indexing is broken
Ruta: TRIM action removes annotation if internal indexing is broken
issueID:UIMA-5718
type:Improvement
changed files:
texts:UIMA-DUCC:make DUCC_UPDATE_PORT optional
Both uima-as services and JPs are coded to report state information and JMX url back to the Agent. When launching a process, an Agent adds an env var where it passes its listener port.When an agent is not launching a process, the port will not be present and DUCC service wrapper code throws an exception:2 Jan 2018 17:54:05,116  INFO JobProcessComponent - T&#91;69&#93; setState  Notifying Agent New State::::Running12 Jan 2018 17:54:05,117 ERROR DUCC.DuccEventDispatcher - J&#91;N/A&#93; T&#91;69&#93; dispatch org.apache.camel.ResolveEndpointFailedException: Failed to resolve endpoint: mina://tcp://localhost:null?sync=false&transferExchange=true due to: hostname can't be nullat org.apache.camel.impl.DefaultCamelContext.getEndpoint(DefaultCamelContext.java:590)at org.apache.camel.impl.DefaultProducerTemplate.resolveMandatoryEndpoint(DefaultProducerTemplate.java:453)at org.apache.camel.impl.DefaultProducerTemplate.asyncRequestBody(DefaultProducerTemplate.java:491)at org.apache.uima.ducc.transport.dispatcher.DuccEventDispatcher.dispatch(DuccEventDispatcher.java:77) Modify code to test for presence of a port and if not available, disable state updates.
issueID:UIMA-5719
type:Bug
changed files:uimaj-core/src/main/java/org/apache/uima/util/impl/JSR47Logger_impl.java
uimaj-core/src/main/java/org/apache/uima/util/impl/Log4jLogger_impl.java
uimaj-core/src/main/java/org/apache/uima/util/impl/Logger_common_impl.java
uimaj-core/src/main/java/org/apache/uima/util/impl/Logger_impl.java
uimaj-core/src/main/java/org/apache/uima/util/impl/Slf4jLogger_impl.java
texts:uv3 logging issues: double replacement and wrong fmt in some cases
Burn discovered in one case that substituting into the message with a value which looked like {name} caused an exception.  Investigation revealed that the message was being substituted into twice.Investigation also revealed some logging paths wrongly substituted using the {} style instead of the {n} style.  Fix both of these on all logger variants.
issueID:UIMA-572
type:Improvement
changed files:uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/ICasDocumentListener.java
uimaj-ep-cas-editor-ide/src/main/java/org/apache/uima/caseditor/ide/DefaultCasDocumentProvider.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/fsview/FeatureStructureBrowserViewPage.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/DocumentUimaImpl.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/outline/TypeGroupedContentProvider.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/AbstractDocument.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/editview/FeatureStructureContentProvider.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/AnnotationDocument.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/outline/ModeSensitiveContentProvider.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/AnnotationEditor.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/ICasDocument.java
uimaj-ep-cas-editor-ide/src/main/java/org/apache/uima/caseditor/ide/NlpProject.java
texts:Cas Editor: Add multi view support
It should be possible to open other views than the initial default view of a CAS in the Cas Editor.
issueID:UIMA-5720
type:Improvement
changed files:
texts:UIMA-DUCC: JP service code dumps to stdout
JP code still has a number System.out.println(). Remove or replace with a logger msgs.
issueID:UIMA-5721
type:Improvement
changed files:uimaj-core/src/main/java/org/apache/uima/internal/util/I18nUtil.java
uimaj-core/src/main/java/org/apache/uima/internal/util/MsgLocalizationClassLoader.java
uimaj-core/src/main/java/org/apache/uima/internal/util/Misc.java
texts:uv3 cache some logging info
Messages which get "bundles" currently look up the bundle resource using Java's mechanisms, and a special class loader.  The Java mechanisms look up the bundles in multiple bundle names - using suffixes for locales.  The special class loader does 3 kinds of searching (if not found in the current class loader):  1) for UIMA Resources, it uses a resource-specific classpath (see UIMA-3692, UIMA-4793 ), and the thread local (if one is present) and then it looks up the call stack and uses any found class loader associated with the call stack frames.  This can be quite expensive.  Update the localizeMessage in I18nUtil to cache the resource bundle (by thread), and avoid this lookup for every message.When a lookup is done, change the order of the special class loader to move the look-up-the-call-stack to follow the other two (using the Resource-specified classloader, using the threadLocal classloader).
issueID:UIMA-5722
type:Improvement
changed files:
texts:UIMA-DUCC: upgrade uima, uima-as, spring, camel, xstream
Upgrade ducc to use latest uima (2.10.2) and uima-as (2.10.2) as well AMQ, Spring, Camel and xstream
issueID:UIMA-5724
type:Bug
changed files:
texts:UIMA-AS: eclipse update site build not working correctly
The UIMA-AS eclipse update site build is not copying 2 artifacts to the plugins folder:org.apache.uima.runtime.fragments.deployeditor_2.10.2.jar.pack.gz org.apache.uima.deployeditor_2.10.2.jar.pack.gz These artifacts are created by the build in eus-work folder but never copied to the plugins folder. Only the signature files for the above are copied.
issueID:UIMA-5725
type:Bug
changed files:
texts:broken classpath and logging for UIMA-AS run configurations
The two run configurations, "UIMA Run Remote Async AE" and "UIMA Deploy AS Service", leave out the uimaj-examples project from the classpath. The logger configuration is missing in the DeployAS configuration.
issueID:UIMA-5726
type:Bug
changed files:
texts:UIMA-DUCC: JD TestSuite fails in checkCas()
After upgrading ducc to use uima 2.10.2, the ducc build fails while running JD junit tests. The reported error is:test_16(org.apache.uima.ducc.container.jd.test.Test1) Time elapsed: 0.326 sec <<< FAILURE!java.lang.AssertionError: cas = '<?xml version="1.0" encoding="UTF-8"?><xmi:XMI xmlns:xmi="http://www.omg.org/XMI" xmlns:examples="http:///org/apache/uima/examples.ecore" xmlns:tcas="http:///uima/tcas.ecore" xmlns:cas="http:///uima/cas.ecore" xmi:version="2.0"><cas:NULL xmi:id="0"/><tcas:DocumentAnnotation xmi:id="8" sofa="1" begin="0" end="1" language="x-unspecified"/><cas:Sofa xmi:id="1" sofaNum="1" sofaID="_InitialView" mimeType="text" sofaString="1"/><cas:View sofa="1" members="8"/></xmi:XMI>' at org.junit.Assert.fail(Assert.java:91) at org.apache.uima.ducc.container.jd.test.TestSuite.checkCas(TestSuite.java:43) at org.apache.uima.ducc.container.jd.test.TestSuite.getMetaCases(TestSuite.java:161) at org.apache.uima.ducc.container.jd.test.TestSuite.getMetaCases(TestSuite.java:174) at org.apache.uima.ducc.container.jd.test.Test1.test_16(Test1.java:71) The TestSuite.checkCas() expects either of these 3 xml preambles:  String prefix2 = "<?xml version=\"1.0\" encoding=\"UTF-8\"?><xmi:XMI xmlns:examples=\"http:///org/apache/uima/examples.ecore\""; String prefix1 = "<?xml version=\"1.0\" encoding=\"UTF-8\"?><xmi:XMI xmlns:tcas=\"http:///uima/tcas.ecore\""; String prefix0 = "<?xml version=\"1.0\" encoding=\"UTF-8\"?><xmi:XMI xmlns:cas=\"http:///uima/cas.ecore\""; It looks like CAS serialization produces a different preamble:<?xml version="1.0" encoding="UTF-8"?><xmi:XMI xmlns:xmi="http://www.omg.org/XMI" xmlns:examples="http:///org/apache/uima/examples.ecore" xmlns:tcas="http:///uima/tcas.ecore" xmlns:cas="http:///uima/cas.ecore" xmi:version="2.0">Not sure about the cause of this. Perhaps the new uima (2.10.2) is serializing differently now. I was able to fix the problem by adding a new prefix (prefix3) to make sure the new xml preamble matches. Perhaps I am fixing the wrong thing here. Why there is this preamble different from before is the question. Looks like code doing the CAS serialization is producing a different xml. 
issueID:UIMA-5727
type:Bug
changed files:
texts:UIMA-DUCC: fix XStream warning msgs
After upgrading xstream to 1.4.10 (bundled with AMQ 5.15.2) msgs are dumped to stdout when running various ducc things:"Security framework of XStream not initialized, XStream is probably vulnerable."Seeing these when running ducc_submit. Also in JD log. The new XStream is configured by default  to run without security but dumps the above every time xml serialization/deserialization is done. All is working fine except for these warning msgs.The simplest way to fix that is to override XStream defaults and to whitelist everything. I actually tried that by changing XStreamUtils and DuccEventHttpDispatcherCl. No more annoying msgs.Perhaps a better (more secure way) is to white list specific classes/packages when serializing/deserializing ducc msgs. This may take time to get it right. We need to list all types which are allowed including java classes. I think we only serialize DUCC classes (event classes) + java primitives + java collections (Map, Lists, etc)
issueID:UIMA-5728
type:Task
changed files:
texts:UIMA-DUCC: prepare for v.2.2.2 release
Review and update README, RELEASE_NOTES, NOTICE, LICENSE
issueID:UIMA-5729
type:Task
changed files:
texts:UIMA-DUCC: prepare for v.2.2.2 release
Review and update README, RELEASE_NOTES, NOTICE, LICENSE
issueID:UIMA-573
type:Task
changed files:
texts:Cas Editor: Update documentation

issueID:UIMA-5730
type:Improvement
changed files:uimaj-core/src/main/java/org/apache/uima/analysis_engine/impl/PearAnalysisEngineWrapper.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/impl/PearAnalysisEngineWrapper.java
texts:Using parameters of PearSpecifier for configuring wrapped analysis engine description
The PearSpecifier provides functionality for setting parameters, which could be used for configuring the wrapped analysis engine description. Matthias Koch wrote:  I want to configure a PEAR dynamically. (I install the pear and want to produce the analysis engine with different parameters than in the xml). Is this possible? Can I use the additionalParameters? I have seen that the PearSpecifier has an instance variable for parameters, but no one is using (calling) it. I want to produce the analysisEngine with: UIMAFramework.produceAnalysisEngine(resourceSpecifer, resourceManager, params); In this specifier there should be one or more pearSpecifiers that should be configured. I have overridden the PearAnalysisEngineWrapper and built a loop that configures the following specifier over the configurationParameterSettings. It takes the parameters from the pear specifiers. line 257-258 // Parse the resource specifier ResourceSpecifier specifier = UIMAFramework.getXMLParser().parseResourceSpecifier(in); ==> added code AnalysisEngineDescription analysisEngineDescription = (AnalysisEngineDescription) specifier; AnalysisEngineMetaData analysisEngineMetaData = analysisEngineDescription.getAnalysisEngineMetaData(); ConfigurationParameterSettings configurationParameterSettings = analysisEngineMetaData.getConfigurationParameterSettings(); for (Parameter parameter : Arrays.asList(pearSpec.getParameters())) Unknown macro: {  configurationParameterSettings.setParameterValue(parameter.getName(), parameter.getValue()); }
issueID:UIMA-5731
type:Task
changed files:
texts:UIMA-DUCC: modify code to use XMLUtils
When parsing xml use common code from XMLUtls provided by UIMA
issueID:UIMA-5732
type:Bug
changed files:
texts:DuccJobService should have a stop method to allow a clean shutdown
stop() should shutdown the Camel routes and cleanup MBeans etc.
issueID:UIMA-5733
type:Bug
changed files:
texts:UIMA-DUCC: service/js wrapper hides errors when calling process()
Code in HttpWorkerThread does not log errors that can occur when calling process(). In a particular case, the code was failing with NoSuchMethodError because older UIMA was being used and the DUCC code was using methods in XMLUtils that exist in UIMA 2.10.2 and newer. The DUCC code was recently fixed to remove use of XMLUtils.  
issueID:UIMA-5734
type:Bug
changed files:
texts:check_ducc & start_ducc problem when Banner is enabled in sshd_config
ducc_util.py does a check with ssh to confirm the name used by the DUCC head node to reach a machine is the same name the machine returns from running hostname. Any pre-authentication text returned when sshd_config enables Banner interferes with this check.ducc_util.py must use -q to suppress this text.
issueID:UIMA-5735
type:Bug
changed files:
texts:DUCC Web Server (WS) logs queries to DB too verbosely
To determine if DB is alive, WS re-uses the DB routine that reads checkpoint data.  This routine correctly logs at the INFO level for the purpose of initial restoration of the checkpoint data, but logs too verbosely for the re-use by WS for DB aliveness test.
issueID:UIMA-5736
type:Improvement
changed files:
texts:Add option to CSVTable to use custom column separator
We need to use a custom separator in the CSV files because the default separator (semicolon) is also used in sentences.There are more people asking for this feature: https://stackoverflow.com/questions/45647512/how-can-i-change-the-seperator-option-in-wordtable-uima-rutaI already changed the Ruta implementation to make this feature available. See attachment for changes and testcases
issueID:UIMA-5737
type:Task
changed files:
texts:Ruta: adapt build tools to new Release Distribution Policy

issueID:UIMA-5739
type:Improvement
changed files:
texts:Update UIMA-wide build pom to reflect change in MD5 policy
Drop the generation of MD5 checksums, per change in Apache release policy 3/2018Superceded by UIMA-5856.  In addition, SHA checksums must be supplied, in sha-256 or sha512 forms
issueID:UIMA-574
type:Bug
changed files:uimaj-core/src/main/java/org/apache/uima/cas/impl/CASImpl.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/CASSerializer.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/Heap.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/XCASSerializer.java
texts:CAS heap size is just increased by the initial heap size and is not doubled until a threshold is reached
Currently the CAS heap size is increased by the initial heap size if new heap space is required. If the initial heap space is very small there is a high performance impact for large documents.
issueID:UIMA-5740
type:Bug
changed files:uimaj-core/src/main/java/org/apache/uima/cas/CASRuntimeException.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FeatureStructureImplC.java
texts:uv3 check missing in get/set feature value
Add missing check in the get/set feature value APIs: validate that the Feature being used has a range of a Feature Structure.  Throw exception if range is a primitive.  Make work like v2.
issueID:UIMA-5741
type:Improvement
changed files:uimaj-core/src/main/java/org/apache/uima/internal/util/UIMAClassLoader.java
texts:protect UIMA Class loader in multi-threaded get resource contexts
I have seen one case where multiple threads were being used where a UIMA Class Loader was being used to load a resource (Type system Descriptor -> type System was resolving an "import by name"), where the getResource returned (only once) a spurious "null" result.This is likely due to some multithreading issue in get Resource.  Add a sync using the same multi-threaded parallel approach used for class loaded, to getResource, to protect against this case.
issueID:UIMA-5742
type:New Feature
changed files:
texts:Reliable DUCC
Reliable DUCC Support for multiple DUCC head nodes, one of which is the active master the others are backups only, with takeover by new master activated by virtual IP address switching though keepalived A switch mechanism that potentially is employed by keepalived to determine the health of the set of Reliable DUCC head nodes in order to make the virtual IP address assignment Autostart capability for head node and agent daemons, whereby administrator intervention to issue start_ducc is unnecessarySee svn branch /uima/uima-ducc/branches/reliable-ducc for development code.  Reliable DUCC document can be found under uima-ducc-duccdocs/target/site/duccbook-pdf/reliable-ducc.pdf after issuing:> mvn clean install -Pbuild-duccdocs 
issueID:UIMA-5743
type:Task
changed files:
texts:UIMA-DUCC: upgrade Jetty
Ducc currently uses Jetty v. 9.2.22. The 9.2.x branch has reach end of life according to the Jetty TeamUpgrade Ducc to a newer version.
issueID:UIMA-5744
type:Bug
changed files:
texts:UIMA-DUCC: Agent truncates user names when collecting node processes
When collecting user processes running on a node, an agent uses a command similar to this:ProcessBuilder pb = new ProcessBuilder("ps", "-Ao", "user,pid,ppid,args,stat", "--no-heading");When the above is run, linux truncates the user name to 10 characters. This effects code in the following classes:CGroupsManager.java, NodeMemInfoCollector.java, NodeUsersCollector.javaModify the command to use: user:32.
issueID:UIMA-5746
type:Bug
changed files:
texts:DUCC jobs that use a JMS service descriptor no longer work
Any JPs after first get:Mar 12, 2018 3:38:19 PM org.apache.uima.adapter.jms.client.BaseUIMAAsynchronousEngine_impl notifyOnInitializationFailureWARNING: Top Level Controller Initialization Exception.javax.jms.InvalidClientIDException: Broker: localhost - Client: ClientListener already connected from tcp://192.168.3.13:46402 
issueID:UIMA-5747
type:Bug
changed files:
texts:UIMA-AS: Fix cause of the javax.jms.InvalidClientIDException in client code
UIMA-AS client code recently introduced naming of JMS client when creating broker connection. The code in question:connection.setClientID("ClientListener");This code was added to help identify uima-as connections during debugging. The problem with the above is that the name is static. The first application succeeds. Any subsequent application launched in a separate process will fail since the JMS spec says that the ClientID must be unique.Fix the code to make ClientID unique.
issueID:UIMA-575
type:Bug
changed files:uimaj-cpe/src/main/java/org/apache/uima/collection/impl/cpm/engine/SequencedQueue.java
texts:CPM Cas reordering broken with multiple threads
The CPM has a feature to re-order CASes in the Cas Consumer queue. This is useful when the CPM has multiple processing pipelines but CASes must be processed in order by Cas Consumers. There is no bug when the CPM is configured in "single threaded" mode.
issueID:UIMA-5750
type:Bug
changed files:
texts:UIMA-AS: fix ClassCastException when delegate specifier is CustomResourceSpecifier
When an async aggregate's delegate descriptor is a Jms Service Descriptor the deployment fails with:Caused by: java.lang.ClassCastException: org.apache.uima.resource.impl.CustomResourceSpecifier_impl incompatible with org.apache.uima.resource.ResourceCreationSpecifier at org.apache.uima.aae.controller.BaseAnalysisEngineController.setupName(BaseAnalysisEngineController.java:968) at org.apache.uima.aae.controller.BaseAnalysisEngineController.getComponentName(BaseAnalysisEngineController.java:1012) at org.apache.uima.aae.controller.BaseAnalysisEngineController.registerServiceWithJMX(BaseAnalysisEngineController.java:860) at org.apache.uima.aae.controller.BaseAnalysisEngineController.initializeVMTransport(BaseAnalysisEngineController.java:635) at org.apache.uima.aae.controller.BaseAnalysisEngineController.initializeVMTransport(BaseAnalysisEngineController.java:625) at org.apache.uima.adapter.jms.activemq.SpringContainerDeployer.initializeTopLevelController(SpringContainerDeployer.java:268) at org.apache.uima.adapter.jms.activemq.SpringContainerDeployer.initializeContainer(SpringContainerDeployer.java:299) at org.apache.uima.adapter.jms.activemq.SpringContainerDeployer.deploy(SpringContainerDeployer.java:434) The code in BaseAnalysisEngineController.setupName() is blindly casting delegate's resource specifier to ResourceCreationSpecifier. If the delegate descriptor happens to be a Jms Service Descriptor the cast fails since the specifier is of type CustomResourceSpecifier.This bug is triggered if an aggregate is async.Besides fixing the bug add a new JUnit test to cover this scenario
issueID:UIMA-5751
type:Task
changed files:
texts:UIMA-AS: Prepare for 2.10.3 release
Update poms, README, RELEASE_NOTES 
issueID:UIMA-5752
type:Bug
changed files:
texts:Problem with matching items in MarkTable with whitespacers visible
The change / fix in UIMA-4556 cause some problems when using a CSV file with whitespaces.When we have a dictionary with whitespaces between words and>> Param PARAM_DICT_REMOVE_WS is TRUE:When WS are visible in the token stream: words with spacers are not recognized (as expected).When WS are NOT visible in the token stream: all items in the dictionary will be recognized all items will also be recognized if you add whitespaces between words. For example: IlikeRUTA, Ilike Ruta, I like Ruta all result in the same match.>> Param PARAM_DICT_REMOVE_WS is FALSE:When WS are visible in the token stream: not all entries in the dictionary will be recognizedWhen WS are NOT visible in the token stream: also not all entries in the dictionary will be recognizedThe problem that this cause is that the default value to ignore whitespaces is always true (hardcoded).private IBooleanExpression ignoreWS = new SimpleBooleanExpression(true);This is not correct because if you want to use whitespaces (if they are important) that won't  work. The matcher should use the same value as set in the PARAM_DICT_REMOVE_WS parameter or the value that is set via setIgnoreWS method.I attached a patch to fix this issue.I'm working on a patch.
issueID:UIMA-5753
type:Improvement
changed files:uimaj-core/src/main/java/org/apache/uima/cas/Feature.java
uimaj-core/src/main/java/org/apache/uima/cas/Type.java
uimaj-core/src/main/java/org/apache/uima/cas/Feature.java
uimaj-core/src/main/java/org/apache/uima/cas/Type.java
texts:Get UIMA compile on Java 11
Since meanwhile Java 10 11  has been released, seems like a good idea to get the build finally running on Java 9 and higher.
issueID:UIMA-5754
type:Improvement
changed files:uimaj-bootstrap/src/main/java/org/apache/uima/bootstrap/UimaBootstrap.java
uimaj-bootstrap/src/main/java/org/apache/uima/bootstrap/UimaBootstrap.java
texts:UimaBootstrap impl depends on URLClassLoader, not available in Java 9+
User tried running UIMA scripts that invoke the UimaBootstrap and found it throws excepction using Java 9, because the implementation presumes the ApplicationClassLoader is an instance of URLClassLoader.  Change the impl to no longer require this.
issueID:UIMA-5755
type:New Feature
changed files:
texts:UIMA-DUCC: Pull service should echo correlation id in ACK and END msgs
Pull service uses a three-way protocol to communicate with its client/driver. It sends GET, followed by the ACK and END. The GET asks the client for a task (CAS), the ACK confirms service receipt of it, and END indicates the task completion.To complete a task, a client may need a correlation Id to locate the task in its database. Modify the protocol handler API to allow for user code to attach the correlation ID and include it in a reply. The pull service should echo this correlation Id in subsequent ACK and END messages. Modify TAS callbacks onTaskSuccess() and onTaskFailure() to include correlation object. Also the getSerializedCAS() method should somehow return the correlation object along with a serialized CAS. 
issueID:UIMA-5756
type:New Feature
changed files:
texts:UIMA-DUCC: Create a new project for the pull service
Currently, Ducc's pull service is made up of classes from common, transport, user, and container projects. Its transport and protocol handler are fixed in the code. No way to plug in alternatives. The service is configured via -D's and env vars. Such approach prevents collocating multiple services in the same JVM. The proposal is to move/refactor transport, protocol handler related classes to a new project uima-ducc-pullservice. Also, move/refactor wrapper code which deploys UIMA aggregate pipelines. The new project will be self contained with no dependency on other Ducc projects/jars. It will have dependency on UIMA, HttpClient, and Jetty.The new code will allow an application to instantiate as many instances of a service as it needs. It will allow to plugin custom ProtocolHandler, ErrorHandler, and ServiceMonitor with default implementation for these provided. 
issueID:UIMA-5757
type:Question
changed files:
texts:Unable to extract features when annotation ends with HTML tag
If there is an annotation that covers the whole sofa string, and the sofa string ends with an HTML tag, it seems like RUTA isn't able to extract the features for that annotation. For instance, lets suppose this document (represented as XMI): // XMI document<?xml version="1.0" encoding="UTF-8"?><xmi:XMI xmlns:xmi="http://www.omg.org/XMI" xmlns:cas="http:///uima/cas.ecore" xmlns:tcas="http:///uima/tcas.ecore" xmlns:types="http:///com/acme/uima/types.ecore" xmi:version="2.0"><cas:NULL xmi:id="0"/><tcas:DocumentAnnotation xmi:id="8" sofa="1" begin="0" end="12" language="es"/><types:MyDocument xmi:id="14" sofa="1" begin="0" end="12" documentId="test_docsize_39d5541c-5e7f-391c-95af-c82ce6306644"/><cas:Sofa xmi:id="1" sofaNum="1" sofaID="_InitialView" mimeType="text" sofaString="ABCDEFGHIJ&lt;p&gt;"/><cas:View sofa="1" members="8 14"/></xmi:XMI>And the following RUTA script:  // RUTA scriptSTRING documentId = "Unknown";com.acme.uima.types.MyDocument{-> GETFEATURE("documentId", documentId)};LOG("Starting to process document: " + documentId);The LOG action will output Unknown. But as soon as the string doesn't end with an HTML tag, it works fine. Any ideas what could be going on?
issueID:UIMA-5758
type:Bug
changed files:
texts:csvSeparator parameter is missing in basicengine.xml template
The basicengine.xml (template in the core package) is missing the csvSeparator parameter. Without this parameter in the engine file the option don't work when configuring an engine with the CONFIGURE action.Because the basicengine.xml file is used as template when generating xml engine descriptors the parameter should be available in this file.Issue has relation to change UIMA-5736 that is added to the 2.6.2ruta version. Patch file attached that will add the missing part in the file.
issueID:UIMA-576
type:Task
changed files:uimaj-core/src/main/java/org/apache/uima/impl/UIMAFramework_impl.java
uimaj-core/src/main/java/org/apache/uima/impl/UIMAFramework_impl.java
texts:Change version number to 2.3-SNAPSHOT
Change version number in the trunk from 2.2-incubating to 2.3-SNAPSHOT.
issueID:UIMA-5761
type:New Feature
changed files:
texts:UIMA-DUCC: reduce logging in TAS protocol handler
Change log level in protocol handler when logging these:"---- Driver handling GET Request - Requestor:"+taskConsumer.toString()"---- Driver handling ACK Request - Requestor:"+taskConsumer.toString()"---- Driver handling END Request - Requestor:"+taskConsumer.toString()The new log level should be FINE instead of INFO.
issueID:UIMA-5762
type:Task
changed files:
texts:website - update for ApacheCon
add apachecon event promotion per http://apache.org/events/README.txt
issueID:UIMA-5763
type:New Feature
changed files:uimaj-core/src/main/java/org/apache/uima/UIMARuntimeException.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/CASImpl.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/CasState.java
uimaj-core/src/main/java/org/apache/uima/resource/impl/CasManager_impl.java
uimaj-core/src/main/java/org/apache/uima/UIMARuntimeException.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/CASImpl.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/CasState.java
uimaj-core/src/main/java/org/apache/uima/resource/impl/CasManager_impl.java
texts:UIMA: need a way to lock a CAS to prevent user from releasing it prematurely
UIMA-AS client supports an async style of sending CASes for processing to a remote service. When using sendCAS( CAS aCas), the code serializes CAS and dispatches it to the remote but keeps the CAS in a cache. When a reply comes, the cached CAS is used to deserialize a response. The contract is that the user code should not call CAS.release(). When a reply finally comes, the CAS is handed over to an application callback and upon return from the callback, the UIMA-AS releases the CAS. Problem: there is nothing to prevent user code to violate the contract. If CAS.release() is called while UIMA-AS client awaits reply (or during reply deserialization), bad things happen. In a specific use case, a NPE was thrown during deserialization and debugging was quite painful.Proposed solution: to protect integrity of a CAS need a way to lock/unlock it. Such facility can be added to CASImpl class. When a user code tries to call release()  when a CAS is locked,  the code should throw an exception (IllegalStateException or similar). WDYT? 
issueID:UIMA-5764
type:Improvement
changed files:
texts:Addons: ConceptMapper improvements
In the addons, improve and release ConceptMapper.   Improvements: allow inputs to be from Jar resources as well as file system files put the needed xml descriptor files in the built Jar, for better packaging as one artifact. fix read and write of compiled dictionary to use buffered I/O (greatly speeds up the load) update the build so this project can be released independently of all the other add-ons   parent pom : switch to uima-wide parent pom 11   use conventional name for Jar (drop uima-an-conceptmapper as name) fix javadocs causing errors with Java 8 javadoc update docs as needed   
issueID:UIMA-5765
type:Task
changed files:
texts:uimaj move to parent-pom 11, remove no-longer-needed things in uimaj parent pom
There's some duplication in the uimaj parent pom and the new uima-wide parent pom, Factor that out.
issueID:UIMA-5767
type:Bug
changed files:
texts:UIMA-AS logs misleading msg when running at FINE level
When running uima-as service with FINE log level the following is logged:2018-04-12 15:59:09,040 FINE AggregateAnalysisEngineController_impl:sendReplyToRemoteClient T&#91;83&#93; Controller: EmrProcessingE2EWithWriter2 Unable to Deliver CAS to Client Destination:temp-queue://ID:bluejws107-55822-1523562929458-1:1:1. Attempt to Send CAS Failed Due To Missing Temp Queue. Dropping CAS: -681e42ab:162bb6d5ca8:-7ffd Code responsible for the above:if (UIMAFramework.getLogger(CLASS_NAME).isLoggable(Level.FINE)) { UIMAFramework.getLogger(CLASS_NAME).logrb( Level.FINE, CLASS_NAME.getName(), "sendReplyToRemoteClient", UIMAEE_Constants.JMS_LOG_RESOURCE_BUNDLE, "UIMAEE_client_dead__FINE", new Object[] \{ getComponentName(), replyEndpoint.getDestination().toString(), casStateEntry.getCasReferenceId()}); }This must be a remnant of an old code that was partially removed some years ago. Remove this dead code.  
issueID:UIMA-5769
type:Improvement
changed files:
texts:Inconsistent method name
The following method is named "toList" that seems like to convert one object to a list, but the method just returns a list of FeatureStructure objects, so that the method name "getList" should be more clear than "toList". /**   * Retrieves a list of {@link FeatureStructure} objects.   *   * @return all selected {@link FeatureStructure} objects   */  public List<FeatureStructure> toList() {    return mFeatureStructures;  }
issueID:UIMA-577
type:Improvement
changed files:
texts:split up the Sandbox documentation build
split up the Sandbox documentation build so that for each sandbox component the documentation can be build standalone.
issueID:UIMA-5770
type:Improvement
changed files:
texts:DUCC user commands to retrieve job specification, service specification & get service status
DUCC should provide command line interface to: retrieve previously submitted job specification determine status of a serviceDUCC should also provide and example of how to run jobs sequentially.
issueID:UIMA-5771
type:Bug
changed files:
texts:Ruta: instance comparison of annotation: feature vs label
IngredientConcept (nv:NumericValue TimeMeasurementDoseFrequency{STARTSWITH(Unit)})<-{     m:Measurement{m.value == nv -> UNMARK(m.unit), UNMARK(m)};     };
issueID:UIMA-5774
type:Bug
changed files:
texts:Ruta: possible NPE delegated PARTOF condition for empty annotation feature as anchoring element
Ruta: possible NPE delegated PARTOF condition for empty annotation feature as anchoring element RutaAnnotationTypeMatcher line 58 should not add null in result
issueID:UIMA-5775
type:Bug
changed files:
texts:Performance problem MARKTABLE when matching case insensitive
Hi,We encounter a performance issue (or maybe infinitive loop) when we use the MARKTABLE action, with case insenstive valuelists.The call in our script is:ADDRETAINTYPE(WS);MARKTABLE(LawName, 1, 'nl_law_names.ignorecase.csv', true, 0, "", 0, "lawIdentifier" = 2);Using the following input fragment will result in a timeout exception after 1 minute.Groenboek COM(2006) 105 definitief een Europese strategie voor duurzame, concurrerende en continu geleverde energie voor Europa {SEC(2006)317}That complete name is a Dutch lawname and also be an entry of the nl_law_names.csv file.When we try to match it and we have the ignoreCase flag to false, it is no problem and fast.. If we toggle that flag to true (case is ignored), the matching is really slow or even hanging in an infinitive loop.I debugged the code and pinpoint me to the TreeWordList class. The recursive method recursiveContains have a potential bug. I think that the problem is when the item have a special character, that it is the same character in upper and lowercase. The recursive method will then look/fork twice on the same tree item.I made a fix that checks if the uppercase character is the same as the lowercase character, and in that case it only do the recursive call once. That solved the (performance) issue but I'm not sure if this is really the main problem and the current fix is the best fix for this.
issueID:UIMA-5777
type:Bug
changed files:
texts:Incorrect feature assignment on MARKTABLE because incorrect record can be used
Feature assignment with MARKTABLE can go wrong. Let assume that we have a CSV table with the following entries:MatchingIDFirst Item1Second Item2SECOND ITEM3and we use the MARKTABLE action so that we match on the first column and assign the second column to a feature of the annotaion.If we do the match case sensitive and we use the following input as document: "SECOND ITEM" the annotation will get "2" as feature value.The MARKTABLE action match correct on "SECOND ITEM". In the next step it tries to set the features. Therefore it call the getRowWhere method on the (csv) table to get the related row in the table.The code in the getRowWhere method always compare the tableValue and lookup value lowercase and that will result in the record with "Second Item" in it. That's incorrect because we need the one with  "SECOND ITEM". I modified the code so that it first start with an exact match. If no matching item is found and we ignore case it will also do a case insensitive check.
issueID:UIMA-5778
type:Improvement
changed files:
texts:DuccWatcher should exit with RC and write status info to console
DuccWatcher should exit with return code as follows:0 = all is well, 1 = warning , 2 = severeStatus information written to the log should be reflected on the console.  
issueID:UIMA-578
type:Bug
changed files:uimaj-core/src/main/java/org/apache/uima/cas/impl/XmiCasDeserializer.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/XmiCasDeserializer.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/XmiCasDeserializer.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/XmiCasDeserializer.java
texts:XmiCasDeserializer "merge" functionality doesn&#39;t support Sofas properly
Eddie found a bug in the XmiCasDeserializerTest unit test that masked this actual bug in the deserializer.  When merging multiple XMI documents into a single CAS, Sofas aren't properly deserialized.
issueID:UIMA-5780
type:Improvement
changed files:
texts:Ruta: Support all SerialFormats in Query View
Right now, only XMI is supported
issueID:UIMA-5783
type:Task
changed files:
texts:Update website for GDPR (disabling potentially problematic features)
At least temporarily disable Google Analytics and remove the embedded Twitter widget.Also update the privacy policy to reflect the change.
issueID:UIMA-5784
type:Bug
changed files:
texts:UIMA-AS: MessageTimeOutException not available to client on init failure
When an aggregate times out waiting for delegate GetMeta response, it does not include MessageTimeoutException as cause in an exception going back to the deployer. Instead is just provides ResourceInitializationException with no real cause. Some clients may need to know this in order to decide whether or not to retry uima-as initialization. In a specific case, a client deploys an aggregate with one of its delegates not yet available. Also fix service log message as it says: org.apache.uima.aae.error.MessageTimeoutException: Delegate Service:NoOp Has Timed Out While Processing CAS:nullIn this case, the timeout was related to GetMeta. The message should clearly state what operation has timed out. 
issueID:UIMA-5785
type:Bug
changed files:
texts:Ruta: short name of parent in DECLARE not resolved
Ruta: short name of parent in DECLARE not resolved
issueID:UIMA-5786
type:Bug
changed files:
texts:DUCC Web Server (WS) Service Deployment tab displays incorrect log file size of 0.00
Correct size log file size is shown on Files and History tabs.
issueID:UIMA-5787
type:Bug
changed files:
texts:DUCC Web Server (WS) should honor service administrator
ducc-mon enable/stop service buttons should honor service administrators.
issueID:UIMA-5789
type:Improvement
changed files:
texts:website - make more explicit the public nature of emails to our public mailing lists
Ongoing discussion shows some users of the email lists are not always aware of the public nature of these communications.  Add something to the website page for the email lists that is more "up-front" in explaining this.
issueID:UIMA-579
type:Bug
changed files:
texts:Maven build failing for Eclipse plugins - apparently including incorrectly Eclipse 3.3 versions
maven build for eclipse plugins is broken - on some machines, it is picking up versions of jars which are the wrong level (Eclipse 3.3).  The POM may be missing some jar specs.
issueID:UIMA-5790
type:Improvement
changed files:
texts:ConceptMapper (addon) use of FileXXStream should do appropriate buffering
Methods in concept mapper like serializeEntries(FileOutputStream output) should be changed to just OutputStream, and should check to see if buffering is being done, and if not, wrap in a BufferedOutputStream (same for input).
issueID:UIMA-5791
type:Bug
changed files:
texts:UIMA-AS: fix client SAXParseException when deserializing metadata
XML parser fails with SAXParseException when trying to deserialize service metadata. The scenario which causes the error is:UIMA-AS client running on windowsService runs on linuxThe client sends getMeta request and receives a response from a service. The client tries to deserialize the meta and gets:Jun 06, 2018 2:25:10 PM org.apache.uima.adapter.jms.client.BaseUIMAAsynchronousEngineCommon_impl$2 onMessageWARNING: org.apache.uima.util.InvalidXMLException: Invalid descriptor at <unknown source>.at org.apache.uima.util.impl.XMLParser_impl.parse(XMLParser_impl.java:219)at org.apache.uima.util.impl.XMLParser_impl.parseResourceMetaData(XMLParser_impl.java:438)at org.apache.uima.util.impl.XMLParser_impl.parseResourceMetaData(XMLParser_impl.java:420)at org.apache.uima.adapter.jms.client.BaseUIMAAsynchronousEngineCommon_impl.handleMetadataReply(BaseUIMAAsynchronousEngineCommon_impl.java:1178)at org.apache.uima.adapter.jms.client.BaseUIMAAsynchronousEngineCommon_impl$2.run(BaseUIMAAsynchronousEngineCommon_impl.java:2065)at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1160)at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)at java.lang.Thread.run(Thread.java:811)Caused by: org.xml.sax.SAXParseException: Invalid byte 1 of 1-byte UTF-8 sequence.at org.apache.xerces.parsers.AbstractSAXParser.parse(Unknown Source)at org.apache.xerces.jaxp.SAXParserImpl$JAXPSAXParser.parse(Unknown Source)at org.apache.uima.util.impl.XMLParser_impl.parse(XMLParser_impl.java:202)... 7 more A workaround for the above was to set: -D"file.encoding-UTF-8" on the client.Review the code and provided a fix. Perhaps XML InputSource has a way to set encoding. The default should be UTF-8. Seems like we need a new uima-as a new property (or command line arg) to override the default in case a user needs different encoding. 
issueID:UIMA-5792
type:Improvement
changed files:
texts:Drop legacy module from uimaFIT v3
The legacy support in uimaFIT was to be compatible with the pre-Apache uimaFIT versions which were based on UIMAv2. Since uimaFIT v3 is not compatible with UIMAv2 anyway, we can now drop the legacy support.
issueID:UIMA-5793
type:Improvement
changed files:
texts:FSUtil.getFeature fails when called with Object.class on multi-valued features
When FSUtil.getFeature(fs, feature, type) is called on a feature that is multi-valued and type is Object, then the method fails with a message likeUnable to coerce value of feature [de.tudarmstadt.ukp.inception.api.kb.type.Fact:object] with type [de.tudarmstadt.ukp.inception.api.kb.type.FactObjectLink[]] into [java.lang.Object]This is because Object is no an array or collection type. However, FSUtil.getFeatures should handle this as a special case. When the Object is used, basically any return value is acceptable. FSUtil should have defined behavior here, e.g. returning either an array or a list representation of the multi-value.This is what current work-around code looks like:    private Object getValue(FeatureStructure fs, AnnotationFeature aFeature)    {        Object value;                Feature f = fs.getType().getFeatureByBaseName(aFeature.getName());        if (f.getRange().isPrimitive()) {            value = FSUtil.getFeature(fs, aFeature.getName(), Object.class);        }        else if (FSUtil.isMultiValuedFeature(fs, f)) {            value = FSUtil.getFeature(fs, aFeature.getName(), List.class);        }        else {            value = FSUtil.getFeature(fs, aFeature.getName(), FeatureStructure.class);        }                return value;    }
issueID:UIMA-5794
type:Bug
changed files:
texts:DUCC: Agent fails to stop processes
Agent does not stop running processes sometimes. In a specific case, the agent left a few processes running even though these processes state was set to Stopping.&#91;Process Type=Pop DUCC ID=348 PID=17099 State=Stopping Resident Memory=361656320 GC Total=-1 GC Time=-1 Init Stats List Size:0 Reason: JPHasNoActiveJob&#93; Exit Code=0 &#91;Process Type=Pop DUCC ID=364 PID=593 State=Stopping Resident Memory=7382974464 GC Total=-1 GC Time=-1 Init Stats List Size:0 Reason: JPHasNoActiveJob&#93; Exit Code=0For some reason Agent failed to send SIGKILL after SIGTERM failed to stop them. Since these processes used a lot of memory, the OS killer ended up killing legit processes to keep the node from running out of memory.Since agent logs wrapped the evidence of what happened has been lost.Modify agent to keep sending SIGKILL to processes in Stopping state after some time lapses. Perhaps rogue process detector can be tasked with that. 
issueID:UIMA-5795
type:Improvement
changed files:
texts:UIMA processor plugin for the DUCC pull service should not always equire a serialized CAS
The process method should accept a serialized task as well as a serialized CAS holding the task, since incremental ingestion does not use CASes for all work.
issueID:UIMA-5796
type:Bug
changed files:
texts:DUCC Web Server (WS) Service Processes tab displays wrong value for "Time Min"
 Service Processes tab displays wrong value for "Time Min".  In fact, the wrong value displayed is actually "Time Max".
issueID:UIMA-5797
type:Bug
changed files:uimaj-core/src/main/java/org/apache/uima/resource/ResourceManager.java
uimaj-core/src/main/java/org/apache/uima/resource/impl/ResourceManager_impl.java
uimaj-core/src/main/java/org/apache/uima/resource/ResourceManager.java
uimaj-core/src/main/java/org/apache/uima/resource/impl/ResourceManager_impl.java
texts:ResourceManager doesn&#39;t close its UIMAClassLoader
the class org.apache.uima.resource.impl.ResourceManager_impl create its own UIMAClassLoader in many methods setExtensionClassPath*(). The method destroy() must be responsible for calling UIMAClassLoader#close() inherited from URLCLassLoader.It is not the case.Warning some UIMAClassLoader are shared between many ResourceManager_impl because of ResourceManager_impl#copy()The inconvenient is that the opened resources like jar file stay locked.
issueID:UIMA-5798
type:Bug
changed files:
texts:The verification of a PEAR let the files locked
The method org.apache.uima.pear.tools.InstallationTester#doTest() create many new ResourceManager and the method must call ResourceManager#destroy() that is not the case.Moreover every class responsible for creating a new ResourceManager must be responsible for destroying it in an appropriate way. 
issueID:UIMA-5799
type:Bug
changed files:
texts:PEAR installation locks files permanently
Calling the method PackageInstaller#installPackage() with verify=true cause the locking of the jars files of the PEAR package.The only way to unlock the files is to stop the application. 
issueID:UIMA-58
type:Bug
changed files:
texts:Resources directory missing from examples project

issueID:UIMA-580
type:New Feature
changed files:
texts:Make the CDE plugin extensible
Make the CDE plugin extensible by adding Eclipse-ExtensibleAPI: true to the manifest.  This will allow others to extend this plugin with eclipse plugin fragments.
issueID:UIMA-5800
type:Bug
changed files:
texts:DUCC Web Server (WS) does not honor db.access permissions when changed?
user is trying to use ducc-mon to view another user's data which is stored in DB.  File db.access owning user's permissions were rw - -.  When changed to rw r r, the alien user still cannot see data coming from DB.
issueID:UIMA-5801
type:Bug
changed files:uimaj-core/src/main/java/org/apache/uima/cas/impl/CASImpl.java
uimaj-core/src/main/java/org/apache/uima/jcas/impl/JCasImpl.java
texts:Performance degradation of jCas.reset when repeatedly used in different analysisEngines
The execution time of jCas.reset() increases linearly when invoked on the same jCas.This occurs in a loop that builds a new analysisEngine, processes the jCas and resets it.This does not occur when the same analysisEngine is reused.A junit test demonstrating the behaviour is attatched.
issueID:UIMA-5802
type:Improvement
changed files:uimaj-core/src/main/java/org/apache/uima/internal/util/Class_TCCL.java
uimaj-core/src/main/java/org/apache/uima/resource/ResourceManager.java
uimaj-core/src/main/java/org/apache/uima/internal/util/Class_TCCL.java
uimaj-core/src/main/java/org/apache/uima/resource/ResourceManager.java
uimaj-core/src/main/java/org/apache/uima/internal/util/Class_TCCL.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/MultiPageEditor.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/cpm/container/CPEFactory.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/asb/impl/FlowControllerContainer.java
uimaj-core/src/main/java/org/apache/uima/collection/impl/CasConsumerDescription_impl.java
uimaj-core/src/main/java/org/apache/uima/collection/impl/CasInitializerDescription_impl.java
uimaj-core/src/main/java/org/apache/uima/collection/impl/CollectionReaderDescription_impl.java
uimaj-core/src/main/java/org/apache/uima/flow/impl/FlowControllerDescription_impl.java
uimaj-core/src/main/java/org/apache/uima/impl/CasConsumerFactory_impl.java
uimaj-core/src/main/java/org/apache/uima/impl/CasInitializerFactory_impl.java
uimaj-core/src/main/java/org/apache/uima/impl/CollectionReaderFactory_impl.java
uimaj-core/src/main/java/org/apache/uima/impl/CustomResourceFactory_impl.java
uimaj-core/src/main/java/org/apache/uima/resource/impl/ResourceManager_impl.java
uimaj-core/src/main/java/org/apache/uima/internal/util/Class_TCCL.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/cpm/container/CPEFactory.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/MultiPageEditor.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/asb/impl/FlowControllerContainer.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/impl/PrimitiveAnalysisEngine_impl.java
uimaj-core/src/main/java/org/apache/uima/collection/impl/CasConsumerDescription_impl.java
uimaj-core/src/main/java/org/apache/uima/collection/impl/CasInitializerDescription_impl.java
uimaj-core/src/main/java/org/apache/uima/collection/impl/CollectionReaderDescription_impl.java
uimaj-core/src/main/java/org/apache/uima/flow/impl/FlowControllerDescription_impl.java
uimaj-core/src/main/java/org/apache/uima/impl/CasConsumerFactory_impl.java
uimaj-core/src/main/java/org/apache/uima/impl/CasInitializerFactory_impl.java
uimaj-core/src/main/java/org/apache/uima/impl/CollectionReaderFactory_impl.java
uimaj-core/src/main/java/org/apache/uima/impl/CustomResourceFactory_impl.java
uimaj-core/src/main/java/org/apache/uima/internal/util/Class_TCCL.java
uimaj-core/src/main/java/org/apache/uima/resource/ResourceManagerPearWrapper.java
uimaj-core/src/main/java/org/apache/uima/resource/impl/ResourceManager_impl.java
texts:UIMA Class Loader to incorporate Thread context class loader
A long-outstanding request from uimaFIT is to incorporate the Thread's context class loader in the uima class loader's lookup scheme. see UIMA-5054Doing this would allow uimaFIT to no longer create individual class loaders for each AnalysisEngine its factory produces.  This would alleviate UIMA-5801.Current logic: see if already loaded by this loader, if so return with that try loading it, if succeed, return with that delegate to the parent.Fix logic: same except for a step between 2 and 3:      2a. delegate to the Thread context class loader (if available), if succeed, return with thatBesides doing this for loading classes, it would also be done for getting resources.Does anyone see any issues with this approach?It seems this is unneeded; if the thread context class loader is wanted in the chain, it should be the parent.  The suggested approach seems to address a non-issue where 2 parent chains are wanted.There are other approaches to prevent multiple class loaders ( and even maybe, multiple ResourceManagers) from being created, which might be a better solution for UIMA-5801.  See comments for this and UIMA-5801.
issueID:UIMA-5803
type:Improvement
changed files:uimaj-core/src/main/java/org/apache/uima/internal/util/UIMAClassLoader.java
uimaj-core/src/main/java/org/apache/uima/internal/util/UIMAClassLoader.java
texts:UIMA Class loader to record if it has been closed
UIMA-5797 is implementing a close() call for UIMA Class loaders when the destroy() method is called.  UIMA-5801 needs to be able to tell if a UIMA Class Loader has been closed, so it can clean up a hashmap.  Implement a bit that remembers closing, and provide an "isClosed()" method to query it.
issueID:UIMA-5804
type:Bug
changed files:
texts:UIMA-DUCC: remove log level check from PullService
Remove log level check from  PullService.waitForProcessThreads() . If the log level is set to WARN the method just returns. Its intended purpose is to block a thread until all worker threads terminate. 
issueID:UIMA-5805
type:Improvement
changed files:
texts:No longer set extension classloader in DefaultResourceManagerCreator
When UIMA-5802 has been implemented, it is no longer necessary to create a custom classloader in DefaultResourceManagerCreator. The uimaFIT code should check the UIMA version to ensure that this is only done when uimaFIT is used with UIMA core versions that actually do take the thread context loader into account. Version information can be obtained via the UimaVersion class. 
issueID:UIMA-5806
type:Bug
changed files:
texts:UIMA-DUCC: add junit test to cover AE process failure
Add Junit test to cover pullservice handling of process errors. When a process fails, the pull service should stop all internal threads.
issueID:UIMA-5808
type:Improvement
changed files:
texts:Destroy auto-created resource managers if feasible
When uimaFIT internally implicitly creates a resource manager, it should also auto-destroy it if that is feasible.See: https://issues.apache.org/jira/browse/UIMA-5801?focusedCommentId=16533149&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-16533149  
issueID:UIMA-5809
type:Bug
changed files:
texts:Ruta: COUNT condition assigns wrong value
The implemenation of getAnnotationsInWindow2 incorrect and needs to be replaced.
issueID:UIMA-581
type:Task
changed files:
texts:Cas Editor: Create a test plan

issueID:UIMA-5810
type:Improvement
changed files:
texts:Add contribution guidelines and PR template
Add a contribution guideline document and a PR template on GitHub. The Apache OpenNLP project has some that look good and could be adapted to uimaFIT/UIMA.https://github.com/apache/opennlp/tree/master/.github 
issueID:UIMA-5811
type:Improvement
changed files:
texts:UIMA-AS upgrade xmlbeans to v.3.0.0
Upgrade xmlbeans to the latest version 3.0.0. 
issueID:UIMA-5813
type:Bug
changed files:
texts:MetaDataObject_impl doesn&#39;t compare CasProcessorConfigurationParameterSettings when the "equals" is called
In org.apache.uima.resource.metadata.impl.MetaDataObject_implThe method:public boolean equals(Object aObj) calls another method:private boolean valuesEqual(Object val1, Object val2)However, in "valuesEqual", the CasProcessorConfigurationParameterSettings is never compared.Suggest to add the following in valuesEqual method:        if (val1 instanceof CasProcessorConfigurationParameterSettingsImpl) {// only need this to handle Maps w/ array vals            if (!(val2 instanceof CasProcessorConfigurationParameterSettingsImpl)) Unknown macro: {                return false;            }             CasProcessorConfigurationParameterSettingsImpl settings1 = (CasProcessorConfigurationParameterSettingsImpl) val1;            CasProcessorConfigurationParameterSettingsImpl settings2 = (CasProcessorConfigurationParameterSettingsImpl) val2;            if (settings1.getParameterSettings().length != settings2.getParameterSettings().length)             if (settings1.getParameterSettings().length >= settings2.getParameterSettings().length) {                Map<String, Object> values2 = new HashMap<>();                for (NameValuePair pair : settings2.getParameterSettings()) Unknown macro: {                    values2.put(pair.getName(), pair.getValue());                }                 for (NameValuePair pair : settings1.getParameterSettings()) {                    if (values2.containsKey(pair.getName())                            && !values2.get(pair.getName()).equals(pair.getValue())) Unknown macro: {                        return false;                    }                     values2.remove(pair.getName());                }                if (values2.size() > 0)                    return false;            } else {                Map<String, Object> values1 = new HashMap<>();                for (NameValuePair pair : settings1.getParameterSettings()) Unknown macro: {                    values1.put(pair.getName(), pair.getValue());                }                 for (NameValuePair pair : settings2.getParameterSettings()) {                    if (values1.containsKey(pair.getName())                            && values1.get(pair.getName()).equals(pair.getValue()))                     values1.remove(pair.getName());                }                if (values1.size() > 0)                    return false;            }            return true;        }  
issueID:UIMA-5814
type:Improvement
changed files:
texts:UIMA-DUCC: agent should support quiesce request
Currently when an agent receives a stop request through its admin channel it sends SIGTERM to all its running processes and waits 1 minute for them to stop. Any process still standing after 1 minute is than killed via SIGKILL. In addition to stop request, an agent should support a quiesce request (through an admin channel). When such request is received, an agent should send SIGTERM to all its running processes but should not send SIGKILL to allow each process to finish its tasks and exit when done. An agent should not start a timer after sending the SIGTERM.In quiesce mode, an agent will reject new process allocation requests from the OR. Such process state will be marked as REJECTED and published to the OR. An agent will keep publishing metrics and inventory. In an event an agent process does not exit, a sys admin can send a stop request to force termination.In addition to changes in an agent, modifications are also needed in the RM, perhaps OR, CLI and scripts.
issueID:UIMA-5815
type:Improvement
changed files:
texts:UIMA-DUCC: pull-service should support quiesce
When a pull service gets SIGTERM signal, it should stop requesting new tasks, complete all pending tasks and terminate.
issueID:UIMA-5816
type:Improvement
changed files:
texts:UIMA-DUCC: pull-service should use a window for errors
Currently a pull-service terminates on a process error. This might not be desired in some cases. A service should support a configurable window for errors, for example:       allow 3 errors per 100 tasks processed  To support this, a pull service needs two parameters: max number of errors and a window sizeif the max number=0, the pull-service will terminate on 1st error.Consider implementing a pluggable error handler that will encapsulate the above. Such error handler will be plugged into an instance of IServiceProcessor. 
issueID:UIMA-5817
type:Improvement
changed files:
texts:UIMA-DUCC: modify pull-service client to use ephemeral port for its webserver
The HttpTaskTransportHandler should find an open ephemeral port and use it for its Jetty server. Currently an application must provide this port. 
issueID:UIMA-5818
type:Improvement
changed files:
texts:Use List instead of Collection where possible
Use List as return values instead of Collection where possible, e.g. in `indexCovered`, `indexCovering`, etc.
issueID:UIMA-5819
type:Bug
changed files:
texts:Ruta: label on fsarray feature match refers to matched base annotation
The second d refers to a MultiDrug...m:removeMedications->{    m.drug-> {        d:Drug{-> RemoveDrug(d)};        d:MultiDrug.drugs{-> RemoveDrug(d)};        };    };
issueID:UIMA-582
type:Improvement
changed files:
texts:improve FileCompare used in JUnit Tests
Improve FileCompare for use with additional test cases where the tests are for "generated" files which contain some pieces of text that might be different and should be ignored.  For instance, a generator which inserts the file name - might be different when the test is run on different systems, or one which inserts the date/time.  Also expose some additional compare functions which ignore things like different "blanks" or new line char conventions that might be different on Linux/Windows platforms. Finally, for debugging, when something miscompares, print out the fragment and char location of the miscompare.
issueID:UIMA-5820
type:Improvement
changed files:
texts:Add CasFactory
Add a CAS version of the JCasFactory.
issueID:UIMA-5821
type:Bug
changed files:
texts:Pull service errors are not returned correctly
The service returns a stringified stack trace which does not need to be deserialized by the client
issueID:UIMA-5822
type:Bug
changed files:
texts:DUCC pull service failures immediately after initialization may be treated as initialization failures
Added a 30sec delay before sending the first work request.  The real problem may be in the sequence of state messages from agent > OR > SM
issueID:UIMA-5823
type:Improvement
changed files:
texts:Add basic benchmarking module
Add a module with a few benchmarks to check how fast different operations in uimaFIT are.
issueID:UIMA-5824
type:Improvement
changed files:
texts:Run JCasUtil tests against equivalent v3 selects
UIMAv3 has introduced a new "select" framework that is similar to the functionality provided by the uimaFIT (J)CasUtil methods. To ensure that both are aligned in terms of their results, run the JCasUtil tests against the UIMAv3 CAS select framework.
issueID:UIMA-5826
type:Bug
changed files:uimaj-core/src/main/java/org/apache/uima/cas/SelectFSs.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/SelectFSs_impl.java
texts:asList() ignores limit
In the following code, the `precedingsTokens` list should contain two elements. In fact, it does, but the `size()` method of the list still returns 6. That is because `org.apache.uima.cas.impl.SelectFSs_impl.asList()` simply uses the size of the underlying index and does not take into account limit or direction options from the select.     jCas.setDocumentText("abcde");    *new* Token(jCas, 0, 1).addToIndexes();    *new* Token(jCas, 1, 2).addToIndexes();    *new* Token(jCas, 2, 3).addToIndexes();    *new* Token(jCas, 3, 4).addToIndexes();    *new* Token(jCas, 4, 5).addToIndexes();    *new* Token(jCas, 1, 3).addToIndexes();    Token c = JCasUtil.selectAt(jCas, Token.*class*, 2, 3).get(0);    List<Token> preceedingTokens = jCas.select(Token.*class*).preceding(c).limit(2).asList();        assertEquals(2, preceedingTokens.size());
issueID:UIMA-5827
type:Bug
changed files:uimaj-core/src/main/java/org/apache/uima/cas/SelectFSs.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/SelectFSs_impl.java
texts:SelectFS has no isEmpty() method
Add an `isEmpty()` method to SelectFS which should be used as an alternative to calling `count() == 0` or `findAny().isPresent()`.
issueID:UIMA-5828
type:Bug
changed files:uimaj-core/src/main/java/org/apache/uima/cas/SelectFSs.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/SelectFSs_impl.java
texts:Unable to fetch preceding annotations in order
uimaFIT has a call `selectPreceding` which returns the n annotations before the specified annotations in normal order.This seems to be quite difficult to replicate using UIMAv3 SelectFS:    Annotation a = new Annotation(this.jCas, 0, 1);    Annotation b = new Annotation(this.jCas, 2, 3);    Annotation c = new Annotation(this.jCas, 4, 5);    for (Annotation ann : Arrays.asList(a, b, c)) {      ann.addToIndexes();    }    // uimaFIT: Arrays.asList(a, b), selectPreceding(this.jCas, Annotation.class, c, 2));    // Produces reverse order    assertEquals(Arrays.asList(a, b), jCas.select(Annotation.*class*).preceding(c).limit(2).asList());    // Produces: java.lang.IllegalArgumentException: Strict requires BoundsUse.coveredBy    assertEquals(Arrays.asList(a, b), jCas.select(Annotation.class).at(c).shifted(-2).limit(2).asList());
issueID:UIMA-5829
type:Bug
changed files:uimaj-core/src/main/java/org/apache/uima/cas/SelectFSs.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/SelectFSs_impl.java
texts:`between` throws an exception for overlapping annotations
SelectFS throws an exception in the following case. Why not return an empty list?    Token t1 = new Token(jCas, 45, 57);    t1.addToIndexes();    Token t2 = new Token(jCas, 52, 52);    t2.addToIndexes();    new Sentence(jCas, 52, 52).addToIndexes();    // uimaFIT: selectBetween(jCas, Sentence.class, t1, t2);    List<Sentence> stem1 = jCas.select(Sentence.class).between(t1, t2).asList();    assertTrue(stem1.isEmpty());java.lang.IllegalArgumentException: End value must be >= Begin value at org.apache.uima.cas.impl.SelectFSs_impl.makePosAnnot(SelectFSs_impl.java:855) at org.apache.uima.cas.impl.SelectFSs_impl.between(SelectFSs_impl.java:435) at org.apache.uima.cas.impl.SelectFSs_impl.between(SelectFSs_impl.java:97)...
issueID:UIMA-583
type:Bug
changed files:uimaj-core/src/main/java/org/apache/uima/UimaContext.java
uimaj-core/src/main/java/org/apache/uima/UimaContext.java
texts:update documentation for adding PEARs to aggregate AEs
update the documentation or fix the impl: that if a PEAR file (pear descriptor) is added to an aggregate AE the configuration parameters of the PEAR file cannot be overridden by the aggregate AE.update the documentation or fix the impl:  the mechanism for sharing resources among annotators doesn't work with PEARs, because it depends on the shared Resource Manager, and the current PEAR-inside-an-aggregate creates a new, unique resource manager for the PEAR.update the documentation or fix the impl: the (undocumented) Session manager support doesn't work with the current implementation.
issueID:UIMA-5830
type:Bug
changed files:uimaj-core/src/main/java/org/apache/uima/cas/SelectFSs.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/SelectFSs_impl.java
texts:Unable to select from the end
I don't find a way to implement selection from the end by index using SelectFS - maybe it is a bug or maybe it is not supported:    String text = "Rot wood cheeses dew?";    tokenBuilder.buildTokens(jCas, text);    // uimaFIT: JCasUtil.selectByIndex(jCas, Token.class, -1).getCoveredText()    assertEquals("dew?", jCas.select(Token.class).backwards().get(0).getCoveredText());The `uimaFIT` line is how it works in uimaFIT. Below my attempt in doing it using SelectFS. my understanding is that `backwards()` should change the iteration order (so starting at the end of the index instead of at the beginning in this case) and then `get(0)` should get the final token `dew?`. But instead, the statement returns the first token `Rot`.
issueID:UIMA-5831
type:Documentation
changed files:
texts:uv3 select doc incorrect for preceding/following
SelectFSs's preceding and following take arguments specifying the location preceding or following from.  These arguments differ from the the startAt arguments.  Update docs to match Javadocs.
issueID:UIMA-5832
type:Documentation
changed files:uimaj-core/src/main/java/org/apache/uima/cas/SelectFSs.java
texts:uv3 select doc/javadoc incorrect for following
To behave like uimaFIT, the select following api doc needs to change the positioning compare from begin > positioning-end to begin >= positioning-end.  
issueID:UIMA-5833
type:Improvement
changed files:uimaj-core/src/main/java/org/apache/uima/cas/impl/FsIterator_backwards.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FsIterator_bag.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FsIterator_limited.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FsIterator_multiple_indexes.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FsIterator_set_sorted2.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FsIterator_subtypes_snapshot.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/LowLevelIterator.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/LowLevelIterator_empty.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FilteredIterator.java
uimaj-core/src/main/java/org/apache/uima/cas/FSIterator.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/Subiterator.java
texts:uv3 add size method to fs iterators
Several operations, including asList in select, need to return the size of an iterator.  There are multiple ways this could be computed depending on the kind of iterator, with varying efficiencies.  Add a virtual method with various impls for this.
issueID:UIMA-5834
type:Improvement
changed files:uimaj-core/src/main/java/org/apache/uima/cas/impl/FilteredIterator.java
texts:uv3 add implementations for methods in FilteredIterator
FilteredIterator currently throws unsupported operation exceptions for many of the low-level iterator APIs.  Implement versions for most of these.  This will enable better coverage when used in selects.
issueID:UIMA-5835
type:Improvement
changed files:uimaj-core/src/main/java/org/apache/uima/cas/impl/FsIterator_backwards.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FsIterator_bag.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FsIterator_limited.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FsIterator_multiple_indexes.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FsIterator_set_sorted2.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FsIterator_subtypes_snapshot.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/LowLevelIterator.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/LowLevelIterator_empty.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FilteredIterator.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/Subiterator.java
texts:uv3 add low level iterator method to get an array of the items
To enable efficient implementation of select operations such as "asList", it is helpful to be able to extract, efficiently (depending on the underlying iterators and indexes), an array with all the elements of the iteration. Implement this as a "LowLevelIterator" additional method, in various ways for all the varieties of iterators.
issueID:UIMA-5836
type:Improvement
changed files:uimaj-core/src/main/java/org/apache/uima/cas/impl/Subiterator.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/Subiterator.java
texts:uv3 select don&#39;t throw exception for specifying strict with sameBeginEnd
The subiterator constructor currently throws an exception if strict is specified when the bounding conditions are other than "coveredBy".  This is overly harsh; allow strict for bounds use = same-begin-end, even though it's a no-op in that case.
issueID:UIMA-5837
type:Improvement
changed files:
texts:uv3 add junit tests for select
Add junit tests for select
issueID:UIMA-5838
type:Improvement
changed files:uimaj-core/src/main/java/org/apache/uima/cas/CASRuntimeException.java
uimaj-core/src/main/java/org/apache/uima/cas/CASRuntimeException.java
texts:uv3 select: post exception if startAt used with any of the bounding operations
The startAt method of select allows specifying a starting position.  This is not supported (currently) for the 3 kinds of bounded iterations, so if it is specified throw an exception in those cases.This is implemented, so marking this  Jira as invalid
issueID:UIMA-5839
type:Bug
changed files:uimaj-core/src/main/java/org/apache/uima/cas/FSIterator.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/LowLevelIterator_empty.java
texts:uv3 getType on FSIterator fails for empty iterator - no index available
The getType method in FSIterators fails for empty iterators because the index is null.
issueID:UIMA-584
type:Improvement
changed files:
texts:Add eclipse project files to the Cas Editor project
Add the .project and .classpath files and remove the pom.xml file.
issueID:UIMA-5840
type:Improvement
changed files:uimaj-core/src/main/java/org/apache/uima/cas/SelectFSs.java
unused-saved/src/org/apache/uima/jcas/impl/CASMetadata.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FSIndexRepositoryImpl.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FilteredIterator.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FsIndex_bag.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FsIndex_singletype.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FsIterator_backwards.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FsIterator_bag.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FsIterator_limited.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FsIterator_multiple_indexes.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FsIterator_set_sorted2.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FsIterator_subtypes_snapshot.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/LowLevelIndex.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/LowLevelIterator.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/SelectFSs_impl.java
uimaj-core/src/main/java/org/apache/uima/internal/util/CopyOnWriteObjHashSet.java
uimaj-core/src/main/java/org/apache/uima/internal/util/CopyOnWriteOrderedFsSet_array.java
uimaj-core/src/main/java/org/apache/uima/internal/util/OrderedFsSet_array.java
texts:uv3 fix generics use in selectFs and iterators and indexes
Use generic typing more consistently in iterators, indexes, and selectFs, including internals.
issueID:UIMA-5841
type:Bug
changed files:uimaj-core/src/main/java/org/apache/uima/cas/impl/Subiterator.java
texts:uv3 getArray and size, for Subiterator broken
getArray and size make a copy of the subiterator, which picks up the current positioning.  Add a moveToFirst on the copy, to make these methods work correctly.
issueID:UIMA-5843
type:Improvement
changed files:
texts:UIMA-DUCC: pull service should support error window
Currently, a pull service terminates on the 1st process error. In some cases, this might not be desirable. Add an error handler which supports an error window. It should be based on max number of errors (ME) in a given window(W). Examples:(ME,W)(0,0)  - never terminate on errors (1,1) - terminate on first error (2, 5) - terminate on second error in a window of 5 tasksThe default will be (1,1). For jobs, the Orchestrator will add two new -D's to JP command line if a job spec defines a custom error windowducc.deploy.service.error.threshold=ME ducc.deploy.service.error.window=WAn application with an embedded PullService can change the default error window by calling a new method of IServiceProcessorpublic void setErrorHandlerWindow(int maxErrors, int windowSize); Changes are needed in the job spec to support optional error window properties (max errors and window size). Also, the OR needs to change to add -Ds as mentioned above. Duccbook needs an update as well to document new job properties. 
issueID:UIMA-5844
type:Bug
changed files:uimaj-core/src/main/java/org/apache/uima/cas/FSIterator.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FilteredIterator.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FsIterator_backwards.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FsIterator_bag.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FsIterator_limited.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FsIterator_multiple_indexes.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FsIterator_set_sorted2.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FsIterator_singletype.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FsIterator_subtypes_snapshot.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/LowLevelIterator.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/LowLevelIterator_empty.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/SelectFSs_impl.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/Subiterator.java
texts:SelectFS.following doesn&#39;t work
It seems as if the SelectFS following method doesn't work at all:  @Test  public void testSelectFollowingPrecedingDifferentTypes() {    this.jCas.setDocumentText("A B C D E");    Token a = new Token(this.jCas, 0, 1);    Token b = new Token(this.jCas, 2, 3);    Token c = new Token(this.jCas, 4, 5);    Token d = new Token(this.jCas, 6, 7);    Token e = new Token(this.jCas, 8, 9);    for (Token token : Arrays.asList(a, b, c, d, e)) {      token.addToIndexes();    }    Sentence sentence = new Sentence(this.jCas, 2, 5);    sentence.addToIndexes();    // uimaFIT: selectFollowing(this.jCas, Token.class, sentence, 1);    List<Token> following1 = jCas.select(Token.class).following(sentence).limit(1).asList();    assertEquals(Arrays.asList("D"), JCasUtil.toText(following1));    assertEquals(Arrays.asList(d), following1);This fails with java.lang.AssertionError: expected:<[D]> but was:<[A]>It seems as if the `following` simply has no effect. If the `limit is removed`, the whole set of Tokens is returned.
issueID:UIMA-5846
type:Question
changed files:uimaj-core/src/main/java/org/apache/uima/cas/SelectFSs.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/SelectFSs_impl.java
texts:Order in SelectFS
I'm not sure about the way that order in SelectFS is handled. Naively, I would expect that all operations return annotations in index order or in reverse index order if `backwards` was called. But for example `jcas.select(Sentence.class).between(t1, t2).asList()` returns in normal order if `t1 < t2` and in backwards order if `t2 < t1`. While I this seems to be a nice touch from the engineering point of view, from a naive user's perspective, it seems somewhat surprising to me. Mind that the behavior is documented - still I wonder it if is a good idea. If I wanted to have the annotations in reverse order, I'd probably try calling `jcas.select(Sentence.class).backwards().between(t1, t2).asList()` or maybe `jcas.select(Sentence.class).between(t1, t2).backwards().asList()`.
issueID:UIMA-5848
type:Improvement
changed files:uimaj-core/src/main/java/org/apache/uima/cas/FSIterator.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FilteredIterator.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FsIterator_bag.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FsIterator_multiple_indexes.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FsIterator_set_sorted2.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FsIterator_subtypes_snapshot.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/LowLevelIterator_empty.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/Subiterator.java
texts:uv3 improve impl of FSIterator.size(), add tests
redo the size() impl as a default generic approach, overridden by specific iterators which have much faster ways to compute this.  Add test cases.
issueID:UIMA-5849
type:Bug
changed files:
texts:DUCC CLI ducc_job_specification.py does not blank-separate displayed list values
When issuing ducc_job_specification.py the displayed results for environment and process_jvm_args values do not have blanks between separate items.
issueID:UIMA-585
type:Test
changed files:
texts:Reduce noisy output when running some CPE tests when run in Maven
Many CPE tests use ManageOutputDevice.setAllSystemOutputToNirvana() calls to attempt to stop expected error output from flooding the console.  This works when the tests are run from Eclipse, but fails when run from Maven.  This because the mechanism used is to swap in to System.err and System.out new print streams that throw away their output.  However, if any logging occurs previous to this, the logger will initialize and copy the System.err, for example, so that subsequent setting of it has no effect on logging.  When running from Maven, this happens.The fix is to use a different mechanism to stop the output due to logging:  UIMAFramework.getLogger().setLevel(Level.OFF).  Ideally this is surrounded by a try / finally block to insure it's put back to INFO.
issueID:UIMA-5850
type:Bug
changed files:
texts:Ruta: CONTAINS counts overlapping annotations
In the following example, the CONTAINS condition counts also overlapping Unit-annotations:200mg/25mgwith Unit-annotations on both "mg" snippets and on "mg/25mg".If you block on the two measurements around the slash, i.e. on "200mg" and on "25mg", the CONTAINS(Unit) condition returns 2 units in the case of "200mg" and 1 unit in the case of "25mg".
issueID:UIMA-5851
type:Bug
changed files:
texts:DUCC Web Server (WS) displays ever increasing Processing Time on Work Items tab
If a Job terminates before all work items have reached status "ended", ducc-mon displays ever increasing times for Processing Time and Investment Time on the Work Items tab.The problem is that for non-"ended" work items, ducc-mon uses "now" as the reference point.   But in the case of a Completed Job, ducc-mon should use the Job's completion time as the reference point. 
issueID:UIMA-5852
type:Bug
changed files:
texts:UIMA-DUCC: Agent not stopping child process metrics collector sometimes
An agent starts a time based camel route for each JP it launches. This route wakes a thread and collects metrics for the child process. This happens at regular intervals. When a child process terminates, the agent should stop associate route. In some cases routes keep running and accumulating in memory causing a leak which lead to OOM. Modify code to force route termination when the process is dead yet agent keeps trying to collect metrics for it.
issueID:UIMA-5853
type:Improvement
changed files:
texts:Java version for integration tests should match main target version
The integration tests currently do not configure the Java target version which causes the build to fail with JDK 10 since the default level 1.5 is no longer supported.
issueID:UIMA-5854
type:Task
changed files:
texts:Switch SCM info for uimaFIT from SVN to GIT
Since we have migrated to Git and use the GitHub repo as the main code ingestion point, the SCM info in the POM.xml files needs to be updated accordingly.
issueID:UIMA-5855
type:Bug
changed files:
texts:DUCC Web Server (WS) http -> https redirect does not include query string
DuccHandlerHttpRequestFilter.handleRedirect needs to get query string and append to URL.Perhaps:String encodedQS = request.getQueryString();if(encodedQS{{ != null) {}}    String qs = URLDecoder.decode(encodedQS, "UTF-8");    url = url+"?"+qs;}
issueID:UIMA-5856
type:Improvement
changed files:
texts:Use modern checksum algorithms during release
Apache policy requires that we drop generating MD5 / SHA1 checksums and switch:– for new releases : – you MUST supply a SHA-256 and/or SHA-512 file – you SHOULD NOT supply MD5 or SHA-1 filesSee http://www.apache.org/dev/release-distribution#sigs-and-sumsBest place to do this would be the parent-pom.Its a bit of a blocker for producing any new releases unless sub-projects override all the code-signing provisions in the UIMA parent pom.
issueID:UIMA-5857
type:Bug
changed files:
texts:DUCC Web Server (WS) NumberFormatException
java.lang.NumberFormatException: For input string: ""        at java.lang.NumberFormatException.forInputString(NumberFormatException.java:76)        at java.lang.Integer.parseInt(Integer.java:604)        at java.lang.Integer.parseInt(Integer.java:627)        at org.apache.uima.ducc.ws.server.nodeviz.VisualizedHost.<init>(VisualizedHost.java:56)        at org.apache.uima.ducc.ws.server.nodeviz.NodeViz.generateVisualization(NodeViz.java:234)        at org.apache.uima.ducc.ws.server.nodeviz.NodeViz.update(NodeViz.java:374)        at org.apache.uima.ducc.ws.server.DuccListeners.update(DuccListeners.java:49)        at org.apache.uima.ducc.ws.WebServerComponent.update(WebServerComponent.java:199)        at org.apache.uima.ducc.ws.event.WebServerEventListener.onOrchestratorStateDuccEvent(WebServerEventListener.java:58)        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:90)        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:55)        at java.lang.reflect.Method.invoke(Method.java:508)        at org.apache.camel.component.bean.MethodInfo.invoke(MethodInfo.java:472)        at org.apache.camel.component.bean.MethodInfo$1.doProceed(MethodInfo.java:291)        at org.apache.camel.component.bean.MethodInfo$1.proceed(MethodInfo.java:264)        at org.apache.camel.component.bean.BeanProcessor.process(BeanProcessor.java:178)        at org.apache.camel.management.InstrumentationProcessor.process(InstrumentationProcessor.java:77)        at org.apache.camel.processor.RedeliveryErrorHandler.process(RedeliveryErrorHandler.java:541)        at org.apache.camel.processor.CamelInternalProcessor.process(CamelInternalProcessor.java:198)        at org.apache.camel.processor.Pipeline.process(Pipeline.java:120)        at org.apache.camel.processor.Pipeline.process(Pipeline.java:83)        at org.apache.camel.processor.CamelInternalProcessor.process(CamelInternalProcessor.java:198)        at org.apache.camel.processor.DelegateAsyncProcessor.process(DelegateAsyncProcessor.java:97)        at org.apache.camel.component.jms.EndpointMessageListener.onMessage(EndpointMessageListener.java:112)        at org.springframework.jms.listener.AbstractMessageListenerContainer.doInvokeListener(AbstractMessageListenerContainer.java:721)        at org.springframework.jms.listener.AbstractMessageListenerContainer.invokeListener(AbstractMessageListenerContainer.java:681)        at org.springframework.jms.listener.AbstractMessageListenerContainer.doExecuteListener(AbstractMessageListenerContainer.java:651)        at org.springframework.jms.listener.AbstractPollingMessageListenerContainer.doReceiveAndExecute(AbstractPollingMessageListenerContainer.java:317)        at org.springframework.jms.listener.AbstractPollingMessageListenerContainer.receiveAndExecute(AbstractPollingMessageListenerContainer.java:255)        at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.invokeListener(DefaultMessageListenerContainer.java:1166)        at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.executeOngoingLoop(DefaultMessageListenerContainer.java:1158)        at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.run(DefaultMessageListenerContainer.java:1055)        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1160)        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)        at java.lang.Thread.run(Thread.java:811)
issueID:UIMA-5858
type:Improvement
changed files:
texts:UIMA-DUCC: Agent should publish its state (Available|Unavailable) in metrics
Add agent state when publishing metrics. When agent is asked to stop or quiesce it will change is state to Unavailable to let clients know that it is stopping. The RM will stop scheduling work on a node which is in Unavailable state.
issueID:UIMA-5859
type:Bug
changed files:
texts:DUCC Web Server (WS) java.lang.NullPointerException
21 Aug 2018 10:54:13,271 ERROR WS.DuccHandlerClassic - N/A handlejava.lang.NullPointerException        at org.apache.uima.ducc.ws.server.DuccHandlerClassic.handleServletClassicSystemBroker(DuccHandlerClassic.java:2079)        at org.apache.uima.ducc.ws.server.DuccHandlerClassic.handleDuccRequest(DuccHandlerClassic.java:2208)        at org.apache.uima.ducc.ws.server.DuccHandlerClassic.handle(DuccHandlerClassic.java:2228)        at org.eclipse.jetty.server.handler.HandlerList.handle(HandlerList.java:52)        at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)        at org.eclipse.jetty.server.Server.handle(Server.java:499)        at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:311)        at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:258)        at org.eclipse.jetty.io.AbstractConnection$2.run(AbstractConnection.java:544)        at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:635)        at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:555)        at java.lang.Thread.run(Thread.java:811)
issueID:UIMA-586
type:Bug
changed files:uimaj-core/src/main/java/org/apache/uima/cas/impl/XmiCasDeserializer.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/XmiCasDeserializer.java
texts:Bug when merging CASes using XmiDeserialization
After merging have duplicate Xmi Ids in map which causes FSs to be lost on later serializations.Have modified  the Xmi Deserialization test case to expose this problem.
issueID:UIMA-5860
type:Bug
changed files:
texts:DUCC Orchestrator (OR) NullPointerException (NPE)
21 Aug 2018 08:38:09,822 ERROR DUCC.OrchestratorEventListener - N/A onAgentProcessLifecycleReportDuccEventjava.lang.NullPointerException at java.util.concurrent.ConcurrentHashMap.get(ConcurrentHashMap.java:947) at org.apache.uima.ducc.transport.event.common.DuccWorkMap.findDuccWork(DuccWorkMap.java:338) at org.apache.uima.ducc.orchestrator.OrchestratorComponent.reconcileAgentProcessLifecycleReport(OrchestratorComponent.java:625) at org.apache.uima.ducc.orchestrator.event.OrchestratorEventListener.onAgentProcessLifecycleReportDuccEvent(OrchestratorEventListener.java:211) at sun.reflect.GeneratedMethodAccessor39.invoke(Unknown Source) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:55) at java.lang.reflect.Method.invoke(Method.java:508) at org.apache.camel.component.bean.MethodInfo.invoke(MethodInfo.java:472) at org.apache.camel.component.bean.MethodInfo$1.doProceed(MethodInfo.java:291) at org.apache.camel.component.bean.MethodInfo$1.proceed(MethodInfo.java:264) at org.apache.camel.component.bean.BeanProcessor.process(BeanProcessor.java:178) at org.apache.camel.management.InstrumentationProcessor.process(InstrumentationProcessor.java:77) at org.apache.camel.processor.RedeliveryErrorHandler.process(RedeliveryErrorHandler.java:541) at org.apache.camel.processor.CamelInternalProcessor.process(CamelInternalProcessor.java:198) at org.apache.camel.processor.CamelInternalProcessor.process(CamelInternalProcessor.java:198) at org.apache.camel.processor.DelegateAsyncProcessor.process(DelegateAsyncProcessor.java:97) at org.apache.camel.component.jms.EndpointMessageListener.onMessage(EndpointMessageListener.java:112) at org.springframework.jms.listener.AbstractMessageListenerContainer.doInvokeListener(AbstractMessageListenerContainer.java:721) at org.springframework.jms.listener.AbstractMessageListenerContainer.invokeListener(AbstractMessageListenerContainer.java:681) at org.springframework.jms.listener.AbstractMessageListenerContainer.doExecuteListener(AbstractMessageListenerContainer.java:651) at org.springframework.jms.listener.AbstractPollingMessageListenerContainer.doReceiveAndExecute(AbstractPollingMessageListenerContainer.java:317) at org.springframework.jms.listener.AbstractPollingMessageListenerContainer.receiveAndExecute(AbstractPollingMessageListenerContainer.java:255) at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.invokeListener(DefaultMessageListenerContainer.java:1166) at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.executeOngoingLoop(DefaultMessageListenerContainer.java:1158) at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.run(DefaultMessageListenerContainer.java:1055) at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1160) at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635) at java.lang.Thread.run(Thread.java:811)
issueID:UIMA-5861
type:Improvement
changed files:
texts:Ruta: include script name in Ruta runtime exceptions
E.g. when type is not resolved
issueID:UIMA-5863
type:Bug
changed files:
texts:Ruta: label remembers removed match in greedy rule element
the end assignment is wrongps:B{-> ps.end = a.end} a:ANY[1,10]{-PARTOF(B)};
issueID:UIMA-5864
type:Bug
changed files:
texts:UIMA-DUCC: Agent not stopping rogue child processes
Agent should stop running child process if it does not exist in an incoming OR state. Such process should be considered rogue and agent should kill it.
issueID:UIMA-5865
type:Bug
changed files:
texts:UIMA-DUCC: uima-as service not deploying correctly
After recent refactoring to support pull services, the uima-as service is being deployed using a wrapper code meant for jobs. Such service fails during startup complaining about client URL not being specified. Modify DuccJobService to use correct wrapper when deploying uima-as service. 
issueID:UIMA-5866
type:Bug
changed files:
texts:UIMA-DUCC: pullservice should wait for some time when JD has no tasks to give
Recent adoption of pullservice for jobs introduced a bug related to how service handles a scenario when a JD has no more tasks to give. Before the change, the service used to sleep for a configurable amount of time before retrying GET. This is a regression. 
issueID:UIMA-5867
type:Improvement
changed files:
texts:UIMA-DUCC: pullservice should synchronize GET retry when client has no tasks to give
When a client has no more tasks to give, the service should synchronize GET retry until the client has more tasks to process. A single thread will keep asking for a task while other threads block. When a task becomes available, the service should unblock all threads and resume normal processing. 
issueID:UIMA-5868
type:Bug
changed files:
texts:UIMA-DUCC: stop_ducc --head --stop not working
The AbstractDuccComponent not handling DuccAdminEventStop correctly by ducc daemons (other than an agent). The event is received from admin channel but not acted upon. 
issueID:UIMA-587
type:Improvement
changed files:
texts:Cas Editor: After a cas processor was run the cas processor folder should be refreshed
It is possible that cas processor create files, these cannot be seen in the editorwithout the refresh.
issueID:UIMA-5870
type:Improvement
changed files:
texts:Documentation for addTypeSystemDescriptions in uimafit-maven-plugin is missing

issueID:UIMA-5871
type:Task
changed files:
texts:Create svn branch for Ducc 2.2.2 Patches
Create a branch from 2.2.2 to hold patches for: Process reporting FailedInitialization is not being killed Ghost process detector not killing ghost processes
issueID:UIMA-5872
type:Bug
changed files:
texts:UIMA-DUCC: Agent not killing ghost processes nor processes reporting FailedInitialization
Fix agent to kill processes which are not found in an incoming OR state yet are still in agent inventory (aka ghost). Also, agent also is not killing custom services reporting FailedInitialization status.
issueID:UIMA-5873
type:Improvement
changed files:
texts:UIMA-DUCC: extend metrics to include number of CASes processed
Currently JPs report just an analysis time for each AE during processing. Extend this to include number of CASes processed by each AE. The duccmon can display this running total as part of the pipeline performance 
issueID:UIMA-5875
type:Improvement
changed files:
texts:DUCC admin command stop_ducc should accept --all --stop, which comprises --agents followed by --head
stop_ducc --all --stop does not work.  One is told --all only works for --kill.
issueID:UIMA-5876
type:Improvement
changed files:
texts:update uima-wide parent-pom
Additional updates beyond UIMA-5856.  Remove redundant/outdated versioning now provided by current apache-wide parent-pom (21). add common configuration for api change report.Attempts to use the checksum-maven-plugin reveal that it doesn't work correctly, see https://github.com/nicoulaj/checksum-maven-plugin/issues/63 ).  Design a work-around that uses Ant scripts, and insure it works both for maven-deploy targets (e.g. .m2) and for normal apache distribution targets (e.g. project/target ).Due to bug in the current implementation of the maven-gpg-plugin ( MGPG-66 ), the gpg plugin needs to be run before doing the .sha512 checksumming (otherwise the checksums also get signed).
issueID:UIMA-5877
type:Bug
changed files:
texts:UIMA-DUCC: Pull service not failing fast on initialization error
With multiple threads initializing, the protocol handler serializes call to processor.initialize() so that only one thread is allowed to initialize at a time.If initialization fails the design goal is for the remaining threads to fail-fast if a previous thread failed. The check for error was in the wrong place in the DefaultServiceProtocolHandler.initialize(). Modify to do the check after a thread acquires a lock as in the below snippet:try {    // use a lock to serialize initialization one thread at a time    initLock.lock();    if (initError) {        return;    }    processor.initialize();...    
issueID:UIMA-5878
type:Bug
changed files:
texts:UIMA-DUCC: Rogue process detector not logging output from reaper script
Rogue process detector is not logging output from the reaper script.
issueID:UIMA-5879
type:Bug
changed files:
texts:UIMA-DUCC:Pull service not terminating on java Error
The PullService.start() is not catching Throwable and not stopping itself as a consequence.Modify try ... catch() to handle Throwable and terminate the process.
issueID:UIMA-588
type:Bug
changed files:
texts:fix RegularExpressionAnnotator tests - add type priorities to get the same results for all JVMs
add type priorities to get the same results for all JVMs
issueID:UIMA-5880
type:Improvement
changed files:
texts:DUCC Web Server (WS) display of Tasks column on Job Performance tab
Related to UIMA-5873. JD needs to capture and record in performance file the new Tasks information provided by JP WS needs to read and display the new Tasks information on Jobs Performance tab
issueID:UIMA-5881
type:Bug
changed files:
texts:Ruta: multiple matches of simple wildcard
Ruta: multiple matches of simple wildcard, something like:CW{->A, A};# A;
issueID:UIMA-5882
type:Bug
changed files:
texts:Ruta: CME for simple wildcard rule
Ruta: CME for simple wildcard rule, something likeA # a:@A{-> UNMARK(a)};
issueID:UIMA-5883
type:Bug
changed files:
texts:DUCC JobDriver (JD) may cause job to never process all work items if JobProcess (JP) is preempted
Noticed on Apache DUCC demo that Job 14493 had work items total=10001, completed=9986, dispatch=15, and made no further progress.  Looking in work-item-state.json we see the 9986 that have completed and can infer precisely those that did not.  Then looking in the JD log for those not yet complete work items, we see entries similar to:25 Sep 2018 23:28:28,042 WARN ActionGet - T&#91;14&#93; engage seqNo=? remote=uima-ducc-demo-6.8448.25 node=uima-ducc-demo-6 pid=8448 text=process discontinuedLooking at the code, we see that under this condition that the JD has obtained a CAS from the CR, but chooses not to give it to the requesting JP process since JD knows that the requester has been targeted for termination (e.g. preempted).  But the JD forgets to put the CAS back into the queue!  And therefore those CASes never get processed and the Job is hung forevermore. 
issueID:UIMA-5884
type:New Feature
changed files:
texts:Ruta: TYPELIST as matching condition
Ruta: TYPELIST as matching conditionTYPELIST types;a:types{-> UNMARK(a)};At least the IDE does not support that.
issueID:UIMA-5885
type:Bug
changed files:
texts:UIMA-DUCC The JP not waiting if JD has no work
When the JD has no more work to give, the JP thread (only one) should wait for awhile and try again until work is available. This used to work until recent refactoring was done to support pull service JPs. By default the JP will block for 60 secs before trying again. If the service receives SIGTERM while its retry thread is waiting, such thread should be interrupted so that the service can stop. There is no need to wait until the timer (60s) expires.
issueID:UIMA-5886
type:Bug
changed files:
texts:UIMA-DUCC: The ServiceWrapper should catch Throwable to handle java errors
Modify ServiceWrapper to catch Throwable in start(). Also, cleanup PullService.start(). Its catch(ExcecutionException | ServiceException e)is redundant as the start() method throws these already.
issueID:UIMA-5887
type:New Feature
changed files:
texts:UIMA-DUCC: add support for "priming" the PullService with test data
Modify pull service to optionally load tasks from a given directory and sending them through the pipelines before fetching tasks from a remote client. Such feature will prime the node file system buffers and optimize AEs (loading models or any data needed). 
issueID:UIMA-5888
type:Bug
changed files:
texts:Ruta: annotation-based variables are not resetted between CASes
Ruta: annotation-based variables are not resetted between CASes
issueID:UIMA-5889
type:Bug
changed files:
texts:DUCC Web Server (WS) should not show Available for a custom service if no instance is running
It may be confusing to an observer if main Services page shows custom service marked as Available when there is no instance that is actually running. ducc-mon should look at both pinger data and agent data to make the Available determination for custom services.
issueID:UIMA-589
type:Bug
changed files:uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/ui/dialogs/AddSofaDialog.java
texts:The AnalysisEngine Descriptor editor disallows certain chars in Sofa names which documentation says are valid
Within the 2.2.0 distribution documentation here:docs/html/tutorials_and_users_guides/tutorials_and_users_guides.html#ugr.tug.mvs.naming_views_sofas..it states that.."""You can specify a variable number of input or output sofa names, where each name has the same base part, by writing the base part of the name (with no periods), followed by a period character and an asterisk character (.). These denote sofas that have names matching the base part up to the period; for example, names such as base_name_part.TTX_3d would match a specification of base_name_part.."""I interpret this to mean that valid Sofa names may be suffixed with one period followed by an asterisk. Unfortunately, the Analysis Engine Descriptor file editor in Eclipse disallows all periods and asterisks from Sofa names.To reproduce:1. Create a new "Analysis Engine Descriptor File" via Eclipse "New..." dialog2. View the "Capabilities" tab3. Click "Add Sofa" button4. Within "Sofa Name" text field, attempt to type "Document." (period at end)5. Observe that the dialog disallows the period
issueID:UIMA-5890
type:Bug
changed files:
texts:DUCC Web Server (WS) displays old boot date for re-cycled Broker
DUCC WS keeps stale boot data for Broker.  It should get new instance of BrokerHelper for each Daemons page request.
issueID:UIMA-5891
type:Bug
changed files:
texts:UIMA-DUCC: Need a patch for v 2.2.2 for services not stopping
Services reporting FailedInitialization status are not cleaned up and linger on a machine. This only effects services as job processes auto exit on such errors. Modify agent to force process to stop when initialization fails.
issueID:UIMA-5892
type:Improvement
changed files:
texts:Ruta should be more careful about creating new ResourceManagers
Ruta should be more careful about creating new ResourceManagers. This could cause problems with JCas cover class witching because of the class loaders, which may break internal inexing of RutaBasics
issueID:UIMA-5893
type:Brainstorming
changed files:uimaj-core/src/main/java/org/apache/uima/analysis_engine/impl/PrimitiveAnalysisEngine_impl.java
texts:Experiment to schedule multiple threads together at barrier points in pipeline
This Jira covers experimental, disabled code done as an experiment to explore performance implications of putting in barriers in a UIMA pipeline, so that multiple threads would wait at the barrier until a bunch of them had arrived, and then they would be released together. The intuition motivating this was that in highly multi-threaded machines, running the same annotators together, might improve locality-of-reference for l1/l2/l3 memory caches, potentially speeding up execution.After one set of experiments which failed to show improvement (for possibly many reasons, not yet investigated), this code is disabled, but kept in the project in case of future interest.
issueID:UIMA-5894
type:Improvement
changed files:
texts:UIMA-DUCC: the WS broker health checker should create new connection
Current broker health checker in the WS uses Camel's producer to send JMS pings to itself. This producer is optimized to use Connection factory and reuse existing connections. Although this is efficient, it does not test an important scenario where a broker keeps serving existing connections but refuses to accept new ones.So to test broker viability the health checker should create new broker connection for every ping. Spring's JmsTemplate provides such function. Modify Camel route in WebServerConfiguration code to not publish pings. This route should continue to run on the timer but the ping should be dispatched by new code in WebServerStateProcessor.process().This code will use JmsTemplate to publish WebServerStateDuccEvent to the WS topic
issueID:UIMA-5896
type:Task
changed files:uimaj-core/src/main/java/org/apache/uima/internal/util/Misc.java
uimaj-core/src/main/java/org/apache/uima/internal/util/UIMAClassLoader.java
texts:uv3: (java 11) remove small dependency on javax xml bind code
The javax xml bind code was removed from Java 11.  There's a small use of it, that can be eliminated with a custom impl of a string of hex chars to byte array conversion function.  Implement that and use it, and remove the dependency on the javax xml bind module
issueID:UIMA-5897
type:Task
changed files:
texts:parent-pom-12 workaround for rule problem in apache repository
Parent-pom 12 is modified to generate .sha512 checksums.   Due to a bug in the rules for repository.apache.org, these cannot be uploaded unless they (the checksums) are gpg-signed.  Although there's an issue to fix this INFRA-14923 , the work is currently stalled. In the meantime, modify the parent-pom to gpg sign and attach the signatures, for .sha512 checksums.
issueID:UIMA-5899
type:Improvement
changed files:
texts:DUCC ducc_post_install should verify that required /usr/bin/nslookup exists
DUCC may appear to install and start, but Database will be "down".  This is because when system command /usr/bin/nslookup is not present OR will not properly create and maintain its orchestrator_properties_table, which ducc-mon reads to tell if DB is alive.Therefore, ducc_post_install should fail if /usr/bin/nslookup is not present.  OS is not config'd enough!  Use, for example, yum -y install "bind-utils" to add missing executable to Red Hat 7 install. 
issueID:UIMA-59
type:Bug
changed files:
texts:CPE Configurator GUI replaces relative paths with absolute paths when saving CPE descriptor
In the CPE GUI, open a CPE descriptor that contains relative paths to an Analysis Engine or CAS Consumer (for example, examples/descriptors/collection_processing_engine/MeetingFinderCPE_Integrated.xml.Then save the CPE descriptor to a new file.  The realtive paths will have become absolute.  This should not occur.
issueID:UIMA-590
type:Improvement
changed files:
texts:change the way the RegularExpressionAnnotator load the configuration files
since more than one configuration file should be allowed, change the way to load the configuration files. Use a multi-value configuration parameter instead of a UIMA resource.Note: the relative path names must now be resolved manually.
issueID:UIMA-5901
type:Improvement
changed files:
texts:workaround broken invoker transitivity when releasing
The jcasgen-maven-plugin integration tests fail when doing a release:prepare, if the local .m2 doesn't have the non-snapshot versions of dependencies for uimaj projects.I think during release:prepare, the version is modified from e.g. 2.10.3-SNAPSHOT to 2.10.3, and the projects are built but not installed to the .m2 - they're just kept in the maven "reactor".  The maven-invoker-plugin "install" goal, which is supposed to set up a local-repo (used just for testing) with the specified artifacts and their dependencies fails to find the dependencies if they're in the reactor, and findable via normal artifact lookup in the local .m2 and /or remote repositories. This causes the integration tests to fail, but only when running release prepare (again, because this goal is not installing the build artifacts to the local .m2).This seems new behavior - this used to work; I think it's likely related to maven or maven plugin upgrades.Workaround: explicitly put all the dependencies from the uimaj project as "top level" dependencies, and not depend on the transitive resolution mechanism.  If they're lists at the top level, the invoker:install does find them in the reactor and adds them.
issueID:UIMA-5902
type:Improvement
changed files:uimaj-core/src/main/java/org/apache/uima/resource/impl/RelativePathResolver_impl.java
uimaj-core/src/main/java/org/apache/uima/resource/impl/RelativePathResolver_impl.java
texts:use ThreadLocal Context Class Loader for loading UIMA resources
A user has reported getting not-found when trying to load resources in a Tomcat environment, while the same application works fine when run as a separate application.Change the logic for finding UIMA resources via class loaders to consider, if a UIMA Extension class loader is not specified, the Thread Local Context Class Loader.  If that is used, and the resource is not found, for backwards compatibility, try to find using the system class loader.
issueID:UIMA-5903
type:Improvement
changed files:
texts:Ruta: PlainTextAnnotator should consider vertical/line tabs \u000b

issueID:UIMA-5904
type:Bug
changed files:uimaj-core/src/main/java/org/apache/uima/util/impl/DataIO.java
uimaj-core/src/main/java/org/apache/uima/util/impl/DataIO.java
texts:uv3 work around Java 11 build issue with ByteBuffer return type change
See https://github.com/apache/felix/pull/114 . Java 9 introduces overridden methods with covariant return types for the following methods in java.nio.ByteBuffer:    position​(int newPosition)    limit​(int newLimit)    flip​()    clear​()    mark​()    reset​()    rewind​()In Java 9 they all now return ByteBuffer, whereas the methods they override return Buffer,resulting in exceptions like this when executing on Java 8 and lower:java.lang.NoSuchMethodError: java.nio.ByteBuffer.limit(I)Ljava/nio/ByteBufferThis is because the generated byte code includes the static return type of the method, which is not found on Java 8 and lower because the overloaded methods with covariant return types don't exist (the issue appears even with source and target 8 or lower in compilation parameters).The solution is to cast ByteBuffer instances to Buffer before calling the method.
issueID:UIMA-5905
type:Bug
changed files:uimaj-core/src/main/java/org/apache/uima/util/impl/DataIO.java
texts:uv2 work around Java 11 build issue with ByteBuffer return type change
This is the UIMA Version 2 version of UIMA-5904 as a separate issue so they can be resolved separately.See https://github.com/apache/felix/pull/114 .Java 9 introduces overridden methods with covariant return types for the following methods in java.nio.ByteBuffer:position​(int newPosition)limit​(int newLimit)flip​()clear​()mark​()reset​()rewind​()In Java 9 they all now return ByteBuffer, whereas the methods they override return Buffer,resulting in exceptions like this when executing on Java 8 and lower:java.lang.NoSuchMethodError: java.nio.ByteBuffer.limit(I)Ljava/nio/ByteBufferThis is because the generated byte code includes the static return type of the method, which is not found on Java 8 and lower because the overloaded methods with covariant return types don't exist (the issue appears even with source and target 8 or lower in compilation parameters).The solution is to cast ByteBuffer instances to Buffer before calling the method.The only use of these in UIMA is in DataIO class, and only the position(xxx) and limit(xxx) are used.
issueID:UIMA-5906
type:Bug
changed files:
texts:UIMA-AS: Fix NPE when sending thread is interrupted
A user reported the following scenario:when sendAndReceiveCas() of an AS Engine is Thread.interrupt()-ed it can happen that the ActiveMQMessageSender does not have a cacheEntry of the CAS that's sending the request anymore &#91;1&#93; for that a warning is logged.However directly after that the cacheEntry is deferenced leading to a NPE &#91;2&#93;.This exception will then be swallowed by BaseMessageSender &#91;3&#93; and the process will be retried &#91;4&#93;.This behavior is rather unfortunate.It would be benefitial to add a null check at &#91;2&#93; that the cacheEntry is there before accessing ist. Also at &#91;3&#93; instead of swallowing all exceptions they should be logged at debug level. 
issueID:UIMA-5907
type:Bug
changed files:
texts:uima-as dd2spring fails due to classloading setup, after UIMA-5754
UIMA-5754 changed how the bootstrap class loader sets up class path, because after Java 9, it is no longer possible to add classes to the application classpath.  This change breaks how dd2spring sets up the classpath for saxon.  It needs to set this up with a special extra class loader which implements the logic of trying the thread-local context class loader, but if a resource is not found there, then trying the classloader used to load the uima classes (which is no longer the application class loader, which is the value of the ThreadLocal context ClassLoader.
issueID:UIMA-5908
type:Task
changed files:uimaj-core/src/main/java/org/apache/uima/resource/ResourceManagerPearWrapper.java
uimaj-core/src/main/java/org/apache/uima/UIMAFramework.java
uimaj-core/src/main/java/org/apache/uima/resource/ResourceManagerPearWrapper.java
texts:deprecate ResourceManagerPearWrapper - no longer used
Deprecate no-longer used method and its factory methods
issueID:UIMA-5909
type:Improvement
changed files:
texts:UIMA-AS: Make Shutdown hooks optional
In BaseUIMAAsynchronousEngine_impl a shutdown hook gets added to the Runtime which stops the AsynchronousEngine. This makes it impossible for consumers to correclty implement a graceful shutdown behaviour on JVM shutdow. For applications running on Kubernetes the expectation is that on "SIGTERM" the application completes running requests and then exits. SIGTERM also triggers JVM shutdown hooks, the AS shutdown hooks prevent running requests from completing (because the AS Engine is stopped).It also seems like these hooks are never removed which might lead to issues if a lot of AS Engines are initialized.It would be benefitial to make these shutdown hooks optional or remove them outright.
issueID:UIMA-591
type:Bug
changed files:uimaj-examples/src/main/java/org/apache/uima/examples/flow/AdvancedFixedFlowController.java
uimaj-examples/src/main/java/org/apache/uima/examples/flow/AdvancedFixedFlowController.java
texts:In uimaj-examples the AdvancedFixedFlowController method removeAnalysisEngines is incorrect
When an AE is removed from the flow and continueOnRetryFailure is true the CAS falsely skips the next delegate.  A patch is attached.
issueID:UIMA-5910
type:Improvement
changed files:
texts:Set annotation feature with allowedValues
If an annotation type has a feature which range is a subtype of string (https://uima.apache.org/d/uimaj-3.0.0/references.html#ugr.ref.xml.component_descriptor.type_system.string_subtypes ) the usual feature assignments in e.g. CREATE calls do not work. They are not set due to the RutaStream::assignFeatureValue method not having an appropriate case for these range types.In the JCas cover classes however, the features can be directly set with strings.If not setting the feature value is not intended Ruta behavior, I attached a patch that might fix that issue. On my end, this works with all feature assignment methods.
issueID:UIMA-5911
type:Improvement
changed files:
texts:DUCC Resource Manager (RM) should not schedule new work on quiesced Agent
When an agent is quiesced (stop_ducc --quiesce-then-stop) the DB is marked with Agent as "stop" to prevent autostart from restarting the Agent.  The Agent waits for all current work to complete, then self-terminates.  The RM should not schedule any new work on the Agent unless and until start_ducc brings the Agent back to life.
issueID:UIMA-5912
type:Bug
changed files:
texts:DUCC Agent must employ ducc_ling to create job&#39;s log directory
Presently JD creates log directory and sub-directories as <user> according to job specification key "log_directory".  For the non-shared filesystem case, the Agent will start the JP process and the expected log directory will likely not exist on other than the JD node.  As a result, the JP dies.To remedy, the Agent should also create the log directory tree for the JP.  OR provides Agent with <user> log directory. 
issueID:UIMA-5913
type:Bug
changed files:uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/outline/AnnotationOutline.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/outline/AnnotationOutline.java
texts:Nullpointer Exception when closing a UIMAAnnotationViewer window
When closing a  UIMAAnnotationViewer window in eclipse under linux, an unexpected Nullpointer is thrown which renders the UIMA perspectives (AnnotationBrowser, SelectionView, etc.) unusable.Current workaround: Restart eclipse and don't close UIMAAnnotationViewer windows.You can find the error.log in the attachments.   
issueID:UIMA-5914
type:Task
changed files:
texts:Eclipse Update Site for 2.10.2 needs dist svn tag
While checking the eclipse update site for uimaj 2.10.3 after jar-signing the plugins/features, I noticed that although the update site has both the 2.10.2 and 2.10.3 jars, the Eclipse FeaturesAndBundlesPublisher only generated the contents/artifacts jars with the metadata for the 2.10.3.  This wasn't an issue when running the same process for uv3 3.0.1.The consequence: when installing, if you uncheck the box to show just the most recent version, the 2.10.2 version doesn't show up.My educated guess is that this might be caused by having switched the minimum JVM level for 2.10.3 from Java 7 to Java 8, and the Eclispe FeaturesAndBundlesPublisher disallowing mixing of JVM minimum level requirements.  To work around this, I'm planning on doing an "svn tag" on the Eclipse update site for uimaj to create a separately addressable update site for the 2.10.2 (in case anyone needs that).  In the news article and website download page, I'll add a note about this.
issueID:UIMA-5915
type:Bug
changed files:
texts:Ruta: editor reports false postive error for complex feature expression

issueID:UIMA-5916
type:New Feature
changed files:
texts:Ruta: new language element for optional matching condition
Right now, optional matches require the existence of some annotation but fail if the document ends.Example:"A" -> A;"C" -> C;A{-> B} ANY{-PARTOF(C)};no B for text "A".
issueID:UIMA-5917
type:Task
changed files:
texts:fix publish of signed Eclipse Jars for 3.0.1 and 2.10.3
Investigate what went wrong with adding md5 and sha1 signatures after Eclipse Jar signing.  Fix the published site.  Test if site works without sha1 and md5 for installing Eclipse plugins.
issueID:UIMA-5918
type:Improvement
changed files:
texts:Upgrade to UIMAJ-Core 3.0.1
Upgrade to UIMAJ-Core 3.0.1
issueID:UIMA-5919
type:Improvement
changed files:
texts:Upgrade to UIMAJ-Core 2.10.3
Upgrade to UIMAJ-Core 2.10.3
issueID:UIMA-592
type:Improvement
changed files:
texts:add feature value normalization for RegEx Annotator
feature values extracted from regular expression matches often should be normalized before they are added as feature value to an annotation.With this improvement a built-in normalization is provided and a custom normalization can be implemented.
issueID:UIMA-5920
type:Improvement
changed files:uimaj-ep-cas-editor-ide/src/main/java/org/apache/uima/caseditor/ide/CasEditorIdePlugin.java
uimaj-ep-cas-editor-ide/src/main/java/org/apache/uima/caseditor/ide/CasEditorIdePreferencePage.java
uimaj-ep-cas-editor-ide/src/main/java/org/apache/uima/caseditor/ide/CasEditorPerspectiveFactory.java
uimaj-ep-cas-editor-ide/src/main/java/org/apache/uima/caseditor/ide/CasEditorPreferencePage.java
uimaj-ep-cas-editor-ide/src/main/java/org/apache/uima/caseditor/ide/DefaultCasDocumentProvider.java
uimaj-ep-cas-editor-ide/src/main/java/org/apache/uima/caseditor/ide/NlpProject.java
uimaj-ep-cas-editor-ide/src/main/java/org/apache/uima/caseditor/ide/WorkspaceResourceDialog.java
uimaj-ep-cas-editor-ide/src/main/java/org/apache/uima/caseditor/ide/searchstrategy/TypeSystemSearchStrategyFactory.java
uimaj-ep-cas-editor-ide/src/main/java/org/apache/uima/caseditor/ide/wizards/DocumentImportStructureProvider.java
uimaj-ep-cas-editor-ide/src/main/java/org/apache/uima/caseditor/ide/wizards/ImportDocumentWizard.java
uimaj-ep-cas-editor-ide/src/main/java/org/apache/uima/caseditor/ide/wizards/ImportDocumentWizardPage.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/CasEditorPlugin.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/Images.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/core/model/DefaultColors.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/core/model/dotcorpus/DotCorpus.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/core/model/dotcorpus/DotCorpusSerializer.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/AbstractAnnotationDocumentListener.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/AbstractDocument.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/AbstractDocumentListener.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/AnnotationDocument.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/AnnotationEditor.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/AnnotationEditorPreferenceInitializer.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/AnnotationEditorPreferencePage.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/AnnotationEditorSelection.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/AnnotationEditorView.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/AnnotationSelectionListener.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/AnnotationStyle.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/AnnotationStyleChangeListener.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/ArrayValue.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/CasDocumentProvider.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/CasDocumentProviderFactory.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/CasEditorView.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/CasEditorViewPage.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/CustomInformationControl.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/DocumentUimaImpl.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/FeatureStructureSelection.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/FeatureStructureSelectionProvider.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/FeatureValue.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/FindAnnotateAction.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/FindAnnotateDialog.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/IAnnotationEditorModifyListener.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/ModelFeatureStructure.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/QuickTypeSelectionDialog.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/SubPageSite.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/TextDocumentProvider.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/action/DeleteFeatureStructureAction.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/action/LowerLeftAnnotationSideAction.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/action/LowerRightAnnotationSideAction.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/action/MergeAnnotationAction.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/action/WideLeftAnnotationSideAction.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/action/WideRightAnnotationSideAction.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/annotation/BackgroundDrawingStrategy.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/annotation/BoxDrawingStrategy.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/annotation/BracketDrawingStrategy.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/annotation/DrawingStyle.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/annotation/EclipseAnnotationPeer.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/annotation/TagDrawingStrategy.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/annotation/TextColorDrawingStrategy.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/annotation/TokenDrawingStrategy.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/context/AnnotationEditingControl.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/context/AnnotationEditingControlCreator.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/contextmenu/ModeMenu.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/contextmenu/ShowAnnotationsMenu.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/contextmenu/TypeMenu.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/editview/CreateFeatureStructureDialog.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/editview/EditView.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/editview/EditViewPage.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/editview/FeatureColumnLabelProvider.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/editview/FeatureStructureContentProvider.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/editview/ValueColumnLabelProvider.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/editview/validator/ByteCellEditorValidator.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/editview/validator/CellEditorValidatorFacotory.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/editview/validator/FloatCellEditorValidator.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/editview/validator/IntegerCellEditorValidator.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/editview/validator/LongCellEditorValidator.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/editview/validator/ShortCellEditorValidator.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/fsview/FeatureStructureBrowserView.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/fsview/FeatureStructureBrowserViewPage.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/fsview/FeatureStructureLabelProvider.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/fsview/TypeCombo.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/outline/AnnotationOutline.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/outline/AnnotationTreeNode.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/outline/AnnotationTreeNodeList.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/outline/AnnotationTypeTreeNode.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/outline/ModeSensitiveContentProvider.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/outline/OutlineContentProviderBase.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/outline/OutlineLabelProvider.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/outline/OutlinePageBook.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/outline/SwitchStyleAction.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/outline/TypeGroupedContentProvider.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/styleview/AnnotationStyleView.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/styleview/AnnotationStyleViewPage.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/styleview/AnnotationTypeNode.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/util/AnnotationSelection.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/util/ContainingConstraint.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/util/ObjectTransfer.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/util/Span.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/util/StrictTypeConstraint.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/ui/property/AnnotationPropertyPage.java
uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/ui/property/EditorAnnotationPropertyPage.java
texts:Refactor the CAS Editor to use Java 8 features
All the Cas Editor code was written before more modern features of Java 7 and 8 became available. It would be nice to refactor the source code and make use of modern language features where it makes sense.
issueID:UIMA-5921
type:Improvement
changed files:PearPackagingMavenPlugin/src/main/java/org/apache/uima/pear/tools/PearPackagingMojo.java
jcasgen-maven-plugin/src/main/java/org/apache/uima/tools/jcasgen/maven/JCasGenMojo.java
uimaj-bootstrap/src/main/java/org/apache/uima/bootstrap/UimaBootstrap.java
uimaj-core/src/main/java/org/apache/uima/UIMAFramework.java
uimaj-core/src/main/java/org/apache/uima/UimaContextHolder.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/asb/impl/ASB_impl.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/impl/AggregateAnalysisEngine_impl.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/impl/AnalysisEngineDescription_impl.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/impl/AnalysisEngineManagementImpl.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/impl/MultiprocessingAnalysisEngine_impl.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/impl/PearAnalysisEngineWrapper.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/impl/ResultSpecification_impl.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/impl/RsFeats.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/impl/RsFullFeatNames.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/impl/RsLang.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/impl/RsLangs.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/impl/RsType.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/impl/RsTypesMap.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/impl/compatibility/AnnotatorAdapter.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/impl/compatibility/CasConsumerAdapter.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/impl/compatibility/CollectionReaderAdapter.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/service/impl/AnalysisEngineService_impl.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/AllFSs.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/AnnotationTreeNodeImpl.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/BinaryCasSerDes4.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/BinaryCasSerDes6.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/BuiltinTypeKinds.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/CASImpl.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/CASMgrSerializer.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/CASSerializer.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/CasCompare.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/CasSerializerSupport.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/CasTypeSystemMapper.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/CommonSerDesSequential.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/ConstraintFactoryImpl.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/DebugFSLogicalStructure.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FSClassRegistry.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FSFloatConstraintImpl.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FSIndexComparatorImpl.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FSIndexRepositoryImpl.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FSTypeConstraintImpl.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FSsTobeAddedback.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FeaturePathImpl.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FeatureStructureImplC.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FeatureValuePathImpl.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FilteredIterator.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FsIndex_annotation.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FsIndex_bag.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FsIndex_flat.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FsIndex_iicp.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FsIndex_set_sorted.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FsIndex_snapshot.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FsIterator_aggregation_common.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FsIterator_backwards.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FsIterator_bag.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FsIterator_bag_pear.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FsIterator_limited.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FsIterator_set_sorted_pear.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FsIterator_subtypes_ordered.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FsIterator_subtypes_snapshot.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/LLUnambiguousIteratorImpl.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/LinearTypeOrderBuilderImpl.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/LowLevelIterator.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/OutOfTypeSystemData.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/SelectFSs_impl.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/StringHeap.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/Subiterator.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/TypeImpl.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/TypeSystem2Xml.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/TypeSystemImpl.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/XCASDeserializer.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/XmiCasDeserializer.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/XmiCasSerializer.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/XmiSerializationSharedData.java
uimaj-core/src/main/java/org/apache/uima/cas_data/impl/CasDataImpl.java
uimaj-core/src/main/java/org/apache/uima/cas_data/impl/CasDataUtils.java
uimaj-core/src/main/java/org/apache/uima/cas_data/impl/FeatureStructureImpl.java
uimaj-core/src/main/java/org/apache/uima/collection/impl/CasConsumerDescription_impl.java
uimaj-core/src/main/java/org/apache/uima/collection/impl/CasInitializerDescription_impl.java
uimaj-core/src/main/java/org/apache/uima/collection/impl/CollectionReaderDescription_impl.java
uimaj-core/src/main/java/org/apache/uima/flow/impl/CapabilityLanguageFlowController.java
uimaj-core/src/main/java/org/apache/uima/flow/impl/FixedFlowController.java
uimaj-core/src/main/java/org/apache/uima/impl/CompositeResourceFactory_impl.java
uimaj-core/src/main/java/org/apache/uima/impl/UimaContext_ImplBase.java
uimaj-core/src/main/java/org/apache/uima/internal/util/AnalysisEnginePool.java
uimaj-core/src/main/java/org/apache/uima/internal/util/CharArraySpanMap.java
uimaj-core/src/main/java/org/apache/uima/internal/util/CharacterUtils.java
uimaj-core/src/main/java/org/apache/uima/internal/util/CommandLineParser.java
uimaj-core/src/main/java/org/apache/uima/internal/util/CopyOnWriteOrderedFsSet_array.java
uimaj-core/src/main/java/org/apache/uima/internal/util/GraphNode.java
uimaj-core/src/main/java/org/apache/uima/internal/util/Misc.java
uimaj-core/src/main/java/org/apache/uima/internal/util/OrderedFsSet_array2.java
uimaj-core/src/main/java/org/apache/uima/internal/util/ResourcePool.java
uimaj-core/src/main/java/org/apache/uima/internal/util/StringToIntMap.java
uimaj-core/src/main/java/org/apache/uima/internal/util/SymbolTable.java
uimaj-core/src/main/java/org/apache/uima/internal/util/UIMAClassLoader.java
uimaj-core/src/main/java/org/apache/uima/internal/util/rb_trees/IntRBTNode.java
uimaj-core/src/main/java/org/apache/uima/internal/util/rb_trees/RedBlackTree.java
uimaj-core/src/main/java/org/apache/uima/jcas/JCasRegistry.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/CommonList.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/FSArray.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/FSArrayList.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/FSList.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/Int2FS.java
uimaj-core/src/main/java/org/apache/uima/jcas/impl/JCasImpl.java
uimaj-core/src/main/java/org/apache/uima/pear/tools/InstallationController.java
uimaj-core/src/main/java/org/apache/uima/pear/tools/InstallationDescriptor.java
uimaj-core/src/main/java/org/apache/uima/pear/tools/InstallationProcessor.java
uimaj-core/src/main/java/org/apache/uima/pear/tools/PackageBrowser.java
uimaj-core/src/main/java/org/apache/uima/pear/util/FileUtil.java
uimaj-core/src/main/java/org/apache/uima/pear/util/MessageRouter.java
uimaj-core/src/main/java/org/apache/uima/pear/util/ProcessUtil.java
uimaj-core/src/main/java/org/apache/uima/pear/util/UIMAUtil.java
uimaj-core/src/main/java/org/apache/uima/resource/CasDefinition.java
uimaj-core/src/main/java/org/apache/uima/resource/Resource_ImplBase.java
uimaj-core/src/main/java/org/apache/uima/resource/impl/CasManager_impl.java
uimaj-core/src/main/java/org/apache/uima/resource/impl/ConfigurationManagerImplBase.java
uimaj-core/src/main/java/org/apache/uima/resource/impl/ConfigurationManager_impl.java
uimaj-core/src/main/java/org/apache/uima/resource/impl/FileLanguageResource_impl.java
uimaj-core/src/main/java/org/apache/uima/resource/impl/RelativePathResolver_impl.java
uimaj-core/src/main/java/org/apache/uima/resource/impl/ResourceCreationSpecifier_impl.java
uimaj-core/src/main/java/org/apache/uima/resource/impl/ResourceManager_impl.java
uimaj-core/src/main/java/org/apache/uima/resource/impl/Session_impl.java
uimaj-core/src/main/java/org/apache/uima/resource/metadata/impl/Capability_impl.java
uimaj-core/src/main/java/org/apache/uima/resource/metadata/impl/ConfigurationGroup_impl.java
uimaj-core/src/main/java/org/apache/uima/resource/metadata/impl/ConfigurationParameterDeclarations_impl.java
uimaj-core/src/main/java/org/apache/uima/resource/metadata/impl/ConfigurationParameterSettings_impl.java
uimaj-core/src/main/java/org/apache/uima/resource/metadata/impl/ConfigurationParameter_impl.java
uimaj-core/src/main/java/org/apache/uima/resource/metadata/impl/FsIndexCollection_impl.java
uimaj-core/src/main/java/org/apache/uima/resource/metadata/impl/MetaDataObject_impl.java
uimaj-core/src/main/java/org/apache/uima/resource/metadata/impl/ResourceManagerConfiguration_impl.java
uimaj-core/src/main/java/org/apache/uima/resource/metadata/impl/TypePriorities_impl.java
uimaj-core/src/main/java/org/apache/uima/resource/metadata/impl/TypePriorityList_impl.java
uimaj-core/src/main/java/org/apache/uima/resource/metadata/impl/TypeSystemDescription_impl.java
uimaj-core/src/main/java/org/apache/uima/util/AnalysisEnginePerformanceReports.java
uimaj-core/src/main/java/org/apache/uima/util/AnalysisEngineUtils.java
uimaj-core/src/main/java/org/apache/uima/util/CasCopier.java
uimaj-core/src/main/java/org/apache/uima/util/CasCreationUtils.java
uimaj-core/src/main/java/org/apache/uima/util/CasPool.java
uimaj-core/src/main/java/org/apache/uima/util/CasToInlineXml.java
uimaj-core/src/main/java/org/apache/uima/util/FileUtils.java
uimaj-core/src/main/java/org/apache/uima/util/JCasPool.java
uimaj-core/src/main/java/org/apache/uima/util/SimpleResourceFactory.java
uimaj-core/src/main/java/org/apache/uima/util/TCasToInlineXml.java
uimaj-core/src/main/java/org/apache/uima/util/TypeSystemUtil.java
uimaj-core/src/main/java/org/apache/uima/util/XMLSerializer.java
uimaj-core/src/main/java/org/apache/uima/util/impl/CasPoolManagementImpl.java
uimaj-core/src/main/java/org/apache/uima/util/impl/DataIO.java
uimaj-core/src/main/java/org/apache/uima/util/impl/OptimizeStrings.java
uimaj-core/src/main/java/org/apache/uima/util/impl/ProcessTraceEvent_impl.java
uimaj-core/src/main/java/org/apache/uima/util/impl/ProcessTrace_impl.java
uimaj-core/src/main/java/org/apache/uima/util/impl/Settings_impl.java
uimaj-core/src/main/java/org/apache/uima/util/impl/XMLParser_impl.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/cpm/container/deployer/RunnableApplication.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/MultiPageEditor.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/ui/AbstractSectionParm.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/files/MultiResourceSelectionDialog.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/files/PickOverrideKeysAndParmName.java
uimaj-ep-launcher/src/main/java/org/apache/uima/ep_launcher/AnalysisEngineLaunchConfigurationDelegate.java
uimaj-ep-launcher/src/main/java/org/apache/uima/ep_launcher/ui/AnalysisEngineMainTab.java
uimaj-examples/src/main/java/org/apache/uima/examples/cpe/FileSystemCollectionReader.java
uimaj-examples/src/main/java/org/apache/uima/examples/flow/AdvancedFixedFlowController.java
uimaj-json/src/main/java/org/apache/uima/json/JsonCasSerializer.java
uimaj-tools/src/main/java/org/apache/uima/tools/cvd/FSNode.java
uimaj-tools/src/main/java/org/apache/uima/tools/cvd/FSTreeModel.java
uimaj-tools/src/main/java/org/apache/uima/tools/cvd/FSTreeNode.java
uimaj-tools/src/main/java/org/apache/uima/tools/cvd/MainFrame.java
uimaj-tools/src/main/java/org/apache/uima/tools/cvd/MultiMarkup.java
uimaj-tools/src/main/java/org/apache/uima/tools/cvd/RecentFilesList.java
uimaj-tools/src/main/java/org/apache/uima/tools/docanalyzer/AnnotationViewerDialog.java
uimaj-tools/src/main/java/org/apache/uima/tools/docanalyzer/DocumentAnalyzer.java
uimaj-tools/src/main/java/org/apache/uima/tools/jcasgen/Jg.java
uimaj-tools/src/main/java/org/apache/uima/tools/viewer/CasAnnotationViewer.java
uimaj-v3migration-jcas/src/main/java/org/apache/uima/migratev3/jcas/MigrateJCas.java
texts:Refactor code to use Java 8 collection features
The code was refactored to use new Java 8 language level features, such as diamond operator , List.sort, Map.putIfAbsent, Map.computeIfAbsent and  removeIf.To review this patch, please search in the patch for the above mentioned methods. All refactoring was done automatically and reviewed by me.
issueID:UIMA-5922
type:Improvement
changed files:jVinci/src/main/java/org/apache/vinci/transport/vns/service/Service.java
jVinci/src/main/java/org/apache/vinci/transport/vns/service/VNS.java
uimaj-adapter-soap/src/main/java/org/apache/uima/adapter/soap/AxisResourceServiceManager.java
uimaj-adapter-vinci/src/main/java/org/apache/uima/adapter/vinci/VinciAnalysisEngineServiceStub.java
uimaj-adapter-vinci/src/main/java/org/apache/uima/adapter/vinci/VinciBinaryAnalysisEngineServiceStub.java
uimaj-core/src/main/java/org/apache/uima/UIMAFramework.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/impl/MultiprocessingAnalysisEngine_impl.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/service/impl/AnalysisEngineService_impl.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/BinaryCasSerDes.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/BinaryCasSerDes4.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/CASImpl.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/CasCompare.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/CommonSerDesSequential.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/DebugFSLogicalStructure.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FSClassRegistry.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FSFloatConstraintImpl.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FeatureValuePathImpl.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/XCASSerializer.java
uimaj-core/src/main/java/org/apache/uima/cas_data/impl/PrimitiveValueImpl.java
uimaj-core/src/main/java/org/apache/uima/internal/util/StringToIntMap.java
uimaj-core/src/main/java/org/apache/uima/internal/util/SymbolTable.java
uimaj-core/src/main/java/org/apache/uima/uimacpp/UimacppAnalysisComponent.java
uimaj-core/src/main/java/org/apache/uima/util/CasCreationUtils.java
uimaj-core/src/main/java/org/apache/uima/util/impl/Settings_impl.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/cpm/BaseCPMImpl.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/cpm/container/CPEFactory.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/cpm/container/ProcessingContainer_Impl.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/cpm/container/deployer/VinciTAP.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/cpm/engine/ArtifactProducer.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/cpm/engine/CPMEngine.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/metadata/cpe/CpeCasProcessorsImpl.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/ui/TypeSection.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/ui/dialogs/AddCapabilityFeatureDialog.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/ui/dialogs/AddCapabilityTypeDialog.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/ui/dialogs/AddFeatureDialog.java
uimaj-ep-jcasgen/src/main/java/org/apache/uima/jcas/jcasgenp/JgPluginRunner.java
uimaj-ep-launcher/src/main/java/org/apache/uima/ep_launcher/ui/AnalysisEngineMainTab.java
uimaj-examples/src/main/java/org/apache/uima/examples/cas/RegExAnnotator.java
uimaj-examples/src/main/java/org/apache/uima/examples/casMultiplier/SimpleTextSegmenter.java
uimaj-examples/src/main/java/org/apache/uima/examples/xmi/UimaTypeSystem2Ecore.java
uimaj-examples/src/main/java/org/apache/uima/tutorial/ex4/MeetingAnnotator.java
uimaj-tools/src/main/java/org/apache/uima/tools/cpm/ConfigField.java
uimaj-tools/src/main/java/org/apache/uima/tools/cpm/MetaDataPanel.java
uimaj-tools/src/main/java/org/apache/uima/tools/cvd/MainFrame.java
uimaj-tools/src/main/java/org/apache/uima/tools/stylemap/ColorParser.java
uimaj-tools/src/main/java/org/apache/uima/tools/stylemap/StyleMapEditor.java
uimaj-tools/src/main/java/org/apache/uima/tools/stylemap/StyleMapEntry.java
uimaj-tools/src/main/java/org/apache/uima/tools/util/gui/IntegerField.java
uimaj-tools/src/main/java/org/apache/uima/tools/util/gui/SliderField.java
uimaj-tools/src/main/java/org/apache/uima/tools/viewer/CasTreeViewer.java
uimaj-v3migration-jcas/src/main/java/org/apache/uima/migratev3/jcas/MigrateJCas.java
texts:Remove unnecessary explicit boxing and unboxing
Java 5 supports automatic boxing and unboxing which makes the code easier to read. Lets remove all explicit boxing and unboxing.
issueID:UIMA-5923
type:Improvement
changed files:uimaj-core/src/main/java/org/apache/uima/util/FileUtils.java
uimaj-core/src/main/java/org/apache/uima/pear/tools/InstallationController.java
uimaj-core/src/main/java/org/apache/uima/pear/tools/LocalInstallationAgent.java
uimaj-core/src/main/java/org/apache/uima/pear/util/FileUtil.java
uimaj-core/src/main/java/org/apache/uima/util/FileUtils.java
texts:Deprecate methods in FileUtil and FileUtils which duplicate java.nio.file.Files
These methods are now part of Java 8 and it would be better to use these instead. Since the methods are part of the public API they need to be deprecated first before they can be removed. This will give our users some time to migrate to the Java 8 methods as well.
issueID:UIMA-5925
type:Bug
changed files:uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/editor/AnnotationStyle.java
texts:Fix null error in AnnotationStyle.equals
If the configuration string is null and equals is called a NullPointerException will be thrown.
issueID:UIMA-5926
type:Improvement
changed files:
texts:Remove IBM UIMA to Apache UIMA migration tool
UIMA moved to Apache roughly 12 years ago. There should be no need to keep the IBM to Apache migration tool. The users who still need to migrate can migrate to UIMA 2 and then migrate to UIMA 3.
issueID:UIMA-5927
type:Bug
changed files:
texts:replace uv3 eclipse update site with signed Jars
It seems the eclipse udpate site for uv3 has the unsigned jars.  The site works, but asks the user to accept unsigned jars.  Testing using the built-and-signed jars works without that annoyance.  It appears these were never uploaded for uv3.
issueID:UIMA-5928
type:Improvement
changed files:
texts:DUCC Agent quiesce should wait (forever) for non-fairshare displatchables to complete before shutting down
When stop_ducc -c agent@node --quiesce-then-stop is issued, the agent should immediately stop any managed PIDs running in a pre-emptable class, but wait for all managed PIDs running in a non-preemptable class to be terminated before stopping.
issueID:UIMA-5929
type:Improvement
changed files:
texts:Add exists() method to CasUtil
Add the exists() method we already have in JCasUtil also to CasUtil
issueID:UIMA-593
type:Bug
changed files:
texts:Cas Editor: The show menu in the annotation editor can not hide annotations
This bug was caused by UIMA-571.
issueID:UIMA-5930
type:Improvement
changed files:
texts:use StandardCharsets constants if possible
In some cases it is possible to replace charset strings with charset constants.There are two advantages in doing this: If somebody introduces a typo in the constant name that will result in a compiler error Error handling for the UnsupportedEncodingException can be removed
issueID:UIMA-5931
type:Improvement
changed files:uimaj-tools/src/main/java/org/apache/uima/tools/docanalyzer/AnnotationViewerDialog.java
uimaj-tools/src/main/java/org/apache/uima/tools/jcasgen/Jg.java
uimaj-tools/src/main/java/org/apache/uima/tools/pear/merger/PMUimaAgent.java
uimaj-tools/src/main/java/org/apache/uima/tools/util/htmlview/AnnotationViewGenerator.java
uimaj-core/src/main/java/org/apache/uima/internal/util/SerializationUtils.java
uimaj-core/src/main/java/org/apache/uima/internal/util/SystemEnvReader.java
uimaj-core/src/main/java/org/apache/uima/pear/tools/InstallationController.java
uimaj-core/src/main/java/org/apache/uima/pear/tools/InstallationDescriptor.java
uimaj-core/src/main/java/org/apache/uima/pear/tools/InstallationDescriptorHandler.java
uimaj-core/src/main/java/org/apache/uima/pear/tools/InstallationProcessor.java
uimaj-core/src/main/java/org/apache/uima/pear/tools/LocalInstallationAgent.java
uimaj-core/src/main/java/org/apache/uima/pear/util/FileUtil.java
uimaj-core/src/main/java/org/apache/uima/resource/impl/RelativePathResolver_impl.java
uimaj-core/src/main/java/org/apache/uima/util/FileUtils.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/cpm/Checkpoint.java
uimaj-ep-launcher/src/main/java/org/apache/uima/ep_launcher/RemoteLauncher.java
uimaj-examples/src/main/java/org/apache/uima/examples/cpe/XCasWriterCasConsumer.java
uimaj-examples/src/main/java/org/apache/uima/examples/xmi/Ecore2UimaTypeSystem.java
uimaj-examples/src/main/java/org/apache/uima/examples/xmi/XmiCollectionReader.java
uimaj-examples/src/main/java/org/apache/uima/examples/xmi/XmiWriterCasConsumer.java
uimaj-examples/src/main/java/org/apache/uima/tutorial/ex6/StringMapResource_impl.java
uimaj-tools/src/main/java/org/apache/uima/tools/components/XCasWriterCasConsumer.java
uimaj-tools/src/main/java/org/apache/uima/tools/components/XmiWriterCasConsumer.java
jVinci/src/main/java/org/apache/vinci/transport/document/XMLToXTalk.java
jVinci/src/main/java/org/apache/vinci/transport/util/TransportableConverter.java
jVinci/src/main/java/org/apache/vinci/transport/vns/service/ServiceRegistry.java
jVinci/src/main/java/org/apache/vinci/transport/vns/service/VNS.java
uimaj-adapter-soap/src/main/java/org/apache/uima/adapter/soap/BinaryDeserializer.java
uimaj-adapter-soap/src/main/java/org/apache/uima/adapter/soap/axis11/BinaryDeserializer_Axis11.java
texts:Use try-with-resources where possible
The try-with-resources statement allows writing code dealing with resources in a more compact way. It is no longer necessary to write finally blocks by hand. This patch replaces as many as possible try statements with the try-with-resources statement.
issueID:UIMA-5933
type:Bug
changed files:
texts:UIMA-DUCC: improve pull service http client error handling
The pull service error handling in HttpServiceTransport.dispatch() is not optimal. While it is catching and handling some exceptions likeNoHttpResponseExceptionHttpHostConnectExceptionUnknownHostExceptionits not handling other ones that HttpClient.execute() may throw. Simplify handling of exceptions from HttpClient.execute() by simply catching any IOException and automatically retry until success. The HttpClient.execute() API is documented as:HttpResponse org.apache.http.client.HttpClient.execute(HttpUriRequest request) throws IOException, ClientProtocolException Note: the ClientProtocolException is a kind of (extends from) IOExceptionAlso, the http client may succeed but returns status code != 200. In such case, we should also retry.
issueID:UIMA-5935
type:Bug
changed files:uimaj-core/src/main/java/org/apache/uima/resource/impl/ResourceManager_impl.java
uimaj-core/src/main/java/org/apache/uima/resource/impl/ResourceManager_impl.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/impl/PearAnalysisEngineWrapper.java
uimaj-core/src/main/java/org/apache/uima/resource/impl/ResourceManager_impl.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/impl/PearAnalysisEngineWrapper.java
uimaj-core/src/main/java/org/apache/uima/resource/impl/ResourceManager_impl.java
texts:Destroy the ResourceManager on destroy of a pear
This bug is related to bug UIMA-5799 . The bug seems not completely fixed, since the files are still being accessed after trying to delete them. This behavior can be shown by the tool 'lsof' (see screenshot). There seems still access to the resources of a pear on the file system, which denies the complete deletion on the file system after uninstalling it (they are marked as deleted but are not actually removed). Potential cause:The class PearAnalysisEngineWrapper creates and caches resource managers. The elements in that Cache (Java map) are never explicitly removed, not even in the destroy method.
issueID:UIMA-5938
type:Task
changed files:
texts:UIMA-AS: upgrade to depend on uima v. 2.10.3
Use the latest uima version 2.10.3
issueID:UIMA-5939
type:Task
changed files:
texts:UIMA-AS: upgrade to uima pom v12
Use the latest uima parent pom
issueID:UIMA-594
type:Improvement
changed files:
texts:update RegexAnnotator with custom anntoation validator
In some cases it is necessary to validate a regular expression match with some custom code before an annotation is created. The the custom validator extension this kind of processing is possible.
issueID:UIMA-5941
type:Bug
changed files:
texts:Remove unused imports

issueID:UIMA-5942
type:Improvement
changed files:
texts:UIMA-DUCC: the pullservice JUnit tests use static port 8080
Pull service JUnit tests use static port (8080) for its TAS mock up client. This is a commonly used port by http servers which may be running on a node. The client's Jetty should use less obvious port say 12222 as base and test port availability before using it. Use java ServerSocket until a valid (open) port is found and use that.
issueID:UIMA-5945
type:Improvement
changed files:
texts:Ruta: evaluate inlined rules as condition only if the match has not failed yet

issueID:UIMA-5946
type:Bug
changed files:
texts:Ruta: inlined rule as condition at wildcard

issueID:UIMA-5947
type:Bug
changed files:
texts:Ruta: regex rule for subtoken annotation fails PARTOF
PACKAGE uima.ruta.training;DECLARE Keyword;DECLARE Entity(STRING value);DECLARE Digit;"100001" -> Keyword;"[0-9]" -> Digit;ADDRETAINTYPE(WS);a:(Keyword ANY*{PARTOF({W,Digit})}){-> Entity, Entity.value = a.ct};REMOVERETAINTYPE(WS);
issueID:UIMA-5948
type:Task
changed files:
texts:UIMA-AS: upgrade dependencies (ActiveMQ, Camel, HttpClient)
Update dependencies to pick up security vulnerability fixes
issueID:UIMA-5949
type:Task
changed files:
texts:UIMA-DUCC: Upgrade Cassandra DB
Ducc uses an old version of Cassandra. Upgrade to the latest (3.11.3). Also upgrade Cassandra driver and any dependencies
issueID:UIMA-595
type:New Feature
changed files:
texts:add Rule to the RegexAnnotator to detect credit card numbers

issueID:UIMA-5950
type:Improvement
changed files:
texts:Documentation of default value for removeBasics parameter in RutaEngine
The documentation and JavaDoc specify the default value of the RutaEngine's removeBasics parameter as being true. The default value found is however false. /** * This parameter specifies whether the inference annotations created by the analysis engine * should be removed after processing the CAS. The default value is set to true. */ public static final String PARAM_REMOVE_BASICS = "removeBasics"; @ConfigurationParameter(name = PARAM_REMOVE_BASICS, mandatory = false, defaultValue = "false") private Boolean removeBasics;
issueID:UIMA-5951
type:Bug
changed files:
texts:Ruta: wrong initialization of LazyFeature in stacked feature match
parsed initialzed with Measurement:m:Measurement{-> LOG(""+m.ct + ": "+m.unit.parsed)};
issueID:UIMA-5952
type:New Feature
changed files:
texts:Ruta: type namespace prefix for missing script in rules param should be configurable

issueID:UIMA-5953
type:Bug
changed files:
texts:UIMA_DUCC: default timeout in DefaultNoTaskAvailableStrategy is too long
The DefaultNoTaskAvailableStrategy implements a default strategy for waiting when task is not available. The default waitTime=30000. However the code uses the following: waitAwhileCondition.await(waitTime, TimeUnit.SECONDS);Change the default timeout to waitTime=30
issueID:UIMA-5954
type:Bug
changed files:
texts:UIMA-DUCC: The new JP is not generating DD
Recent JP refactoring introduced a bug preventing code from generating a DD when running in an environment with no shared file system. Whats missing is a test for existence of a given DD. The code assumes that the DD exists and fails if JP runs on a worker node without shared FS.
issueID:UIMA-5955
type:New Feature
changed files:
texts:Ruta: allow multiple inlined rule blocks of same type at one rule element

issueID:UIMA-5956
type:Improvement
changed files:
texts:DUCC WS copyright 2019

issueID:UIMA-5958
type:Improvement
changed files:
texts:DUCC resources distribution tool
DUCC should provide an admin convenience tool for distributing its resources directory, in the case of DUCC daemons+agents not utilizing a shared filesystem.
issueID:UIMA-5959
type:Bug
changed files:
texts:UIMA_DUCC: The DefaultNoTaskAvailableStrategy not accepting 0 in ctor
The DefaultNoTaskAvailableStrategy ignores 0 for waitTimeInSecs. It should accept it to allow this code to not wait.
issueID:UIMA-596
type:Improvement
changed files:
texts:Cas Editor: Do not show DocumentAnnotation by default
The editor should not show the DocumentAnnotation by default.
issueID:UIMA-5960
type:Bug
changed files:
texts:UIMA-DUCC: Modify pull service to synchronize threads
Pull service is not polling for tasks correctly. Currently it allows threads to send GET requests concurrently. With many services running each with many threads the driver may get easily overrun. Instead each service should allow one GET request at a time. So there is only one thread pulling task at a time. Other threads block until a thread receives a task. If no task is given, a single thread will retry until a task becomes available or service is stopped. There will be no waiting on the driver/client side. 
issueID:UIMA-5962
type:Task
changed files:
texts:UIMA-DUCC: create new project for JCas specific classes
Currently uima-ducc-user project includes classes which use JCas cover classes generated with uima V2. To migrate DUCC to uima V3 these JCas cover classes will no longer work. To support uima V3, Ducc code needs refactoring to remove dependence on JCas. For backwards compatibility, classes with JCas support will move to a new project (uima-ducc-jcas). The maven assembly script will include this project jar in the root distribution (tar) next to uima-ducc-user.jar. 
issueID:UIMA-5963
type:Improvement
changed files:
texts:UIMA-DUCC: parameterize client protocol handler retry timeout
Currently, the client's protocol handler retry code which handles no tasks available scenario uses hard coded values for retry count and wait time between retries. Both of these params should be configurable by an application. Both the DuccServiceDriver and DuccServiceProtocolHandler expose initialize() method with a single param of type Properties. Through this interface an application can pass in both properties using new property names defined in ServiceDriver class: public static String DriverTaskRetryCount = "driver.task.retry.count"; public static String DriverTaskWaitTime = "driver.task.wait.time.millis"; 
issueID:UIMA-5965
type:Bug
changed files:
texts:UIMA-DUCC: pullservice client protocol handler synchronization not working
The getMetaMetaTask() method synchronization is not working as expected. The retry loop uses java wait() which does not lock the method and allows multiple threads to run concurrently. Use Thread.currentThread().sleep() instead
issueID:UIMA-5967
type:Bug
changed files:
texts:MARKTABLE throws NullPointerException
The Ruta expressionWORDTABLE Dict_Allgemein_Eigenschaften_Table = 'test.csv';DECLARE Annotation Allgemein_Eigenschaften(    STRING basic_lemma, STRING pos, STRING query_attribute, STRING data_type, STRING standard_unit,    STRING search_for, STRING lemma_is);Document{->MARKTABLE(Allgemein_Eigenschaften, 1, Dict_Allgemein_Eigenschaften_Table,    "basic_lemma" = 2, "pos"=3, "query_attribute"=4, "data_type"=5,                         "standard_unit"=6, "search_for"=7, "lemma_is"=8)}with the dictionaryAktion;Aktion;N;aktionen;str;;field;throws following exceptionJan 24, 2019 7:48:40 AM org.apache.uima.analysis_engine.impl.PrimitiveAnalysisEngine_impl callAnalysisComponentProcess(445)SCHWERWIEGEND: Exception occurredorg.apache.uima.analysis_engine.AnalysisEngineProcessException: Annotator processing failed.        at org.apache.uima.ruta.engine.RutaEngine.process(RutaEngine.java:614)    at org.apache.uima.analysis_component.JCasAnnotator_ImplBase.process(JCasAnnotator_ImplBase.java:48)    at org.apache.uima.analysis_engine.impl.PrimitiveAnalysisEngine_impl.callAnalysisComponentProcess(PrimitiveAnalysisEngine_impl.java:411)    at org.apache.uima.analysis_engine.impl.PrimitiveAnalysisEngine_impl.innerCall(PrimitiveAnalysisEngine_impl.java:329)    at org.apache.uima.analysis_engine.impl.PrimitiveAnalysisEngine_impl.processAndOutputNewCASes(PrimitiveAnalysisEngine_impl.java:321)    at org.apache.uima.analysis_engine.impl.AnalysisEngineImplBase.process(AnalysisEngineImplBase.java:269)    at org.apache.uima.ruta.ide.launching.RutaLauncher.processFile(RutaLauncher.java:242)    at org.apache.uima.ruta.ide.launching.RutaLauncher.main(RutaLauncher.java:191)Caused by: java.lang.NullPointerException    at org.apache.uima.ruta.action.MarkTableAction.getDictWSParamValue(MarkTableAction.java:154)    at org.apache.uima.ruta.action.MarkTableAction.execute(MarkTableAction.java:119)    at org.apache.uima.ruta.rule.AbstractRuleElement.apply(AbstractRuleElement.java:137)    at org.apache.uima.ruta.rule.RuleElementCaretaker.applyRuleElements(RuleElementCaretaker.java:121)    at org.apache.uima.ruta.rule.ComposedRuleElement.applyRuleElements(ComposedRuleElement.java:628)    at org.apache.uima.ruta.rule.AbstractRuleElement.doneMatching(AbstractRuleElement.java:86)    at org.apache.uima.ruta.rule.ComposedRuleElement.fallback(ComposedRuleElement.java:527)    at org.apache.uima.ruta.rule.ComposedRuleElement.fallbackContinue(ComposedRuleElement.java:420)    at org.apache.uima.ruta.rule.RutaRuleElement.startMatch(RutaRuleElement.java:104)    at org.apache.uima.ruta.rule.ComposedRuleElement.startMatch(ComposedRuleElement.java:77)    at org.apache.uima.ruta.rule.RutaRule.apply(RutaRule.java:64)    at org.apache.uima.ruta.rule.RutaRule.apply(RutaRule.java:55)    at org.apache.uima.ruta.rule.RutaRule.apply(RutaRule.java:37)    at org.apache.uima.ruta.block.RutaScriptBlock.apply(RutaScriptBlock.java:67)    at org.apache.uima.ruta.action.CallAction.callScript(CallAction.java:91)    at org.apache.uima.ruta.action.CallAction.execute(CallAction.java:73)    at org.apache.uima.ruta.rule.AbstractRuleElement.apply(AbstractRuleElement.java:137)    at org.apache.uima.ruta.rule.RuleElementCaretaker.applyRuleElements(RuleElementCaretaker.java:121)    at org.apache.uima.ruta.rule.ComposedRuleElement.applyRuleElements(ComposedRuleElement.java:628)    at org.apache.uima.ruta.rule.AbstractRuleElement.doneMatching(AbstractRuleElement.java:86)    at org.apache.uima.ruta.rule.ComposedRuleElement.fallback(ComposedRuleElement.java:527)    at org.apache.uima.ruta.rule.ComposedRuleElement.fallbackContinue(ComposedRuleElement.java:420)    at org.apache.uima.ruta.rule.RutaRuleElement.startMatch(RutaRuleElement.java:104)    at org.apache.uima.ruta.rule.ComposedRuleElement.startMatch(ComposedRuleElement.java:77)    at org.apache.uima.ruta.rule.RutaRule.apply(RutaRule.java:64)    at org.apache.uima.ruta.rule.RutaRule.apply(RutaRule.java:55)    at org.apache.uima.ruta.rule.RutaRule.apply(RutaRule.java:37)    at org.apache.uima.ruta.block.RutaScriptBlock.apply(RutaScriptBlock.java:67)    at org.apache.uima.ruta.RutaModule.apply(RutaModule.java:56)    at org.apache.uima.ruta.engine.RutaEngine.process(RutaEngine.java:612)    ... 7 more
issueID:UIMA-5968
type:Improvement
changed files:
texts:UIMA-DUCC: parameterize client&#39;s Jetty thread pool size
Currently client's Jetty thread pool is fixed to 50 threads. Make this configurable by an application.
issueID:UIMA-5969
type:Improvement
changed files:
texts:Ruta: assignment of string feature is not robust enough concerning other primitive types
a:A{->a.stringFeature = double};should work
issueID:UIMA-597
type:Bug
changed files:
texts:The UIMA Run AE configuration does not support the -xmi flag which IS supported by the runAE script
It is using class org.apache.uima.examples.RunAE while the runAE script uses org.apache.uima.tools.RunAE
issueID:UIMA-5970
type:Improvement
changed files:
texts:UIMA-DUCC: create CustomProcessor compatible with new pullservice
Need a new example code for custom Processor that will work with the new pull service. The existing implementation CustomContainer is based on dead code in uima-ducc-user.jar. 
issueID:UIMA-5972
type:Task
changed files:
texts:UIMA-DUCC: review license, notice, readme, and release notes
Ducc's Jetty, Cassandra and http client were recently upgraded. Check legal files to make sure both license and notice are up to date. Also review README and RELEASE_NOTES.
issueID:UIMA-5973
type:Bug
changed files:
texts:UIMA-DUCC: fix NPE when pullservice is stopping
When a service is stopping due to one thread failing in AE.process(), another thread throws NPE while handling incomplete task. Looks like transport has stopped while a thread attempted to send GET request. java.lang.NullPointerException at org.apache.uima.ducc.ps.service.protocol.builtin.DefaultServiceProtocolHandler.call(DefaultServiceProtocolHandler.java:283) at org.apache.uima.ducc.ps.service.protocol.builtin.DefaultServiceProtocolHandler.call(DefaultServiceProtocolHandler.java:55) at java.util.concurrent.FutureTask.run(FutureTask.java:277) at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:191) at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304) at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1160) at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635) at org.apache.uima.ducc.ps.ServiceThreadFactory$1.run(ServiceThreadFactory.java:57) at java.lang.Thread.run(Thread.java:811)
issueID:UIMA-5974
type:Bug
changed files:uimaj-core/src/main/java/org/apache/uima/cas/impl/FSIndexRepositoryImpl.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/AnnotationBase.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/NonEmptyFSList.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/NonEmptyFloatList.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/NonEmptyIntegerList.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/NonEmptyStringList.java
uimaj-core/src/main/java/org/apache/uima/cas/ArrayFS.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/BinaryCasSerDes4.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/BinaryCasSerDes6.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/CASSerializer.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FeatureStructureImplC.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/XCASSerializer.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/FSArray.java
uimaj-core/src/main/java/org/apache/uima/UIMARuntimeException.java
uimaj-core/src/main/java/org/apache/uima/UIMA_IllegalArgumentException.java
uimaj-core/src/main/java/org/apache/uima/UIMA_IllegalStateException.java
uimaj-core/src/main/java/org/apache/uima/UIMA_UnsupportedOperationException.java
texts:uv3 unnecessary API change from v2 breaking binary compatibility
Uima v3 strives to be binary compatible with v2, with the exception of needing new JCas classes.  This allows a simpler migration because (the goal is) you don't need to recompile JARs - the same Jars can be used with either v2 or v3.Found a few spots where v3 changed the signature of a public API, usually to a more specific type, which, while correct, breaks binary compatibility.  Reverse these changes.  
issueID:UIMA-5975
type:Bug
changed files:
texts:Missing method in pull service&#39;s ServiceConfiguration
ServiceConfiguration needs a setWaitTime method.Also suppress an INFO log message produced for every task received in the service, and remove trailing white-space.
issueID:UIMA-5976
type:Bug
changed files:uimaj-core/src/main/java/org/apache/uima/cas/impl/TypeSystemImpl.java
texts:uv3 support additional JCas / type system use case
UIMA allows multiple pipelines having multiple type systems to be run under one single class loader.  Sometimes these type systems have somewhat different versions.  When JCas is used (within one class loader) there can only be one instance of the JCas class definition. The implementation attempts to make variations work, but missed one:The following use case is throwing an exception, but should be supported:Given:  JCas class S defining feature F JCas class T having S as its super class Type system defining Uima Type S with feature FWhen this is committed, the JCas classes are loaded; and the "slot" for feature F is allocated in S.Now have another type system defined with UIMA Type T having feature F, and supertype S.This was throwing an exception.  This might occur in practice when a slot is migrated from a subtype to a supertype in some (but not all) instances of type system definitions being run (typically in different UIMA pipelines, running together in one JVM within one class loader).Have this work, by setting the slot offset for this type be the slot for F defined in the SuperType S.
issueID:UIMA-5977
type:Bug
changed files:
texts:DUCC Web Server (WS) JMX thread leak
WS is leaking threads using JMX connection to gather daemons web page data.
issueID:UIMA-5978
type:Improvement
changed files:
texts:Ruta: refactor xml parsing and use uimaj utils

issueID:UIMA-5979
type:Improvement
changed files:
texts:Ruta: bundles export packages that have private references
Marshall:While building from sources, there are a lot of messages like this:&#91;INFO&#93; &#8212; maven-bundle-plugin:3.3.0:manifest (uima-bundle) @ ruta-ep-engine &#8212;&#91;WARNING&#93; Manifest org.apache.uima:ruta-ep-engine:jar:2.7.0 : Exportorg.apache.uima.ruta.action,  has 1,  private references&#91;org.apache.uima.ruta.expression.feature&#93;,&#91;WARNING&#93; Manifest org.apache.uima:ruta-ep-engine:jar:2.7.0 : Exportorg.apache.uima.ruta.expression,  has 2,  private references[org.apache.uima.ruta.expression.annotation,org.apache.uima.ruta.expression.feature],&#91;WARNING&#93; Manifest org.apache.uima:ruta-ep-engine:jar:2.7.0 : Exportorg.apache.uima.ruta.expression.bool,  has 2,  private references[org.apache.uima.ruta.expression.feature,org.apache.uima.ruta.expression.annotation],&#91;WARNING&#93; Manifest org.apache.uima:ruta-ep-engine:jar:2.7.0 : Exportorg.apache.uima.ruta.expression.number,  has 1,  private references&#91;org.apache.uima.ruta.expression.feature&#93;,&#91;WARNING&#93; Manifest org.apache.uima:ruta-ep-engine:jar:2.7.0 : Exportorg.apache.uima.ruta.expression.string,  has 1,  private references&#91;org.apache.uima.ruta.expression.feature&#93;,&#91;WARNING&#93; Manifest org.apache.uima:ruta-ep-engine:jar:2.7.0 : Exportorg.apache.uima.ruta.extensions,  has 1,  private references&#91;org.apache.uima.ruta.expression.annotation&#93;,&#91;WARNING&#93; Manifest org.apache.uima:ruta-ep-engine:jar:2.7.0 : Exportorg.apache.uima.ruta.parser,  has 2,  private references[org.apache.uima.ruta.expression.annotation,org.apache.uima.ruta.expression.feature],&#91;WARNING&#93; Manifest org.apache.uima:ruta-ep-engine:jar:2.7.0 : Exportorg.apache.uima.ruta.verbalize,  has 2,  private references[org.apache.uima.ruta.expression.annotation,org.apache.uima.ruta.expression.feature],&#91;WARNING&#93; Manifest org.apache.uima:ruta-ep-engine:jar:2.7.0 : Exportorg.springframework.beans.factory.access,  has 1,  private references&#91;org.apache.commons.logging&#93;,&#91;WARNING&#93; Manifest org.apache.uima:ruta-ep-engine:jar:2.7.0 : Exportorg.springframework.beans.factory.access.el,  has 1,  private references&#91;org.apache.commons.logging&#93;,&#91;WARNING&#93; Manifest org.apache.uima:ruta-ep-engine:jar:2.7.0 : Exportorg.springframework.beans.factory.annotation,  has 1,  private references&#91;org.apache.commons.logging&#93;,&#91;WARNING&#93; Manifest org.apache.uima:ruta-ep-engine:jar:2.7.0 : Exportorg.springframework.beans.factory.config,  has 1,  private references&#91;org.apache.commons.logging&#93;,&#91;WARNING&#93; Manifest org.apache.uima:ruta-ep-engine:jar:2.7.0 : Exportorg.springframework.beans.factory.parsing,  has 1,  private references&#91;org.apache.commons.logging&#93;,&#91;WARNING&#93; Manifest org.apache.uima:ruta-ep-engine:jar:2.7.0 : Exportorg.springframework.beans.factory.support,  has 1,  private references&#91;org.apache.commons.logging&#93;,&#91;WARNING&#93; Manifest org.apache.uima:ruta-ep-engine:jar:2.7.0 : Exportorg.springframework.beans.factory.wiring,  has 1,  private references&#91;org.apache.commons.logging&#93;,&#91;WARNING&#93; Manifest org.apache.uima:ruta-ep-engine:jar:2.7.0 : Exportorg.springframework.beans.factory.xml,  has 1,  private references&#91;org.apache.commons.logging&#93;,&#91;WARNING&#93; Manifest org.apache.uima:ruta-ep-engine:jar:2.7.0 : Exportorg.springframework.beans.support,  has 1,  private references&#91;org.apache.commons.logging&#93;,&#91;WARNING&#93; Manifest org.apache.uima:ruta-ep-engine:jar:2.7.0 : Exportorg.springframework.cache.ehcache,  has 1,  private references&#91;org.apache.commons.logging&#93;,&#91;WARNING&#93; Manifest org.apache.uima:ruta-ep-engine:jar:2.7.0 : Exportorg.springframework.cache.interceptor,  has 1,  private references&#91;org.apache.commons.logging&#93;,&#91;WARNING&#93; Manifest org.apache.uima:ruta-ep-engine:jar:2.7.0 : Exportorg.springframework.context.annotation,  has 1,  private references&#91;org.apache.commons.logging&#93;,&#91;WARNING&#93; Manifest org.apache.uima:ruta-ep-engine:jar:2.7.0 : Exportorg.springframework.context.support,  has 1,  private references&#91;org.apache.commons.logging&#93;,&#91;WARNING&#93; Manifest org.apache.uima:ruta-ep-engine:jar:2.7.0 : Exportorg.springframework.context.weaving,  has 1,  private references&#91;org.apache.commons.logging&#93;,&#91;WARNING&#93; Manifest org.apache.uima:ruta-ep-engine:jar:2.7.0 : Exportorg.springframework.core.enums,  has 1,  private references&#91;org.apache.commons.logging&#93;,&#91;WARNING&#93; Manifest org.apache.uima:ruta-ep-engine:jar:2.7.0 : Exportorg.springframework.core.env,  has 1,  private references&#91;org.apache.commons.logging&#93;,&#91;WARNING&#93; Manifest org.apache.uima:ruta-ep-engine:jar:2.7.0 : Exportorg.springframework.core.io.support,  has 1,  private references&#91;org.apache.commons.logging&#93;,&#91;WARNING&#93; Manifest org.apache.uima:ruta-ep-engine:jar:2.7.0 : Exportorg.springframework.ejb.support,  has 1,  private references&#91;org.apache.commons.logging&#93;,&#91;WARNING&#93; Manifest org.apache.uima:ruta-ep-engine:jar:2.7.0 : Exportorg.springframework.jmx.access,  has 1,  private references&#91;org.apache.commons.logging&#93;,&#91;WARNING&#93; Manifest org.apache.uima:ruta-ep-engine:jar:2.7.0 : Exportorg.springframework.jmx.export.naming,  has 1,  private references&#91;org.apache.commons.logging&#93;,&#91;WARNING&#93; Manifest org.apache.uima:ruta-ep-engine:jar:2.7.0 : Exportorg.springframework.jmx.support,  has 1,  private references&#91;org.apache.commons.logging&#93;,&#91;WARNING&#93; Manifest org.apache.uima:ruta-ep-engine:jar:2.7.0 : Exportorg.springframework.jndi,  has 1,  private references &#91;org.apache.commons.logging&#93;,&#91;WARNING&#93; Manifest org.apache.uima:ruta-ep-engine:jar:2.7.0 : Exportorg.springframework.remoting.rmi,  has 1,  private references&#91;org.apache.commons.logging&#93;,&#91;WARNING&#93; Manifest org.apache.uima:ruta-ep-engine:jar:2.7.0 : Exportorg.springframework.remoting.support,  has 1,  private references&#91;org.apache.commons.logging&#93;,&#91;WARNING&#93; Manifest org.apache.uima:ruta-ep-engine:jar:2.7.0 : Exportorg.springframework.scheduling.backportconcurrent,  has 1,  private references&#91;org.apache.commons.logging&#93;,&#91;WARNING&#93; Manifest org.apache.uima:ruta-ep-engine:jar:2.7.0 : Exportorg.springframework.scheduling.concurrent,  has 1,  private references&#91;org.apache.commons.logging&#93;,&#91;WARNING&#93; Manifest org.apache.uima:ruta-ep-engine:jar:2.7.0 : Exportorg.springframework.scheduling.support,  has 1,  private references&#91;org.apache.commons.logging&#93;,&#91;WARNING&#93; Manifest org.apache.uima:ruta-ep-engine:jar:2.7.0 : Exportorg.springframework.scheduling.timer,  has 1,  private references&#91;org.apache.commons.logging&#93;,&#91;WARNING&#93; Manifest org.apache.uima:ruta-ep-engine:jar:2.7.0 : Exportorg.springframework.scripting.support,  has 1,  private references&#91;org.apache.commons.logging&#93;,&#91;WARNING&#93; Manifest org.apache.uima:ruta-ep-engine:jar:2.7.0 : Exportorg.springframework.ui.context.support,  has 1,  private references&#91;org.apache.commons.logging&#93;,&#91;WARNING&#93; Manifest org.apache.uima:ruta-ep-engine:jar:2.7.0 : Exportorg.springframework.util,  has 1,  private references &#91;org.apache.commons.logging&#93;,&#91;WARNING&#93; Manifest org.apache.uima:ruta-ep-engine:jar:2.7.0 : Exportorg.springframework.util.xml,  has 1,  private references&#91;org.apache.commons.logging&#93;,&#91;WARNING&#93; Manifest org.apache.uima:ruta-ep-engine:jar:2.7.0 : Exportorg.springframework.validation,  has 1,  private references&#91;org.apache.commons.logging&#93;A google search turns uphttps://stackoverflow.com/questions/21218296/maven-bundle-plugin-export-has-private-references
issueID:UIMA-598
type:Bug
changed files:uimaj-core/src/main/java/org/apache/uima/resource/impl/CasManager_impl.java
uimaj-core/src/main/java/org/apache/uima/util/impl/CasPoolManagementImpl.java
uimaj-core/src/main/java/org/apache/uima/resource/impl/CasManager_impl.java
uimaj-core/src/main/java/org/apache/uima/util/impl/CasPoolManagementImpl.java
texts:Memory leak from CAS pool
CasManager_impl never unregisters with the JMX MBean server, which prevents the CAS pool from being GC.
issueID:UIMA-5980
type:Improvement
changed files:
texts:Ruta: cleanup test files
Marshall:compare svn w/ source-release:  Source has ruta-core/input/  andruta-core/TypeSystem.xml , not in svn tag.  These are left over test artifacts,could be cleaned up before source-release is cut.  not a blocker
issueID:UIMA-5982
type:Improvement
changed files:
texts:Ruta: javadoc warnings

issueID:UIMA-5983
type:Improvement
changed files:
texts:Ruta: build with Java 11
make the bulid compatible to Java 11 or mention the restriction in the readme file
issueID:UIMA-5984
type:Improvement
changed files:
texts:Ruta: adapt readme file
Richard:The README file mentions the uimaFIT JCasGenPomFriendlywhich doesn't exist anymore since quite some time.Empty line missing before "mvn clean install"
issueID:UIMA-5985
type:Bug
changed files:
texts:ducc_update needs to employ check_ducc like functionality to prevent updating when DUCC is already running
Work around is to run check_ducc manually.
issueID:UIMA-5986
type:Improvement
changed files:
texts:Ruta: maven compiler should use 1.8

issueID:UIMA-5988
type:Bug
changed files:
texts:UIMA-DUCC: JD fails due to not finding Workitem type in the CAS
The JD throws the following exception:Feb 14, 2019 9:51:02 AM org.apache.uima.ducc.test.randomsleep.FixedSleepCR getNext(328) INFO: getNext org.apache.uima.analysis_engine.AnalysisEngineProcessException: Annotator class org.apache.uima.ducc.CasHelper requires Type org.apache.uima.ducc.Workitem, which was not found in the CAS. at org.apache.uima.ducc.CasHelper.getId(CasHelper.java:47) at org.apache.uima.ducc.user.jd.JdUserCollectionReader._getJdUserMetaCas(JdUserCollectionReader.java:169) at org.apache.uima.ducc.user.jd.JdUserCollectionReader.getJdUserMetaCas(JdUserCollectionReader.java:147) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:90) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:55) at java.lang.reflect.Method.invoke(Method.java:508) at org.apache.uima.ducc.container.common.classloader.ContextSwitch.call(ContextSwitch.java:42) at org.apache.uima.ducc.container.jd.classload.ProxyJobDriverCollectionReader.getMetaCas(ProxyJobDriverCollectionReader.java:171) at org.apache.uima.ducc.container.jd.cas.CasManager.getMetaCas(CasManager.java:74) To make things worse the above exception is ignored by JD code and the job continues until completion giving a false sense of positive completion. The Duccmon shows no errors.Two fixes are needed:1) Address the missing Workitem type in the cas2) Improve error handling to detect an exception and cancel a jobThe above error is caused by a recent change in CasHelper.java. Ducc examples have not been updated to define Workitem type in descriptors. Also the getId() method does not throw Exception leaving JD oblivious to an error which may happen there.
issueID:UIMA-5989
type:Improvement
changed files:
texts:DUCC admin optional tools for starting/stopping unmanaged Cassandra DB
db_start.py and db_stop.py are useful for starting/stopping DB when Cassandra DB is not DUCC managed (that is, when not controlled by start_ducc and stop_ducc).
issueID:UIMA-599
type:Bug
changed files:uimaj-core/src/main/java/org/apache/uima/flow/ParallelStep.java
uimaj-core/src/main/java/org/apache/uima/flow/SimpleStep.java
texts:Typo in JavaDocs for ParallelStep and SimpleStep
Comments in constructors for both say: Cretes a new SimpleStep
issueID:UIMA-5990
type:Bug
changed files:
texts:Wrong URL on UIMA "Get involved" page
The URL pointing to this Jira at the Apache UIMA "Get involved" website is incorrect and leads to this error message: "This project isn't availableIt may have been deleted or your permissions may have changed.View a list of all projects" This is the current URL: https://issues.apache.org/jira/secure/BrowseProject.jspa?id=0 
issueID:UIMA-5991
type:Improvement
changed files:uimaj-core/src/main/java/org/apache/uima/cas/impl/CasCompare.java
texts:uv3 augment Cas Compare to allow for a series of accomodations
The Cas Compare class supports a small range of accomodations.  Document these better, and extend them to include more variations, including having specific String/FS/Arrays be sorted if needed for particular type/feature pairs.This allows running the compare between CASs produced by different runs where perhaps it is desired to ignore the ordering of elements in particular arrays (because, for instance, they might have been produced by iterating over hash maps/sets, and the order is unimportant)
issueID:UIMA-5992
type:Improvement
changed files:
texts:Ruta: update descriptors in example projects

issueID:UIMA-5993
type:Improvement
changed files:
texts:Ruta: word list impl should check on null for non-file-based input
initial value of string variables is now null which can cause problems in string lists in MARKFAST
issueID:UIMA-5994
type:Bug
changed files:
texts:Ruta: seeder has problems with special symbol LS

issueID:UIMA-5995
type:Bug
changed files:
texts:Ruta: feature assignment with type extended by feature match is broken
Document{-> CREATE(ProductComposition, "activeEntries" = CompositionEntry.active==true, "excipientEntries" = CompositionEntry.active==false)};
issueID:UIMA-5996
type:Bug
changed files:
texts:UIMA-DUCC: Pullservice not calling END on WIs being processed while in quiesce
When a pullservice is in quiesce mode it should wait for WIs being process to finish and than stop. It looks like this is not working right. Items being processed while the pullservice is handling quiesce are not being acknowledged as done so JD times out these WIs.
issueID:UIMA-5998
type:Improvement
changed files:
texts:DUCC Web Server (WS) authentication plugin for GSA
See Summary.
issueID:UIMA-5999
type:Bug
changed files:
texts:DUCC Apache demo deployed in "sim" mode has jobs with dependencies failing
The Apache DUCC demo runs in "sim" mode, meaning the several agents are run on the single VM host.  The job submitter application keeps DUCC busy by submitting up to 3 simultaneous jobs.  These jobs are composed on-the-fly.  Some are given service dependencies and some are not.  Those with dependencies are getting a service name that does not match the set of pre-defined services. Note that the service names for the composed jobs are dead-reckoned.
issueID:UIMA-6
type:Task
changed files:
texts:Include documentation in assembly
Our build process should call the docbooks build and include the resulting documentation in the uimaj assembly.
issueID:UIMA-600
type:New Feature
changed files:
texts:add new DictionaryAnnotator implementation
add a new Sandbox component called DictionaryAnnotator. The component includes the implementation of a dictionary based annotator.
issueID:UIMA-6001
type:Bug
changed files:
texts:Problem with matching items in MarkFast with whitespacers visible
This issue is similar to UIMA-5752 that Jasper Huzen (he was a Wolters Kluwer college of me) created. During testing of Ruta 2.7.0 (where UIMA-5752 is fixed) we found out that some files where forgotten in the Patch file for UIMA-5752. So there is this issue about. The problem of UIMA-5752 did not only occur in the class MarkTableAction, but also in the class MarkFastAction. The change for MarkFastAction was forgotten in the patch file.So i created a patch file to fix the MarkFastAction class.
issueID:UIMA-6002
type:Bug
changed files:
texts:UIMA-DUCC: Pullservice not providing virtual IP to JD when running in sim mode
When running in a sim mode, the Agent is given a virtual node IP and name. This info is being provided to the pullservice during a launch in an environment. When sending requests to JD, the pullservice passes on its identity which currently is the real IP and name. Instead the pullservice should pass on IP and Node name given by its agent.
issueID:UIMA-6003
type:Bug
changed files:
texts:DUCC start_sim fails to create a pids file
When running start_sim, we get the following message at the end:All Work completedTraceback (most recent call last):  File "./start_sim", line 438, in <module>    starter.main(sys.argv&#91;1:&#93;)  File "./start_sim", line 434, in main    self.pids.write('sim.pids')              File "/usr/local/duccy/ducc_runtime/apache-uima-ducc-3.0.0/bin/properties.py", line 232, in write    f = open(propsfile, 'w')IOError: &#91;Errno 21&#93; Is a directory: 'sim.pids'
issueID:UIMA-6004
type:Improvement
changed files:
texts:Use SLF4J in unit tests and examples
The uimaFIT examples tests fail to specify a slf4j logger to use, and thedefault supplied is a "no-op" logger, which discards anything that is attemptedto be logged.
issueID:UIMA-6005
type:Improvement
changed files:
texts:Compare API changes against latest uimaFIT v2 release
The API compare reports ( japicmp ) are being calculated using version 2.1.0 (dates from 2014) - should be changed to the most recent previous release (i.e. for 2.5.0 it should be 2.4.0 and for 3.0.0 it should also be 2.4.0 or 2.5.0 depending on what is released first).
issueID:UIMA-6006
type:Bug
changed files:
texts:Restore isMultiValuedFeature signature that works without a FS
Restore isMultiValuedFeature signature that works without a FS. This got lost without intention.
issueID:UIMA-6007
type:Improvement
changed files:
texts:Update to parent-pom 12
Update to parent-pom 12
issueID:UIMA-6008
type:Improvement
changed files:
texts:Update to UIMA Core 2.10.3
Update to UIMA Core 2.10.3
issueID:UIMA-6009
type:Improvement
changed files:
texts:Use Maven dependency plugin to check dependencies
Use the Maven dependencies plugin to check if all required dependencies are declared and no unnecessary dependencies are declared. Fail the build if this is not the case.
issueID:UIMA-601
type:New Feature
changed files:
texts:initial import of the PEAR packaging maven plugin
initial import of the PEAR packaging maven plugin
issueID:UIMA-6010
type:Improvement
changed files:
texts:Upgrade dependencies
There are some ancient dependencies which can be upgraded now that we use Java 8.
issueID:UIMA-6011
type:Improvement
changed files:
texts:Always run RAT check
Run the RAT check always, not only on releases. This is to ensure that license headers are added immediately when a contribution is made and do not slow down the release process.
issueID:UIMA-6012
type:Improvement
changed files:
texts:Add api-change-report.html to the project
Add a api-change-report.html file to the project which provides an easy access to the individual API change reports.
issueID:UIMA-6013
type:Improvement
changed files:
texts:Adjust to getView throwing CASException
Adjust to getView throwing CASException instead of CASRuntimeException - a change being introduced in the latest UIMA Core version.
issueID:UIMA-6015
type:Bug
changed files:
texts:UIMA-DUCC: Uima version detection not working
Before deploying a child process, an agent tries to determine which version of uima user wants to run with. It takes user specified classpath and loads the jars and resources into a Classloader. Using the Classloader it tries to instantiate UimaVersion class from uima-core.jar. The bug is that an agent tries to load the jar as user ducc. When the jar is located in a place which is not readable to ducc, the operation fails with:java.lang.ClassNotFoundException: org.apache.uima.impl.UimaVersion         at java.net.URLClassLoader.findClass(URLClassLoader.java:610)         at java.lang.ClassLoader.loadClassHelper(ClassLoader.java:925)         at java.lang.ClassLoader.loadClass(ClassLoader.java:870)         at java.lang.ClassLoader.loadClass(ClassLoader.java:853)         at org.apache.uima.ducc.agent.launcher.DuccCommandExecutor.getDeployableCommandLine(DuccCommandExecutor.java:819)         at org.apache.uima.ducc.agent.launcher.DuccCommandExecutor.exec(DuccCommandExecutor.java:142)         at org.apache.uima.ducc.agent.launcher.CommandExecutor.call(CommandExecutor.java:226)         at org.apache.uima.ducc.agent.launcher.CommandExecutor.call(CommandExecutor.java:36)         at java.util.concurrent.FutureTask.run(FutureTask.java:277)         at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1160)         at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)         at java.lang.Thread.run(Thread.java:812) Also, in case a user fails to provide uima-core.jar and the code fails as shown above, set the reason for failure so it is clear in duccmon why the process failed.
issueID:UIMA-6016
type:Bug
changed files:uimaj-core/src/main/java/org/apache/uima/cas/SelectFSs.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FsIterator_set_sorted2.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/Subiterator.java
texts:uv3 subiterator handling of some edge cases incorrect
A user found a subiterator was marked not-valid, when there were annotations present, due to some wrong logic around test checking for if the found annotation was equal to the bounding one.A careful review of the subiterator implementation revealed many other edge cases needing fixing.  Do a refactoring to simplify the implementation.
issueID:UIMA-6017
type:Improvement
changed files:uimaj-core/src/main/java/org/apache/uima/cas/impl/CasCompare.java
texts:uv3 make cascompare more useful by eliminating duplicate reporting
When using the cas compare to discover the root cause of two CASs miscomparing, it is helpful to exclude showing miscompares that are caused by already reported miscompares. For example, if you have some collection of Feature Structures, and one of them miscompares and you report that, it is helpful to not also report the two collections are miscomparing.  If you don't exclude these "upper level" miscompares from reporting, there are typically so many reported miscompares, that it's hard to focus on the root cause.Also, remove code that was conditionally sorting some collections during compare - this broke other code and isn't needed - any sorting should be done before this routine is called.
issueID:UIMA-6018
type:Task
changed files:
texts:uv3 change release number 3.0.2 to 3.1.0
because of some api changes that can affect some users
issueID:UIMA-6019
type:Task
changed files:
texts:DUCC 3.0.0 system not backwardly compatible with older CLI
DUCC Orchestrator in 3.0.0 should reject submission from earlier versions of CLI, with helpful error message to user.
issueID:UIMA-602
type:Improvement
changed files:
texts:add PEAR packaging task for RegexAnnotaor

issueID:UIMA-6020
type:Task
changed files:
texts:UIMA-AS: upgrade to XMLBeans v3.1.0
XMLBeans 3.1.0 includes a number of security fixes and API fix ups. 
issueID:UIMA-6021
type:Improvement
changed files:
texts:Add selectSingleFS method to CasUtil
Add a new method CasUtil.selectSingleFS and change the return type of selectSingle to AnnotationFS to mirror the signatures of the other select methods in CasUtil.
issueID:UIMA-6022
type:Improvement
changed files:
texts:Upgrade to UIMA 3.0.2
Depend on UIMA 3.0.2 just because that's the latest version with the best bug fixes available so far
issueID:UIMA-6026
type:Bug
changed files:
texts:UIMA-DUCC: improve pullservice throughput by reducing overhead
The pullservice synchronizes code in multiple places reducing overall throughput. Also, the code creates an instance of XStream when serializing and deserializing each task. This applies both to client (TAS) and the pullservice. Modify code to remove serialization and also create an instance of XStream service and pin it to each thread both in the client and the pullservice. 
issueID:UIMA-6027
type:Improvement
changed files:
texts:org.apache.uima.ducc.database.DbAlive improvement
DbAlive should read PW from file.
issueID:UIMA-6028
type:Improvement
changed files:
texts:Add "Doing a CVE" link to Development section of Apache UIMA website
Per Chair's request.
issueID:UIMA-6029
type:Task
changed files:
texts:Ruta: possible NPE in verbalization of MARKFAST in explanation

issueID:UIMA-603
type:New Feature
changed files:
texts:update Sandbox documentation build
update Sandbox documentation build
issueID:UIMA-6030
type:Bug
changed files:
texts:db_tool bad documentation
Documentation in duccbook appears to show a different syntax than the tool's self help. Better font would fix this.
issueID:UIMA-6031
type:Improvement
changed files:
texts:ducc_rsync options could be more useful
ducc_rsync is used to copy/sync parts of ducc_runtime from one machine to another. It currently requires the user to specify the list of directories to sync. More useful would be options for the type of target machine: a worker machine or a secondary head node.
issueID:UIMA-6033
type:Bug
changed files:
texts:quesced column not created when extending from older DUCC DB restore.
If a DUCC v3.0.0 install restores a DB backup from v2.x the WS throws exceptions about missing column quesced.
issueID:UIMA-6035
type:Improvement
changed files:
texts:ducc.properties not updated with site.ducc.properties when needed
site.ducc.properties is merged into ducc.properties only when start_ducc is run. It should also be merged when check_ducc and ducc_rsync are run.
issueID:UIMA-6036
type:Bug
changed files:
texts:ducc_id not updated correctly after restoring DB from backup
After restoring a DB from backup the next value of ducc_id is not chosen correctly. It is leaving out previous reservations.
issueID:UIMA-6039
type:Bug
changed files:
texts:UIMA-DUCC: agent reports incorrect initialization time
It looks like TimeWindow.getEnd() no longer returns null and instead returns empty String. Agent code was testing for null to execute code to set end of initialization. Since null is no longer returned that code was never called. Refactor to remove the test and always set the End time when process initialization is done.
issueID:UIMA-604
type:New Feature
changed files:
texts:Create HMM POS project in the sandbox

issueID:UIMA-6046
type:Bug
changed files:
texts:UIMA-DUCC: pullservice hangs when stopping
The pullservice hangs when trying to stop due to AE exception.
issueID:UIMA-6047
type:Bug
changed files:uimaj-core/src/main/java/org/apache/uima/cas/impl/TypeSystemImpl.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/CASImpl.java
texts:uv3 deserialization of typed arrays could be faulty in edge case
UIMA has some limited support for typed arrays.  These are declared in type system descriptors by including an elementType specification for a feature whose range is FSArray.See http://uima.apache.org/d/uimaj-current/references.html#ugr.ref.xml.component_descriptor.type_system.featuresThe XCAS and the Xmi serialization forms serialize these as FSArray.  The deserialization code, when deserializing these, looks at the feature declaration to see if it has an elementType, and if so, changes the type of the Feature Structure to that type.  This is fine except for two cases:1) backwards compatibility - this wasn't done in v2.  This might be an ignorable difference (except for utilities that compare CASs, and don't accommodate this).2) (more important) Sometimes feature structures are "shared" - that is, multiple different features might reference the same one.  These features might not have the same element type.  A not unusual use case is the one where the item being referenced is a 0-length Feature Structure, and the code is sharing one common (immutable) instance of this. For #2, one possible fix is to examine the "multipleReferencesAllowed" property of the feature, and only do this narrowing of the type if this is false, and the rest of the code hasn't accidentally shared this feature structure with other references.For #1, perhaps the right approach is to have a backwards compatibility -D flag that (if set) avoids doing this type update when deserializing.
issueID:UIMA-6049
type:Bug
changed files:
texts:DUCC Orchestrator (OR) may give out duplicate ID numbers
DUCC orchestrator should synchronize when giving out ID numbers.
issueID:UIMA-605
type:New Feature
changed files:
texts:UIMA Sandbox tagger initial code drop

issueID:UIMA-6050
type:Bug
changed files:
texts:Ruta: possible SO when process is called on broken AE
SW.ct=="the"{-> CREATE(Entity, "label" = "MEINLABEL", "value"= "MEINVALUE")};t:Token{-> t.entities = Entity};
issueID:UIMA-6051
type:Improvement
changed files:
texts:Ruta: anonymous declare in rules param without package declaration

issueID:UIMA-6052
type:Improvement
changed files:
texts:Ruta: failed matches override label values in inlined rules as condition
Example:Sentence{-> CREATE(C, "a" = a, "b" =b)}<-{a:W{STARTSWITH(Sentence)}; b:W;};
issueID:UIMA-6053
type:Improvement
changed files:
texts:Ruta: consistent strategy which exception are thrown by the Ruta Engine
Catch ruta exceptions and rethrow uima exceptions
issueID:UIMA-6054
type:Bug
changed files:uimaj-tools/src/main/java/org/apache/uima/tools/jcasgen/JCasTypeTemplate.java
uimaj-tools/src/main/javajet/jcasgen/templates/JCasType.javajet
uimaj-tools/src/main/java/org/apache/uima/tools/jcasgen/JCasTypeTemplate.java
uimaj-tools/src/main/javajet/jcasgen/templates/JCasType.javajet
texts:JCasGen generating warnings by creating deprecated constructors
The JCasGen process produces classes with a protected empty no parameter constructor.Base classes that have extended the Annotation class (org.apache.uima.jcas.tcas.Annotation) are now getting warnings that the constructor Annotation() is deprecated.The constructor documentation states, "Never called. Disable default constructor" but the presence of other constructors already serve this purpose. 
issueID:UIMA-6055
type:Bug
changed files:uimaj-tools/src/main/java/org/apache/uima/tools/jcasgen/JCasTypeTemplate.java
uimaj-tools/src/main/java/org/apache/uima/tools/jcasgen/Jg.java
uimaj-tools/src/main/javajet/jcasgen/templates/JCasType.javajet
texts:JCasGen adds unused imports if class has no new features
In the JCasTypeTemplate class, the need for the following 3 imports: import java.lang.invoke.CallSite; import java.lang.invoke.MethodHandle; import org.apache.uima.cas.impl.TypeSystemImpl;were added to enable code added when new features are coded into the class. In classes without new features will cause these import statements to generate unused import warnings:like "The import XXX is never used" 
issueID:UIMA-6056
type:Bug
changed files:uimaj-tools/src/main/java/org/apache/uima/tools/jcasgen/JCasTypeTemplate.java
uimaj-tools/src/main/java/org/apache/uima/tools/jcasgen/Jg.java
uimaj-tools/src/main/javajet/jcasgen/templates/JCasType.javajet
texts:JCasGen for producing FSArray is a raw type warning
With the conversion of FSArray into Generic FSArray<> the JCasGen process does not handle the Generic type properly and will cause extensive warnings in application code.The 4 methods generating warnings are:xXXX - Feature name, Generic - generic type public FSArray getXXX() { *...* } public void setXXX(FSArray v) { ... }     public Generic getXXX(int i) { ... } public void setXXX(int i, Generic v) { ... }
issueID:UIMA-6057
type:Bug
changed files:uimaj-core/src/main/java/org/apache/uima/UimaContext.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/asb/impl/FlowContainer.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/CASImpl.java
uimaj-core/src/main/java/org/apache/uima/impl/Util.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/asb/impl/FlowContainer.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/CASImpl.java
uimaj-core/src/main/java/org/apache/uima/impl/Util.java
uimaj-core/src/main/java/org/apache/uima/UimaContext.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/asb/impl/FlowContainer.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/CASImpl.java
uimaj-core/src/main/java/org/apache/uima/impl/Util.java
texts:Avoid falsely switching classloader
In some cases the classloader is switched back, although it hasn't be switched before processing.
issueID:UIMA-6059
type:Improvement
changed files:
texts:update uima-wide build pom to use more https

issueID:UIMA-606
type:Bug
changed files:uimaj-core/src/main/java/org/apache/uima/collection/impl/CollectionReaderDescription_impl.java
texts:CDE shows error "Invalid descriptor" when saving a valid collection reader descriptor that imports a type by name
How to reproduce the issue:1) Create a new collection reader using the Eclipse Plugin.2) Select a implementation class.3) Import a type descriptor by name.4) Save the descriptor.This should result in an error message saying that the descriptor is invalid, because it can not find the type descriptor.I have tried that with several valid descriptors (that work perfectly well when processed in a CPE), all giving the same error.
issueID:UIMA-6060
type:Improvement
changed files:uimaj-core/src/main/java/org/apache/uima/jcas/cas/FSArray.java
uimaj-core/src/main/java/org/apache/uima/jcas/JCas.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/CASImpl.java
uimaj-core/src/main/java/org/apache/uima/cas/CAS.java
texts:uv3 support shared, typed, 0-length FSArrays
Extend the support for lazily-created shared immutable Feature Structures to FSArrays having a particular subtype.  (The current support assumes there's no subtype).Make the creation of typed arrays optional for compatibility with UIMA v2, and earlier versions of v3.  Control this with a -Duima.  parameter 
issueID:UIMA-6061
type:Bug
changed files:
texts:UIMA-DUCC: Fix race in agent
There is a race condition in agent which leads to incorrect process reporting in Duccmon. In this scenario the following happened: agent started JP JP reported Initializing state which agent then publishes to the OR JP reported Running state but immediately after died due to process error. The agent detected process termination (before publishing Running to OR) and changed state to failed with reason UnknownThe result is that the OR thinks that the JP died while Initializing since Running state was never published. There is a small window where the race can occur.
issueID:UIMA-6064
type:Bug
changed files:uimaj-core/src/main/java/org/apache/uima/internal/util/XMLUtils.java
uimaj-core/src/main/java/org/apache/uima/internal/util/XMLUtils.java
texts:External DTD usage in XML descriptors disabled during build revision upgrade
Between version 2.10.1 and 2.10.2 the XMLParser configuration was changed (fixed, without the possibility to adjust it) to not allow for DTD and its loading from external file.This is done in XMLUtils.createSAXParserFactory() which sets the DISALLOW_DOCTYPE_DECL and LOAD_EXTERNAL_DTD feature. Before the SAXParserFactory was created without adjusting these features.While I understand that this was done to prevent malicious XML from doing nasty things, the kind how it was done is problematic: the change happened in a revision build, no major or minor number change it was not documented one cannot simply change it back like using an environment variable, method call etc. - the only workaround is to do a problematic sub-classing of XMLParser_impl with additional configuration etc.We use the DTDs for CPE descriptors quite a lot to have the descriptor in modular chunks using entities etc. Thus it is important (for the time being) to use DTD there - and we know that the XML is not problematic.Because this feature (DTD) is crucial I have marked this as a BUG since such changes should not occur in a build upgrade or it should at least be possible to get the old behavior easily back. 
issueID:UIMA-6065
type:Bug
changed files:
texts:Ruta optional rule element in FOREACH block
throws an NPE
issueID:UIMA-6067
type:Task
changed files:
texts:UIMA-DUCC: update parent pom
Update ducc's parent pom to uima parent pom v13
issueID:UIMA-6068
type:Task
changed files:
texts:Ruta: update parent pom

issueID:UIMA-6069
type:Task
changed files:
texts:Ruta: enable expansion of common arrays in annotation browser view
in order to show the elements of a string array as separate nodes
issueID:UIMA-607
type:Bug
changed files:uimaj-core/src/main/java/org/apache/uima/jcas/impl/JCasImpl.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FSClassRegistry.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/impl/PearAnalysisEngineWrapper.java
texts:Running PEAR class path switching code broken in multi-threading case (CPM)
The new facility in 2.2 to run a Pear, switching class paths, has threading issues when run from a CPM in multiple threads.  Needs a code review and fixes for case where CAS Pools are sharing one type system with all the CASes in the pool.
issueID:UIMA-6071
type:Bug
changed files:
texts:DUCC cli ducc_status info is deficient
ducc_status should display daemon type (Agent) and hostname. Example of current display: ducc-master.abc.org:42133 head: up=7 down=0 agent: up=12 down=11319=up1320=up1342=up1360=up1361=up1362=up1363=up1377=up1382=up1385=up1417=up500210=downBroker=upDatabase=upOrchestrator=upProcessManager=upResourceManager=upServiceManager=upWebserver=upducc-master-2.abc.org=up 
issueID:UIMA-6072
type:Bug
changed files:
texts:DUCC Web Server (WS) authentication check for user = self broken
Comparison of 2 strings incorrectly uses == operator.
issueID:UIMA-6073
type:Improvement
changed files:
texts:DUCC Web Server (WS) should discard "down" machines from machines page
The rule for deletion is TBD.
issueID:UIMA-6077
type:Bug
changed files:
texts:DUCC stop_ducc -ag should cause RM to stop scheduling there
When agent is quiesced it will no longer accept work, but RM will continue trying to schedule there.  This results in unnecessary JP init  "failures".
issueID:UIMA-6078
type:Bug
changed files:
texts:DUCC Orchestrator (OR) too verbose...
Switch these from INFO to DEBUG:16 Jun 2019 09:43:27,609  INFO DUCC.OrchestratorComponent - 196 reconcileJdState  master16 Jun 2019 09:43:27,609  INFO DUCC.OrchestratorComponent - 196 reconcileJdState  state: Initializing total: 15 done: 0 error: 0 killJob: false
issueID:UIMA-608
type:Improvement
changed files:
texts:Move to Java 1.5
Move the source and target levels for JVM compilation to 1.5.  This involves updating the main POM, and the uimaj-distr pom (to point to the right javadocs).Also, need to update the docs / prerequisites / FAQs etc.
issueID:UIMA-6080
type:Bug
changed files:
texts:DUCC Job Driver (JD) NPE doing status exchange with Orchestrator (OR)
java.lang.NullPointerException       at java.util.TreeMap.putAll(TreeMap.java:324)       at org.apache.uima.ducc.transport.event.common.DuccProcessMap.<init>(DuccProcessMap.java:45)       at org.apache.uima.ducc.transport.configuration.jd.JobDriverStateExchanger.setProcessMap(JobDriverStateExchanger.java:146)       at org.apache.uima.ducc.transport.configuration.jd.JobDriverStateExchanger.handle(JobDriverStateExchanger.java:210)       at org.apache.uima.ducc.transport.configuration.jd.JobDriverStateExchanger.exchange(JobDriverStateExchanger.java:319)       at org.apache.uima.ducc.transport.configuration.jd.JobDriverStateExchanger.run(JobDriverStateExchanger.java:349)
issueID:UIMA-6081
type:Improvement
changed files:
texts:DUCC keepalived_evaluator.py should record rc != 0 to system log
Also, employ -e option when invoking ducc_status to see which daemon(s) are down in system log.
issueID:UIMA-6082
type:Improvement
changed files:
texts:UIMA-DUCC: tag process as FAILED if agent unable to determine scheduling class
When an agent fails to determine scheduling class for a process as part of the OR state reconciliation, it logs a stack trace and continues. Since OR publishes its process table, the same exception is being logged and the job (service, AP) are not tagged as FAILED.Agent should tag a job/service/AP as FAILED in this case so that the OR does not try to allocate process(es) over and over again.
issueID:UIMA-6083
type:Bug
changed files:
texts:DUCC BrokerHelper ERROR messages
See attachment.
issueID:UIMA-6084
type:Improvement
changed files:
texts:DUCC Web Server (WS) login session should survive browser restart
User does not want to have to re-login after browser restart.
issueID:UIMA-6085
type:Improvement
changed files:
texts:DUCC Web Server (WS) login session should be coordinated amongst DUCC head nodes
If a user logs in to WS when master-1 is the head node, then the head node switches to master-2 the user must re-login.  The user would prefer that the login persist across head nodes in the cluster.
issueID:UIMA-6086
type:Improvement
changed files:
texts:DUCC reliability should use ducc.properties to determine virtual ip address
reason: use of nameserver is unreliable.
issueID:UIMA-6087
type:Improvement
changed files:
texts:uima core: update to UIMA Parent 13

issueID:UIMA-6088
type:Improvement
changed files:uimaj-core/src/main/java/org/apache/uima/internal/util/I18nUtil.java
texts:uv3 remove duplicate resourcebundle cache for internationalized exceptions
uv3 internationalized exceptions implemented its own bundle-caching mechanism, but the built-in Java impl already has a cache.  Remove this extra one.  This will allow better merging of improvements from v2 into v3.
issueID:UIMA-6089
type:Bug
changed files:
texts:ducc_update refuses to run even though there are no ducc daemons running on the head node comprising the attempted update
-bash-4.2$ ducc_runtime/admin/ducc_update ducc_runtime download/uima-ducc-3.0.1-SNAPSHOT-bin.tar.gz checking for ducc running, may take a few minutes...ERROR - DUCC appears to be running ... please run '/opt/ducc/install/ducc/apache-uima-ducc-3.0.0/admin/stop_ducc -a'-bash-4.2$ ps -elf | grep ducc4 S root     23999 14566  0  80   0 - 44933 poll_s 06:50 ?        00:00:00 sshd: ducc &#91;priv&#93;5 S ducc     24192 23999  0  80   0 - 44933 poll_s 06:51 ?        00:00:00 sshd: ducc@pts/00 S ducc     24193 24192  0  80   0 - 28877 do_wai 06:51 pts/0    00:00:00 -bash0 R ducc     27966 24193  0  80   0 - 38840 -      06:58 pts/0    00:00:00 ps -elf0 S ducc     27967 24193  0  80   0 - 28177 pipe_w 06:58 pts/0    00:00:00 grep --color=auto ducc
issueID:UIMA-609
type:Improvement
changed files:
texts:Cas Editor: Add automated ui tests
Add automated ui tests.
issueID:UIMA-6090
type:Improvement
changed files:uimaj-core/src/main/java/org/apache/uima/InternationalizedException.java
uimaj-core/src/main/java/org/apache/uima/InternationalizedRuntimeException.java
uimaj-core/src/main/java/org/apache/uima/internal/util/I18nUtil.java
uimaj-core/src/main/java/org/apache/uima/internal/util/I18nx_impl.java
uimaj-core/src/main/java/org/apache/uima/InternationalizedException.java
uimaj-core/src/main/java/org/apache/uima/InternationalizedRuntimeException.java
uimaj-core/src/main/java/org/apache/uima/internal/util/I18nx_impl.java
texts:refactor I18n exception and runtime exception to use common code
The two classes are identical except for some minor diffs, and having different superclasses.  Refactor to share common code for easier common future maintenance.
issueID:UIMA-6091
type:Improvement
changed files:
texts:website - add rel="noopener" to links with target=_blank
I recently learned that there's a potential security hole when using html <a> links with target = "_blank".  See https://mathiasbynens.github.io/rel-noopener/ or https://css-tricks.com/use-target_blank/ (scroll down).Adding this to our website links.
issueID:UIMA-6092
type:Improvement
changed files:
texts:Ruta: dictionary lookup on wordtable and wordlist should be more robust concerning white spaces in the dictionary
Ruta: dictionary lookup on wordtable and wordlist should be more robust concerning white spaces in the dictionary.
issueID:UIMA-6093
type:Task
changed files:
texts:Ruta: upgrade to UIMA parent pom 13

issueID:UIMA-6094
type:Bug
changed files:uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/ui/AbstractImportablePartSection.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/ui/AbstractSection.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/ui/CapabilitySection.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/ui/IndexSection.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/ui/ParameterDelegatesSection.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/ui/ParameterSection.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/ui/PriorityListSection.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/ui/SofaMapSection.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/ui/TypeSection.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/ui/AbstractImportablePartSection.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/ui/AbstractSection.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/ui/CapabilitySection.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/ui/IndexSection.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/ui/ParameterDelegatesSection.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/ui/ParameterSection.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/ui/PriorityListSection.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/ui/SofaMapSection.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/ui/TypeSection.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/ui/AbstractImportablePartSection.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/ui/AbstractSection.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/ui/AggregateSection.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/ui/CapabilitySection.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/ui/IndexSection.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/ui/TypeSection.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/ui/dialogs/AbstractDialog.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/ui/dialogs/AbstractDialogMultiColTable.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/ui/dialogs/AddCapabilityFeatureDialog.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/ui/dialogs/AddCapabilityTypeDialog.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/ui/AbstractImportablePartSection.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/ui/AbstractSection.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/ui/AggregateSection.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/ui/CapabilitySection.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/ui/IndexSection.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/ui/TypeSection.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/ui/dialogs/AbstractDialog.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/ui/dialogs/AbstractDialogMultiColTable.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/ui/dialogs/AddCapabilityFeatureDialog.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/ui/dialogs/AddCapabilityTypeDialog.java
texts:Component Description Editor not compatible with current Eclipse versions
https://stackoverflow.com/questions/56939828/why-is-cde-only-loading-a-blank-screen-for-all-of-my-xml-descriptors
issueID:UIMA-6095
type:Improvement
changed files:
texts:UIMA-DUCC: remove sleep from JP right after initialization
After initialization the JP begins to sleep for a fixed (configurable) amount of time before sending Running state to the Agent. Remove that delay.
issueID:UIMA-6096
type:Improvement
changed files:
texts:save specially built test cases for particular Jiras
In this last cycle, we had two nice test cases prepared as zip files which to show the issue, we unzipped and then ran mvn install to show the problem.Save these test cases for possible future use, or conversion to normal tests.Saved in UIMA v3 (only), in uimaj-core/src/test/resources/ExtraTests  along with some readme files.
issueID:UIMA-6097
type:Bug
changed files:
texts:Defining a nodepool rule breaks all non-rule nodepool definitions

issueID:UIMA-6098
type:Bug
changed files:
texts:DUCC reliability Agent should ignore any non-master OR publication
Agent presently accepts OR master messages, and ignores OR backup messages.  But it also potentially accepts OR messages of indeterminate type (by default).Agent should only accept master messages.Agent should log all messages received as ignored=Yes or ignored=No, and of course only process ignored=No messages.
issueID:UIMA-6099
type:Bug
changed files:
texts:DUCC should reject invalid scheduling class names
Currently job requests hang if the scheduling class is unknown
issueID:UIMA-61
type:Bug
changed files:uimaj-core/src/main/java/org/apache/uima/util/CasCreationUtils.java
uimaj-core/src/main/java/org/apache/uima/util/CasCreationUtils.java
uimaj-core/src/main/java/org/apache/uima/resource/ResourceInitializationException.java
uimaj-core/src/main/java/org/apache/uima/util/CasCreationUtils.java
uimaj-core/src/main/java/org/apache/uima/resource/ResourceInitializationException.java
uimaj-core/src/main/java/org/apache/uima/util/CasCreationUtils.java
texts:CasCreationUtils.createCas(Collection) silently ignores TypeSystemDescription objects,
The CasCreationUtils.createCas(Collection,...) methods only accept certain kinds of objects in the Collection: AnalysisEngineDescription, CollectionReaderDescription, CasInitializerDescription, CasConsumerDescription, or ProcessingResourceMetaData.  Any other kinds of objects in the collection are silently ignored.A user tried to pass a TypeSystemDescription object, expecting that it would be used to initialize the CAS type system.  This didn't work but didn't cause an error, so the user had a hard time figuring out what was wrong with their application.There's no reason why these methods could accept TypeSystemDescription objects (as well as FsIndexCollection and TypePriorities objects).  Furthermore they should throw an error if passed a type of object that is not allowed.
issueID:UIMA-610
type:Improvement
changed files:
texts:minor documentation updates - added some real world examples

issueID:UIMA-6101
type:Task
changed files:
texts:DUCC demo on Apache moved to vm3: userid duccy --> ducc
Userid changes from duccy to ducc.  Fix crontab.
issueID:UIMA-6102
type:Bug
changed files:
texts:DUCC daemons fail to fully boot when jmx URL is null
When booting, if JMX URL is unavailable (null) for recording in boot properties, the daemon fails to initialize properly, yet remains up and not fully functional.  This information is not critical for daemon operation.  This event occurred when running a 1.8 OpenJdk JDK, which did not support the JMX function.
issueID:UIMA-6104
type:Bug
changed files:
texts:Agent should accept requests from a single head-node system
The head-node state "unspecified" actually means a single-head system
issueID:UIMA-6105
type:Bug
changed files:
texts:UIMA-DUCC: fix parent pom buildnumber-maven plugin WARNING
The buildnumber-maven plugin throws this WarningMy DUCC build has many of these:&#91;WARNING&#93; Some problems were encountered while building the effective model for org.apache.uima:uima-ducc-cli:jar:3.0.1-SNAPSHOT&#91;WARNING&#93; ‘build.plugins.plugin.version’ for org.codehaus.mojo:buildnumber-maven-plugin is missing. @ org.apache.uima:uima-ducc-parent:3.0.1-SNAPSHOT, /users1/burn/workspace-DUCC/ducc/uima-ducc-parent/pom.xml, line 852, column 13Add <version>1.4</version> to fix this
issueID:UIMA-6108
type:Task
changed files:
texts:uv3 switch version to 3.1.0
due to api change in JCasGen, change version middle digit up one.
issueID:UIMA-6109
type:Improvement
changed files:
texts:Some DUCC classes are ignored by the DuccLogger
Only the main daemon packages are logged in the daemon log files ... msgs from classes in the transport & common projects are sent to system.out and lost 
issueID:UIMA-611
type:Improvement
changed files:
texts:update UIMA website with new Sandbox components

issueID:UIMA-6111
type:Bug
changed files:
texts:Service instance failures caused by resource issues should not penalize the service
If the RM purges a node (e.g. missed heartbeats) the SM should not treat that as an init or runtime failure, allowing another instance to be started.
issueID:UIMA-6112
type:Bug
changed files:
texts:JSON serializer produces repeated duplicate types
The JSON produces using the JsonCasSerializer contains errors.Tracked it back and it looks like a comparator is used to sort an arrayuimaj-core : org.apache.uima.cas.impl.CasSerializerSupport.sortedUsedTypesin method:getSortedUsedTypes() used Arrays.sort(TypeImpl[], Comparator<TypeImpl>)Used Comparator:uimaj-core : org.apache.uima.cas.impl.CasSerializerSupport.COMPARATOR_SHORT_TYPENAME (non-public)  final static Comparator<TypeImpl> COMPARATOR_SHORT_TYPENAME = new Comparator<TypeImpl>() {    public int compare(TypeImpl object1, TypeImpl object2) {      *return* object1.getShortName().compareTo(object2.getShortName());    }  }; and then the default type comparison is used for a binary searchorg.apache.uima.cas.impl.TypeImpl implements Comparable<TypeImp>  public int compareTo(TypeImpl t) {    if (this == t) {      *return* 0;    }    return (this.code < t.code) ? -1 : 1;  } In uima-json : org.apache.uima.json.JsonCasSerializer.collectUsedSubTypes()the Arrays.binarySearch(TypeImpl[], TypeImpl) is used This can lead to types incorrectly being added as not used into the parentTypesWithNoInstances IntVector which is used to add those types (duplicating the spec for a used type).
issueID:UIMA-6113
type:Bug
changed files:
texts:DUCC Apache demo services are killed, causing jobs with dependencies to hang at start-up
RM sometimes does not receive Agent publication in timely fashion on new VM3, causing the node to be declared down and the service to be killed.  Adjust ducc.properties to compensate:ducc.agent.node.metrics.publish.rate=30000ducc.agent.node.inventory.publish.rate=15000
issueID:UIMA-6115
type:Task
changed files:
texts:switch uimaj top level to be uv3, uv2 as a branch
As part of this, merge the tags as needed.  This will allow one repo for uimaj in github which has been requested by several people.The top level will eventually become "master" and the v2 will become master-v2.
issueID:UIMA-6117
type:Bug
changed files:
texts:DUCC Web Server (WS) should display "no data - not master" on Viz page
When node is not master, DUCC WS displays "no data - not master" on most pages.  Viz page should follow suit.
issueID:UIMA-6118
type:Task
changed files:
texts:Ruta: update uima version(s)

issueID:UIMA-6119
type:Bug
changed files:
texts:Ruta: anchor at disjunct rule element does not work correctly
A @(B|D) C; ... the sidestep is probably missing.
issueID:UIMA-612
type:Bug
changed files:
texts:add License and Notice files

issueID:UIMA-6120
type:Bug
changed files:
texts:ducc_update fails if not invoked from a shell
The script should not assume PWD has been set in the environment
issueID:UIMA-6121
type:Documentation
changed files:
texts:DUCC Book - review and update shared filesystem requirements, especially for Agents
Parts of DUCC Book 3.0.0 claim that a shared filesystem is required.  But this is not true and should be fixed.And, a procedure for installing an agent in a non-shared filesytem DUCC install should be provided.
issueID:UIMA-6122
type:Documentation
changed files:
texts:admin/ducc_util.py should not require ducc.private.properties as agent has no need
When attempting to start_ducc for agent that has no ducc.private.properties, the ssh and invocation of ducc.py on the agent fails because it depends on ducc_util.py that insists on doing db_configure.
issueID:UIMA-6123
type:Documentation
changed files:
texts:DUCC start_ducc should display NOTOK messages
When admin/start_ducc is employed to start an agent but the start fails with a NOTOK message, the message is suppressed making it hard for the human to understand what went wrong.NOTOK messages should be displayed.
issueID:UIMA-6125
type:Bug
changed files:
texts:ducc_update fails when DB automange is false but DB is running
&#91;ducc@ducc-master-3 ~&#93;$ ducc_runtime/admin/ducc_update ducc_runtime/ /opt/ducc/backups/ducc_runtime/Versions/v03/uima-ducc-3.0.1-SNAPSHOT-bin.tar.gz checking for ducc running, may take a few minutes...ERROR - DUCC appears to be running: Found ducc database@9.59.193.8 PID 1498Please run '/opt/ducc/install/ducc/apache-uima-ducc-3.0.0/admin/stop_ducc --all'
issueID:UIMA-6126
type:Task
changed files:
texts:Add .gitignore file to trunk
Add a .gitignore file to the repository root.
issueID:UIMA-6127
type:Bug
changed files:
texts:DUCC Web Server (WS) should allow duccinator-update request via http
Nothing secret for duccinator-update.
issueID:UIMA-6129
type:Bug
changed files:
texts:The thread may deadlock if other thread interrupted which use jcas
I use FutureTask to kill the thread spend a lot of time，but it will cause deadlock.at sun.misc.Unsafe.park(Native Method)at sun.misc.Unsafe.park(Native Method) - parking to wait for  <0x000000070435e808> (a java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject) at java.util.concurrent.locks.LockSupport.park(LockSupport.java:175) at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:2039) at org.apache.uima.jcas.impl.JCasHashMapSubMap.getReserve(JCasHashMapSubMap.java:303) at org.apache.uima.jcas.impl.JCasHashMap.getReserve(JCasHashMap.java:318) at org.apache.uima.jcas.impl.JCasImpl.getJfsFromCaddr(JCasImpl.java:1154) at org.apache.uima.jcas.impl.JCasImpl$JCasFsGenerator.createFS(JCasImpl.java:912) at org.apache.uima.jcas.impl.JCasImpl$JCasFsGenerator.createFS(JCasImpl.java:873) at org.apache.uima.cas.impl.CASImpl.ll_getFSForRef(CASImpl.java:3751) at org.apache.uima.cas.impl.CASImpl.createFS(CASImpl.java:2231) at org.apache.uima.cas.impl.FSIteratorWrapper.get(FSIteratorWrapper.java:63) at org.apache.uima.cas.impl.FSIteratorAggregate.get(FSIteratorAggregate.java:76) at org.apache.uima.cas.impl.FSIteratorImplBase.next(FSIteratorImplBase.java:66) at org.apache.uima.cas.impl.FSIteratorImplBase.next(FSIteratorImplBase.java:32)why ?
issueID:UIMA-613
type:Bug
changed files:
texts:remove compiler warnings after moving to Java 1.5

issueID:UIMA-6130
type:Improvement
changed files:
texts:Support restarting of experiments from the experiments page
From the experiment details page select some tasks to be rerun restart the experimentJED should be launched as an AP so it can be easily restarted as an AP
issueID:UIMA-6131
type:Improvement
changed files:
texts:UIMA Ruta SeedLexer throws Error instead of exception
The SeedLexer and possibly other related classes used by Ruta throw java.lang.Error instead of java.lang.Exception. This is usually only thrown by the JVM when it’s really impossible to continue the process, e.g. out of memory, linkage errors or fatal VM failures, and it therefore not meant to be caught under normal circumstances, so most runtime environment don't capture these. This can therefore cause the whole process to fail instead of just the document being processed.It would therefore be preferable if these components throw a type of java.lang.Exception instead, so that the process can proceed with the next document without the need to hook into the runtime core and catch java.lang.Error. The errors are also not subclassed, so it's awkward to distinguish them by checking for the message string itself.
issueID:UIMA-6132
type:Bug
changed files:
texts:Ruta: support label expressions at macro action
ACTION CreateDate(ANNOTATION year, ANNOTATION month, ANNOTATION day) = CREATE(Date, "kind" = "DATE", "year" = year, "month" = month, "day" = day);ACTION CreateDateInterval(ANNOTATION startDate, ANNOTATION endDate) = CREATE(DateInterval, "kind" = "DATEINTERVAL", "startDate" = startDate, "endDate" = endDate);(day:DayInd{-> d1:CreateDate(d2.year,d2.month,day)} TemporalIntervalEndIndicator     d2:@Date{d2.day!=null, d2.month!=null}){-> CreateDateInterval(d1, d2)};
issueID:UIMA-6134
type:Bug
changed files:
texts:DUCC Orchestrator (OR) request validation
Insure valid requests submitted to OR.
issueID:UIMA-6135
type:Bug
changed files:
texts:Ruta: NullPointerException is thrown when closing the Eclipse UIMA annotation editor
Steps to reproduce: Create Ruta project in eclipse (Version: 2019-06 (4.12.0)) Create an arbitrary Ruta script Put a sample.txt file in the input directory Run the Ruta script Open the sample.txt.xmi file from the output directory in the UIMA Annotation Editor Close the UIMA Annotation Editor A java.lang.NullPointerException is thrown Exception Stack Trace:java.lang.NullPointerExceptionjava.lang.NullPointerException at org.apache.uima.ruta.caseditor.view.tree.AnnotationTreeViewPage.dispose(AnnotationTreeViewPage.java:384) at org.apache.uima.caseditor.editor.CasEditorViewPage.dispose(CasEditorViewPage.java:226) at org.apache.uima.caseditor.editor.CasEditorView.doDestroyPage(CasEditorView.java:218) at org.eclipse.ui.part.PageBookView.removePage(PageBookView.java:810) at org.eclipse.ui.part.PageBookView.partClosed(PageBookView.java:743) at org.eclipse.ui.part.PageBookView$1.partClosed(PageBookView.java:1016) at org.eclipse.ui.internal.WorkbenchPage$14.run(WorkbenchPage.java:5081) at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45) at org.eclipse.ui.internal.WorkbenchPage.firePartClosed(WorkbenchPage.java:5078) at org.eclipse.ui.internal.e4.compatibility.CompatibilityPart.lambda$0(CompatibilityPart.java:108) at org.eclipse.e4.ui.services.internal.events.UIEventHandler.lambda$0(UIEventHandler.java:38) at org.eclipse.swt.widgets.Synchronizer.syncExec(Synchronizer.java:236) at org.eclipse.ui.internal.UISynchronizer.syncExec(UISynchronizer.java:146) at org.eclipse.swt.widgets.Display.syncExec(Display.java:6018) at org.eclipse.e4.ui.internal.workbench.swt.E4Application$1.syncExec(E4Application.java:219) at org.eclipse.e4.ui.services.internal.events.UIEventHandler.handleEvent(UIEventHandler.java:38) at org.eclipse.equinox.internal.event.EventHandlerWrapper.handleEvent(EventHandlerWrapper.java:205) at org.eclipse.equinox.internal.event.EventHandlerTracker.dispatchEvent(EventHandlerTracker.java:203) at org.eclipse.equinox.internal.event.EventHandlerTracker.dispatchEvent(EventHandlerTracker.java:1) at org.eclipse.osgi.framework.eventmgr.EventManager.dispatchEvent(EventManager.java:234) at org.eclipse.osgi.framework.eventmgr.ListenerQueue.dispatchEventSynchronous(ListenerQueue.java:151) at org.eclipse.equinox.internal.event.EventAdminImpl.dispatchEvent(EventAdminImpl.java:132) at org.eclipse.equinox.internal.event.EventAdminImpl.sendEvent(EventAdminImpl.java:75) at org.eclipse.equinox.internal.event.EventComponent.sendEvent(EventComponent.java:44) at org.eclipse.e4.ui.services.internal.events.EventBroker.send(EventBroker.java:55) at org.eclipse.e4.ui.internal.workbench.UIEventPublisher.notifyChanged(UIEventPublisher.java:63) at org.eclipse.emf.common.notify.impl.BasicNotifierImpl.eNotify(BasicNotifierImpl.java:424) at org.eclipse.e4.ui.model.application.ui.impl.UIElementImpl.setWidget(UIElementImpl.java:267) at org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer.unbindWidget(SWTPartRenderer.java:150) at org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer.disposeWidget(SWTPartRenderer.java:173) at org.eclipse.e4.ui.workbench.renderers.swt.ContributedPartRenderer.disposeWidget(ContributedPartRenderer.java:273) at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeRemoveGui(PartRenderingEngine.java:958) at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.access$1(PartRenderingEngine.java:886) at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$4.run(PartRenderingEngine.java:881) at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45) at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.removeGui(PartRenderingEngine.java:865) at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.subscribeTopicToBeRendered(PartRenderingEngine.java:186) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:498) at org.eclipse.e4.core.internal.di.MethodRequestor.execute(MethodRequestor.java:58) at org.eclipse.e4.core.di.internal.extensions.EventObjectSupplier$DIEventHandler.handleEvent(EventObjectSupplier.java:92) at org.eclipse.equinox.internal.event.EventHandlerWrapper.handleEvent(EventHandlerWrapper.java:205) at org.eclipse.equinox.internal.event.EventHandlerTracker.dispatchEvent(EventHandlerTracker.java:203) at org.eclipse.equinox.internal.event.EventHandlerTracker.dispatchEvent(EventHandlerTracker.java:1) at org.eclipse.osgi.framework.eventmgr.EventManager.dispatchEvent(EventManager.java:234) at org.eclipse.osgi.framework.eventmgr.ListenerQueue.dispatchEventSynchronous(ListenerQueue.java:151) at org.eclipse.equinox.internal.event.EventAdminImpl.dispatchEvent(EventAdminImpl.java:132) at org.eclipse.equinox.internal.event.EventAdminImpl.sendEvent(EventAdminImpl.java:75) at org.eclipse.equinox.internal.event.EventComponent.sendEvent(EventComponent.java:44) at org.eclipse.e4.ui.services.internal.events.EventBroker.send(EventBroker.java:55) at org.eclipse.e4.ui.internal.workbench.UIEventPublisher.notifyChanged(UIEventPublisher.java:63) at org.eclipse.emf.common.notify.impl.BasicNotifierImpl.eNotify(BasicNotifierImpl.java:424) at org.eclipse.e4.ui.model.application.ui.impl.UIElementImpl.setToBeRendered(UIElementImpl.java:314) at org.eclipse.e4.ui.internal.workbench.PartServiceImpl.hidePart(PartServiceImpl.java:1380) at org.eclipse.e4.ui.internal.workbench.PartServiceImpl.hidePart(PartServiceImpl.java:1310) at org.eclipse.e4.ui.workbench.renderers.swt.StackRenderer.closePart(StackRenderer.java:1267) at org.eclipse.e4.ui.workbench.renderers.swt.StackRenderer.access$0(StackRenderer.java:1253) at org.eclipse.e4.ui.workbench.renderers.swt.StackRenderer$3.close(StackRenderer.java:1121) at org.eclipse.swt.custom.CTabFolder.onMouse(CTabFolder.java:1956) at org.eclipse.swt.custom.CTabFolder.lambda$0(CTabFolder.java:335) at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89) at org.eclipse.swt.widgets.Display.sendEvent(Display.java:5874) at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1400) at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:5138) at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:4663) at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1173) at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338) at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1062) at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155) at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:635) at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338) at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:559) at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:150) at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:155) at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203) at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:137) at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:107) at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:400) at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:498) at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:660) at org.eclipse.equinox.launcher.Main.basicRun(Main.java:597) at org.eclipse.equinox.launcher.Main.run(Main.java:1468) at org.eclipse.equinox.launcher.Main.main(Main.java:1441)
issueID:UIMA-6136
type:Bug
changed files:uimaj-core/src/main/java/org/apache/uima/cas/impl/FSIndexComparatorImpl.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/LinearTypeOrderBuilderImpl.java
texts:FSIndexComparatorImpl.equalsWithoutType() gets slow for many CASes with the same TS
When creating several hundred CASes with the same type system, the `shareExisting` mechanism which is designed to save on memory starts eating into CPU time quite a lot.This screenshot shows that in my particular case, the method is called ~11mio times and takes the bulk of the processing time. The call hierarchy is a bit messed up though - actually this happens when the CASes are initialized. The second screenshot shows the actual call hierarchy, but for some reason, the profile doesn't properly dive into the `equals` method here and doesn't count the time spent in `equalsWithoutType`. ! So either the method shouldn't be called that often - or - it should be way faster.In the example, I have like 1800 CAS instances and their type system has upwards of 200 types.
issueID:UIMA-6138
type:Task
changed files:
texts:Switch SCM from SVN to Git
switch the poms to git from svn.  Following https://maven.apache.org/scm/git.html, and the recommendation to not use http (but always use https), the new urls:scm:git:https://github.com/apache/uima-uimacppNo username or authentication is included; we presume these are inserted by the maven release plugin for each user.
issueID:UIMA-614
type:Bug
changed files:
texts:remove compiler warnings after moving to Java 1.5

issueID:UIMA-6141
type:Task
changed files:
texts:Update uimaj-eclipse-update-site pom - remove combine.self attribute
It appears that maven may have changed (not sure...) how you specify these attributes, and no longer supports them on the <configuration...> element, but only on the children of that element.Scan the poms for these and verify they're in a child of <configuration> or if not, move to a child.
issueID:UIMA-6142
type:Bug
changed files:
texts:DUCC Orchestrator (OR) not killing Job when first JP fails to initialize
Put sequence number on each  JP, starting with 0.  If JP 0 files then kill job.
issueID:UIMA-6143
type:Task
changed files:
texts:for Git releases the developer connection scm needs to point to a repo
The eclipse plugin build when doing a release prepare, at the end pushes the head to the remote.  For the repo url, it uses what you have in the scm developer-connection.  That must point to the repo, not to a folder within the repo.   Fix this for all projects in uimajTwo ways to fix this.  1) require Maven 3.6.1 or later, using the maven-enforcer-plugin, and use the scm attributes child.scm.developerConnection.inherit.append.path=false and remove all scm elements other than at the top level, or 2) update all scm elements.  Probably do the latter, because it doesn't require maven 3.6.1, and the docs are ambiguous re: top level
issueID:UIMA-6145
type:Bug
changed files:
texts:DUCC stop_ducc --head does not always work???
&#91;ducc@ducc-master-1 admin&#93;$ ./stop_ducc --head&#91;ducc@ducc-master-1 admin&#93;$
issueID:UIMA-6146
type:Bug
changed files:
texts:uimaj package.html files in wrong format for javadoc tool
Fix the package.html files in the source to be appropriate for what the javadoc tool does with this.  In particular,a) treat the first sentence of the body special (like a title) (see https://docs.oracle.com/javase/7/docs/technotes/tools/solaris/javadoc.html#packagecomment )b) remove <h1> etc markup, Java release 13 complains.
issueID:UIMA-6148
type:Bug
changed files:
texts:Ruta: FSArray features with size >=2 are matched in a FOREACH loop
FOREACH(entry) Entry{}{    entry.descriptions; //just the first is fetched, the rest are ignored} 
issueID:UIMA-6149
type:Improvement
changed files:
texts:Ruta: automatic refreshing of generated descriptors
Automatic refreshing of generated descriptors in was deactivated in the RutaBuilder in context of UIMA-5669
issueID:UIMA-615
type:Improvement
changed files:
texts:update DictionaryBuilder tests to work with XML dictionary formats

issueID:UIMA-6150
type:Bug
changed files:
texts:Ruta: right to left matching broken in restricted window
BLOCK(Sentence) Sentence{}{  Abbreviation{-IS(SentenceBreakingAbbreviation)} se:@SENTENCEEND{ENDSWITH(Sentence)};  Abbreviation{-IS(SentenceBreakingAbbreviation)} se:SENTENCEEND{ENDSWITH(Sentence)};}
issueID:UIMA-6154
type:Bug
changed files:
texts:Ruta: wildcard lookahead falsely points to previous match
String document = "a b c. a b c.";    String script = "ANY+{-PARTOF({PERIOD, T1})->T1};\n";    script += "\"a\" -> T2, T3;\n";    script += "\"c\" -> T3;\n";    script += "T1 -> { T2 # T3{-> T4};};\n";
issueID:UIMA-616
type:Bug
changed files:uimaj-examples/src/main/java/org/apache/uima/examples/xmi/Ecore2UimaTypeSystem.java
uimaj-examples/src/main/java/org/apache/uima/examples/xmi/Ecore2UimaTypeSystem.java
texts:Ecore2UimaTypeSystem makes unjustified assumptions about URIs
Ecore2UimaTypeSystem.namespaceUri2UimaNamespace() throws a NullPointerException when it processes a URI for which uri.getPath() is null.  This is the case for URNs, e.g. urn:mpeg:mpeg7:schema:2001 .Also, the same function fails to filter out hyphens, which are allowed in XML namespaces but not in UIMA Types.  I get the following error somewhere later on:Warning: CAS could not be created from the output type system.  The following problem occurred:Invalid type name "schemas.sapir-mpeg7extensions-2007-07.AnnotatedTextContentType".  Type names must start with a letter and consist only of letters, digits, or underscores.I'll attach a patch if I can figure out how...
issueID:UIMA-617
type:Bug
changed files:
texts:change POM to work with Java 1.5

issueID:UIMA-618
type:Improvement
changed files:
texts:add documentation infrastructure for the DictionaryAnnotator

issueID:UIMA-619
type:Bug
changed files:uimaj-core/src/main/java/org/apache/uima/util/CasCreationUtils.java
texts:Wrong error message when loading type system
If I try to load the following type system definition<typeSystemDescription xmlns="http://uima.apache.org/resourceSpecifier">  <name>InfomagicTypeSystem</name>  <types>    <typeDescription>      <name>Foo</name>      <supertypeName>Bar</supertypeName>    </typeDescription>    <typeDescription>      <name>Bar</name>      <supertypeName>Baz</supertypeName>    </typeDescription>  </types></typeSystemDescription>  I get the error message 'Undefined type "Bar", referenced as supertype of type "Foo"'.  This is misleading, because Bar is defined.  The real problem is that Baz is undefined.This is order-dependent: if I define Bar before Foo, then I get the appropriate message about Baz being undefined.
issueID:UIMA-62
type:New Feature
changed files:
texts:Provide an example CasMultiplier that merges CASes
We claim that CasMultipliers can be used to merge CASes as well as split them, but we don't provide an example.  Implementing such an example would also help us work out any remaining issues for implementing merging.  For example, we probably need a utility to do a deep copy of FS from one CAS to another.
issueID:UIMA-620
type:Bug
changed files:
texts:switch concept file parsing from File to InputStream
Switch concept file parsing from File to InputStream so the the concept xml file can also be in a jar file searched by the class loader.
issueID:UIMA-621
type:Bug
changed files:
texts:change the way to add the compiled sources to the PEAR package
change the way to add the compiled sources to the PEAR package. Currently the compiled classes are copied to the bin directory which is additionally added to the PEAR classpath. In the new version, the Maven generated jar file is copied to the lib directory of the PEAR packaged and the classpath is updated accordingly.
issueID:UIMA-622
type:Task
changed files:
texts:Add links to "thanks" and "sponsors" pages to UIMA home page
This is apparently now a requirement, see corresponding thread on incubator mailing list.
issueID:UIMA-623
type:Bug
changed files:
texts:test case for UIMA-607 fails on Linux
The test case for 607 involves using a pear in a CPM pipeline.  The test tries to avoid "installing" the pear each time, and fails with issues around different classpath separator characters, and file name separators.
issueID:UIMA-624
type:New Feature
changed files:
texts:UIMA Sandbox BSF Annotator initial code drop
Here is the BSF Scripting Annotator as discussed in the uima-dev list.Comments are welcomeOlivier
issueID:UIMA-625
type:Bug
changed files:
texts:update DictionaryAnnotator message catalog

issueID:UIMA-626
type:Improvement
changed files:uimaj-core/src/main/java/org/apache/uima/cas/impl/FeaturePathImpl.java
texts:Bring FeaturePathImpl to the 3rd millenium
Vector -> ArrayList, generics
issueID:UIMA-627
type:New Feature
changed files:
texts:Create SimpleServer project
Create project and do initial commit.
issueID:UIMA-628
type:Bug
changed files:
texts:PearRuntimeTest use the wrong PEAR files for testing

issueID:UIMA-629
type:Bug
changed files:uimaj-examples/src/main/java/org/apache/uima/examples/xmi/XmiWriterCasConsumer.java
uimaj-tools/src/main/java/org/apache/uima/tools/components/XmiWriterCasConsumer.java
texts:Default file names produced by XmiWriterCasConsumer don&#39;t have .xmi extension and can&#39;t be read by XmiCollectionReader
If the original source file name is not present in the CAS, the XmiWriterCasConsumer names the output file "doc0","doc1", etc,, with no .xmi extension. The XmiCollectionReader will only read files with .xmi extensions.  This is quite annoying if you're trying to break up a pipeline into two parts, writing and reading XMI files in the middle.
issueID:UIMA-63
type:Sub-task
changed files:uimaj-core/src/main/java/org/apache/uima/UIMARuntimeException.java
uimaj-core/src/main/java/org/apache/uima/util/CasCopier.java
texts:Create utility for doing deep copy of FS from one CAS to another

issueID:UIMA-630
type:Improvement
changed files:uimaj-core/src/main/java/org/apache/uima/cas/impl/TypeSystemUtils.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/TypeSystemUtils.java
texts:Make TypeSystemUtils.isIdentifier() public so it can be accessed by client code

issueID:UIMA-631
type:Improvement
changed files:
texts:Switch dictionary file parsing from File input to InputStream
Switch dictionary file parsing from File to InputStream so the the dictionary xml file can also be in a jar file searched by the class loader.
issueID:UIMA-632
type:New Feature
changed files:
texts:Add config XML parsing to SimpleServer project

issueID:UIMA-633
type:Bug
changed files:uimaj-core/src/main/java/org/apache/uima/InternationalizedException.java
texts:Class loading issue with ResourceBundle when using the UIMAClassloader
currently we have the issue with UIMA components that custom messages in exception cannot be resolved when the UIMAClassloader is used to load the custom component. This is the case when using the PEAR runtime. To work around this issue we say that the custom components can throw own exception class that is derived from the UIMA exception classes. This should work because we thought that the method ResourceBundle.|getBundle(baseName, locale) |use the Classloader of the current object to resolve the messages. That's also what the JavaDoc says:"Gets a resource bundle using the specified base name and locale, and the caller's class loader.Calling this method is equivalent to calling |getBundle(baseName, locale, this.getClass().getClassLoader())| ...."But unfortunately this is not true in any case. So it does also not work for out UIMA case.If we have the custom exception example below, let's see what happens.public MyException extends AnnotatorPrcoessException {  public MyException (String aMessageKey, Object[] aArguments) {     super("myExceptionMessages", aMessageKey, aArguments);  }}when the exception message is localized, the method getLocalizedMessage() is called on the MyException object. The getLocalizedMessage() method is not implemented in the MyException class, it is inherited from the InternationalizedException class.     public String getLocalizedMessage() {     ....     ResourceBundle.getBundle(bundleName, locale);     ....   }If getLocalizedMessage() method is called, the getBundle(bundleName, locale) method resolves the classloader that is used to resolve the bundleName. In our case the classloader of the class InternationalizedException is used here since there the getLocalizedMessage() method is defined. But this is in case of the UIMAClassloader usage not the classloader of the MyException object that should be used here, at least if we trust the JavaDocs. To solve this issue we can easily hand over the MyException object classloader to the getBundle() method like:   ResourceBundle.getBundle(bundleName, locale, this.getClass().getClassloader());The fix is done in the InternationalizedException class so it work for all derived exceptions.
issueID:UIMA-634
type:Improvement
changed files:
texts:improve DictionaryAnnotator exception handling

issueID:UIMA-635
type:Improvement
changed files:
texts:add documentation for the PearPackagingMavenPlugin

issueID:UIMA-636
type:Improvement
changed files:uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/MultiPageEditor.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/point/IUimaMultiPageEditor.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/TAEConfiguratorPlugin.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/MultiPageEditor.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/point/IUimaEditorExtension.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/model/DescriptorTCAS.java
texts:Improve CDE to allow other tools to re-use its functionality to edit a new UIMA Xml descriptor
Improve CDE to allow other tools to re-use its functionality to edit a new UIMA Xml Descriptor.With this improvement, other tools can edit a newly defined UIMA descriptor with the following characteristics: End-user will see the currently existing single menu item of CDE to edit any UIMA Xml descriptor (including the newly defined descriptor) Some features from CDE can be re-used by the new editor (XML source editing, dialogs, error handlings, etc.)
issueID:UIMA-637
type:Improvement
changed files:
texts:add multi-word separator configuration for the DictionaryAnnotator

issueID:UIMA-638
type:Improvement
changed files:uimaj-tools/src/main/java/org/apache/uima/tools/cvd/ArrayNode.java
uimaj-tools/src/main/java/org/apache/uima/tools/cvd/FSNode.java
texts:CVD should allow viewing FSArrays longer than 20 elements
In the CVD's FS display (lower left panel), if you expand an FSArray it will only show you the first 20 elements.  There should be a way to see all of the elements, perhaps with the same powers-of-10 display that the index view provides.
issueID:UIMA-639
type:Bug
changed files:
texts:udpate ReleaseNotes for release 2.2.1

issueID:UIMA-64
type:Task
changed files:
texts:Remove the package org.apache.uima.tttypesystem
Adam Lally wrote:> It looks like there's only one reference, from the test cases, and> that could be replaced.>> -AdamYes, we need to get rid of it.  There are external references, but we'llhave to find a different solution.  Please open a JIRA ticket, Michaelor I will take care of it.--Thilo
issueID:UIMA-640
type:New Feature
changed files:uimaj-core/src/main/java/org/apache/uima/cas/impl/TypeSystemUtils.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/TypeSystemUtils.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/TypeSystemUtils.java
texts:Add more convenience methods to TypeSystemUtils

issueID:UIMA-641
type:Bug
changed files:
texts:CPM test case fails with Sun JVM
Failed tests:   testHasNextWithOutOfMemoryError(org.apache.uima.collection.impl.cpm.CpmCollectionReader_ErrorTest)
issueID:UIMA-642
type:New Feature
changed files:
texts:allow RegularExpressionAnnotator to match on featurePath values
allow the RegularExpressionAnnotator to match also on a featurePath and not only on the covered text of an annotation
issueID:UIMA-643
type:Bug
changed files:
texts:TypeSystemUtil.type2TypeDescription() throws NPE when the superType is null
If the "aType" type does NOT have superType, the method TypeSystemUtil.type2TypeDescription(Type aType, TypeSystem aTypeSystem) throwa a NULL pointer exception.
issueID:UIMA-644
type:Improvement
changed files:
texts:update RegexAnnotator tests after test coverage analysis

issueID:UIMA-645
type:New Feature
changed files:
texts:minor code updates for WhitespaceTokenizer
use Java 5 generics externalize strings
issueID:UIMA-646
type:Bug
changed files:
texts:remove classpath as required argument for the PEAR packaging plugin
If the PEAR component does not refer any external library, it is not necessary to specify a classpath
issueID:UIMA-647
type:Improvement
changed files:
texts:add DictionaryAnnotator tests

issueID:UIMA-648
type:New Feature
changed files:
texts:Add test cases to SimpleServer

issueID:UIMA-649
type:Bug
changed files:uimaj-core/src/main/java/org/apache/uima/cas/CAS.java
uimaj-core/src/main/java/org/apache/uima/cas/FSIndexRepository.java
texts:CAS.getAnnotationIndex(Type) does creates invalid index objects
CAS.getAnnotationIndex(Type type) should return null when type is not an annotation.  Instead, a non-null index object is created that throws an NPE when iterator() is called.  This sounds awfully familiar, but it must have slipped through the cracks somehow.
issueID:UIMA-65
type:Bug
changed files:
texts:CAS.setSofaDataString on Initial View throws ArrayIndexOutOfBoundsException
If I create a new CAS:CAS cas = CasCreationUtils.createCas(new TypeSystemDescription_impl(), null, null);And then call cas.setSofaDataString("this is a test","text");I get an ArrayIndexOutOfBoundsException.However, if I call cas.setDocumentText("this is a test");it works.There is a slight difference in their implementations.  setSofaDataString was calling this.baseCas.createInitialSofa(mime), whereas setDocumentText was calling this.createInitialSofa(mime).
issueID:UIMA-650
type:Improvement
changed files:
texts:update website with sandbox BSF annotator abstract
add BSF annotator to Sandbox
issueID:UIMA-651
type:New Feature
changed files:
texts:add regex variables to the concept file syntax

issueID:UIMA-652
type:New Feature
changed files:
texts:Add servlet code to SimpleServer

issueID:UIMA-653
type:Bug
changed files:
texts:allow feature normalization also on non-String based features

issueID:UIMA-654
type:Bug
changed files:
texts:add missing license header

issueID:UIMA-655
type:Bug
changed files:
texts:testMergeTypeSystemElementType(org.apache.uima.util.CasCreationUtilsTest) fails on Linux

issueID:UIMA-656
type:Bug
changed files:
texts:Eclipse update site not working - nothing shows up as selectable
Eclipse update site not working.  Initial look seems to indicate that the feature(s) need their versions updated.
issueID:UIMA-657
type:Improvement
changed files:
texts:Eclipse Update site should keep previous versions
The Eclipse update site should be restructured to keep all versions on the site.  Right now it regenerates the whole site, and previous versions would be lost.
issueID:UIMA-658
type:Bug
changed files:
texts:Cas Editor: Change version to 2.2.1

issueID:UIMA-659
type:Bug
changed files:
texts:Conform Eclipse update site to Apache Distribution location requirements
Incubator_Policy was updated Oct 27 2007 to say that all distributions must be from www.a.o/dist/incubator/<podlingName> (see http://mail-archives.apache.org/mod_mbox/incubator-general/200710.mbox/%3cf470f68e0710081014lfccb455rf0ad881a7608ef85@mail.gmail.com%3eTherefore, the distribution site for the eclipse plugins needs to be from that same point.  Following convention (e.g. how geronimo does it), we need to change the update site to www.a.o/dist/incubator/uima/eclipse/updates
issueID:UIMA-66
type:Sub-task
changed files:uimaj-examples/src/main/java/org/apache/uima/examples/SourceDocumentInformation.java
uimaj-examples/src/main/java/org/apache/uima/examples/casMultiplier/SimpleTextSegmenter.java
uimaj-examples/src/main/java/org/apache/uima/examples/casMultiplier/SimpleTextMerger.java
texts:Create example SimpleTextMerger

issueID:UIMA-660
type:New Feature
changed files:
texts:Add mirrors support to our website for use by Eclipse Update Site
The mirroring support needs a small script in order to access the current set of apache mirrors.  This change adds a subdirectory to our website called mirrors-support and one .cgi file for the eclipse update site to refer to, which will get the list of mirrors.Reference:  General info on setting this up:  http://www.nabble.com/Re%3A-Doing-a-%22release%22-which-includes-an-Eclipse-%22update-site%22-p14038076.html
issueID:UIMA-661
type:Improvement
changed files:
texts:update docs for Eclipse Update Site install
Document Eclipse update site, and make that the preferred way to install
issueID:UIMA-662
type:Improvement
changed files:
texts:Fix running footer in PDF docs having text overflow
PDF formatting puts the "release" info into the odd-numbered pages. Originally this was a short string, like 2.1.  It's now "Version 2.1.1-incubating" and was overflowing the area allotted for it.  Fix is to change the style to accommodate the larger version string.
issueID:UIMA-663
type:Bug
changed files:uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/ui/ResourceDependencySection.java
texts:CDE Resource Dependency page throwing NPE if XML missing <resourceManagerConfiguration> element
CDE Resource Dependency page throwing NPE if XML missing <resourceManagerConfiguration> element.  Visual effect is that the area of the screen for showing external resource bindings is not redrawn.This only occurs if the <resourceManagerConfiguration> element is completely missing.  It works if it is there but "empty":<resourceManagerConfiguration/>.Bug found during linux testing of CDE for 2.2.1, but also happens on Windows.
issueID:UIMA-664
type:Improvement
changed files:uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/MultiPageEditor.java
uimaj-core/src/main/java/org/apache/uima/impl/CustomResourceFactory_impl.java
uimaj-core/src/main/java/org/apache/uima/resource/ResourceInitializationException.java
texts:CustomResourceFactory_impl not catching exceptions when calling out to initialize method
While testing the CDE, found an instance where a custom resource was incorrectly configured (things were missing that it needed in the class path).  The result of this was a silent failure to start the CDE editor, although an entry was noted in the Eclipse error log.  This was because the missing class path caused a NoClassDefFound exception to be thrown, but nobody (except the top-most Eclipse UI code) caught it.I think the right place for putting a try/catch is around the point in the CustomResourceFactory where it calls out to that resource's "initialize" method.  If that throws an exception, it should be caught and wrapped with a new ResourceInitializationException, which says that the nested exception happened while trying to initialize the custom resource, and identifying the custom resource.
issueID:UIMA-665
type:Bug
changed files:
texts:sometimes the test testHasNextWithOutOfMemoryError() for test class CpmCollectionReader_ErrorTest fails
sometimes this test case fails... I will investigate the issue
issueID:UIMA-666
type:Improvement
changed files:
texts:update feature normalization interface - add additional information

issueID:UIMA-667
type:Bug
changed files:uimaj-cpe/src/main/java/org/apache/uima/collection/impl/cpm/container/deployer/vinci/VinciCasProcessorDeployer.java
texts:CPE Managed (aka "Local") deployment mode on Linux has undocumented dependency on ksh
I tried to test CPE managed deployment on a Linux machine and got the exception message "/bin/ksh: not found".  This particular machine doesn't seem to have ksh installed.VinciCasProcessorDeployer.java line 465 explicitly adds "/bin/ksh -c" as the command to execute for Linux.  Why is this?  Would sh suffice instead?  It would be a safer assumption that sh was installed.
issueID:UIMA-668
type:Bug
changed files:uimaj-cpe/src/main/java/org/apache/uima/collection/impl/cpm/container/deployer/JavaApplication.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/cpm/container/deployer/RunnableApplication.java
texts:CPM descriptors using local managed deployment fail on Linux if no PATH supplied in descriptor
CPM Local deployment mode has code to merge supplied Classpath and Path with values from environment.  This code is broken.  In particular, if no supplied Path values are given, no environment values are merged, either.
issueID:UIMA-669
type:New Feature
changed files:
texts:update WhitespaceTokenizer to be sofa aware

issueID:UIMA-67
type:Sub-task
changed files:uimaj-examples/src/main/java/org/apache/uima/examples/cpe/FileSystemCollectionReader.java
uimaj-core/src/main/java/org/apache/uima/flow/impl/FixedFlowController.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/impl/AggregateAnalysisEngine_impl.java
uimaj-core/src/main/java/org/apache/uima/flow/impl/CapabilityLanguageFlowController.java
texts:Use custom flow controller to drop segments after they are merged.

issueID:UIMA-672
type:Bug
changed files:
texts:Wrong URL for mirrors support in the Eclipse update site
The <site> element attribute "mirrorsURL" has a typo - it's missing the "/uima/" after the "http://incubator.apache.org"...There are likely to be other issues with getting mirrors to work, so let's not block 2.2.1 for this, but if other issues come up for 2.2.1, let's get this fix in.
issueID:UIMA-673
type:Bug
changed files:
texts:OpenNLP error: not in GZIP format
HiI want to use OpenNLP tool in UIMA to do some NLP task. I go through the OpenNLP readme file. But when I test the first component of opennlp 'sentence detector', it gives me following error:"org.apache.uima.resource.ResourceInitializationException: Initilization of annotator class "org.apache.uima.examples.opennlp.annotator.SentenceDetector" failed (Description: File:/c:/program files/apache-uima/examples/opennlp_wrappers/descriptors/opennlpsentencedetector.xml) causedby: org.apache-uima.resource.ResourceInitializationExceptionCausedby: java.io.IOException: not in GZIP format."Can anybody help me to resolve this issue.Note: Attached a screenshot for the above error.
issueID:UIMA-674
type:Task
changed files:
texts:Integration UIMA with Mysql
Hi I need to integrate UIMA with Mysql as a source of input and output. Anybody have worked on relate a RDBMS to UIMA as a source and destination. If not, we have to thought in this direction also.Regards,Ashu
issueID:UIMA-675
type:Bug
changed files:
texts:Maven can&#39;t handle non-test classes that contain the word "Test" in their name

issueID:UIMA-676
type:Bug
changed files:
texts:Performance problem with XMI serialization implementation of string data normalization
The XMI serialzation used UnicodeString.findAndReplace(...) to escape XML special characters which is not efficient and should use the utilities available in Xerces.
issueID:UIMA-677
type:Bug
changed files:
texts:improve MD5 and SHA1 checksum generation
Comes up on the incubator mailing list:There are some problems with the MD5 and SHA1 files.For example, uimaj-2.2.1-incubating-bin.tar.bz2.md5:================uimaj-2.2.1-incubating-bin.tar.bz2: 53 20 6A FB 75 1F 07 9D  BB 12 82 58 D0 7D                                    CA 4B================The hash is spread over two lines and into hex pairs. The normalformat is either:53206afb751f079dbb128258d07dca4bor53206afb751f079dbb128258d07dca4b *uimaj-2.2.1-incubating-bin.tar.bz2The SHA1 checksums have the same problem.
issueID:UIMA-678
type:Improvement
changed files:
texts:Update notice file
Add inclusion of eclipse (eclipse.org)Add inclusion of svgicons (http://sourceforge.net/projects/svgicons)
issueID:UIMA-679
type:New Feature
changed files:
texts:update UIMA website with release 2.2.1-incubating

issueID:UIMA-68
type:Sub-task
changed files:
texts:Update documentation

issueID:UIMA-680
type:Bug
changed files:uimaj-core/src/main/java/org/apache/uima/analysis_engine/impl/PrimitiveAnalysisEngine_impl.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/CASImpl.java
texts:CAS is not unlocked on Errors
If, e.g., an OOME is thrown inside a primitive AE, the CAS is not unlocked and can't be reused.  This is an issue when the application is trying to recover from the OOME.  The call to restoreClassLoaderUnlockCas() in PrimitiveAnalysisEngine_impl.callAnalysisComponentProcess() either needs to be moved to the finally clause, or the CAS needs to be unlocked separately there.  Looks like this is a bug introduced with the class loading changes for 2.1.Reproduce by provoking an OOME in CVD (start with little memory, use large document etc).  CVD will catch OOM.  Now try to rerun AE, will fail because CAS is locked.
issueID:UIMA-681
type:Task
changed files:uimaj-core/src/main/java/org/apache/uima/impl/UIMAFramework_impl.java
texts:change UIMA version from 2.2.1-incubating to 2.3.0-incubating-SNAPSHOT

issueID:UIMA-682
type:Task
changed files:
texts:update Sandbox components to work on the new uimaj-2.2.1-incubating release

issueID:UIMA-683
type:Task
changed files:
texts:automate maven atrifact upload to the maven incubator repository

issueID:UIMA-684
type:Improvement
changed files:
texts:update website with "How to do a release"

issueID:UIMA-685
type:New Feature
changed files:
texts:Create documentation for SimpleServer

issueID:UIMA-686
type:Bug
changed files:uimaj-cpe/src/main/java/org/apache/uima/collection/impl/cpm/container/CPEFactory.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/cpm/engine/BoundedWorkQueue.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/cpm/engine/CPMEngine.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/cpm/engine/ProcessingUnit.java
texts:Deadlocks in CPM tests:CPM shutdown tests failing (hanging) intermittantly
Three testers running the CPM tests on multi-core linux platforms or using special concurrancy testing tools have reported occasional hangs while running the CPM shutdown tests.Mail thread: http://www.mail-archive.com/uima-dev@incubator.apache.org/msg04530.html
issueID:UIMA-687
type:Improvement
changed files:uimaj-cpe/src/main/java/org/apache/uima/collection/impl/cpm/engine/ArtifactProducer.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/cpm/engine/NonThreadedProcessingUnit.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/cpm/engine/ProcessingUnit.java
texts:Remove redundant notifyAll when calling casPool.releaseCas(...)
Several places in the code there is a call to casPool.releaseCas(aCas), followed by      synchronized (casPool) { casPool.notifyAll(); }But this is redundant, since the casPool.releaseCas(...) already does a notifyAll.  Remove the redundant notifyAlls.
issueID:UIMA-688
type:Improvement
changed files:
texts:Use newer version of APR

issueID:UIMA-689
type:New Feature
changed files:
texts:Add uima-ee (asynchronous scaleout based on messaging / JMS) under software grant
Initial upload of the uima-ee asynchronous scaleout source, under a software grant acknowledged by the ASF secretary on Jan 7, 2007
issueID:UIMA-69
type:Improvement
changed files:
texts:update website with SVN commit comment guidelines for JIRA issue tracker
JIRA issue key not detected by JIRA SVN plug-in when SVN comment is in URL format
issueID:UIMA-690
type:Improvement
changed files:
texts:SimpleServer XML inline format should work when begin and end features are not mapped

issueID:UIMA-691
type:Improvement
changed files:
texts:add DictionaryCreator command line

issueID:UIMA-692
type:New Feature
changed files:
texts:allow DictionaryAnnotator to match on featurePath values
allow DictionaryAnnotator to match on featurePath values in addition to simple annotation types.
issueID:UIMA-693
type:Bug
changed files:
texts:Fix poms so uima-as compiles with maven

issueID:UIMA-694
type:Improvement
changed files:
texts:Make Manifest Build-date work
Currently, the main POM for uimaj has a section where it tries to set the Build-date but that doesn't work, and the suggested approach of specifying a java system property with the date didn't work for me (JVM system properties don't appear to be visible in maven variables).Fix this to automatically set the date and time of the build, using a maven plugin for this purpose.
issueID:UIMA-695
type:New Feature
changed files:
texts:allow DictionaryAnnotator to filter the inputMatch annotations

issueID:UIMA-696
type:Improvement
changed files:
texts:build documentation automatically during the component build

issueID:UIMA-697
type:New Feature
changed files:
texts:add DictionaryAnnotator documentation

issueID:UIMA-698
type:Bug
changed files:
texts:wrong eclipse update site top level name - fix to match documentation
Docs say name is eclipse-update-site but the directory name was made eclipseUpdateSite.  Change build to fix, and maybe fix in w.a.o/dist/ if permitted (otherwise, wait until next release).
issueID:UIMA-699
type:Task
changed files:
texts:Fill out IP Clearance Form for UIMA-AS
Fill out the IP clearance form (http://incubator.apache.org/ip-clearance/ip-clearance-template.html ) and have an officer / member "execute" it.
issueID:UIMA-7
type:Task
changed files:
texts:Add javadocs to build
The Maven build should build the javadocs and add them to the uimaj assembly.
issueID:UIMA-70
type:Improvement
changed files:uimaj-core/src/main/java/org/apache/uima/analysis_engine/impl/AnnotatorContext_impl.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/AnalysisEngine.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/AnalysisEngine.java
texts:JavaDoc doesn&#39;t match impl
Javadoc for AnnotatorContext_impl constructor says it throws ResourceConfigurationException, but it doesn't.While we're at it (wish)- it would be good to run some automated tool to check for other wrong instances of throws in javadocs.
issueID:UIMA-700
type:Improvement
changed files:
texts:Reference SimpleServer sandbox project from main website

issueID:UIMA-701
type:Task
changed files:
texts:Bring up to date with the code changes since the code was packaged for apache grant

issueID:UIMA-702
type:Bug
changed files:
texts:Pear installation directory incorrect

issueID:UIMA-703
type:Bug
changed files:
texts:SimpleServer jar should be called uima-simple-server.jar

issueID:UIMA-704
type:Bug
changed files:
texts:adjustExamplePaths.bat creates broken .classpath for uimaj-examples
I'm not sure how this happened, or whether it's a real bug, but felt better reporting it than keeping it a secret.After trying to upgrade to the latest Apache UIMA and Java 1.6, after running adjustExamplePaths.bat, the.classpath file for the examples got altered to look like this: (notice the attributes part that looks like: '-ignorecase/docs/api')<?xml version="1.0" encoding="UTF-8"?><!--   Licensed to the Apache Software Foundation (ASF) under one   or more contributor license agreements.  See the NOTICE file   distributed with this work for additional information   regarding copyright ownership.  The ASF licenses this file   to you under the Apache License, Version 2.0 (the   "License"); you may not use this file except in compliance   with the License.  You may obtain a copy of the License at     http://www.apache.org/licenses/LICENSE-2.0   Unless required by applicable law or agreed to in writing,   software distributed under the License is distributed on an   "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY   KIND, either express or implied.  See the License for the   specific language governing permissions and limitations   under the License.    --><classpath> <classpathentry kind="src" path="src"/> <classpathentry kind="con" path="org.eclipse.jdt.launching.JRE_CONTAINER"/> <classpathentry kind="var" path="UIMA_HOME/lib/uima-core.jar">  <attributes>   <attribute value="file:/C:\Program Files\apache-uima" -ignorecase/docs/api" name="javadoc_location"/>  </attributes> </classpathentry>   <classpathentry kind="var" path="UIMA_HOME/lib/uima-document-annotation.jar">  <attributes>   <attribute value="file:/C:\Program Files\apache-uima" -ignorecase/docs/api" name="javadoc_location"/>  </attributes> </classpathentry>   <classpathentry kind="var" path="UIMA_HOME/lib/uima-cpe.jar">  <attributes>   <attribute value="file:/C:\Program Files\apache-uima" -ignorecase/docs/api" name="javadoc_location"/>  </attributes> </classpathentry>   <classpathentry kind="var" path="UIMA_HOME/lib/uima-tools.jar">   <attributes>   <attribute value="file:/C:\Program Files\apache-uima" -ignorecase/docs/api" name="javadoc_location"/>  </attributes> </classpathentry>    <classpathentry kind="var" path="UIMA_HOME/lib/uima-adapter-vinci.jar"/> <classpathentry kind="var" path="UIMA_HOME/lib/uima-adapter-soap.jar"/> <classpathentry kind="var" path="UIMA_HOME/lib/jVinci.jar"/> <classpathentry kind="lib" path="resources"/> <classpathentry kind="output" path="bin"/></classpath>
issueID:UIMA-705
type:Bug
changed files:
texts:SimpleServer does not return output type attributes

issueID:UIMA-706
type:Improvement
changed files:
texts:put in Apache license headers

issueID:UIMA-708
type:Improvement
changed files:
texts:fix maven build so eclipse:eclipse goal doesn&#39;t add src/main/resources/META-INF/LICENSE, NOTICES, and DISCLAIMER
Currently, every time you run eclipse:eclipse, the parent POM is configured for the life-cycle phase of generate-resources to run an ant script to copy the LICENSE, NOTICES, and DISCLAIMER files into the source tree, and because eclipse:eclipse runs the phases up to "generate-resources" (see http://maven.apache.org/plugins/maven-eclipse-plugin/eclipse-mojo.html where it says: "Invokes the execution of the lifecycle phase generate-resources prior to executing itself."), these files end up in the source tree, and need to be manually deleted.Change this to the maven-way of doing this:  add a <resources> element to the parent POM that is configured to add these files to the meta-inf of the result.Adam said that he tried this earlier, and got strange failures.  I just tried it and it seems to work now.  I ran the whole build, both install and assembly:assembly.  So, I think the prior issues have been resolved with the 2.0.7  level of Maven (current level is now 2.0.8).
issueID:UIMA-709
type:Improvement
changed files:
texts:eclipse plugins won&#39;t compile if uimaj-ep-runtime project is open
The Eclipse plugin, uimaj-ep-runtime, is a "library" plugin, containing jars from other projects.  It is built during the release by custom assembly code.When the project is in the workspace and is "open", it is currently "empty" because it has no source in it.  Other plugin projects which depend on this fail to compile, because they look to this empty plugin for classes (and find none).  Find some approach to allow Eclipse builds (as well as maven builds) to succeed, without copying or having duplicate resources, so Eclipse compilation can succeed with this project present / open.
issueID:UIMA-71
type:Improvement
changed files:
texts:New v2 features missing from tutorial chapters
For example, Analysis Engines have all the methods that used to be on CAS Consumers, like collection-complete.  The new methods should be described.  Also, the examples should be updated (we don't have any examples of using these methods on Analysis Engines)
issueID:UIMA-710
type:Improvement
changed files:
texts:Show error symbol on file icon in the Corpus Explorer if the file has an error
If a file contains an error the error symbol should be shown on the file icon in the corpus explorer and parent elements.
issueID:UIMA-711
type:Improvement
changed files:
texts:Import document wizard should have an icon and category

issueID:UIMA-712
type:Improvement
changed files:
texts:Import document wizard select file dialog should show *.txt and *.rtf files by default
Currently the user must select either .txt or .rtf (on windows).
issueID:UIMA-713
type:Bug
changed files:
texts:Opening a document should show an error message if something goes wrong
Problems could be:Invalid type system Invalid xcas file Currently it shows an empty editor and writes an error message to the log file.
issueID:UIMA-714
type:Bug
changed files:
texts:F2 key short cut for renaming a resource does not work in the Corpus Explorer

issueID:UIMA-715
type:Bug
changed files:
texts:F5 key short cut for refreshing does not work in Corpus Explorer

issueID:UIMA-716
type:Bug
changed files:
texts:Deletion of processor folder does not removes the folder in the Corpus Explorer
The folder is deleted in the file system but is not removed from the tree in the corpus explorer. After the project is closed and opened the folder is gone.
issueID:UIMA-717
type:Improvement
changed files:
texts:minor performance improvements

issueID:UIMA-718
type:New Feature
changed files:uimaj-core/src/main/java/org/apache/uima/cas/FeatureValuePath.java
uimaj-core/src/main/java/org/apache/uima/cas/FeaturePath.java
uimaj-core/src/main/java/org/apache/uima/cas/TypeClass.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FeaturePathImpl.java
texts:add featurePath helper class
As discussed on the uima-dev mailing listhttp://mail-archives.apache.org/mod_mbox/incubator-uima-dev/200801.mbox/%3c4794BA4A.7030002@michael-baessler.de%3e
issueID:UIMA-719
type:Improvement
changed files:
texts:Current Version of the HMM Tagger
This version contains a couple of general changes in code and implements new heuristic features. The tagger accuracy at the moment is in average 96 percent for English and 95% for German for the same types of text.
issueID:UIMA-720
type:Improvement
changed files:
texts:have dd2spring generate an additional property when using a remote temp Q
Modify dd2spring to generate an additional spring xml property when an endpoint refers to a remote temp queue.
issueID:UIMA-721
type:Improvement
changed files:uimaj-examples/src/main/java/org/apache/uima/examples/ExampleApplication.java
uimaj-examples/src/main/java/org/apache/uima/examples/PrintAnnotations.java
uimaj-examples/src/main/java/org/apache/uima/examples/casMultiplier/CasMultiplierExampleApplication.java
uimaj-examples/src/main/java/org/apache/uima/examples/cpe/FileSystemCollectionReader.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/AnalysisEngine.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/ResultSpecification.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/impl/AnalysisEngineImplBase.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/impl/PrimitiveAnalysisEngine_impl.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/impl/ResultSpecification_impl.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/impl/compatibility/AnnotatorAdapter.java
uimaj-core/src/main/java/org/apache/uima/flow/impl/CapabilityLanguageFlowController.java
uimaj-core/src/main/java/org/apache/uima/flow/impl/CapabilityLanguageFlowObject.java
uimaj-core/src/main/java/org/apache/uima/uimacpp/CppUimajEngine.java
texts:Improve performance of ResultSpecification, especially for Capability Language Flows
Users have reported large performance slowdowns around the use of ResultSpecifications, when using Capability Language Flow.  Investigate and speed up this part of the core framework.
issueID:UIMA-722
type:Bug
changed files:uimaj-core/src/main/java/org/apache/uima/resource/metadata/LanguagePrecondition.java
uimaj-core/src/main/java/org/apache/uima/resource/metadata/impl/LanguagePrecondition_impl.java
texts:Fix parsing of language specifications to normalize them
Language specifications in capabilities are compared frequently in the operation of the UIMA Framework.  In some places, the language strings are "normalized" by coverting to lower case and replacing '_' with '-'.  In other places this isn't done.  This should be done uniformly, when the language specification is initially parsed, for performance reasons.  A suggested normalization would be something like         language.toLowerCase(Locale.ENGLISH).replace('_','-')
issueID:UIMA-723
type:Task
changed files:
texts:Add information about LREC 2008 workshop to website

issueID:UIMA-724
type:New Feature
changed files:
texts:allow match group names for regular expressions
Allow to give names for match groups in regular expressions. The result of the match group can also be collected with the match group name"My example \m{groupname}(Regex)"Match group 0: My example RegexMatch group 1: RegexMatch group {groupname}: Regex
issueID:UIMA-725
type:Bug
changed files:
texts:case sensitive dictionaries do not work correctly

issueID:UIMA-726
type:Bug
changed files:uimaj-core/src/main/java/org/apache/uima/jcas/cas/ArrayFSImpl.java
uimaj-core/src/main/java/org/apache/uima/jcas/cas/ArrayFSImpl.java
texts:ArrayFSImpl.copyToArray will throw NPE when array element is null
This is not correct: a null element should be created instead.
issueID:UIMA-727
type:Bug
changed files:uimaj-core/src/main/java/org/apache/uima/analysis_engine/impl/PearAnalysisEngineWrapper.java
texts:Result Specifications not being passed to imbedded Pears
Aggregates and other callers of embedded Pears may call setResultSpecification to set the result specification that the PEAR should use.  This method is not implemented in the PearAnalysisEngineWrapper, and so defaults to its super, AnalysisEngineImplBase, which just returns (the comment says subclasses implement something here).While fixing this, it would be good to check all the other unimplemented methods from the supers to see if any others need to be implemented.
issueID:UIMA-728
type:Improvement
changed files:
texts:add money amount detection for regex annotator - use match group names

issueID:UIMA-729
type:Bug
changed files:uimaj-core/src/main/java/org/apache/uima/util/CasCopier.java
texts:CasCopier doesn&#39;t work with Annotations produced with LowLevelCAS API, which don&#39;t have their sofa feature set
The CasCopier expects that every Annotation's sofa feature is set.  Unfortunately this is not the case for annotations produced using the LowLevelCAS API, which results in exceptions trying to copy those annotations.
issueID:UIMA-730
type:Bug
changed files:uimaj-core/src/main/java/org/apache/uima/analysis_engine/ResultSpecification.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/impl/ResultSpecification_impl.java
uimaj-core/src/main/java/org/apache/uima/flow/impl/CapabilityLanguageFlowObject.java
uimaj-core/src/main/java/org/apache/uima/flow/impl/AnalysisSequenceCapabilityNode.java
uimaj-core/src/main/java/org/apache/uima/flow/impl/CapabilityLanguageFlowController.java
texts:Fix definition of containsType/Feature for Resut Spec for corner case involving x-unspecified language
Based on a long discussion in uima-dev, we conclude that containsType(aType) should be equivalent to containsType(aType, "x-unspecified"), and should return false if the result spec has an entry for aType with languages that do not include x-unspecified.This was broken in previous implementations, but should not affect users (except for some corner cases where uses had improperly specified their capability specifications, perhaps).With this change, the function of CapabilityContainer as used in the framework is equivalent to that provided by the Result Specification.  Remove CapabilityContainer and switch usage of it to the Result Spec, for space/time efficiency reasons.
issueID:UIMA-731
type:Improvement
changed files:
texts:check if output file must be created while running the capabilityLanguageFlow tests

issueID:UIMA-732
type:Bug
changed files:uimaj-core/src/main/java/org/apache/uima/cas/impl/FeaturePathImpl.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FeaturePathImpl.java
texts:featurePath object  throws LowLevelCASException if FS is not valid for feature path.

issueID:UIMA-733
type:Bug
changed files:uimaj-core/src/main/java/org/apache/uima/resource/ResourceInitializationException.java
uimaj-core/src/main/java/org/apache/uima/util/CasCreationUtils.java
texts:it is possible to load a type system descriptor that redefines the super type of the DocumentAnnotation

issueID:UIMA-734
type:Improvement
changed files:
texts:Check and possibly update docs for capability language flow to say not to depend on subtyping
Capability Language Flow uses the declared output capabilities (and input capabilities) to compute the flow.  In the rest of UIMA, saying a type T is output means include subtypes of T (e.g., the result specificaiton says subtypes of T should be produced).  However the logic in Capability Language Flow only uses information that is explicitly declared in the output capability specification (and input capabilities) when determining the flow, without considering subtyping.  Check if this is properly documented, and fix if it isn't.
issueID:UIMA-735
type:Bug
changed files:uimaj-core/src/main/java/org/apache/uima/analysis_engine/impl/ResultSpecification_impl.java
texts:ResultSpecification_impl missing equals and hashCode for inner class - causing intermittant test case failure
The ResultSpec impl has an inner class, ToF_Languages.  When comparing 2 result specificaitons for equal in test cases, these are compared.  But they are missing an equals (and hashCode) methods.  So the test case fails to say they're equal unless they're identical.  But cloning happens a lot in the way Result specs are used, and in this test, they may be equal (I think) but not ==.Solution: Add proper equals and hashCode to this inner class.
issueID:UIMA-736
type:Improvement
changed files:uimaj-core/src/main/java/org/apache/uima/UIMAFramework.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/impl/MultiprocessingAnalysisEngine_impl.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/service/impl/AnalysisEngineService_impl.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/CASImpl.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/DebugFSLogicalStructure.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FSFloatConstraintImpl.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FeatureValuePathImpl.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/XCASDeserializer.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/XCASSerializer.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/XmiCasDeserializer.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/XmiSerializationSharedData.java
uimaj-core/src/main/java/org/apache/uima/cas_data/impl/PrimitiveValueImpl.java
uimaj-core/src/main/java/org/apache/uima/internal/util/StringToIntMap.java
uimaj-core/src/main/java/org/apache/uima/internal/util/SymbolTable.java
uimaj-core/src/main/java/org/apache/uima/jcas/impl/JCasImpl.java
uimaj-core/src/main/java/org/apache/uima/uimacpp/UimacppAnalysisComponent.java
uimaj-core/src/main/java/org/apache/uima/util/AnalysisEnginePerformanceReports.java
texts:Performance improvement, Findbugs reduction - replace new Integer(xxx) with Integer.valueOf(xxx), same for byte, short, etc.
Findbugs reports lots of uses of new Integer(xxx).  These can be replaced with Integer.valueOf(xxx) unless there is a need to have a unique instance of the object.  This is not the case (at least in the ones I examined) - for instance, non of these were being used as a synch. lock.  Replacing with valueOf allows Java to cache and reuse frequent values, so reduces garbage collections.
issueID:UIMA-737
type:Improvement
changed files:
texts:Add information on Eclipse update site to download page of website

issueID:UIMA-738
type:Bug
changed files:uimaj-core/src/main/java/org/apache/uima/jcas/impl/JCasImpl.java
uimaj-core/src/main/java/org/apache/uima/jcas/impl/JCasImpl.java
texts:Calling jcas.getType for a type that is not defined in the descriptor leaves the JCAS in an inconsitent state
The following code illustrates the problem:  public void testUndefinedType() throws Exception {    //create jcas with no type system    JCas jcas = CasCreationUtils.createCas(new TypeSystemDescription_impl(), null, null).getJCas();    jcas.setDocumentText("This is a test.");    try {      //this should throw an exception      jcas.getType(Sentence.type);      fail();     } catch(CASRuntimeException e) {    }    //check that this does not leave JCAS in an inconsistent state    Iterator iter = jcas.getAnnotationIndex().iterator();    assertTrue(iter.hasNext());    Annotation annot = (Annotation)iter.next();  }Running this gives a ClassCastException trying to cast the result of iter.next() to an Annotation
issueID:UIMA-739
type:Improvement
changed files:
texts:Use compressed form of eclipse update site, and support multiple releases
Since a few releases ago, Eclipse has a much improved update site mechanism, that fixes a lot of the speed issues.  Convert to that system.  Also, insure the build processes support update sites with multiple release levels.  Finally, see if the maven build and Eclipse builds can both be made to work.
issueID:UIMA-74
type:Improvement
changed files:
texts:make Eclipse plugins into features that can be installed by Eclipse update mechanism
Figure out an approach that's consistent with other Apache projects.  Figure out Feature packaging (one or multiple features?).  Change build to support this.  Figure out test approach.
issueID:UIMA-740
type:Bug
changed files:uimaj-core/src/main/java/org/apache/uima/cas/impl/FeaturePathImpl.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FeaturePathImpl.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/FeaturePathImpl.java
texts:change FeaturePath implementation for empty featurePath strings
currently if an empty featurePath is set the result is ever null if the feature path is evaluated. This should be changed to evaluate the featurePath functionality on the current FS if possible. E.g. built-in functions.
issueID:UIMA-741
type:Bug
changed files:uimaj-core/src/main/java/org/apache/uima/pear/tools/InstallationController.java
uimaj-core/src/main/java/org/apache/uima/pear/tools/PackageInstaller.java
uimaj-core/src/main/java/org/apache/uima/util/XMLInputSource.java
texts:File streams are not closed
Hi,Some streams are not properly closed, preventing from deleting files that are locked (on windows). I attached a patch for some cases but i believe that there may be more... This patch is against the 2.3-SNPASHOT from the trunk.
issueID:UIMA-742
type:Improvement
changed files:
texts:Cumulative fixes to synch apache svn with the latest changes
Fixes: refactored uima ee client to use single thread for sending CASes. synchronized uima ee client APIs moved jms objects (Session, Message, Producer, Destination) to concrete implementation of uima ee client (activemq) postpone sending getMeta request to remote delegates until all listener threads are fully initialized modified controller API to support adding and calling listeners when initialization is completed added support for storing temp queue information in the endpoint object fixed cleanup in the uimaCppServiceController fixed retry logic in the error handler fixed continueOnError logic in the error handler fixed initialHeapSize setting in the contrioller added host IP to the reply message and modified the client code to log the IP modified the listener code to log endpoint name when the listener fails added support for logging uima ee version on startup refactored uima ee client code to use SpringContainerDeployer to deploy spring context files
issueID:UIMA-743
type:Improvement
changed files:
texts:Add new testcases to test new features
Add new testcases and resources to test new features in uima ee
issueID:UIMA-744
type:Improvement
changed files:
texts:Improved the XML parsing of the Deployment Descriptor
Improved the XML parsing of the Deployment Descriptor: added support for parsing "initialFSHeapSize" attribute of CAS pool size checked the values of GetMetadataError and ProcessCasErrors for consistency Fixed the bug when parsing the boolean value of "ContinueOnRetryFailure" Removed irrelevant comments from the source files Delete unused file "org.apache.uima.application.metadata.ConfigParamSettingsSets_1.java"
issueID:UIMA-745
type:Improvement
changed files:
texts:Improved the UI when editing GetMetadataError and ProcessCasError, added support for edting "initialFsHeapSize"
Improved the UI when displaying and editing the following elements of Deployment Descriptor: GetMetadataError ProcessCasError Added the capability to edit the initial size of CAS FS heap in "Overview" page Moved "messages.properties" file to "resources" folder to conform to Maven convention Modified the manifest.mf file to contain the right classpath
issueID:UIMA-746
type:Improvement
changed files:
texts:add additional type checking for featurePath implementation

issueID:UIMA-747
type:Bug
changed files:
texts:addSourceToJars.sh contains windows EOL characters, making it unusable out of the box

issueID:UIMA-748
type:Bug
changed files:
texts:Multiple notfications sent to registered listeners.
Multiple notfications sent to registered listeners.
issueID:UIMA-749
type:Wish
changed files:uimaj-tools/src/main/java/org/apache/uima/tools/cvd/MainFrame.java
uimaj-tools/src/main/java/org/apache/uima/tools/cvd/MainFrame.java
texts:add performance report to CVD
create a performance report after each run.In the simple case just log the performance report, in a advanced case show the performance report in a new window (similar to the CPM).Simple case can be done with      ProcessTrace trace = this.ae.process(this.cas);      this.log.log(Level.INFO, trace.toString());
issueID:UIMA-75
type:Bug
changed files:uimaj-adapter-vinci/src/main/java/org/apache/uima/adapter/vinci/util/Descriptor.java
uimaj-core/src/main/java/org/apache/uima/pear/tools/InstallationProcessor.java
texts:In VinciService wrapper, "serializerClassName" parameter is unused
Our example Vinci deployment descriptors have the parameter: <parameter name="serializerClassName" value="org.apache.uima.adapter.vinci..VinciXCASSerializer_NoDocText"/>This parameter is never used by the service and should be removed from the examples.Also the class VinciXCASSerializer_NoDocText and other related classes still exist in our codebase but are never used.  They should be deleted.
issueID:UIMA-750
type:Bug
changed files:
texts:fix UIMA version error on download page
"Apache UIMA 2.1.1-incubating was released on 21-Dec-2007 and may not be available on all mirrors for a few days"The version is wrong... but I think the entire note can be removed now.
issueID:UIMA-752
type:Improvement
changed files:
texts:rename uima-ee to uima-as in SVN
Based on mail thread discussion, we are renaming uima-ee to uima-as.  The repository projects names are being updated to be consistent with this.  After this change, please recheck-out the projects under ther new names.  Some fixes beyond SVN renaming will probably also be needed.
issueID:UIMA-753
type:Improvement
changed files:
texts:Some improvements in the algorithm, structural changes as well as docbook update

issueID:UIMA-754
type:Bug
changed files:
texts:Add missing folder and file to uimaj-as-jms
The uimaj-as-jms project is missing UimaVersion.java in utils folder
issueID:UIMA-755
type:Improvement
changed files:
texts:Expose per CAS statistics to the application from uima-as client
Modify the uima-as client to pass per CAS statistics via the entityProcessComplete callback. Use ProcessTrace object as a container for statistics. Statistics to be passed to the application include: time spent in process, time spent serializing CAS, time spent de-serializing CAS, service idle time, service host ip, CAS latency (total time spent waiting for reply)
issueID:UIMA-756
type:Improvement
changed files:
texts:update website to include link to bio annotators from http://bionlp-uima.sourceforge.net.
update website to include link to bio annotators from http://bionlp-uima.sourceforge.net.
issueID:UIMA-757
type:Bug
changed files:
texts:Tagger throws ClassCastException
java.lang.ClassCastException: java.lang.String cannot be cast to org.apache.uima.examples.tagger.trainAndTest.Token at org.apache.uima.examples.tagger.TagMapping.map_tags(TagMapping.java:46) at org.apache.uima.examples.tagger.HMMTagger.process(HMMTagger.java:179) at org.apache.uima.analysis_component.JCasAnnotator_ImplBase.process(JCasAnnotator_ImplBase.java:48) at org.apache.uima.analysis_engine.impl.PrimitiveAnalysisEngine_impl.callAnalysisComponentProcess(PrimitiveAnalysisEngine_impl.java:375)To reproduce, load HmmTaggerTAE.xml into CVD and run.  I can see that a list of Strings is coming in, but tokens are expected.  Not sure which one's right, though.Eugenie, could you take a look?  Thanks.
issueID:UIMA-758
type:Improvement
changed files:
texts:Make the tagger runtime read its properties from the descriptor, not a properties file
The tagger currently expects a properties file in its working directory.  That's fine for training, but not really portable for the runtime.  For example, we can't currently package the tagger in a pear file.  I'd like to make the tagger runtime (i.e., the annotator) read the necessary parameters from the descriptor file instead.
issueID:UIMA-759
type:New Feature
changed files:
texts:Expose uima as client side stats via JMX
Add new MBean to expose per CAS statistics via JMX
issueID:UIMA-76
type:Improvement
changed files:uimaj-core/src/main/java/org/apache/uima/pear/tools/PackageInstaller.java
uimaj-core/src/main/java/org/apache/uima/pear/tools/PackageInstallerException.java
uimaj-core/src/main/java/org/apache/uima/pear/tools/InstallationController.java
texts:add new pear installer API to install a pear file easily out of an application
add new pear installer API to install a pear file easily out of an application, currently the user must know lots of details and methods to install a simple pear file using the API
issueID:UIMA-760
type:Bug
changed files:
texts:add regex annotator performance test
add a simple performance test for the regular expression annotator
issueID:UIMA-761
type:Bug
changed files:
texts:udpate build script to do a clean build

issueID:UIMA-762
type:Bug
changed files:
texts:rename xmltypes.jar

issueID:UIMA-763
type:Improvement
changed files:
texts:Automatically build PEAR file for Tagger
Use the pear packager plugin to create a pear file for the tagger.
issueID:UIMA-764
type:Bug
changed files:
texts:Source distribution is incomplete: documentation can&#39;t be built
Our source distribution is incomplete.  You can't build the documentation, as the uima-docbook-tool project is missing.  So mvn assembly:assembly fails.  I consider this a must-fix, as per Apache policy, we must be able to build our binary distribution from the source distribution.
issueID:UIMA-765
type:Bug
changed files:
texts:fix email address regex - escape "-" in regular expression

issueID:UIMA-767
type:Improvement
changed files:
texts:Use eclipse content types to identify annotators descriptors (.ann) and consumer descriptors (.con)

issueID:UIMA-768
type:Bug
changed files:
texts:rename xmltypes.jar

issueID:UIMA-77
type:Bug
changed files:uimaj-core/src/main/java/org/apache/uima/util/CasToInlineXml.java
uimaj-core/src/main/java/org/apache/uima/util/CasToInlineXml.java
texts:CasToInlineXml fails for new primitive types
The CasToInlineXml utility (used by the RunAE tool) iterates over the set of primitive types (not including the new ones), and if a feature is not one of those primitive types then it attempts to access it as a FeatureStructure.  This causes an Exception if the CAS uses the new primitive types.
issueID:UIMA-770
type:New Feature
changed files:
texts:add PEAR build to WhitespaceTokenizer POM

issueID:UIMA-771
type:New Feature
changed files:
texts:call documentation build from POM

issueID:UIMA-772
type:New Feature
changed files:
texts:add new Sandbox-dist project that contains the Sandbox build

issueID:UIMA-773
type:Bug
changed files:
texts:Some files missing license headers

issueID:UIMA-774
type:Improvement
changed files:
texts:maven build improvements
Improve the operation of maven builds for uima.
issueID:UIMA-775
type:Bug
changed files:
texts:fix Findbugs issues

issueID:UIMA-776
type:Bug
changed files:
texts:fix Findbugs issues

issueID:UIMA-778
type:Bug
changed files:
texts:fix Findbugs issues

issueID:UIMA-779
type:Improvement
changed files:
texts:Some modifications in the tagger code (esp. in the implementation of the SuffixTree.EDGE class)

issueID:UIMA-78
type:Improvement
changed files:uimaj-cpe/src/main/java/org/apache/uima/collection/impl/cpm/container/CPEFactory.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/cpm/engine/CPMEngine.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/cpm/container/CPEFactory.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/cpm/engine/CPMEngine.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/cpm/container/CPEFactory.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/cpm/container/CPEFactory.java
uimaj-core/src/main/java/org/apache/uima/util/XMLInputSource.java
uimaj-core/src/main/java/org/apache/uima/util/XMLInputSource.java
texts:CPE descriptor should support URLs to reference components
In restructuring the RunAE example to remove deprecated things and do things the "right way", I realized I wanted a way to refer to Collection Reader and CAS Consumer descriptors that are located in the uima-core.jar file.  If the CPE descriptor supported a URL, this would be easy.  We've had user requests for this in the past and it should not be too hard to do.
issueID:UIMA-780
type:Bug
changed files:uimaj-core/src/main/java/org/apache/uima/resource/impl/ResourceManager_impl.java
uimaj-core/src/main/java/org/apache/uima/resource/impl/ResourceManager_impl.java
texts:CDE hangs when processing AEs with very high initialization time (adding the AE to the aggregate or saving the descriptor)
The CDE repeatedly hung when trying to add an AE with high initialization time into the aggregate. When I finally successfully added it through editing the source xml, it hung again while trying to save the descriptor. It appears that the CDE is trying to initialize the annotator (CPU usage 200+%, using 5.7G of memory). I verified this by having the annotator in question load a toy dictionary and the problem disappeared.
issueID:UIMA-781
type:Bug
changed files:
texts:CPE test case CpmCasConsumer_ErrorTest intermittently failing
While running tests for another issue (unlocking the CAS after out-of-memory-failure) I found this test case fails solidly when run from maven, and runs always without error when run from Eclipse.Running from maven as a single test, it fails (to run a single test, do:       mvn test -Dtest=CpmCasConsumer_ErrorTestRunning from maven as a single test, in debug mode, then attaching the Eclipse debugger - sometimes shows the error.  To run a maven test and attach the Eclipse debugger do:     mvn test -Dtest=CpmCasConsumer_ErrorTest -Dmaven.surefire.debugand then create an Eclipse launch configuration for a "Remote Java Application", and set the port to 5005, and check the box which says "Allow termination of Remote VM".
issueID:UIMA-782
type:Improvement
changed files:
texts:Document Java 1.5 requirement for running Eclipse to use CDE, and mark runtime plugin (and others) as needing 1.5 level
The runtime plugin now requires 1.5 Java level - and fails if you run it inside Eclipse, where Eclipse is running with 1.4 level.
issueID:UIMA-783
type:Task
changed files:
texts:Update Cas Editor version to 2.2.2

issueID:UIMA-784
type:Bug
changed files:
texts:uima-as build order wrong
Doing a mvn clean install on uimaj-as fails because of a wrong build order - activemq depends on jms which needs to be done first.
issueID:UIMA-785
type:Bug
changed files:
texts:CPC stats returned from aggregates are invalid
The CPC stats for a delegate need to be accumulated by the client aggregate.Currently delegate stats are simply those returned by a CPC call to thedelegate. The problem with the current approach is that the delegate may be ashared service and the stats returned have very little or nothing to do with theprocess calls made to that delegate.Also, add new statistics for each delegate: biggest request time and biggestserialization time. These should also have mbeans.
issueID:UIMA-786
type:Bug
changed files:
texts:Input CAS is returned back to the client while subordinate CASes are still in play in the aggregate
When an input CAS is returned from a Cas Multiplier, an Aggregate immediately returns it back to the client with no check if the subordinate CASes (those produced from the input CAS) are still in "in-play" in other delegates. Upon receiving the input CAS reply, the client assumes success and sends a CPC. Meanwhile, the CASes still in-play may cause Exceptions and termination of the aggregate. The CPC sent to the service may never be replied to leading to a hang.
issueID:UIMA-787
type:Improvement
changed files:
texts:Migrate code to the latest version of ActiveMQ (5.0.0)
Update build dependencies to use the latest version of ActiveMQ. Update UIMA-AS install scripts to download the latest ActiveMQ distribution.
issueID:UIMA-788
type:Improvement
changed files:
texts:Migrate code to the latest version of Spring (v.2.5.1)
Update build dependencies and UIMA-AS install script
issueID:UIMA-789
type:New Feature
changed files:
texts:Generate JavaDocs for the UIMA-AS Client API
Generate Java Docs for the Client API
issueID:UIMA-79
type:Bug
changed files:uimaj-tools/src/main/java/org/apache/uima/tools/docanalyzer/DocumentAnalyzer.java
uimaj-tools/src/main/java/org/apache/uima/tools/docanalyzer/DocumentAnalyzer.java
texts:Document Analyzer progress message sometimes says something like "Processed 8 of 7 Documents"

issueID:UIMA-790
type:Task
changed files:
texts:Move uimacpp-as service wrapper to uimacpp
The uimacpp-as service wrapper should be maintained in the uimacpp project. It is unusable and cannot be built without uimacpp.
issueID:UIMA-791
type:Improvement
changed files:
texts:Patch containing some improvements
1. There was a bug in the new SuffixTree, which has been eliminated in this version. 2. Update of documentation
issueID:UIMA-792
type:Improvement
changed files:uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/CDEpropertyPage.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/files/MultiResourceSelectionDialog.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/files/MultiResourceSelectionDialogWithFlowOption.java
texts:CDE&#39;s Add "Component Engine Selection" dialog does not remember the setting for "Add selected AEs to end of flow"
When using a custom flow controller, I never want AEs that I add to my aggregate to be added to the aggregate's fixedFlow.  To do that I currently have to remember to uncheck the box on the Component Engine Selection dialog every time I add a component to my aggregate.  It does not remember my setting from last time.
issueID:UIMA-793
type:Improvement
changed files:
texts:CasEditor - updates to docbook doc
A bunch of minor edits (hopefully improvements) to the Cas Editor documentation
issueID:UIMA-794
type:Bug
changed files:
texts:Extra </programmlisting> in component descriptor documentation

issueID:UIMA-795
type:Bug
changed files:
texts:dictionaries created by DictionaryCreator cannot be used
Caused by: org.apache.xmlbeans.XmlException: error: The document is not a dictionary@http://incubator.apache.org/uima: document element namespace mismatch expected "http://incubator.apache.org/uima" got "" at org.apache.xmlbeans.impl.store.Locale.verifyDocumentType(Locale.java:452) at org.apache.xmlbeans.impl.store.Locale.autoTypeDocument(Locale.java:357) at org.apache.xmlbeans.impl.store.Locale.parseToXmlObject(Locale.java:1273) at org.apache.xmlbeans.impl.store.Locale.parseToXmlObject(Locale.java:1257) at org.apache.xmlbeans.impl.schema.SchemaTypeLoaderBase.parse(SchemaTypeLoaderBase.java:345) at org.apache.incubator.uima.DictionaryDocument$Factory.parse(Unknown Source) at org.apache.uima.annotator.dict_annot.dictionary.impl.DictionaryFileParserImpl.parseDictionaryFile(DictionaryFileParserImpl.java:58) ... 41 more
issueID:UIMA-796
type:Test
changed files:
texts:update org.apache.uima.resource.metadata.impl.Import_implTest test to create canonical URLs

issueID:UIMA-797
type:Bug
changed files:
texts:JMX timing statistics reported by services
There needs to be a consistent approach to how timing statistics, e.g., processting time, idle time, serialization time, are reported by a service.   These should be averaged over the number of instances and in milliseconds.
issueID:UIMA-798
type:Bug
changed files:
texts:Operational properties are not being handled
The  C++ framework need to support operational properties element in descriptors.  This is required for C++ service and application support for CAS multiplier.
issueID:UIMA-799
type:Bug
changed files:
texts:C++ service reconnect to JMS provider
The service wrapper currently fails when connection to the JMS provider is broken.  It should attempt to reestablish the connection.
issueID:UIMA-8
type:Task
changed files:uimaj-tools/src/main/java/org/apache/uima/tools/images/Images.java
texts:Add examples to assembly
The example source code, descriptors, and eclipse project files should be added to the uimaj assembly.
issueID:UIMA-80
type:Bug
changed files:uimaj-tools/src/main/java/org/apache/uima/tools/cvd/MainFrame.java
texts:CVD document text is deleted after an analysis engine is loaded
CVD document text is deleted after an analysis engine is loaded
issueID:UIMA-801
type:Improvement
changed files:
texts:Support specification of "initialFsHeapSize" for Cas Multiplier delegate
The current Deployment Descriptor Editor for UIMA-AS only supports the specification of "initialFsHeapSize" at the top-level service. This improvement will extend the support to the Cas Multiplier delegate.
issueID:UIMA-802
type:Improvement
changed files:uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/ui/AbstractSection.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/ui/AggregateSection.java
texts:CDE is unable to create PEAR descriptor as delegate
If you insert the PEAR descriptor into the XML by hand, the CDE accepts this.  It seems there is some custom code in CDE that knows what kinds of descriptors can be added to a flow.  This needs to be extended to include PEAR specifiers
issueID:UIMA-803
type:Bug
changed files:
texts:change whitespace character definition
CONNECTOR_PUNCTUATION should not be treated as whitespace character
issueID:UIMA-804
type:Bug
changed files:
texts:change default multi token separator from \t to |
change default multi token separator from \t to | since the tab character is not correctly recognized with the xml beans XML parser.
issueID:UIMA-805
type:Bug
changed files:uimaj-core/src/main/java/org/apache/uima/cas/impl/CASImpl.java
uimaj-core/src/main/java/org/apache/uima/cas/impl/CASImpl.java
texts:cas.setSofaDataURI() fails on _InitialView
Bug found by John Cabral: when run on the _InitialView, method throws java.lang.ArrayIndexOutOfBoundsException: -1
issueID:UIMA-806
type:Improvement
changed files:
texts:use Java NumberFormat to convert string numbers to float or integer

issueID:UIMA-807
type:Bug
changed files:
texts:Eclipse update site build fails if there are more than 1 launcher.jar kind of plugin in the plugins directory
Ant build for eclipse update site fails if there are more than 1 launcher.jar kind of plugin in the plugins directory.
issueID:UIMA-808
type:Bug
changed files:
texts:SimpleServerServlet throws NullPointerExcpetion if no parameter was specified in doGet or doPost
If the servlet is called without specifying any parameter a NPE is thrown:java.lang.NullPointerException org.apache.uima.simpleserver.servlet.SimpleServerServlet.analyze(SimpleServerServlet.java:187) org.apache.uima.simpleserver.servlet.SimpleServerServlet.doGet(SimpleServerServlet.java:159) javax.servlet.http.HttpServlet.service(HttpServlet.java:690) javax.servlet.http.HttpServlet.service(HttpServlet.java:803)I think this case should be covered so that no exception is thrown.
issueID:UIMA-809
type:Bug
changed files:
texts:Silence exceptions occuring in ActiveMQ/Spring when stopping listeners
While stopping uima as listeners ActiveMQ/Spring sometimes generate exceptions. Need to find a way to silence these, especially in the testcases. The testcases test service shutdown in the middle of the run and the tests should not show low level exceptions.
issueID:UIMA-81
type:Bug
changed files:uimaj-tools/src/main/java/org/apache/uima/tools/cvd/FSNode.java
texts:feature values containing "<>" are not displayed correctly in CVD
feature value containing "<>" are not displayed correctly in CVD. For example, a String feature value "<ALPHANUM>"  is displayed as "" in CVD.
issueID:UIMA-810
type:Bug
changed files:
texts:uimaj-ep-runtime missing import of log4j package
Add an "optional" import of log4j needed by uimaj-core log4j support.  The optional means that if log4j is not available as a plugin, the ep-runtime package will still install.
issueID:UIMA-811
type:Improvement
changed files:
texts:Document import-by-name CDE change
Document import-by-name CDE change
issueID:UIMA-812
type:Bug
changed files:
texts:Dictionary annotator does not work with several dictionaries in a single descriptor
Add several dictionaries to a single descriptor that output different types.  Only entities of a single type are output.
issueID:UIMA-813
type:Bug
changed files:uimaj-core/src/main/java/org/apache/uima/pear/tools/PackageInstaller.java
texts:improve PEAR error message for the installation of a non-existing PEAR package
Currently the exception says:org.apache.uima.pear.tools.PackageInstallerException: Error while parsing pear package descriptor for pear file D:\test\Test.pear. at org.apache.uima.pear.tools.PackageInstaller.installPackage(PackageInstaller.java:113) at org.apache.uima.pear.tools.PackageInstaller.installPackage(PackageInstaller.java:66) at samples.PearInstallerTest.main(PearInstallerTest.java:52)Caused by: java.util.zip.ZipException: Bad file descriptor D:\test\Test.pear at java.util.zip.ZipFile.open(Native Method) at java.util.zip.ZipFile.<init>(ZipFile.java:238) at java.util.jar.JarFile.<init>(JarFile.java:165) at java.util.jar.JarFile.<init>(JarFile.java:130) at org.apache.uima.pear.tools.PackageInstaller.installPackage(PackageInstaller.java:102) ... 2 moreBut better would be to say that the file does not exist.
issueID:UIMA-814
type:Bug
changed files:uimaj-core/src/main/java/org/apache/uima/pear/util/UIMAUtil.java
texts:PEAR verification should be able to treat customResoruceSpecifiers
Verification of PEAR failed =>  org.apache.uima.util.InvalidXMLException: An object of class org.apache.uima.resource.metadata.ResourceManagerConfiguration was requested, but the XML input contained an object of class org.apache.uima.resource.impl.CustomResourceSpecifier_impl.   at org.apache.uima.util.impl.XMLParser_impl.parseResourceManagerConfiguration(XMLParser_impl.java:765) at org.apache.uima.util.impl.XMLParser_impl.parseResourceManagerConfiguration(XMLParser_impl.java:748) at org.apache.uima.pear.util.UIMAUtil.identifyUimaComponentCategory(UIMAUtil.java:242) at org.apache.uima.pear.util.UIMAUtil.identifyUimaComponentCategory(UIMAUtil.java:125) at org.apache.uima.pear.tools.InstallationTester.<init>(InstallationTester.java:97) at org.apache.uima.pear.tools.InstallationController.verifyComponentInstallation(InstallationController.java:1109) at org.apache.uima.pear.tools.InstallationController.verifyComponent(InstallationController.java:1993) at org.apache.uima.tools.pear.install.InstallPear.installPear(InstallPear.java:388) at org.apache.uima.tools.pear.install.InstallPear.access$0(InstallPear.java:311) at org.apache.uima.tools.pear.install.InstallPear$RunInstallation.run(InstallPear.java:108) at java.lang.Thread.run(Thread.java:801)
issueID:UIMA-815
type:Improvement
changed files:
texts:improve maven build: support for POMs kept in directories below the project
It is convenient to keep multiple POMs in one project, in separate directories.   An example of this is in the uimaj project, which has the overall super-pom for the uimaj project, but also has in a directory the super pom for the eclipse plugins, which serves to factor out the common parts of the plugins.  Another example is the sandbox poms - there is one overall pom for those projects, but as different things get collected together into packages, they may have poms in a subdirectory of another project.For POMs like this, the copying of the license notices, etc. needs to be skipped (it's already done at the higher level POM for the project), or if it is not skipped, the logic to locate the source is different (you have to go up 2 dir levels, relative - path - wise).
issueID:UIMA-816
type:Improvement
changed files:
texts:maven build - Eclipse plugin build improvements
The current Eclipse plugins have complex maven poms - simplify by factoring out common things to a common super pom for the eclipse plugins, which will, in turn, inherit from the uimaj super pom.  Put this new pom in the uimaj project - no need for another project just for this.  Add configuration info so the eclipse:eclipse plugin does the right class path setup even when it is run from the top level.  This will allow cd to the uimaj project, and running eclipse:eclipse there, and having it work, as well as working in individual project directories.For POMs which inherit from our project poms, replace the <groupId> with a comment saying it is inherited from the super pom, and replace the <version> with a comment saying it's inherited from the super pom.Make the eclipse plugin super pom have the right form of the version (the one with the "." instead of the "-" in front of the "incubator" token).
issueID:UIMA-817
type:Improvement
changed files:
texts:uimaj-distr pom has wrong dependencies, due to changing eclipse plugin poms
The uimaj-distr pom has dependencies that depend on "zip" types, which are no longer made.
issueID:UIMA-818
type:Improvement
changed files:
texts:Improve Signing artifacts for deployment, and update also website signing topic
The current page on our website concerning signing, http://incubator.apache.org/uima/distribution.html, says to use the script in uimaj-distr / ... / build / signRelease . xxx  to sign the release.  This runs gpg and uses that to generate the md5 and sha1 hashes, which are in the wrong format (per discussion the incubator general mailing list).  Remove this signing script (because signing is now done from maven), and update our signing page to indicate how signing is now done.The uimaj-distr / ... /build/extractAndBuild script, if passed the -deploy switch, will turn on the gpg signing phase; this is configured in the uimaj pom.  This will do a gpg signing of the artifacts for all things that are built as part of the packaging phase for all "child" poms.  It's unclear how the md5 and sha1 checksums are generated for the deploy to maven repositories.  Inspecting the current repo at http://people.apache.org/repo/m2-incubating-repository/org/apache/uima/ shows md5 and sha1 checksums being applied to the gpg signatures, which is incorrect.  Fix / automate this process, to occur as part of the maven lifecycle when signing is asked for.  Make this work also for the Eclipse update site.
issueID:UIMA-819
type:Bug
changed files:
texts:rename all shipment jars start with uima-
rename all jars that are shipped with the next Sandbox release to start with uima-
issueID:UIMA-820
type:Bug
changed files:
texts:fix classpath entry "null;"  if no classpath was specified

issueID:UIMA-821
type:Bug
changed files:uimaj-adapter-vinci/src/main/java/org/apache/uima/adapter/vinci/VinciAnalysisEngineServiceStub.java
uimaj-adapter-vinci/src/main/java/org/apache/uima/adapter/vinci/VinciAnalysisEngineService_impl.java
uimaj-adapter-vinci/src/main/java/org/apache/uima/adapter/vinci/VinciBinaryAnalysisEngineServiceStub.java
uimaj-adapter-vinci/src/main/java/org/apache/uima/adapter/vinci/VinciBinaryAnalysisEngineService_impl.java
uimaj-adapter-vinci/src/main/java/org/apache/uima/adapter/vinci/util/Descriptor.java
uimaj-adapter-vinci/src/main/java/org/apache/uima/adapter/vinci/VinciAnalysisEngineServiceStub.java
uimaj-adapter-vinci/src/main/java/org/apache/uima/adapter/vinci/VinciAnalysisEngineService_impl.java
uimaj-adapter-vinci/src/main/java/org/apache/uima/adapter/vinci/VinciBinaryAnalysisEngineServiceStub.java
uimaj-adapter-vinci/src/main/java/org/apache/uima/adapter/vinci/VinciBinaryAnalysisEngineService_impl.java
uimaj-adapter-vinci/src/main/java/org/apache/uima/adapter/vinci/util/Descriptor.java
texts:Vinci Services have getMetaData timeout problems when there are a large number of clients
When I have a large number of clients I am experiencing timeouts in the getMetadata call.  There's currently no way to configure this timeout - in issue UIMA-33, we made the client descriptor's <timeout> element apply only to the process call, so getMetadata defaults to a 1 minute timeout.  With a small number of clients this is OK, but the Vinci service has a default thread pool of size 20 (also not configurable through the UIMA descriptor), so if you have more clients than this then this pool may get filled up with process requests forcing a getMetadata call to wait much longer.  Probably both of these settings should be configurable.
issueID:UIMA-822
type:Bug
changed files:
texts:eclipse plugins build broken - the messages resources are not found
Subsequent to the refactoring of the resources into uimaj/eclipse-plugin-superPom, running eclipse:eclipse is no longer putting the src/main/resources things into the class path.This is likely due to the resources not being merged with the maven overall superpom, anymore; that pom (see http://maven.apache.org/guides/introduction/introduction-to-the-pom.html#Super_POM ) contains    <resources>      <resource>        <directory>src/main/resources</directory>      </resource>    </resources>but when the eclipse-plugin-superPom had a similar <resources> element, it was (erroneously) presumed that its resources would be merged with the super pom.  The fix is to just put this in explicitly.
issueID:UIMA-823
type:Bug
changed files:
texts:Building is broken - message is failed to resolve artifact uimaj-eclipse-plugins
building from clean checkout fails - not finding uimaj-eclipse-plugins artifact.
issueID:UIMA-824
type:Improvement
changed files:
texts:document on website what needs to be set for running uimaj-distr assembly:assembly to specify Eclipse location
document on website what needs to be set for running uimaj-distr assembly:assembly to specify Eclipse location
issueID:UIMA-825
type:Improvement
changed files:
texts:for Eclipse Update Site, remove checksum generation - it&#39;s done elsewhere, and improve specifying eclipse-home
Cleanup of approach to generating checksums - do in one place for uimaj-distr things (in the uimaj-distr pom).  Allow 3 methods of specifying eclipse home, and make them work.  Add next feature release info, while keeping previous.
issueID:UIMA-826
type:Bug
changed files:uimaj-core/src/main/java/org/apache/uima/util/CasCreationUtils.java
uimaj-core/src/main/java/org/apache/uima/util/CasCreationUtils.java
uimaj-core/src/main/java/org/apache/uima/util/CasCreationUtils.java
uimaj-core/src/main/java/org/apache/uima/util/CasCreationUtils.java
uimaj-core/src/main/java/org/apache/uima/util/CasCreationUtils.java
uimaj-core/src/main/java/org/apache/uima/util/CasCreationUtils.java
texts:Type System Merging does not work consistently when a type is declared twice with different supertypes
When type system merging is done, if the same type is declared twice with different supertypes, then the result depends on the order in which the types are declared.For example, given the type system descriptors:TS1.xml:<typeSystemDescription xmlns="http://uima.apache.org/resourceSpecifier"><types><typeDescription><name>Sub</name><description>Example type.</description><supertypeName>uima.tcas.Annotation</supertypeName></typeDescription></types></typeSystemDescription>TS2.xml:<typeSystemDescription xmlns="http://uima.apache.org/resourceSpecifier"><types><typeDescription><name>Sub</name><description>Example type.</description><supertypeName>Super</supertypeName></typeDescription><typeDescription><name>Super</name><description>Example type.</description><supertypeName>uima.tcas.Annotation</supertypeName></typeDescription></types></typeSystemDescription>If you merge them in the order TS1.xml, TS2.xml it will fail with the error message:  "The Type Sub is declared twice, with incompatible supertypes Super and uima.tcas.Annotation".  But if you merge them in the order TS2.xml, TS1.xml it will succeed!The intended behavior is that the merge should succeed and the resulting supertype should be "Super" (the lower of the two declared supertypes in the type hierarchy).  It is only supposed to fail if the different declared supertypes are not in the same inheritance chain (neither inherits from the other).  But that code is broken in the case where the two subtype declarations are processed before the supertype declarations.
issueID:UIMA-827
type:Bug
changed files:
texts:fix NPE for interger based feature values that are null

issueID:UIMA-828
type:Bug
changed files:
texts:MultiprocessingAnalysisEngine_implTest.java fails intermittently
Here's the surefire report.  This can not be reproduced reliably, but happens for me (and Michael) about 50% of the time.-------------------------------------------------------------------------------Test set: org.apache.uima.analysis_engine.impl.MultiprocessingAnalysisEngine_implTest-------------------------------------------------------------------------------Tests run: 5, Failures: 1, Errors: 0, Skipped: 0, Time elapsed: 0.578 sec <<< FAILURE!testProcess(org.apache.uima.analysis_engine.impl.MultiprocessingAnalysisEngine_implTest)  Time elapsed: 0.437 sec  <<< FAILURE!junit.framework.AssertionFailedError: expected:<org.apache.uima.analysis_engine.impl.ResultSpecification_impl:);needsCompilation = truelang2int = {x-unspecified=0}name2tof_langs = {NamedEntity=org.apache.uima.analysis_engine.impl.ResultSpecification_impl$ToF_Languages@306ee348}withSubtypesName2tof_langs = {}mTypeSystem = ~uima.cas.TOP (1);uima.cas.Integer (2) < uima.cas.TOP (1);uima.cas.Float (3) < uima.cas.TOP (1);uima.cas.String (4) < uima.cas.TOP (1);uima.cas.ArrayBase (5) < uima.cas.TOP (1);uima.cas.FSArray (6) < uima.cas.ArrayBase (5);uima.cas.FloatArray (7) < uima.cas.FSArray (6);uima.cas.IntegerArray (8) < uima.cas.FSArray (6);uima.cas.StringArray (9) < uima.cas.FSArray (6);uima.cas.ListBase (10) < uima.cas.TOP (1);uima.cas.FSList (11) < uima.cas.ListBase (10);uima.cas.EmptyFSList (12) < uima.cas.FSList (11);uima.cas.NonEmptyFSList (13) < uima.cas.FSList (11);uima.cas.FloatList (14) < uima.cas.ListBase (10);uima.cas.EmptyFloatList (15) < uima.cas.FloatList (14);uima.cas.NonEmptyFloatList (16) < uima.cas.FloatList (14);uima.cas.IntegerList (17) < uima.cas.ListBase (10);uima.cas.EmptyIntegerList (18) < uima.cas.IntegerList (17);uima.cas.NonEmptyIntegerList (19) < uima.cas.IntegerList (17);uima.cas.StringList (20) < uima.cas.ListBase (10);uima.cas.EmptyStringList (21) < uima.cas.StringList (20);uima.cas.NonEmptyStringList (22) < uima.cas.StringList (20);uima.cas.Boolean (23) < uima.cas.TOP (1);uima.cas.Byte (24) < uima.cas.TOP (1);uima.cas.Short (25) < uima.cas.TOP (1);uima.cas.Long (26) < uima.cas.TOP (1);uima.cas.Double (27) < uima.cas.TOP (1);uima.cas.BooleanArray (28) < uima.cas.FSArray (6);uima.cas.ByteArray (29) < uima.cas.FSArray (6);uima.cas.ShortArray (30) < uima.cas.FSArray (6);uima.cas.LongArray (31) < uima.cas.FSArray (6);uima.cas.DoubleArray (32) < uima.cas.FSArray (6);uima.cas.Sofa (33) < uima.cas.TOP (1);uima.cas.AnnotationBase (34) < uima.cas.TOP (1);uima.tcas.Annotation (35) < uima.cas.AnnotationBase (34);uima.tcas.DocumentAnnotation (36) < uima.tcas.Annotation (35);foo.Bar (37) < uima.tcas.Annotation (35);NamedEntity (38) < uima.tcas.Annotation (35);DocumentStructure (39) < uima.tcas.Annotation (35);uima.cas.NonEmptyFSList:head (1): uima.cas.NonEmptyFSList (13) > uima.cas.TOP (1);uima.cas.NonEmptyFSList:tail (2): uima.cas.NonEmptyFSList (13) > uima.cas.FSList (11);uima.cas.NonEmptyFloatList:head (3): uima.cas.NonEmptyFloatList (16) > uima.cas.Float (3);uima.cas.NonEmptyFloatList:tail (4): uima.cas.NonEmptyFloatList (16) > uima.cas.FloatList (14);uima.cas.NonEmptyIntegerList:head (5): uima.cas.NonEmptyIntegerList (19) > uima.cas.Integer (2);uima.cas.NonEmptyIntegerList:tail (6): uima.cas.NonEmptyIntegerList (19) > uima.cas.IntegerList (17);uima.cas.NonEmptyStringList:head (7): uima.cas.NonEmptyStringList (22) > uima.cas.String (4);uima.cas.NonEmptyStringList:tail (8): uima.cas.NonEmptyStringList (22) > uima.cas.StringList (20);uima.cas.Sofa:sofaNum (9): uima.cas.Sofa (33) > uima.cas.Integer (2);uima.cas.Sofa:sofaID (10): uima.cas.Sofa (33) > uima.cas.String (4);uima.cas.Sofa:mimeType (11): uima.cas.Sofa (33) > uima.cas.String (4);uima.cas.Sofa:sofaArray (12): uima.cas.Sofa (33) > uima.cas.TOP (1);uima.cas.Sofa:sofaString (13): uima.cas.Sofa (33) > uima.cas.String (4);uima.cas.Sofa:sofaURI (14): uima.cas.Sofa (33) > uima.cas.String (4);uima.cas.AnnotationBase:sofa (15): uima.cas.AnnotationBase (34) > uima.cas.Sofa (33);uima.tcas.Annotation:begin (16): uima.tcas.Annotation (35) > uima.cas.Integer (2);uima.tcas.Annotation:end (17): uima.tcas.Annotation (35) > uima.cas.Integer (2);uima.tcas.DocumentAnnotation:language (18): uima.tcas.DocumentAnnotation (36) > uima.cas.String (4);> but was:<org.apache.uima.analysis_engine.impl.ResultSpecification_impl:);needsCompilation = truelang2int = {x-unspecified=0}name2tof_langs = {NamedEntity=org.apache.uima.analysis_engine.impl.ResultSpecification_impl$ToF_Languages@306ee348}withSubtypesName2tof_langs = {}mTypeSystem = ~uima.cas.TOP (1);uima.cas.Integer (2) < uima.cas.TOP (1);uima.cas.Float (3) < uima.cas.TOP (1);uima.cas.String (4) < uima.cas.TOP (1);uima.cas.ArrayBase (5) < uima.cas.TOP (1);uima.cas.FSArray (6) < uima.cas.ArrayBase (5);uima.cas.FloatArray (7) < uima.cas.FSArray (6);uima.cas.IntegerArray (8) < uima.cas.FSArray (6);uima.cas.StringArray (9) < uima.cas.FSArray (6);uima.cas.ListBase (10) < uima.cas.TOP (1);uima.cas.FSList (11) < uima.cas.ListBase (10);uima.cas.EmptyFSList (12) < uima.cas.FSList (11);uima.cas.NonEmptyFSList (13) < uima.cas.FSList (11);uima.cas.FloatList (14) < uima.cas.ListBase (10);uima.cas.EmptyFloatList (15) < uima.cas.FloatList (14);uima.cas.NonEmptyFloatList (16) < uima.cas.FloatList (14);uima.cas.IntegerList (17) < uima.cas.ListBase (10);uima.cas.EmptyIntegerList (18) < uima.cas.IntegerList (17);uima.cas.NonEmptyIntegerList (19) < uima.cas.IntegerList (17);uima.cas.StringList (20) < uima.cas.ListBase (10);uima.cas.EmptyStringList (21) < uima.cas.StringList (20);uima.cas.NonEmptyStringList (22) < uima.cas.StringList (20);uima.cas.Boolean (23) < uima.cas.TOP (1);uima.cas.Byte (24) < uima.cas.TOP (1);uima.cas.Short (25) < uima.cas.TOP (1);uima.cas.Long (26) < uima.cas.TOP (1);uima.cas.Double (27) < uima.cas.TOP (1);uima.cas.BooleanArray (28) < uima.cas.FSArray (6);uima.cas.ByteArray (29) < uima.cas.FSArray (6);uima.cas.ShortArray (30) < uima.cas.FSArray (6);uima.cas.LongArray (31) < uima.cas.FSArray (6);uima.cas.DoubleArray (32) < uima.cas.FSArray (6);uima.cas.Sofa (33) < uima.cas.TOP (1);uima.cas.AnnotationBase (34) < uima.cas.TOP (1);uima.tcas.Annotation (35) < uima.cas.AnnotationBase (34);uima.tcas.DocumentAnnotation (36) < uima.tcas.Annotation (35);foo.Bar (37) < uima.tcas.Annotation (35);NamedEntity (38) < uima.tcas.Annotation (35);DocumentStructure (39) < uima.tcas.Annotation (35);uima.cas.NonEmptyFSList:head (1): uima.cas.NonEmptyFSList (13) > uima.cas.TOP (1);uima.cas.NonEmptyFSList:tail (2): uima.cas.NonEmptyFSList (13) > uima.cas.FSList (11);uima.cas.NonEmptyFloatList:head (3): uima.cas.NonEmptyFloatList (16) > uima.cas.Float (3);uima.cas.NonEmptyFloatList:tail (4): uima.cas.NonEmptyFloatList (16) > uima.cas.FloatList (14);uima.cas.NonEmptyIntegerList:head (5): uima.cas.NonEmptyIntegerList (19) > uima.cas.Integer (2);uima.cas.NonEmptyIntegerList:tail (6): uima.cas.NonEmptyIntegerList (19) > uima.cas.IntegerList (17);uima.cas.NonEmptyStringList:head (7): uima.cas.NonEmptyStringList (22) > uima.cas.String (4);uima.cas.NonEmptyStringList:tail (8): uima.cas.NonEmptyStringList (22) > uima.cas.StringList (20);uima.cas.Sofa:sofaNum (9): uima.cas.Sofa (33) > uima.cas.Integer (2);uima.cas.Sofa:sofaID (10): uima.cas.Sofa (33) > uima.cas.String (4);uima.cas.Sofa:mimeType (11): uima.cas.Sofa (33) > uima.cas.String (4);uima.cas.Sofa:sofaArray (12): uima.cas.Sofa (33) > uima.cas.TOP (1);uima.cas.Sofa:sofaString (13): uima.cas.Sofa (33) > uima.cas.String (4);uima.cas.Sofa:sofaURI (14): uima.cas.Sofa (33) > uima.cas.String (4);uima.cas.AnnotationBase:sofa (15): uima.cas.AnnotationBase (34) > uima.cas.Sofa (33);uima.tcas.Annotation:begin (16): uima.tcas.Annotation (35) > uima.cas.Integer (2);uima.tcas.Annotation:end (17): uima.tcas.Annotation (35) > uima.cas.Integer (2);uima.tcas.DocumentAnnotation:language (18): uima.tcas.DocumentAnnotation (36) > uima.cas.String (4);> at junit.framework.Assert.fail(Assert.java:47) at junit.framework.Assert.failNotEquals(Assert.java:282) at junit.framework.Assert.assertEquals(Assert.java:64) at junit.framework.Assert.assertEquals(Assert.java:71) at org.apache.uima.analysis_engine.impl.MultiprocessingAnalysisEngine_implTest.testProcess(MultiprocessingAnalysisEngine_implTest.java:241) at org.apache.uima.analysis_engine.impl.MultiprocessingAnalysisEngine_implTest.testProcess(MultiprocessingAnalysisEngine_implTest.java:241) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25) at java.lang.reflect.Method.invoke(Method.java:597) at junit.framework.TestCase.runTest(TestCase.java:154) at junit.framework.TestCase.runBare(TestCase.java:127) at junit.framework.TestResult$1.protect(TestResult.java:106) at junit.framework.TestResult.runProtected(TestResult.java:124) at junit.framework.TestResult.run(TestResult.java:109) at junit.framework.TestCase.run(TestCase.java:118) at junit.framework.TestSuite.runTest(TestSuite.java:208) at junit.framework.TestSuite.run(TestSuite.java:203) at sun.reflect.GeneratedMethodAccessor108.invoke(Unknown Source) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25) at java.lang.reflect.Method.invoke(Method.java:597) at org.apache.maven.surefire.junit.JUnitTestSet.execute(JUnitTestSet.java:213) at org.apache.maven.surefire.suite.AbstractDirectoryTestSuite.executeTestSet(AbstractDirectoryTestSuite.java:138) at org.apache.maven.surefire.suite.AbstractDirectoryTestSuite.execute(AbstractDirectoryTestSuite.java:125) at org.apache.maven.surefire.Surefire.run(Surefire.java:132) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25) at java.lang.reflect.Method.invoke(Method.java:597) at org.apache.maven.surefire.booter.SurefireBooter.runSuitesInProcess(SurefireBooter.java:290) at org.apache.maven.surefire.booter.SurefireBooter.main(SurefireBooter.java:818)
issueID:UIMA-829
type:Bug
changed files:
texts:When processing CPC the PrimitiveController doesnt release AE instance back to the pool
When processing CPC the PrimitiveController checks out an instance of AE from the pool but never releases this instance back when done. Release the AE instance in the finally block.
issueID:UIMA-83
type:Bug
changed files:uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/ui/dialogs/AbstractDialog.java
texts:CDE Parameter Type drop-down is not properly sized on Mac.
On the CDE's Add Parameter dialog, the "Paramer Type" drop-down box is not tall enough to be able to read the value that it contains.  Appears to occur only on a Mac.
issueID:UIMA-831
type:Bug
changed files:
texts:UIMA-AS code fails to compile
Compile error in uimaj-as-activemq\src\main\java\org\apache\uima\adapter\jms\activemq\JmsOutputChannel.javaUnnecessary import of: com.sun.org.apache.xml.internal.security.encryption.AgreementMethod
issueID:UIMA-832
type:Task
changed files:uimaj-core/src/main/java/org/apache/uima/impl/UIMAFramework_impl.java
texts:Update version of UIMAJ to 2.2.2 from 2.3.0
Preparing for release, change target release number to 2.2.2.  Also write script to automate much of this work.
issueID:UIMA-833
type:Bug
changed files:
texts:Cannot create Eclipse project uimaj-as-activemq
Line 26 should be: <artifactId>uimaj-as-activemq</artifactId>
issueID:UIMA-834
type:Bug
changed files:
texts:replace special characters with XML entities when generating dictionaries
Replace the following characters with XML entities when generating a dictionary< < ("less than")> > ("greater than")& & ("ampersand")" " ("quotation")' ' ("apostroph")
issueID:UIMA-835
type:Bug
changed files:
texts:src distribution build does not work
&#91;INFO&#93; Scanning for projects...&#91;INFO&#93; ------------------------------------------------------------------------&#91;ERROR&#93; FATAL ERROR&#91;INFO&#93; ------------------------------------------------------------------------&#91;INFO&#93; Error building POM (may not be this project's POM).Project ID: unknownReason: Could not find the model file 'C:\temp\uimaj-2.2.2-incubating-SNAPSHOT\uimaj\eclipse-plugin-superPom\pom.xml'. for project unknownI think this has to be fixed in source release packaging
issueID:UIMA-836
type:Bug
changed files:
texts:The maven property that points to the eclipse installation for build the eclipse update site points to the parent directory and expects to find a directory called eclipse
That's very inconvenient.  I don't have plain old eclipse directories since I usually have about half a dozen parallel eclipse installations.  The property should simply point directly to the eclipse installation.
issueID:UIMA-837
type:Improvement
changed files:
texts:Docbook tooling PDF footer overflows with long version name
The docbook version name can be long, e.g. 2.2.2-incubating-SNAPSHOT. It is put into the footer in pdf formating.  This causes a page overflow on every page. Fix this by stripping of the -incubating-SNAPSHOT when it is used in the footer.
issueID:UIMA-838
type:Bug
changed files:
texts:Incorrect support for process CAS error threshold count and threshold window
The thresholdAction should be taken when the number of CAS errors reaches the thresholdCount value within the last thresholdWindow CASes.  A thresholdWindow of 0 means an infinite window, so the action is taken when the total number of errors reaches the thresholdCount.  A thresholdCount of 0 means an infinite limit, errors are ignored.  A thresholdCount of 1 means that the first error triggers the action, hence the action must be taken when the threshold is REACHED, not exceeded as stated in the current docs.  (Although thresholds usually apply when exceeded, making the thresholdCount be the number permitted would require using a value such as -1 for no threshold, in contrast to our use of 0 to mean no timeout and no window)It should be an error to specify a (non-zero) thresholdWindow that is smaller than the thresholdCount ... an impossible situation.Note that if thresholdCount = 1 the thresholdWindow value is irrelevant, and if thresholdCount = thresholdWindow the action is taken when that many consecutive errors occur.
issueID:UIMA-839
type:Improvement
changed files:
texts:Fixup uima-as-distr to create src and bin distr for uima-as
This project has some initial contents from previous methods of distribution. Convert to our maven approach.
issueID:UIMA-84
type:Bug
changed files:uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/MultiPageEditor.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/ui/dialogs/FindComponentDialog.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/ui/dialogs/SearchThread.java
texts:CDE&#39;s  "Find AE"  Dialog does not  work on Mac.
On the CDE's Aggregate page, in the Find AE dialog, the use selected a descriptor and clicked OK.  The dialog closed but the selected AE was not added to the aggregate.  Appears to occur only on a Mac.
issueID:UIMA-840
type:Improvement
changed files:
texts:change uima-as version to 2.2.2-incubating-SNAPSHOT (match uimaj version), add script to update version
change uima-as version to 2.2.2-incubating-SNAPSHOT (match uimaj version), add script to update version (based on version for uimaj-distr /... / build / changeVersion
issueID:UIMA-841
type:Improvement
changed files:
texts:move Eclipse feature maven builds into feature projects
(Suggest we do this after 2.2.2 release)  The current Eclipse update site has one ant build script in the update-site project which builds the features and the update site.  This Jira is to move the feature builds to the feature projects.  This will allow them to be built when the Features are updated.  The Eclipse Update site will have multiple features - some from sandbox projects - which could be on a different build / version schedule, and this change will support that.  After the change, the update site will only build the update site itself, copying any updated (new version) feature jars into its own project (where they will be stored in SVN and used for subsequent builds - because the update site will hold previous released "versions" of the features.
issueID:UIMA-842
type:Bug
changed files:
texts:too many things downloaded for maven build of uima-as
The maven build of uimaj-as downloads all kinds of things, including parts of geronimo from the incubator repository, and activemq-web-demo-5.0.0.war .  The complete list of downloaded Jars is in the next comment.  This may be due to unanticipated dependency link following.
issueID:UIMA-843
type:Bug
changed files:
texts:Modify UIMA-AS client to throw exception from initialize() when GetMeta times out
UIMA-As client code needs to throw an exception from initialize() when GetMeta time out occurs. The current code handles the GetMeta timeout in a timer thread and calls the application listener.
issueID:UIMA-844
type:Improvement
changed files:
texts:Add connection recovery for temp queues in the JMS Listener object
When a connection to a temp queue is broken, the JMS listener is not set up to recover it. Part of the recovery should be a creation of a new queue.
issueID:UIMA-845
type:Bug
changed files:
texts:UIMA-AS client doesnt recover from failed connection to a temp queue
UIMA-As client should try to recreate a temp queue as part of a silent recovery when a connection to the previously used temp queue is broken.   DEFER to after 2.2.2
issueID:UIMA-846
type:Improvement
changed files:
texts:Modify UIMA-AS to remove EE from class names
There are a few classes in the UIMA-AS projects that still have EE in the names. Rename or drop this acronym from the class names.
issueID:UIMA-849
type:New Feature
changed files:
texts:Add sample deployment descriptors
The uiima-as release must have some sample deployment descriptors illustrating how to scale out UIMA aggregates and deploy UIMA annotators as async services. These samples will utilize existing UIMA sample code.
issueID:UIMA-85
type:Bug
changed files:uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/ui/AggregateSection.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/ui/AggregateSection.java
texts:CDE "Open in new window..." feature does not work on Mac.
On a Mac there is no way to use the CDE feature that allows opening a descriptor in a new window (for example for a delegate descriptor).  Presumably this is because this action requires a right-click and Macs have no right mouse button.  But the equivalent Mac gesture for opening context menus does not work.  There should be some way to invoke this operation on a Mac.
issueID:UIMA-850
type:Bug
changed files:
texts:Cancel timer as soon as process reply is received
The UIMA-AS client cancels timer too late. This operation should happen as soon as the reply is received.
issueID:UIMA-851
type:Bug
changed files:
texts:dd2spring uses incorrect default value for casPoolSize
The <casPool> element for a service is optional, allowing the user to tune the number of CASes available to the service, and the initial CAS size. However, when left out dd2spring sets a default size=1. This value is incorrect when the number of instances of the primitive UIMA annotator instantiated by the service is greater than one.The default CAS pool size for a primitive AS service should be the same as scaleout numberOfInstances.
issueID:UIMA-852
type:Bug
changed files:
texts:jcasgen.sh has trouble with import by name
If processing a typesystem file that uses <import name="some/path/to/blah">, and the path to blah is not relative to where jcasgen is run, jcasgen will fail because uima.datapath cannot be set.The simplest approach to resolve it would be to read the value from an evironment variable such as UIMA_DATAPATH.
issueID:UIMA-853
type:Bug
changed files:uimaj-tools/src/main/java/org/apache/uima/tools/jcasgen/Jg.java
texts:jcasgen.sh returns success even if the run fails
If jcasgen.sh has an error in the input data, it silently fails, returning a 0.  This means that it cannot behave correctly in a makefile, since the returncode is completely bogus.
issueID:UIMA-855
type:Bug
changed files:
texts:java.lang.ArrayIndexOutOfBoundsException in Tagger
. I've found a problem with the HMM Tagger which generates :java.lang.ArrayIndexOutOfBoundsException: -2    at java.util.ArrayList.get(ArrayList.java:323)    at org.apache.uima.examples.tagger.Viterbi.process(Viterbi.java:328)when I analyze the following sentence "pH The test." (tokenized as &#91;pH&#93;&#91;The&#93;&#91;test&#93;&#91;.&#93;)This happens on the SVN version as of 6th March.
issueID:UIMA-856
type:Improvement
changed files:
texts:cleanup uima-as docbook
Fix boilerplate, footer formatting, naming changes ee to as.   Add index.html that ties uima-as docs with base uima docs using a link to our website for the base uima docs.
issueID:UIMA-857
type:Improvement
changed files:
texts:Change startup of framework to support versioned Jars and simplified classpath
Our approach to the framework classpath is to (a) strip version info from our Jar names, and (b) have a setUimaClassPath script that adds lots of these (unversioned) jars to the classpath.Other systems use a different approach - usually putting all the jars that should be in the classpath into a directory, and then having a small wrapper jar (with an unversioned name) that adds all the jars it finds in this dir to the classpath.  (See for instance, ActiveMQ startup, or the way things like Tomcat work).    Change UIMA to use this approach.   (Not for 2.2.2, but for following release, perhaps).
issueID:UIMA-858
type:Bug
changed files:
texts:AnalysisEnginePoolTest intermittant failure - same issue as MultiprocessingAnalysisEngine_implTest
Tests which compare results specs must insure that the "type system" associated with the result specs are == (not just "equal"), because there is no method for type system equals (it defaults to ==).  Related issue is http://issues.apache.org/jira/browse/UIMA-828
issueID:UIMA-859
type:Bug
changed files:
texts:changeVersion scripts not handling transition from SNAPSHOT to non-SNAPSHOT properly
This is because some of the POMs have hardcoded adding the -SNAPSHOT.  Change the poms and the changeVersion script to have the POMs just have simple strings for versions, and have the changeVersions script do the entire change including -SNAPSHOT.
issueID:UIMA-86
type:Bug
changed files:uimaj-core/src/main/java/org/apache/uima/analysis_engine/AnalysisEngineDescription.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/impl/AnalysisEngineDescription_impl.java
uimaj-core/src/main/java/org/apache/uima/util/InvalidXMLException.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/AnalysisEngineDescription.java
uimaj-core/src/main/java/org/apache/uima/analysis_engine/impl/AnalysisEngineDescription_impl.java
uimaj-core/src/main/java/org/apache/uima/util/InvalidXMLException.java
texts:Aggregate descriptor that imports itself causes hang
If you create an aggregate descriptor that for one of its delegates imports the aggregate descriptor itself, this will cause a hang when the descriptor is validated or when the component is instantiated.  If such a descriptor is opened in the CDE, then Eclipse will hang and must be killed.
issueID:UIMA-860
type:Bug
changed files:
texts:Add source-style LICENSE and NOTICE files at "root"s of UIMA
The legal wiki seems to be converging to a concensus around having LICENSE and NOTICE files at the "root" of projects in SVN (underneath "trunk").  There was a lot of discussion about this from our previous release attempt.There are multiple kinds of LICENSE and NOTICE files - those for our "source" distributions (which are pretty simple), and those for our binary ones (which, because these sometimes include other projects, have more complex versions - see http://svn.apache.org/viewvc/incubator/uima/sandbox/trunk/uima-as/uima-as-distr/src/main/readme for instance).To conform to this emerging Apache convention, put the "source" style of licenses beneath the "trunk" directory in our SVN (we have at least 2 of these - one for the main branch, and one for the sandbox.)   Also put at top level (the level containing the projects) in uima-as - there is a "collection" directory for all the uima-as projects.
issueID:UIMA-861
type:Improvement
changed files:
texts:Add eclipse-plugin-superPom for uima-as, copying the structure used in uima
This pom factors out common things for eclipse plugin / fragments building for uima-as.
issueID:UIMA-862
type:Bug
changed files:
texts:UIMA-AS: saxon jar name wrong, and saxon version issue
The launch code in uima-as has hard-coded the saxon jar name, as saxon8.jar, but the build process has a different name.  Fix this.Also, the version of saxon currently available from the maven repos is down-level - 8.7 versus 8.9 which we have been using.  The command line arguments are different for 8.7, and the 8.9 arguments are not recognized.  See if 8.7 will work for our purposes, or find another way to get the distr to includ 8.9.
issueID:UIMA-863
type:Bug
changed files:
texts:update release notes for release 2.2.2-incubating

issueID:UIMA-864
type:Bug
changed files:
texts:update version from 2.2.2-incubating-SNAPSHOT to 2.2.2-incubating

issueID:UIMA-865
type:Bug
changed files:
texts:UIMA core distribution build only works if the UIMA AS plugins are available
If the UIMA AS plugins are not available the eclipse update site build failed.
issueID:UIMA-866
type:Bug
changed files:
texts:Modify UIMA-AS documentation to state that the Error Results are not implemented
In section 2.4, the current UIMA-AS documentation talks about Error Results. This is not yet implemented. The documentation needs to state that this is not yet available.
issueID:UIMA-867
type:Bug
changed files:
texts:runRemoteAyncAE scripts do not support UIMA_DATAPATH
Since these scripts can also deploy AEs they need to set uima.datapath from the env var.
issueID:UIMA-868
type:Bug
changed files:
texts:put Saxon in a place unlikely to be put in the class path; update test and script codes to reference
The test code looks for saxon in the directory %UIMA_HOME%/lib/MUST-NOT-BE-IN-CLASSPATH.  However the build code doesn't put it there.  The scripts expect saxon to be in file:$UIMA_HOME/lib/saxon8.jarFix by creating a new directory in the bin distr, parallel to lib, named saxon, having the jar file, and update the scripts and the test.  It was felt that the name "MUST-NOT-BE-IN-CLASSPATH", while having the desired effect, was perhaps too un-aesthetic, and having a parallel directory will be sufficient enough to avoid people from making the mistake of including this in the class path.
issueID:UIMA-869
type:Bug
changed files:
texts:uima-as test case refers to UIMA_HOME to get saxon and dd2spring xslt - doesn&#39;t work before install & assembly:assembly
The test case depends on referring to an installed version of uima-as to get saxon and the xslt file.  Change to refer to the uima-as-distr project instead, so the test can be run during maven install
issueID:UIMA-870
type:Bug
changed files:
texts:uima-as fix active-mq jar lib layout - wrong jetty version, move right things to "optional" directory
Testing reveals wrong activeMQ layout for jars.  Change to match active-mq 5.0.0 layout, and change versions of jars to match activemq-5.0.0
issueID:UIMA-871
type:Improvement
changed files:
texts:Split test suite into basic test and an extended test suite

issueID:UIMA-872
type:Bug
changed files:
texts:uima-as has spring version 2.5.1 , but is using activemq-5.0.0 which in turn has spring version 2.0.6, causing intermittant test failures?
We have no dependency on 2.5.1.  Reverting back to 2.0.6 made the test case work again.  (Not positive this was the underlying cause though).  But for stability, have all the spring versions be consistent - at 2.0.6.
issueID:UIMA-873
type:Bug
changed files:
texts:uima-as NOTICE file needs to remove horizontal lines
See http://mail-archives.apache.org/mod_mbox/www-legal-discuss/200803.mbox/%3cC8314B3E-4FF4-42F2-B335-E2E6970B4AB2@gbiv.com%3efor why we don't want horizontal rules and other extraneous stuff in our notice files.
issueID:UIMA-874
type:Bug
changed files:
texts:Service hangs when trying to reply to a local reply queue on a client that has disappeared.
Connection to client's internal broker fails and further requests build up on the input queue.
issueID:UIMA-875
type:Bug
changed files:
texts:Problem handing errors in sendAndReceiveCAS
sendAndReceiveCAS was originally implemented with a single threaded design. When it was changed to be thread-safe, a bug was introduced where an error condition on a request from one thread would, with unfortunate timing, cause an error on a request from another thread.
issueID:UIMA-876
type:Bug
changed files:
texts:UIMA service requests should expire if timeout value is set
Service requests with a timeout >0 should set time-to-live for the message to the timeout value. If unprocessed after the timeout period, JMS should discard the messages.
issueID:UIMA-877
type:Improvement
changed files:
texts:Reverse multiple copyright statements in docbooks, per request at previous release vote
See: http://markmail.org/message/ssxtd2vcsaszcf4m?q=uima-dev+%22jean+anderson%22+notice+copyright#query:uima-dev%20%22jean%20anderson%22%20notice%20copyright+page:1+mid:jg5axfsm4rp3o47m+state:resultsand look at Jean's note from 10 Mar 2007 10:46.  To avoid questions, change the order to conform to expectations.
issueID:UIMA-878
type:Bug
changed files:
texts:fix missing license headers

issueID:UIMA-879
type:Bug
changed files:
texts:Eclipse plugin jar files do not have the right names
In uimaj-2.2.2/01, the eclipse plugin jar files have names like "uimaj-ep-runtime-2.2.2.incubating.jar" instead of "org.apache.uima.runtime_2.2.2.incubating"
issueID:UIMA-88
type:Improvement
changed files:
texts:CDE does not handle invalid import by name very well
In the CDE if you try to create an import by name but choose a descriptor that is not in the classpath/datapath, you get an ugly error and the import dialog closes.  This often happens accidentally since it's easy to overlook that "import by name" is selected.It would be better if the CDE detected this problem, displayed a more helpful message, and did not close the dialog so that the user could change to import by location if appropriate.
issueID:UIMA-880
type:New Feature
changed files:
texts:Make PEAR installation path configurable in web.xml

issueID:UIMA-881
type:Bug
changed files:
texts:runAECpp should output XMI
runAECpp currently writes out XCAS. It should always output XMI.
issueID:UIMA-882
type:Bug
changed files:
texts:rename Tagger XML descriptor and add license header

issueID:UIMA-883
type:Bug
changed files:
texts:Missing license headers in JCas files and some XML files of simple server

issueID:UIMA-884
type:New Feature
changed files:
texts:Add default output abilities to simple server
Add the ability to specify default output to: output all annotations with all features for a component output all features for a given type
issueID:UIMA-885
type:Bug
changed files:
texts:fix license header issues
RAT report looks like:   29 1: !????? CasEditor/.classpath  30 1: !????? CasEditor/.project  31 1: !????? CasEditor/UIMA Cas Editor plugin tests.launch  32 1: !????? CasEditor/UIMA Cas Editor tests.launch  33 1: !????? CasEditor/UIMA Cas Editor.launch  35 1: !????? CasEditor/caseditor.product  39 1: !????? CasEditor/META-INF/MANIFEST.MF  56 1: !????? CasEditor/icons/application/uima.xpm  80 1: !????? CasEditor/src/main/java/org/apache/uima/caseditor/core/.cvsignore  130 1: !????? CasEditor/src/main/java/org/apache/uima/caseditor/editor/CasDocumentProvider.java  142 1: !????? CasEditor/src/main/java/org/apache/uima/caseditor/editor/package.html  159 1: !????? CasEditor/src/main/java/org/apache/uima/caseditor/editor/editview/CreateFeatureStructureDialog.java  176 1: !????? CasEditor/src/main/java/org/apache/uima/caseditor/editor/fsview/package.html  182 1: !????? CasEditor/src/main/java/org/apache/uima/caseditor/editor/outline/package.html  186 1: !????? CasEditor/src/main/java/org/apache/uima/caseditor/ui/package.html  195 1: !????? CasEditor/src/main/java/org/apache/uima/caseditor/ui/action/package.html  211 1: !????? CasEditor/src/main/java/org/apache/uima/caseditor/ui/corpusview/package.html  222 1: !????? CasEditor/src/main/java/org/apache/uima/caseditor/ui/model/TypesystemAdapter.java  234 1: !????? CasEditor/src/main/java/org/apache/uima/caseditor/ui/property/package.html  240 1: !????? CasEditor/src/main/java/org/apache/uima/caseditor/ui/wizards/NewNlpProjectWizardPage.java  241 1: !????? CasEditor/src/main/java/org/apache/uima/caseditor/ui/wizards/WizardNewFileCreation.java  242 1: !????? CasEditor/src/main/java/org/apache/uima/caseditor/ui/wizards/WizardNewFolderCreation.java  243 1: !????? CasEditor/src/main/java/org/apache/uima/caseditor/ui/wizards/package.html  265 1: !????? CasEditor/src/test/resources/ManualTests/UI_005.xcas  266 1: !????? CasEditor/src/test/resources/ManualTests/UI_006_.xmi  267 1: !????? CasEditor/src/test/resources/ManualTests/UI_007.txt  268 1: !????? CasEditor/src/test/resources/ManualTests/UI_008.rtf  284 1: !????? CasEditor/target/classes/org/apache/uima/caseditor/core/.cvsignore  376 1: !????? CasEditor/target/classes/org/apache/uima/caseditor/editor/package.html  417 1: !????? CasEditor/target/classes/org/apache/uima/caseditor/editor/fsview/package.html  426 1: !????? CasEditor/target/classes/org/apache/uima/caseditor/editor/outline/package.html  430 1: !????? CasEditor/target/classes/org/apache/uima/caseditor/ui/package.html  439 1: !????? CasEditor/target/classes/org/apache/uima/caseditor/ui/action/package.html  463 1: !????? CasEditor/target/classes/org/apache/uima/caseditor/ui/corpusview/package.html  490 1: !????? CasEditor/target/classes/org/apache/uima/caseditor/ui/property/package.html  505 1: !????? CasEditor/target/classes/org/apache/uima/caseditor/ui/wizards/package.html  512 1: !????? CasEditor/target/images/caution.svg  517 1: !????? CasEditor/target/images/home.svg  520 1: !????? CasEditor/target/images/important.svg  524 1: !????? CasEditor/target/images/next.svg  527 1: !????? CasEditor/target/images/note.svg  531 1: !????? CasEditor/target/images/prev.svg  534 1: !????? CasEditor/target/images/tip.svg  541 1: !????? CasEditor/target/images/up.svg  544 1: !????? CasEditor/target/images/warning.svgSome of these are OK and we can just comment them, so for example all *.svg files
issueID:UIMA-886
type:Bug
changed files:
texts:Support fro fast GETMETA
Part of the initialization of a UIMA AS client is sending a request for metadata.  The service is required to give highest priority to GETMETA requests arnd  respond immediately.   This is already supported in the  Java implementaion.
issueID:UIMA-887
type:Bug
changed files:
texts:minor update for money detection regular expression

issueID:UIMA-888
type:Bug
changed files:
texts:fix documentation for SOAP deployment
"All the Java classes for the UIMA Examples are packaged in the uimaj-examples.jar file which is included in the %UIMA_HOME%/lib folder."jar files is called uima-examples.jar
issueID:UIMA-889
type:Bug
changed files:
texts:fix PearInstaller help file
Helper dialog mention "Make sure you have J2SE 1.4.2 or later JRE installed"
issueID:UIMA-890
type:Bug
changed files:uimaj-core/src/main/java/org/apache/uima/analysis_engine/impl/ResultSpecification_impl.java
texts:Capabilities with no language spec do not cause proper ResultSpec to be set up
No language specs in the capabilities results in a value of a 0-length string array, but the code is testing for a null
issueID:UIMA-891
type:Bug
changed files:uimaj-examples/src/main/java/org/apache/uima/examples/cas/PersonTitleAnnotator.java
uimaj-examples/src/main/java/org/apache/uima/examples/cas/RegExAnnotator.java
uimaj-examples/src/main/java/org/apache/uima/tutorial/ex3/TutorialDateTime.java
uimaj-examples/src/main/java/org/apache/uima/examples/cas/PersonTitleAnnotator.java
uimaj-examples/src/main/java/org/apache/uima/examples/cas/RegExAnnotator.java
uimaj-examples/src/main/java/org/apache/uima/tutorial/ex3/TutorialDateTime.java
texts:uima example annotator does not work with the new Result spec design
Annotators does not produce any output result since the use the ResultSpec API in a wrong wayThey do:resultSpec.containsType("org.apache.uima.tutorial.TimeAnnot")which checks the type for language x-unspecifiedBut the annotator only works for "en" as mentioned in the output spec so they have to do a check like:resultSpec.containsType("org.apache.uima.tutorial.TimeAnnot","en")
issueID:UIMA-892
type:Bug
changed files:uimaj-tools/src/main/java/org/apache/uima/tools/AnnotationViewerMain.java
texts:annoation viewer help dialog mention TAEs

issueID:UIMA-893
type:Bug
changed files:
texts:annotation viewer throws FileNotFoundException
The exception occurred when clicking "Edit Style Map"The descriptor that the annotation viewer search for was not used within the annotation viewer.java.io.FileNotFoundException: D:\code\apache\apache-uima\examples\descriptors\analysis_engine\PersonTitleAnnotator.xml (The system cannot find the path specified)        at java.io.FileInputStream.open(Native Method)        at java.io.FileInputStream.<init>(FileInputStream.java:106)        at java.io.FileInputStream.<init>(FileInputStream.java:66)        at sun.net.www.protocol.file.FileURLConnection.connect(FileURLConnection.java:70)        at sun.net.www.protocol.file.FileURLConnection.getInputStream(FileURLConnection.java:161)        at java.net.URL.openStream(URL.java:1007)        at org.apache.uima.util.XMLInputSource.<init>(XMLInputSource.java:114)        at org.apache.uima.util.XMLInputSource.<init>(XMLInputSource.java:63)        at org.apache.uima.tools.docanalyzer.AnnotationViewerDialog.promptForAE(AnnotationViewerDialog.java:663)        at org.apache.uima.tools.docanalyzer.AnnotationViewerDialog.actionPerformed(AnnotationViewerDialog.java:328)
issueID:UIMA-894
type:Bug
changed files:uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/files/MultiResourceSelectionDialog.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/files/MultiResourceSelectionDialog.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/files/MultiResourceSelectionDialog.java
texts:CDE import by name broken on Linux
Import by name on Linux shows no candidates.
issueID:UIMA-895
type:Bug
changed files:
texts:apply http patch to activemq jars
There are two bugs in the http: connector of AMQ. See https://issues.apache.org/activemq/browse/AMQ-1308.
issueID:UIMA-896
type:Test
changed files:
texts:Add testcase to test processing of double-byte documents through HTTP tunneling
Need new test to make sure ActiveMQ HTTP Servlet handles double-byte documents
issueID:UIMA-897
type:Bug
changed files:
texts:users of uimaj-ep-runtime plugin having trouble due to jar inside jar structure
The build for uimaj-ep-runtime currently makes a jar with several embedded jars.  Change to make a jar with these embedded jars "unzipped".  There is a simple parameter to add to the POM to make this change, gleaned from the maven-bundle-plugin documentation. This is because users of the runtime plugin (using it in RCP programs) can't access the embedded jars.
issueID:UIMA-898
type:Bug
changed files:uimaj-tools/src/main/java/org/apache/uima/tools/docanalyzer/AnnotationViewerDialog.java
texts:documentAnalyzer throws NPE
documentAnalyzer throws NPE when clicking von "view" button with an empty output directoryjava.lang.NullPointerException        at javax.swing.JList$1.getSize(JList.java:315)        at javax.swing.JList.getPreferredScrollableViewportSize(JList.java:1914)        at javax.swing.ViewportLayout.preferredLayoutSize(ViewportLayout.java:75)        at java.awt.Container.preferredSize(Container.java:1558)        at java.awt.Container.getPreferredSize(Container.java:1543)        at javax.swing.JComponent.getPreferredSize(JComponent.java:1626)        at javax.swing.ScrollPaneLayout.preferredLayoutSize(ScrollPaneLayout.java:475)        at java.awt.Container.preferredSize(Container.java:1558)        at java.awt.Container.getPreferredSize(Container.java:1543)        at javax.swing.JComponent.getPreferredSize(JComponent.java:1626)        at java.awt.BorderLayout.preferredLayoutSize(BorderLayout.java:690)        at java.awt.Container.preferredSize(Container.java:1558)        at java.awt.Container.getPreferredSize(Container.java:1543)        at javax.swing.JComponent.getPreferredSize(JComponent.java:1626)        at javax.swing.JRootPane$RootLayout.preferredLayoutSize(JRootPane.java:824)        at java.awt.Container.preferredSize(Container.java:1558)        at java.awt.Container.getPreferredSize(Container.java:1543)        at javax.swing.JComponent.getPreferredSize(JComponent.java:1626)        at java.awt.BorderLayout.preferredLayoutSize(BorderLayout.java:690)        at java.awt.Container.preferredSize(Container.java:1558)        at java.awt.Container.getPreferredSize(Container.java:1543)        at java.awt.Window.pack(Window.java:487)        at org.apache.uima.tools.docanalyzer.DocumentAnalyzer.show_analysis(DocumentAnalyzer.java:828)        at org.apache.uima.tools.docanalyzer.DocumentAnalyzer.showAnalysisResults(DocumentAnalyzer.java:765)        at org.apache.uima.tools.docanalyzer.DocumentAnalyzer.actionPerformed(DocumentAnalyzer.java:497)        at javax.swing.AbstractButton.fireActionPerformed(AbstractButton.java:1849)        at javax.swing.AbstractButton$Handler.actionPerformed(AbstractButton.java:2169)        at javax.swing.DefaultButtonModel.fireActionPerformed(DefaultButtonModel.java:420)        at javax.swing.DefaultButtonModel.setPressed(DefaultButtonModel.java:258)        at javax.swing.plaf.basic.BasicButtonListener.mouseReleased(BasicButtonListener.java:236)        at java.awt.Component.processMouseEvent(Component.java:5517)        at javax.swing.JComponent.processMouseEvent(JComponent.java:3135)        at java.awt.Component.processEvent(Component.java:5282)        at java.awt.Container.processEvent(Container.java:1966)        at java.awt.Component.dispatchEventImpl(Component.java:3984)        at java.awt.Container.dispatchEventImpl(Container.java:2024)        at java.awt.Component.dispatchEvent(Component.java:3819)        at java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4212)        at java.awt.LightweightDispatcher.processMouseEvent(Container.java:3892)        at java.awt.LightweightDispatcher.dispatchEvent(Container.java:3822)        at java.awt.Container.dispatchEventImpl(Container.java:2010)        at java.awt.Window.dispatchEventImpl(Window.java:1791)        at java.awt.Component.dispatchEvent(Component.java:3819)        at java.awt.EventQueue.dispatchEvent(EventQueue.java:463)        at java.awt.EventDispatchThread.pumpOneEventForHierarchy(EventDispatchThread.java:242)        at java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:163)        at java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:157)        at java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:149)        at java.awt.EventDispatchThread.run(EventDispatchThread.java:110)
issueID:UIMA-899
type:Bug
changed files:uimaj-core/src/main/java/org/apache/uima/analysis_engine/impl/ResultSpecification_impl.java
texts:DocumentAnalyzer does not creat all output types for UIMA Analysis example
When running the UIMA Analysis example the output document does not contain the example.Name type. When running the same exampleusing CVD all output types are available. (Used Apache_UIMA.txt file for testing)The error only occurs on Linux!
issueID:UIMA-9
type:Improvement
changed files:uimaj-core/src/main/java/org/apache/uima/resource/metadata/impl/MetaDataObject_impl.java
uimaj-cpe/src/main/java/org/apache/uima/collection/impl/cpm/container/deployer/VinciTAP.java
uimaj-core/src/main/java/org/apache/uima/util/XMLParser.java
uimaj-adapter-vinci/src/main/java/org/apache/uima/adapter/vinci/VinciAnalysisEngineServiceStub.java
uimaj-core/src/main/java/org/apache/uima/util/impl/SaxDeserializer_impl.java
uimaj-adapter-soap/src/main/java/org/apache/uima/adapter/soap/XmlDeserializer.java
uimaj-adapter-vinci/src/main/java/org/apache/uima/adapter/vinci/VinciBinaryAnalysisEngineServiceStub.java
uimaj-adapter-soap/src/main/java/org/apache/uima/adapter/soap/axis11/XmlDeserializer_Axis11.java
uimaj-core/src/main/java/org/apache/uima/util/impl/XMLParser_impl.java
uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/ui/AbstractSection.java
texts:Remove support for xi:include
It was decided on the dev list to remove support for xi:include in UIMA descriptors.  Already this feature does not work with the XML parser bundled in Sun Java 1.5, and it is not supported by the Component Descriptor Editor plugin.  The <import/> syntax has replaced it in all of our examples and test cases.
issueID:UIMA-90
type:Improvement
changed files:
texts:Create eclipse run configurations for startVNS and startVinciService

issueID:UIMA-900
type:Improvement
changed files:
texts:mvn assembly:asssembly in uimaj-distr fails due to docbook tooling downloading several parts
The failure happens when the build.xml for the docbooks runs, and attempts to ask the user for permission to download the things missing.  The first thing is OK, but the 2nd gets a "stream closed" error.Let's defer this to after the 2.2.2 release.
issueID:UIMA-901
type:Bug
changed files:
texts:[UIMA-AS] Fix RAT reported missing license headers

issueID:UIMA-902
type:Bug
changed files:
texts:[uima-as] src distr build not properly excluding duplicate readme/license/notice files
Wrong syntax being used for <exclude> element - can have only one pattern; multiple patterns separated by commas not supported
issueID:UIMA-903
type:Bug
changed files:
texts:[uima-as] src distr build including too much of uima-docbook-tool
Exclude those things that are downloaded on first use.
issueID:UIMA-906
type:Bug
changed files:
texts:SOAP deployment does not work properly
Deploying a SOAP service work fine and don't produce an exception, but when trying the get the metaData the following error is displayed in the BrowserFault - ; nested exception is: WSDLException: faultCode=OTHER_ERROR: Can't find prefix for'http://uima.apache.org/analysis_engine'. Namespace prefixes must be seton the Definition object using the addNamespace(...) method.:AxisFault faultCode: {http://schemas.xmlsoap.org/soap/envelope/}Server.userException faultSubcode: faultString: WSDLException: faultCode=OTHER_ERROR: Can't find prefixfor 'http://uima.apache.org/analysis_engine'. Namespace prefixes must beset on the Definition object using the addNamespace(...) method.: faultActor: faultNode: faultDetail:When trying to connect to the service the following exception is thrown:org.apache.uima.resource.ResourceInitializationException: Error initializing "org.apache.uima.adapter.soap.SoapAnalysisEngineServiceAdapter" from descriptor file:/C:/Programme/apache-uima/examples/descriptors/soapService/NamesAndPersonTitlesService.xml. at org.apache.uima.util.SimpleResourceFactory.produceResource(SimpleResourceFactory.java:143) at org.apache.uima.impl.CompositeResourceFactory_impl.produceResource(CompositeResourceFactory_impl.java:62) at org.apache.uima.UIMAFramework.produceResource(UIMAFramework.java:258) at org.apache.uima.UIMAFramework.produceResource(UIMAFramework.java:303) at org.apache.uima.UIMAFramework.produceAnalysisEngine(UIMAFramework.java:383) at org.apache.uima.tools.cvd.MainFrame.setupAE(MainFrame.java:1529) at org.apache.uima.tools.cvd.MainFrame.loadAEDescriptor(MainFrame.java:524) at org.apache.uima.tools.cvd.control.AnnotatorOpenEventHandler.actionPerformed(AnnotatorOpenEventHandler.java:52) at javax.swing.AbstractButton.fireActionPerformed(AbstractButton.java:1849) at javax.swing.AbstractButton$Handler.actionPerformed(AbstractButton.java:2169) at javax.swing.DefaultButtonModel.fireActionPerformed(DefaultButtonModel.java:420) at javax.swing.DefaultButtonModel.setPressed(DefaultButtonModel.java:258) at javax.swing.AbstractButton.doClick(AbstractButton.java:302) at javax.swing.plaf.basic.BasicMenuItemUI.doClick(BasicMenuItemUI.java:1051) at javax.swing.plaf.basic.BasicMenuItemUI$Handler.mouseReleased(BasicMenuItemUI.java:1092) at java.awt.Component.processMouseEvent(Component.java:5517) at javax.swing.JComponent.processMouseEvent(JComponent.java:3135) at java.awt.Component.processEvent(Component.java:5282) at java.awt.Container.processEvent(Container.java:1966) at java.awt.Component.dispatchEventImpl(Component.java:3984) at java.awt.Container.dispatchEventImpl(Container.java:2024) at java.awt.Component.dispatchEvent(Component.java:3819) at java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4212) at java.awt.LightweightDispatcher.processMouseEvent(Container.java:3892) at java.awt.LightweightDispatcher.dispatchEvent(Container.java:3822) at java.awt.Container.dispatchEventImpl(Container.java:2010) at java.awt.Window.dispatchEventImpl(Window.java:1791) at java.awt.Component.dispatchEvent(Component.java:3819) at java.awt.EventQueue.dispatchEvent(EventQueue.java:463) at java.awt.EventDispatchThread.pumpOneEventForHierarchy(EventDispatchThread.java:242) at java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:163) at java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:157) at java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:149) at java.awt.EventDispatchThread.run(EventDispatchThread.java:110)Caused by: org.apache.uima.UIMARuntimeException at org.apache.uima.analysis_engine.service.impl.AnalysisEngineServiceAdapter.getMetaData(AnalysisEngineServiceAdapter.java:109) at org.apache.uima.resource.Resource_ImplBase.initialize(Resource_ImplBase.java:66) at org.apache.uima.analysis_engine.impl.AnalysisEngineImplBase.initialize(AnalysisEngineImplBase.java:109) at org.apache.uima.adapter.soap.SoapAnalysisEngineServiceAdapter.initialize(SoapAnalysisEngineServiceAdapter.java:67) at org.apache.uima.util.SimpleResourceFactory.produceResource(SimpleResourceFactory.java:122) ... 33 moreCaused by: org.apache.uima.resource.ResourceServiceException at org.apache.uima.adapter.soap.AxisResourceServiceStub.callGetMetaData(AxisResourceServiceStub.java:89) at org.apache.uima.analysis_engine.service.impl.AnalysisEngineServiceAdapter.getMetaData(AnalysisEngineServiceAdapter.java:105) ... 37 moreCaused by: (500)Internal Server Error at org.apache.axis.transport.http.HTTPSender.readFromSocket(HTTPSender.java:630) at org.apache.axis.transport.http.HTTPSender.invoke(HTTPSender.java:128) at org.apache.axis.strategies.InvocationStrategy.visit(InvocationStrategy.java:71) at org.apache.axis.SimpleChain.doVisiting(SimpleChain.java:150) at org.apache.axis.SimpleChain.invoke(SimpleChain.java:120) at org.apache.axis.client.AxisClient.invoke(AxisClient.java:180) at org.apache.axis.client.Call.invokeEngine(Call.java:2564) at org.apache.axis.client.Call.invoke(Call.java:2553) at org.apache.axis.client.Call.invoke(Call.java:2248) at org.apache.axis.client.Call.invoke(Call.java:2171) at org.apache.axis.client.Call.invoke(Call.java:1691) at org.apache.uima.adapter.soap.AxisResourceServiceStub.callGetMetaData(AxisResourceServiceStub.java:85) ... 38 more
issueID:UIMA-907
type:New Feature
changed files:
texts:Add SimpleServer to sandbox distribution

issueID:UIMA-908
type:Bug
changed files:
texts:The Flow&#39;s aborted method is called when every CAS reaches the end of its flow ... should be just the failing ones
From the Javadocs:void aborted()    Called by the framework if processing has been aborted for the CAS that was being routed by this Flow object. No further processing will take place on the CAS after this method is called, so the framework will not call the next() method again.Presumably should be called if continueOnRetryFailure attribute is false or if continueOnFailure method returns false
issueID:UIMA-909
type:Bug
changed files:
texts:Model files are contained twice in pear file
When building the tagger pear, the model files get included twice: once in the jar file, and once in the resources folder.  We don't really want the model files in the jar, anyway.  So fix the pom not to include the resources folder as a build resource.  The downside is that then the resources folder is no longer part of the classpath in the tagger eclipse project, meaning that it needs to be added manually when debugging the source.  However, that seems the only reasonable solution.
issueID:UIMA-91
type:Improvement
changed files:uimaj-tools/src/main/java/org/apache/uima/tools/cpm/CpmFrame.java
uimaj-tools/src/main/java/org/apache/uima/tools/cpm/CpmPanel.java
texts:Remove/hide CAS Initializer Panel in CPE GUI?
Since CAS Initializers are deprecated, it may make sense to remove or hide the CAS Initializer panel in the CPE GUI.  Otherwise new users are confused.  For existing users who still have CAS Initializers, perhaps a menu option could un-hide the panel?
issueID:UIMA-910
type:Improvement
changed files:
texts:uima-ee name appearing in messages from uima-as

issueID:UIMA-911
type:Bug
changed files:uimaj-core/src/main/java/org/apache/uima/analysis_engine/impl/PrimitiveAnalysisEngine_impl.java
texts:CasMultiplier&#39;s hasNext() called twice without an intervening next()
In org.apache.uima.analysis_engine.impl.PrimitiveAnalysisEngine_impl the hasNext method calls the AnalysisComponent's hasNext but then its next method calls the AnalysisComponent's hasNext again before calling next.Makes it difficult to split the processing between hasNext & next.
issueID:UIMA-912
type:Bug
changed files:
texts:UIMA C++ service not deployed correctly
UimaCppServiceController needs to notify deployer when initialization is finished
issueID:UIMA-913
type:Bug
changed files:
texts:cleanup and simplify C++ service wrapper implementation
Some cleanup and simplificaiton of code that handles service initialization and manages ActivMQ JMS connection.
issueID:UIMA-914
type:Bug
changed files:
texts:If the Error Configuration thresholdWindow value is invalid it is quietly ignored
If the thresholdWindow value is > 0 but is less than the thresholdCount value then the error condition can never be satisfied.  The current implementation ignores the window value in this case, but we should warn the user or reject these invalid values or document this behaviour.
issueID:UIMA-915
type:Bug
changed files:
texts:Clean up README for UIMA AS SDK

issueID:UIMA-916
type:Improvement
changed files:
texts:Remove unused initialize(String, Map) method from the UIMA AS client API
The UIMA AS Client API defines an initialize(String, Map) method that is never called. An alternative APIinitialize(Map) is being used.
issueID:UIMA-917
type:Bug
changed files:
texts:Simple Server test annotator misses last character in text

issueID:UIMA-918
type:Improvement
changed files:
texts:Fix version number in sandbox docs

issueID:UIMA-919
type:Bug
changed files:
texts:UIMA AS client hangs when the last CAS sent in the process() method times out
When UIMA AS client process() method finishes sending all CASes it calls collectionProcessComplete() which blocks on a CPC monitor until all CASes  are returned from the AS Service. If a timeout occurs on the last CAS, the timeout handler never notifies the CPC monitor resulting in a hang. Fix the code so that the timeout handler notifies the CPC monitor. Also, add a test case to test the scenario.Hold for later release
issueID:UIMA-92
type:Improvement
changed files:uimaj-examples/src/main/java/org/apache/uima/examples/flow/WhiteboardFlowController.java
uimaj-examples/src/main/java/org/apache/uima/examples/flow/WhiteboardFlowController2.java
uimaj-examples/src/main/java/org/apache/uima/examples/flow/WhiteboardFlowController.java
uimaj-examples/src/main/java/org/apache/uima/examples/flow/WhiteboardFlowController2.java
texts:Add Logging to WhiteboardFlowController
The example WhiteboardFlowController should log messages (FINEST level)  when it makes decisions.  This would be useful for demos/tutorials and would illustrate one way to debug a flow controller.
issueID:UIMA-920
type:Improvement
changed files:
texts:remove extraneous LICENSE files in uima-docbook-tool lib directory
These cause RAT issues, and are not required, because the whole SVN node for this has the LICENSE file, and the distributions have the LICENSE files as well..
issueID:UIMA-921
type:Bug
changed files:
texts:Fix wrong uima version numbers in uima-as
Found some 2.2.1 version numbers in uima-as poms - fix these, and fix the version update script as needed to catch these next time
issueID:UIMA-922
type:Bug
changed files:
texts:pass absolute file path args to Spring&#39;s FileSystemXmlApplicationContext class with prepended "file:"
By emperical testing, absolute file paths passed to Spring's FileSystemXmlApplicationContext on Linux are treated as relative paths, unless you prepend "file:" to them.  One of the "deploy" methods (the one taking an array of paths) has code to add the file:; but the other one doesn't.  Add this to the code.
issueID:UIMA-923
type:Bug
changed files:
texts:update the run examples scripts to use XMI format of CAS.
Replace XCAS CAS inputs with XMI CAS.
issueID:UIMA-924
type:Bug
changed files:
texts:The UIMA AS service should notify the client via Status Listener if it is about to terminate due to excessive exceptions
When UIMA AS service is deployed from the AS Client it should use registered status listener callback to notify the client when the service is about to terminate due to excessive exceptions. It should report the last exception which caused the termination along with context which identies the state of processing (GetMeta, CPC or Process). This information may be usefull to the client application.Hold for later release.
issueID:UIMA-925
type:Bug
changed files:
texts:How does a UIMA-AS client using sendCAS associate a returned error with the CAS that caused it?
When using the UIMA-AS client 'sendCAS' api a unique ID is returned but there is no explanation of how this may be used.  When an error is returned to the UimaASStatusCallbackListener there does not appear to be a way to tell from the EntityProcessStatus which of the input CASes failed.  Since they are sent asynchronously they and their errors may be returned out of order.void entityProcessComplete ( org.apache.uima.cas.CAS aCas, org.apache.uima.collection.EntityProcessStatus aStatus )
issueID:UIMA-927
type:Improvement
changed files:
texts:Provide a way to drain Dead Letter Queue
ActiveMQ currently doesnt evict expried messages from the Dead Letter Queue. This can potentially lead to Out Of Memory situation as by default the broker keeps all messages in memory. One possible strategy is to modify ActiveMQ broker configuration to spool messages from the DLQ to disk when memory is tight. Other strategy may involve creating a custom DLQ Consumer to drain messages.
issueID:UIMA-928
type:Improvement
changed files:
texts:[DDE] For Linux platform, Deployment Descriptor Editor&#39;s table border is not visible
For Linux platform, the table border of the Deployment Descriptor Editor's is not visible.For Windows, it is displayed correctly
issueID:UIMA-929
type:Improvement
changed files:
texts:Remove dependency in sandbox projects (specifically, uima-as, maybe others) for base uimaj-distr for required files
Remove dependency in sandbox projects (specifically, uima-as, maybe others) for base uimaj-distr for required files.  uima-as-distr build has dependency on uimaj-examples/src/main/eclipseProject/project, also - fix this.  also- fix dependency in docbook build on uima-docbooks/src/docbook/entities.ent
issueID:UIMA-93
type:Improvement
changed files:
texts:Mailing list subscription instructions are not obvious
Our users are confused by the mailing list instructions, mainly because people don't click on the mail-to links.  The text for the links should contain the full mailing address so it can be easily copied.
issueID:UIMA-930
type:Bug
changed files:
texts:uima-as release notes are incorrect

issueID:UIMA-931
type:Improvement
changed files:
texts:uima-as signing script missing md5 and sha1 generation, also trying to sign bz files which are not generated for uima-as

issueID:UIMA-932
type:Bug
changed files:
texts:UIMA-AS version printing as "unknown"
Should get the core UIMA version number instead of frm a properties file created by the old ant build
issueID:UIMA-933
type:Improvement
changed files:uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/ui/AbstractSection.java
texts:[CDE] In CDE GUI, the border of some tables and combobox is not visible
The border of CCombo and TableTree's widgets is not visible in the CDE GUI (same problem for Windows and Linux platforms).The reason is that these widgets are not "directly" supported by FormToolkit. To make the border visible, one way is to use the following setting:    widget.setData(FormToolkit.KEY_DRAW_BORDER, FormToolkit.TREE_BORDER);
issueID:UIMA-934
type:Bug
changed files:
texts:Some Linux scripts cannot execute as are in DOS format
startBroker.shdd2spring.shdeployAsyncService.shrunRemoteAsyncAE.shsetUimaClassPath.sh
issueID:UIMA-935
type:Bug
changed files:
texts:[UIMA eclipse plugins] Possible WRONG wiring of imported packages for UIMA Eclipse plugins
Problem:----------The current UIMA Eclipse plugins (runtime, CDE, etc.) use "Imported Packages" for declaring dependencies instead of "Required Plug-ins". This declaration is automatically generated by Maven (I think ?) and gives more fine grained controls on what to depend on.But, there are some side-effects from this approach which may cause the problems. The imported packages may wired to the correct packages from the "wrong" plugins.If there are, for example, two bundles (plug-ins) A and B export the "same" package name and B is resolved before A, OSGi will pick B bundle for wiring.This wrong wiring issue is happen when I tested CDE and DDE with Eclipse 3.2 in Linux Redhat 5 (Note that the problem can be happen with any Eclipse and platform). The following describes this particular case.CDE uses an Xml editor for source editing and this Xml editor requires a class called:          "org.eclipse.jface.text.source.SourceViewerConfiguration" from "org.eclipse.jface.text" pluginInside Eclipse installation, there is another plugin called "org.eclipse.text" that also exports this "org.eclipse.jface.text.source" which doesn't have the class  "SourceViewerConfiguration".When Eclipse runs, the "org.eclipse.text" plugin is resolved before the "org.eclipse.jface.text" plugin which causes CDE to be wired to the "org.eclipse.text" plugin. The expectation is to wire CDE to "org.eclipse.jface.text.source".Possible Resolution:------------------------One possible resolution is posted by Marshall in response to the thread in uima-dev:           &#91;UIMA eclipse plugins&#93; Possible WRONG wiring between UIMA Eclipse pluginsThe following is the quote:On Fri, Mar 14, 2008 at 4:58 PM, Marshall Schor <msa@schor.com> wrote:    OSGi does provide a mechanism to have the import-package include    specifying which bundle it should come from.  See section 3.6.8    "Provider Selection" in the r4.core.pdf doc for OSGi for details.    The POMs we use don't generate this though.  Do you see that allowing    multiple bundles to export the same package name, and then having our    configuration be more explicit about which bundle to wire to, is (or may    be) a design requirement?
issueID:UIMA-936
type:Bug
changed files:uimaj-core/src/main/java/org/apache/uima/cas/impl/StringHeap.java
texts:NPE when serializing a CAS with a String array that contains a null value element
The stacktrace is shown below:java.lang.NullPointerException at org.apache.uima.cas.impl.CASSerializer.addCAS(CASSerializer.java:211) at org.apache.uima.cas.test.StringArrayTest.testStringArrayNullValue(StringArrayTest.java:205)I will add test case for this issue
issueID:UIMA-937
type:Bug
changed files:
texts:UIMA AS service fetches a wrong Broker URL from the controller on replies
When trying to reply to a temp queue, the JmsEndpointConnection_impl object fetches a wrong broker URL from the controller. Temp queues are managed by the same broker as the service input queue, so that the replies must go to a temp queue managed by the same broker.  What seems to be happening is that the JmsEndpointConnection_impl  object fetches an Internal Broker URL instead. Replies are never sent to the client. This problem happens when a client tunnels messages over HTTP to a remote Aggregate AS Service.
issueID:UIMA-938
type:Bug
changed files:
texts:startBroker doesn&#39;t on Linux
Since startBroker.sh sources our copy of the activemq script it preventsit from determining ACTIVEMQ_HOME I suggest we don't ship a copy of activemq script, but invoke their one.And make either make their's executable and don't source it in startBroker.sh ... as in uima-ee,or set ACTIVEMQ_HOME explicitly.
issueID:UIMA-939
type:Bug
changed files:
texts:PEAR packaging eclipse plugin not visible after installation
After installing the plugin, it is not available. The log file does not contain any entries.The error occurs only on Linux in eclipse 3.3.2. When using eclipse 3.2.2 all works fineIs there anything I can check to see what's wrong?
issueID:UIMA-94
type:Bug
changed files:uimaj-tools/src/main/java/org/apache/uima/tools/pear/merger/PMController.java
uimaj-tools/src/main/java/org/apache/uima/tools/pear/merger/PMUimaAgent.java
texts:Pear merger default output name uses "tae" - should use "ae"
We've stopped using "TAE" in favor of "AE" - this is one more instance of this.  Note that this change might break some user's code (but it's unlikely I think).
issueID:UIMA-940
type:Bug
changed files:
texts:change way of deleting files in the PearPackagingMavenPlugin

issueID:UIMA-941
type:Bug
changed files:uimaj-core/src/main/java/org/apache/uima/analysis_engine/impl/AnalysisEngineImplBase.java
texts:No ProcessTrace events for process calls that take 0ms
Found when testing release candidate 4 of 2.2.2.  Here's the text of an email I wrote.  Adam responded that it's probably a bug.http://www.mail-archive.com/uima-dev%40incubator.apache.org/msg06565.htmlI was just testing CVD for the next release, and triedout the new performance report feature.  Internally, thisuses the ProcessTrace feature of AnalysisEngine.process().It seems that if the process() call returns very quickly,i.e., in 0ms according to the Java timer, no ProcessTracesub-events are recorded.  For example, I'm running thetagger, and here's some output I get:This one looks fine, as expected:3/27/08 4:29:52 PM - 10: org.apache.uima.tools.cvd.MainFrame.internalRunAE(1570): INFO: Process trace of AE run:Component Name: HmmTaggerTAEEvent Type: AnalysisDuration: 2078ms (100%)Sub-events:    Component Name: WhitespaceTokenizer    Event Type: Analysis    Duration: 265ms (12.75%)    Component Name: Hidden Markov Model - Part of Speech Tagger    Event Type: Analysis    Duration: 1813ms (87.25%)    Component Name: Fixed Flow Controller    Event Type: Analysis    Duration: 0ms (0%)Next one seems to have lost the tagger:3/27/08 4:30:08 PM - 10: org.apache.uima.tools.cvd.MainFrame.internalRunAE(1570): INFO: Process trace of AE run:Component Name: HmmTaggerTAEEvent Type: AnalysisDuration: 16ms (100%)Sub-events:    Component Name: WhitespaceTokenizer    Event Type: Analysis    Duration: 16ms (100%)    Component Name: Fixed Flow Controller    Event Type: Analysis    Duration: 0ms (0%)Finally, this one only has the flow controller:3/27/08 4:30:19 PM - 10: org.apache.uima.tools.cvd.MainFrame.internalRunAE(1570): INFO: Process trace of AE run:Component Name: HmmTaggerTAEEvent Type: AnalysisDuration: 0msSub-events:    Component Name: Fixed Flow Controller    Event Type: Analysis    Duration: 0msLooking at this in the debugger, there are no subeventsthere, so it's not a problem with the printing.Is this expected, or is it a bug?  Seems to me it is a bug,but I'm not sure from the documentation.--Thilo
issueID:UIMA-942
type:Bug
changed files:
texts:Regex performance test doesn&#39;t run on Linux

issueID:UIMA-943
type:Bug
changed files:
texts:DictionaryAnnotator tests doesn&#39;t run on Linux

issueID:UIMA-944
type:Bug
changed files:
texts:simple server notice file contains redundant uima reference

issueID:UIMA-945
type:Bug
changed files:
texts:move LICENSE and NOTICE files to toplevel dir for annotator package

issueID:UIMA-946
type:Bug
changed files:
texts:Missing jars from distr and setUimaClassPath
xbean-spring-3.2-SNAPSHOT.jar is in the distribution, but missing from setUimaClassPathcommons-collections-3.1.jar is missing from both
issueID:UIMA-947
type:Bug
changed files:
texts:Documentation: resources path in web.xml incorrect

issueID:UIMA-948
type:Bug
changed files:
texts:cleanup warnings generated by deployCppService build
cleanup warnings generated by deployCppService build
issueID:UIMA-949
type:Bug
changed files:
texts:Get exceptions when have 2 CAS multipliers
Get either NPE or "Cas Not Found In CasManager Cache" exceptions when releasing CASes from 2nd CAS Multiplier.
issueID:UIMA-95
type:New Feature
changed files:
texts:add sandbox infrastructure
add SVN repository paths; add website and wiki pages.
issueID:UIMA-950
type:Bug
changed files:
texts:Connection times out waiting for long running remote service and temp reply queues are lost ... cannot recover
Using an aggregate client with a remote tcp service with remote temp reply queue.  After 45 secs (in one case) get:3/28/08 2:34:15 PM - 30: org.apache.activemq.ActiveMQConnection.onAsyncException: WARNING: Async exception with no exception listener: java.io.EOFExceptionjava.io.EOFException at java.io.DataInputStream.readFully(DataInputStream.java:204) at java.io.DataInputStream.readInt(DataInputStream.java:380) at org.apache.activemq.openwire.OpenWireFormat.unmarshal(OpenWireFormat.java:268) at org.apache.activemq.transport.tcp.TcpTransport.readCommand(TcpTransport.java:192) at org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:184) at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:172) at java.lang.Thread.run(Thread.java:803)The connection is refreshed, but the temp queue is not recreated3/28/08 2:35:36 PM - 34: org.apache.uima.adapter.jms.activemq.UimaDefaultMessageListenerContainer.handleListenerSetupFailure: WARNING: Jms Listener Failed. Endpoint: ID:telly-1196-1206729192229-2:5:1 Managed By: tcp://ikmc09b02.watson.ibm.com:61616 Reason: javax.jms.InvalidDestinationException: Cannot use a Temporary destination from another ConnectionAddiing "?wireFormat.maxInactivityDuration=0" to the broker URL when starting it avoids the problem.
issueID:UIMA-951
type:Bug
changed files:
texts:Eclipse split packages not handled well - causing plugin ClassNotFound failures
Some eclipse packages are split across multiple bundles.  The maven-bundle-plugin, by default, will put in a package import, which could get connected to only one of the bundles.  If that bundle doesn't have the class, you get a classnotfound exception.  Which bundle gets wired is arbitrary - often differing based on platform, build, etc.The fix is to identify all the split packages in Eclipse (these can be found by opening the Eclipse HELP and searching using the keywords ( split packages map )).  Then for each split package, add a Require-Bundle for each bundle that has some of the classes for that package.Add the Require-Package directive to the affected POMs to make these stable against possibly wrong wiring.
issueID:UIMA-952
type:Bug
changed files:
texts:source distribution build for uima-as not building the uima-as-distr project correctly
putting results into wrong places, among other things.  Needs review.  Should pull versioned POMs and JARs from maven repo, for non-uima-as parts.
issueID:UIMA-953
type:Bug
changed files:
texts:"\" in regex variables are not escaped

issueID:UIMA-954
type:Bug
changed files:
texts:Switch back to AMQ 4.1.1 for now
There are some blocking issues for UIMA-AS use of AMQ 5.0.0, particularly https://issues.apache.org/activemq/browse/AMQ-1603. Must revert to 4.1.1. for now.
issueID:UIMA-955
type:Bug
changed files:
texts:Deployment fails if 2 delegates have the same queue name, on same or different brokers
May be rare to have the same queue name on different brokers but may sometimes want to run the same service at different steps in the aggregate.
issueID:UIMA-956
type:Bug
changed files:
texts:Error msg not printed as properties file has a typo
Has unbalanced parens.
issueID:UIMA-957
type:Bug
changed files:
texts:AS doc has wrong class in example of JMS Service Descriptor
In uima-as-docbooks/src/docbook/uima_async_scaleout/async.overview.xml com.ibm.uima.aae.jms_adapter.JmsAnalysisEngineServiceAdapter  should beorg.apache.uima.aae.jms_adapter.JmsAnalysisEngineServiceAdapterAlso just above this I see:  UIMA "SE" applicationbut SE is not defined.
issueID:UIMA-958
type:Bug
changed files:uimaj-examples/src/main/java/org/apache/uima/examples/XmlDetagger.java
uimaj-tools/src/main/java/org/apache/uima/tools/components/XmlDetagger.java
texts:Document Analyzer not showing PersonTitle when running with xml tagged source
Running the document analyzer with an input source of xml docs, and specifying the xml tag (of TEXT) causes the personTitle annotator to not show results.  This is traced to it being given a language of x-unspecified, even though the collection reader used set the document language to "en".  This is traced to the insertion of the xmldetagger into the aggregate, which passed a cas view of "plain text" to the personTitle annotator.  That component did not copy the language specifier from the input cas view.  In fact, the input cas view was "xmlDocument" - and that view also didn't have the language.  The collection reader put the language only into the "_InitialView".  Fix by having the XmlDetagger copy the initial view's language into the resulting plain text view it creates for downstream annotators to work on.Note that there are two copies of this class - fix both of them (One in tools, other in examples).
issueID:UIMA-959
type:Bug
changed files:
texts:Scaleout doc wrongly implies Vinci and AS services can be in same aggregate
In the scaleout doc Section 1.4.5. "Compatibility with earlier version of remoting and scaleout" we say:A Vinci client service descriptor can be used in an aggregate descriptor as before, and canbe used as a primitive analysis engine in a deployment descriptorWe should qualify this by saying here (or in "known problems") something like "only if invoked from an aggregate that is deployed as an AS primitive"If not in an aggregate we get:  org.apache.uima.aae.controller.PrimitiveAnalysisEngineController_impl]: Constructor threw exception; nested exception is java.lang.ClassCastException: org.apache.uima.resource.impl.CustomResourceSpecifier_impl incompatible with org.apache.uima.resource.ResourceCreationSpecifier
issueID:UIMA-96
type:Improvement
changed files:
texts:XML descriptor capitalization is inconsistent
Most of the UIMA descriptors follow a capitalization convention of initial-lower-case + camel-casing.  e.g.:<typeSystem>The PEAR descriptors are using an ALL_CAPS convention.  This could be changed, but it would break user code unless the parsers were configured to ignore case.
issueID:UIMA-961
type:Improvement
changed files:
texts:Cleanup - remove unused things
Clean up by removing:  CapabilityContainer class - no longer used,  Assemblies for producing Eclipse plugins - no longer used.
issueID:UIMA-963
type:Improvement
changed files:
texts:udpate website with Sandbox annotator package distribution build

issueID:UIMA-964
type:Bug
changed files:
texts:While handling InvalidMessage UIMA-AS error handler uses wrong API to extract CAS Ref Id
HandlerBase.java method populateErrorContext() uses invalid API to extract a CAS Reference Id from a jms message:It calls getMessageIntProperty() insteadof getMessageStringProperty()errorContext.add( AsynchAEMessage.CasReference, aMessageCtx.getMessageIntProperty(AsynchAEMessage.CasReference));
issueID:UIMA-965
type:Bug
changed files:
texts:PrimitiveController doesnt handle exception from the InProcessCache when the service is terminating in a middle of the run
Need to handle an exception in the PrimitiveController process() method when the service is being stopped while its producing CASes. InProcessCache may throw an exception in getCacheEntryForCAS(aCasReferenceId) when a given CAS doesnt exist. This could happen during a hard stop. The top level controller may remove entries from the cache which is shared by all collocated services.
issueID:UIMA-966
type:Bug
changed files:
texts:Remove redundant synchronization on InProcessCache object before calling dropCAS()
In UIMA-AS code there are two instances where the InProcessCache is doubly synchronized. One instance of this is in the Primitive Controller process() method and the other is in the Aggregate Controller's replyToClient() method.
issueID:UIMA-967
type:Bug
changed files:
texts:UimacppServiceController service startup is not synchronous
The service startup code does not wait for properly confirm that service startup success or failure.  It needs to be reeceive a initialization success/failure  message from C++ process.
issueID:UIMA-968
type:Bug
changed files:
texts:Service wrapper needs to send initialization success/failure message to Java controller
In order for the Java controller to provide synchronous interface to C++ service initialization, the wrapper must send a success or failure message on completion of initialization.
issueID:UIMA-969
type:Improvement
changed files:
texts:uima-as source distribution is inconsistent in what sources it includes from base uima
The source distribution for uima-as has the source for a very few of the base uima jars (e.g. uimaj-core), only.   The addSourceToJars script only does this for 3 uimaj-as-xxx jars.  Probably need to decide to either ship all of the base uima source for the level, (and capture that in the "tag"), or go with the alternate strategy of having developers download the base uima source for the base source (but at what version/level?).
issueID:UIMA-97
type:Improvement
changed files:
texts:OpenNLP wrapper examples should use new annotator interfaces
Most of our example annotators have already been updated to use the new v2 annotator interfaces, but the OpenNLP wrappers were missed.
issueID:UIMA-970
type:Bug
changed files:
texts:update annotator package release files
udpate readme, release notes and notice files.
issueID:UIMA-971
type:Bug
changed files:
texts:minor documentation updates for PearPackagingMavenPlugin

issueID:UIMA-972
type:Bug
changed files:
texts:fix jar file name in pear ant taks documentation

issueID:UIMA-973
type:Bug
changed files:
texts:annotator package jars does not have correct Manifest information

issueID:UIMA-974
type:Bug
changed files:
texts:CVD "help" and "manual" menu picks not working out of the box when launched from Eclipse
If you create a new workspace, import the "examples" as a project, and then launch using the run... feature of Eclipse, the CVD, the manual and help files are "missing".
issueID:UIMA-975
type:Bug
changed files:
texts:Redundant MBean created in the JMX Server for collocated UIMA-AS service
The UIMA-AS Aggregate code registers a redundant MBean for the collocated service with a label indicating a Remote Service. This is wrong. Remove the MBean registration from AggregateAnalysisEngineController_impl.dispatchMetadataRequest(Endpoint anEndpoint) method.
issueID:UIMA-976
type:Bug
changed files:
texts:[DDE] Collection Reader embedded in an aggregate is not handle as a CAS Multiplier
When a Collection Reader is embedded in an aggregate, it should be handled as a CAS Multiplier in the "Deployment Configurations" page of the DDE, i.e. all its possible settings should be the SAME as the CAS Multiplier.
issueID:UIMA-977
type:Improvement
changed files:
texts:Add eclipse run configurations equivalent to deployAsyncService and runRemoteAsyncAE command line scripts

issueID:UIMA-978
type:Bug
changed files:
texts:CDE eclipse plugin contains upper-case GIF file extension
CDE plugin contains icons with upper-case GIF file extensions. These files are referenced in the java code using lower-case file extensions.Does this work on Linux?Is there anything else to check when renaming the extension from GIF to gif?
issueID:UIMA-979
type:Bug
changed files:
texts:add license header to RELEASE_NOTES
It's not well defined if the release notes needs an license header or not. I will add one, so we are clean.
issueID:UIMA-98
type:Bug
changed files:
texts:CDE Scrolling Problem on Mac
Go to the Type System definition page for a descriptor that defines many types (e.g. OpenNLPExampleTypes.xml in uimaj-examples).  Resize the Editor so that the scrollbar is only partly visible (by dragging up the split bar that separates the CDE from the Console view or whatever happens to be below the CDE in your Eclipse layout).  Then try to scroll in the list of types.  On a Mac this does not work properly.
issueID:UIMA-980
type:Improvement
changed files:
texts:Add information on Maven repository to download page of website
We don't say anywhere that UIMA artifacts are available from a mvn repo.
issueID:UIMA-981
type:Bug
changed files:
texts:uima-as deployment descriptor defaulting async=true when it shouldn&#39;t
If a deployer person writes an explicit indication of an aggregate in the deployment descriptor (by listing one or more of its delegates), and doesn't specify on the aggregate the async= attribute, this is defaulted to true.  This is correct, and works.But if the aggregate has a delegate which in turn is an aggregate, and the deployment specification has no <analysisEngine> specification at all for that delegate (which is allowed - and is useful for the case where that delegate is to be run with the defaults), the defaulting mechanism is incorrectly setting up that sub-aggregate to be run with async=true - it should be run with async=false.
issueID:UIMA-982
type:Bug
changed files:uimaj-core/src/main/java/org/apache/uima/cas/SofaFS.java
texts:SofaFS class level Javadocs misleading
The class-level Javadocs for org.apache.uima.cas.SofaFS read: "To create a Sofa FS, use CAS.createSofa()."Since that method has been deprecated, consider changingthat documentation to reference "CAS.createView(String) and/or JCas.createView(String)".
issueID:UIMA-983
type:Bug
changed files:
texts:Collocated UIMA-AS Aggregate sends invalid CAS id in a reply msg
A collocated UIMA-AS aggregate in its finalStep() method sends an invalid CasReferenceId in a reply msg. Instead of sending an Id of the subordinate CAS it sends an Id of the Input CAS from which the subordinate was produced. This confuses the parent Aggregate and CASes are not cleared from the InProcessCache resulting in a hang.
issueID:UIMA-984
type:Improvement
changed files:
texts:Improve way we get required jar file javax.activation:activation:jar:1.0.2 for building from the source
See this thread: http://article.gmane.org/gmane.comp.apache.incubator.general/17889Investigate and maybe change how we let users get the java activation jar.
issueID:UIMA-985
type:Bug
changed files:uimaj-core/src/main/java/org/apache/uima/cas/CAS.java
texts:Javdocs for getSofaData calls do not say null may be returned
getDocumentText() getSofaDataString() getSofaDataArray() getSofaURI() getSofaDataStream()should say null is returned if sofa data not set or set to a different type.Should we throw an exception if no sofa data not set?
issueID:UIMA-986
type:Improvement
changed files:
texts:[DDE] Improve DDE to support the settings for AE implemented in C++
Improve DDE to support the settings for C++ by recognizing the <custom ...> tag and <environmentVariables..>. The following is an example settings that can be used when the top-level AE is implemented in C++:      <custom name="run_top_level_CPP_service_as_separate_process"/>      <environmentVariables>        <environmentVariable name="Path">C:\Program files/apache-uima/uimacpp/bin</environmentVariable>        <environmentVariable name="LD_LIBRARY_PATH">C:\Program Files/apache-uima/uimacpp/bin</environmentVariable>        <environmentVariable name="UIMACPP_DATAPATH">C:/mydata</environmentVariable>      </environmentVariables>
issueID:UIMA-987
type:Improvement
changed files:
texts:Add annotator build option to use 32-bit SDK builds on 64-bit Unix OS

issueID:UIMA-988
type:Bug
changed files:uimaj-core/src/main/java/org/apache/uima/cas/impl/Heap.java
texts:Performance bug: CAS heap reset wasteful use of Arrays.fill()
CAS heap is filled with 0s on reset.  Currently, the whole heap is filled, instead of just the portion that was used.  This makes a huge difference for small documents.
issueID:UIMA-989
type:Bug
changed files:uimaj-tools/src/main/java/org/apache/uima/tools/pear/install/InstallPear.java
uimaj-tools/src/main/java/org/apache/uima/tools/cvd/CVD.java
texts:CVD hangs on start-up
When CVD is called with command line parameters, it attempts to initialize the GUI while executing tasks like loading text at the same time.  Those tasks manipulate the GUI, which may lead to deadlock.
issueID:UIMA-99
type:Bug
changed files:uimaj-ep-configurator/src/main/java/org/apache/uima/taeconfigurator/editors/ui/ValueSection.java
texts:CDE incorrect tooltip for configuration parameter value field
The tooltip that's displayed when you hover over the "Value" field on the Configuration Parameter Settings page always says "Use the combo pulldown to select either true or false", even for non-boolean parameter types.Example: Open PersonTitleAnnotator.xml in the CDE, go to the Parameter Settings page, and select the "Containing Annotation Type" parameter from the list at the left.  Hover the mouse over the "Value" field at the top right.
issueID:UIMA-990
type:Bug
changed files:
texts:change POM description for annotator package POMs

issueID:UIMA-991
type:Improvement
changed files:
texts:fix Sandbox documentation to avoid overflowing the footer on even pages
The various docbook docs in the sandbox need to adopt the fix used inother uima books to avoid overflowing the footer on even pages (minor).I think adding this to the src/styles/top/pdf.xsl might do the trick:   <!-- width specifications: inside, center, outside -->   <!-- OVERRIDE:  inside is large to accommodate large version stringswithout overflowing -->   <xsl:param name="footer.column.widths">6 8 1</xsl:param>
issueID:UIMA-992
type:Improvement
changed files:
texts:update dictionary annotator build documentation - how to create XML Beans jar

issueID:UIMA-994
type:New Feature
changed files:
texts:Add Logger.getLevel()
org.apache.uima.util.Logger should expose a .getLevel() method to match the existing .setLevel() method. This is needed, for example, by unit tests that test exceptions and want to temporarily suppress logging messages. In such situations, you want to get the original logging level, set the level to Level.OFF, and then later restore the original logging level. Currently, to get the original logging level, you have to write code like:    if (UIMAFramework.getLogger().isLoggable(Level.ALL)) {       return Level.ALL;    } else if (UIMAFramework.getLogger().isLoggable(Level.FINEST)) {       return Level.FINEST;    } ...Nasty! Adding .getLevel() shouldn't be too difficult &#8211; both org.apache.log4j.Logger and java.util.logging.Logger already have .getLevel() methods, so these just need appropriately wrapped.
issueID:UIMA-995
type:Bug
changed files:
texts:[uima-as] dd2spring doesn&#39;t properly handle urls in import by location which are absolute
UIMA Descriptors have <import> statements.  One variety of these is import by location.  The location can be relative or absolute; if relative, it is relative to the location of the file having the <import> statement. dd2spring handles this by keeping track of the importing file's file path, and (for relative urls) using that as the "base" to be relative from.  It has a heuristic test for determining if a path is absolute: it looks for a path that starts with a "/" or something like "c:/"  The CDE, when you import something outside the Eclipse workspace, uses the URL format "file:/c:/xxxx/etc"  This is an "absolute" location, but the dd2spring code's test for this fails.
issueID:UIMA-996
type:Bug
changed files:
texts:set eol properties for UNIX control files

issueID:UIMA-997
type:Improvement
changed files:
texts:mark the java source with svn:eol-style=native
mark the java source with svn:eol-style=native
issueID:UIMA-998
type:Improvement
changed files:
texts:The UIMA website should have a list of known problems and any work-arounds
The list of known problems in the shipped README is rather brief, and is soon out-of-date.  It would be nice to have a page on the website listing known problems and any work-arounds.
